"Source: Text/Incidence/Graph.text";
"Line: 3614";
"Date: Tue Jun  7 22:27:14 2016";
"Main: Mon May 30 13:40:42 2016";
// original file: Text/Incidence/Graph.text, line: 3614
// Example: H155E14 ()
print "Example: H155E14";
ei := GetEchoInput();
SetEchoInput(true);
G := Graph< 4 | {1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}
: SparseRep := true >;
IsConnected(G);
assert $1;
vc := VertexConnectivity(G);
S := VertexSeparator(G);
vc;
assert $1 eq 2;
S;
H := G;
vs := [ Integers() | Index(x) : x in S ];
RemoveVertices(~H, vs);
IsConnected(H);
assert not $1;
for k in [0..vc] do
    IsKVertexConnected(G, k);
end for;
for k in [vc+1..Order(G)-1] do
    IsKVertexConnected(G, k);
end for;
ec := EdgeConnectivity(G);
T :=  EdgeSeparator(G);
ec;
assert $1 eq 2;
T;
H := G;
M := [ { Index(e[1]), Index(e[2]) }
where e := SetToSequence(EndVertices(e)) : e in T ];
RemoveEdges(~H, M);
IsConnected(H);
assert not $1;
for k in [0..ec] do
    IsKEdgeConnected(G, k);
end for;
for k in [ec+1..Order(G)-1] do
    IsKEdgeConnected(G, k);
end for;
SetEchoInput(ei);
