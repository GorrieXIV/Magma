//Standard generators of L3(3) are a and b where a has order 2, b is in class 3B
//and ab is in class 13A/B. The last condition is equivalent to: ab has order 13
//and ababb has order 4.

_LR := rec < recformat< F: GrpFP, AI: SeqEnum, G: GrpMat > |
      F := FreeGroup(2) >;
_LR`AI := [ [a, b^-1] ] where a is (_LR`F).1 where b is (_LR`F).2;
//Four constituents, interchanged in pairs by _LR`AI[1]

_LR`G :=
/*
Original group: c9Group("l33p")
From DB /nb/reps/d16.L33.nfdeg2.exti13.M
Schur index: 1
Character: ( 16, 0, -2, 1, 0, 0, 0, 0, zeta(13)_13^9 + zeta(13)_13^3 + 
zeta(13)_13, zeta(13)_13^6 + zeta(13)_13^5 + zeta(13)_13^2, -zeta(13)_13^11 - 
zeta(13)_13^9 - zeta(13)_13^8 - zeta(13)_13^7 - zeta(13)_13^6 - zeta(13)_13^5 - 
zeta(13)_13^3 - zeta(13)_13^2 - zeta(13)_13 - 1, zeta(13)_13^11 + zeta(13)_13^8 
+ zeta(13)_13^7 )
*/
MatrixGroup<16, K | [
Matrix(SparseMatrix(K,16,16,[
<1,1,1>,<1,3,-1>,<1,13,1>,<1,14,-1>,<2,7,1>,<2,8,-1>,<2,
13,1>,<2,14,-1>,<3,3,-1>,<3,13,1>,<4,8,-1>,<4,13,1>,<5,
13,1>,<5,14,-1>,<5,16,-1>,<6,9,1>,<6,13,1>,<6,16,-1>,<7,
2,1>,<7,4,-1>,<7,13,1>,<7,14,-1>,<8,4,-1>,<8,13,1>,<9,5,
-1>,<9,6,1>,<9,13,-1>,<9,14,1>,<10,10,-1>,<10,13,1>,<11,
11,-1>,<11,13,1>,<12,11,-1>,<12,12,1>,<12,13,1>,<12,14,-1>,
<13,13,1>,<14,13,1>,<14,14,-1>,<15,10,-1>,<15,13,1>,<15,
14,-1>,<15,15,1>,<16,5,-1>,<16,14,1>])),
Matrix(K,16,16,
[[1/3,-1/9,-1/9,-1/9],[1/9,-7/27,-2/9,-2/27],[4/9,-1/27,
-1/9,-2/27],[-4/9,1/27,1/9,2/27],[2/9,-5/27,-1/9,-1/27],[
-1/9,-2/27,-1/9,-1/27],[-4/9,19/27,1/3,5/27],[1/9,2/27,
1/9,1/27],[-1/9,7/27,2/9,2/27],[-4/9,10/27,1/9,2/27],[
2/9,4/27,1/9,-1/27],[-1/9,-2/27,1/9,2/27],[0,0,0,0],[
-1/9,-2/27,0,-1/27],[1/3,-1/9,0,0],[1/3,-4/9,-2/9,-1/9],
[-1/9,7/27,2/9,2/27],[-1/3,1/9,1/9,1/9],[1/3,-1/9,-1/9,
-1/9],[1/9,-7/27,-2/9,-2/27],[0,0,-1/9,0],[-1/3,-2/9,
-1/9,0],[-2/9,5/27,1/9,1/27],[0,1/3,2/9,1/9],[-2/9,
14/27,1/3,4/27],[-5/9,17/27,2/9,4/27],[0,0,1/9,0],[1/3,
2/9,1/9,0],[-1/9,-2/27,0,-1/27],[1/9,2/27,0,1/27],[5/9,
-17/27,-2/9,-4/27],[2/9,-5/27,-1/9,-1/27],[-1/9,-2/27,0,
-1/27],[1/9,-7/27,-2/9,-2/27],[1/9,2/27,0,1/27],[-1/3,
1/9,1/9,1/9],[1/3,-1/9,0,0],[-1/3,1/9,0,0],[0,1/3,
2/9,1/9],[-2/9,5/27,1/9,1/27],[0,0,0,0],[0,-1/3,-2/9,
-1/9],[1/3,2/9,1/9,0],[0,0,1/9,0],[-1/9,7/27,2/9,2/27
],[1/3,-1/9,-1/9,-1/9],[2/9,-5/27,-1/9,-1/27],[5/9,
-17/27,-2/9,-4/27],[0,0,0,0],[-4/9,1/27,1/9,2/27],[
-1/9,-2/27,0,-1/27],[1/9,-7/27,-2/9,-2/27],[-1/9,-2/27,0,
2/27],[-1/9,-2/27,0,-1/27],[1/9,2/27,1/9,1/27],[-4/9,
19/27,1/3,5/27],[1/9,-7/27,-1/9,-2/27],[-2/9,5/27,0,1/27
],[-1/9,-2/27,1/9,2/27],[2/9,4/27,1/9,-1/27],[1/3,-1/9,
-1/9,-1/9],[4/9,-1/27,-1/9,-2/27],[1/3,-4/9,-2/9,-1/9],[
1/3,-1/9,0,0],[2/3,1/9,0,-1/9],[-2/3,-1/9,0,1/9],[0,
0,0,0],[0,0,0,0],[1/9,2/27,1/9,1/27],[-2/9,-4/27,
-2/9,-2/27],[-1/9,-2/27,-1/9,-1/27],[2/9,4/27,2/9,2/27],[
2/9,4/27,2/9,2/27],[-1/9,-2/27,-1/9,-1/27],[1/9,2/27,1/9,
1/27],[1/9,2/27,1/9,1/27],[0,0,0,0],[0,0,0,0],[2/9,
4/27,2/9,2/27],[-1/9,-2/27,-1/9,-1/27],[0,0,0,0],[-2/3,
-1/9,0,1/9],[0,0,0,0],[0,0,0,0],[2/9,4/27,2/9,2/27
],[-1/9,-2/27,-1/9,-1/27],[1/9,2/27,1/9,1/27],[1/9,2/27,
1/9,1/27],[1/9,2/27,1/9,1/27],[-2/9,-4/27,-2/9,-2/27],[
2/9,4/27,2/9,2/27],[-1/9,-2/27,-1/9,-1/27],[0,0,0,0],[
2/3,1/9,0,-1/9],[1/9,2/27,1/9,1/27],[1/9,2/27,1/9,1/27],
[4/9,-1/27,-1/9,-2/27],[-4/9,1/27,1/9,2/27],[1/3,-1/9,
-1/9,-1/9],[1/9,-7/27,-2/9,-2/27],[1/3,-4/9,-2/9,-1/9],[
-2/9,5/27,0,1/27],[2/9,4/27,1/9,-1/27],[-1/9,-2/27,1/9,
2/27],[-1/9,7/27,2/9,2/27],[-1/9,-2/27,0,-1/27],[-4/9,
19/27,1/3,5/27],[1/9,2/27,1/9,1/27],[-1/9,-2/27,0,-1/27],
[0,0,0,0],[-1/9,-2/27,0,2/27],[2/9,-5/27,-1/9,-1/27],[
1/9,2/27,0,1/27],[-1/3,1/9,1/9,1/9],[-1/9,-2/27,0,-1/27
],[1/9,-7/27,-2/9,-2/27],[5/9,-17/27,-2/9,-4/27],[-5/9,
17/27,2/9,4/27],[1/3,2/9,1/9,0],[0,0,1/9,0],[0,0,0,0
],[-1/3,-2/9,-1/9,0],[0,1/3,2/9,1/9],[-2/9,5/27,1/9,
1/27],[1/3,-1/9,-1/9,-1/9],[-1/9,7/27,2/9,2/27],[0,0,
-1/9,0],[1/3,-1/9,0,0],[-1/3,1/9,1/9,1/9],[-1/9,7/27,
2/9,2/27],[1/9,-7/27,-2/9,-2/27],[1/3,-1/9,-1/9,-1/9],[
-2/9,5/27,1/9,1/27],[0,1/3,2/9,1/9],[0,0,-1/9,0],[
-1/3,-2/9,-1/9,0],[-1/3,-2/9,-2/9,0],[1/3,-1/9,0,0],[
2/9,-5/27,-1/9,-1/27],[0,-1/3,-2/9,-1/9],[-1/9,-2/27,0,
-1/27],[1/9,2/27,0,1/27],[-1/3,1/9,0,0],[0,0,1/9,0],
[0,0,0,0],[-4/9,1/27,1/9,2/27],[1/9,2/27,0,1/27],[
-1/3,1/9,1/9,1/9],[4/9,-10/27,-1/9,-2/27],[-1/3,1/9,0,0
],[1/9,2/27,1/9,1/27],[-2/9,5/27,1/9,1/27],[-2/9,-4/27,
0,1/27],[1/9,2/27,-1/9,-2/27],[2/9,-5/27,0,-1/27],[-1/3,
4/9,2/9,1/9],[-1/9,7/27,2/9,2/27],[4/9,-1/27,-1/9,-2/27],
[-2/9,-4/27,-1/9,1/27],[1/9,2/27,0,1/27],[0,0,0,0],[
0,0,0,0],[0,0,0,0],[-2/3,-1/9,0,1/9],[1/9,2/27,1/9,
1/27],[-2/9,-4/27,-2/9,-2/27],[2/9,4/27,2/9,2/27],[-1/9,
-2/27,-1/9,-1/27],[-1/9,-2/27,-1/9,-1/27],[-1/9,-2/27,-1/9,
-1/27],[1/9,2/27,1/9,1/27],[1/9,2/27,1/9,1/27],[2/3,1/9,
0,-1/9],[0,0,0,0],[-1/9,-2/27,-1/9,-1/27],[2/9,4/27,
2/9,2/27],[0,0,0,0],[0,0,0,0],[2/3,1/9,0,-1/9],[
-2/3,-1/9,0,1/9],[-1/9,-2/27,-1/9,-1/27],[-1/9,-2/27,-1/9,
-1/27],[1/9,2/27,1/9,1/27],[1/9,2/27,1/9,1/27],[1/9,
2/27,1/9,1/27],[-2/9,-4/27,-2/9,-2/27],[-1/9,-2/27,-1/9,
-1/27],[2/9,4/27,2/9,2/27],[0,0,0,0],[0,0,0,0],[
1/9,2/27,1/9,1/27],[1/9,2/27,1/9,1/27],[1/9,2/27,0,1/27
],[-1/3,1/9,1/9,1/9],[0,0,0,0],[-4/9,1/27,1/9,2/27],[
1/9,2/27,0,1/27],[1/9,2/27,0,-2/27],[2/9,-5/27,0,-1/27],
[-1/3,4/9,2/9,1/9],[-1/9,7/27,1/9,2/27],[-1/9,-2/27,-1/9,
-1/27],[1/9,2/27,1/9,1/27],[-2/9,5/27,1/9,1/27],[4/9,
-1/27,-1/9,-2/27],[-1/9,7/27,2/9,2/27],[4/9,-19/27,-1/3,
-5/27],[4/9,-10/27,-1/9,-2/27],[4/9,-1/27,-1/9,-2/27],[
-4/9,1/27,1/9,2/27],[-1/9,7/27,2/9,2/27],[-1/3,1/9,1/9,
1/9],[-2/9,-4/27,-1/9,1/27],[1/9,2/27,-1/9,-2/27],[-1/3,
4/9,2/9,1/9],[2/9,-5/27,0,-1/27],[-1/3,7/9,4/9,2/9],[
-1/3,1/9,0,0],[-2/9,5/27,1/9,1/27],[1/9,2/27,1/9,1/27],
[1/9,2/27,0,1/27],[0,0,0,0],[4/9,-10/27,-1/9,-2/27],[
4/9,-19/27,-1/3,-5/27],[-1/9,7/27,2/9,2/27],[-1/3,1/9,1/9,
1/9],[4/9,-1/27,-1/9,-2/27],[-4/9,1/27,1/9,2/27],[4/9,
-19/27,-1/3,-5/27],[-1/9,-2/27,-1/9,-1/27],[-2/9,5/27,1/9,
1/27],[1/9,2/27,1/9,1/27],[1/9,2/27,2/9,1/27],[1/9,2/27,
0,-2/27],[-1/3,4/9,2/9,1/9],[2/9,-5/27,0,-1/27],[0,0,
0,0],[1/9,2/27,0,1/27],[1/9,2/27,0,1/27],[-2/9,-4/27,
-1/9,1/27],[-4/9,1/27,1/9,2/27],[0,0,0,0],[1/9,-7/27,
-2/9,-2/27],[-1/9,-2/27,0,-1/27],[1/9,2/27,1/9,1/27],[
-4/9,19/27,1/3,5/27],[-1/9,-2/27,0,2/27],[-1/9,-2/27,0,
-1/27],[-1/9,-2/27,-2/9,-1/27],[2/9,-5/27,-1/9,-1/27],[
1/3,-1/9,0,0],[-4/9,10/27,1/9,2/27],[1/3,-1/9,-1/9,-1/9
],[4/9,-1/27,-1/9,-2/27],[-1/9,-2/27,-1/9,-1/27],[-1/9,
-2/27,1/9,2/27]])
]> where w := K.1 where K := ext<K|Polynomial(K, [3, -4, 2, 1, 1])> where K is 
RationalField();

return _LR;
