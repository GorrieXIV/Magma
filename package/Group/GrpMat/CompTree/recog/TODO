Short term
----------
1. Constructive recognition of classical groups natural rep, char 2
2. Presentations of classical groups, except SL and Sp
3. Constructive recognition of exceptional groups, rank > 1, except F4 odd char
4. Presentations of exceptional groups, except Sz
5. Check Hiss-Malle list of small degree cross char representations. For each
   difficult group (eg F_4(2) in dim 52), develop black box algorithm for
   standard generators using ATLAS. Then deal with group as a sporadic group.
6. Membership testing of classical groups, grey box, other than SL.
   Obtain code from Elliot.
7. Constructive recognition of classical groups, grey box. 
   Obtain code from Damien.

8. Ability to switch off special nice generators. Nice generators
would then be the same as input generators. This would speed up the
construction of the tree since the SetupNiceData would not have to be
called, hence less SLP evaluations. It may be too complicated to do this for the leaf cases, but hopefully relatively easy to do for inner nodes.

9. Inverse mappings of reduction homomorphisms. This would allow us to compute pre-images which could be used when mapping from composition factors to group.

10. Split C9 classical group leaf case into one case for each
family. Many different algorithms are used and this leaf case is quite
complex. It would be made much simpler and less bug-prone if the
different classical families were different leaf cases.

Long term
---------
1. To cope more efficiently with O_p and imprimitive groups, a node should
   have a direct product of groups rather than a single group. 
   This requires extensions to Magma and cannot be implemented at this time.
2. Deal with O_p using spinning, and possibly using more advanced 
   representation theory. The latter requires extensions to the data structure
   that are unclear at this time.
