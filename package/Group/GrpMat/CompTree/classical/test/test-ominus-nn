/* test rewriting for non-natural irreducible repns of OmegaMinus */

import "../recognition/standard.m": MinusChosenElements;
SetEchoInput (true);
// SetSeed (1);

NmrElements := 10;
power := 3;
fct := SymmetricPower;
fct := ExteriorPower;
for d in [4..12 by 2] do
for q in [2,3,4, 5,7,8,9,11,13,16, 25,27, 32] do 
G := OmegaMinus(d, q);
MA := MatrixAlgebra (GF(q), d);
QQ := MinusChosenElements(G);
Q := [fct(MA!QQ[i], power): i in [1..#QQ]];
n := Nrows(Q[1]);
if n eq 0 then continue; end if;
Q := [GL(n, q) ! x : x in Q];
A := Random(GL(n, q));
Q := Q^A;
if d eq 6 then Q[5] := Q[4]; end if;
if d eq 4 then Q[4] := Q[3]^0; Q[5] := Q[4]; end if;

E := sub<GL(n, q)|Q>;
qq := q;

if IsIrreducible (E) eq false then
   M:=GModule (E);
   CF := CompositionFactors (M);
   f :=func<x,y|Dimension (y) - Dimension (x)>;
   Sort (~CF, f);
   Q := [GL(Dimension (CF[1]), q)!ActionGenerator (CF[1], i): i in [1..Ngens (E)
]];
   if d eq 6 then Q[5] := Q[4]; end if;
   if d eq 4 then Q[4] := Q[3]^0; Q[5] := Q[4]; end if;
   E := ActionGroup (CF[1]);
   assert IsIrreducible (E);
end if;

if IsIrreducible (E) then 
   for i in [1..NmrElements] do
      d, q, i;
       g := Random (E);
      f, w := int_OmegaMinusAltRepWordInGen (E, Q, g,d, qq);
     x := Evaluate (w, Q);
    assert x eq g;
   end for;
end if;

end for;
end for;
