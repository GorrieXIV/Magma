freeze;
 

/*
Code to identify and get maximal subgroups of almost simple groups with
socle either S(6,3) or O(7,3).

Standard generators and maximal subgroups taken from Rob Wilson's
Birmingham Atlas, version 2, Nov-Dec 2003.

Black box algorithm for standard gens of O(7,3) from same source.

Other code and algorithms by Bill Unger, Nov-Dec 2003.
This includes:
    - generators for maximal subgroups
    - algorithm get_standard_gens_s63
    - algorithm distinguish_o73_with_standard_gens

Subgroups here have been checked to be maximal under the assumption that
the list of classes of maximal subgroups on the web pages is complete.
*/

get_standard_gens_s63 := function(G)
/* Algorithm by Bill Unger */
    P := RandomProcess(G);
    repeat 
	x := Random(P); ord := Order(x); 
    until ord in {10, 20, 30}; // 1 in 8
    a := x^(ord div 2); // a in 2A
    y := x^(ord div 5);
    repeat b := y^Random(P); 
    until Order(a*b) eq 13 and Order(a*b^2) eq 14; // 80 in 2457, about 1 in 31
    return a,b;
end function;

S63Identify := function(group, soc:max:=true,Print:=0)
S := Sym(364);
a := S!
\[1, 300, 317, 169, 295, 184, 51, 8, 77, 27, 60, 12, 33, 336, 302, 16, 165, 286,
29, 111, 88, 253, 193, 24, 331, 208, 10, 59, 19, 101, 348, 32, 13, 161, 309, 65,
87, 343, 280, 241, 259, 301, 236, 337, 117, 316, 160, 335, 120, 58, 7, 308, 174,
274, 172, 310, 190, 50, 28, 11, 342, 179, 292, 108, 36, 98, 188, 233, 268, 276, 
318, 109, 150, 212, 271, 81, 9, 237, 142, 359, 76, 243, 83, 352, 322, 139, 37, 
21, 219, 133, 238, 92, 248, 94, 186, 226, 97, 66, 249, 130, 30, 240, 181, 127, 
326, 283, 107, 64, 72, 242, 20, 144, 314, 278, 115, 350, 45, 118, 215, 49, 176, 
257, 354, 124, 221, 223, 104, 247, 138, 100, 158, 327, 90, 134, 135, 196, 137, 
129, 86, 211, 338, 79, 166, 112, 230, 361, 355, 151, 287, 73, 148, 225, 340, 
216, 210, 256, 202, 131, 333, 47, 34, 162, 177, 204, 17, 143, 258, 319, 4, 194, 
351, 55, 207, 53, 224, 121, 163, 306, 62, 251, 103, 220, 183, 6, 187, 95, 185, 
67, 229, 57, 191, 192, 23, 170, 298, 136, 320, 273, 199, 200, 307, 157, 203, 
164, 252, 294, 173, 26, 360, 155, 140, 74, 213, 214, 119, 154, 217, 299, 89, 
182, 125, 234, 126, 175, 152, 96, 227, 323, 189, 145, 288, 289, 68, 222, 244, 
43, 78, 91, 353, 102, 40, 110, 82, 235, 315, 261, 128, 93, 99, 285, 180, 205, 
22, 290, 269, 156, 122, 167, 41, 266, 246, 262, 263, 341, 282, 260, 267, 69, 
255, 270, 75, 305, 198, 54, 303, 70, 329, 114, 284, 39, 281, 265, 106, 279, 250,
18, 149, 231, 232, 254, 291, 63, 293, 206, 5, 296, 357, 195, 218, 2, 42, 15, 
275, 312, 272, 178, 201, 52, 35, 56, 311, 304, 345, 113, 245, 46, 3, 71, 168, 
197, 321, 85, 228, 324, 346, 105, 132, 349, 277, 339, 25, 332, 159, 334, 48, 14,
44, 141, 330, 153, 264, 61, 38, 344, 313, 325, 364, 31, 328, 116, 171, 84, 239, 
123, 147, 356, 297, 363, 80, 209, 146, 362, 358, 347 ];
b := S!
\[178, 167, 202, 26, 319, 348, 83, 349, 194, 363, 171, 215, 50, 78, 364, 359, 
115, 142, 43, 352, 243, 307, 335, 186, 182, 219, 360, 315, 89, 110, 260, 332, 
312, 129, 91, 245, 241, 252, 12, 141, 313, 130, 101, 356, 9, 340, 99, 254, 122, 
107, 328, 225, 114, 305, 38, 106, 268, 37, 52, 301, 5, 334, 56, 6, 201, 347, 
174, 246, 1, 316, 126, 199, 244, 231, 92, 272, 137, 265, 150, 197, 81, 362, 144,
302, 355, 270, 21, 30, 229, 295, 227, 269, 345, 164, 240, 132, 139, 280, 84, 63,
288, 250, 148, 82, 105, 293, 79, 138, 180, 157, 104, 311, 325, 14, 170, 188, 
168, 24, 300, 207, 94, 337, 242, 290, 281, 237, 59, 317, 96, 192, 267, 277, 149,
221, 344, 310, 238, 42, 51, 291, 189, 93, 339, 255, 176, 287, 18, 195, 236, 13, 
258, 184, 226, 27, 8, 74, 275, 271, 128, 127, 47, 156, 297, 322, 22, 124, 103, 
259, 282, 289, 232, 208, 318, 309, 151, 140, 134, 119, 172, 4, 333, 196, 75, 
346, 85, 76, 3, 154, 95, 298, 190, 108, 273, 294, 2, 153, 77, 329, 70, 66, 152, 
44, 7, 60, 10, 136, 179, 120, 131, 143, 264, 111, 32, 361, 198, 71, 166, 36, 
109, 158, 224, 98, 177, 223, 160, 25, 253, 57, 214, 72, 286, 296, 283, 183, 235,
28, 343, 80, 125, 40, 314, 257, 256, 326, 303, 117, 11, 266, 249, 31, 181, 62, 
308, 191, 203, 324, 90, 353, 68, 274, 320, 175, 220, 213, 53, 61, 330, 86, 234, 
228, 323, 118, 46, 102, 88, 17, 34, 327, 209, 112, 357, 205, 64, 155, 218, 162, 
49, 342, 276, 306, 292, 145, 100, 350, 123, 247, 210, 48, 58, 69, 321, 161, 285,
41, 185, 217, 278, 35, 16, 15, 222, 73, 113, 299, 133, 230, 173, 159, 248, 354, 
341, 338, 263, 87, 304, 33, 165, 331, 39, 279, 97, 211, 135, 55, 200, 284, 146, 
121, 163, 351, 204, 19, 216, 251, 147, 65, 23, 233, 336, 45, 193, 261, 262, 20, 
54, 187, 358, 239, 67, 116, 29, 212, 169, 206 ];
c := S!
\[68, 234, 336, 4, 303, 286, 209, 170, 14, 325, 268, 12, 350, 9, 128, 253, 342, 
275, 248, 222, 243, 233, 231, 24, 290, 106, 93, 206, 256, 198, 329, 319, 100, 
34, 192, 133, 69, 144, 177, 53, 279, 42, 91, 277, 332, 330, 312, 51, 247, 62, 
48, 309, 40, 89, 108, 65, 190, 301, 80, 352, 339, 50, 221, 276, 56, 226, 258, 1,
37, 172, 145, 125, 260, 160, 250, 215, 121, 311, 225, 59, 354, 88, 112, 188, 
102, 361, 167, 82, 54, 185, 43, 362, 27, 333, 266, 115, 183, 199, 123, 33, 169, 
85, 161, 116, 119, 26, 314, 55, 254, 257, 269, 83, 117, 320, 96, 104, 113, 324, 
105, 349, 77, 242, 99, 218, 72, 163, 322, 15, 194, 240, 344, 200, 36, 134, 318, 
176, 343, 263, 146, 207, 321, 229, 288, 38, 71, 139, 147, 154, 289, 304, 255, 
152, 364, 148, 220, 351, 295, 297, 159, 74, 103, 308, 126, 294, 238, 252, 87, 
338, 101, 8, 346, 70, 205, 359, 249, 136, 39, 334, 179, 337, 323, 203, 97, 345, 
90, 212, 208, 84, 189, 57, 191, 35, 211, 129, 195, 315, 262, 30, 98, 132, 331, 
313, 182, 241, 173, 28, 140, 187, 7, 291, 193, 186, 341, 270, 76, 300, 357, 124,
274, 155, 63, 20, 360, 326, 79, 66, 261, 228, 142, 267, 23, 302, 22, 2, 235, 
316, 237, 165, 356, 130, 204, 122, 21, 244, 317, 299, 49, 19, 175, 75, 285, 166,
16, 109, 151, 29, 110, 67, 363, 73, 227, 197, 138, 353, 358, 95, 230, 11, 111, 
214, 348, 272, 273, 219, 18, 64, 44, 281, 41, 335, 278, 347, 310, 340, 251, 6, 
328, 143, 149, 25, 210, 307, 293, 164, 157, 296, 158, 298, 246, 216, 58, 232, 5,
150, 305, 306, 292, 162, 52, 283, 78, 47, 202, 107, 196, 236, 245, 135, 32, 114,
141, 127, 181, 118, 10, 224, 327, 287, 31, 46, 201, 45, 94, 178, 280, 3, 180, 
168, 61, 284, 213, 17, 137, 131, 184, 171, 282, 271, 120, 13, 156, 60, 264, 81, 
355, 239, 217, 265, 174, 223, 86, 92, 259, 153];

    ssimp := sub<S|a,b>;
    ssimp`Order := 4585351680;
    F, phi := FPGroupStrong(ssimp);
    // soc := Socle(group);
    aut := Index(group, soc);
    if Print gt 1 then printf "group is S(6,3):[%o]\n", aut; end if;
    ga, gb:= get_standard_gens_s63(soc);
    soc := sub< soc | ga,gb >;
    soc`Order := 4585351680;
    newgens := [ group | ga, gb];
    for g in Generators(group) do
       if not g in sub<group|newgens> then Append(~newgens,g); end if;
    end for;
    group := sub<group|newgens>;
    as63 := sub< S | a, b, c >;
    ims := [ as63 | a, b];
    homom :=  hom< soc -> ssimp | ims >;
    for i in [Ngens(soc)+1..Ngens(group)] do
	g := group.i;
	CG := as63; ce := Id(as63);
	for j in [1..2] do
	    isc, h := IsConjugate(CG,ssimp.j^ce,homom(soc.j^g));
	    if not isc then error "Conjugation error in Aut(S(6,3))"; end if;
	    CG := Centraliser(CG,homom(soc.j^g));
	    ce := ce*h;
	end for;
	Append(~ims,ce);
    end for;
    newgens := ims;
    for g in Generators(as63) do
	if not g in sub<as63|ims> then Append(~ims,g); end if;
    end for;
    as63 := sub< S | ims >;
    homom :=  hom< group -> as63 | newgens >;

    maximals:= [];
    if not max then 
	return homom, as63, maximals, F, phi;
    end if;
    
    Append(~maximals, BasicStabilizer(ssimp, 2)); // 3^(1+4):2.U(4,2)

    // 3^6:L(3,3)
    M := sub<ssimp| b^-2 * a * b^-2 * a * b * a,
	a * b^-2 * a * b^-2 * a * b^-2 * a * b^-1 * a >;
    M`Order := 4094064;
    Append(~maximals, M);

    // 3^(3+4):2.(S4 x A4)
    M := sub<ssimp|b^-1 * a * b^-1 * a * b * a * b,
	b * a * b^-1 * a * b^-1 * a * b^2 * a * b * a * b * a * b^2 * a * b^-1,
	b * a * b^-2 * a * b * a * b * a * b^2 * a * b^2 * a * b * a * b^-1 >;
    M`Order := 1259712;
    Append(~maximals, M);

    // 2.(A4 × U4(2))
    M := sub<ssimp| b * a * b^-1 * a * b, b^-2 * a * b^2 * a * b^-2 >;
    M`Order := 622080;
    Append(~maximals, M);

    // 2^(2+6):3^3:S3
    M := sub<ssimp|
	b^-2 * a * b^-1 * a * b^-2 * a * b^2 * a * b * a * b^2, 
	a * b^-1 * a * b^2 * a * b * a * b * a * b^-1 * a * b^-1 * a * b^-2 * 
	a * b * a, 
	a * b * a * b^-1 * a * b^-1 * a * b * a * b^-2 * a * b * a * b^-2 * 
	a * b * a * b^-2, 
	a * b^-1 * a * b^-1 * a * b * a * b * a * b^-1 * a * b^2 * a * 
	b^-1 * a * b^2 * a * b^-1 * a * b^-2 * a >;
    M`Order := 41472;
    Append(~maximals, M);

    // L(2,27):3 
    M := sub<ssimp| 
	b * a * b^-1 * a * b^2 * a * b * a * b * a * b^-1 * a * b^2 * a * 
	b^-2 * a * b^-1, 
	a * b * a * b * a * b * a * b^2 * a * b * a * b^2 * a * b * 
	a * b * a * b * a * b^2 >;
    M`Order := 29484;
    Append(~maximals, M);

    // U3(3):2 × 2
    M := sub<ssimp|a * b^2, 
	b^-1 * a * b^-1 * a * b^-1 * a * b * a * b * a * b^2 * a * b^2 * a * 
	b * a * b^-2 * a * b * a * b^-2 * a * b^-1 * a * b^-2 * a * b >;
    M`Order := 24192;
    Append(~maximals, M);

    // L(3,3):2
    M := sub<ssimp|
	a * b * a * b * a * b^2 * a * b * a * b * a * b^2 * a * b * a * b * 
	a * b^2, 
	a * b^2 * a * b^2 * a * b^2 * a * b^2 * a * b^2 * a * b^2 * a * b^2 >;
    M`Order := 11232;
    Append(~maximals, M);

    if aut eq 1 then
	// L(2,13) twice
	M := sub<ssimp| ((a*b*b)^7)^(b*(a*b^-1)^4), a*b>;
	M`Order := 1092;
	Append(~maximals, M);
	Append(~maximals, M^c);
    end if;

    /* Above all checked to be maximal using IsMaximal */

    // A5
    M := sub<ssimp|
	b^-1 * a * b^-1 * a * b^-1 * a * b^-1 * a * b * a * b * a * b^2 * a * 
	b^-1 * a * b^-1 * a * b^2 * a * b^2 * a * b^-1 * a * b * a * b * a * 
	b^2 * a * b * a, 
	a * b^-2 * a * b * a * b * a * b * a * b^-2 * a * b^-1 * a * 
	b^2 * a * b^2 * a * b * a * b^-2 * a * b^2 * a * b * a * b * a 
	* b^-2 * a * b >;
    M`Order := 60;
    Append(~maximals, M);

    /* This A5 is maximal (provided the list is complete) as from orders it
       can only be a subgroup of Nos 1 & 4 above, and they have orbits of
       length 1 & 4 resp, and this A5 has shortest orbit length 12, so it
       isn't contained in any conjugate of any above */

    return homom, as63, maximals, F, phi;
end function;

get_standard_gens_o73 := function(G)
    P := RandomProcess(G);
    repeat x := Random(P); until Order(x) eq 14; // 1 in 14
    a := x^7; // a in 2A
    y := x^2;
    repeat b := y^Random(P); 
    until Order(a*b) eq 13 and Order(a*b^2) eq 20; // 28 in 351
    return a,b;
end function;

O73Identify := function(group, soc, ga, gb:max:=true,Print:=0)
S := Sym(351);
a := S!
\[ 105, 81, 328, 166, 5, 75, 134, 311, 9, 327, 51, 99, 13, 14, 15, 16, 17, 18, 
314, 200, 66, 83, 23, 67, 25, 345, 82, 28, 107, 215, 84, 32, 135, 34, 233, 36, 
37, 344, 39, 40, 41, 152, 169, 44, 45, 291, 136, 48, 223, 338, 11, 52, 287, 324,
322, 239, 57, 181, 165, 68, 61, 62, 80, 182, 350, 21, 24, 60, 241, 70, 164, 72, 
73, 119, 6, 300, 214, 315, 79, 63, 2, 27, 22, 31, 85, 86, 121, 88, 283, 307, 
229, 336, 93, 261, 234, 96, 282, 111, 12, 100, 154, 290, 103, 104, 1, 106, 29, 
108, 109, 269, 98, 190, 250, 114, 115, 177, 117, 118, 74, 221, 87, 183, 123, 
124, 125, 126, 351, 144, 274, 232, 349, 132, 133, 7, 33, 47, 224, 276, 139, 302,
141, 273, 143, 128, 326, 195, 147, 148, 231, 206, 186, 42, 153, 101, 155, 319, 
303, 158, 216, 160, 226, 238, 194, 71, 59, 4, 203, 168, 43, 180, 171, 172, 173, 
211, 246, 176, 116, 178, 179, 170, 58, 64, 122, 279, 202, 151, 272, 295, 189, 
112, 191, 296, 193, 163, 146, 196, 197, 198, 199, 20, 243, 185, 167, 204, 205, 
150, 207, 208, 209, 210, 174, 212, 330, 77, 30, 159, 309, 218, 219, 220, 120, 
247, 49, 137, 297, 161, 227, 258, 91, 230, 149, 130, 35, 95, 235, 236, 280, 162,
56, 240, 69, 331, 201, 321, 245, 175, 222, 342, 249, 113, 268, 252, 263, 254, 
255, 256, 325, 228, 259, 260, 94, 332, 253, 264, 265, 266, 267, 251, 110, 270, 
271, 187, 142, 129, 343, 138, 277, 278, 184, 237, 329, 97, 89, 284, 285, 286, 
53, 288, 289, 102, 46, 305, 293, 347, 188, 192, 225, 298, 299, 76, 301, 140, 
157, 304, 292, 316, 90, 308, 217, 320, 8, 312, 313, 19, 78, 306, 317, 318, 156, 
310, 244, 55, 323, 54, 257, 145, 10, 3, 281, 213, 242, 262, 333, 339, 335, 92, 
337, 50, 334, 340, 341, 248, 275, 38, 26, 346, 294, 348, 131, 65, 127 ];
b := S!
\[ 347, 338, 270, 203, 337, 146, 2, 329, 154, 139, 117, 152, 199, 231, 289, 112, 
252, 214, 90, 232, 55, 44, 68, 304, 98, 164, 29, 224, 33, 159, 3, 272, 227, 291,
201, 182, 79, 58, 319, 110, 59, 30, 273, 89, 207, 283, 336, 274, 153, 229, 190, 
213, 192, 245, 101, 104, 132, 93, 53, 265, 41, 186, 175, 171, 116, 195, 10, 183,
282, 56, 62, 351, 335, 72, 22, 239, 287, 134, 14, 307, 103, 189, 111, 301, 87, 
61, 130, 296, 63, 315, 158, 176, 47, 16, 54, 118, 119, 312, 349, 340, 212, 65, 
124, 281, 96, 123, 42, 128, 310, 83, 69, 251, 247, 21, 122, 160, 297, 11, 206, 
143, 238, 179, 25, 220, 258, 39, 178, 324, 341, 32, 73, 215, 71, 196, 316, 23, 
302, 290, 308, 40, 311, 280, 48, 105, 109, 263, 99, 107, 320, 106, 240, 197, 
114, 225, 305, 113, 27, 168, 172, 261, 249, 13, 85, 60, 91, 115, 170, 147, 76, 
185, 241, 268, 6, 131, 228, 284, 149, 334, 326, 97, 136, 35, 303, 209, 137, 342,
188, 94, 45, 173, 17, 298, 125, 166, 219, 216, 309, 181, 278, 24, 19, 28, 15, 
210, 243, 95, 279, 314, 80, 344, 135, 49, 259, 26, 346, 339, 217, 92, 299, 253, 
156, 126, 262, 222, 191, 292, 233, 75, 12, 88, 193, 38, 293, 177, 211, 237, 8, 
66, 331, 82, 250, 18, 267, 34, 180, 266, 343, 269, 155, 74, 330, 256, 84, 248, 
163, 9, 194, 37, 200, 43, 223, 102, 321, 7, 242, 4, 70, 148, 322, 5, 234, 255, 
254, 145, 246, 31, 236, 313, 151, 271, 205, 140, 277, 328, 332, 288, 218, 78, 
275, 333, 141, 221, 157, 162, 264, 174, 144, 86, 327, 208, 81, 129, 198, 325, 
300, 276, 108, 350, 323, 120, 285, 317, 348, 161, 36, 204, 150, 295, 202, 142, 
51, 260, 50, 184, 52, 257, 121, 77, 46, 187, 127, 244, 57, 169, 230, 20, 306, 
345, 286, 133, 167, 100, 226, 235, 318, 138, 67, 294, 165, 1, 64 ];
c := S!
\[ 4, 7, 3, 1, 13, 12, 2, 8, 9, 10, 22, 6, 5, 23, 15, 25, 17, 18, 19, 20, 29, 11,
14, 24, 16, 38, 47, 28, 21, 42, 31, 32, 33, 34, 35, 41, 57, 26, 62, 40, 36, 30, 
43, 70, 73, 76, 27, 48, 64, 65, 83, 52, 53, 54, 55, 56, 37, 91, 95, 98, 100, 39,
63, 49, 50, 107, 67, 111, 113, 44, 116, 118, 45, 122, 99, 46, 128, 102, 103, 80,
134, 136, 51, 84, 85, 86, 87, 88, 89, 90, 58, 145, 147, 150, 59, 153, 156, 60, 
75, 61, 161, 78, 79, 104, 166, 168, 66, 108, 172, 174, 68, 149, 69, 179, 171, 
71, 155, 72, 183, 184, 121, 74, 158, 189, 160, 193, 131, 77, 162, 163, 127, 196,
198, 81, 135, 82, 170, 138, 204, 140, 208, 142, 143, 214, 92, 216, 93, 218, 112,
94, 222, 215, 96, 226, 117, 97, 228, 123, 195, 125, 101, 129, 130, 177, 234, 
105, 167, 106, 169, 137, 115, 109, 240, 110, 188, 219, 164, 220, 114, 224, 229, 
223, 119, 120, 185, 247, 187, 175, 124, 231, 230, 192, 126, 232, 159, 132, 197, 
133, 199, 200, 237, 202, 203, 139, 205, 261, 207, 141, 209, 266, 269, 271, 213, 
144, 152, 146, 217, 148, 176, 178, 279, 151, 182, 180, 225, 154, 285, 157, 181, 
191, 190, 194, 233, 165, 235, 236, 201, 274, 239, 173, 250, 244, 280, 242, 245, 
295, 186, 248, 267, 241, 251, 252, 253, 289, 255, 298, 257, 303, 304, 260, 206, 
262, 263, 308, 265, 210, 249, 268, 211, 313, 212, 272, 273, 238, 275, 276, 286, 
278, 221, 243, 281, 319, 283, 284, 227, 277, 287, 288, 254, 315, 300, 292, 317, 
294, 246, 296, 297, 256, 299, 291, 323, 302, 258, 259, 305, 306, 307, 264, 309, 
310, 311, 312, 270, 314, 290, 316, 293, 318, 282, 320, 331, 322, 301, 324, 325, 
336, 327, 328, 329, 330, 321, 332, 340, 334, 335, 326, 337, 350, 339, 333, 348, 
342, 343, 345, 344, 346, 347, 341, 351, 338, 349 ];

    osimp := sub<S|a,b>;
    osimp`Order := 4585351680;
    F, phi := FPGroupStrong(osimp);
    // soc := Socle(group);
    aut := Index(group, soc);
    if Print gt 1 then printf "group is O(7,3):[%o]\n", aut; end if;
    // ga, gb:= get_standard_gens_o73(soc);
    soc := sub< soc | ga,gb >;
    soc`Order := 4585351680;
    newgens := [ group | ga, gb];
    for g in Generators(group) do
       if not g in sub<group|newgens> then Append(~newgens,g); end if;
    end for;
    group := sub<group|newgens>;
    ao73 := sub< S | a, b, c >;
    ims := [ ao73 | a, b];
    homom :=  hom< soc -> osimp | ims >;
    for i in [Ngens(soc)+1..Ngens(group)] do
	g := group.i;
	CG := ao73; ce := Id(ao73);
	for j in [1..2] do
	    isc, h := IsConjugate(CG,osimp.j^ce,homom(soc.j^g));
	    if not isc then error "Conjugation error in Aut(O(7,3))"; end if;
	    CG := Centraliser(CG,homom(soc.j^g));
	    ce := ce*h;
	end for;
	Append(~ims,ce);
    end for;
    newgens := ims;
    for g in Generators(ao73) do
	if not g in sub<ao73|ims> then Append(~ims,g); end if;
    end for;
    ao73 := sub< S | ims >;
    homom :=  hom< group -> ao73 | newgens >;

    maximals:= [];
    if not max then 
	return homom, ao73, maximals, F, phi;
    end if;
    
    F2 := FreeGroup(2);
    phi2 := hom<F2->osimp|a,b>;

    Append(~maximals, BasicStabilizer(osimp, 2)); // 2U(4,3).2

    // 3^5:U(4,2):2
    M := sub<osimp | [F2 |
	[ 1, 2, 2, 1, -2, -2, -1 ],
	[ 1, -2, -2, 1, 2, 2, -1 ],
	[ 1, -2, 1, 2, 2, 1, -2, -2, -1, -2, -2, -1, 2 ]]@ phi2>;
    M`Order := 12597120;
    Append(~maximals, M);

    // L(4,3):2
    M := sub<osimp | [F2 |
	[ 1 ],
	[ 2, 1, -2 ],
	[ 2, 2, 1, -2, -2 ],
	[ -2, -2, 1, 2, 2 ],
	[ 2, 2, 2, 1, 2, 1, -2, -1, -2, -2, -2 ],
	[ -2, 1, -2, 1, -2, 1, 2, -1, 2, -1, 2 ] ]@ phi2>;
    M`Order := 12130560;
    Append(~maximals, M);

    //  3^(3+3):L(3,3)
    M := sub<osimp | [F2 |
	[ 1, 2, 1, 2, 1, 2, 2, -1, 2, -1, 2 ],
	[ 1, 2, 2, 2, 1, -2, -1, 2, 2, -1, -2 ]]@phi2>;
    M`Order := 4094064;
    Append(~maximals, M);

    // 3^(1+6):(2A4 x A4).2
    M := sub<osimp | [F2|
	[ 2, 1, 2, 2, 2, 1, -2, -2, -1, -2, -1, -2 ],
	[ 2, 2, 2, 1, 2, 2, 1, 2, 2, -1, 2, 2, -1, 2, -1, -2 ],
	[ 1, 2, 1, 2, 1, 2, 2, 1, -2, -1, -2, -1, 2, -1, 2, 2, 2 ]]@phi2>;
    M`Order := 1259712;
    Append(~maximals, M);
    
    // (2^2 x U(4,2)):2
    M := sub<osimp | [F2|
	[ 2, 1, -2 ], 
	[ -2, -2, -2, 1, 2, 2, 2 ],
	[ -2, 1, -2, -2, 1, -2, 1, 2, -1, 2, 2, -1, 2 ],
	[ 2, 2, 1, 2, 1, -2, 1, -2, -2, -1, -2, -2, -1, 2, 2 ],
	[ 2, 2, 1, 2, 2, 1, 2, 1, -2, -1, -2, -2, -1, -2, -2 ]]@phi2 >;
    M`Order := 207360;
    Append(~maximals, M);
    
    // 2^6:A7
    M := sub<osimp | [F2|
	[ 2, 1, 2, 1, 2, 1, -2, -1, -2, -1, -2, -1 ],
	[ 2, 2, 1, -2, 1, 2, 2, -1, -2, -1, -2, -1, -2, -2 ]]@phi2>;
    M`Order := 161280;
    Append(~maximals, M);

    // S4 x S6
    M := sub<osimp | [F2|
	[ -2, 1, 2 ],
	[ 1, 2, 1, -2, 1, -2, 1, 2, -1, 2, 2, -1, -2, -2, -1 ],
	[ 1, -2, -2, -2, 1, -2, 1, -2, -2, -1, -2, -2, -1, 2, 2, -1, -2, -1 ],
	[ 2, 1, -2, -2, 1, -2, 1, -2, 1, 2, -1, 2, -1, 2, 2, -1, -2 ],
	[ 2, 1, -2, 1, 2, 2, 1, 2, 1, 2, 1, -2, -1, -2, -1, -2, -2, -1, 2, 
	    -1, -2 ] ] @ phi2 >;
    M`Order := 17280;
    Append(~maximals, M);

    // S4 x 2(A4 x A4).2 
    M := sub<osimp | [F2|
	[ -2, 1, 2, 1, 2, 1, -2, 1, -2, 1, -2, -2, -1, 2, 2, -1, 2, -1, 2, 
	    -1, -2, -1 ],
	[ -2, -2, 1, 2, 1, 2, 2, 1, -2, 1, -2, -2, -1, -2, -2, -1, -2, -1, 
	    -2, -1, -2, -2 ],
	[ -2, -2, -2, 1, -2, 1, -2, 1, -2, -2, 1, -2, -2, -1, -2, -1, -2, 
	    -2, -1, -2, -1, -2, -1, 2 ] ] @ phi2 >;
    M`Order := 13824;
    Append(~maximals, M);

    if aut eq 2 then
	return homom, ao73, maximals, F, phi;
    end if;

    // Three more pairs for the simple group:

    // G(2,3)
    M := sub<osimp | [F2|
	[ 1, 2, 1, 2, 1, 2, -1, 2, 2, 2, -1 ],
	[ 1, -2, -2, 1, 2, 1, 2, 2, 2, -1, -2 ] ] @ phi2 >;
    M`Order := 4245696;
    Append(~maximals, M);
    Append(~maximals, M^c);

    // S(6,2)
    M := sub<osimp |[F2|
	[ -2, 1, 2 ],
        [ 2, 1, -2, 1, -2, 1, 2, -1, -2, -2, -2, -1, 2, -1 ]]@phi2>;
    M`Order := 1451520;
    Append(~maximals, M);
    Append(~maximals, M^c);

    // S9
    M := sub<osimp |[F2|
	[ 2, 1, -2, -2, 1, -2, -2, 1, -2, -1, 2, -1, -2, -2, -2, -1, 2, -1 ],
	[ 1, -2, -2, 1, 2, 2, -1 ],
	[ 2, 1, 2, 1, -2, -1, -2 ] ] @ phi2 >;
    M`Order := 362880;
    Append(~maximals, M);
    Append(~maximals, M^c);

    return homom, ao73, maximals, F, phi;
end function;

distinguish_o73_with_standard_gens := function(G)
    // G is either s63 or o73, tell them apart 
    // if it is o73, return true, a, b where a,b are standard gens
    // if it is s63, return false, _, _
    local a, b, b2;
    P := RandomProcess(G);
    found_14 := false;
    repeat
	r := Random(P);
	ord := Order(r);
	if ord gt 20 then return false, _, _; /* proof it is s63 */ end if;
	if found_14 then
	    ar := a^r;
	    pr := {Order(ar*b),Order(ar*b2)};
	    if pr eq {10, 18} then /* proof it is o73, find standard gens */ 
		repeat
		    b := b^Random(P);
		    ab := a*b;
		    ord := Order(ab);
		until ord eq 13 and Order(ab*b) eq 20;
		return true, a, b;
	    end if;
	else
	    if ord eq 14 then
		found_14 := true;
		a := r^7; // s63 => 2B, o73 => 2A
		b := r^2;
		b2 := b^2;
	    end if;
	end if;
    until false;
end function;

S63O73Identify := function(group:max:=true,Print:=0)
/* 
   group must be isomorphic to one of S(6,3), S(6,3).2, O(7,3) or O(7,3).2
   Work out which simple group it is and call the appropriate
   subroutine to complete the maximal subgroups stuff.
*/
    soc := Socle(group);
    o_flag, ga, gb := distinguish_o73_with_standard_gens(soc);
    if o_flag then 
	return O73Identify(group, soc, ga, gb:max := max, Print := Print);
    else
	return S63Identify(group, soc:max := max, Print := Print);
    end if;
end function;
