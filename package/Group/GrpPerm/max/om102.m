freeze;

/*
Info from Birmingham website 8/1/2004
All maximals checked correct, subject to list at that date being
complete.

18/2/04
Added 3^5:2^4:S5 after inspection of Atlas of Brauer Characters Appendix 2
and checked not included in any other subgroup here.
*/

get_standard_gens_om102 := function(G)
/* 
   Find standard generators of O-(10,2). 
   Assumes G is O-(10,2).
   Algorithm and code by Bill Unger 8/1/2004. 
   Standard gens as defined in Birmingham Atlas at that date. 
*/
    P := RandomProcess(G);
    repeat x := Random(P); until Order(x) eq 24; // 1 in 16
    a := x^12; 
    // a is in 2A
    repeat
	repeat 
	    x := Random(P); ord := Order(x); 
	until ord in {5, 10, 15, 30}; // 519 in 2800 
	x := x ^ (ord div 5);
	// Now x could be in 5A or 5B. Try to prove it is in 5B.
	// If this fails in 10 tries then we get a new x.
	// 112 in 173 are in 5B, a little less than 2 in 3.
	count := 0;
	repeat
	    count +:= 1;
	    b := x^Random(P);
	    found_5B := Order(a*b) gt 15; // 640 in 1309 if x in 5B
	until found_5B or count ge 10;
    until found_5B;
    // x is in 5B
    repeat
	b := x^Random(P);
	ab := a*b;
    until Order(ab) eq 33 and Order(ab^3*b) eq 18; // 120 in 1309
    return a,b;
end function;

Om102Identify := function(group: max:= true, Print:=0)
    S := Sym(495);
a := S!
\[ 122, 2, 129, 246, 341, 346, 435, 241, 309, 455, 11, 90, 445, 232, 227, 35, 
  463, 18, 19, 440, 185, 22, 134, 224, 26, 25, 369, 166, 219, 30, 340, 396, 175,
  103, 16, 85, 265, 361, 39, 142, 41, 42, 356, 44, 45, 131, 47, 323, 305, 189, 
  203, 52, 58, 389, 299, 364, 380, 53, 59, 100, 415, 394, 386, 293, 366, 495, 
  349, 442, 428, 266, 421, 72, 73, 336, 184, 76, 244, 78, 119, 211, 81, 315, 83,
  441, 36, 212, 109, 200, 146, 12, 376, 254, 93, 94, 322, 160, 280, 434, 215, 
  60, 446, 486, 34, 470, 159, 106, 370, 452, 87, 196, 197, 116, 152, 313, 158, 
  112, 472, 118, 79, 214, 272, 1, 261, 476, 411, 458, 447, 374, 3, 330, 46, 132,
  133, 23, 190, 136, 137, 350, 467, 147, 141, 40, 270, 387, 298, 89, 140, 403, 
  149, 177, 465, 113, 153, 378, 155, 321, 157, 115, 105, 96, 328, 392, 163, 412,
  165, 28, 429, 352, 327, 170, 391, 172, 301, 174, 33, 181, 150, 416, 179, 180, 
  176, 262, 450, 75, 21, 186, 239, 357, 50, 135, 191, 304, 490, 194, 195, 110, 
  111, 344, 308, 88, 201, 202, 51, 371, 205, 206, 207, 462, 209, 335, 80, 86, 
  223, 120, 99, 385, 217, 397, 29, 220, 221, 290, 213, 24, 493, 314, 15, 461, 
  229, 230, 382, 14, 306, 234, 388, 289, 237, 399, 187, 240, 8, 250, 475, 77, 
  425, 4, 427, 248, 423, 242, 251, 252, 307, 92, 255, 395, 263, 258, 401, 297, 
  123, 182, 257, 264, 37, 70, 267, 345, 332, 143, 271, 121, 295, 274, 275, 276, 
  381, 320, 365, 97, 281, 390, 351, 348, 480, 485, 287, 288, 236, 222, 431, 408,
  64, 294, 273, 296, 260, 145, 55, 464, 173, 302, 373, 192, 49, 233, 253, 199, 
  9, 310, 413, 414, 114, 226, 82, 343, 353, 318, 319, 278, 156, 95, 48, 477, 
  438, 326, 169, 161, 339, 130, 354, 269, 491, 334, 210, 74, 337, 359, 329, 31, 
  5, 342, 316, 198, 268, 6, 473, 284, 67, 138, 283, 168, 317, 331, 355, 43, 188,
  358, 338, 436, 38, 362, 492, 56, 279, 65, 367, 368, 27, 107, 204, 400, 303, 
  128, 402, 91, 377, 154, 481, 57, 277, 231, 384, 383, 216, 63, 144, 235, 54, 
  282, 171, 162, 393, 62, 256, 32, 218, 398, 238, 372, 259, 375, 148, 468, 405, 
  437, 443, 292, 409, 410, 125, 164, 311, 312, 61, 178, 417, 439, 474, 420, 71, 
  422, 249, 424, 245, 479, 247, 69, 167, 430, 291, 432, 457, 98, 7, 360, 406, 
  325, 418, 20, 84, 68, 407, 469, 13, 101, 127, 448, 483, 183, 451, 108, 453, 
  494, 10, 456, 433, 126, 459, 460, 228, 208, 17, 300, 151, 466, 139, 404, 444, 
  104, 489, 117, 347, 419, 243, 124, 324, 478, 426, 285, 379, 482, 449, 484, 
  286, 102, 487, 488, 471, 193, 333, 363, 225, 454, 66 ];
b := S!
\[ 311, 77, 238, 278, 285, 277, 471, 103, 372, 18, 448, 24, 332, 40, 2, 398, 
  196, 134, 170, 271, 99, 105, 256, 396, 235, 149, 274, 217, 488, 374, 184, 253,
  255, 243, 48, 205, 400, 463, 59, 252, 421, 296, 49, 65, 106, 294, 214, 358, 
  292, 208, 180, 102, 432, 399, 228, 173, 462, 244, 150, 307, 331, 96, 172, 455,
  356, 342, 218, 426, 71, 456, 282, 429, 229, 320, 385, 272, 114, 110, 147, 401,
  422, 35, 312, 380, 176, 131, 325, 152, 366, 339, 33, 273, 310, 28, 494, 237, 
  313, 402, 419, 64, 478, 108, 408, 43, 276, 410, 390, 493, 221, 309, 163, 316, 
  190, 162, 46, 319, 446, 389, 93, 485, 154, 119, 406, 34, 5, 8, 318, 55, 85, 
  445, 431, 123, 202, 394, 279, 291, 227, 354, 21, 70, 323, 360, 459, 230, 157, 
  264, 489, 435, 138, 20, 346, 267, 305, 182, 283, 54, 240, 304, 434, 121, 465, 
  15, 175, 31, 336, 359, 224, 460, 58, 203, 281, 443, 225, 250, 467, 42, 155, 
  14, 492, 245, 177, 415, 10, 479, 62, 82, 349, 53, 322, 188, 80, 89, 293, 464, 
  480, 210, 27, 474, 295, 45, 81, 386, 486, 128, 328, 52, 447, 87, 321, 61, 213,
  397, 231, 477, 364, 377, 146, 363, 330, 193, 334, 326, 257, 453, 159, 333, 
  211, 345, 86, 303, 137, 376, 197, 139, 383, 355, 393, 301, 269, 151, 290, 50, 
  361, 29, 413, 247, 287, 338, 350, 101, 424, 469, 167, 122, 98, 83, 382, 38, 
  92, 423, 384, 298, 13, 94, 472, 403, 130, 79, 468, 161, 39, 232, 120, 417, 
  369, 60, 109, 239, 1, 404, 348, 136, 482, 95, 391, 75, 148, 441, 23, 156, 69, 
  490, 158, 288, 275, 129, 66, 407, 36, 395, 416, 76, 127, 220, 25, 179, 22, 37,
  116, 254, 430, 289, 365, 164, 262, 67, 90, 144, 78, 68, 44, 132, 270, 19, 242,
  428, 340, 484, 248, 263, 17, 219, 475, 6, 381, 226, 347, 452, 261, 223, 337, 
  143, 200, 375, 204, 145, 72, 344, 192, 450, 315, 3, 216, 491, 140, 209, 476, 
  186, 286, 373, 412, 201, 112, 481, 265, 187, 440, 420, 433, 335, 251, 392, 
  195, 207, 171, 302, 438, 268, 284, 198, 495, 327, 153, 317, 166, 260, 370, 7, 
  461, 483, 444, 41, 185, 183, 100, 470, 47, 118, 241, 357, 368, 91, 437, 266, 
  111, 189, 351, 451, 457, 343, 329, 124, 418, 30, 160, 352, 233, 51, 234, 191, 
  9, 454, 133, 449, 371, 427, 74, 409, 341, 135, 73, 113, 199, 56, 246, 258, 
  280, 466, 174, 63, 115, 12, 367, 125, 88, 306, 414, 107, 425, 57, 126, 411, 
  32, 362, 300, 236, 222, 379, 297, 388, 16, 249, 487, 215, 141, 353, 405, 4, 
  178, 442, 168, 97, 84, 473, 165, 308, 212, 439, 314, 142, 194, 181, 11, 299, 
  259, 324, 436, 169, 378, 104, 26, 117, 206, 458, 387 ];
c := S!
\[ 1, 4, 3, 2, 7, 6, 5, 12, 9, 15, 11, 8, 13, 21, 10, 16, 17, 18, 27, 29, 14, 
  31, 23, 24, 25, 26, 19, 39, 20, 30, 22, 32, 33, 47, 49, 51, 37, 38, 28, 40, 
  57, 42, 43, 44, 45, 63, 34, 66, 35, 69, 36, 52, 53, 54, 75, 56, 41, 74, 59, 
  60, 61, 84, 46, 64, 65, 48, 91, 68, 50, 70, 97, 99, 101, 58, 55, 76, 107, 78, 
  79, 80, 111, 113, 112, 62, 85, 118, 120, 88, 89, 90, 67, 92, 127, 94, 95, 96, 
  71, 98, 72, 117, 73, 139, 141, 104, 144, 106, 77, 108, 109, 110, 81, 83, 82, 
  155, 156, 157, 100, 86, 119, 87, 121, 164, 123, 167, 125, 170, 93, 128, 129, 
  175, 131, 132, 133, 134, 150, 136, 182, 138, 102, 186, 103, 142, 143, 105, 
  145, 146, 195, 151, 197, 135, 148, 152, 153, 154, 114, 115, 116, 158, 159, 
  160, 161, 210, 212, 122, 215, 217, 124, 221, 169, 126, 200, 226, 173, 228, 
  130, 231, 177, 178, 235, 180, 181, 137, 183, 184, 185, 140, 243, 188, 189, 
  190, 191, 248, 250, 194, 147, 196, 149, 253, 199, 171, 201, 202, 203, 204, 
  257, 206, 259, 208, 262, 162, 266, 163, 270, 214, 165, 216, 166, 261, 219, 
  220, 168, 222, 223, 224, 286, 172, 227, 174, 229, 230, 176, 232, 296, 263, 
  179, 236, 237, 238, 239, 240, 241, 242, 187, 244, 245, 281, 247, 192, 275, 
  193, 251, 252, 198, 254, 255, 256, 205, 316, 207, 320, 218, 209, 234, 264, 
  265, 211, 267, 327, 269, 213, 304, 272, 333, 274, 249, 314, 277, 278, 279, 
  280, 246, 282, 283, 284, 285, 225, 340, 343, 289, 346, 348, 292, 293, 294, 
  295, 233, 297, 354, 299, 300, 301, 302, 310, 271, 305, 362, 307, 363, 365, 
  303, 311, 312, 367, 276, 315, 258, 317, 318, 373, 260, 321, 322, 323, 324, 
  378, 380, 268, 374, 383, 330, 331, 332, 273, 388, 335, 336, 337, 393, 339, 
  287, 341, 342, 288, 344, 345, 290, 347, 291, 349, 350, 404, 405, 389, 298, 
  355, 408, 357, 401, 377, 360, 395, 306, 308, 413, 309, 366, 313, 368, 417, 
  370, 419, 407, 319, 328, 375, 376, 359, 325, 426, 326, 381, 382, 329, 384, 
  385, 386, 387, 334, 353, 390, 391, 392, 338, 394, 361, 396, 397, 423, 418, 
  400, 358, 402, 403, 351, 352, 406, 372, 356, 446, 447, 411, 412, 364, 414, 
  450, 452, 369, 399, 371, 420, 421, 422, 398, 424, 425, 379, 434, 428, 429, 
  461, 431, 432, 433, 427, 435, 436, 437, 438, 439, 440, 441, 442, 443, 471, 
  473, 409, 410, 448, 449, 415, 451, 416, 453, 454, 455, 456, 457, 478, 459, 
  460, 430, 470, 463, 480, 465, 466, 467, 468, 469, 462, 444, 472, 445, 474, 
  475, 476, 477, 458, 479, 464, 481, 482, 483, 484, 485, 486, 487, 488, 489, 
  490, 491, 492, 493, 494, 495 ];

    om102 := sub<S|a,b>;
    om102`Order := 25015379558400;

    F, phi := FPGroupStrong(om102);

    if Print gt 1 then print "Setting up isomorphism"; end if;

    soc := Socle(group);
    aut := Index(group, soc);
    //Find standard generators of socle
    ag, bg := get_standard_gens_om102(soc);
    soc := sub< soc | ag,bg >;
    soc`Order := 25015379558400;
    newgens := [ group | ag, bg];
    for g in Generators(group) do
       if not g in sub<group|newgens> then Append(~newgens,g); end if;
    end for;
    group := sub<group|newgens>;
    aom102 := sub<S|a,b,c>;
    ims := [ aom102 | a, b];
    homom :=  hom< soc -> om102 | ims >;
    for i in [Ngens(soc)+1..Ngens(group)] do
        g := group.i;
        CG := aom102; ce := Id(aom102);
        for j in [1..2] do
            isc, h := IsConjugate(CG,om102.j^ce,homom(soc.j^g));
            if not isc then error "Conjugation error in Aut(O-(10,2))"; end if;
            CG := Centraliser(CG,homom(soc.j^g));
            ce := ce*h;
        end for;
        Append(~ims,ce);
    end for;
    newgens := ims;
    for g in Generators(aom102) do
        if not g in sub<aom102|ims> then Append(~ims,g); end if;
    end for;
    aom102 := sub< S | ims >;
    homom :=  hom< group -> aom102 | newgens >;

    maximals:= [];
    if not max then
      return homom, aom102, maximals, F, phi;
    end if;

    if Print gt 1 then print "getting maximals"; end if;

    // 2^8:O-(8,2)
    M := sub<om102|
	    a * b^-1 * a * b * a,
	    b^2 * a * b^-2 * a * b^-1 * a * b^2 * a >;
    M`Order := 50536120320;
    Append(~maximals, M);

    // S(8,2)
    M := sub<om102|
	     a, b^-2 * a * b^2,
	     b * a * b^-2 * a * b * a * b^-2 >;
    M`Order := 47377612800;
    Append(~maximals, M);

    // 2^(1+12):(U(4,2) x S3)
    M := sub<om102|
	a * b^-1 * a * b^-1 * a * b^-2 * a * b^-2 * a * b^-1,
	a * b^-2 * a * b^2 * a * b^-1 * a * b^-1 * a * b * a * 
	    b^2 * a * b >;
    M`Order := 1274019840;
    Append(~maximals, M);

    // (3 x O+(8,2)):2
    M := sub<om102|
	b^-1 * a * b * a * b^-2 * a * b^-1 * a * b^-2 * a * b^-1 * a * b^2 * 
	a * b^-1, 
	b^-1 * a * b^-1 * a * b^-1 * a * b * a * b * a * b * a * b * 
	a * b * a * b^-1 * a >;
    M`Order := 1045094400;
    Append(~maximals, M);


    // 2^(6+8):(3 x A8).
    M := sub<om102|
	a * b^-1 * a * b * a * b^2 * a * b * a * b^-1 * a * b^-2 * a * b^-1 * 
	    a * b * a, 
	b * a * b^-2 * a * b^-2 * a * b^2 * a * b * a * b^-1 * a * b^-2 * a * 
	    b^2 * a * b * a * b * a * b^-1,
	b^-1 * a * b^-1 * a * b * a * b^2 * a * b^-2 * a * b^-1 * a * 
	    b * a * b, 
	b^-2 * a * b^-1 * a * b^-1 * a * b^-2 * a * b^2 * a * b^-1 *
	    a * b * a * b * a>;
    M`Order := 990904320;
    Append(~maximals, M);

    // 2^(3+12):(L(3,2) x A5)
    M := sub<om102|
	b^-1 * a * b^2 * a * b^-2 * a * b^-1 * a * b^-2 * a * b^-1,
	b^-1 * a * b * a * b^-2 * a * b^2 * a * b * a * b * a * b^2 * a >;
    M`Order := 330301440;
    Append(~maximals, M);

    // A12
    M := sub<om102|
	b^2 * a * b^-2 * a * b^-1 * a * b^-2 * a * b^2 * a * b * a, 
	a * b^-1 * a * b^-1 * a * b^-2 * a * b^2 * a * b * a * b^2 * a * 
	    b^-1 * a, 
	b^-1 * a * b^-1 * a * b^-1 * a * b^-1 * a * b^-1 * a * b * a * 
	    b^2 * a * b^-1 * a * b^-1 * a * b >;
    M`Order := 239500800;
    Append(~maximals, M);

    // 3 x U(5,2) (centralizer of (a*b)^11)
    M := sub<om102|
	    a * b,
	    b * a * b^-2 * a * b^-2 * a * b^2 * a * b^2 * a * b^-1 >;
    M`Order := 41057280;
    Append(~maximals, M);

    // (A5 x A8):2
    M := sub<om102|
	b * a * b^-1 * a * b^-2 * a * b * a * b * a * b * a * b^-1 * a * 
	    b^-1 * a * b^-1 * a * b^2 * a, 
	b * a * b^-1 * a * b^-1 * a * b^-2 * a * b^-1 * a * b * a * b * 
	    a * b^-2 * a * b^2 * a * b * a * b^-1 * a * b^-2 * a >;
    M`Order := 2419200;
    Append(~maximals, M);

    // (S3 x S3 x U(4,2)):2 
    M := sub<om102|
	a * b^-2 * a * b^2 * a * b * a * b^-2 * a * b^2 * a * b^-1 * a * b^-2
	    * a * b^2 * a, 
	b^-1 * a * b^-1 * a * b^2 * a * b * a * b^-2 * a * b^2 * 
	    a * b^-1 * a * b^-2 * a * b * a * b, 
	b^2 * a * b * a * b^-1 * a * b^-2 * a * b^-1 * a * b^2 * a * b^2 * a * 
	    b^-2 * a * b * a * b * a * b^2, 
	b^-1 * a * b^-2 * a * b * a * b^-2 * a * b * a * b^2 * a * b^2 * 
	    a * b^-2 * a * b^-1 * a * b^-1 * a * b^-1 * a * b^-1, 
	a * b^-1 * a * b^-1 * a * b^2 * a * b * a * b * a * b^2 * a * b^-2 * 
	    a * b^-1 * a * b^-1 * a * b^-2 * a * b * a * b * a >;
    M`Order := 1866240;
    Append(~maximals, M);

    // 3^5:2^4:S5
    M := sub<om102|
	a * b^-2 * a * b * a * b * a * b * a * b^-1 * a * b^-1 * a * b^-2 *  
	    a * b^-2 * a * b^-1 * a * b^2 * 
	    a * b^-2 * a * b * a * b^2 * a * b * a * b^2 * a, 
	b * a * b * a * b^-1 * a * b^-1 * a * b^-2 * a * b^-2 * a * b^2 * 
	    a * b^2 * a * b * a * b * a * b^-1 * a * b^-1, 
	a * b * a * b^-1 * a * b^-1 * a * b * a * b * a * b^-1 * a * 
	    b^-2 * a * b^2 * a * b * a * b^-1 * a * b^-2 * a * b * a * b, 
	b * a * b^-1 * a * b^2 * a * b * a * b^-2 * a * b^-2 * a * b^2 * 
	    a * b^2 * a * b^-1 * a * b^-2 * a * b * a * b^-1 >;
    M`Order := 466560;
    Append(~maximals, M);

    if aut eq 2 then // add novelty
	// M12:2 (intersection with simple is M12, contained in an A12)
	M := sub<om102|
	    b^-1 * a * b * a * b^-2 * a * b^-2 * a * b^2 * a * b * a * 
		b^2 * a * b^-1 * a * b^-1 * a * b * a, 
	    a * b^2 * a * b^2 * a * b^-1 * a * b^2 * a * b^2 * a * b^-2 * 
		a * b^2 * a * b * a * b^-1 * a * b^-2 * a, 
	    b^2 * a * b^-1 * a * b^2 * a * b^-1 * a * b^-1 * a * b * a * 
		b * a * b * a * b^-1 * a * b^-1 * a * b * a * b * a * 
		b^-1 * a * b^-2 * a * b^-1 >;
	M`Order := 95040;
	Append(~maximals, M);
    end if;

    return homom, aom102, maximals, F, phi;

end function;
