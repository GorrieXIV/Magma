	    Specification of records for Fano 3-folds
	    =========================================

Records r have 10 fields as follows:  (notation described below)

r`identifier
    MedPosInt		

r`fanoindex
    SmallPosInt		(in fact, in the range 1..19)

r`fanogenus
    SmallInt		(in fact, in the range 0..10ish)

r`fanobasegenus
    SmallInt		(probably in range -10..10)

r`genus1to5
    [ MedPosInt ]	this sequence always has length 5

r`weights
    [ SmallPosInt ]	this sequence has unknown length, but less than 255

r`basket
    [ [SmallPosInt] ]	this sequence has unknown length; each sequence it
			contains has length exactly 4: for example
				[ [2,1,1,1], [3,1,1,2], [19,5,14,1] ]

r`numinfo
    [ [MedPosInt] ]	this sequence has length 3; the first two subsequences
			have unknown length (less than 255) while the third
			always has length 2

r`noether
    [ SmallPosInt ]	this sequence is always length 4

r`numerator
    [ MedPosIntElt ]	this sequence has length a MedPosIntElt
			and it represents a polynomial with pos coeffs

=====================================================================

In terms of the field descriptors,

    field_d := [
    "String",
    "SmallPosInt",
    "MedPosInt",
    "BigPosInt",
    "SmallInt",
    "MedInt",
    "BigInt",
    "SmallSeqSmallPosInt",
    "SmallSeqMedPosInt",
    "SmallSeqBigPosInt",
    "SmallSeqSmallInt",
    "SmallSeqMedInt",
    "SmallSeqBigInt",
    "MedSeqSmallPosInt",
    "MedSeqMedPosInt",
    "MedSeqBigPosInt",
    "MedSeqSmallInt",
    "MedSeqMedInt",
    "MedSeqBigInt",
    "SmallSeqSmallSeqSmallPosInt",
    "SmallSeqSmallSeqMedPosInt",
    "SmallSeqSmallSeqBigPosInt",
    "SmallSeqSmallSeqSmallInt",
    "SmallSeqSmallSeqMedInt",
    "SmallSeqSmallSeqBigInt",
    "SmallSeqMedSeqSmallPosInt",
    "SmallSeqMedSeqMedPosInt",
    "SmallSeqMedSeqBigPosInt",
    "SmallSeqMedSeqSmallInt",
    "SmallSeqMedSeqMedInt",
    "SmallSeqMedSeqBigInt",
    "MedSeqSmallSeqSmallPosInt",
    "MedSeqSmallSeqMedPosInt",
    "MedSeqSmallSeqBigPosInt",
    "MedSeqSmallSeqSmallInt",
    "MedSeqSmallSeqMedInt",
    "MedSeqSmallSeqBigInt",
    "MedSeqMedSeqSmallPosInt",
    "MedSeqMedSeqMedPosInt",
    "MedSeqMedSeqBigPosInt",
    "MedSeqMedSeqSmallInt",
    "MedSeqMedSeqMedInt",
    "MedSeqMedSeqBigInt"
    ];

the specification (as in writefano.m) reads:

function get_rec_fd()
    rec_field_description := [
    < "identifier", 3 >,
    < "fanoindex", 2 >,
    < "fanogenus", 5 >,
    < "fanobasegenus", 5 >,
    < "genus1to5", 9 >,
    < "weights", 8 >,
    < "basket", 20 >,
    < "numinfo", 21 >,
    < "noether", 8 >,
    < "numerator", 9 > ];

=====================================================================

Notation
--------
Magma typenames are used.  Thus,
    RngIntElt denotes an integer,
    [RngIntElt] denotes a sequence of integers.

We abuse this notation in different ways:
    abbreviation:
	Int	stands for RngIntElt
	Seq	stands for SeqEnum
    with extra information:
	SmallInt	-- integers in range 0..255
	SmallInt	-- integers in range -127..128
	MedPosInt	-- integers in range 0..65535
    for sequences of sequences:
	[ [SmallPosInt] ]  -- a sequence comprising sequences of small ints

