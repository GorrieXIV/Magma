freeze;

/////////////////////////////////////////////////////////////////////////
// dim3_canonical_facet.m
/////////////////////////////////////////////////////////////////////////
// $Revision: 38044 $
// $Date: 2012-04-01 01:56:09 +1100 (Sun, 01 Apr 2012) $
// $LastChangedBy: kasprzyk $
/////////////////////////////////////////////////////////////////////////
// Author: Alexander Kasprzyk
/////////////////////////////////////////////////////////////////////////
// Reverse look-up tables for obtaining a (by construction, unique)
// normal form for the facets of a three-dimensional canonical polytope.
/////////////////////////////////////////////////////////////////////////
// Note: The tables were automatically generated; do NOT edit!
/////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
// Facet cache
/////////////////////////////////////////////////////////////////////////

// Returns the facets with ids in the range 1-500.
function canonical_dim3_facet_cache_1(id)
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,8]],
            [[0,0],[1,0],[6,10]],
            [[0,0],[3,0],[0,3]],
            [[0,0],[2,0],[2,6]],
            [[0,0],[1,0],[5,16]],
            [[0,0],[1,0],[11,15]],
            [[0,0],[1,0],[8,14]],
            [[0,0],[1,0],[5,21]],
            [[0,0],[1,0],[3,20]],
            [[0,0],[2,0],[6,8]],
            [[0,0],[1,0],[6,15]],
            [[0,0],[1,0],[9,16]],
            [[0,0],[1,0],[13,20]],
            [[0,0],[1,0],[7,18]],
            [[0,0],[1,0],[6,20]],
            [[0,0],[1,0],[16,20]],
            [[0,0],[1,0],[8,21]],
            [[0,0],[1,0],[15,21]],
            [[0,0],[1,0],[11,20]],
            [[0,0],[1,0],[6,25]],
            [[0,0],[1,0],[17,24]],
            [[0,0],[2,0],[2,10]],
            [[0,0],[1,0],[12,22]],
            [[0,0],[1,0],[22,28]],
            [[0,0],[1,0],[10,27]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[8,28]],
            [[0,0],[5,0],[0,5]],
            [[0,0],[2,0],[2,12]],
            [[0,0],[3,0],[3,9]],
            [[0,0],[2,0],[10,16]],
            [[0,0],[1,0],[21,30]],
            [[0,0],[1,0],[12,33]],
            [[0,0],[4,0],[4,8]],
            [[0,0],[1,0],[0,1]],
            [[0,0],[1,0],[2,3]],
            [[0,0],[1,0],[1,2]],
            [[0,0],[1,0],[2,5]],
            [[0,0],[1,0],[3,4]],
            [[0,0],[1,0],[1,3]],
            [[0,0],[1,0],[5,6]],
            [[0,0],[1,0],[2,9]],
            [[0,0],[1,0],[4,6]],
            [[0,0],[1,0],[1,5]],
            [[0,0],[1,0],[4,9]],
            [[0,0],[1,0],[5,8]],
            [[0,0],[1,0],[1,6]],
            [[0,0],[1,0],[11,12]],
            [[0,0],[2,0],[2,4]],
            [[0,0],[1,0],[1,7]],
            [[0,0],[1,0],[0,1],[-10,6]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,5],[-10,-17]],
            [[0,0],[6,0],[0,1],[-8,1]],
            [[0,0],[1,0],[0,1],[-18,10]],
            [[0,0],[1,0],[0,1],[-22,12]],
            [[0,0],[2,0],[0,1],[-24,9]],
            [[0,0],[4,0],[0,2],[-8,2]],
            [[0,0],[3,0],[0,3],[-6,3]],
            [[0,0],[2,0],[2,3],[-6,3]],
            [[0,0],[1,0],[1,3],[-9,3]],
            [[0,0],[1,0],[0,1],[1,1]],
            [[0,0],[1,0],[0,1],[-2,1]],
            [[0,0],[1,0],[2,3],[2,1]],
            [[0,0],[1,0],[1,2],[3,2]],
            [[0,0],[1,0],[0,1],[-6,4]],
            [[0,0],[2,0],[5,7],[0,1],[1,-2]],
            [[0,0],[1,0],[0,2],[1,3],[10,3]],
            [[0,0],[1,0],[1,2],[2,2],[0,-1]],
            [[0,0],[1,0],[1,2],[2,1],[2,3]],
            [[0,0],[1,0],[0,1],[-2,1],[-4,3]],
            [[0,0],[2,0],[4,6],[4,7],[3,1],[-1,-2]],
            [[0,0],[1,0],[2,3],[8,10],[9,11],[-5,-8]],
            [[0,0],[3,0],[0,1],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[0,2],[7,2],[1,3],[9,3]],
            [[0,0],[4,0],[0,1],[5,1],[4,5],[5,5]],
            [[0,0],[1,0],[0,1],[2,1],[1,2],[2,2]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-3,1],[-4,2],[-2,2]],
            [[0,0],[1,0],[0,2],[-2,1],[-1,3],[-3,3],[-3,2]],
            [[0,0],[1,0],[0,1],[2,1],[3,3],[1,3],[3,5]],
            [[0,0],[1,0],[0,1],[2,1],[3,3],[2,5],[3,6]],
            [[0,0],[1,0],[0,1],[-4,2],[-3,3],[-7,4],[-9,6]],
            [[0,0],[1,0],[0,1],[1,2],[3,3],[7,2],[9,3]],
            [[0,0],[1,0],[0,1],[2,1],[1,3],[3,3],[2,4],[3,4]],
            [[0,0],[1,0],[0,1],[-4,1],[-6,2],[-7,3],[-2,2],[-5,3]],
            [[0,0],[1,0],[0,1],[3,2],[1,3],[4,4],[3,5],[4,5]],
            [[0,0],[1,0],[0,1],[-3,2],[-7,6],[-10,7],[-11,8],[-10,8]],
            [[0,0],[1,0],[0,1],[4,1],[6,2],[1,2],[3,3],[7,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-8,3],[-9,4],[-4,3],[-7,4]],
            [[0,0],[1,0],[0,2],[3,2],[1,4],[4,4],[3,6],[4,6]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[4,6],[4,5],[0,-1],[2,5]],
            [[0,0],[1,0],[10,12]],
            [[0,0],[1,0],[5,12]],
            [[0,0],[2,0],[4,6]],
            [[0,0],[1,0],[3,16]],
            [[0,0],[1,0],[7,16]],
            [[0,0],[1,0],[7,15]],
            [[0,0],[1,0],[4,15]],
            [[0,0],[1,0],[10,18]],
            [[0,0],[3,0],[3,6]],
            [[0,0],[1,0],[22,24]],
            [[0,0],[1,0],[5,24]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[9,24]],
            [[0,0],[2,0],[8,12]],
            [[0,0],[1,0],[25,30]],
            [[0,0],[1,0],[11,30]],
            [[0,0],[3,0],[3,12]],
            [[0,0],[6,0],[0,6]],
            [[0,0],[1,0],[3,8]],
            [[0,0],[1,0],[7,8]],
            [[0,0],[1,0],[2,3],[-7,-11]],
            [[0,0],[3,0],[1,2],[3,-2]],
            [[0,0],[2,0],[2,3],[4,1]],
            [[0,0],[1,0],[3,8],[4,8]],
            [[0,0],[1,0],[4,5],[-5,-9]],
            [[0,0],[1,0],[1,3],[4,6]],
            [[0,0],[1,0],[3,6],[4,6]],
            [[0,0],[2,0],[1,3],[-3,1]],
            [[0,0],[1,0],[3,10],[4,10]],
            [[0,0],[2,0],[2,4],[4,4]],
            [[0,0],[1,0],[2,4],[5,4]],
            [[0,0],[1,0],[5,14],[2,2]],
            [[0,0],[2,0],[0,4],[2,4]],
            [[0,0],[1,0],[10,14],[13,18]],
            [[0,0],[1,0],[3,7],[-4,-15]],
            [[0,0],[1,0],[1,6],[4,12]],
            [[0,0],[1,0],[3,12],[4,12]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[5,12]],
            [[0,0],[1,0],[0,1],[-21,15]],
            [[0,0],[2,0],[2,3],[8,3]],
            [[0,0],[1,0],[4,6],[7,6]],
            [[0,0],[1,0],[1,3],[-2,18]],
            [[0,0],[1,0],[14,20],[17,24]],
            [[0,0],[1,0],[1,5],[6,15]],
            [[0,0],[2,0],[0,4],[-6,4]],
            [[0,0],[2,0],[4,8],[6,8]],
            [[0,0],[1,0],[0,3],[-9,21]],
            [[0,0],[1,0],[0,2],[6,20]],
            [[0,0],[1,0],[1,2],[-9,12]],
            [[0,0],[2,0],[2,4],[-4,4]],
            [[0,0],[4,0],[0,4],[4,4]],
            [[0,0],[2,0],[0,1],[1,-1]],
            [[0,0],[1,0],[1,2],[2,2]],
            [[0,0],[3,0],[0,1],[1,-1]],
            [[0,0],[1,0],[1,4],[2,4]],
            [[0,0],[5,0],[0,1],[3,-1]],
            [[0,0],[1,0],[5,7],[2,1]],
            [[0,0],[1,0],[1,2],[-2,2]],
            [[0,0],[2,0],[0,2],[2,2]],
            [[0,0],[2,0],[0,1],[2,2],[1,-3]],
            [[0,0],[1,0],[2,4],[3,4],[-2,-5]],
            [[0,0],[1,0],[3,8],[-1,-6],[3,7]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,3],[3,6],[3,3]],
            [[0,0],[1,0],[5,8],[3,3],[6,9]],
            [[0,0],[1,0],[0,1],[-9,4],[-10,4]],
            [[0,0],[2,0],[0,1],[4,1],[4,3]],
            [[0,0],[1,0],[7,8],[-3,-5],[9,11]],
            [[0,0],[1,0],[5,7],[5,5],[3,2]],
            [[0,0],[1,0],[1,2],[-2,3],[0,5]],
            [[0,0],[1,0],[0,1],[5,3],[1,3]],
            [[0,0],[2,0],[2,4],[3,1],[3,5]],
            [[0,0],[1,0],[2,3],[5,3],[-1,2]],
            [[0,0],[1,0],[0,1],[-6,1],[-10,3]],
            [[0,0],[1,0],[3,7],[5,10],[6,13]],
            [[0,0],[1,0],[5,8],[2,1],[7,11]],
            [[0,0],[2,0],[4,5],[-1,-5],[4,4]],
            [[0,0],[1,0],[6,11],[4,5],[2,1]],
            [[0,0],[1,0],[2,8],[3,8],[3,11]],
            [[0,0],[1,0],[0,1],[4,9],[5,10]],
            [[0,0],[1,0],[1,2],[-2,5],[0,7]],
            [[0,0],[1,0],[1,5],[2,1],[4,5]],
            [[0,0],[3,0],[0,1],[6,1],[6,3]],
            [[0,0],[1,0],[0,5],[-2,4],[-3,8]],
            [[0,0],[3,0],[0,1],[9,2],[10,3]],
            [[0,0],[1,0],[7,12],[3,3],[9,15]],
            [[0,0],[2,0],[2,6],[3,2],[3,7]],
            [[0,0],[2,0],[0,1],[3,2],[3,7]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[0,1],[-8,1],[-14,3]],
            [[0,0],[1,0],[1,2],[4,7],[4,1]],
            [[0,0],[1,0],[7,12],[2,1],[10,17]],
            [[0,0],[2,0],[2,6],[3,1],[3,8]],
            [[0,0],[1,0],[0,1],[-4,4],[-16,10]],
            [[0,0],[1,0],[1,8],[0,-5],[3,12]],
            [[0,0],[3,0],[1,4],[4,1],[-2,4]],
            [[0,0],[2,0],[2,8],[3,3],[3,9]],
            [[0,0],[2,0],[0,2],[-4,2],[-8,6]],
            [[0,0],[1,0],[6,9],[4,3],[9,13]],
            [[0,0],[3,0],[0,1],[9,-3],[3,-3]],
            [[0,0],[4,0],[0,1],[-5,1],[-25,6]],
            [[0,0],[2,0],[2,8],[3,1],[3,11]],
            [[0,0],[1,0],[3,4],[2,1],[4,5]],
            [[0,0],[1,0],[5,6],[2,1],[6,7]],
            [[0,0],[1,0],[0,1],[3,-3],[1,-3]],
            [[0,0],[1,0],[1,5],[2,5],[0,-1],[2,3]],
            [[0,0],[1,0],[0,1],[4,1],[5,2],[2,2]],
            [[0,0],[1,0],[1,2],[3,2],[3,4],[4,4]],
            [[0,0],[1,0],[2,5],[3,6],[3,4],[2,1]],
            [[0,0],[1,0],[0,1],[4,3],[3,4],[4,4]],
            [[0,0],[1,0],[0,3],[-2,3],[-3,5],[-1,5]],
            [[0,0],[1,0],[1,2],[-1,4],[-1,6],[0,6]],
            [[0,0],[1,0],[3,4],[4,4],[-1,1],[-1,2]],
            [[0,0],[1,0],[1,2],[2,3],[5,2],[6,3]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[4,3],[5,6],[6,6]],
            [[0,0],[4,0],[1,2],[-1,1],[5,-1],[3,-2]],
            [[0,0],[1,0],[2,6],[2,4],[1,6],[-1,-7]],
            [[0,0],[1,0],[1,4],[2,6],[2,2],[4,8]],
            [[0,0],[4,0],[0,1],[2,2],[2,-2],[4,-1]],
            [[0,0],[1,0],[2,3],[1,5],[-1,1],[2,6]],
            [[0,0],[1,0],[0,1],[7,4],[6,3],[4,4]],
            [[0,0],[1,0],[1,2],[5,4],[5,6],[6,6]],
            [[0,0],[1,0],[3,4],[5,5],[4,1],[5,2]],
            [[0,0],[1,0],[3,7],[4,9],[3,3],[4,5]],
            [[0,0],[1,0],[1,3],[4,4],[2,4],[4,1]],
            [[0,0],[1,0],[0,4],[-1,2],[-3,8],[-3,10]],
            [[0,0],[1,0],[0,1],[3,3],[1,4],[3,8]],
            [[0,0],[1,0],[5,8],[5,6],[2,1],[9,14]],
            [[0,0],[4,0],[0,1],[1,3],[3,-3],[4,-1]],
            [[0,0],[2,0],[0,2],[4,2],[2,4],[4,4]],
            [[0,0],[1,0],[0,1],[2,1],[5,5],[1,5]],
            [[0,0],[3,0],[0,3],[-2,3],[3,2],[2,-2]],
            [[0,0],[1,0],[0,1],[3,-3],[3,-8],[2,-8]],
            [[0,0],[1,0],[6,7],[2,1],[6,9],[9,13]],
            [[0,0],[2,0],[0,1],[5,1],[6,4],[8,4]],
            [[0,0],[4,0],[0,2],[1,3],[3,-3],[4,-2]],
            [[0,0],[2,0],[4,6],[4,3],[3,6],[-1,-3]],
            [[0,0],[2,0],[1,2],[2,3],[-3,-9],[-2,-8]],
            [[0,0],[2,0],[0,1],[5,1],[8,5],[9,5]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[4,0],[0,3],[1,3],[3,-3],[4,-3]],
            [[0,0],[1,0],[0,1],[-4,3],[-5,4],[-4,4]],
            [[0,0],[1,0],[0,1],[4,-6],[3,-6],[4,-5],[2,-5]],
            [[0,0],[1,0],[1,3],[2,5],[2,1],[3,3],[3,6]],
            [[0,0],[1,0],[1,3],[2,5],[2,1],[4,7],[4,5]],
            [[0,0],[2,0],[2,3],[3,4],[5,4],[4,1],[5,2]],
            [[0,0],[1,0],[0,1],[-5,5],[-6,4],[-11,8],[-10,7]],
            [[0,0],[1,0],[1,3],[2,1],[2,5],[4,8],[4,4]],
            [[0,0],[2,0],[0,1],[3,1],[1,3],[4,3],[4,6]],
            [[0,0],[1,0],[0,1],[-4,4],[-2,1],[-12,8],[-11,7]],
            [[0,0],[4,0],[1,2],[3,1],[1,-1],[0,1],[4,-1],[3,-2]],
            [[0,0],[2,0],[2,4],[4,4],[0,-1],[1,-1],[3,5],[4,5]],
            [[0,0],[1,0],[3,8],[3,5],[4,9],[0,-2],[4,8],[1,4]],
            [[0,0],[2,0],[2,3],[0,-3],[4,4],[3,4],[-2,-4],[-1,-4]],
            [[0,0],[1,0],[0,1],[-3,3],[-3,1],[-5,4],[-8,4],[-7,3]],
            [[0,0],[1,0],[3,5],[4,10],[-1,-3],[-1,-4],[5,12],[5,11]],
            [[0,0],[1,0],[0,1],[4,4],[3,1],[1,3],[4,2],[2,4]],
            [[0,0],[1,0],[0,1],[1,4],[2,1],[2,6],[3,4],[3,7]],
            [[0,0],[1,0],[0,2],[3,2],[4,4],[1,4],[4,7]],
            [[0,0],[1,0],[0,1],[3,2],[4,4],[3,7],[4,8]],
            [[0,0],[1,0],[0,1],[-3,2],[-4,4],[-15,11],[-16,12]],
            [[0,0],[1,0],[2,4],[-2,-5],[-1,-6],[-4,-12],[-4,-11]],
            [[0,0],[1,0],[0,1],[-3,1],[-3,3],[-5,2],[-9,6]],
            [[0,0],[1,0],[0,1],[3,2],[4,4],[2,5],[4,7]],
            [[0,0],[1,0],[0,1],[1,2],[5,4],[7,3],[8,4]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[4,5],[0,-2],[3,5],[4,3],[1,3]],
            [[0,0],[1,0],[0,1],[-4,2],[-3,3],[-10,6],[-11,7]],
            [[0,0],[1,0],[0,1],[4,1],[1,2],[3,3],[8,3]],
            [[0,0],[2,0],[1,2],[-3,4],[-2,1],[-1,4],[-3,2]],
            [[0,0],[1,0],[0,1],[2,1],[4,5],[2,5],[4,7]],
            [[0,0],[1,0],[0,2],[-3,1],[-1,3],[-5,2],[-6,3]],
            [[0,0],[2,0],[0,1],[1,-2],[4,-4],[4,-2],[3,-4]],
            [[0,0],[1,0],[0,2],[-3,1],[-4,3],[-4,2],[-1,3]],
            [[0,0],[1,0],[0,1],[-3,1],[-6,3],[-3,3],[-5,2]],
            [[0,0],[2,0],[0,1],[-5,1],[-8,2],[-3,2]],
            [[0,0],[1,0],[0,1],[-5,1],[-8,2],[-2,2]],
            [[0,0],[3,0],[0,1],[-5,1],[-8,2],[-4,2]],
            [[0,0],[2,0],[0,1],[-4,1],[-8,3],[-6,3]],
            [[0,0],[1,0],[1,3],[3,1],[3,5],[2,5]],
            [[0,0],[1,0],[5,9],[-1,-3],[5,8],[4,8]],
            [[0,0],[2,0],[1,3],[3,1],[-2,2],[-2,3]],
            [[0,0],[1,0],[2,3],[-1,2],[-1,3],[2,6]],
            [[0,0],[1,0],[1,2],[4,1],[2,3],[8,3]],
            [[0,0],[2,0],[0,1],[-8,2],[-10,3],[-6,3]],
            [[0,0],[1,0],[1,2],[2,1],[3,5],[8,10]],
            [[0,0],[3,0],[0,1],[-5,1],[-11,3],[-8,3]],
            [[0,0],[3,0],[0,1],[6,1],[1,2],[8,2]],
            [[0,0],[2,0],[0,1],[6,1],[1,2],[9,2]],
            [[0,0],[4,0],[0,1],[6,1],[1,2],[7,2]],
            [[0,0],[1,0],[1,4],[3,1],[2,7],[3,8]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[-3,1],[-4,2],[-4,6]],
            [[0,0],[1,0],[2,4],[-3,-7],[-3,-10],[-2,-9]],
            [[0,0],[1,0],[3,5],[3,9],[-1,-4],[5,11]],
            [[0,0],[4,0],[0,2],[2,2],[3,-3],[4,-3]],
            [[0,0],[1,0],[0,1],[-6,2],[-6,4],[-10,4]],
            [[0,0],[2,0],[0,2],[-6,2],[-7,3],[-2,3]],
            [[0,0],[1,0],[0,1],[1,2],[5,2],[9,6]],
            [[0,0],[1,0],[0,1],[2,1],[2,4],[8,10]],
            [[0,0],[1,0],[0,2],[2,1],[1,4],[6,9]],
            [[0,0],[1,0],[1,2],[-6,2],[-7,3],[0,3]],
            [[0,0],[1,0],[0,1],[-6,4],[-9,3],[-11,4]],
            [[0,0],[2,0],[0,1],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[0,1],[3,2],[2,3],[3,3]],
            [[0,0],[1,0],[0,1],[3,1],[1,2],[4,2]],
            [[0,0],[2,0],[0,1],[3,1],[2,3],[3,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-6,2],[-2,2]],
            [[0,0],[2,0],[0,1],[-4,1],[-6,2],[-3,2]],
            [[0,0],[3,0],[0,2],[1,2],[2,-2],[3,-2]],
            [[0,0],[1,0],[0,1],[3,1],[5,3],[2,3]],
            [[0,0],[1,0],[0,1],[5,1],[1,2],[8,2]],
            [[0,0],[2,0],[0,1],[5,1],[1,2],[7,2]],
            [[0,0],[1,0],[0,1],[5,4],[4,5],[5,5]],
            [[0,0],[3,0],[0,1],[5,1],[1,2],[6,2]],
            [[0,0],[1,0],[0,1],[-6,2],[-4,3],[-8,3]],
            [[0,0],[2,0],[0,1],[4,2],[3,4],[4,4]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,8],[2,6],[-1,-6],[-2,-8]],
            [[0,0],[1,0],[0,2],[5,2],[1,3],[6,3]],
            [[0,0],[2,0],[0,1],[4,1],[2,3],[6,3]],
            [[0,0],[1,0],[6,8],[7,9],[-6,-9],[-5,-8]],
            [[0,0],[1,0],[1,2],[6,2],[2,3],[8,3]],
            [[0,0],[1,0],[0,4],[2,4],[2,5],[-3,1]],
            [[0,0],[2,0],[0,1],[-6,1],[-10,2],[-3,2]],
            [[0,0],[4,0],[0,1],[-6,1],[-10,2],[-5,2]],
            [[0,0],[1,0],[0,1],[-6,1],[-10,2],[-2,2]],
            [[0,0],[3,0],[0,1],[-6,1],[-10,2],[-4,2]],
            [[0,0],[2,0],[0,1],[-8,2],[-12,4],[-14,4]],
            [[0,0],[1,0],[1,3],[2,5],[2,1],[6,9]],
            [[0,0],[1,0],[1,4],[3,1],[3,7],[2,7]],
            [[0,0],[3,0],[0,2],[1,-2],[4,2],[4,4]],
            [[0,0],[2,0],[0,1],[1,-4],[4,-4],[5,-3]],
            [[0,0],[2,0],[0,1],[5,3],[4,5],[5,5]],
            [[0,0],[1,0],[0,1],[4,1],[8,3],[2,3]],
            [[0,0],[2,0],[0,1],[-8,2],[-6,3],[-11,3]],
            [[0,0],[1,0],[0,1],[-3,3],[-4,2],[-13,8]],
            [[0,0],[2,0],[0,1],[4,4],[8,4],[2,3]],
            [[0,0],[1,0],[0,1],[2,1],[3,3],[3,10]],
            [[0,0],[1,0],[0,1],[-8,2],[-4,3],[-11,3]],
            [[0,0],[2,0],[0,2],[6,2],[1,3],[7,3]],
            [[0,0],[1,0],[0,1],[4,1],[7,4],[3,4]],
            [[0,0],[2,0],[1,2],[-2,1],[-3,2],[-3,6]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-4,1],[-5,2],[-2,2]],
            [[0,0],[2,0],[0,1],[4,1],[1,2],[5,2]],
            [[0,0],[1,0],[0,1],[4,1],[1,2],[6,2]],
            [[0,0],[1,0],[0,1],[-6,3],[-6,2],[-8,3]],
            [[0,0],[1,0],[5,8],[4,8],[5,9]],
            [[0,0],[1,0],[0,2],[2,3],[2,8]],
            [[0,0],[1,0],[2,3],[-3,-6],[-3,-8]],
            [[0,0],[1,0],[1,2],[-2,2],[-2,5]],
            [[0,0],[3,0],[1,2],[5,1],[6,2]],
            [[0,0],[1,0],[5,6],[8,9],[4,3]],
            [[0,0],[1,0],[0,2],[3,6],[3,8]],
            [[0,0],[1,0],[4,8],[6,10],[6,11]],
            [[0,0],[2,0],[0,1],[-6,2],[-12,5]],
            [[0,0],[3,0],[1,2],[6,1],[7,2]],
            [[0,0],[2,0],[1,2],[2,-4],[0,-4]],
            [[0,0],[1,0],[0,2],[2,4],[2,10]],
            [[0,0],[1,0],[2,6],[3,7],[3,2]],
            [[0,0],[1,0],[0,1],[4,2],[9,7]],
            [[0,0],[1,0],[2,3],[-3,2],[-4,3]],
            [[0,0],[1,0],[0,1],[-8,4],[-10,6]],
            [[0,0],[2,0],[0,1],[1,2],[8,2]],
            [[0,0],[3,0],[0,1],[1,2],[7,2]],
            [[0,0],[1,0],[0,1],[1,2],[9,2]],
            [[0,0],[1,0],[0,1],[-16,6],[-21,8]],
            [[0,0],[1,0],[0,3],[3,6],[3,9]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[2,4],[4,2],[4,6]],
            [[0,0],[2,0],[1,4],[-1,2],[4,4]],
            [[0,0],[1,0],[2,9],[4,15],[5,21]],
            [[0,0],[1,0],[4,5],[5,6],[5,1]],
            [[0,0],[1,0],[0,2],[-4,4],[-6,8]],
            [[0,0],[1,0],[1,6],[2,1],[2,11]],
            [[0,0],[3,0],[0,1],[2,2],[9,2]],
            [[0,0],[2,0],[0,1],[2,2],[10,2]],
            [[0,0],[3,0],[0,1],[-4,1],[-16,5]],
            [[0,0],[1,0],[0,2],[1,3],[7,3]],
            [[0,0],[1,0],[1,2],[-3,3],[-3,6]],
            [[0,0],[1,0],[0,2],[4,12],[4,14]],
            [[0,0],[2,0],[1,2],[-3,2],[-3,6]],
            [[0,0],[1,0],[3,4],[-2,2],[-2,4]],
            [[0,0],[2,0],[5,6],[3,6],[5,8]],
            [[0,0],[2,0],[0,1],[9,4],[12,4]],
            [[0,0],[2,0],[0,1],[2,3],[8,3]],
            [[0,0],[2,0],[0,1],[-9,3],[-15,6]],
            [[0,0],[1,0],[0,1],[-6,2],[-10,6]],
            [[0,0],[1,0],[2,8],[3,4],[3,11]],
            [[0,0],[1,0],[2,7],[3,10],[3,2]],
            [[0,0],[1,0],[0,1],[1,2],[13,8]],
            [[0,0],[1,0],[0,1],[2,3],[10,3]],
            [[0,0],[2,0],[0,2],[1,3],[8,3]],
            [[0,0],[1,0],[1,2],[3,4],[9,4]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[2,4],[10,12]],
            [[0,0],[2,0],[0,1],[-8,2],[-20,6]],
            [[0,0],[3,0],[3,6],[4,1],[4,7]],
            [[0,0],[2,0],[0,1],[3,3],[3,10]],
            [[0,0],[1,0],[2,8],[3,10],[3,2]],
            [[0,0],[3,0],[0,1],[-20,4],[-24,5]],
            [[0,0],[2,0],[0,1],[8,4],[3,4]],
            [[0,0],[1,0],[3,4],[-3,3],[-3,4]],
            [[0,0],[1,0],[0,1],[-22,8],[-24,9]],
            [[0,0],[1,0],[10,12],[-12,-16],[-11,-15]],
            [[0,0],[1,0],[1,4],[-4,8],[-4,9]],
            [[0,0],[2,0],[2,8],[3,10],[3,1]],
            [[0,0],[3,0],[0,1],[-5,1],[-20,6]],
            [[0,0],[1,0],[0,1],[-22,8],[-30,11]],
            [[0,0],[1,0],[1,3],[2,1],[2,5]],
            [[0,0],[1,0],[0,1],[2,2],[2,5]],
            [[0,0],[2,0],[0,1],[4,-2],[2,-2]],
            [[0,0],[2,0],[0,1],[1,2],[6,2]],
            [[0,0],[1,0],[0,1],[1,2],[7,2]],
            [[0,0],[1,0],[0,1],[-6,3],[-8,5]],
            [[0,0],[3,0],[1,2],[5,2],[5,1]],
            [[0,0],[2,0],[1,2],[0,-2],[2,-4]],
            [[0,0],[2,0],[0,1],[6,-4],[4,-4]],
            [[0,0],[1,0],[0,1],[2,2],[9,2]],
            [[0,0],[1,0],[0,2],[-3,3],[-5,7]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[0,1],[2,2],[8,2]],
            [[0,0],[1,0],[1,5],[2,1],[2,9]],
            [[0,0],[1,0],[5,8],[4,8],[6,11]],
            [[0,0],[1,0],[3,4],[0,3],[3,6]],
            [[0,0],[1,0],[2,5],[3,7],[3,1]],
            [[0,0],[2,0],[2,4],[4,4],[0,-2]],
            [[0,0],[1,0],[2,3],[-1,3],[2,6]],
            [[0,0],[1,0],[0,2],[3,4],[3,8]],
            [[0,0],[2,0],[0,1],[-4,1],[-12,5]],
            [[0,0],[1,0],[2,6],[3,2],[3,8]],
            [[0,0],[1,0],[1,3],[3,8],[3,1]],
            [[0,0],[3,0],[1,2],[6,1],[8,2]],
            [[0,0],[1,0],[2,3],[-4,-8],[-4,-10]],
            [[0,0],[2,0],[0,1],[3,2],[10,2]],
            [[0,0],[1,0],[2,3],[0,3],[2,9]],
            [[0,0],[1,0],[1,6],[2,10],[2,1]],
            [[0,0],[1,0],[4,8],[6,11],[7,12]],
            [[0,0],[1,0],[0,1],[3,3],[8,13]],
            [[0,0],[2,0],[0,1],[-14,4],[-20,6]],
            [[0,0],[1,0],[2,7],[2,3],[6,19]],
            [[0,0],[4,0],[0,1],[1,2],[8,2]],
            [[0,0],[3,0],[0,1],[1,2],[9,2]],
            [[0,0],[1,0],[0,1],[-9,3],[-15,6]],
            [[0,0],[1,0],[3,4],[-8,-12],[-5,-9]],
            [[0,0],[2,0],[0,1],[-12,3],[-16,5]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[0,1],[-20,4],[-24,5]],
            [[0,0],[1,0],[0,1],[-21,8],[-22,8]],
            [[0,0],[2,0],[1,2],[3,4],[8,4]],
            [[0,0],[3,0],[0,3],[1,5],[5,1]],
            [[0,0],[2,0],[1,2],[-2,2],[-5,8]],
            [[0,0],[1,0],[1,2],[2,3],[10,3]],
            [[0,0],[1,0],[0,2],[3,1],[3,8]],
            [[0,0],[1,0],[1,4],[3,2],[3,10]],
            [[0,0],[1,0],[0,1],[5,3],[12,10]],
            [[0,0],[1,0],[0,1],[-12,9],[-16,13]],
            [[0,0],[1,0],[2,8],[3,9],[3,2]],
            [[0,0],[1,0],[2,7],[3,10],[3,1]],
            [[0,0],[1,0],[2,3],[3,4],[9,4]],
            [[0,0],[1,0],[0,3],[4,9],[4,11]],
            [[0,0],[1,0],[0,1],[-6,3],[-12,9]],
            [[0,0],[3,0],[0,1],[-8,2],[-20,6]],
            [[0,0],[1,0],[0,2],[2,3],[10,3]],
            [[0,0],[1,0],[1,3],[-3,3],[-3,7]],
            [[0,0],[1,0],[2,8],[3,2],[3,11]],
            [[0,0],[4,0],[0,1],[-24,5],[-20,4]],
            [[0,0],[1,0],[1,4],[3,11],[3,1]],
            [[0,0],[1,0],[0,1],[-22,8],[-27,10]],
            [[0,0],[1,0],[0,1],[1,2],[5,2]],
            [[0,0],[1,0],[0,1],[-4,2],[-6,4]],
            [[0,0],[1,0],[0,1],[2,2],[7,2]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[-2,2],[-4,6]],
            [[0,0],[1,0],[1,4],[2,1],[2,7]],
            [[0,0],[1,0],[3,6],[4,6],[-1,-3]],
            [[0,0],[2,0],[0,2],[-6,2]],
            [[0,0],[1,0],[1,2],[-6,2]],
            [[0,0],[3,0],[1,2],[-4,2]],
            [[0,0],[2,0],[0,1],[-15,6]],
            [[0,0],[1,0],[2,9],[2,1]],
            [[0,0],[1,0],[2,3],[2,10]],
            [[0,0],[1,0],[2,11],[2,4]],
            [[0,0],[1,0],[2,6],[5,12]],
            [[0,0],[1,0],[2,3],[7,3]],
            [[0,0],[1,0],[5,6],[11,12]],
            [[0,0],[1,0],[10,14],[11,15]],
            [[0,0],[1,0],[3,10],[3,5]],
            [[0,0],[1,0],[5,9],[5,6]],
            [[0,0],[5,0],[0,1],[-8,1]],
            [[0,0],[6,0],[0,1],[-7,1]],
            [[0,0],[1,0],[1,3],[-3,3]],
            [[0,0],[1,0],[0,1],[-14,8]],
            [[0,0],[1,0],[4,8],[5,8]],
            [[0,0],[1,0],[3,5],[7,9]],
            [[0,0],[1,0],[2,11],[2,5]],
            [[0,0],[1,0],[2,6],[4,6]],
            [[0,0],[1,0],[3,11],[3,7]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[5,0],[0,1],[-7,1]],
            [[0,0],[4,0],[0,1],[-8,1]],
            [[0,0],[1,0],[0,6],[1,6]],
            [[0,0],[2,0],[1,2],[6,2]],
            [[0,0],[1,0],[4,5],[9,10]],
            [[0,0],[1,0],[2,9],[2,3]],
            [[0,0],[4,0],[0,2],[2,-2]],
            [[0,0],[1,0],[8,10],[10,12]],
            [[0,0],[1,0],[5,6],[5,3]],
            [[0,0],[5,0],[0,1],[-6,1]],
            [[0,0],[4,0],[0,1],[-7,1]],
            [[0,0],[3,0],[0,1],[-8,1]],
            [[0,0],[2,0],[0,1],[-33,12]],
            [[0,0],[1,0],[1,5],[-5,5]],
            [[0,0],[4,0],[0,1],[-6,1]],
            [[0,0],[1,0],[0,5],[1,5]],
            [[0,0],[3,0],[0,1],[-7,1]],
            [[0,0],[2,0],[0,1],[-8,1]],
            [[0,0],[2,0],[0,2],[-4,2]],
            [[0,0],[2,0],[0,3],[2,3]],
            [[0,0],[1,0],[1,2],[-4,2]],
            [[0,0],[1,0],[0,1],[-12,9]],
            [[0,0],[1,0],[2,3],[2,8]],
            [[0,0],[1,0],[2,7],[2,1]],
            [[0,0],[1,0],[2,9],[2,4]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 501-1000.
function canonical_dim3_facet_cache_2(id)
    // Convert the id
    id -:= 500;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[-2,8]],
            [[0,0],[1,0],[0,4],[6,10]],
            [[0,0],[1,0],[0,1],[-33,12]],
            [[0,0],[2,0],[1,2],[-9,12]],
            [[0,0],[4,0],[0,1],[-5,1]],
            [[0,0],[1,0],[0,1],[-8,1]],
            [[0,0],[3,0],[0,1],[-6,1]],
            [[0,0],[2,0],[0,1],[-7,1]],
            [[0,0],[1,0],[1,3],[4,3]],
            [[0,0],[1,0],[0,3],[6,15]],
            [[0,0],[2,0],[0,3],[-9,12]],
            [[0,0],[1,0],[0,1],[-7,1]],
            [[0,0],[1,0],[0,4],[1,4]],
            [[0,0],[3,0],[0,1],[-5,1]],
            [[0,0],[2,0],[0,1],[-6,1]],
            [[0,0],[1,0],[2,4],[4,6]],
            [[0,0],[1,0],[2,7],[2,3]],
            [[0,0],[3,0],[0,1],[-28,8]],
            [[0,0],[1,0],[0,1],[-30,21]],
            [[0,0],[1,0],[2,4],[9,4]],
            [[0,0],[1,0],[8,22],[11,30]],
            [[0,0],[2,0],[3,6],[7,10]],
            [[0,0],[2,0],[3,4],[11,12]],
            [[0,0],[3,0],[0,1],[-4,1]],
            [[0,0],[2,0],[0,1],[-5,1]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-6,1]],
            [[0,0],[1,0],[2,5],[2,1]],
            [[0,0],[1,0],[2,3],[5,6]],
            [[0,0],[2,0],[0,1],[-28,8]],
            [[0,0],[1,0],[3,11],[3,1]],
            [[0,0],[1,0],[0,1],[-30,25]],
            [[0,0],[1,0],[8,22],[10,27]],
            [[0,0],[1,0],[0,1],[-5,1]],
            [[0,0],[1,0],[0,3],[1,3]],
            [[0,0],[2,0],[0,1],[-4,1]],
            [[0,0],[1,0],[1,2],[-6,16]],
            [[0,0],[1,0],[3,12],[0,6]],
            [[0,0],[1,0],[8,22],[9,24]],
            [[0,0],[2,0],[0,2],[-12,8]],
            [[0,0],[1,0],[3,4],[3,12]],
            [[0,0],[1,0],[0,1],[21,8]],
            [[0,0],[1,0],[4,5],[12,21]],
            [[0,0],[1,0],[0,5],[4,9]],
            [[0,0],[1,0],[0,1],[-4,1]],
            [[0,0],[2,0],[0,1],[-3,1]],
            [[0,0],[1,0],[2,8],[6,20]],
            [[0,0],[1,0],[3,4],[9,4]],
            [[0,0],[1,0],[3,7],[10,21]],
            [[0,0],[2,0],[1,3],[8,3]],
            [[0,0],[1,0],[2,3],[10,3]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[1,2]],
            [[0,0],[1,0],[0,1],[-3,1]],
            [[0,0],[1,0],[2,6],[6,10]],
            [[0,0],[1,0],[3,5],[10,12]],
            [[0,0],[1,0],[3,10],[3,2]],
            [[0,0],[1,0],[4,7],[9,12]],
            [[0,0],[1,0],[0,3],[4,15]],
            [[0,0],[1,0],[14,20],[15,21]],
            [[0,0],[1,0],[4,20],[5,24]],
            [[0,0],[2,0],[3,4],[8,4]],
            [[0,0],[3,0],[0,4],[3,4]],
            [[0,0],[1,0],[1,3],[-6,3]],
            [[0,0],[1,0],[1,4],[-4,4]],
            [[0,0],[2,0],[1,2],[-6,9]],
            [[0,0],[1,0],[0,1],[-24,9]],
            [[0,0],[1,0],[3,6],[3,12]],
            [[0,0],[1,0],[3,9],[6,15]],
            [[0,0],[2,0],[2,4],[6,4]],
            [[0,0],[1,0],[3,5],[13,20]],
            [[0,0],[1,0],[10,17],[2,1]],
            [[0,0],[1,0],[3,11],[3,4]],
            [[0,0],[1,0],[11,19],[4,5]],
            [[0,0],[1,0],[5,6],[10,16]],
            [[0,0],[1,0],[4,15],[4,18]],
            [[0,0],[1,0],[3,15],[5,24]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,8],[8,14]],
            [[0,0],[1,0],[0,2],[-10,12]],
            [[0,0],[3,0],[1,2],[9,2]],
            [[0,0],[1,0],[1,2],[-6,9]],
            [[0,0],[1,0],[0,3],[5,8]],
            [[0,0],[1,0],[6,16],[8,21]],
            [[0,0],[2,0],[1,3],[-5,3]],
            [[0,0],[2,0],[3,6],[5,6]],
            [[0,0],[1,0],[1,2],[-2,20]],
            [[0,0],[4,0],[0,2],[-6,2]],
            [[0,0],[3,0],[1,2],[-6,2]],
            [[0,0],[1,0],[1,2],[-8,2]],
            [[0,0],[2,0],[0,2],[-8,2]],
            [[0,0],[2,0],[2,3],[-3,3]],
            [[0,0],[1,0],[2,11],[2,1]],
            [[0,0],[1,0],[2,3],[2,12]],
            [[0,0],[4,0],[1,2],[-5,2]],
            [[0,0],[1,0],[2,11],[2,2]],
            [[0,0],[3,0],[0,2],[-7,2]],
            [[0,0],[1,0],[0,1],[-20,16]],
            [[0,0],[1,0],[6,9],[9,12]],
            [[0,0],[1,0],[3,8],[3,1]],
            [[0,0],[1,0],[5,7],[10,12]],
            [[0,0],[2,0],[0,1],[-20,6]],
            [[0,0],[1,0],[8,11],[4,3]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[1,2],[7,2]],
            [[0,0],[3,0],[0,3],[3,3]],
            [[0,0],[2,0],[1,2],[8,2]],
            [[0,0],[1,0],[4,8],[6,10]],
            [[0,0],[1,0],[3,4],[3,9]],
            [[0,0],[1,0],[2,11],[2,3]],
            [[0,0],[1,0],[2,5],[2,12]],
            [[0,0],[1,0],[6,8],[10,12]],
            [[0,0],[2,0],[4,6],[4,2]],
            [[0,0],[1,0],[2,5],[7,15]],
            [[0,0],[1,0],[3,8],[3,2]],
            [[0,0],[3,0],[2,3],[-2,3]],
            [[0,0],[1,0],[2,3],[-4,3]],
            [[0,0],[1,0],[8,9],[-11,-15]],
            [[0,0],[1,0],[7,12]],
            [[0,0],[1,0],[9,12]],
            [[0,0],[1,0],[1,4]],
            [[0,0],[2,0],[0,2]],
            [[0,0],[1,0],[21,24]],
            [[0,0],[2,0],[2,8]],
            [[0,0],[4,0],[0,4]],
            [[0,0],[1,0],[0,1],[4,2],[1,3],[6,4],[2,4]],
            [[0,0],[2,0],[0,4],[2,1],[1,3],[-2,2],[-3,4]],
            [[0,0],[1,0],[2,3],[-2,1],[2,4],[-1,4],[-2,2]],
            [[0,0],[1,0],[2,5],[0,-1],[3,7],[3,3],[5,7]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[4,2],[6,4],[1,4]],
            [[0,0],[1,0],[0,3],[-1,1],[-3,5],[-3,9]],
            [[0,0],[1,0],[0,1],[5,2],[5,5],[4,5]],
            [[0,0],[1,0],[5,8],[2,1],[2,4],[8,11]],
            [[0,0],[1,0],[4,5],[3,3],[-6,-8],[-8,-12]],
            [[0,0],[1,0],[0,1],[4,3],[3,1],[4,7]],
            [[0,0],[1,0],[2,3],[4,4],[4,1],[7,4]],
            [[0,0],[1,0],[0,1],[-8,4],[-7,3],[-4,4]],
            [[0,0],[2,0],[2,3],[5,4],[4,4],[5,1]],
            [[0,0],[1,0],[0,1],[6,1],[9,2],[2,2]],
            [[0,0],[2,0],[0,1],[6,1],[2,2],[8,2]],
            [[0,0],[3,0],[0,1],[6,1],[2,2],[7,2]],
            [[0,0],[1,0],[0,1],[-6,1],[-9,2],[-2,2]],
            [[0,0],[2,0],[0,1],[-6,1],[-9,2],[-3,2]],
            [[0,0],[3,0],[0,1],[-6,1],[-9,2],[-4,2]],
            [[0,0],[2,0],[0,1],[6,1],[7,2],[3,2]],
            [[0,0],[1,0],[0,1],[6,1],[8,2],[3,2]],
            [[0,0],[1,0],[0,1],[-5,1],[-6,2],[-2,2]],
            [[0,0],[2,0],[1,3],[1,-2],[0,2],[2,3]],
            [[0,0],[1,0],[0,1],[-5,1],[-7,2],[-3,2]],
            [[0,0],[6,0],[0,1],[5,-1],[-2,1],[3,-1]],
            [[0,0],[1,0],[2,4],[3,4],[-1,-3]],
            [[0,0],[1,0],[0,2],[-3,2],[-3,1]],
            [[0,0],[1,0],[1,4],[2,2],[6,14]],
            [[0,0],[1,0],[0,1],[-20,14],[-21,15]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,4],[4,10],[4,6]],
            [[0,0],[1,0],[5,7],[8,14],[11,19]],
            [[0,0],[1,0],[0,3],[-3,1],[-3,6]],
            [[0,0],[1,0],[1,5],[4,11],[4,9]],
            [[0,0],[1,0],[1,3],[6,13],[7,14]],
            [[0,0],[2,0],[3,4],[5,5],[5,1]],
            [[0,0],[1,0],[1,8],[0,-3],[3,10]],
            [[0,0],[1,0],[4,9],[7,14],[8,17]],
            [[0,0],[1,0],[4,7],[4,4],[1,4]],
            [[0,0],[3,0],[0,1],[12,-4],[19,-6]],
            [[0,0],[1,0],[0,4],[-4,3],[-5,4]],
            [[0,0],[1,0],[0,3],[2,11],[3,14]],
            [[0,0],[1,0],[0,1],[3,2],[11,2]],
            [[0,0],[2,0],[1,2],[6,1],[9,2]],
            [[0,0],[1,0],[1,3],[4,8],[4,4]],
            [[0,0],[1,0],[3,5],[4,3],[7,7]],
            [[0,0],[1,0],[1,8],[0,-1],[3,8]],
            [[0,0],[1,0],[0,4],[2,5],[-3,1]],
            [[0,0],[1,0],[7,8],[-11,-15],[8,9]],
            [[0,0],[1,0],[7,12],[8,13],[4,5]],
            [[0,0],[2,0],[1,4],[-1,4],[3,2]],
            [[0,0],[2,0],[1,2],[5,1],[7,2]],
            [[0,0],[1,0],[0,2],[-4,1],[-7,2]],
            [[0,0],[1,0],[0,1],[3,2],[9,2]],
            [[0,0],[1,0],[1,5],[2,8],[2,1]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[0,2],[-4,2],[-4,1]],
            [[0,0],[2,0],[1,2],[-4,2],[-4,1]],
            [[0,0],[1,0],[0,2],[-5,1],[-6,2]],
            [[0,0],[1,0],[1,2],[4,6],[4,2]],
            [[0,0],[1,0],[1,6],[0,-2],[3,6]],
            [[0,0],[2,0],[2,8],[3,2],[3,10]],
            [[0,0],[2,0],[2,8],[3,9],[3,1]],
            [[0,0],[2,0],[0,1],[5,-3],[3,-3]],
            [[0,0],[2,0],[0,1],[-3,1],[-9,4]],
            [[0,0],[1,0],[4,5],[2,1],[8,9]],
            [[0,0],[1,0],[4,5],[3,2],[7,8]],
            [[0,0],[1,0],[7,8],[2,1],[10,11]],
            [[0,0],[1,0],[7,8],[3,2],[9,10]],
            [[0,0],[1,0],[0,2],[-5,2]],
            [[0,0],[2,0],[1,2],[-3,2]],
            [[0,0],[1,0],[2,7],[2,2]],
            [[0,0],[1,0],[3,4],[7,8]],
            [[0,0],[1,0],[1,4],[-2,16]],
            [[0,0],[1,0],[7,18],[8,22]],
            [[0,0],[1,0],[3,12],[5,16]],
            [[0,0],[1,0],[5,11],[10,21]],
            [[0,0],[2,0],[1,2],[-7,2]],
            [[0,0],[1,0],[2,4],[2,12]],
            [[0,0],[1,0],[0,4],[-5,4]],
            [[0,0],[1,0],[3,8],[7,16]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[-2,14]],
            [[0,0],[1,0],[5,12],[6,16]],
            [[0,0],[1,0],[3,4],[7,4]],
            [[0,0],[1,0],[8,13],[3,3]],
            [[0,0],[1,0],[7,9],[4,3]],
            [[0,0],[2,0],[5,6],[5,1]],
            [[0,0],[1,0],[13,17],[3,2]],
            [[0,0],[1,0],[6,7],[-14,-20]],
            [[0,0],[1,0],[10,15],[15,22]],
            [[0,0],[1,0],[4,11],[4,6]],
            [[0,0],[1,0],[6,20],[6,21]],
            [[0,0],[1,0],[1,2],[-3,18]],
            [[0,0],[1,0],[4,9],[10,21]],
            [[0,0],[1,0],[3,11],[3,3]],
            [[0,0],[1,0],[4,9],[4,3]],
            [[0,0],[1,0],[0,3],[-8,3]],
            [[0,0],[1,0],[6,21],[7,24]],
            [[0,0],[1,0],[11,19],[3,3]],
            [[0,0],[1,0],[0,2],[-12,20]],
            [[0,0],[1,0],[1,2],[13,8]],
            [[0,0],[1,0],[0,4],[-6,16]],
            [[0,0],[1,0],[15,18],[21,25]],
            [[0,0],[1,0],[1,4],[7,4]],
            [[0,0],[1,0],[9,13],[4,3]],
            [[0,0],[1,0],[0,4],[-6,22]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,4],[-6,10]],
            [[0,0],[1,0],[0,5],[3,14]],
            [[0,0],[1,0],[0,1],[-28,22]],
            [[0,0],[1,0],[8,21],[8,22]],
            [[0,0],[1,0],[4,9],[4,14]],
            [[0,0],[1,0],[20,24],[21,25]],
            [[0,0],[1,0],[5,9],[5,4]],
            [[0,0],[1,0],[3,10],[3,1]],
            [[0,0],[1,0],[9,12],[13,16]],
            [[0,0],[1,0],[0,4],[4,12]],
            [[0,0],[1,0],[11,19],[2,1]],
            [[0,0],[1,0],[1,5],[6,10]],
            [[0,0],[1,0],[1,5],[6,5]],
            [[0,0],[1,0],[14,20],[19,27]],
            [[0,0],[1,0],[3,11],[3,2]],
            [[0,0],[1,0],[3,10],[0,7]],
            [[0,0],[1,0],[4,10],[4,3]],
            [[0,0],[1,0],[0,3],[-9,12]],
            [[0,0],[1,0],[3,6],[7,6]],
            [[0,0],[1,0],[1,3],[10,3]],
            [[0,0],[1,0],[3,6],[9,12]],
            [[0,0],[1,0],[1,3],[2,3]],
            [[0,0],[2,0],[0,1],[1,-2]],
            [[0,0],[3,0],[0,1],[2,-1]],
            [[0,0],[4,0],[0,1],[1,-1]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[4,0],[0,1],[2,-1]],
            [[0,0],[2,0],[0,1],[1,-3]],
            [[0,0],[1,0],[2,3],[-3,-5]],
            [[0,0],[4,0],[0,1],[3,-1]],
            [[0,0],[1,0],[4,5],[2,1]],
            [[0,0],[1,0],[2,3],[-1,-4]],
            [[0,0],[2,0],[0,1],[1,-4]],
            [[0,0],[5,0],[0,1],[4,-1]],
            [[0,0],[5,0],[0,1],[2,-1]],
            [[0,0],[5,0],[0,1],[1,-1]],
            [[0,0],[1,0],[2,3],[-4,-7]],
            [[0,0],[1,0],[3,5],[3,3]],
            [[0,0],[1,0],[0,3],[-2,3]],
            [[0,0],[1,0],[3,5],[-1,-4]],
            [[0,0],[3,0],[0,1],[7,-2]],
            [[0,0],[1,0],[0,3],[-2,1]],
            [[0,0],[1,0],[6,7],[2,1]],
            [[0,0],[1,0],[3,4],[3,2]],
            [[0,0],[1,0],[0,2],[-3,2]],
            [[0,0],[1,0],[2,5],[2,2]],
            [[0,0],[1,0],[2,4],[3,4]],
            [[0,0],[6,0],[0,1],[5,-1]],
            [[0,0],[3,0],[0,1],[2,-3]],
            [[0,0],[6,0],[0,1],[1,-1]],
            [[0,0],[1,0],[2,5],[-2,-7]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,5],[-5,-7]],
            [[0,0],[4,0],[0,1],[3,-2]],
            [[0,0],[1,0],[3,5],[-4,-7]],
            [[0,0],[1,0],[1,6],[2,6]],
            [[0,0],[6,0],[0,1],[4,-1]],
            [[0,0],[4,0],[0,1],[1,-2]],
            [[0,0],[3,0],[0,1],[1,-3]],
            [[0,0],[2,0],[0,1],[1,-5]],
            [[0,0],[6,0],[0,1],[3,-1]],
            [[0,0],[2,0],[1,2],[-1,-4]],
            [[0,0],[6,0],[0,1],[2,-1]],
            [[0,0],[1,0],[4,7],[2,1]],
            [[0,0],[1,0],[4,7],[-1,-4]],
            [[0,0],[1,0],[2,3],[-2,1]],
            [[0,0],[1,0],[2,5],[-1,-6]],
            [[0,0],[1,0],[8,9],[2,1]],
            [[0,0],[2,0],[1,2],[2,-3]],
            [[0,0],[1,0],[3,4],[3,1]],
            [[0,0],[1,0],[2,7],[3,7]],
            [[0,0],[2,0],[1,2],[-2,-5]],
            [[0,0],[2,0],[1,2],[-1,-5]],
            [[0,0],[1,0],[4,5],[-7,-9]],
            [[0,0],[2,0],[1,3],[-1,-4]],
            [[0,0],[1,0],[4,7],[4,5]],
            [[0,0],[1,0],[3,7],[-1,-6]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[5,9],[-1,-4]],
            [[0,0],[1,0],[2,3],[-3,-10]],
            [[0,0],[1,0],[2,5],[-1,-8]],
            [[0,0],[1,0],[10,11],[2,1]],
            [[0,0],[1,0],[2,6],[3,6]],
            [[0,0],[1,0],[1,4],[3,6]],
            [[0,0],[2,0],[1,3],[2,-3]],
            [[0,0],[1,0],[2,3],[-1,3]],
            [[0,0],[1,0],[1,4],[3,4]],
            [[0,0],[1,0],[3,5],[3,2]],
            [[0,0],[1,0],[6,8],[7,9]],
            [[0,0],[1,0],[4,5],[7,8]],
            [[0,0],[1,0],[1,2],[5,2]],
            [[0,0],[1,0],[0,2],[-4,6]],
            [[0,0],[1,0],[2,5],[-4,-11]],
            [[0,0],[1,0],[3,5],[-6,-11]],
            [[0,0],[4,0],[0,1],[2,-3]],
            [[0,0],[4,0],[1,2],[1,-2]],
            [[0,0],[1,0],[6,7],[-7,-9]],
            [[0,0],[2,0],[1,3],[-1,-5]],
            [[0,0],[1,0],[2,3],[-8,-13]],
            [[0,0],[1,0],[4,5],[-8,-11]],
            [[0,0],[1,0],[7,9],[5,5]],
            [[0,0],[1,0],[0,5],[-2,1]],
            [[0,0],[1,0],[4,9],[2,1]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,5],[-2,3]],
            [[0,0],[1,0],[6,7],[-5,-8]],
            [[0,0],[1,0],[2,7],[-1,-8]],
            [[0,0],[3,0],[0,1],[13,-4]],
            [[0,0],[1,0],[0,3],[-4,1]],
            [[0,0],[5,0],[0,1],[11,-2]],
            [[0,0],[1,0],[5,7],[5,5]],
            [[0,0],[3,0],[2,3],[3,-2]],
            [[0,0],[1,0],[8,11],[2,1]],
            [[0,0],[1,0],[5,9],[3,3]],
            [[0,0],[5,0],[0,1],[13,-2]],
            [[0,0],[3,0],[1,3],[3,-2]],
            [[0,0],[2,0],[1,4],[2,-3]],
            [[0,0],[1,0],[3,8],[3,5]],
            [[0,0],[1,0],[4,5],[4,2]],
            [[0,0],[1,0],[5,11],[2,2]],
            [[0,0],[1,0],[6,7],[9,10]],
            [[0,0],[1,0],[0,1],[-12,10]],
            [[0,0],[1,0],[3,7],[3,4]],
            [[0,0],[1,0],[3,5],[-3,-8]],
            [[0,0],[1,0],[4,9],[4,10]],
            [[0,0],[1,0],[3,5],[3,1]],
            [[0,0],[1,0],[4,7],[-6,-11]],
            [[0,0],[6,0],[0,1],[1,-2]],
            [[0,0],[1,0],[5,7],[-7,-11]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,4],[-1,-5]],
            [[0,0],[3,0],[0,1],[2,-5]],
            [[0,0],[1,0],[2,7],[-3,-11]],
            [[0,0],[6,0],[0,1],[5,-2]],
            [[0,0],[2,0],[3,4],[-2,-5]],
            [[0,0],[6,0],[0,1],[3,-2]],
            [[0,0],[1,0],[3,7],[-4,-11]],
            [[0,0],[2,0],[1,2],[-3,-7]],
            [[0,0],[2,0],[1,2],[-2,-7]],
            [[0,0],[3,0],[2,3],[-1,-3]],
            [[0,0],[1,0],[2,5],[-5,-13]],
            [[0,0],[3,0],[0,1],[1,-5]],
            [[0,0],[1,0],[6,7],[-9,-11]],
            [[0,0],[3,0],[1,3],[1,-3]],
            [[0,0],[1,0],[2,3],[-4,1]],
            [[0,0],[1,0],[4,13],[2,3]],
            [[0,0],[1,0],[3,7],[-1,1]],
            [[0,0],[1,0],[6,7],[-7,-10]],
            [[0,0],[1,0],[4,11],[-1,-6]],
            [[0,0],[1,0],[5,9],[5,7]],
            [[0,0],[1,0],[2,7],[-1,-10]],
            [[0,0],[1,0],[6,11],[2,1]],
            [[0,0],[1,0],[2,8],[3,8]],
            [[0,0],[1,0],[7,10],[4,4]],
            [[0,0],[2,0],[1,2],[-2,-6]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,7],[3,1]],
            [[0,0],[1,0],[5,7],[-5,-9]],
            [[0,0],[1,0],[4,7],[4,4]],
            [[0,0],[1,0],[9,10],[12,14]],
            [[0,0],[4,0],[0,1],[13,-3]],
            [[0,0],[1,0],[0,4],[-3,1]],
            [[0,0],[1,0],[5,8],[3,2]],
            [[0,0],[1,0],[11,13],[2,1]],
            [[0,0],[1,0],[3,7],[-2,-9]],
            [[0,0],[1,0],[5,8],[5,6]],
            [[0,0],[1,0],[0,3],[-4,3]],
            [[0,0],[1,0],[8,9],[11,12]],
            [[0,0],[1,0],[7,11],[3,3]],
            [[0,0],[2,0],[1,3],[-2,3]],
            [[0,0],[1,0],[3,7],[3,3]],
            [[0,0],[1,0],[4,7],[-3,-8]],
            [[0,0],[1,0],[4,10],[5,12]],
            [[0,0],[1,0],[5,6],[9,10]],
            [[0,0],[1,0],[3,7],[-5,-13]],
            [[0,0],[4,0],[0,1],[3,-4]],
            [[0,0],[5,0],[0,1],[1,-3]],
            [[0,0],[1,0],[2,7],[-3,-13]],
            [[0,0],[4,0],[0,1],[1,-4]],
            [[0,0],[1,0],[2,3],[-11,-17]],
            [[0,0],[1,0],[2,9],[-2,-11]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[3,5],[-2,-5]],
            [[0,0],[1,0],[6,7],[-11,-13]],
            [[0,0],[1,0],[5,9],[-6,-11]],
            [[0,0],[2,0],[1,3],[-2,-7]],
            [[0,0],[5,0],[0,1],[4,-3]],
            [[0,0],[1,0],[9,11],[-5,-8]],
            [[0,0],[1,0],[8,9],[-7,-10]],
            [[0,0],[1,0],[3,11],[-1,-8]],
            [[0,0],[1,0],[3,5],[-5,-14]],
            [[0,0],[1,0],[6,11],[4,5]],
            [[0,0],[1,0],[3,5],[-1,3]],
            [[0,0],[1,0],[2,3],[-5,-16]],
            [[0,0],[1,0],[5,13],[-1,-6]],
            [[0,0],[1,0],[2,7],[-1,-12]],
            [[0,0],[1,0],[1,6],[3,6]],
            [[0,0],[1,0],[9,14],[10,16]],
            [[0,0],[1,0],[4,5],[4,1]],
            [[0,0],[1,0],[3,8],[-2,-9]],
            [[0,0],[1,0],[10,13],[2,1]],
            [[0,0],[2,0],[1,4],[4,1]],
            [[0,0],[1,0],[3,9],[5,14]],
            [[0,0],[1,0],[12,14],[13,15]],
            [[0,0],[1,0],[4,5],[-7,-12]],
            [[0,0],[1,0],[9,11],[3,2]],
            [[0,0],[1,0],[2,5],[-2,-12]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[7,11],[2,1]],
            [[0,0],[2,0],[1,3],[2,-5]],
            [[0,0],[1,0],[3,6],[0,3]],
            [[0,0],[1,0],[4,6],[7,9]],
            [[0,0],[1,0],[1,2],[7,2]],
            [[0,0],[1,0],[3,6],[5,8]],
            [[0,0],[1,0],[0,7],[-2,1]],
            [[0,0],[3,0],[2,5],[3,-2]],
            [[0,0],[1,0],[3,11],[-1,-10]],
            [[0,0],[1,0],[10,13],[-5,-8]],
            [[0,0],[3,0],[0,1],[19,-6]],
            [[0,0],[1,0],[5,11],[-3,-10]],
            [[0,0],[1,0],[11,17],[3,3]],
            [[0,0],[7,0],[0,1],[15,-2]],
            [[0,0],[3,0],[1,3],[5,-4]],
            [[0,0],[1,0],[0,3],[-6,1]],
            [[0,0],[7,0],[0,1],[17,-2]],
            [[0,0],[1,0],[2,5],[-2,3]],
            [[0,0],[1,0],[7,9],[7,7]],
            [[0,0],[1,0],[0,7],[-2,3]],
            [[0,0],[7,0],[0,1],[19,-2]],
            [[0,0],[1,0],[7,13],[3,3]],
            [[0,0],[1,0],[4,13],[-1,-8]],
            [[0,0],[1,0],[9,11],[7,7]],
            [[0,0],[1,0],[11,13],[7,7]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,7],[-2,5]],
            [[0,0],[1,0],[5,11],[3,3]],
            [[0,0],[1,0],[7,8],[4,2]],
            [[0,0],[1,0],[11,14],[5,5]],
            [[0,0],[1,0],[5,8],[5,5]],
            [[0,0],[1,0],[8,11],[-5,-9]],
            [[0,0],[5,0],[0,1],[17,-3]],
            [[0,0],[1,0],[4,11],[4,8]],
            [[0,0],[1,0],[8,17],[2,2]],
            [[0,0],[1,0],[8,11],[5,5]],
            [[0,0],[1,0],[5,6],[-9,-14]],
            [[0,0],[1,0],[0,5],[-3,2]],
            [[0,0],[4,0],[1,2],[7,-3]],
            [[0,0],[2,0],[3,4],[-1,-6]],
            [[0,0],[1,0],[0,5],[-3,5]],
            [[0,0],[1,0],[7,10],[-5,-9]],
            [[0,0],[1,0],[0,1],[15,4]],
            [[0,0],[3,0],[2,3],[6,1]],
            [[0,0],[1,0],[6,13],[3,4]],
            [[0,0],[1,0],[0,1],[-18,16]],
            [[0,0],[1,0],[4,7],[7,10]],
            [[0,0],[1,0],[9,12],[10,14]],
            [[0,0],[1,0],[0,2],[-8,14]],
            [[0,0],[1,0],[1,2],[9,6]],
            [[0,0],[1,0],[3,8],[3,3]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[0,3],[-4,3]],
            [[0,0],[1,0],[3,9],[4,9]],
            [[0,0],[1,0],[0,3],[-5,3]],
            [[0,0],[1,0],[3,10],[3,6]],
            [[0,0],[1,0],[4,9],[4,6]],
            [[0,0],[1,0],[3,12],[4,15]],
            [[0,0],[1,0],[3,7],[3,2]],
            [[0,0],[1,0],[6,7],[11,12]],
            [[0,0],[1,0],[0,1],[10,6]],
            [[0,0],[1,0],[0,2],[-7,2]],
            [[0,0],[2,0],[1,2],[-5,2]],
            [[0,0],[3,0],[0,2],[-5,2]],
            [[0,0],[1,0],[2,9],[2,2]],
            [[0,0],[1,0],[2,4],[2,10]],
            [[0,0],[1,0],[16,19],[2,1]],
            [[0,0],[1,0],[8,15],[2,1]],
            [[0,0],[1,0],[6,13],[-3,-10]],
            [[0,0],[1,0],[2,3],[-6,1]],
            [[0,0],[1,0],[2,7],[-2,1]],
            [[0,0],[2,0],[1,2],[5,-9]],
            [[0,0],[1,0],[9,13],[6,7]],
            [[0,0],[2,0],[4,5],[-1,-6]],
            [[0,0],[1,0],[13,14],[18,20]],
            [[0,0],[1,0],[5,13],[-2,-9]],
            [[0,0],[2,0],[1,3],[-5,1]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 1001-1500.
function canonical_dim3_facet_cache_3(id)
    // Convert the id
    id -:= 1000;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,4],[-4,1]],
            [[0,0],[2,0],[3,5],[-1,-6]],
            [[0,0],[1,0],[5,7],[-8,-15]],
            [[0,0],[1,0],[11,16],[2,1]],
            [[0,0],[1,0],[9,10],[3,1]],
            [[0,0],[1,0],[17,19],[2,1]],
            [[0,0],[1,0],[14,17],[2,1]],
            [[0,0],[1,0],[6,13],[2,1]],
            [[0,0],[3,0],[2,3],[3,-4]],
            [[0,0],[1,0],[4,9],[4,5]],
            [[0,0],[1,0],[2,5],[-3,-16]],
            [[0,0],[2,0],[0,1],[12,4]],
            [[0,0],[1,0],[4,12],[4,14]],
            [[0,0],[1,0],[2,8],[4,12]],
            [[0,0],[1,0],[8,13],[2,1]],
            [[0,0],[1,0],[3,7],[3,1]],
            [[0,0],[1,0],[4,7],[4,3]],
            [[0,0],[1,0],[3,7],[7,15]],
            [[0,0],[1,0],[12,15],[13,16]],
            [[0,0],[1,0],[1,2],[9,2]],
            [[0,0],[1,0],[0,2],[-8,10]],
            [[0,0],[2,0],[0,3],[-6,1]],
            [[0,0],[1,0],[1,8],[3,10]],
            [[0,0],[2,0],[4,5],[6,3]],
            [[0,0],[1,0],[1,8],[3,12]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[8,0],[0,1],[4,-2]],
            [[0,0],[1,0],[1,8],[3,8]],
            [[0,0],[1,0],[3,14],[4,22]],
            [[0,0],[1,0],[15,17],[3,2]],
            [[0,0],[1,0],[8,11],[11,14]],
            [[0,0],[3,0],[2,3],[-4,1]],
            [[0,0],[2,0],[3,4],[6,1]],
            [[0,0],[1,0],[6,19],[2,3]],
            [[0,0],[1,0],[8,11],[-7,-12]],
            [[0,0],[1,0],[6,11],[3,2]],
            [[0,0],[1,0],[6,7],[-11,-16]],
            [[0,0],[1,0],[4,11],[4,7]],
            [[0,0],[1,0],[7,8],[-11,-15]],
            [[0,0],[1,0],[18,20],[19,21]],
            [[0,0],[1,0],[11,14],[3,2]],
            [[0,0],[1,0],[4,7],[4,2]],
            [[0,0],[1,0],[2,10],[4,18]],
            [[0,0],[1,0],[14,16],[16,18]],
            [[0,0],[1,0],[7,17],[2,2]],
            [[0,0],[1,0],[5,6],[5,2]],
            [[0,0],[1,0],[7,10],[10,16]],
            [[0,0],[1,0],[3,11],[3,6]],
            [[0,0],[1,0],[0,1],[15,6]],
            [[0,0],[2,0],[0,3],[-5,3]],
            [[0,0],[1,0],[10,12],[13,15]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,15],[6,16]],
            [[0,0],[1,0],[1,4],[5,4]],
            [[0,0],[1,0],[1,4],[5,8]],
            [[0,0],[1,0],[1,3],[7,3]],
            [[0,0],[1,0],[1,3],[7,9]],
            [[0,0],[1,0],[0,3],[-6,15]],
            [[0,0],[1,0],[9,13],[5,5]],
            [[0,0],[1,0],[5,9],[5,5]],
            [[0,0],[1,0],[4,21],[4,22]],
            [[0,0],[1,0],[0,1],[-24,22]],
            [[0,0],[3,0],[1,3],[-5,1]],
            [[0,0],[5,0],[0,1],[21,-4]],
            [[0,0],[1,0],[13,17],[5,5]],
            [[0,0],[1,0],[0,5],[-4,5]],
            [[0,0],[1,0],[4,13],[7,22]],
            [[0,0],[1,0],[0,5],[-4,1]],
            [[0,0],[1,0],[1,6],[4,6]],
            [[0,0],[3,0],[3,4],[6,1]],
            [[0,0],[1,0],[9,14],[4,4]],
            [[0,0],[1,0],[4,9],[4,4]],
            [[0,0],[1,0],[14,19],[4,4]],
            [[0,0],[6,0],[0,1],[3,-3]],
            [[0,0],[1,0],[13,15],[4,3]],
            [[0,0],[3,0],[2,3],[3,-5]],
            [[0,0],[4,0],[1,3],[4,-3]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[10,17],[4,5]],
            [[0,0],[1,0],[3,11],[3,5]],
            [[0,0],[1,0],[4,6],[4,10]],
            [[0,0],[2,0],[6,9],[7,10]],
            [[0,0],[1,0],[3,8],[0,5]],
            [[0,0],[1,0],[5,6],[5,1]],
            [[0,0],[1,0],[17,21],[2,1]],
            [[0,0],[2,0],[1,5],[5,1]],
            [[0,0],[1,0],[7,10],[11,14]],
            [[0,0],[2,0],[4,5],[-2,-8]],
            [[0,0],[4,0],[2,3],[8,1]],
            [[0,0],[1,0],[4,7],[4,1]],
            [[0,0],[1,0],[4,13],[4,9]],
            [[0,0],[1,0],[12,16],[16,21]],
            [[0,0],[1,0],[0,1],[-24,21]],
            [[0,0],[1,0],[14,19],[2,1]],
            [[0,0],[1,0],[6,13],[10,21]],
            [[0,0],[1,0],[3,7],[-5,-18]],
            [[0,0],[1,0],[4,14],[6,20]],
            [[0,0],[1,0],[10,17],[3,3]],
            [[0,0],[1,0],[3,4],[-2,4]],
            [[0,0],[1,0],[5,8],[9,12]],
            [[0,0],[1,0],[0,3],[-7,3]],
            [[0,0],[1,0],[5,8],[5,4]],
            [[0,0],[1,0],[3,10],[3,3]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,5],[5,6],[9,14]],
            [[0,0],[1,0],[0,1],[8,3],[1,3]],
            [[0,0],[1,0],[3,7],[2,2],[8,17]],
            [[0,0],[1,0],[3,10],[2,1],[3,3]],
            [[0,0],[1,0],[3,5],[2,8],[3,11]],
            [[0,0],[1,0],[2,5],[2,1],[6,13]],
            [[0,0],[1,0],[2,6],[5,8],[5,9]],
            [[0,0],[1,0],[2,3],[-1,2],[2,8]],
            [[0,0],[1,0],[2,3],[-4,2],[-4,3]],
            [[0,0],[3,0],[0,1],[7,2],[9,4]],
            [[0,0],[1,0],[2,3],[2,6],[-2,2]],
            [[0,0],[1,0],[0,2],[-9,15],[-10,17]],
            [[0,0],[1,0],[0,3],[3,10],[3,12]],
            [[0,0],[1,0],[0,3],[-5,2],[-7,3]],
            [[0,0],[1,0],[0,2],[-9,6],[-10,7]],
            [[0,0],[2,0],[0,1],[-11,3],[-5,3]],
            [[0,0],[1,0],[2,8],[3,4],[3,9]],
            [[0,0],[1,0],[7,12],[9,15],[2,1]],
            [[0,0],[1,0],[2,7],[3,10],[3,3]],
            [[0,0],[1,0],[0,1],[11,4],[15,6]],
            [[0,0],[1,0],[2,5],[2,1],[6,9]],
            [[0,0],[1,0],[4,7],[4,5],[10,17]],
            [[0,0],[2,0],[1,3],[6,3],[6,2]],
            [[0,0],[2,0],[2,6],[3,7],[3,1]],
            [[0,0],[1,0],[1,4],[3,8],[3,2]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-2,4],[-5,13]],
            [[0,0],[1,0],[0,3],[-2,2],[-5,8]],
            [[0,0],[2,0],[2,3],[5,2],[8,5]],
            [[0,0],[1,0],[3,8],[-1,-3],[5,8]],
            [[0,0],[1,0],[5,9],[3,2],[5,5]],
            [[0,0],[1,0],[1,2],[-4,1],[0,5]],
            [[0,0],[1,0],[2,3],[4,1],[8,5]],
            [[0,0],[1,0],[1,8],[0,-3],[3,12]],
            [[0,0],[2,0],[0,1],[15,4],[16,4]],
            [[0,0],[1,0],[4,6],[5,5],[9,13]],
            [[0,0],[2,0],[0,5],[-1,5],[4,1]],
            [[0,0],[1,0],[6,9],[-5,-8],[6,7]],
            [[0,0],[1,0],[6,7],[-6,-8],[-8,-12]],
            [[0,0],[1,0],[1,5],[3,2],[5,5]],
            [[0,0],[1,0],[9,13],[5,5],[3,2]],
            [[0,0],[1,0],[2,4],[5,5],[5,9]],
            [[0,0],[4,0],[1,2],[-1,3],[-5,1]],
            [[0,0],[1,0],[4,7],[2,1],[8,11]],
            [[0,0],[3,0],[0,1],[-8,1],[-14,3]],
            [[0,0],[1,0],[1,8],[0,-3],[3,8]],
            [[0,0],[1,0],[7,10],[2,1],[10,13]],
            [[0,0],[1,0],[3,12],[4,12],[4,14]],
            [[0,0],[1,0],[5,8],[4,4],[9,14]],
            [[0,0],[1,0],[0,1],[4,2],[4,7]],
            [[0,0],[2,0],[0,1],[5,-6],[3,-6]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,7],[2,7],[3,1]],
            [[0,0],[1,0],[4,7],[8,11],[7,9]],
            [[0,0],[1,0],[0,3],[-1,5],[-6,10]],
            [[0,0],[2,0],[0,1],[-6,1],[-15,4]],
            [[0,0],[1,0],[3,10],[2,3],[6,19]],
            [[0,0],[2,0],[0,1],[4,3],[4,7]],
            [[0,0],[1,0],[1,3],[-2,14],[-2,15]],
            [[0,0],[1,0],[11,15],[2,1],[14,19]],
            [[0,0],[1,0],[1,6],[0,-2],[4,9]],
            [[0,0],[2,0],[1,4],[4,4],[4,1]],
            [[0,0],[1,0],[5,7],[8,14],[10,17]],
            [[0,0],[1,0],[5,7],[6,7],[14,19]],
            [[0,0],[1,0],[0,1],[-16,12],[-21,16]],
            [[0,0],[2,0],[0,1],[-6,1],[-12,4]],
            [[0,0],[1,0],[4,9],[7,14],[9,19]],
            [[0,0],[1,0],[2,6],[2,10],[-1,1]],
            [[0,0],[1,0],[1,3],[2,4],[7,4]],
            [[0,0],[1,0],[4,9],[3,2],[4,4]],
            [[0,0],[1,0],[4,5],[8,14],[9,15]],
            [[0,0],[2,0],[1,2],[-2,-8],[-3,-9]],
            [[0,0],[3,0],[0,2],[-4,1],[-4,4]],
            [[0,0],[2,0],[0,1],[-15,3],[-18,4]],
            [[0,0],[1,0],[7,8],[9,12],[13,17]],
            [[0,0],[1,0],[3,11],[3,5],[2,1]],
            [[0,0],[1,0],[1,5],[4,5],[4,3]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,5],[4,4],[4,9]],
            [[0,0],[1,0],[0,1],[5,11],[7,14]],
            [[0,0],[1,0],[0,3],[-5,3],[-6,2]],
            [[0,0],[1,0],[3,4],[4,1],[7,4]],
            [[0,0],[1,0],[0,3],[-5,8],[-6,8]],
            [[0,0],[1,0],[8,11],[4,4],[14,19]],
            [[0,0],[1,0],[1,5],[4,8],[4,6]],
            [[0,0],[1,0],[4,5],[8,14],[10,17]],
            [[0,0],[1,0],[0,1],[-18,15],[-20,17]],
            [[0,0],[1,0],[2,7],[3,8],[3,1]],
            [[0,0],[1,0],[2,5],[-1,1],[2,10]],
            [[0,0],[1,0],[3,12],[4,12],[4,15]],
            [[0,0],[1,0],[2,8],[5,16],[5,17]],
            [[0,0],[1,0],[7,11],[9,14],[3,2]],
            [[0,0],[1,0],[0,3],[-6,14],[-6,15]],
            [[0,0],[1,0],[5,7],[4,4],[14,19]],
            [[0,0],[1,0],[0,1],[-6,5],[-16,10]],
            [[0,0],[1,0],[0,4],[3,12],[3,13]],
            [[0,0],[1,0],[2,4],[4,1],[4,7]],
            [[0,0],[1,0],[0,1],[6,13],[7,14]],
            [[0,0],[1,0],[3,5],[4,4],[9,14]],
            [[0,0],[1,0],[3,11],[2,1],[3,4]],
            [[0,0],[1,0],[2,9],[3,10],[0,5]],
            [[0,0],[3,0],[0,1],[-6,1],[-15,4]],
            [[0,0],[1,0],[4,8],[3,2],[6,11]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,8],[10,13],[13,16]],
            [[0,0],[1,0],[0,3],[-6,3],[-6,2]],
            [[0,0],[1,0],[1,6],[0,-3],[4,12]],
            [[0,0],[2,0],[2,3],[5,2],[5,6]],
            [[0,0],[3,0],[0,1],[-18,4],[-15,3]],
            [[0,0],[1,0],[4,7],[7,10],[3,2]],
            [[0,0],[1,0],[0,1],[-20,6],[-21,6]],
            [[0,0],[1,0],[0,3],[-6,9],[-6,8]],
            [[0,0],[1,0],[1,4],[3,1],[6,4]],
            [[0,0],[1,0],[3,4],[7,3],[8,4]],
            [[0,0],[1,0],[1,4],[3,3],[6,9]],
            [[0,0],[1,0],[1,2],[4,2],[10,8]],
            [[0,0],[1,0],[1,3],[4,1],[8,3]],
            [[0,0],[1,0],[1,2],[5,2],[9,6]],
            [[0,0],[1,0],[0,2],[-4,6],[-8,14]],
            [[0,0],[2,0],[0,1],[2,-4],[6,-4]],
            [[0,0],[1,0],[1,4],[3,1],[3,8]],
            [[0,0],[1,0],[2,6],[4,6],[4,10]],
            [[0,0],[2,0],[1,3],[6,2],[7,3]],
            [[0,0],[1,0],[1,4],[3,3],[3,10]],
            [[0,0],[1,0],[1,2],[4,5],[10,17]],
            [[0,0],[1,0],[2,3],[7,2],[9,3]],
            [[0,0],[1,0],[2,7],[3,9],[3,2]],
            [[0,0],[1,0],[0,1],[4,3],[10,3]],
            [[0,0],[2,0],[1,2],[2,3],[8,3]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,5],[4,3],[5,5]],
            [[0,0],[2,0],[2,5],[-1,-3],[1,-5]],
            [[0,0],[1,0],[1,8],[0,-4],[3,12]],
            [[0,0],[1,0],[0,5],[-3,9],[-4,13]],
            [[0,0],[1,0],[0,5],[-3,12],[-4,17]],
            [[0,0],[1,0],[0,5],[-3,6],[-4,9]],
            [[0,0],[1,0],[1,8],[0,-4],[3,10]],
            [[0,0],[1,0],[5,6],[2,1],[10,16]],
            [[0,0],[2,0],[0,4],[-1,3],[4,4]],
            [[0,0],[1,0],[3,6],[4,10],[4,14]],
            [[0,0],[2,0],[4,5],[5,6],[5,1]],
            [[0,0],[1,0],[5,9],[5,5],[4,3]],
            [[0,0],[3,0],[1,2],[7,4],[0,-2]],
            [[0,0],[1,0],[0,4],[-2,2],[-4,8]],
            [[0,0],[3,0],[0,1],[12,4],[13,4]],
            [[0,0],[1,0],[2,4],[-3,1],[2,6]],
            [[0,0],[2,0],[0,2],[1,5],[5,1]],
            [[0,0],[1,0],[0,1],[12,4],[15,4]],
            [[0,0],[1,0],[0,1],[13,3],[20,5]],
            [[0,0],[5,0],[0,1],[15,-3],[21,-4]],
            [[0,0],[1,0],[1,8],[0,-4],[3,14]],
            [[0,0],[1,0],[2,3],[-3,1],[2,6]],
            [[0,0],[2,0],[0,3],[5,1],[1,5]],
            [[0,0],[1,0],[1,8],[3,14],[0,-5]],
            [[0,0],[2,0],[3,4],[5,6],[5,1]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[1,4],[7,4]],
            [[0,0],[1,0],[0,1],[17,4],[20,5]],
            [[0,0],[1,0],[2,5],[7,10],[0,2]],
            [[0,0],[1,0],[0,1],[-18,15],[-25,21]],
            [[0,0],[1,0],[1,5],[5,5],[5,4]],
            [[0,0],[1,0],[1,5],[5,13],[5,12]],
            [[0,0],[1,0],[14,16],[8,8],[-4,-5]],
            [[0,0],[1,0],[1,5],[5,9],[5,8]],
            [[0,0],[4,0],[3,4],[2,4],[6,1]],
            [[0,0],[1,0],[0,1],[12,7],[15,8]],
            [[0,0],[2,0],[2,3],[3,4],[8,4]],
            [[0,0],[1,0],[0,1],[-4,4],[-22,16]],
            [[0,0],[1,0],[0,1],[-12,3],[-16,5]],
            [[0,0],[2,0],[0,1],[-20,6],[-21,6]],
            [[0,0],[4,0],[0,1],[6,1],[6,4]],
            [[0,0],[1,0],[1,4],[3,9],[3,1]],
            [[0,0],[2,0],[1,3],[4,6],[4,1]],
            [[0,0],[1,0],[1,2],[4,1],[9,6]],
            [[0,0],[2,0],[1,2],[-1,-3],[2,-6]],
            [[0,0],[1,0],[1,4],[2,1],[6,9]],
            [[0,0],[1,0],[0,3],[-6,14],[-7,17]],
            [[0,0],[1,0],[3,7],[4,9],[4,3]],
            [[0,0],[1,0],[0,1],[9,3],[1,3]],
            [[0,0],[1,0],[0,1],[-21,6],[-24,7]],
            [[0,0],[1,0],[1,6],[0,-4],[4,15]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-6,8],[-7,10]],
            [[0,0],[1,0],[2,7],[3,9],[3,1]],
            [[0,0],[2,0],[2,3],[-3,-9],[-2,-8]],
            [[0,0],[1,0],[0,3],[-6,2],[-7,3]],
            [[0,0],[1,0],[3,11],[2,1],[3,3]],
            [[0,0],[1,0],[3,10],[0,5],[3,11]],
            [[0,0],[1,0],[2,8],[3,8],[3,2]],
            [[0,0],[1,0],[1,4],[4,7],[4,3]],
            [[0,0],[1,0],[4,5],[8,14],[11,19]],
            [[0,0],[1,0],[2,3],[4,4],[14,19]],
            [[0,0],[2,0],[3,6],[4,2],[4,7]],
            [[0,0],[1,0],[0,1],[3,3],[3,10]],
            [[0,0],[1,0],[3,6],[3,8],[0,5]],
            [[0,0],[1,0],[1,2],[3,5],[10,12]],
            [[0,0],[1,0],[1,2],[3,3],[10,3]],
            [[0,0],[1,0],[0,2],[-4,1],[-4,6]],
            [[0,0],[1,0],[0,2],[1,4],[7,4]],
            [[0,0],[2,0],[2,8],[3,8],[3,2]],
            [[0,0],[1,0],[1,2],[-3,12],[-4,17]],
            [[0,0],[1,0],[3,4],[-2,4],[-3,3]],
            [[0,0],[1,0],[0,1],[-24,20],[-25,21]],
            [[0,0],[1,0],[4,10],[3,2],[4,4]],
            [[0,0],[1,0],[1,8],[3,14],[0,-6]],
            [[0,0],[2,0],[2,3],[5,1],[5,6]],
            [[0,0],[1,0],[0,1],[-9,4],[-14,4]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-6,8],[-8,11]],
            [[0,0],[1,0],[0,3],[-6,14],[-8,19]],
            [[0,0],[2,0],[0,1],[-21,6],[-24,7]],
            [[0,0],[1,0],[2,5],[4,9],[4,3]],
            [[0,0],[1,0],[0,1],[-20,14],[-24,17]],
            [[0,0],[1,0],[3,8],[3,9],[0,6]],
            [[0,0],[1,0],[1,3],[7,2],[9,3]],
            [[0,0],[1,0],[4,6],[3,9],[4,11]],
            [[0,0],[1,0],[0,1],[7,2],[15,6]],
            [[0,0],[2,0],[1,2],[4,1],[9,6]],
            [[0,0],[1,0],[15,18],[6,6],[-4,-5]],
            [[0,0],[2,0],[1,2],[-3,1],[-3,6]],
            [[0,0],[2,0],[2,8],[3,8],[3,1]],
            [[0,0],[1,0],[1,2],[-4,16],[-4,17]],
            [[0,0],[1,0],[0,1],[-5,1],[-10,6]],
            [[0,0],[1,0],[0,1],[-5,1],[-15,6]],
            [[0,0],[2,0],[2,8],[3,9],[3,2]],
            [[0,0],[1,0],[1,4],[3,1],[3,10]],
            [[0,0],[1,0],[4,6],[0,4],[4,8]],
            [[0,0],[1,0],[1,2],[-3,6],[-3,10]],
            [[0,0],[1,0],[0,1],[-20,14],[-27,19]],
            [[0,0],[2,0],[0,1],[-5,1],[-20,6]],
            [[0,0],[1,0],[1,3],[-4,12],[-4,13]],
            [[0,0],[1,0],[3,6],[5,9],[5,4]],
            [[0,0],[2,0],[0,1],[-5,1],[-15,6]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[1,3],[10,3]],
            [[0,0],[1,0],[0,1],[-3,3],[-21,12]],
            [[0,0],[1,0],[1,3],[2,3],[0,-1]],
            [[0,0],[1,0],[1,2],[2,2],[-1,-3]],
            [[0,0],[3,0],[0,1],[2,-1],[-1,1]],
            [[0,0],[2,0],[1,2],[-1,1],[2,-1]],
            [[0,0],[1,0],[1,4],[2,4],[0,-1]],
            [[0,0],[1,0],[1,2],[2,2],[-2,-5]],
            [[0,0],[4,0],[0,1],[2,-1],[-1,1]],
            [[0,0],[4,0],[0,1],[3,-1],[-1,1]],
            [[0,0],[1,0],[1,3],[2,3],[2,1]],
            [[0,0],[1,0],[1,3],[2,2],[2,4]],
            [[0,0],[1,0],[0,2],[-2,2],[-2,1]],
            [[0,0],[5,0],[0,1],[2,-1],[-1,1]],
            [[0,0],[5,0],[0,1],[4,-1],[-1,1]],
            [[0,0],[1,0],[2,5],[3,5],[0,-1]],
            [[0,0],[1,0],[0,3],[-1,3],[2,-5]],
            [[0,0],[3,0],[0,1],[2,-2],[1,-2]],
            [[0,0],[5,0],[0,1],[3,-1],[-1,1]],
            [[0,0],[1,0],[2,4],[-1,-5],[1,3]],
            [[0,0],[1,0],[4,5],[-1,-3],[5,7]],
            [[0,0],[1,0],[1,5],[2,5],[0,-1]],
            [[0,0],[1,0],[1,2],[2,2],[-3,-7]],
            [[0,0],[1,0],[1,4],[2,4],[2,2]],
            [[0,0],[1,0],[1,2],[3,3],[3,1]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-1,3],[2,1]],
            [[0,0],[1,0],[1,4],[2,5],[2,3]],
            [[0,0],[1,0],[3,5],[3,3],[2,1]],
            [[0,0],[1,0],[0,3],[-1,1],[-2,3]],
            [[0,0],[4,0],[0,1],[3,-1],[1,-1]],
            [[0,0],[2,0],[0,1],[2,2],[1,-2]],
            [[0,0],[1,0],[2,3],[2,1],[4,5]],
            [[0,0],[1,0],[1,3],[2,4],[2,1]],
            [[0,0],[1,0],[3,4],[2,4],[3,5]],
            [[0,0],[1,0],[0,2],[-2,1],[-3,2]],
            [[0,0],[1,0],[3,5],[2,5],[-1,-3]],
            [[0,0],[1,0],[2,4],[1,4],[-1,-5]],
            [[0,0],[4,0],[0,1],[3,-2],[-1,1]],
            [[0,0],[2,0],[1,3],[-1,2],[2,-1]],
            [[0,0],[1,0],[2,3],[1,3],[-2,-7]],
            [[0,0],[1,0],[1,2],[2,2],[-4,-9]],
            [[0,0],[1,0],[0,4],[-1,7],[2,-5]],
            [[0,0],[1,0],[1,6],[2,6],[0,-1]],
            [[0,0],[1,0],[2,3],[1,4],[-1,-5]],
            [[0,0],[6,0],[0,1],[5,-1],[-1,1]],
            [[0,0],[2,0],[1,2],[0,-3],[-1,-3]],
            [[0,0],[2,0],[0,1],[3,3],[1,-2]],
            [[0,0],[1,0],[5,7],[-3,-5],[-2,-3]],
            [[0,0],[6,0],[0,1],[4,-1],[-1,1]],
            [[0,0],[1,0],[1,2],[5,7],[-1,-3]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[-1,-5],[3,7]],
            [[0,0],[2,0],[0,3],[-1,4],[3,-2]],
            [[0,0],[1,0],[2,7],[-1,-5],[-1,-4]],
            [[0,0],[1,0],[5,6],[-3,-5],[4,4]],
            [[0,0],[6,0],[0,1],[2,-1],[-1,1]],
            [[0,0],[3,0],[0,1],[4,2],[2,-1]],
            [[0,0],[6,0],[0,1],[3,-1],[-1,1]],
            [[0,0],[5,0],[0,1],[4,-1],[2,-1]],
            [[0,0],[1,0],[2,5],[-1,-6],[2,4]],
            [[0,0],[5,0],[0,1],[3,-1],[1,-1]],
            [[0,0],[1,0],[0,3],[2,3],[-1,2]],
            [[0,0],[1,0],[2,5],[3,5],[3,7]],
            [[0,0],[1,0],[1,5],[2,6],[2,4]],
            [[0,0],[1,0],[2,3],[0,3],[-1,1]],
            [[0,0],[1,0],[7,8],[2,1],[8,9]],
            [[0,0],[1,0],[1,5],[2,5],[2,3]],
            [[0,0],[1,0],[0,2],[-3,1],[-1,3]],
            [[0,0],[1,0],[1,4],[2,5],[2,2]],
            [[0,0],[1,0],[1,3],[3,5],[3,4]],
            [[0,0],[1,0],[1,4],[2,4],[2,1]],
            [[0,0],[1,0],[1,3],[3,3],[3,2]],
            [[0,0],[1,0],[2,3],[3,4],[3,1]],
            [[0,0],[1,0],[0,1],[5,2],[6,3]],
            [[0,0],[1,0],[4,5],[2,1],[6,7]],
            [[0,0],[1,0],[0,4],[-1,4],[2,-7]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,8],[-1,-5],[2,9]],
            [[0,0],[1,0],[1,2],[5,7],[-2,-5]],
            [[0,0],[2,0],[0,3],[1,-3],[-1,4]],
            [[0,0],[1,0],[6,8],[-1,-3],[7,10]],
            [[0,0],[1,0],[2,7],[3,7],[0,-1]],
            [[0,0],[1,0],[6,8],[1,2],[-1,-3]],
            [[0,0],[1,0],[0,4],[2,-7],[-1,5]],
            [[0,0],[3,0],[0,1],[2,-3],[1,-3]],
            [[0,0],[1,0],[3,7],[4,7],[0,-1]],
            [[0,0],[1,0],[6,7],[2,3],[6,8]],
            [[0,0],[4,0],[1,2],[4,-1],[2,2]],
            [[0,0],[1,0],[1,3],[3,3],[-1,2]],
            [[0,0],[1,0],[0,4],[-2,4],[-2,3]],
            [[0,0],[1,0],[3,7],[-1,-5],[3,6]],
            [[0,0],[1,0],[2,3],[3,3],[-2,1]],
            [[0,0],[1,0],[6,7],[-3,-5],[7,8]],
            [[0,0],[1,0],[5,7],[6,8],[4,4]],
            [[0,0],[6,0],[0,1],[3,-1],[1,-1]],
            [[0,0],[1,0],[0,4],[-1,4],[2,2]],
            [[0,0],[1,0],[4,5],[4,3],[3,1]],
            [[0,0],[1,0],[9,10],[2,1],[10,11]],
            [[0,0],[1,0],[0,4],[-2,2],[-2,1]],
            [[0,0],[2,0],[0,1],[2,2],[1,-4]],
            [[0,0],[1,0],[0,4],[-1,1],[-2,4]],
            [[0,0],[1,0],[4,5],[-4,-6],[5,7]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,5],[-4,-7],[5,6]],
            [[0,0],[1,0],[3,5],[2,5],[3,3]],
            [[0,0],[1,0],[4,7],[4,5],[3,3]],
            [[0,0],[1,0],[1,6],[2,7],[2,5]],
            [[0,0],[1,0],[0,4],[-1,3],[2,2]],
            [[0,0],[1,0],[4,6],[3,5],[4,4]],
            [[0,0],[6,0],[0,1],[5,-1],[3,-1]],
            [[0,0],[1,0],[1,2],[4,3],[4,1]],
            [[0,0],[1,0],[2,6],[3,6],[3,7]],
            [[0,0],[1,0],[2,3],[-1,2],[-1,3]],
            [[0,0],[1,0],[1,4],[0,-1],[3,4]],
            [[0,0],[1,0],[6,7],[2,1],[8,9]],
            [[0,0],[1,0],[1,5],[2,5],[2,2]],
            [[0,0],[1,0],[1,3],[3,3],[3,1]],
            [[0,0],[1,0],[1,2],[4,2],[-2,1]],
            [[0,0],[2,0],[1,2],[0,3],[-2,1]],
            [[0,0],[5,0],[0,1],[4,-1],[1,-1]],
            [[0,0],[1,0],[0,1],[-4,1],[-6,3]],
            [[0,0],[1,0],[3,5],[3,3],[5,7]],
            [[0,0],[1,0],[3,5],[3,3],[1,3]],
            [[0,0],[1,0],[1,5],[2,6],[2,3]],
            [[0,0],[1,0],[3,4],[2,1],[6,7]],
            [[0,0],[1,0],[0,2],[-2,1],[-2,4]],
            [[0,0],[1,0],[0,1],[-8,6],[-9,7]],
            [[0,0],[2,0],[1,2],[-2,2],[-2,1]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[-3,1],[-4,2]],
            [[0,0],[1,0],[1,4],[2,5],[2,1]],
            [[0,0],[1,0],[2,6],[-1,-7],[1,5]],
            [[0,0],[5,0],[0,1],[2,-2],[1,-2]],
            [[0,0],[1,0],[1,3],[4,8],[-1,-5]],
            [[0,0],[1,0],[3,8],[4,9],[3,5]],
            [[0,0],[1,0],[0,3],[-1,3],[4,-11]],
            [[0,0],[1,0],[2,3],[-2,-7],[3,8]],
            [[0,0],[1,0],[0,5],[-1,9],[2,-7]],
            [[0,0],[2,0],[1,4],[-1,3],[2,-1]],
            [[0,0],[4,0],[0,1],[5,2],[2,-1]],
            [[0,0],[1,0],[5,8],[-2,-5],[5,7]],
            [[0,0],[1,0],[1,4],[3,7],[-1,-5]],
            [[0,0],[1,0],[4,5],[3,5],[-4,-7]],
            [[0,0],[1,0],[7,8],[-5,-7],[5,5]],
            [[0,0],[5,0],[0,2],[2,-1],[-1,2]],
            [[0,0],[1,0],[4,8],[5,11],[-1,-5]],
            [[0,0],[4,0],[0,1],[1,2],[1,-2]],
            [[0,0],[1,0],[3,11],[-1,-5],[-1,-4]],
            [[0,0],[1,0],[2,4],[1,5],[-1,-7]],
            [[0,0],[3,0],[2,3],[0,-2],[-1,-2]],
            [[0,0],[1,0],[6,7],[-7,-9],[5,6]],
            [[0,0],[2,0],[0,3],[3,-4],[-1,2]],
            [[0,0],[3,0],[2,3],[-1,1],[3,-1]],
            [[0,0],[1,0],[3,8],[4,8],[0,-1]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[6,9],[-2,-5]],
            [[0,0],[4,0],[0,1],[5,2],[3,-1]],
            [[0,0],[1,0],[4,9],[-1,-5],[4,8]],
            [[0,0],[1,0],[6,9],[7,11],[-2,-5]],
            [[0,0],[2,0],[0,1],[3,5],[1,-2]],
            [[0,0],[1,0],[2,5],[1,5],[-1,-7]],
            [[0,0],[2,0],[3,4],[3,5],[1,-3]],
            [[0,0],[1,0],[4,7],[3,7],[-1,-3]],
            [[0,0],[3,0],[0,2],[5,-3],[-1,1]],
            [[0,0],[1,0],[2,5],[-2,-7],[3,6]],
            [[0,0],[1,0],[1,3],[3,6],[-2,-7]],
            [[0,0],[1,0],[3,7],[4,7],[4,9]],
            [[0,0],[1,0],[4,5],[1,3],[-1,1]],
            [[0,0],[3,0],[0,2],[-2,3],[5,-2]],
            [[0,0],[1,0],[3,4],[5,5],[3,1]],
            [[0,0],[2,0],[0,2],[3,3],[1,-2]],
            [[0,0],[1,0],[5,7],[2,1],[5,5]],
            [[0,0],[1,0],[1,3],[2,3],[-3,1]],
            [[0,0],[1,0],[0,1],[5,-5],[1,-3]],
            [[0,0],[1,0],[3,8],[2,2],[4,10]],
            [[0,0],[1,0],[0,4],[2,4],[-1,3]],
            [[0,0],[1,0],[0,1],[3,-5],[1,-5]],
            [[0,0],[1,0],[2,4],[0,4],[-1,2]],
            [[0,0],[1,0],[5,6],[-3,-5],[5,7]],
            [[0,0],[1,0],[5,6],[-5,-8],[6,7]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 1501-2000.
function canonical_dim3_facet_cache_4(id)
    // Convert the id
    id -:= 1500;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,5],[-1,1],[-2,3]],
            [[0,0],[1,0],[0,5],[-1,5],[2,1]],
            [[0,0],[1,0],[5,9],[3,3],[2,1]],
            [[0,0],[1,0],[2,7],[3,7],[3,9]],
            [[0,0],[5,0],[0,1],[11,-2],[1,1]],
            [[0,0],[4,0],[0,1],[3,-2],[1,-2]],
            [[0,0],[1,0],[0,1],[4,-5],[2,-5]],
            [[0,0],[1,0],[7,9],[5,5],[2,1]],
            [[0,0],[1,0],[0,5],[-1,3],[-2,7]],
            [[0,0],[1,0],[2,7],[-1,-8],[2,6]],
            [[0,0],[1,0],[0,1],[3,5],[1,5]],
            [[0,0],[1,0],[0,5],[-1,6],[2,1]],
            [[0,0],[1,0],[0,5],[-1,2],[-2,5]],
            [[0,0],[1,0],[4,5],[1,3],[2,5]],
            [[0,0],[2,0],[1,2],[0,-4],[-1,-3]],
            [[0,0],[1,0],[0,3],[2,4],[-2,1]],
            [[0,0],[1,0],[3,7],[4,9],[2,1]],
            [[0,0],[1,0],[0,2],[-4,1],[-2,3]],
            [[0,0],[1,0],[0,3],[-3,2],[-1,4]],
            [[0,0],[1,0],[3,6],[2,5],[3,3]],
            [[0,0],[1,0],[1,2],[4,6],[-3,-7]],
            [[0,0],[1,0],[0,3],[-3,3],[-3,2]],
            [[0,0],[1,0],[2,4],[3,4],[-3,-7]],
            [[0,0],[1,0],[1,6],[2,6],[2,3]],
            [[0,0],[1,0],[3,4],[4,5],[4,2]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,5],[-1,-6],[-1,-8]],
            [[0,0],[1,0],[0,3],[-2,1],[-3,3]],
            [[0,0],[1,0],[0,3],[2,3],[-2,1]],
            [[0,0],[6,0],[0,1],[4,-1],[1,-1]],
            [[0,0],[1,0],[4,5],[3,1],[4,2]],
            [[0,0],[1,0],[3,7],[-1,-5],[4,9]],
            [[0,0],[1,0],[0,1],[-2,1],[-10,7]],
            [[0,0],[1,0],[3,8],[3,5],[2,2]],
            [[0,0],[1,0],[3,7],[3,4],[2,1]],
            [[0,0],[1,0],[4,7],[4,5],[2,1]],
            [[0,0],[6,0],[0,1],[5,-1],[2,-1]],
            [[0,0],[1,0],[8,9],[2,1],[10,11]],
            [[0,0],[1,0],[7,9],[8,10],[2,1]],
            [[0,0],[1,0],[2,5],[3,4],[4,7]],
            [[0,0],[1,0],[0,1],[-8,2],[-10,3]],
            [[0,0],[1,0],[1,3],[3,4],[3,1]],
            [[0,0],[1,0],[2,8],[3,10],[3,11]],
            [[0,0],[1,0],[1,6],[2,7],[2,4]],
            [[0,0],[2,0],[2,3],[1,3],[4,1]],
            [[0,0],[1,0],[5,6],[2,1],[8,9]],
            [[0,0],[1,0],[2,3],[3,1],[5,3]],
            [[0,0],[1,0],[1,5],[2,3],[2,7]],
            [[0,0],[1,0],[1,2],[3,5],[3,1]],
            [[0,0],[1,0],[1,4],[0,-2],[3,6]],
            [[0,0],[2,0],[0,2],[3,2],[-2,1]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,5],[2,1],[5,7]],
            [[0,0],[1,0],[0,2],[-4,2],[-4,1]],
            [[0,0],[1,0],[2,6],[3,6],[3,8]],
            [[0,0],[1,0],[5,6],[3,2],[7,8]],
            [[0,0],[1,0],[1,5],[2,5],[2,1]],
            [[0,0],[1,0],[1,5],[2,6],[2,2]],
            [[0,0],[1,0],[2,4],[3,2],[3,5]],
            [[0,0],[1,0],[2,3],[-2,-4],[-2,-6]],
            [[0,0],[1,0],[0,2],[-3,1],[-5,2]],
            [[0,0],[2,0],[1,2],[4,1],[5,2]],
            [[0,0],[1,0],[0,1],[-3,1],[-6,4]],
            [[0,0],[1,0],[1,4],[2,6],[2,1]],
            [[0,0],[1,0],[4,6],[3,6],[4,7]],
            [[0,0],[1,0],[0,1],[2,3],[2,7]],
            [[0,0],[1,0],[2,5],[1,6],[-1,-7]],
            [[0,0],[1,0],[3,10],[-1,-7],[3,9]],
            [[0,0],[1,0],[3,7],[2,7],[-1,-5]],
            [[0,0],[6,0],[0,1],[3,-2],[-1,1]],
            [[0,0],[2,0],[1,2],[-1,3],[3,-5]],
            [[0,0],[1,0],[3,4],[6,6],[-5,-7]],
            [[0,0],[1,0],[0,6],[-1,11],[2,-7]],
            [[0,0],[1,0],[4,5],[5,8],[-4,-7]],
            [[0,0],[2,0],[0,1],[3,5],[1,-3]],
            [[0,0],[1,0],[7,11],[-4,-7],[-3,-5]],
            [[0,0],[1,0],[4,7],[3,7],[-2,-5]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,7],[-4,-8],[-5,-9]],
            [[0,0],[1,0],[1,3],[4,8],[-2,-7]],
            [[0,0],[1,0],[2,6],[1,6],[-1,-7]],
            [[0,0],[1,0],[6,9],[7,11],[-3,-7]],
            [[0,0],[1,0],[4,8],[5,11],[-2,-7]],
            [[0,0],[1,0],[1,2],[6,9],[-3,-7]],
            [[0,0],[1,0],[7,11],[-3,-5],[8,13]],
            [[0,0],[3,0],[1,2],[5,3],[2,-1]],
            [[0,0],[1,0],[0,4],[-1,4],[3,-11]],
            [[0,0],[3,0],[0,1],[1,3],[1,-3]],
            [[0,0],[1,0],[2,10],[-1,-7],[2,11]],
            [[0,0],[1,0],[4,11],[-2,-7],[-1,-3]],
            [[0,0],[1,0],[0,6],[-1,10],[2,-7]],
            [[0,0],[4,0],[1,2],[-3,1],[5,-1]],
            [[0,0],[1,0],[4,8],[3,8],[-1,-3]],
            [[0,0],[6,0],[0,1],[5,-2],[-1,1]],
            [[0,0],[4,0],[0,1],[-7,2],[9,-2]],
            [[0,0],[4,0],[0,1],[3,-3],[2,-3]],
            [[0,0],[1,0],[4,9],[-2,-7],[4,8]],
            [[0,0],[1,0],[7,8],[-5,-7],[6,6]],
            [[0,0],[1,0],[2,5],[-2,-11],[1,4]],
            [[0,0],[2,0],[3,4],[-2,-5],[2,3]],
            [[0,0],[4,0],[0,1],[2,-3],[1,-3]],
            [[0,0],[1,0],[2,3],[1,3],[-4,-13]],
            [[0,0],[1,0],[2,4],[-1,-7],[3,10]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,2],[-1,-5],[-2,-5]],
            [[0,0],[1,0],[2,11],[-1,-7],[-1,-6]],
            [[0,0],[1,0],[2,6],[-3,-11],[2,7]],
            [[0,0],[3,0],[1,2],[2,3],[-1,-3]],
            [[0,0],[3,0],[0,1],[-7,2],[11,-3]],
            [[0,0],[1,0],[4,9],[-2,-7],[3,5]],
            [[0,0],[1,0],[8,9],[-5,-7],[6,6]],
            [[0,0],[1,0],[3,8],[-1,-5],[2,7]],
            [[0,0],[1,0],[7,10],[8,11],[2,1]],
            [[0,0],[1,0],[5,9],[5,7],[4,5]],
            [[0,0],[3,0],[0,1],[3,2],[1,-3]],
            [[0,0],[2,0],[3,5],[1,-2],[4,6]],
            [[0,0],[1,0],[3,4],[4,4],[-1,2]],
            [[0,0],[1,0],[0,2],[-5,1],[-1,3]],
            [[0,0],[1,0],[1,2],[5,3],[5,1]],
            [[0,0],[1,0],[5,7],[6,7],[8,11]],
            [[0,0],[1,0],[3,8],[4,8],[4,10]],
            [[0,0],[1,0],[2,3],[-1,-5],[-3,-5]],
            [[0,0],[3,0],[0,1],[3,2],[2,-3]],
            [[0,0],[1,0],[2,5],[4,5],[1,4]],
            [[0,0],[1,0],[2,7],[-1,-9],[-1,-10]],
            [[0,0],[1,0],[2,7],[-1,-10],[2,6]],
            [[0,0],[1,0],[0,5],[-1,4],[2,3]],
            [[0,0],[4,0],[1,2],[5,-2],[2,2]],
            [[0,0],[1,0],[5,8],[5,6],[2,1]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[4,0],[0,1],[3,-2],[2,2]],
            [[0,0],[1,0],[3,7],[2,7],[3,5]],
            [[0,0],[1,0],[6,7],[-7,-10],[4,4]],
            [[0,0],[1,0],[0,5],[-1,3],[2,3]],
            [[0,0],[1,0],[0,5],[-1,5],[2,3]],
            [[0,0],[1,0],[1,4],[3,5],[-1,2]],
            [[0,0],[1,0],[5,7],[-2,-5],[7,11]],
            [[0,0],[1,0],[0,5],[-1,1],[-2,5]],
            [[0,0],[1,0],[5,8],[5,6],[4,4]],
            [[0,0],[1,0],[1,2],[5,5],[5,3]],
            [[0,0],[1,0],[2,4],[-2,1],[-2,2]],
            [[0,0],[1,0],[2,6],[0,4],[-1,1]],
            [[0,0],[1,0],[8,9],[-5,-7],[-3,-5]],
            [[0,0],[3,0],[1,3],[3,-2],[2,3]],
            [[0,0],[1,0],[2,7],[3,8],[4,13]],
            [[0,0],[1,0],[2,5],[4,7],[2,1]],
            [[0,0],[2,0],[1,2],[-1,3],[-3,1]],
            [[0,0],[1,0],[0,4],[-1,4],[3,1]],
            [[0,0],[1,0],[3,8],[3,5],[2,1]],
            [[0,0],[1,0],[2,3],[4,4],[4,1]],
            [[0,0],[1,0],[4,7],[2,1],[4,4]],
            [[0,0],[1,0],[4,7],[4,5],[6,9]],
            [[0,0],[1,0],[5,6],[4,6],[-3,-5]],
            [[0,0],[2,0],[0,3],[-1,3],[4,1]],
            [[0,0],[1,0],[7,10],[4,4],[2,1]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,4],[4,5],[-1,1]],
            [[0,0],[1,0],[2,8],[3,8],[3,9]],
            [[0,0],[1,0],[1,2],[-2,-5],[0,-5]],
            [[0,0],[1,0],[2,3],[-1,3],[-2,1]],
            [[0,0],[1,0],[1,2],[-1,-3],[7,10]],
            [[0,0],[1,0],[2,7],[3,7],[3,10]],
            [[0,0],[1,0],[0,1],[4,4],[1,4]],
            [[0,0],[1,0],[0,1],[2,9],[3,12]],
            [[0,0],[5,0],[0,1],[3,-2],[2,-2]],
            [[0,0],[1,0],[4,5],[-3,-4],[-3,-6]],
            [[0,0],[1,0],[7,9],[5,5],[3,2]],
            [[0,0],[1,0],[1,5],[3,7],[3,6]],
            [[0,0],[1,0],[0,1],[4,-4],[1,-4]],
            [[0,0],[1,0],[3,5],[3,2],[5,5]],
            [[0,0],[1,0],[2,4],[-1,3],[-1,4]],
            [[0,0],[1,0],[2,7],[-1,-8],[2,5]],
            [[0,0],[1,0],[5,7],[-5,-9],[4,5]],
            [[0,0],[1,0],[1,2],[4,4],[4,1]],
            [[0,0],[1,0],[1,5],[3,5],[3,4]],
            [[0,0],[1,0],[2,5],[2,1],[4,5]],
            [[0,0],[1,0],[5,6],[6,7],[3,1]],
            [[0,0],[1,0],[1,4],[3,4],[3,2]],
            [[0,0],[1,0],[0,3],[-3,2],[-4,3]],
            [[0,0],[1,0],[2,5],[3,7],[3,3]],
            [[0,0],[2,0],[0,2],[2,3],[1,-3]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[4,2],[-3,1]],
            [[0,0],[1,0],[1,6],[2,7],[2,3]],
            [[0,0],[1,0],[5,8],[6,9],[2,1]],
            [[0,0],[2,0],[1,3],[3,1],[4,3]],
            [[0,0],[1,0],[3,5],[4,5],[7,11]],
            [[0,0],[6,0],[0,1],[5,-1],[1,-1]],
            [[0,0],[1,0],[3,7],[2,1],[3,3]],
            [[0,0],[1,0],[2,3],[-1,2],[2,5]],
            [[0,0],[1,0],[2,3],[-1,3],[-2,2]],
            [[0,0],[1,0],[3,7],[2,2],[5,11]],
            [[0,0],[1,0],[3,5],[5,6],[6,8]],
            [[0,0],[1,0],[1,3],[3,5],[3,2]],
            [[0,0],[2,0],[1,2],[-3,2],[-3,1]],
            [[0,0],[1,0],[0,1],[-10,4],[-12,5]],
            [[0,0],[1,0],[1,5],[2,7],[2,2]],
            [[0,0],[1,0],[0,2],[-4,1],[-5,2]],
            [[0,0],[1,0],[1,5],[2,6],[2,1]],
            [[0,0],[1,0],[6,8],[4,4],[-2,-3]],
            [[0,0],[1,0],[3,5],[-6,-11],[-7,-12]],
            [[0,0],[1,0],[8,12],[9,14],[-2,-5]],
            [[0,0],[1,0],[2,5],[1,5],[-2,-11]],
            [[0,0],[1,0],[9,11],[-6,-8],[-4,-5]],
            [[0,0],[1,0],[4,8],[-4,-9],[5,11]],
            [[0,0],[1,0],[8,13],[-4,-7],[-3,-5]],
            [[0,0],[1,0],[2,5],[3,11],[-1,-9]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,4],[1,4],[-3,-13]],
            [[0,0],[1,0],[3,10],[4,10],[0,-1]],
            [[0,0],[1,0],[2,12],[-1,-7],[2,13]],
            [[0,0],[1,0],[1,2],[8,12],[-2,-5]],
            [[0,0],[1,0],[10,13],[-5,-7],[-3,-4]],
            [[0,0],[1,0],[2,4],[1,5],[-2,-11]],
            [[0,0],[2,0],[0,1],[3,5],[1,-4]],
            [[0,0],[5,0],[0,1],[4,-3],[-1,1]],
            [[0,0],[2,0],[1,3],[4,5],[1,-2]],
            [[0,0],[1,0],[8,11],[3,5],[-1,-3]],
            [[0,0],[1,0],[1,5],[2,9],[-2,-11]],
            [[0,0],[2,0],[1,2],[3,5],[-2,-5]],
            [[0,0],[1,0],[2,8],[-2,-11],[2,9]],
            [[0,0],[4,0],[0,1],[5,2],[1,-2]],
            [[0,0],[2,0],[3,4],[-2,-5],[3,5]],
            [[0,0],[1,0],[4,9],[3,8],[4,7]],
            [[0,0],[1,0],[7,10],[8,11],[6,7]],
            [[0,0],[1,0],[3,5],[5,6],[-4,-7]],
            [[0,0],[1,0],[0,2],[-5,1],[-3,3]],
            [[0,0],[1,0],[0,6],[-1,5],[2,2]],
            [[0,0],[1,0],[3,4],[6,6],[4,2]],
            [[0,0],[1,0],[0,3],[3,5],[-2,1]],
            [[0,0],[1,0],[5,8],[6,8],[4,4]],
            [[0,0],[1,0],[6,11],[4,5],[3,3]],
            [[0,0],[6,0],[1,2],[2,-1],[0,-1]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[4,6],[1,-2],[4,7]],
            [[0,0],[1,0],[10,11],[-5,-7],[11,12]],
            [[0,0],[1,0],[7,9],[-5,-8],[6,7]],
            [[0,0],[1,0],[3,5],[-1,2],[-1,3]],
            [[0,0],[1,0],[6,7],[-6,-8],[7,9]],
            [[0,0],[1,0],[7,8],[5,4],[3,1]],
            [[0,0],[2,0],[2,3],[-1,-4],[4,4]],
            [[0,0],[1,0],[6,8],[5,7],[6,6]],
            [[0,0],[4,0],[0,2],[-2,1],[5,-2]],
            [[0,0],[1,0],[0,6],[-1,7],[2,2]],
            [[0,0],[1,0],[0,6],[-1,1],[-2,4]],
            [[0,0],[1,0],[0,2],[-4,3],[-2,5]],
            [[0,0],[1,0],[2,4],[-2,2],[-3,1]],
            [[0,0],[1,0],[0,6],[-2,6],[-2,5]],
            [[0,0],[2,0],[0,2],[3,4],[1,-3]],
            [[0,0],[1,0],[2,4],[6,9],[-2,-5]],
            [[0,0],[1,0],[0,6],[-2,4],[-2,3]],
            [[0,0],[1,0],[7,8],[-7,-10],[8,9]],
            [[0,0],[1,0],[3,5],[-2,-7],[5,11]],
            [[0,0],[1,0],[1,3],[3,6],[-3,-11]],
            [[0,0],[2,0],[4,5],[-1,-4],[1,-2]],
            [[0,0],[1,0],[3,7],[-3,-11],[3,6]],
            [[0,0],[1,0],[2,7],[-1,-9],[3,10]],
            [[0,0],[1,0],[3,10],[-1,-8],[3,9]],
            [[0,0],[1,0],[6,7],[3,5],[1,3]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[5,6],[-4,-7],[8,11]],
            [[0,0],[1,0],[0,6],[-2,2],[-2,1]],
            [[0,0],[1,0],[2,3],[3,3],[-4,1]],
            [[0,0],[6,0],[1,2],[7,-1],[2,2]],
            [[0,0],[1,0],[0,6],[-1,3],[-2,8]],
            [[0,0],[1,0],[9,11],[10,12],[6,6]],
            [[0,0],[1,0],[0,6],[-1,2],[-2,6]],
            [[0,0],[1,0],[4,7],[3,7],[4,5]],
            [[0,0],[1,0],[7,9],[8,10],[6,6]],
            [[0,0],[2,0],[1,2],[4,4],[-1,-4]],
            [[0,0],[3,0],[2,3],[2,-3],[3,2]],
            [[0,0],[2,0],[3,4],[-1,-5],[0,-4]],
            [[0,0],[1,0],[3,9],[-2,-8],[3,10]],
            [[0,0],[6,0],[0,1],[13,-2],[14,-2]],
            [[0,0],[1,0],[7,11],[-2,-5],[9,14]],
            [[0,0],[4,0],[0,1],[4,2],[3,-2]],
            [[0,0],[1,0],[0,6],[-1,6],[2,2]],
            [[0,0],[2,0],[1,2],[-4,1],[0,3]],
            [[0,0],[1,0],[4,5],[-7,-10],[-6,-8]],
            [[0,0],[1,0],[0,1],[6,9],[7,10]],
            [[0,0],[1,0],[9,11],[-3,-5],[10,12]],
            [[0,0],[1,0],[3,8],[2,7],[3,5]],
            [[0,0],[1,0],[2,7],[-1,-8],[-1,-10]],
            [[0,0],[1,0],[0,1],[-6,1],[-8,3]],
            [[0,0],[1,0],[2,7],[-1,-8],[3,10]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,7],[4,5],[2,5]],
            [[0,0],[1,0],[3,6],[2,6],[-2,-7]],
            [[0,0],[1,0],[1,3],[3,3],[-3,1]],
            [[0,0],[6,0],[0,1],[-1,1],[4,-2]],
            [[0,0],[1,0],[3,8],[-2,-9],[3,7]],
            [[0,0],[1,0],[5,7],[-5,-9],[6,8]],
            [[0,0],[1,0],[3,7],[3,4],[5,9]],
            [[0,0],[1,0],[1,6],[0,-1],[3,6]],
            [[0,0],[1,0],[7,9],[5,5],[9,11]],
            [[0,0],[1,0],[5,9],[5,7],[3,3]],
            [[0,0],[1,0],[1,5],[3,5],[3,3]],
            [[0,0],[1,0],[5,7],[5,5],[3,5]],
            [[0,0],[1,0],[0,1],[-10,2],[-12,3]],
            [[0,0],[1,0],[2,7],[2,3],[4,13]],
            [[0,0],[1,0],[6,8],[10,13],[11,14]],
            [[0,0],[1,0],[6,7],[-7,-10],[7,8]],
            [[0,0],[5,0],[0,1],[11,-2],[13,-2]],
            [[0,0],[1,0],[4,5],[3,5],[4,2]],
            [[0,0],[1,0],[2,7],[2,3],[4,11]],
            [[0,0],[1,0],[2,10],[3,12],[3,13]],
            [[0,0],[1,0],[5,7],[7,9],[5,5]],
            [[0,0],[2,0],[0,3],[-1,4],[-3,2]],
            [[0,0],[1,0],[4,5],[5,6],[5,3]],
            [[0,0],[1,0],[0,5],[-2,3],[-2,1]],
            [[0,0],[1,0],[5,6],[4,2],[5,3]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,5],[2,5],[3,1]],
            [[0,0],[1,0],[0,4],[-2,6],[-3,10]],
            [[0,0],[1,0],[0,1],[-14,12],[-15,13]],
            [[0,0],[1,0],[3,4],[4,5],[4,1]],
            [[0,0],[1,0],[2,8],[3,8],[3,10]],
            [[0,0],[1,0],[4,5],[6,7],[3,1]],
            [[0,0],[1,0],[4,7],[4,4],[3,2]],
            [[0,0],[1,0],[1,3],[-2,1],[0,5]],
            [[0,0],[1,0],[2,5],[5,10],[5,11]],
            [[0,0],[3,0],[0,2],[3,-3],[1,-2]],
            [[0,0],[1,0],[3,5],[4,4],[6,8]],
            [[0,0],[1,0],[0,4],[-2,4],[-3,7]],
            [[0,0],[1,0],[1,2],[5,4],[7,4]],
            [[0,0],[1,0],[1,2],[-3,1],[0,4]],
            [[0,0],[1,0],[4,7],[3,3],[6,9]],
            [[0,0],[1,0],[0,2],[-4,8],[-6,10]],
            [[0,0],[2,0],[0,1],[4,-4],[2,-4]],
            [[0,0],[1,0],[1,3],[4,6],[5,6]],
            [[0,0],[1,0],[3,6],[1,4],[3,3]],
            [[0,0],[4,0],[0,1],[8,-2],[13,-3]],
            [[0,0],[1,0],[1,4],[3,4],[3,1]],
            [[0,0],[1,0],[3,8],[3,4],[2,1]],
            [[0,0],[1,0],[0,3],[-3,3],[-3,1]],
            [[0,0],[2,0],[0,2],[1,-1],[4,4]],
            [[0,0],[1,0],[0,3],[-1,1],[3,6]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,3],[4,3],[5,5]],
            [[0,0],[2,0],[2,3],[-1,3],[3,2]],
            [[0,0],[3,0],[0,1],[3,-3],[2,-4]],
            [[0,0],[1,0],[5,7],[4,4],[8,10]],
            [[0,0],[1,0],[0,2],[2,8],[3,10]],
            [[0,0],[1,0],[2,6],[4,9],[4,10]],
            [[0,0],[1,0],[1,3],[3,1],[3,5]],
            [[0,0],[1,0],[1,3],[3,1],[5,3]],
            [[0,0],[1,0],[1,6],[2,7],[2,2]],
            [[0,0],[1,0],[1,6],[2,6],[2,1]],
            [[0,0],[1,0],[0,2],[-3,2],[-3,5]],
            [[0,0],[1,0],[2,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,2],[-5,2],[-5,1]],
            [[0,0],[1,0],[2,5],[2,2],[5,11]],
            [[0,0],[1,0],[0,1],[-10,8],[-12,10]],
            [[0,0],[2,0],[1,2],[5,2],[-2,1]],
            [[0,0],[1,0],[6,7],[3,2],[9,10]],
            [[0,0],[1,0],[6,7],[2,1],[10,11]],
            [[0,0],[1,0],[1,6],[2,8],[2,3]],
            [[0,0],[1,0],[1,3],[3,3],[3,7]],
            [[0,0],[1,0],[3,4],[2,6],[3,7]],
            [[0,0],[1,0],[3,6],[4,6],[-2,-5]],
            [[0,0],[1,0],[3,5],[3,3],[7,11]],
            [[0,0],[2,0],[1,2],[-3,1],[-4,2]],
            [[0,0],[1,0],[1,5],[2,2],[2,8]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,2],[0,-3],[2,-3]],
            [[0,0],[1,0],[0,2],[-4,1],[-6,2]],
            [[0,0],[1,0],[0,1],[2,4],[2,9]],
            [[0,0],[1,0],[1,5],[2,7],[2,1]],
            [[0,0],[1,0],[0,1],[-6,4],[-9,7]],
            [[0,0],[1,0],[1,7],[2,4],[3,9]],
            [[0,0],[7,0],[0,1],[17,-2],[1,1]],
            [[0,0],[2,0],[3,4],[-1,-5],[4,4]],
            [[0,0],[1,0],[0,1],[3,-7],[1,-7]],
            [[0,0],[1,0],[5,7],[5,9],[4,4]],
            [[0,0],[1,0],[5,7],[2,5],[3,7]],
            [[0,0],[1,0],[0,1],[7,-7],[3,-5]],
            [[0,0],[1,0],[11,13],[7,7],[2,1]],
            [[0,0],[1,0],[0,1],[7,-7],[1,-3]],
            [[0,0],[2,0],[1,2],[4,4],[-1,-5]],
            [[0,0],[7,0],[0,1],[15,-2],[1,1]],
            [[0,0],[1,0],[4,9],[-2,-7],[5,10]],
            [[0,0],[1,0],[5,11],[2,1],[3,3]],
            [[0,0],[1,0],[3,6],[5,7],[1,4]],
            [[0,0],[1,0],[5,10],[6,13],[-2,-7]],
            [[0,0],[1,0],[2,4],[-2,3],[2,5]],
            [[0,0],[1,0],[7,9],[2,1],[7,7]],
            [[0,0],[7,0],[0,1],[1,-1],[3,-2]],
            [[0,0],[1,0],[0,2],[-6,1],[-2,3]],
            [[0,0],[1,0],[0,7],[-1,5],[-2,11]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[5,6],[7,7],[3,1]],
            [[0,0],[1,0],[0,7],[-1,7],[2,1]],
            [[0,0],[1,0],[8,9],[-8,-11],[9,10]],
            [[0,0],[1,0],[4,9],[5,11],[3,3]],
            [[0,0],[1,0],[5,7],[4,7],[5,5]],
            [[0,0],[1,0],[1,3],[5,5],[-2,1]],
            [[0,0],[1,0],[11,14],[12,15],[2,1]],
            [[0,0],[1,0],[0,7],[-1,3],[-2,7]],
            [[0,0],[1,0],[0,1],[3,7],[1,7]],
            [[0,0],[1,0],[0,1],[5,-7],[3,-7]],
            [[0,0],[1,0],[1,3],[4,4],[-3,1]],
            [[0,0],[1,0],[2,4],[6,9],[-3,-7]],
            [[0,0],[1,0],[6,7],[-9,-11],[-11,-13]],
            [[0,0],[1,0],[9,11],[2,1],[7,7]],
            [[0,0],[1,0],[1,3],[2,3],[-5,1]],
            [[0,0],[1,0],[0,7],[-1,2],[-2,5]],
            [[0,0],[2,0],[0,4],[-1,2],[3,-5]],
            [[0,0],[1,0],[7,13],[3,3],[2,1]],
            [[0,0],[4,0],[0,1],[3,-3],[1,-3]],
            [[0,0],[1,0],[5,11],[-2,-7],[5,10]],
            [[0,0],[1,0],[3,5],[5,5],[1,4]],
            [[0,0],[1,0],[3,10],[4,10],[4,12]],
            [[0,0],[1,0],[2,5],[-1,1],[-2,3]],
            [[0,0],[1,0],[6,7],[-9,-13],[7,8]],
            [[0,0],[1,0],[6,9],[-6,-10],[7,11]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[7,0],[0,1],[9,-1],[1,2]],
            [[0,0],[1,0],[3,8],[-1,-7],[4,13]],
            [[0,0],[1,0],[8,10],[10,13],[-5,-8]],
            [[0,0],[1,0],[2,3],[6,4],[-2,1]],
            [[0,0],[2,0],[2,3],[-2,-5],[4,4]],
            [[0,0],[1,0],[4,8],[5,11],[-3,-10]],
            [[0,0],[1,0],[3,11],[-1,-9],[3,10]],
            [[0,0],[1,0],[7,10],[6,7],[9,12]],
            [[0,0],[1,0],[8,10],[-6,-8],[10,13]],
            [[0,0],[1,0],[0,7],[-1,8],[2,1]],
            [[0,0],[1,0],[7,8],[-5,-7],[7,9]],
            [[0,0],[4,0],[0,1],[6,2],[1,-2]],
            [[0,0],[1,0],[4,9],[-3,-10],[4,8]],
            [[0,0],[1,0],[3,11],[-1,-8],[3,10]],
            [[0,0],[1,0],[3,7],[-3,-11],[4,9]],
            [[0,0],[1,0],[4,6],[6,7],[1,3]],
            [[0,0],[1,0],[4,11],[4,8],[3,5]],
            [[0,0],[1,0],[0,1],[4,5],[1,5]],
            [[0,0],[1,0],[0,5],[-2,1],[-3,2]],
            [[0,0],[1,0],[1,3],[4,7],[4,4]],
            [[0,0],[1,0],[1,4],[3,5],[-2,1]],
            [[0,0],[1,0],[4,8],[3,7],[4,5]],
            [[0,0],[1,0],[8,11],[2,1],[5,5]],
            [[0,0],[1,0],[5,7],[5,5],[8,11]],
            [[0,0],[1,0],[2,3],[10,13],[11,14]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,2],[4,3],[6,1]],
            [[0,0],[1,0],[0,1],[11,2],[14,3]],
            [[0,0],[1,0],[3,5],[3,7],[-1,1]],
            [[0,0],[1,0],[1,3],[4,4],[4,1]],
            [[0,0],[1,0],[6,7],[-6,-8],[-7,-10]],
            [[0,0],[1,0],[6,7],[7,8],[4,2]],
            [[0,0],[1,0],[0,4],[-2,1],[-3,4]],
            [[0,0],[5,0],[1,2],[5,-1],[2,3]],
            [[0,0],[1,0],[0,3],[-4,1],[-1,4]],
            [[0,0],[1,0],[3,5],[-3,-8],[-5,-14]],
            [[0,0],[1,0],[5,8],[2,1],[5,5]],
            [[0,0],[1,0],[1,3],[4,5],[4,2]],
            [[0,0],[1,0],[4,9],[5,10],[2,1]],
            [[0,0],[1,0],[0,5],[-2,3],[-3,5]],
            [[0,0],[1,0],[6,8],[-5,-8],[6,7]],
            [[0,0],[1,0],[4,7],[1,4],[-1,1]],
            [[0,0],[2,0],[0,3],[1,3],[-4,1]],
            [[0,0],[1,0],[7,8],[3,1],[4,2]],
            [[0,0],[1,0],[11,14],[5,5],[2,1]],
            [[0,0],[2,0],[3,4],[-1,-5],[-1,-6]],
            [[0,0],[1,0],[0,1],[4,-5],[1,-5]],
            [[0,0],[1,0],[0,3],[2,3],[-4,1]],
            [[0,0],[1,0],[3,6],[5,7],[-2,-5]],
            [[0,0],[2,0],[3,4],[5,2],[5,1]],
            [[0,0],[1,0],[3,8],[4,10],[4,7]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[8,11],[-4,-7],[7,9]],
            [[0,0],[1,0],[6,7],[-7,-10],[-5,-8]],
            [[0,0],[1,0],[4,8],[2,5],[4,5]],
            [[0,0],[1,0],[13,15],[14,16],[2,1]],
            [[0,0],[2,0],[3,4],[-1,-6],[3,3]],
            [[0,0],[1,0],[3,10],[-1,-7],[-1,-9]],
            [[0,0],[1,0],[3,5],[-1,1],[-1,3]],
            [[0,0],[1,0],[2,7],[-1,-10],[-1,-12]],
            [[0,0],[1,0],[3,5],[5,5],[5,8]],
            [[0,0],[1,0],[6,8],[-6,-9],[7,10]],
            [[0,0],[1,0],[3,4],[6,4],[1,3]],
            [[0,0],[1,0],[11,12],[14,16],[15,17]],
            [[0,0],[1,0],[4,9],[4,6],[2,1]],
            [[0,0],[3,0],[0,1],[3,3],[2,-3]],
            [[0,0],[1,0],[1,4],[3,7],[3,3]],
            [[0,0],[1,0],[1,2],[4,4],[7,10]],
            [[0,0],[1,0],[4,7],[5,7],[8,13]],
            [[0,0],[2,0],[0,1],[-6,1],[-10,3]],
            [[0,0],[1,0],[5,7],[7,8],[8,10]],
            [[0,0],[1,0],[5,9],[5,7],[2,1]],
            [[0,0],[1,0],[3,11],[3,7],[2,3]],
            [[0,0],[1,0],[1,3],[5,3],[-1,2]],
            [[0,0],[1,0],[1,4],[3,5],[3,1]],
            [[0,0],[1,0],[2,7],[3,9],[3,5]],
            [[0,0],[2,0],[0,1],[10,-6],[11,-6]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[0,2],[-2,3],[-4,1]],
            [[0,0],[2,0],[0,1],[-12,3],[-10,2]],
            [[0,0],[1,0],[3,5],[4,6],[4,2]],
            [[0,0],[1,0],[9,11],[2,1],[11,13]],
            [[0,0],[1,0],[1,2],[4,1],[7,4]],
            [[0,0],[1,0],[0,4],[-1,1],[-3,7]],
            [[0,0],[1,0],[5,6],[3,1],[5,3]],
            [[0,0],[1,0],[0,4],[-1,3],[3,4]],
            [[0,0],[1,0],[2,3],[5,3],[-2,1]],
            [[0,0],[1,0],[2,4],[-1,3],[2,6]],
            [[0,0],[2,0],[0,1],[5,-6],[4,-6]],
            [[0,0],[2,0],[1,3],[4,3],[-1,2]],
            [[0,0],[2,0],[0,3],[-2,3],[4,1]],
            [[0,0],[1,0],[0,3],[-3,1],[-4,3]],
            [[0,0],[1,0],[2,4],[0,4],[-2,2]],
            [[0,0],[1,0],[2,5],[3,6],[3,1]],
            [[0,0],[1,0],[1,4],[4,4],[4,3]],
            [[0,0],[2,0],[2,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,1],[1,2],[9,6]],
            [[0,0],[1,0],[0,3],[-4,7],[-4,6]],
            [[0,0],[1,0],[0,3],[-4,3],[-4,2]],
            [[0,0],[1,0],[3,9],[4,9],[4,10]],
            [[0,0],[1,0],[0,1],[10,3],[12,4]],
            [[0,0],[2,0],[0,2],[1,4],[4,1]],
            [[0,0],[1,0],[0,3],[-4,10],[-4,11]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 2001-2500.
function canonical_dim3_facet_cache_5(id)
    // Convert the id
    id -:= 2000;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[2,7],[3,8]],
            [[0,0],[1,0],[1,4],[4,7],[4,6]],
            [[0,0],[1,0],[2,3],[-2,1],[2,5]],
            [[0,0],[1,0],[3,8],[2,1],[3,3]],
            [[0,0],[1,0],[5,7],[2,1],[8,10]],
            [[0,0],[1,0],[1,3],[3,6],[3,1]],
            [[0,0],[1,0],[3,4],[3,1],[6,4]],
            [[0,0],[2,0],[1,3],[-2,6],[2,1]],
            [[0,0],[1,0],[0,1],[6,3],[1,3]],
            [[0,0],[1,0],[2,4],[-1,1],[2,7]],
            [[0,0],[1,0],[4,5],[6,10],[8,13]],
            [[0,0],[2,0],[1,3],[4,3],[4,1]],
            [[0,0],[1,0],[1,2],[-2,10],[-2,11]],
            [[0,0],[1,0],[2,3],[4,1],[6,3]],
            [[0,0],[1,0],[6,8],[2,1],[10,13]],
            [[0,0],[1,0],[4,7],[6,9],[2,1]],
            [[0,0],[1,0],[2,5],[3,7],[3,2]],
            [[0,0],[1,0],[1,6],[2,7],[2,1]],
            [[0,0],[1,0],[1,2],[3,3],[7,11]],
            [[0,0],[1,0],[1,6],[2,3],[2,9]],
            [[0,0],[1,0],[5,6],[2,1],[10,11]],
            [[0,0],[1,0],[1,2],[3,1],[7,5]],
            [[0,0],[1,0],[1,6],[2,8],[2,2]],
            [[0,0],[1,0],[1,3],[2,1],[5,7]],
            [[0,0],[3,0],[0,2],[-5,2],[-4,1]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,3],[3,2],[3,7]],
            [[0,0],[1,0],[0,2],[-5,1],[-7,2]],
            [[0,0],[1,0],[3,5],[-3,-6],[-3,-8]],
            [[0,0],[1,0],[3,5],[-2,-4],[-4,-10]],
            [[0,0],[1,0],[0,1],[2,5],[2,11]],
            [[0,0],[1,0],[1,6],[2,9],[2,2]],
            [[0,0],[2,0],[1,2],[-4,1],[-5,2]],
            [[0,0],[1,0],[1,6],[2,8],[2,1]],
            [[0,0],[1,0],[0,1],[-6,2],[-12,5]],
            [[0,0],[1,0],[1,2],[2,3],[7,3]],
            [[0,0],[1,0],[7,11],[-6,-10],[8,13]],
            [[0,0],[1,0],[2,6],[2,7],[-2,1]],
            [[0,0],[1,0],[2,3],[7,5],[-2,1]],
            [[0,0],[1,0],[0,2],[-7,1],[-1,3]],
            [[0,0],[1,0],[1,2],[0,-7],[-2,-5]],
            [[0,0],[1,0],[7,8],[6,8],[-5,-7]],
            [[0,0],[2,0],[1,5],[3,3],[4,1]],
            [[0,0],[2,0],[4,5],[-1,-5],[5,6]],
            [[0,0],[1,0],[0,5],[-3,5],[-3,4]],
            [[0,0],[1,0],[5,9],[5,6],[4,4]],
            [[0,0],[1,0],[5,7],[3,2],[7,7]],
            [[0,0],[1,0],[2,6],[-1,3],[-2,1]],
            [[0,0],[7,0],[0,1],[3,-2],[2,-2]],
            [[0,0],[1,0],[11,13],[7,7],[3,2]],
            [[0,0],[1,0],[1,7],[3,11],[3,10]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[7,11],[3,3],[11,17]],
            [[0,0],[1,0],[3,5],[-5,-14],[-6,-16]],
            [[0,0],[1,0],[3,7],[3,3],[5,7]],
            [[0,0],[1,0],[1,7],[3,7],[3,6]],
            [[0,0],[1,0],[8,9],[9,10],[3,1]],
            [[0,0],[2,0],[1,2],[-5,1],[-1,3]],
            [[0,0],[1,0],[3,7],[-1,-6],[-3,-8]],
            [[0,0],[1,0],[6,13],[-2,-7],[7,15]],
            [[0,0],[1,0],[3,10],[4,10],[4,13]],
            [[0,0],[1,0],[0,3],[-4,3],[-2,5]],
            [[0,0],[1,0],[2,4],[-1,4],[-2,1]],
            [[0,0],[1,0],[2,3],[-4,1],[2,4]],
            [[0,0],[1,0],[10,13],[11,14],[5,5]],
            [[0,0],[1,0],[3,4],[4,4],[-3,1]],
            [[0,0],[1,0],[2,3],[5,4],[5,1]],
            [[0,0],[1,0],[2,8],[-1,-9],[3,10]],
            [[0,0],[1,0],[7,10],[8,11],[5,5]],
            [[0,0],[1,0],[1,4],[4,4],[-1,3]],
            [[0,0],[1,0],[5,8],[4,7],[5,5]],
            [[0,0],[1,0],[4,13],[-1,-7],[4,12]],
            [[0,0],[1,0],[3,10],[-1,-7],[4,12]],
            [[0,0],[1,0],[5,9],[2,1],[5,6]],
            [[0,0],[1,0],[1,7],[3,9],[3,8]],
            [[0,0],[1,0],[0,5],[-3,2],[-3,1]],
            [[0,0],[1,0],[0,1],[-14,13],[-20,18]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[2,3],[5,4],[-2,1]],
            [[0,0],[1,0],[6,7],[-5,-8],[10,13]],
            [[0,0],[1,0],[2,3],[-2,3],[2,5]],
            [[0,0],[1,0],[1,2],[-2,-7],[0,-7]],
            [[0,0],[2,0],[2,3],[3,3],[-4,1]],
            [[0,0],[2,0],[3,5],[-1,-6],[3,4]],
            [[0,0],[5,0],[1,3],[5,-1],[2,3]],
            [[0,0],[1,0],[9,11],[7,7],[3,2]],
            [[0,0],[1,0],[7,8],[-8,-11],[-6,-9]],
            [[0,0],[1,0],[6,8],[-6,-9],[-8,-11]],
            [[0,0],[1,0],[7,9],[3,2],[7,7]],
            [[0,0],[1,0],[3,11],[-1,-8],[-1,-10]],
            [[0,0],[7,0],[0,1],[15,-2],[2,1]],
            [[0,0],[7,0],[0,1],[5,-2],[4,-2]],
            [[0,0],[2,0],[3,4],[-1,-6],[4,5]],
            [[0,0],[2,0],[0,3],[3,4],[1,-3]],
            [[0,0],[1,0],[6,7],[2,4],[-1,1]],
            [[0,0],[1,0],[9,13],[6,7],[4,4]],
            [[0,0],[1,0],[4,7],[3,7],[4,4]],
            [[0,0],[1,0],[3,7],[2,7],[3,3]],
            [[0,0],[1,0],[2,7],[-1,-9],[-1,-12]],
            [[0,0],[3,0],[2,3],[2,-3],[3,4]],
            [[0,0],[1,0],[3,7],[4,9],[4,5]],
            [[0,0],[1,0],[2,3],[6,3],[-1,2]],
            [[0,0],[6,0],[0,1],[4,-2],[2,-2]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[8,11],[-4,-7],[9,12]],
            [[0,0],[1,0],[3,4],[5,5],[11,14]],
            [[0,0],[1,0],[4,7],[4,3],[3,1]],
            [[0,0],[1,0],[9,12],[11,14],[13,17]],
            [[0,0],[1,0],[1,5],[2,2],[4,8]],
            [[0,0],[1,0],[2,5],[3,2],[5,5]],
            [[0,0],[1,0],[8,11],[4,4],[10,13]],
            [[0,0],[1,0],[4,7],[2,5],[4,4]],
            [[0,0],[1,0],[5,11],[6,13],[2,1]],
            [[0,0],[1,0],[5,8],[5,6],[8,11]],
            [[0,0],[1,0],[5,8],[6,8],[9,14]],
            [[0,0],[1,0],[0,5],[-1,3],[-3,11]],
            [[0,0],[2,0],[1,3],[3,3],[-3,1]],
            [[0,0],[1,0],[0,2],[-4,1],[-4,4]],
            [[0,0],[1,0],[2,4],[-2,3],[-2,4]],
            [[0,0],[1,0],[5,8],[3,2],[5,5]],
            [[0,0],[1,0],[0,5],[-1,5],[3,2]],
            [[0,0],[4,0],[1,2],[4,-2],[7,-3]],
            [[0,0],[1,0],[1,6],[3,6],[3,4]],
            [[0,0],[2,0],[1,4],[4,4],[4,3]],
            [[0,0],[3,0],[2,3],[1,3],[6,1]],
            [[0,0],[1,0],[1,2],[-3,2],[0,5]],
            [[0,0],[1,0],[4,9],[3,3],[4,5]],
            [[0,0],[1,0],[0,1],[6,4],[2,4]],
            [[0,0],[1,0],[1,6],[3,10],[3,8]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,13],[2,2],[8,17]],
            [[0,0],[1,0],[5,8],[7,10],[4,4]],
            [[0,0],[1,0],[4,11],[4,8],[2,2]],
            [[0,0],[1,0],[4,5],[3,5],[4,1]],
            [[0,0],[2,0],[1,4],[-1,1],[-2,4]],
            [[0,0],[2,0],[0,1],[10,2],[12,3]],
            [[0,0],[1,0],[3,10],[3,6],[2,1]],
            [[0,0],[1,0],[8,11],[5,5],[3,2]],
            [[0,0],[1,0],[1,6],[3,8],[3,6]],
            [[0,0],[2,0],[1,2],[7,4],[8,4]],
            [[0,0],[1,0],[3,11],[3,7],[2,2]],
            [[0,0],[1,0],[4,5],[3,6],[6,11]],
            [[0,0],[1,0],[0,1],[-12,4],[-14,4]],
            [[0,0],[1,0],[1,5],[3,7],[3,4]],
            [[0,0],[1,0],[2,3],[-3,2],[-3,3]],
            [[0,0],[3,0],[1,2],[2,-4],[3,-3]],
            [[0,0],[1,0],[0,1],[8,5],[11,6]],
            [[0,0],[2,0],[1,3],[5,3],[5,2]],
            [[0,0],[1,0],[1,5],[3,9],[3,6]],
            [[0,0],[1,0],[5,7],[7,8],[9,11]],
            [[0,0],[3,0],[1,2],[3,-3],[5,-4]],
            [[0,0],[2,0],[1,3],[-2,1],[-3,3]],
            [[0,0],[1,0],[1,6],[0,-3],[3,8]],
            [[0,0],[1,0],[2,7],[3,10],[3,5]],
            [[0,0],[1,0],[2,4],[4,7],[7,10]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-8,2],[-12,4]],
            [[0,0],[1,0],[0,1],[8,3],[3,3]],
            [[0,0],[2,0],[2,3],[5,3],[5,1]],
            [[0,0],[1,0],[3,10],[2,2],[3,5]],
            [[0,0],[1,0],[1,5],[3,5],[3,2]],
            [[0,0],[1,0],[1,6],[0,-3],[3,10]],
            [[0,0],[1,0],[2,3],[3,4],[7,4]],
            [[0,0],[1,0],[3,5],[7,10],[9,14]],
            [[0,0],[1,0],[7,9],[9,11],[3,2]],
            [[0,0],[1,0],[4,7],[4,5],[8,13]],
            [[0,0],[1,0],[1,4],[3,8],[3,4]],
            [[0,0],[2,0],[0,1],[-12,3],[-15,4]],
            [[0,0],[1,0],[0,3],[-4,6],[-5,8]],
            [[0,0],[1,0],[1,4],[3,6],[3,2]],
            [[0,0],[1,0],[0,2],[-3,1],[-3,5]],
            [[0,0],[1,0],[1,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,3],[-4,10],[-5,13]],
            [[0,0],[1,0],[3,9],[4,9],[4,11]],
            [[0,0],[2,0],[2,3],[4,1],[6,3]],
            [[0,0],[2,0],[2,3],[4,5],[4,1]],
            [[0,0],[1,0],[2,6],[3,6],[3,2]],
            [[0,0],[1,0],[2,3],[-1,1],[2,7]],
            [[0,0],[1,0],[0,1],[-14,10],[-15,11]],
            [[0,0],[1,0],[0,3],[3,8],[3,9]],
            [[0,0],[1,0],[3,5],[6,8],[3,2]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-15,12],[-16,13]],
            [[0,0],[1,0],[0,1],[-4,1],[-12,5]],
            [[0,0],[1,0],[0,1],[3,6],[3,10]],
            [[0,0],[1,0],[0,1],[-4,1],[-8,5]],
            [[0,0],[3,0],[0,1],[-15,4],[-12,3]],
            [[0,0],[1,0],[3,6],[3,7],[0,4]],
            [[0,0],[1,0],[1,2],[-3,9],[-3,10]],
            [[0,0],[3,0],[0,1],[6,-3],[3,-3]],
            [[0,0],[1,0],[0,1],[-14,10],[-18,13]],
            [[0,0],[2,0],[1,2],[4,1],[4,5]],
            [[0,0],[1,0],[1,3],[3,1],[3,7]],
            [[0,0],[1,0],[0,1],[4,2],[11,2]],
            [[0,0],[1,0],[1,6],[2,2],[2,10]],
            [[0,0],[1,0],[0,2],[-5,1],[-8,2]],
            [[0,0],[1,0],[1,6],[2,9],[2,1]],
            [[0,0],[1,0],[0,1],[2,3],[7,3]],
            [[0,0],[2,0],[1,2],[0,-3],[2,-5]],
            [[0,0],[2,0],[1,2],[-4,1],[-6,2]],
            [[0,0],[1,0],[0,1],[12,3],[19,4]],
            [[0,0],[1,0],[10,13],[12,15],[2,1]],
            [[0,0],[1,0],[2,5],[-2,1],[2,7]],
            [[0,0],[1,0],[2,5],[-2,1],[-2,3]],
            [[0,0],[1,0],[0,1],[-8,1],[-10,3]],
            [[0,0],[2,0],[4,5],[5,2],[6,3]],
            [[0,0],[2,0],[3,4],[3,5],[-1,3]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-8,1],[-12,3]],
            [[0,0],[8,0],[0,1],[-1,1],[4,-2]],
            [[0,0],[2,0],[1,2],[-6,1],[0,3]],
            [[0,0],[8,0],[0,1],[-1,1],[6,-2]],
            [[0,0],[1,0],[4,10],[-3,-9],[-5,-13]],
            [[0,0],[1,0],[2,5],[4,4],[4,8]],
            [[0,0],[1,0],[5,7],[-6,-11],[-8,-15]],
            [[0,0],[2,0],[0,5],[-1,4],[3,2]],
            [[0,0],[2,0],[2,4],[1,4],[5,1]],
            [[0,0],[3,0],[0,3],[-1,3],[6,1]],
            [[0,0],[1,0],[4,5],[-5,-7],[-5,-9]],
            [[0,0],[1,0],[11,15],[4,4],[12,16]],
            [[0,0],[1,0],[6,13],[7,14],[9,19]],
            [[0,0],[1,0],[3,11],[3,7],[2,1]],
            [[0,0],[1,0],[7,11],[8,12],[4,4]],
            [[0,0],[5,0],[0,2],[5,-1],[2,3]],
            [[0,0],[1,0],[4,13],[-1,-7],[5,16]],
            [[0,0],[2,0],[2,4],[-1,4],[3,3]],
            [[0,0],[1,0],[13,16],[14,17],[2,1]],
            [[0,0],[1,0],[3,7],[2,1],[5,7]],
            [[0,0],[1,0],[1,3],[4,5],[4,1]],
            [[0,0],[1,0],[0,4],[2,4],[-3,1]],
            [[0,0],[2,0],[4,5],[-1,-4],[-1,-6]],
            [[0,0],[1,0],[9,13],[6,7],[2,1]],
            [[0,0],[1,0],[7,8],[9,10],[3,1]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,4],[-4,4],[-4,3]],
            [[0,0],[1,0],[1,3],[4,2],[7,5]],
            [[0,0],[3,0],[2,3],[0,-3],[-2,-4]],
            [[0,0],[2,0],[1,5],[4,2],[4,1]],
            [[0,0],[2,0],[0,3],[-1,4],[-4,1]],
            [[0,0],[1,0],[4,11],[2,2],[4,7]],
            [[0,0],[1,0],[0,2],[2,12],[3,16]],
            [[0,0],[1,0],[4,6],[5,5],[8,11]],
            [[0,0],[1,0],[5,7],[4,3],[7,7]],
            [[0,0],[1,0],[0,1],[8,4],[4,4]],
            [[0,0],[1,0],[4,8],[3,7],[4,4]],
            [[0,0],[1,0],[10,12],[13,15],[16,19]],
            [[0,0],[2,0],[3,5],[-1,-6],[3,3]],
            [[0,0],[1,0],[0,1],[-20,18],[-21,19]],
            [[0,0],[1,0],[5,6],[4,1],[5,2]],
            [[0,0],[1,0],[4,11],[4,8],[3,4]],
            [[0,0],[1,0],[0,4],[-3,2],[-4,4]],
            [[0,0],[1,0],[9,14],[5,6],[2,1]],
            [[0,0],[1,0],[3,5],[6,7],[-1,1]],
            [[0,0],[1,0],[5,11],[7,14],[8,17]],
            [[0,0],[1,0],[1,3],[-2,-7],[0,-7]],
            [[0,0],[3,0],[0,2],[-3,3],[-5,1]],
            [[0,0],[1,0],[7,9],[7,7],[4,3]],
            [[0,0],[1,0],[5,8],[2,1],[8,11]],
            [[0,0],[1,0],[1,3],[-2,3],[0,7]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,5],[-2,2],[-3,5]],
            [[0,0],[1,0],[6,8],[-8,-12],[-5,-7]],
            [[0,0],[4,0],[1,2],[1,-1],[7,-3]],
            [[0,0],[1,0],[4,6],[6,7],[9,13]],
            [[0,0],[1,0],[0,2],[-5,1],[-2,4]],
            [[0,0],[2,0],[3,4],[0,4],[-1,2]],
            [[0,0],[1,0],[7,10],[6,7],[10,13]],
            [[0,0],[1,0],[0,1],[-14,4],[-16,5]],
            [[0,0],[1,0],[7,12],[8,13],[3,3]],
            [[0,0],[1,0],[8,11],[-4,-7],[11,15]],
            [[0,0],[1,0],[5,8],[8,11],[7,9]],
            [[0,0],[1,0],[4,9],[2,1],[4,5]],
            [[0,0],[1,0],[8,11],[10,13],[2,1]],
            [[0,0],[1,0],[4,9],[6,13],[2,1]],
            [[0,0],[1,0],[0,1],[9,2],[15,4]],
            [[0,0],[1,0],[0,1],[-16,14],[-18,16]],
            [[0,0],[1,0],[4,7],[7,10],[5,6]],
            [[0,0],[1,0],[2,5],[4,5],[4,9]],
            [[0,0],[1,0],[3,5],[4,6],[4,1]],
            [[0,0],[1,0],[5,11],[2,2],[8,17]],
            [[0,0],[1,0],[2,5],[-2,-10],[-3,-16]],
            [[0,0],[1,0],[3,8],[3,5],[6,14]],
            [[0,0],[1,0],[3,9],[-1,-6],[5,14]],
            [[0,0],[1,0],[1,2],[7,3],[10,5]],
            [[0,0],[1,0],[3,11],[3,6],[2,2]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,5],[5,6],[5,2]],
            [[0,0],[1,0],[1,2],[4,6],[4,1]],
            [[0,0],[1,0],[2,5],[-1,2],[2,8]],
            [[0,0],[1,0],[3,5],[3,9],[2,8]],
            [[0,0],[1,0],[3,10],[3,5],[2,1]],
            [[0,0],[1,0],[0,2],[-6,9],[-9,14]],
            [[0,0],[1,0],[4,7],[3,1],[4,2]],
            [[0,0],[1,0],[2,5],[4,3],[5,5]],
            [[0,0],[1,0],[5,8],[5,5],[4,3]],
            [[0,0],[1,0],[0,3],[-5,3],[-5,2]],
            [[0,0],[1,0],[4,7],[2,1],[4,10]],
            [[0,0],[2,0],[1,2],[5,1],[5,4]],
            [[0,0],[1,0],[2,3],[-7,-12],[-10,-16]],
            [[0,0],[1,0],[4,14],[5,16],[5,17]],
            [[0,0],[1,0],[2,7],[-1,-8],[-1,-12]],
            [[0,0],[1,0],[3,8],[2,7],[3,3]],
            [[0,0],[1,0],[0,1],[-15,6],[-16,6]],
            [[0,0],[1,0],[3,7],[3,4],[6,13]],
            [[0,0],[2,0],[0,4],[3,1],[-2,4]],
            [[0,0],[2,0],[1,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,1],[-12,10],[-15,13]],
            [[0,0],[1,0],[2,3],[4,2],[8,6]],
            [[0,0],[1,0],[3,6],[2,8],[3,10]],
            [[0,0],[1,0],[4,7],[3,3],[8,13]],
            [[0,0],[1,0],[1,3],[4,1],[6,3]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,9],[7,9],[9,13]],
            [[0,0],[2,0],[0,1],[-8,2],[-12,4]],
            [[0,0],[2,0],[0,1],[-10,3],[-5,3]],
            [[0,0],[1,0],[3,5],[4,4],[8,10]],
            [[0,0],[1,0],[3,9],[4,11],[5,12]],
            [[0,0],[1,0],[1,4],[3,6],[3,1]],
            [[0,0],[1,0],[1,2],[3,4],[7,4]],
            [[0,0],[1,0],[0,2],[-6,10],[-8,14]],
            [[0,0],[1,0],[1,4],[3,3],[3,8]],
            [[0,0],[1,0],[2,6],[4,6],[4,8]],
            [[0,0],[1,0],[2,7],[3,10],[3,4]],
            [[0,0],[2,0],[2,3],[6,2],[7,3]],
            [[0,0],[1,0],[0,1],[-16,6],[-18,7]],
            [[0,0],[1,0],[3,5],[2,1],[8,10]],
            [[0,0],[1,0],[3,9],[5,12],[5,13]],
            [[0,0],[2,0],[1,3],[4,1],[6,3]],
            [[0,0],[1,0],[0,1],[7,4],[3,4]],
            [[0,0],[1,0],[2,3],[3,1],[8,6]],
            [[0,0],[1,0],[3,6],[2,8],[3,11]],
            [[0,0],[1,0],[0,2],[3,8],[3,11]],
            [[0,0],[2,0],[2,6],[3,6],[3,1]],
            [[0,0],[1,0],[2,5],[3,4],[6,13]],
            [[0,0],[1,0],[2,3],[4,1],[8,3]],
            [[0,0],[4,0],[0,2],[4,-3],[3,-3]],
            [[0,0],[1,0],[0,1],[-9,6],[-12,9]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[3,1],[3,7]],
            [[0,0],[1,0],[0,1],[1,3],[7,9]],
            [[0,0],[1,0],[1,3],[-3,6],[-3,7]],
            [[0,0],[1,0],[13,17],[5,5],[2,1]],
            [[0,0],[1,0],[5,9],[2,1],[5,5]],
            [[0,0],[1,0],[3,4],[5,5],[5,1]],
            [[0,0],[3,0],[0,2],[-6,1],[-2,3]],
            [[0,0],[1,0],[2,3],[5,1],[5,5]],
            [[0,0],[2,0],[0,3],[-4,3],[-2,5]],
            [[0,0],[1,0],[1,2],[5,5],[5,1]],
            [[0,0],[1,0],[2,6],[-3,-10],[4,8]],
            [[0,0],[1,0],[9,13],[6,7],[3,2]],
            [[0,0],[8,0],[0,1],[-2,1],[6,-2]],
            [[0,0],[1,0],[0,1],[5,-5],[1,-5]],
            [[0,0],[1,0],[1,8],[0,-2],[3,10]],
            [[0,0],[1,0],[0,1],[5,5],[1,5]],
            [[0,0],[2,0],[0,1],[-8,1],[-12,3]],
            [[0,0],[1,0],[9,13],[2,1],[5,5]],
            [[0,0],[1,0],[0,5],[-1,5],[4,1]],
            [[0,0],[1,0],[1,8],[0,-2],[3,8]],
            [[0,0],[1,0],[0,1],[18,4],[19,4]],
            [[0,0],[1,0],[2,8],[-1,-9],[4,15]],
            [[0,0],[2,0],[1,2],[-2,-5],[2,-3]],
            [[0,0],[1,0],[3,10],[4,16],[4,18]],
            [[0,0],[1,0],[7,10],[9,12],[3,2]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,9],[4,5],[3,2]],
            [[0,0],[1,0],[2,7],[4,9],[5,13]],
            [[0,0],[1,0],[4,13],[2,3],[6,19]],
            [[0,0],[1,0],[7,10],[4,4],[10,13]],
            [[0,0],[1,0],[3,6],[1,3],[7,10]],
            [[0,0],[2,0],[1,4],[-1,4],[4,1]],
            [[0,0],[2,0],[1,2],[-4,1],[-1,4]],
            [[0,0],[1,0],[3,11],[3,6],[2,1]],
            [[0,0],[1,0],[1,3],[5,4],[7,7]],
            [[0,0],[1,0],[6,7],[9,10],[3,1]],
            [[0,0],[1,0],[3,12],[4,12],[4,13]],
            [[0,0],[1,0],[0,1],[6,3],[10,7]],
            [[0,0],[1,0],[3,4],[1,3],[7,4]],
            [[0,0],[1,0],[1,4],[-2,-9],[0,-7]],
            [[0,0],[1,0],[3,15],[4,18],[4,19]],
            [[0,0],[1,0],[4,7],[2,6],[4,11]],
            [[0,0],[1,0],[4,5],[-8,-12],[-6,-8]],
            [[0,0],[1,0],[0,1],[6,4],[1,4]],
            [[0,0],[1,0],[1,2],[-2,16],[-2,17]],
            [[0,0],[1,0],[0,1],[-6,1],[-12,4]],
            [[0,0],[2,0],[1,2],[3,-6],[5,-9]],
            [[0,0],[1,0],[6,8],[3,3],[10,16]],
            [[0,0],[1,0],[9,14],[2,1],[4,4]],
            [[0,0],[2,0],[3,4],[6,3],[7,4]],
            [[0,0],[1,0],[1,4],[4,4],[4,1]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,6],[0,-1],[4,6]],
            [[0,0],[1,0],[5,7],[-5,-9],[-8,-15]],
            [[0,0],[1,0],[2,3],[4,11],[4,14]],
            [[0,0],[1,0],[6,7],[-7,-10],[-11,-16]],
            [[0,0],[1,0],[3,7],[7,14],[7,15]],
            [[0,0],[1,0],[5,11],[7,14],[9,19]],
            [[0,0],[2,0],[4,5],[5,6],[5,2]],
            [[0,0],[1,0],[11,15],[12,16],[2,1]],
            [[0,0],[1,0],[4,7],[7,10],[4,4]],
            [[0,0],[1,0],[4,6],[6,7],[-1,1]],
            [[0,0],[2,0],[0,1],[-11,4],[-7,4]],
            [[0,0],[1,0],[4,11],[4,7],[3,4]],
            [[0,0],[1,0],[4,9],[2,1],[4,4]],
            [[0,0],[1,0],[7,11],[9,14],[4,4]],
            [[0,0],[1,0],[3,7],[4,9],[4,4]],
            [[0,0],[1,0],[4,8],[-2,-7],[-4,-9]],
            [[0,0],[1,0],[10,12],[16,19],[17,20]],
            [[0,0],[1,0],[5,9],[5,6],[3,2]],
            [[0,0],[1,0],[0,1],[-15,3],[-18,4]],
            [[0,0],[1,0],[0,1],[-6,1],[-9,4]],
            [[0,0],[1,0],[2,5],[6,13],[7,14]],
            [[0,0],[3,0],[2,3],[3,4],[6,1]],
            [[0,0],[1,0],[2,6],[-3,-12],[-4,-14]],
            [[0,0],[1,0],[1,2],[9,4],[10,5]],
            [[0,0],[1,0],[3,7],[2,1],[6,13]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-5,2],[-6,3]],
            [[0,0],[1,0],[3,6],[5,6],[5,9]],
            [[0,0],[1,0],[3,5],[3,10],[2,8]],
            [[0,0],[1,0],[4,10],[2,2],[7,17]],
            [[0,0],[1,0],[7,12],[8,13],[2,1]],
            [[0,0],[1,0],[0,3],[-3,2],[-3,6]],
            [[0,0],[2,0],[4,6],[4,3],[1,3]],
            [[0,0],[1,0],[2,5],[3,3],[6,9]],
            [[0,0],[1,0],[3,4],[5,2],[7,4]],
            [[0,0],[1,0],[3,5],[10,15],[11,17]],
            [[0,0],[1,0],[2,8],[4,12],[4,14]],
            [[0,0],[1,0],[1,4],[3,7],[3,1]],
            [[0,0],[1,0],[4,7],[5,7],[10,17]],
            [[0,0],[1,0],[2,3],[-3,3],[-4,2]],
            [[0,0],[1,0],[2,4],[4,2],[4,7]],
            [[0,0],[1,0],[2,7],[3,9],[3,3]],
            [[0,0],[1,0],[2,4],[2,6],[-2,2]],
            [[0,0],[1,0],[1,4],[3,9],[3,3]],
            [[0,0],[1,0],[0,1],[9,3],[3,3]],
            [[0,0],[1,0],[2,8],[3,4],[3,8]],
            [[0,0],[1,0],[4,9],[2,2],[8,17]],
            [[0,0],[1,0],[3,11],[2,2],[3,5]],
            [[0,0],[1,0],[3,10],[2,1],[3,4]],
            [[0,0],[1,0],[0,1],[4,1],[6,3],[2,3]],
            [[0,0],[1,0],[0,1],[-9,4],[-9,3],[-11,4]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,2],[2,3],[4,1],[6,3]],
            [[0,0],[1,0],[1,2],[3,1],[3,4],[6,4]],
            [[0,0],[2,0],[0,1],[4,1],[4,4],[3,4]],
            [[0,0],[1,0],[0,1],[1,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,1],[-3,3],[-10,6],[-13,8]],
            [[0,0],[1,0],[1,2],[-4,2],[-4,3],[0,3]],
            [[0,0],[1,0],[2,9],[3,10],[4,16],[4,17]],
            [[0,0],[1,0],[4,7],[6,9],[6,8],[4,4]],
            [[0,0],[1,0],[1,5],[3,6],[3,9],[4,10]],
            [[0,0],[1,0],[1,5],[3,7],[3,4],[4,7]],
            [[0,0],[1,0],[7,8],[-5,-7],[7,9],[6,8]],
            [[0,0],[5,0],[0,1],[5,-2],[2,-2],[4,-3]],
            [[0,0],[2,0],[2,4],[3,3],[0,-4],[-1,-4]],
            [[0,0],[1,0],[5,8],[7,10],[7,11],[4,4]],
            [[0,0],[1,0],[1,2],[5,5],[5,8],[4,7]],
            [[0,0],[1,0],[3,10],[2,3],[4,11],[5,16]],
            [[0,0],[1,0],[4,7],[3,7],[2,1],[4,4]],
            [[0,0],[1,0],[4,5],[7,7],[6,7],[3,1]],
            [[0,0],[1,0],[0,1],[5,5],[2,5],[1,4]],
            [[0,0],[1,0],[4,7],[2,5],[4,4],[3,7]],
            [[0,0],[1,0],[2,5],[3,7],[3,3],[5,7]],
            [[0,0],[3,0],[0,3],[1,-1],[-2,3],[3,2]],
            [[0,0],[1,0],[2,5],[-2,-7],[4,9],[5,10]],
            [[0,0],[1,0],[0,3],[-3,2],[-2,5],[-4,3]],
            [[0,0],[1,0],[1,4],[3,4],[3,8],[4,8]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-7,1],[-9,3],[-8,3]],
            [[0,0],[1,0],[7,10],[8,10],[4,4],[9,12]],
            [[0,0],[1,0],[1,2],[5,9],[2,1],[5,6]],
            [[0,0],[1,0],[0,1],[5,-5],[2,-5],[1,-4]],
            [[0,0],[2,0],[0,3],[-3,3],[-2,4],[-3,1]],
            [[0,0],[4,0],[0,1],[4,2],[1,-2],[3,-2]],
            [[0,0],[1,0],[7,11],[8,12],[5,6],[2,1]],
            [[0,0],[1,0],[3,7],[-2,-5],[-1,-6],[-3,-8]],
            [[0,0],[1,0],[0,1],[3,-7],[3,-3],[5,-7]],
            [[0,0],[4,0],[0,2],[-2,1],[5,-2],[2,2]],
            [[0,0],[1,0],[2,5],[-1,3],[2,6],[-2,1]],
            [[0,0],[1,0],[2,7],[3,7],[4,13],[5,15]],
            [[0,0],[1,0],[0,1],[-7,1],[-11,3],[-10,3]],
            [[0,0],[1,0],[3,5],[2,1],[3,7],[-1,1]],
            [[0,0],[1,0],[1,2],[-2,3],[-4,1],[0,4]],
            [[0,0],[1,0],[0,2],[-2,1],[6,4],[7,4]],
            [[0,0],[1,0],[0,5],[-1,5],[3,1],[3,2]],
            [[0,0],[1,0],[0,7],[1,-2],[-1,3],[-2,7]],
            [[0,0],[1,0],[2,4],[-1,4],[-2,1],[-2,2]],
            [[0,0],[1,0],[5,7],[-5,-9],[-5,-10],[-7,-13]],
            [[0,0],[1,0],[5,7],[7,9],[-3,-5],[7,8]],
            [[0,0],[1,0],[1,2],[0,7],[-1,3],[-2,7]],
            [[0,0],[2,0],[0,4],[2,3],[-1,4],[1,-3]],
            [[0,0],[2,0],[3,4],[-1,-5],[-1,-6],[4,5]],
            [[0,0],[1,0],[2,3],[4,1],[5,2],[5,5]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[5,9],[2,1],[5,6],[4,4]],
            [[0,0],[1,0],[10,13],[11,14],[5,5],[2,1]],
            [[0,0],[7,0],[0,1],[-1,1],[5,-2],[4,-2]],
            [[0,0],[1,0],[0,2],[1,-7],[2,-4],[3,-9]],
            [[0,0],[1,0],[3,10],[-1,-7],[4,13],[4,12]],
            [[0,0],[1,0],[7,10],[6,7],[9,12],[2,1]],
            [[0,0],[1,0],[2,3],[4,2],[6,6],[5,6]],
            [[0,0],[1,0],[4,6],[1,2],[6,6],[4,3]],
            [[0,0],[2,0],[0,1],[-3,1],[-10,4],[-7,4]],
            [[0,0],[1,0],[0,1],[-5,1],[-2,2],[-8,4]],
            [[0,0],[1,0],[2,7],[3,9],[3,5],[2,1]],
            [[0,0],[2,0],[4,5],[3,5],[4,3],[1,3]],
            [[0,0],[1,0],[6,8],[7,8],[10,13],[11,14]],
            [[0,0],[1,0],[0,2],[2,10],[3,12],[3,13]],
            [[0,0],[1,0],[2,7],[2,3],[4,11],[4,13]],
            [[0,0],[1,0],[4,5],[3,6],[1,3],[6,9]],
            [[0,0],[1,0],[3,5],[5,8],[3,2],[5,5]],
            [[0,0],[1,0],[2,7],[3,8],[2,1],[3,4]],
            [[0,0],[1,0],[1,4],[3,7],[3,3],[2,7]],
            [[0,0],[1,0],[0,1],[4,4],[4,2],[1,4]],
            [[0,0],[1,0],[1,3],[-2,-8],[-2,-7],[0,-6]],
            [[0,0],[2,0],[1,2],[-3,2],[-3,1],[-1,4]],
            [[0,0],[1,0],[0,4],[-2,3],[-3,7],[-3,5]],
            [[0,0],[1,0],[0,1],[-6,1],[-10,3],[-8,3]],
            [[0,0],[1,0],[4,5],[-3,-4],[-8,-12],[-7,-10]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 2501-3000.
function canonical_dim3_facet_cache_6(id)
    // Convert the id
    id -:= 2500;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,5],[1,3],[4,8],[3,7]],
            [[0,0],[1,0],[3,7],[4,8],[2,1],[4,5]],
            [[0,0],[1,0],[3,5],[5,8],[4,4],[7,10]],
            [[0,0],[2,0],[0,1],[-3,2],[11,-6],[10,-6]],
            [[0,0],[1,0],[1,3],[4,5],[4,2],[3,5]],
            [[0,0],[1,0],[0,1],[4,9],[4,11],[5,13]],
            [[0,0],[1,0],[0,4],[-2,5],[-1,6],[-2,1]],
            [[0,0],[1,0],[2,4],[-1,4],[-2,2],[-2,3]],
            [[0,0],[1,0],[3,7],[2,2],[6,12],[6,13]],
            [[0,0],[1,0],[3,7],[5,10],[2,1],[5,11]],
            [[0,0],[1,0],[1,2],[-2,-5],[0,-5],[-3,-8]],
            [[0,0],[2,0],[1,4],[-1,3],[-1,4],[3,2]],
            [[0,0],[1,0],[0,1],[1,5],[2,2],[4,8]],
            [[0,0],[1,0],[2,7],[3,7],[2,1],[3,3]],
            [[0,0],[1,0],[0,1],[3,-7],[2,-7],[3,-3]],
            [[0,0],[1,0],[2,8],[3,11],[4,12],[4,13]],
            [[0,0],[1,0],[0,2],[4,7],[2,1],[4,8]],
            [[0,0],[1,0],[6,7],[-6,-8],[-2,-4],[-5,-6]],
            [[0,0],[2,0],[1,2],[-2,3],[-4,1],[0,3]],
            [[0,0],[1,0],[0,1],[6,4],[1,3],[2,4]],
            [[0,0],[1,0],[4,7],[2,1],[2,5],[4,4]],
            [[0,0],[1,0],[0,1],[-6,1],[-8,3],[-6,3]],
            [[0,0],[1,0],[5,6],[7,8],[3,1],[4,2]],
            [[0,0],[1,0],[2,3],[6,3],[7,4],[3,4]],
            [[0,0],[1,0],[1,6],[0,-1],[3,6],[3,4]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,4],[3,1],[4,4],[4,2]],
            [[0,0],[1,0],[0,1],[2,4],[4,3],[6,6]],
            [[0,0],[1,0],[4,5],[-5,-8],[-7,-10],[-6,-8]],
            [[0,0],[1,0],[2,4],[1,3],[4,3],[6,6]],
            [[0,0],[1,0],[0,3],[-3,1],[-4,3],[-5,2]],
            [[0,0],[1,0],[0,1],[-4,3],[-5,5],[-14,11]],
            [[0,0],[1,0],[5,8],[7,10],[2,1],[4,4]],
            [[0,0],[1,0],[4,9],[2,2],[6,12],[7,15]],
            [[0,0],[1,0],[0,4],[-1,1],[-2,4],[-2,8]],
            [[0,0],[1,0],[2,3],[-2,1],[-3,2],[-3,3]],
            [[0,0],[1,0],[0,1],[4,4],[3,2],[4,7]],
            [[0,0],[1,0],[0,2],[-5,2],[-6,3],[-1,3]],
            [[0,0],[1,0],[3,5],[1,3],[4,3],[5,5]],
            [[0,0],[1,0],[0,3],[-3,6],[-2,7],[-4,9]],
            [[0,0],[1,0],[2,4],[2,6],[-1,1],[-1,3]],
            [[0,0],[1,0],[2,5],[3,4],[5,10],[5,11]],
            [[0,0],[1,0],[0,1],[6,2],[8,3],[3,3]],
            [[0,0],[1,0],[0,1],[-5,1],[-9,3],[-6,3]],
            [[0,0],[1,0],[2,7],[2,2],[3,10],[3,5]],
            [[0,0],[1,0],[0,1],[-5,1],[-7,3],[-4,3]],
            [[0,0],[1,0],[1,2],[5,4],[5,2],[7,4]],
            [[0,0],[2,0],[0,1],[-4,1],[-9,3],[-5,3]],
            [[0,0],[2,0],[1,3],[4,1],[5,3],[5,2]],
            [[0,0],[1,0],[0,1],[-6,3],[-8,2],[-10,3]],
            [[0,0],[1,0],[2,4],[3,3],[6,10],[7,11]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,4],[2,2],[3,5],[3,10]],
            [[0,0],[1,0],[0,1],[1,2],[7,4],[9,6]],
            [[0,0],[1,0],[0,1],[-6,2],[-8,4],[-6,4]],
            [[0,0],[1,0],[1,2],[4,2],[2,3],[8,6]],
            [[0,0],[1,0],[0,1],[4,1],[1,3],[6,3]],
            [[0,0],[1,0],[0,3],[-2,2],[-4,7],[-4,6]],
            [[0,0],[1,0],[1,2],[4,1],[3,3],[8,3]],
            [[0,0],[3,0],[0,1],[4,1],[5,3],[1,3]],
            [[0,0],[1,0],[2,3],[-1,1],[2,6],[-1,3]],
            [[0,0],[2,0],[0,1],[5,2],[6,3],[1,3]],
            [[0,0],[1,0],[3,6],[2,1],[5,7],[5,9]],
            [[0,0],[2,0],[0,1],[-5,1],[-8,3],[-11,3]],
            [[0,0],[1,0],[1,4],[2,1],[3,8],[3,3]],
            [[0,0],[1,0],[2,4],[0,-3],[-4,-11],[-4,-10]],
            [[0,0],[2,0],[0,1],[-5,1],[-9,3],[-6,3]],
            [[0,0],[3,0],[0,3],[1,-2],[2,3],[3,2]],
            [[0,0],[3,0],[0,1],[4,1],[3,4],[4,4]],
            [[0,0],[3,0],[0,1],[1,1],[6,-3],[3,-3]],
            [[0,0],[1,0],[3,9],[2,3],[-2,-8],[3,11]],
            [[0,0],[1,0],[5,8],[2,1],[4,4],[8,12]],
            [[0,0],[2,0],[3,4],[1,4],[4,3],[4,1]],
            [[0,0],[1,0],[0,1],[-6,4],[-5,5],[-11,8]],
            [[0,0],[1,0],[0,1],[-6,4],[-7,6],[-13,9]],
            [[0,0],[1,0],[2,4],[5,6],[4,4],[5,9]],
            [[0,0],[1,0],[1,3],[0,-7],[-1,-5],[-2,-11]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[-4,1],[-1,4],[0,4]],
            [[0,0],[2,0],[1,2],[-1,1],[7,4],[8,4]],
            [[0,0],[1,0],[0,1],[-12,10],[-15,13],[-19,16]],
            [[0,0],[1,0],[4,8],[3,7],[5,8],[-2,-5]],
            [[0,0],[1,0],[1,5],[3,2],[4,5],[4,4]],
            [[0,0],[1,0],[2,5],[4,4],[4,8],[3,7]],
            [[0,0],[1,0],[2,3],[5,7],[4,3],[7,7]],
            [[0,0],[1,0],[2,5],[1,7],[2,8],[-1,1]],
            [[0,0],[1,0],[2,5],[3,2],[1,4],[5,5]],
            [[0,0],[1,0],[3,8],[-3,-12],[-1,-7],[-2,-10]],
            [[0,0],[1,0],[1,2],[-3,2],[-3,1],[0,5]],
            [[0,0],[5,0],[0,1],[10,-2],[16,-3],[17,-3]],
            [[0,0],[2,0],[2,3],[3,3],[-2,-4],[0,-4]],
            [[0,0],[1,0],[1,7],[0,-2],[3,9],[3,8]],
            [[0,0],[2,0],[2,3],[5,5],[3,4],[5,2]],
            [[0,0],[1,0],[5,7],[4,4],[10,13],[11,15]],
            [[0,0],[1,0],[0,3],[-3,4],[-3,1],[-2,5]],
            [[0,0],[1,0],[0,4],[-2,3],[-3,7],[-4,7]],
            [[0,0],[1,0],[0,4],[-2,1],[-3,2],[-4,4]],
            [[0,0],[1,0],[1,3],[2,4],[4,1],[4,5]],
            [[0,0],[1,0],[2,4],[1,7],[3,9],[0,3]],
            [[0,0],[1,0],[3,4],[4,5],[-5,-7],[-5,-9]],
            [[0,0],[1,0],[7,11],[8,12],[2,1],[4,4]],
            [[0,0],[1,0],[1,7],[0,-2],[3,7],[3,6]],
            [[0,0],[1,0],[0,5],[-2,6],[-3,10],[-3,11]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,5],[-2,8],[-3,13],[-3,14]],
            [[0,0],[1,0],[7,10],[8,11],[5,5],[3,2]],
            [[0,0],[2,0],[2,4],[3,3],[-1,3],[-1,4]],
            [[0,0],[1,0],[5,7],[6,7],[11,15],[12,16]],
            [[0,0],[2,0],[0,5],[-1,4],[-1,5],[3,2]],
            [[0,0],[1,0],[1,7],[0,-3],[2,4],[3,9]],
            [[0,0],[1,0],[4,5],[5,6],[4,1],[5,2]],
            [[0,0],[2,0],[0,3],[-1,4],[-4,4],[-3,2]],
            [[0,0],[1,0],[7,11],[5,6],[9,14],[2,1]],
            [[0,0],[1,0],[2,4],[-1,3],[-2,1],[2,6]],
            [[0,0],[3,0],[0,1],[8,-2],[4,-2],[12,-4]],
            [[0,0],[1,0],[6,7],[-6,-8],[-7,-10],[-5,-8]],
            [[0,0],[1,0],[6,8],[4,6],[-5,-8],[6,7]],
            [[0,0],[1,0],[7,8],[7,9],[-4,-6],[5,7]],
            [[0,0],[1,0],[0,5],[-2,4],[-3,8],[-3,7]],
            [[0,0],[1,0],[0,1],[-3,1],[-8,4],[-4,4]],
            [[0,0],[2,0],[0,1],[-7,1],[-11,3],[-10,3]],
            [[0,0],[1,0],[1,3],[-2,-7],[4,9],[5,10]],
            [[0,0],[1,0],[4,8],[3,7],[2,1],[4,4]],
            [[0,0],[1,0],[0,4],[-3,2],[-4,4],[-4,3]],
            [[0,0],[1,0],[3,5],[1,4],[4,10],[5,11]],
            [[0,0],[1,0],[7,10],[8,10],[9,12],[2,1]],
            [[0,0],[1,0],[6,8],[-5,-7],[3,3],[-8,-12]],
            [[0,0],[2,0],[0,1],[7,1],[8,3],[9,3]],
            [[0,0],[1,0],[0,1],[-5,5],[-4,2],[-8,5]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-8,5],[-12,8],[-4,4]],
            [[0,0],[1,0],[4,7],[0,1],[4,10],[2,6]],
            [[0,0],[1,0],[2,3],[6,7],[7,10],[10,13]],
            [[0,0],[1,0],[0,1],[-5,2],[-4,4],[-8,4]],
            [[0,0],[1,0],[1,2],[4,1],[3,5],[4,6]],
            [[0,0],[1,0],[0,1],[4,2],[2,4],[6,4]],
            [[0,0],[2,0],[1,2],[0,-4],[-1,-3],[2,-4]],
            [[0,0],[1,0],[2,5],[3,3],[4,9],[4,5]],
            [[0,0],[2,0],[0,1],[1,-1],[4,5],[6,6]],
            [[0,0],[1,0],[1,4],[3,3],[3,8],[2,7]],
            [[0,0],[2,0],[2,4],[1,3],[4,2],[5,4]],
            [[0,0],[1,0],[2,3],[5,5],[3,2],[8,11]],
            [[0,0],[1,0],[2,3],[4,4],[8,11],[10,13]],
            [[0,0],[1,0],[1,2],[4,1],[5,4],[7,4]],
            [[0,0],[1,0],[2,5],[4,7],[3,2],[4,4]],
            [[0,0],[1,0],[2,7],[3,10],[3,5],[2,1]],
            [[0,0],[1,0],[1,2],[4,3],[7,2],[8,3]],
            [[0,0],[2,0],[0,1],[2,-4],[5,-6],[4,-6]],
            [[0,0],[1,0],[1,4],[3,6],[2,6],[3,1]],
            [[0,0],[1,0],[1,3],[2,5],[4,3],[5,5]],
            [[0,0],[1,0],[1,3],[-2,1],[-3,2],[0,5]],
            [[0,0],[1,0],[1,3],[4,2],[2,4],[6,4]],
            [[0,0],[1,0],[1,4],[2,1],[4,7],[4,5]],
            [[0,0],[2,0],[0,1],[1,-2],[6,-6],[5,-6]],
            [[0,0],[1,0],[0,2],[-2,2],[-4,5],[-4,8]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-2,1],[-3,3],[-3,6]],
            [[0,0],[1,0],[2,4],[4,3],[3,1],[4,7]],
            [[0,0],[1,0],[0,1],[-8,3],[-7,2],[-3,3]],
            [[0,0],[1,0],[2,7],[3,8],[2,1],[3,3]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[6,9]],
            [[0,0],[2,0],[1,4],[3,2],[-1,2],[3,4]],
            [[0,0],[2,0],[0,1],[6,1],[6,3],[8,3]],
            [[0,0],[1,0],[2,5],[2,8],[-1,1],[-1,2]],
            [[0,0],[1,0],[1,6],[0,-2],[3,8],[3,6]],
            [[0,0],[1,0],[2,7],[3,9],[2,1],[3,4]],
            [[0,0],[1,0],[3,7],[4,9],[2,1],[4,5]],
            [[0,0],[1,0],[0,3],[2,9],[3,10],[3,11]],
            [[0,0],[1,0],[0,1],[-14,4],[-16,5],[-17,5]],
            [[0,0],[1,0],[0,2],[1,5],[2,1],[4,5]],
            [[0,0],[1,0],[2,5],[2,1],[5,10],[5,11]],
            [[0,0],[1,0],[0,3],[-3,1],[-5,3],[-5,2]],
            [[0,0],[1,0],[2,3],[-1,2],[1,6],[2,7]],
            [[0,0],[2,0],[0,1],[3,-2],[3,-6],[2,-6]],
            [[0,0],[2,0],[0,3],[4,-4],[2,-4],[1,-3]],
            [[0,0],[1,0],[3,7],[2,2],[6,12],[7,15]],
            [[0,0],[1,0],[2,7],[3,10],[2,1],[3,4]],
            [[0,0],[1,0],[0,3],[-3,1],[-5,2],[-6,3]],
            [[0,0],[1,0],[1,2],[5,4],[7,3],[8,4]],
            [[0,0],[1,0],[0,1],[4,3],[5,5],[2,5]],
            [[0,0],[1,0],[0,1],[-4,1],[-9,3],[-3,3]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[4,3],[7,2],[9,3]],
            [[0,0],[1,0],[2,4],[5,6],[4,7],[7,10]],
            [[0,0],[1,0],[0,2],[-2,3],[-6,2],[-7,3]],
            [[0,0],[2,0],[1,3],[4,6],[3,1],[4,3]],
            [[0,0],[1,0],[0,2],[-4,5],[-3,3],[-4,8]],
            [[0,0],[1,0],[0,1],[3,3],[6,10],[7,11]],
            [[0,0],[2,0],[0,1],[3,-1],[3,-6],[2,-6]],
            [[0,0],[1,0],[1,3],[3,3],[2,5],[6,9]],
            [[0,0],[1,0],[1,4],[2,6],[3,1],[3,7]],
            [[0,0],[1,0],[0,1],[2,1],[4,9],[5,10]],
            [[0,0],[3,0],[0,1],[-6,1],[-12,3],[-10,3]],
            [[0,0],[1,0],[0,2],[-2,5],[-6,8],[-7,10]],
            [[0,0],[1,0],[1,2],[4,6],[7,8],[9,11]],
            [[0,0],[1,0],[1,6],[0,-3],[3,10],[3,8]],
            [[0,0],[1,0],[0,2],[-4,8],[-6,9],[-7,11]],
            [[0,0],[1,0],[0,1],[-8,2],[-12,4],[-14,4]],
            [[0,0],[1,0],[3,5],[0,-2],[3,9],[2,8]],
            [[0,0],[1,0],[2,4],[3,1],[4,2],[4,7]],
            [[0,0],[1,0],[2,3],[3,4],[5,2],[7,4]],
            [[0,0],[1,0],[1,3],[2,4],[3,1],[6,4]],
            [[0,0],[1,0],[0,1],[-5,2],[-3,3],[-9,6]],
            [[0,0],[1,0],[2,7],[3,9],[2,1],[3,3]],
            [[0,0],[1,0],[0,1],[-7,2],[-9,3],[-3,3]],
            [[0,0],[1,0],[2,4],[-1,1],[-1,2],[2,8]],
            [[0,0],[1,0],[2,5],[2,1],[4,9],[4,5]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-6,3],[-8,2],[-11,3]],
            [[0,0],[2,0],[0,1],[1,-2],[3,-4],[6,-4]],
            [[0,0],[1,0],[0,2],[3,1],[1,4],[3,6]],
            [[0,0],[1,0],[0,1],[-9,3],[-12,5],[-13,5]],
            [[0,0],[2,0],[1,2],[2,3],[6,2],[7,3]],
            [[0,0],[1,0],[2,3],[0,4],[-3,1],[2,5]],
            [[0,0],[2,0],[0,3],[-3,2],[-2,5],[-4,3]],
            [[0,0],[1,0],[2,3],[-5,-8],[-7,-12],[-1,-4]],
            [[0,0],[1,0],[1,2],[2,3],[5,1],[5,5]],
            [[0,0],[1,0],[3,4],[5,5],[4,5],[5,1]],
            [[0,0],[2,0],[1,4],[3,4],[3,5],[-2,1]],
            [[0,0],[1,0],[2,3],[5,1],[3,4],[5,5]],
            [[0,0],[1,0],[2,3],[-2,1],[5,4],[7,4]],
            [[0,0],[1,0],[0,1],[4,4],[1,4],[4,1]],
            [[0,0],[1,0],[6,8],[10,12],[10,13],[12,15]],
            [[0,0],[1,0],[2,3],[-1,3],[-2,1],[2,6]],
            [[0,0],[1,0],[2,5],[1,7],[-1,1],[2,9]],
            [[0,0],[1,0],[3,9],[3,6],[-1,-5],[2,8]],
            [[0,0],[2,0],[2,3],[6,3],[3,4],[7,4]],
            [[0,0],[1,0],[0,4],[-2,3],[-4,8],[-4,7]],
            [[0,0],[1,0],[0,1],[-7,3],[-14,7],[-15,7]],
            [[0,0],[1,0],[0,4],[-1,3],[3,2],[4,4]],
            [[0,0],[1,0],[0,1],[4,4],[5,2],[8,4]],
            [[0,0],[2,0],[1,2],[1,-5],[-1,-3],[2,-4]],
            [[0,0],[1,0],[4,7],[2,1],[7,10],[4,4]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[5,2],[4,4],[8,4]],
            [[0,0],[1,0],[0,1],[5,3],[6,4],[1,4]],
            [[0,0],[1,0],[5,6],[4,4],[3,6],[5,9]],
            [[0,0],[1,0],[0,1],[4,4],[4,7],[1,4]],
            [[0,0],[1,0],[0,2],[-4,6],[-3,7],[-7,11]],
            [[0,0],[1,0],[1,3],[4,1],[4,5],[3,5]],
            [[0,0],[2,0],[0,1],[1,-3],[5,-6],[4,-6]],
            [[0,0],[2,0],[2,3],[5,5],[4,5],[5,2]],
            [[0,0],[1,0],[3,7],[4,9],[4,5],[3,2]],
            [[0,0],[1,0],[1,7],[0,-3],[3,11],[3,10]],
            [[0,0],[1,0],[3,7],[4,8],[3,2],[4,4]],
            [[0,0],[1,0],[2,7],[3,6],[4,10],[4,13]],
            [[0,0],[1,0],[7,11],[9,14],[2,1],[4,4]],
            [[0,0],[1,0],[1,2],[-2,2],[-3,5],[0,5]],
            [[0,0],[1,0],[1,2],[4,1],[4,4],[7,4]],
            [[0,0],[1,0],[2,4],[-2,1],[-2,2],[2,6]],
            [[0,0],[1,0],[0,1],[-12,10],[-19,16],[-20,17]],
            [[0,0],[1,0],[0,7],[-1,5],[1,-4],[-2,11]],
            [[0,0],[1,0],[1,2],[-1,1],[7,3],[10,5]],
            [[0,0],[1,0],[2,7],[2,3],[5,15],[5,16]],
            [[0,0],[4,0],[0,1],[6,-2],[11,-2],[1,-1]],
            [[0,0],[2,0],[0,1],[3,1],[5,4],[1,4]],
            [[0,0],[1,0],[2,5],[1,4],[4,3],[5,5]],
            [[0,0],[1,0],[3,5],[4,4],[7,11],[8,12]],
            [[0,0],[1,0],[0,1],[13,3],[15,4],[16,4]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,7],[4,9],[2,1],[4,4]],
            [[0,0],[1,0],[0,4],[-2,1],[-4,4],[-4,3]],
            [[0,0],[1,0],[4,8],[-2,-7],[-1,-5],[-4,-9]],
            [[0,0],[1,0],[0,1],[3,6],[1,3],[7,10]],
            [[0,0],[1,0],[0,1],[-5,2],[-13,6],[-14,7]],
            [[0,0],[1,0],[1,7],[0,-3],[3,9],[3,8]],
            [[0,0],[1,0],[0,4],[-1,7],[-3,9],[-4,13]],
            [[0,0],[1,0],[2,4],[4,4],[5,8],[7,10]],
            [[0,0],[2,0],[2,3],[5,4],[3,4],[5,1]],
            [[0,0],[2,0],[1,2],[5,2],[5,5],[4,5]],
            [[0,0],[1,0],[0,1],[1,3],[2,4],[7,4]],
            [[0,0],[1,0],[0,1],[3,5],[2,6],[6,14]],
            [[0,0],[1,0],[4,5],[-3,-6],[-7,-10],[-6,-8]],
            [[0,0],[2,0],[0,1],[11,3],[12,4],[13,4]],
            [[0,0],[1,0],[0,1],[-13,6],[-14,7],[-3,1]],
            [[0,0],[2,0],[0,1],[1,1],[3,-6],[5,-6]],
            [[0,0],[1,0],[0,1],[-12,4],[-12,3],[-14,4]],
            [[0,0],[1,0],[1,2],[-1,-3],[9,14],[10,15]],
            [[0,0],[1,0],[0,2],[4,1],[4,4],[1,4]],
            [[0,0],[1,0],[3,7],[4,9],[3,2],[4,4]],
            [[0,0],[1,0],[1,7],[0,-4],[3,13],[3,12]],
            [[0,0],[1,0],[1,4],[4,7],[3,2],[4,4]],
            [[0,0],[1,0],[0,4],[-2,4],[-3,7],[-3,10]],
            [[0,0],[3,0],[0,2],[3,-3],[6,-3],[1,-2]],
            [[0,0],[1,0],[0,4],[-1,1],[-4,8],[-4,7]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[4,1],[7,5],[8,5]],
            [[0,0],[2,0],[1,2],[1,-5],[-1,-3],[2,-5]],
            [[0,0],[1,0],[0,1],[-8,5],[-14,9],[-4,4]],
            [[0,0],[1,0],[0,1],[5,1],[8,4],[6,4]],
            [[0,0],[1,0],[0,4],[-1,2],[-4,11],[-4,12]],
            [[0,0],[2,0],[0,3],[4,2],[4,1],[1,5]],
            [[0,0],[1,0],[2,3],[3,4],[5,2],[8,4]],
            [[0,0],[1,0],[3,4],[-2,2],[-1,4],[-2,3]],
            [[0,0],[1,0],[0,1],[4,2],[1,4],[6,4]],
            [[0,0],[2,0],[2,3],[3,4],[5,2],[7,4]],
            [[0,0],[1,0],[5,8],[2,1],[4,4],[9,14]],
            [[0,0],[2,0],[1,4],[-1,1],[-1,2],[4,4]],
            [[0,0],[1,0],[2,3],[-2,1],[-2,2],[2,6]],
            [[0,0],[1,0],[0,1],[-5,4],[-14,8],[-15,9]],
            [[0,0],[1,0],[2,3],[4,1],[3,4],[7,4]],
            [[0,0],[2,0],[1,2],[-3,1],[-3,4],[-1,4]],
            [[0,0],[2,0],[1,3],[4,5],[3,5],[4,1]],
            [[0,0],[2,0],[0,1],[-7,3],[-15,7],[-14,7]],
            [[0,0],[1,0],[1,7],[0,-4],[3,11],[3,10]],
            [[0,0],[1,0],[0,1],[-5,1],[-8,4],[-6,4]],
            [[0,0],[1,0],[0,1],[3,5],[7,8],[8,10]],
            [[0,0],[1,0],[6,8],[3,2],[10,13],[11,14]],
            [[0,0],[1,0],[2,3],[4,4],[11,15],[12,16]],
            [[0,0],[1,0],[0,2],[4,1],[2,4],[4,5]],
            [[0,0],[1,0],[0,4],[-1,1],[-2,4],[-2,10]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[3,4],[5,2],[7,4]],
            [[0,0],[1,0],[0,1],[-2,2],[-15,6],[-17,7]],
            [[0,0],[1,0],[1,2],[3,3],[7,2],[9,3]],
            [[0,0],[2,0],[1,2],[4,2],[5,6],[6,6]],
            [[0,0],[2,0],[0,1],[-5,3],[-10,3],[-8,2]],
            [[0,0],[1,0],[0,1],[3,3],[7,2],[9,3]],
            [[0,0],[1,0],[0,1],[-8,2],[-9,3],[-4,3]],
            [[0,0],[1,0],[0,2],[-1,3],[-6,2],[-7,3]],
            [[0,0],[1,0],[0,1],[6,2],[8,3],[1,3]],
            [[0,0],[1,0],[2,7],[3,10],[2,1],[3,3]],
            [[0,0],[1,0],[2,3],[-3,-5],[-4,-7],[-4,-10]],
            [[0,0],[1,0],[0,2],[-2,5],[-6,8],[-8,11]],
            [[0,0],[3,0],[1,4],[1,-2],[0,4],[3,2]],
            [[0,0],[2,0],[0,1],[4,1],[7,3],[1,3]],
            [[0,0],[2,0],[0,3],[-3,4],[-2,5],[-3,1]],
            [[0,0],[1,0],[0,1],[3,2],[1,5],[5,5]],
            [[0,0],[1,0],[2,3],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[0,1],[-6,4],[-5,5],[-13,9]],
            [[0,0],[1,0],[2,6],[2,7],[-1,-8],[-3,-12]],
            [[0,0],[1,0],[0,2],[-1,1],[-3,7],[-7,11]],
            [[0,0],[1,0],[1,2],[5,1],[3,4],[5,5]],
            [[0,0],[2,0],[3,4],[5,5],[4,5],[5,1]],
            [[0,0],[2,0],[2,3],[3,4],[5,5],[5,1]],
            [[0,0],[1,0],[1,2],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[0,1],[-5,5],[-9,6],[-13,9]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[7,4],[4,3],[11,4]],
            [[0,0],[1,0],[0,1],[-4,4],[-4,2],[-12,8]],
            [[0,0],[2,0],[2,3],[5,5],[4,5],[5,1]],
            [[0,0],[1,0],[2,4],[5,9],[3,2],[5,5]],
            [[0,0],[1,0],[0,2],[3,2],[5,5],[1,5]],
            [[0,0],[1,0],[0,5],[1,1],[-3,12],[-4,17]],
            [[0,0],[1,0],[0,1],[1,5],[4,3],[5,5]],
            [[0,0],[2,0],[1,2],[4,4],[2,3],[8,4]],
            [[0,0],[1,0],[0,1],[-5,5],[-12,9],[-17,13]],
            [[0,0],[1,0],[0,1],[-3,3],[-9,3],[-8,2]],
            [[0,0],[1,0],[3,6],[5,6],[3,2],[5,9]],
            [[0,0],[1,0],[1,2],[4,1],[3,4],[7,4]],
            [[0,0],[1,0],[0,2],[3,3],[2,5],[6,9]],
            [[0,0],[1,0],[0,1],[-5,4],[-14,8],[-17,10]],
            [[0,0],[1,0],[0,1],[3,3],[1,4],[6,9]],
            [[0,0],[2,0],[0,1],[-5,1],[-11,4],[-9,4]],
            [[0,0],[1,0],[0,1],[-14,8],[-3,3],[-15,9]],
            [[0,0],[1,0],[0,1],[3,5],[7,8],[9,11]],
            [[0,0],[1,0],[3,5],[2,1],[4,4],[9,14]],
            [[0,0],[1,0],[2,5],[4,9],[3,2],[4,4]],
            [[0,0],[2,0],[0,2],[4,4],[1,4],[4,1]],
            [[0,0],[2,0],[0,2],[2,-1],[-8,6],[-9,6]],
            [[0,0],[1,0],[1,7],[3,13],[3,12],[0,-5]],
            [[0,0],[1,0],[0,1],[-4,1],[-3,3],[-9,6]],
            [[0,0],[1,0],[1,2],[-6,2],[-6,3],[-1,3]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[3,4],[7,3],[8,4]],
            [[0,0],[1,0],[2,4],[4,7],[7,9],[8,11]],
            [[0,0],[1,0],[1,4],[2,1],[3,3],[3,10]],
            [[0,0],[1,0],[0,1],[4,1],[1,3],[8,3]],
            [[0,0],[1,0],[1,2],[2,3],[7,2],[9,3]],
            [[0,0],[1,0],[0,1],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[0,5],[1,2],[-3,9],[-4,13]],
            [[0,0],[1,0],[0,2],[1,5],[4,3],[5,5]],
            [[0,0],[1,0],[0,1],[5,1],[9,5],[8,5]],
            [[0,0],[2,0],[1,2],[5,1],[5,5],[4,5]],
            [[0,0],[1,0],[1,2],[0,5],[-3,6],[-4,9]],
            [[0,0],[1,0],[0,1],[4,1],[1,2],[9,6]],
            [[0,0],[1,0],[0,3],[-2,2],[-3,4],[-3,9]],
            [[0,0],[1,0],[1,4],[3,1],[2,7],[3,9]],
            [[0,0],[3,0],[0,1],[-5,1],[-14,4],[-12,4]],
            [[0,0],[1,0],[1,2],[3,4],[7,3],[8,4]],
            [[0,0],[1,0],[0,1],[2,2],[1,4],[6,14]],
            [[0,0],[1,0],[0,1],[-3,3],[-8,2],[-10,3]],
            [[0,0],[1,0],[0,2],[3,1],[1,4],[6,4]],
            [[0,0],[1,0],[0,1],[-14,8],[-3,3],[-17,10]],
            [[0,0],[1,0],[0,1],[-5,4],[-14,8],[-19,11]],
            [[0,0],[2,0],[1,2],[4,1],[3,4],[7,4]],
            [[0,0],[1,0],[0,1],[4,1],[9,3],[1,3]],
            [[0,0],[1,0],[0,2],[7,2],[8,3],[2,3]],
            [[0,0],[2,0],[0,1],[-12,4],[-12,3],[-15,4]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[-6,2],[-6,3],[0,3]],
            [[0,0],[2,0],[0,1],[-8,2],[-16,5],[-17,5]],
            [[0,0],[1,0],[3,6],[5,5],[4,3],[5,9]],
            [[0,0],[1,0],[0,3],[4,3],[5,5],[1,5]],
            [[0,0],[2,0],[0,1],[4,1],[7,4],[3,4]],
            [[0,0],[1,0],[0,1],[1,3],[7,2],[9,3]],
            [[0,0],[1,0],[0,1],[-14,8],[-3,3],[-19,11]],
            [[0,0],[3,0],[0,1],[5,2],[4,5],[5,5]],
            [[0,0],[1,0],[0,1],[-3,2],[-4,3],[-3,3]],
            [[0,0],[1,0],[1,3],[2,3],[0,-1],[2,2]],
            [[0,0],[2,0],[0,2],[-1,2],[2,1],[1,-1]],
            [[0,0],[4,0],[0,1],[3,-1],[-1,1],[2,-1]],
            [[0,0],[1,0],[1,4],[2,4],[0,-1],[2,3]],
            [[0,0],[1,0],[0,1],[-5,4],[-6,5],[-5,5]],
            [[0,0],[1,0],[2,3],[3,3],[-2,-4],[-3,-5]],
            [[0,0],[1,0],[1,5],[2,5],[0,-1],[2,4]],
            [[0,0],[1,0],[0,3],[2,-5],[-1,4],[-1,3]],
            [[0,0],[5,0],[0,1],[3,-1],[-1,1],[2,-1]],
            [[0,0],[1,0],[3,5],[2,5],[2,2],[3,6]],
            [[0,0],[5,0],[0,1],[4,-1],[-1,1],[3,-1]],
            [[0,0],[1,0],[0,1],[2,1],[3,3],[1,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-5,2],[-3,2]],
            [[0,0],[2,0],[0,3],[1,-2],[-1,3],[-1,4]],
            [[0,0],[1,0],[1,6],[2,6],[0,-1],[2,5]],
            [[0,0],[6,0],[0,1],[5,-1],[-1,1],[4,-1]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,3],[-1,2],[-1,1],[2,-1]],
            [[0,0],[6,0],[0,1],[3,-1],[-1,1],[2,-1]],
            [[0,0],[1,0],[0,1],[-6,5],[-7,6],[-6,6]],
            [[0,0],[1,0],[5,6],[-3,-5],[4,4],[6,7]],
            [[0,0],[3,0],[0,1],[-6,2],[4,-1],[-7,2]],
            [[0,0],[6,0],[0,1],[4,-1],[-1,1],[3,-1]],
            [[0,0],[1,0],[1,3],[-1,2],[2,3],[-2,1]],
            [[0,0],[1,0],[2,5],[3,5],[0,-2],[-1,-3]],
            [[0,0],[1,0],[1,4],[2,4],[0,-3],[-1,-5]],
            [[0,0],[1,0],[3,5],[2,2],[2,5],[-1,-3]],
            [[0,0],[1,0],[0,4],[-1,5],[1,-3],[2,-5]],
            [[0,0],[1,0],[1,2],[4,6],[4,5],[-1,-3]],
            [[0,0],[1,0],[2,4],[2,3],[1,4],[-1,-5]],
            [[0,0],[1,0],[0,3],[2,2],[-1,2],[2,3]],
            [[0,0],[1,0],[2,5],[3,5],[2,2],[3,7]],
            [[0,0],[5,0],[0,1],[4,-1],[-1,1],[2,-1]],
            [[0,0],[1,0],[2,3],[0,3],[-1,1],[-1,2]],
            [[0,0],[1,0],[3,5],[-1,-3],[2,4],[3,4]],
            [[0,0],[1,0],[0,1],[3,1],[3,3],[2,3]],
            [[0,0],[1,0],[0,2],[-3,6],[3,-5],[-4,7]],
            [[0,0],[1,0],[4,5],[-4,-6],[4,4],[-5,-7]],
            [[0,0],[3,0],[1,2],[2,-2],[3,1],[1,-2]],
            [[0,0],[1,0],[3,7],[3,8],[2,2],[-1,-3]],
            [[0,0],[1,0],[3,4],[4,4],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[2,7],[0,-4],[-1,-6],[-1,-5]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[0,2],[-1,1],[4,-1],[3,-2]],
            [[0,0],[1,0],[3,7],[2,7],[2,3],[3,8]],
            [[0,0],[1,0],[4,7],[3,7],[2,2],[4,8]],
            [[0,0],[1,0],[0,4],[2,-7],[-1,5],[-1,4]],
            [[0,0],[1,0],[2,3],[3,3],[-4,-7],[-5,-8]],
            [[0,0],[1,0],[0,2],[-3,4],[-4,6],[-3,6]],
            [[0,0],[1,0],[1,4],[0,-4],[2,5],[-1,-6]],
            [[0,0],[1,0],[2,4],[2,5],[0,3],[-1,1]],
            [[0,0],[1,0],[0,4],[-1,4],[2,1],[2,2]],
            [[0,0],[1,0],[0,1],[-2,1],[-6,4],[-4,4]],
            [[0,0],[1,0],[0,3],[-2,3],[-1,4],[-2,1]],
            [[0,0],[1,0],[0,4],[-1,1],[-2,4],[-2,3]],
            [[0,0],[1,0],[2,3],[4,4],[3,1],[4,2]],
            [[0,0],[1,0],[2,5],[3,5],[2,1],[3,3]],
            [[0,0],[1,0],[3,5],[1,3],[3,3],[2,5]],
            [[0,0],[1,0],[2,5],[-1,-5],[2,3],[1,4]],
            [[0,0],[1,0],[1,2],[-1,3],[-1,5],[0,5]],
            [[0,0],[3,0],[0,1],[1,2],[2,-2],[3,-1]],
            [[0,0],[1,0],[1,2],[3,3],[3,1],[5,3]],
            [[0,0],[1,0],[1,5],[2,5],[0,-1],[2,2]],
            [[0,0],[1,0],[1,2],[4,2],[2,3],[5,3]],
            [[0,0],[1,0],[4,5],[5,5],[-1,-2],[2,3]],
            [[0,0],[1,0],[0,3],[-1,1],[-2,5],[-2,3]],
            [[0,0],[2,0],[1,3],[1,-2],[0,2],[2,2]],
            [[0,0],[1,0],[0,1],[5,1],[6,2],[3,2]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[3,3],[1,3],[3,1]],
            [[0,0],[1,0],[0,1],[-5,1],[-6,2],[-3,2]],
            [[0,0],[1,0],[4,5],[5,5],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[3,7],[4,7],[0,-2],[-1,-3]],
            [[0,0],[1,0],[0,5],[2,-7],[-1,9],[2,-6]],
            [[0,0],[4,0],[1,2],[-2,1],[4,-1],[5,-1]],
            [[0,0],[2,0],[2,3],[3,2],[-1,-4],[1,2]],
            [[0,0],[1,0],[4,9],[-1,-5],[4,8],[5,11]],
            [[0,0],[1,0],[5,8],[-2,-5],[5,7],[6,9]],
            [[0,0],[1,0],[1,4],[3,7],[0,-3],[-1,-5]],
            [[0,0],[4,0],[1,2],[1,-1],[-1,2],[-1,3]],
            [[0,0],[1,0],[2,4],[0,3],[3,3],[-1,2]],
            [[0,0],[1,0],[7,8],[-5,-7],[5,5],[8,9]],
            [[0,0],[5,0],[0,1],[4,-2],[3,-2],[-1,1]],
            [[0,0],[3,0],[0,3],[-1,3],[3,1],[1,-1]],
            [[0,0],[4,0],[0,2],[-1,2],[4,1],[2,-1]],
            [[0,0],[2,0],[3,4],[-1,-4],[0,-3],[3,3]],
            [[0,0],[1,0],[1,3],[-2,2],[2,3],[-3,1]],
            [[0,0],[1,0],[2,7],[-1,-8],[2,6],[0,-5]],
            [[0,0],[1,0],[0,5],[1,-4],[-1,7],[2,-6]],
            [[0,0],[1,0],[0,2],[4,2],[3,3],[-2,1]],
            [[0,0],[2,0],[2,3],[3,2],[0,-3],[-1,-3]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[4,6]],
            [[0,0],[1,0],[2,3],[1,3],[3,8],[-2,-7]],
            [[0,0],[1,0],[0,3],[-2,6],[3,-7],[-2,5]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,8],[4,9],[3,5],[2,2]],
            [[0,0],[1,0],[1,2],[5,3],[6,3],[-2,1]],
            [[0,0],[1,0],[2,3],[-2,-5],[-1,-5],[3,7]],
            [[0,0],[1,0],[3,4],[5,5],[-4,-6],[-5,-7]],
            [[0,0],[4,0],[1,2],[3,-2],[4,-1],[3,1]],
            [[0,0],[4,0],[0,1],[-8,2],[5,-1],[-9,2]],
            [[0,0],[1,0],[0,1],[5,-5],[1,-2],[3,-5]],
            [[0,0],[1,0],[2,4],[0,4],[-1,1],[-1,2]],
            [[0,0],[1,0],[2,6],[3,7],[3,5],[1,4]],
            [[0,0],[1,0],[6,7],[5,7],[4,4],[7,9]],
            [[0,0],[1,0],[0,1],[4,-5],[1,-3],[2,-5]],
            [[0,0],[1,0],[3,4],[4,4],[1,3],[-1,1]],
            [[0,0],[1,0],[2,3],[5,6],[5,7],[-3,-5]],
            [[0,0],[1,0],[0,2],[-4,1],[-2,3],[-1,3]],
            [[0,0],[1,0],[2,3],[2,1],[5,5],[5,7]],
            [[0,0],[1,0],[2,7],[2,3],[3,8],[3,10]],
            [[0,0],[1,0],[0,4],[2,3],[-1,3],[2,4]],
            [[0,0],[3,0],[0,1],[3,2],[1,-2],[2,-2]],
            [[0,0],[1,0],[2,7],[3,7],[2,3],[3,9]],
            [[0,0],[2,0],[1,2],[-1,-3],[2,1],[0,-4]],
            [[0,0],[1,0],[0,4],[2,4],[-1,2],[-1,3]],
            [[0,0],[1,0],[0,5],[-1,5],[-1,6],[2,1]],
            [[0,0],[1,0],[5,7],[-3,-5],[-2,-3],[-3,-6]],
            [[0,0],[1,0],[3,4],[5,5],[4,5],[3,1]],
            [[0,0],[1,0],[1,3],[3,3],[-1,2],[-2,1]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 3001-3500.
function canonical_dim3_facet_cache_7(id)
    // Convert the id
    id -:= 3000;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,7],[4,7],[2,2],[4,9]],
            [[0,0],[3,0],[0,1],[3,2],[4,2],[1,-2]],
            [[0,0],[1,0],[2,5],[3,5],[1,4],[3,3]],
            [[0,0],[1,0],[0,1],[-5,5],[-3,2],[-7,5]],
            [[0,0],[1,0],[0,1],[6,2],[5,3],[7,3]],
            [[0,0],[1,0],[2,3],[0,4],[-1,2],[2,4]],
            [[0,0],[1,0],[1,2],[-2,2],[-2,1],[0,4]],
            [[0,0],[1,0],[0,1],[-6,1],[-5,2],[-8,2]],
            [[0,0],[1,0],[0,3],[-2,1],[-3,3],[-3,2]],
            [[0,0],[1,0],[0,1],[-3,1],[-6,3],[-3,3]],
            [[0,0],[1,0],[2,5],[2,2],[4,8],[4,9]],
            [[0,0],[1,0],[2,3],[0,3],[-1,1],[2,5]],
            [[0,0],[1,0],[3,5],[-3,-7],[-2,-4],[-1,-4]],
            [[0,0],[1,0],[2,4],[1,3],[3,2],[4,4]],
            [[0,0],[2,0],[0,1],[1,-2],[4,-4],[3,-4]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[2,5]],
            [[0,0],[1,0],[0,1],[7,2],[8,3],[9,3]],
            [[0,0],[1,0],[3,4],[4,5],[3,1],[4,2]],
            [[0,0],[1,0],[0,2],[-3,3],[-3,1],[-1,3]],
            [[0,0],[6,0],[0,1],[5,-1],[-1,1],[2,-1]],
            [[0,0],[1,0],[2,5],[3,7],[3,4],[2,1]],
            [[0,0],[1,0],[0,3],[-1,5],[-2,4],[-3,7]],
            [[0,0],[2,0],[0,1],[-5,1],[-7,2],[-4,2]],
            [[0,0],[1,0],[1,2],[3,1],[2,3],[5,3]],
            [[0,0],[2,0],[0,1],[-8,4],[7,-3],[-9,4]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,7],[-7,-10],[-6,-9],[4,4]],
            [[0,0],[1,0],[3,8],[4,8],[0,-2],[-1,-3]],
            [[0,0],[1,0],[2,5],[2,4],[1,6],[-1,-7]],
            [[0,0],[1,0],[4,9],[-2,-7],[-1,-5],[4,8]],
            [[0,0],[1,0],[1,6],[2,5],[0,-4],[-1,-7]],
            [[0,0],[1,0],[0,6],[-1,10],[2,-7],[-1,11]],
            [[0,0],[1,0],[4,8],[-3,-7],[4,9],[5,11]],
            [[0,0],[1,0],[1,3],[3,5],[4,8],[-2,-7]],
            [[0,0],[2,0],[4,5],[-1,-2],[3,5],[4,6]],
            [[0,0],[1,0],[8,9],[-5,-7],[6,6],[9,10]],
            [[0,0],[1,0],[2,10],[-1,-7],[-1,-6],[2,11]],
            [[0,0],[1,0],[2,3],[-1,3],[1,4],[-2,1]],
            [[0,0],[4,0],[0,2],[1,2],[-3,1],[5,-1]],
            [[0,0],[1,0],[4,5],[3,3],[5,8],[-4,-7]],
            [[0,0],[1,0],[1,6],[2,6],[0,-4],[-1,-7]],
            [[0,0],[1,0],[3,4],[4,4],[-6,-9],[-7,-10]],
            [[0,0],[1,0],[3,7],[2,7],[0,-3],[-1,-4]],
            [[0,0],[1,0],[7,8],[-5,-7],[8,9],[6,6]],
            [[0,0],[2,0],[1,2],[3,-4],[-1,5],[3,-3]],
            [[0,0],[1,0],[4,9],[-2,-7],[4,8],[5,11]],
            [[0,0],[3,0],[0,2],[2,-1],[-4,3],[-5,3]],
            [[0,0],[1,0],[0,4],[3,-11],[-1,5],[-1,4]],
            [[0,0],[1,0],[4,6],[2,5],[4,5],[1,4]],
            [[0,0],[1,0],[4,7],[0,-2],[3,7],[-2,-5]],
            [[0,0],[1,0],[1,3],[4,8],[-1,-5],[-2,-7]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[0,1],[-6,2],[11,-3],[-7,2]],
            [[0,0],[1,0],[4,5],[3,5],[-4,-7],[5,8]],
            [[0,0],[1,0],[2,6],[2,5],[1,6],[-1,-7]],
            [[0,0],[1,0],[2,7],[3,7],[0,-3],[-1,-5]],
            [[0,0],[1,0],[0,6],[-1,7],[1,-4],[2,-7]],
            [[0,0],[1,0],[1,4],[2,4],[-1,3],[-2,1]],
            [[0,0],[1,0],[4,8],[-2,-7],[5,11],[-1,-5]],
            [[0,0],[1,0],[1,6],[2,8],[2,4],[3,9]],
            [[0,0],[1,0],[0,2],[4,3],[5,3],[-3,1]],
            [[0,0],[1,0],[3,7],[2,7],[-1,-4],[-1,-5]],
            [[0,0],[1,0],[4,7],[2,2],[3,7],[-2,-5]],
            [[0,0],[1,0],[6,8],[2,3],[6,7],[-3,-5]],
            [[0,0],[1,0],[4,9],[-2,-7],[3,5],[4,8]],
            [[0,0],[1,0],[0,5],[-1,4],[-1,5],[2,3]],
            [[0,0],[1,0],[0,3],[-2,3],[-3,2],[2,2]],
            [[0,0],[1,0],[2,7],[3,8],[3,6],[2,2]],
            [[0,0],[1,0],[2,6],[-1,-7],[1,5],[2,4]],
            [[0,0],[1,0],[0,5],[-1,3],[2,3],[-1,4]],
            [[0,0],[1,0],[2,5],[0,4],[2,6],[-1,2]],
            [[0,0],[2,0],[1,4],[-1,3],[2,-1],[-1,1]],
            [[0,0],[1,0],[5,8],[5,6],[2,1],[4,4]],
            [[0,0],[1,0],[2,7],[-1,-9],[2,6],[-1,-10]],
            [[0,0],[1,0],[2,7],[-1,-7],[2,5],[1,5]],
            [[0,0],[1,0],[3,7],[0,-1],[2,7],[3,5]],
            [[0,0],[3,0],[0,1],[2,2],[2,-3],[3,2]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,7],[3,5],[1,4],[2,7]],
            [[0,0],[1,0],[2,3],[6,8],[-4,-7],[5,6]],
            [[0,0],[1,0],[4,5],[3,5],[4,3],[3,1]],
            [[0,0],[1,0],[0,3],[-3,2],[-3,1],[-1,4]],
            [[0,0],[1,0],[4,7],[4,5],[3,6],[1,3]],
            [[0,0],[1,0],[0,3],[-2,6],[3,-7],[3,-8]],
            [[0,0],[1,0],[2,7],[3,7],[2,2],[3,5]],
            [[0,0],[1,0],[0,1],[3,5],[2,6],[4,8]],
            [[0,0],[1,0],[5,7],[6,7],[4,4],[8,11]],
            [[0,0],[1,0],[3,5],[-3,-8],[-2,-7],[-4,-11]],
            [[0,0],[1,0],[2,5],[2,6],[0,4],[-1,1]],
            [[0,0],[1,0],[0,1],[-2,1],[-7,5],[-5,5]],
            [[0,0],[1,0],[2,6],[1,4],[3,6],[-1,-5]],
            [[0,0],[1,0],[3,8],[1,4],[-1,-5],[2,7]],
            [[0,0],[1,0],[0,1],[2,-5],[4,-5],[1,-4]],
            [[0,0],[1,0],[5,6],[5,4],[3,1],[4,2]],
            [[0,0],[1,0],[2,3],[-2,1],[2,4],[-2,2]],
            [[0,0],[1,0],[2,5],[4,8],[4,7],[-1,-4]],
            [[0,0],[1,0],[0,3],[-1,1],[-1,5],[-3,7]],
            [[0,0],[1,0],[2,3],[-1,3],[-2,1],[-2,2]],
            [[0,0],[1,0],[1,5],[0,-1],[3,5],[3,4]],
            [[0,0],[1,0],[0,4],[-2,6],[-1,1],[-2,4]],
            [[0,0],[1,0],[2,3],[4,4],[3,4],[4,1]],
            [[0,0],[1,0],[0,1],[6,2],[5,3],[8,3]],
            [[0,0],[1,0],[5,7],[6,7],[2,1],[7,9]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,4],[-1,3],[2,2],[2,4]],
            [[0,0],[1,0],[0,1],[2,1],[4,4],[1,4]],
            [[0,0],[1,0],[1,2],[4,2],[4,4],[6,4]],
            [[0,0],[1,0],[2,4],[0,4],[-1,1],[-1,3]],
            [[0,0],[1,0],[2,3],[-1,3],[-1,4],[2,4]],
            [[0,0],[1,0],[1,2],[4,1],[2,3],[4,4]],
            [[0,0],[1,0],[2,7],[3,7],[2,3],[3,10]],
            [[0,0],[1,0],[2,3],[5,5],[3,1],[4,5]],
            [[0,0],[3,0],[1,2],[2,-1],[4,2],[-1,1]],
            [[0,0],[1,0],[1,2],[0,-5],[-1,-3],[-2,-7]],
            [[0,0],[1,0],[0,1],[4,1],[4,3],[6,3]],
            [[0,0],[2,0],[1,2],[4,3],[2,3],[4,1]],
            [[0,0],[1,0],[0,1],[-4,1],[-6,3],[-4,3]],
            [[0,0],[1,0],[0,1],[-6,1],[-7,2],[-3,2]],
            [[0,0],[1,0],[4,7],[-2,-5],[2,4],[4,6]],
            [[0,0],[1,0],[0,1],[4,2],[5,3],[1,3]],
            [[0,0],[1,0],[1,2],[3,3],[5,2],[6,3]],
            [[0,0],[1,0],[0,1],[-6,1],[-8,2],[-4,2]],
            [[0,0],[2,0],[0,1],[-6,1],[-8,2],[-5,2]],
            [[0,0],[2,0],[0,1],[3,-1],[3,-4],[2,-4]],
            [[0,0],[1,0],[2,5],[3,7],[2,1],[3,3]],
            [[0,0],[2,0],[0,1],[6,3],[6,2],[7,3]],
            [[0,0],[1,0],[1,6],[2,6],[0,-1],[2,2]],
            [[0,0],[1,0],[2,3],[-1,1],[2,5],[-1,2]],
            [[0,0],[2,0],[0,1],[3,1],[4,3],[1,3]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[0,1],[5,1],[2,2],[6,2]],
            [[0,0],[1,0],[4,7],[-1,-3],[4,6],[3,6]],
            [[0,0],[1,0],[1,2],[4,3],[4,5],[5,5]],
            [[0,0],[1,0],[0,1],[-5,1],[-7,2],[-2,2]],
            [[0,0],[1,0],[0,1],[5,1],[7,2],[2,2]],
            [[0,0],[2,0],[0,1],[-5,1],[-7,2],[-3,2]],
            [[0,0],[2,0],[1,3],[0,1],[4,5],[1,-2]],
            [[0,0],[4,0],[0,1],[5,2],[3,-1],[1,-2]],
            [[0,0],[4,0],[0,1],[-5,1],[-5,2],[11,-2]],
            [[0,0],[2,0],[0,1],[-8,4],[9,-4],[-11,5]],
            [[0,0],[1,0],[1,4],[-2,2],[2,4],[-3,1]],
            [[0,0],[2,0],[3,5],[0,1],[1,-2],[4,5]],
            [[0,0],[1,0],[2,8],[-2,-11],[1,5],[2,9]],
            [[0,0],[1,0],[2,4],[-1,2],[3,1],[-2,1]],
            [[0,0],[4,0],[0,2],[4,1],[-1,2],[3,-2]],
            [[0,0],[1,0],[4,10],[3,10],[2,3],[4,11]],
            [[0,0],[1,0],[8,11],[3,5],[1,2],[-1,-3]],
            [[0,0],[4,0],[0,2],[4,1],[-1,1],[3,-2]],
            [[0,0],[1,0],[2,5],[-1,-8],[3,11],[-1,-9]],
            [[0,0],[1,0],[2,5],[2,4],[1,5],[-2,-11]],
            [[0,0],[1,0],[4,8],[3,8],[4,7],[-1,-3]],
            [[0,0],[1,0],[5,11],[-2,-5],[5,12],[6,14]],
            [[0,0],[2,0],[3,4],[-2,-5],[1,2],[3,5]],
            [[0,0],[1,0],[5,8],[2,4],[5,7],[-2,-5]],
            [[0,0],[1,0],[3,10],[-1,-7],[3,9],[-1,-8]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,6],[4,4],[1,3],[3,6]],
            [[0,0],[1,0],[5,8],[6,8],[2,1],[4,4]],
            [[0,0],[1,0],[3,7],[-1,-5],[-3,-9],[-2,-5]],
            [[0,0],[2,0],[2,3],[-1,2],[3,3],[-3,1]],
            [[0,0],[1,0],[0,1],[3,6],[3,5],[1,6]],
            [[0,0],[1,0],[7,9],[8,10],[2,1],[6,6]],
            [[0,0],[1,0],[0,1],[6,-6],[1,-2],[4,-6]],
            [[0,0],[1,0],[0,6],[-1,6],[-1,7],[2,2]],
            [[0,0],[3,0],[0,3],[3,-1],[-1,1],[2,3]],
            [[0,0],[1,0],[2,4],[3,3],[-1,2],[0,4]],
            [[0,0],[1,0],[0,6],[-1,2],[-2,6],[-2,5]],
            [[0,0],[1,0],[5,8],[6,8],[6,9],[4,4]],
            [[0,0],[1,0],[2,3],[-2,2],[-3,1],[2,4]],
            [[0,0],[1,0],[6,7],[-6,-8],[8,10],[7,9]],
            [[0,0],[1,0],[7,9],[-5,-8],[6,7],[8,10]],
            [[0,0],[1,0],[0,1],[-6,6],[-3,2],[-8,6]],
            [[0,0],[1,0],[5,8],[6,8],[0,-1],[4,4]],
            [[0,0],[1,0],[3,4],[4,4],[-1,2],[-2,1]],
            [[0,0],[1,0],[4,5],[6,6],[3,1],[4,2]],
            [[0,0],[2,0],[3,4],[-1,-5],[3,3],[0,-4]],
            [[0,0],[1,0],[7,10],[8,11],[6,7],[4,4]],
            [[0,0],[1,0],[5,8],[4,7],[5,6],[4,4]],
            [[0,0],[1,0],[2,4],[4,4],[0,3],[-1,2]],
            [[0,0],[1,0],[2,7],[-1,-9],[0,-6],[-1,-11]],
            [[0,0],[1,0],[5,7],[-5,-9],[-2,-5],[-6,-11]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[6,8],[2,1],[5,7],[6,6]],
            [[0,0],[1,0],[0,3],[-3,3],[-2,4],[-3,1]],
            [[0,0],[2,0],[0,4],[-1,2],[2,-3],[3,-4]],
            [[0,0],[4,0],[0,1],[3,2],[3,-2],[4,2]],
            [[0,0],[1,0],[0,6],[-1,1],[-2,4],[-2,3]],
            [[0,0],[1,0],[3,4],[5,4],[5,3],[1,3]],
            [[0,0],[1,0],[4,5],[2,5],[4,4],[1,4]],
            [[0,0],[1,0],[3,7],[4,8],[4,6],[3,3]],
            [[0,0],[1,0],[1,6],[2,3],[3,8],[3,7]],
            [[0,0],[2,0],[2,4],[0,-3],[3,3],[-1,-4]],
            [[0,0],[1,0],[4,8],[3,8],[2,2],[-1,-3]],
            [[0,0],[1,0],[2,5],[4,8],[4,6],[3,3]],
            [[0,0],[4,0],[1,2],[-2,1],[3,2],[4,-1]],
            [[0,0],[1,0],[0,1],[4,5],[3,6],[5,8]],
            [[0,0],[1,0],[0,6],[-1,6],[2,1],[2,2]],
            [[0,0],[1,0],[4,7],[2,5],[4,5],[3,7]],
            [[0,0],[1,0],[6,7],[-6,-8],[-7,-9],[8,10]],
            [[0,0],[2,0],[0,1],[6,-3],[7,-4],[1,-2]],
            [[0,0],[1,0],[0,1],[-4,3],[-10,8],[-6,6]],
            [[0,0],[1,0],[6,7],[7,8],[5,4],[3,1]],
            [[0,0],[1,0],[4,7],[3,3],[6,9],[6,8]],
            [[0,0],[1,0],[3,8],[4,9],[2,2],[4,7]],
            [[0,0],[1,0],[1,4],[3,3],[-1,3],[3,4]],
            [[0,0],[1,0],[2,6],[-1,-7],[2,8],[1,6]],
            [[0,0],[1,0],[0,1],[6,-6],[2,-4],[1,-3]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[6,0],[0,1],[13,-2],[14,-2],[1,1]],
            [[0,0],[1,0],[2,4],[4,4],[-1,1],[0,3]],
            [[0,0],[1,0],[2,7],[-1,-8],[0,-6],[-1,-10]],
            [[0,0],[1,0],[3,6],[1,4],[2,6],[3,3]],
            [[0,0],[1,0],[0,1],[3,5],[1,5],[3,3]],
            [[0,0],[1,0],[0,4],[2,4],[-1,2],[2,6]],
            [[0,0],[1,0],[2,7],[3,9],[3,6],[2,2]],
            [[0,0],[1,0],[1,3],[4,2],[-1,2],[4,3]],
            [[0,0],[1,0],[0,1],[4,4],[2,4],[4,2]],
            [[0,0],[1,0],[5,7],[3,3],[4,7],[-2,-4]],
            [[0,0],[1,0],[2,7],[-1,-8],[2,6],[-1,-10]],
            [[0,0],[2,0],[0,1],[1,-3],[2,-4],[4,-2]],
            [[0,0],[1,0],[3,5],[4,6],[4,3],[3,1]],
            [[0,0],[2,0],[1,3],[2,4],[4,2],[4,1]],
            [[0,0],[1,0],[0,1],[9,2],[10,3],[11,3]],
            [[0,0],[1,0],[2,7],[-1,-7],[1,5],[2,4]],
            [[0,0],[1,0],[0,5],[2,3],[-1,3],[-1,5]],
            [[0,0],[1,0],[1,2],[-3,2],[-1,4],[0,4]],
            [[0,0],[1,0],[1,5],[2,2],[3,7],[3,5]],
            [[0,0],[1,0],[0,5],[-1,5],[2,1],[2,3]],
            [[0,0],[1,0],[4,5],[3,3],[-6,-8],[-7,-10]],
            [[0,0],[1,0],[0,1],[1,-5],[3,-5],[3,-3]],
            [[0,0],[1,0],[3,8],[4,8],[2,2],[4,10]],
            [[0,0],[1,0],[4,5],[2,4],[5,7],[5,9]],
            [[0,0],[1,0],[0,1],[3,7],[3,5],[1,5]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[-1,2],[0,5],[-1,4]],
            [[0,0],[1,0],[2,3],[-1,3],[-2,1],[-3,2]],
            [[0,0],[1,0],[2,3],[6,8],[-4,-7],[7,9]],
            [[0,0],[1,0],[2,7],[3,8],[2,2],[3,5]],
            [[0,0],[1,0],[1,3],[3,1],[-1,2],[4,3]],
            [[0,0],[1,0],[1,5],[2,1],[3,5],[3,3]],
            [[0,0],[1,0],[4,5],[3,5],[3,1],[4,2]],
            [[0,0],[1,0],[4,5],[5,6],[4,2],[5,3]],
            [[0,0],[2,0],[0,4],[-2,4],[1,3],[-2,3]],
            [[0,0],[1,0],[3,7],[4,7],[4,9],[2,1]],
            [[0,0],[1,0],[0,4],[-2,4],[-1,5],[-2,1]],
            [[0,0],[3,0],[0,2],[4,-1],[1,-2],[2,-3]],
            [[0,0],[1,0],[0,4],[-2,3],[2,2],[-2,4]],
            [[0,0],[1,0],[2,5],[4,5],[3,2],[4,4]],
            [[0,0],[1,0],[7,9],[5,5],[2,1],[9,11]],
            [[0,0],[1,0],[2,3],[-3,-5],[-5,-10],[-5,-9]],
            [[0,0],[1,0],[5,7],[2,1],[7,9],[5,5]],
            [[0,0],[1,0],[3,4],[5,5],[3,1],[5,3]],
            [[0,0],[2,0],[1,2],[0,-4],[2,-2],[-1,-3]],
            [[0,0],[1,0],[2,6],[3,6],[-1,-5],[-2,-7]],
            [[0,0],[1,0],[0,2],[-3,1],[-4,2],[-4,4]],
            [[0,0],[2,0],[0,1],[-5,1],[-9,3],[-8,3]],
            [[0,0],[2,0],[2,3],[5,3],[4,1],[5,2]],
            [[0,0],[1,0],[0,1],[1,4],[3,2],[4,4]],
            [[0,0],[1,0],[0,1],[-8,3],[-8,2],[-10,3]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-3,1],[-9,4],[-10,5]],
            [[0,0],[1,0],[0,1],[-6,3],[-4,1],[-3,3]],
            [[0,0],[1,0],[2,5],[3,4],[4,7],[4,9]],
            [[0,0],[1,0],[0,4],[-1,2],[-2,5],[-2,8]],
            [[0,0],[1,0],[5,7],[3,5],[5,6],[-2,-4]],
            [[0,0],[1,0],[0,1],[5,4],[1,2],[7,4]],
            [[0,0],[2,0],[0,1],[1,1],[2,-4],[4,-4]],
            [[0,0],[2,0],[0,3],[3,2],[-1,2],[3,3]],
            [[0,0],[1,0],[1,2],[4,1],[4,4],[3,4]],
            [[0,0],[1,0],[2,3],[4,2],[3,4],[6,4]],
            [[0,0],[1,0],[0,1],[-4,4],[-6,4],[-10,7]],
            [[0,0],[1,0],[3,5],[2,1],[4,4],[6,8]],
            [[0,0],[1,0],[1,5],[0,-2],[3,7],[3,6]],
            [[0,0],[1,0],[0,1],[-6,1],[-8,2],[-3,2]],
            [[0,0],[1,0],[4,7],[-2,-5],[2,4],[5,8]],
            [[0,0],[2,0],[0,1],[-6,1],[-8,2],[-4,2]],
            [[0,0],[2,0],[1,4],[1,-2],[0,3],[2,3]],
            [[0,0],[1,0],[4,7],[-2,-5],[3,6],[4,6]],
            [[0,0],[1,0],[0,1],[-6,1],[-7,2],[-2,2]],
            [[0,0],[1,0],[0,2],[-2,1],[-3,2],[-3,5]],
            [[0,0],[1,0],[1,3],[2,1],[3,3],[3,7]],
            [[0,0],[1,0],[0,1],[3,1],[1,3],[5,3]],
            [[0,0],[2,0],[0,1],[-6,1],[-9,2],[-4,2]],
            [[0,0],[3,0],[0,1],[-6,1],[-9,2],[-5,2]],
            [[0,0],[2,0],[0,1],[-6,1],[-8,2],[-3,2]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-6,1],[-9,2],[-3,2]],
            [[0,0],[1,0],[0,1],[-6,1],[-8,2],[-2,2]],
            [[0,0],[1,0],[0,1],[2,1],[1,3],[5,7]],
            [[0,0],[2,0],[1,4],[1,-2],[0,3],[2,4]],
            [[0,0],[1,0],[0,7],[1,-1],[-1,2],[-2,5]],
            [[0,0],[1,0],[5,11],[-2,-7],[5,10],[6,13]],
            [[0,0],[1,0],[0,1],[3,5],[5,5],[1,4]],
            [[0,0],[1,0],[1,2],[5,7],[5,5],[4,7]],
            [[0,0],[4,0],[0,1],[5,2],[6,2],[1,-2]],
            [[0,0],[1,0],[4,5],[2,1],[7,7],[9,11]],
            [[0,0],[1,0],[5,9],[5,7],[2,1],[4,4]],
            [[0,0],[1,0],[5,6],[7,7],[6,7],[3,1]],
            [[0,0],[1,0],[4,9],[-3,-10],[4,8],[5,11]],
            [[0,0],[2,0],[3,5],[-1,-3],[0,-4],[-1,-2]],
            [[0,0],[1,0],[2,4],[-1,3],[1,5],[-2,1]],
            [[0,0],[1,0],[3,10],[-1,-7],[3,8],[4,13]],
            [[0,0],[1,0],[1,5],[2,5],[-1,3],[-2,1]],
            [[0,0],[1,0],[7,10],[6,7],[4,4],[9,12]],
            [[0,0],[3,0],[0,2],[-4,3],[4,-2],[-5,3]],
            [[0,0],[1,0],[8,10],[7,10],[6,7],[9,12]],
            [[0,0],[1,0],[1,4],[-2,-9],[2,5],[-1,-8]],
            [[0,0],[1,0],[0,1],[7,-7],[2,-3],[5,-7]],
            [[0,0],[2,0],[3,4],[-1,-5],[0,-4],[4,5]],
            [[0,0],[1,0],[5,7],[2,1],[4,7],[5,5]],
            [[0,0],[1,0],[5,8],[4,7],[6,8],[4,4]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,6],[2,5],[1,4],[4,4]],
            [[0,0],[4,0],[1,2],[3,-2],[4,1],[-1,2]],
            [[0,0],[1,0],[2,3],[5,3],[4,1],[5,5]],
            [[0,0],[2,0],[1,2],[-2,4],[3,-4],[3,-5]],
            [[0,0],[1,0],[3,10],[4,10],[2,3],[4,12]],
            [[0,0],[1,0],[0,1],[3,-5],[5,-5],[1,-4]],
            [[0,0],[1,0],[0,7],[-1,8],[-1,9],[2,1]],
            [[0,0],[2,0],[1,3],[4,5],[0,2],[1,-2]],
            [[0,0],[1,0],[0,1],[5,-7],[4,-7],[5,-5]],
            [[0,0],[1,0],[2,4],[4,4],[-1,2],[-2,1]],
            [[0,0],[1,0],[2,3],[5,3],[5,4],[-2,1]],
            [[0,0],[1,0],[7,8],[-8,-11],[-7,-10],[8,9]],
            [[0,0],[1,0],[4,8],[3,4],[-3,-7],[4,9]],
            [[0,0],[1,0],[0,1],[1,-7],[2,-4],[3,-9]],
            [[0,0],[1,0],[3,4],[4,4],[0,3],[-2,1]],
            [[0,0],[1,0],[0,1],[5,-7],[2,-5],[3,-7]],
            [[0,0],[1,0],[0,2],[-4,3],[-4,1],[-3,4]],
            [[0,0],[1,0],[0,4],[2,5],[-2,1],[-2,2]],
            [[0,0],[1,0],[2,3],[5,4],[6,4],[-2,1]],
            [[0,0],[2,0],[3,4],[-1,-5],[4,5],[4,4]],
            [[0,0],[1,0],[0,2],[-6,1],[-2,3],[-1,3]],
            [[0,0],[1,0],[0,1],[1,7],[2,4],[3,9]],
            [[0,0],[1,0],[3,6],[0,-1],[5,7],[1,4]],
            [[0,0],[1,0],[4,5],[2,5],[3,7],[5,7]],
            [[0,0],[1,0],[2,3],[3,9],[-2,-8],[3,10]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[7,8],[3,4],[7,9],[-5,-7]],
            [[0,0],[1,0],[4,9],[5,11],[2,1],[3,3]],
            [[0,0],[1,0],[0,7],[-1,7],[-1,8],[2,1]],
            [[0,0],[1,0],[0,1],[6,4],[7,5],[1,3]],
            [[0,0],[4,0],[0,2],[4,-1],[-2,1],[3,2]],
            [[0,0],[1,0],[6,8],[7,8],[9,11],[10,13]],
            [[0,0],[1,0],[2,5],[4,7],[3,3],[5,7]],
            [[0,0],[1,0],[3,8],[-1,-5],[2,7],[3,6]],
            [[0,0],[4,0],[0,1],[3,-2],[2,2],[4,2]],
            [[0,0],[2,0],[0,1],[5,-2],[1,-2],[7,-4]],
            [[0,0],[1,0],[1,2],[-2,4],[-2,3],[0,6]],
            [[0,0],[1,0],[0,4],[-2,3],[-3,7],[-3,6]],
            [[0,0],[1,0],[2,7],[3,7],[2,1],[3,4]],
            [[0,0],[1,0],[4,5],[1,3],[4,8],[2,5]],
            [[0,0],[2,0],[0,3],[-1,4],[-3,2],[-3,1]],
            [[0,0],[1,0],[2,5],[4,8],[3,3],[4,5]],
            [[0,0],[1,0],[2,7],[2,4],[-1,-7],[1,6]],
            [[0,0],[1,0],[2,7],[3,6],[4,10],[4,11]],
            [[0,0],[1,0],[1,3],[4,5],[2,4],[4,2]],
            [[0,0],[1,0],[1,3],[4,4],[3,4],[4,1]],
            [[0,0],[1,0],[3,8],[2,2],[4,10],[4,7]],
            [[0,0],[1,0],[3,4],[5,3],[1,3],[6,4]],
            [[0,0],[1,0],[2,3],[4,2],[6,6],[4,5]],
            [[0,0],[1,0],[0,3],[-3,2],[-1,4],[-4,4]],
            [[0,0],[1,0],[3,7],[4,9],[4,6],[3,3]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[2,4],[3,3],[0,3],[1,-2]],
            [[0,0],[1,0],[4,6],[0,-1],[6,7],[1,3]],
            [[0,0],[1,0],[0,2],[4,2],[-2,1],[6,4]],
            [[0,0],[1,0],[0,4],[2,4],[-2,1],[-2,2]],
            [[0,0],[1,0],[7,9],[8,10],[6,6],[3,2]],
            [[0,0],[2,0],[2,4],[1,4],[4,2],[4,1]],
            [[0,0],[1,0],[2,7],[3,8],[3,5],[2,1]],
            [[0,0],[1,0],[0,1],[2,2],[4,10],[4,11]],
            [[0,0],[1,0],[5,7],[-4,-7],[3,5],[5,6]],
            [[0,0],[1,0],[2,6],[0,4],[2,8],[-1,1]],
            [[0,0],[1,0],[0,2],[-5,1],[-3,3],[-1,3]],
            [[0,0],[1,0],[5,7],[6,7],[8,11],[10,13]],
            [[0,0],[1,0],[4,9],[4,6],[2,1],[3,3]],
            [[0,0],[1,0],[0,1],[-8,4],[-5,2],[-5,4]],
            [[0,0],[1,0],[5,8],[5,6],[7,10],[2,1]],
            [[0,0],[1,0],[5,11],[2,2],[6,12],[7,15]],
            [[0,0],[1,0],[0,4],[3,3],[-1,3],[3,4]],
            [[0,0],[1,0],[0,1],[-3,1],[-7,4],[-4,4]],
            [[0,0],[1,0],[3,8],[3,5],[5,11],[5,12]],
            [[0,0],[1,0],[1,2],[-2,-6],[0,-6],[-2,-5]],
            [[0,0],[1,0],[4,8],[2,5],[4,5],[3,7]],
            [[0,0],[1,0],[0,1],[-5,3],[-5,5],[-8,5]],
            [[0,0],[1,0],[0,1],[-7,5],[-11,8],[-5,5]],
            [[0,0],[1,0],[4,9],[5,10],[5,11],[2,1]],
            [[0,0],[1,0],[5,7],[6,8],[3,2],[6,6]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[3,2],[4,6],[6,6]],
            [[0,0],[1,0],[0,1],[-3,1],[-8,4],[-5,4]],
            [[0,0],[1,0],[6,7],[7,8],[3,1],[4,2]],
            [[0,0],[1,0],[5,6],[4,4],[-6,-8],[-7,-10]],
            [[0,0],[1,0],[3,7],[0,-3],[-3,-9],[-2,-5]],
            [[0,0],[1,0],[3,8],[0,-3],[2,7],[-2,-8]],
            [[0,0],[2,0],[0,1],[4,-3],[7,-3],[1,-2]],
            [[0,0],[1,0],[0,1],[5,-5],[1,-3],[2,-5]],
            [[0,0],[1,0],[0,1],[2,11],[3,14],[3,15]],
            [[0,0],[3,0],[0,3],[-1,1],[3,-2],[5,-3]],
            [[0,0],[1,0],[5,7],[2,1],[5,5],[8,11]],
            [[0,0],[1,0],[0,1],[5,4],[5,3],[2,4]],
            [[0,0],[1,0],[1,2],[0,6],[-1,1],[-2,4]],
            [[0,0],[2,0],[3,4],[-1,-5],[3,3],[-1,-6]],
            [[0,0],[1,0],[0,4],[2,3],[-1,2],[2,6]],
            [[0,0],[1,0],[1,4],[3,5],[2,5],[3,1]],
            [[0,0],[1,0],[4,5],[5,6],[3,1],[5,3]],
            [[0,0],[1,0],[0,1],[-2,1],[-4,4],[-10,7]],
            [[0,0],[1,0],[1,3],[4,2],[-1,2],[5,3]],
            [[0,0],[1,0],[2,3],[4,2],[6,5],[7,5]],
            [[0,0],[1,0],[2,7],[3,6],[2,2],[3,10]],
            [[0,0],[1,0],[2,3],[-3,-5],[-5,-10],[-6,-11]],
            [[0,0],[1,0],[0,1],[9,2],[10,3],[12,3]],
            [[0,0],[1,0],[0,1],[4,4],[3,5],[6,8]],
            [[0,0],[1,0],[1,2],[4,2],[3,5],[4,6]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[2,0],[1,2],[-3,4],[-2,1],[-3,2]],
            [[0,0],[1,0],[3,5],[1,4],[2,7],[3,9]],
            [[0,0],[1,0],[2,4],[-1,2],[2,6],[-1,3]],
            [[0,0],[1,0],[3,5],[5,7],[3,2],[5,5]],
            [[0,0],[1,0],[2,7],[3,9],[2,2],[3,5]],
            [[0,0],[1,0],[0,2],[-6,5],[-6,4],[-7,5]],
            [[0,0],[1,0],[2,3],[2,4],[0,4],[-2,2]],
            [[0,0],[1,0],[0,1],[4,1],[7,3],[3,3]],
            [[0,0],[1,0],[0,1],[7,3],[6,2],[3,3]],
            [[0,0],[2,0],[0,1],[1,1],[4,-6],[5,-6]],
            [[0,0],[1,0],[1,4],[3,7],[2,6],[3,3]],
            [[0,0],[1,0],[0,2],[-6,10],[-6,11],[-7,12]],
            [[0,0],[1,0],[2,5],[4,7],[2,1],[4,5]],
            [[0,0],[1,0],[3,5],[4,6],[3,1],[4,2]],
            [[0,0],[2,0],[1,3],[-2,3],[-2,1],[-3,2]],
            [[0,0],[1,0],[4,7],[3,7],[2,2],[6,13]],
            [[0,0],[1,0],[2,5],[4,7],[2,1],[4,9]],
            [[0,0],[1,0],[0,2],[-4,3],[-4,1],[-1,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-7,3],[-3,3]],
            [[0,0],[1,0],[5,7],[7,9],[5,5],[3,2]],
            [[0,0],[1,0],[1,2],[6,2],[7,3],[3,3]],
            [[0,0],[2,0],[1,2],[5,2],[2,3],[6,3]],
            [[0,0],[1,0],[0,1],[-3,3],[-10,6],[-11,7]],
            [[0,0],[1,0],[0,1],[6,3],[7,2],[9,3]],
            [[0,0],[1,0],[1,3],[3,1],[2,5],[3,6]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,5],[0,-3],[3,9],[3,8]],
            [[0,0],[1,0],[0,1],[2,4],[5,6],[6,8]],
            [[0,0],[1,0],[0,3],[-3,6],[-2,2],[-3,4]],
            [[0,0],[2,0],[0,1],[-5,2],[-11,5],[-10,5]],
            [[0,0],[1,0],[2,4],[3,3],[4,7],[6,9]],
            [[0,0],[2,0],[1,2],[4,4],[3,4],[4,1]],
            [[0,0],[1,0],[0,2],[3,4],[3,1],[1,4]],
            [[0,0],[1,0],[0,1],[3,1],[6,3],[1,3]],
            [[0,0],[1,0],[3,4],[0,-1],[2,4],[3,3],[1,3]],
            [[0,0],[1,0],[0,3],[-1,4],[2,-4],[1,-3],[2,-5]],
            [[0,0],[1,0],[1,4],[2,5],[2,4],[0,-3],[-1,-5]],
            [[0,0],[1,0],[0,1],[-3,2],[-4,4],[-7,5],[-6,5]],
            [[0,0],[2,0],[2,3],[0,-1],[3,2],[1,3],[3,1]],
            [[0,0],[3,0],[1,2],[0,1],[2,-2],[3,1],[1,-2]],
            [[0,0],[2,0],[1,3],[0,4],[1,-1],[-1,3],[2,1]],
            [[0,0],[1,0],[1,3],[-1,-5],[2,3],[3,8],[3,7]],
            [[0,0],[1,0],[4,5],[-4,-6],[3,4],[4,4],[-5,-7]],
            [[0,0],[1,0],[0,3],[-1,1],[-1,5],[-2,4],[-2,6]],
            [[0,0],[1,0],[0,1],[-4,4],[-2,1],[-6,4],[-5,3]],
            [[0,0],[1,0],[2,3],[4,4],[3,4],[3,1],[4,2]],
            [[0,0],[1,0],[4,5],[3,4],[5,5],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[0,5],[-1,6],[1,-4],[2,-6],[2,-7]],
            [[0,0],[1,0],[4,5],[-4,-7],[3,3],[4,6],[3,5]],
            [[0,0],[1,0],[1,5],[2,5],[0,-4],[-1,-6],[-1,-7]],
            [[0,0],[2,0],[2,3],[1,2],[3,2],[0,-3],[-1,-3]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,8],[4,9],[3,5],[2,2],[4,10]],
            [[0,0],[1,0],[6,7],[-5,-7],[-4,-6],[7,8],[5,5]],
            [[0,0],[4,0],[0,2],[-1,2],[4,1],[2,-1],[1,-1]],
            [[0,0],[1,0],[7,8],[-5,-7],[-4,-6],[5,5],[8,9]],
            [[0,0],[1,0],[2,4],[0,3],[3,3],[-1,2],[3,4]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[4,6],[0,-1]],
            [[0,0],[2,0],[0,3],[1,-1],[-2,3],[-2,4],[2,1]],
            [[0,0],[1,0],[2,3],[0,4],[-1,2],[2,4],[-1,3]],
            [[0,0],[1,0],[3,5],[0,1],[2,6],[3,7],[1,4]],
            [[0,0],[1,0],[0,1],[1,-3],[3,-3],[2,-5],[4,-5]],
            [[0,0],[1,0],[1,4],[2,2],[2,6],[3,7],[3,5]],
            [[0,0],[1,0],[0,2],[-3,1],[-2,3],[-4,3],[-4,2]],
            [[0,0],[1,0],[0,2],[-2,1],[-3,4],[-3,2],[-2,4]],
            [[0,0],[1,0],[2,4],[0,1],[1,3],[3,2],[4,4]],
            [[0,0],[1,0],[2,3],[-5,-9],[-2,-5],[0,-2],[-5,-8]],
            [[0,0],[1,0],[2,8],[0,-1],[1,6],[2,4],[3,9]],
            [[0,0],[1,0],[1,6],[2,7],[2,6],[0,-4],[-1,-7]],
            [[0,0],[1,0],[6,7],[6,8],[5,7],[-2,-3],[-3,-5]],
            [[0,0],[1,0],[1,4],[2,4],[-1,3],[-2,1],[-2,2]],
            [[0,0],[1,0],[2,3],[1,4],[-1,3],[-2,1],[-2,2]],
            [[0,0],[1,0],[3,7],[2,3],[2,7],[-1,-4],[-1,-5]],
            [[0,0],[2,0],[0,1],[-8,4],[7,-3],[-9,4],[-11,5]],
            [[0,0],[1,0],[4,9],[-2,-7],[-1,-5],[4,8],[5,11]],
            [[0,0],[1,0],[4,5],[3,3],[3,5],[-4,-7],[5,8]],
            [[0,0],[1,0],[3,8],[2,3],[3,7],[2,7],[-1,-5]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,7],[3,7],[0,-3],[-1,-4],[-1,-5]],
            [[0,0],[1,0],[2,7],[1,4],[3,7],[0,-3],[-1,-5]],
            [[0,0],[1,0],[1,6],[2,6],[2,5],[0,-4],[-1,-7]],
            [[0,0],[1,0],[1,4],[2,6],[3,6],[2,1],[3,4]],
            [[0,0],[1,0],[0,2],[-3,3],[-3,1],[-5,3],[-5,2]],
            [[0,0],[1,0],[0,1],[4,-5],[4,-4],[1,-3],[2,-5]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[4,5],[4,7]],
            [[0,0],[1,0],[2,5],[2,6],[0,4],[-1,1],[-1,2]],
            [[0,0],[1,0],[1,3],[3,4],[3,1],[4,4],[4,2]],
            [[0,0],[1,0],[3,7],[2,6],[2,3],[-1,-5],[-2,-7]],
            [[0,0],[1,0],[0,1],[-7,4],[-5,4],[-6,3],[-3,1]],
            [[0,0],[1,0],[2,6],[1,4],[3,7],[-1,-5],[3,6]],
            [[0,0],[1,0],[0,1],[-5,5],[-2,1],[-7,5],[-6,4]],
            [[0,0],[1,0],[4,7],[3,7],[2,2],[5,10],[5,11]],
            [[0,0],[1,0],[1,2],[2,1],[4,6],[5,5],[5,7]],
            [[0,0],[1,0],[4,5],[-5,-8],[-3,-4],[-6,-9],[-5,-7]],
            [[0,0],[1,0],[3,5],[2,1],[5,6],[4,4],[5,8]],
            [[0,0],[1,0],[4,6],[4,5],[-3,-5],[-3,-6],[-4,-7]],
            [[0,0],[1,0],[0,1],[-2,1],[-4,4],[-6,4],[-8,6]],
            [[0,0],[1,0],[2,3],[2,4],[-1,1],[0,4],[-1,3]],
            [[0,0],[4,0],[0,2],[4,1],[-1,1],[-1,2],[3,-2]],
            [[0,0],[4,0],[0,1],[-7,2],[11,-2],[4,-1],[10,-2]],
            [[0,0],[4,0],[0,1],[-8,2],[5,-1],[-9,2],[11,-2]],
            [[0,0],[1,0],[4,8],[0,-2],[3,8],[4,7],[-1,-3]],
            [[0,0],[1,0],[4,10],[-1,-3],[3,5],[4,11],[2,2]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 3501-4000.
function canonical_dim3_facet_cache_8(id)
    // Convert the id
    id -:= 3500;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,4],[2,1],[6,6],[7,9],[8,10]],
            [[0,0],[1,0],[0,1],[6,-6],[1,-2],[4,-6],[3,-5]],
            [[0,0],[1,0],[1,2],[5,4],[5,2],[4,4],[4,1]],
            [[0,0],[1,0],[4,5],[5,7],[5,8],[3,6],[1,3]],
            [[0,0],[1,0],[1,4],[3,3],[-1,2],[3,4],[-1,3]],
            [[0,0],[3,0],[0,2],[-4,3],[4,-1],[-4,2],[-3,3]],
            [[0,0],[1,0],[0,6],[-1,6],[-1,7],[2,1],[2,2]],
            [[0,0],[1,0],[3,5],[4,8],[1,4],[3,8],[4,9]],
            [[0,0],[1,0],[2,4],[4,4],[-1,1],[0,3],[-1,2]],
            [[0,0],[2,0],[2,4],[0,-3],[3,3],[3,2],[-1,-4]],
            [[0,0],[1,0],[4,6],[1,3],[2,1],[3,6],[4,4]],
            [[0,0],[1,0],[4,6],[0,-1],[4,4],[1,3],[3,6]],
            [[0,0],[1,0],[0,1],[4,-5],[2,-5],[4,-4],[1,-4]],
            [[0,0],[1,0],[0,1],[1,-6],[2,-3],[3,-8],[3,-7]],
            [[0,0],[1,0],[0,1],[4,2],[5,4],[3,4],[1,3]],
            [[0,0],[1,0],[5,7],[-4,-7],[3,3],[3,5],[5,8]],
            [[0,0],[1,0],[3,7],[4,8],[4,6],[2,1],[3,3]],
            [[0,0],[1,0],[0,1],[1,6],[2,3],[3,8],[3,7]],
            [[0,0],[1,0],[5,8],[6,8],[6,9],[2,1],[4,4]],
            [[0,0],[1,0],[1,6],[2,7],[0,-4],[2,5],[-1,-7]],
            [[0,0],[2,0],[1,4],[1,-2],[0,4],[2,2],[-1,3]],
            [[0,0],[1,0],[1,2],[4,2],[5,3],[5,5],[3,4]],
            [[0,0],[1,0],[1,2],[4,3],[4,1],[6,2],[7,3]],
            [[0,0],[1,0],[0,1],[-8,3],[-5,3],[-4,1],[-7,2]],
            [[0,0],[1,0],[1,2],[-2,-5],[-1,-6],[-3,-8],[0,-4]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[1,5],[-1,2],[-1,3],[2,5]],
            [[0,0],[1,0],[2,3],[2,1],[5,5],[5,7],[7,9]],
            [[0,0],[1,0],[3,6],[0,-1],[1,4],[2,6],[3,3]],
            [[0,0],[1,0],[0,2],[-3,1],[-2,3],[-5,3],[-5,2]],
            [[0,0],[1,0],[0,1],[-5,1],[-2,2],[-7,3],[-5,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-6,2],[-2,2],[-8,4]],
            [[0,0],[1,0],[0,1],[1,4],[2,1],[3,6],[3,3]],
            [[0,0],[1,0],[0,1],[2,2],[1,4],[3,5],[3,8]],
            [[0,0],[2,0],[1,2],[0,3],[-2,1],[-3,3],[-3,2]],
            [[0,0],[1,0],[1,2],[5,7],[2,1],[4,7],[5,5]],
            [[0,0],[4,0],[0,1],[4,2],[5,2],[1,-2],[2,-2]],
            [[0,0],[1,0],[0,1],[1,-2],[5,-7],[5,-5],[4,-7]],
            [[0,0],[1,0],[3,4],[7,9],[7,8],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[0,1],[4,-6],[2,-5],[1,-4],[4,-4]],
            [[0,0],[3,0],[0,2],[2,1],[-4,3],[4,-2],[-5,3]],
            [[0,0],[1,0],[2,3],[1,4],[-2,1],[-1,4],[-2,2]],
            [[0,0],[1,0],[5,8],[0,-1],[4,7],[6,8],[4,4]],
            [[0,0],[1,0],[2,3],[5,3],[5,4],[-2,1],[6,4]],
            [[0,0],[1,0],[6,7],[2,3],[8,10],[7,10],[9,12]],
            [[0,0],[1,0],[2,4],[-1,3],[1,5],[2,5],[-2,1]],
            [[0,0],[1,0],[2,7],[-1,-8],[-1,-4],[-2,-10],[-2,-9]],
            [[0,0],[1,0],[4,7],[4,9],[0,1],[3,8],[2,6]],
            [[0,0],[1,0],[0,1],[4,-5],[2,-5],[3,-7],[5,-7]],
            [[0,0],[1,0],[5,8],[7,10],[5,6],[2,1],[7,11]],
            [[0,0],[3,0],[0,1],[8,-2],[8,-3],[4,-2],[10,-3]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-5,2],[-8,4],[-3,3],[-5,4]],
            [[0,0],[1,0],[2,8],[-1,-6],[0,-4],[3,10],[-1,-7]],
            [[0,0],[1,0],[2,3],[0,4],[-2,1],[2,4],[-2,2]],
            [[0,0],[1,0],[0,1],[-5,4],[-3,1],[-8,4],[-5,2]],
            [[0,0],[1,0],[0,3],[-3,2],[-1,4],[-4,4],[-4,3]],
            [[0,0],[1,0],[0,4],[-1,1],[-1,7],[-2,5],[-2,8]],
            [[0,0],[2,0],[1,4],[1,-2],[0,4],[-1,3],[2,3]],
            [[0,0],[1,0],[0,1],[-4,4],[-3,1],[-7,4],[-6,3]],
            [[0,0],[1,0],[3,7],[4,9],[4,6],[2,1],[3,3]],
            [[0,0],[1,0],[1,2],[0,6],[-1,2],[-2,6],[-2,5]],
            [[0,0],[1,0],[0,2],[1,-6],[2,-3],[3,-8],[3,-7]],
            [[0,0],[1,0],[2,5],[1,6],[2,7],[-1,1],[-1,2]],
            [[0,0],[1,0],[1,3],[3,4],[3,1],[5,4],[5,3]],
            [[0,0],[1,0],[0,1],[-8,4],[-5,2],[-5,4],[-7,3]],
            [[0,0],[1,0],[0,1],[4,4],[1,3],[4,7],[3,6]],
            [[0,0],[1,0],[2,5],[3,7],[4,8],[3,3],[4,5]],
            [[0,0],[1,0],[0,1],[-8,4],[-7,3],[-3,3],[-5,4]],
            [[0,0],[1,0],[1,3],[2,1],[3,6],[4,7],[4,4]],
            [[0,0],[1,0],[3,4],[6,6],[5,6],[3,1],[4,2]],
            [[0,0],[1,0],[0,1],[5,3],[6,4],[3,4],[1,3]],
            [[0,0],[1,0],[1,3],[3,6],[3,3],[5,8],[5,7]],
            [[0,0],[1,0],[1,2],[-3,2],[-3,1],[-1,4],[0,4]],
            [[0,0],[1,0],[1,4],[2,6],[3,4],[4,8],[4,7]],
            [[0,0],[2,0],[2,4],[3,3],[0,3],[3,4],[1,-2]],
            [[0,0],[1,0],[3,8],[0,-2],[3,5],[1,4],[2,7]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,2],[0,5],[-2,5],[-1,1],[-2,3]],
            [[0,0],[2,0],[0,1],[-5,2],[3,-1],[-10,5],[-11,5]],
            [[0,0],[1,0],[1,4],[2,6],[2,1],[3,7],[3,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-7,3],[-6,2],[-3,3]],
            [[0,0],[1,0],[0,1],[-2,2],[-10,4],[-11,5],[-12,5]],
            [[0,0],[1,0],[2,3],[5,5],[3,1],[4,5],[5,3]],
            [[0,0],[1,0],[2,3],[-3,-5],[-4,-8],[-4,-7],[-2,-6]],
            [[0,0],[1,0],[1,2],[4,2],[2,3],[6,5],[7,5]],
            [[0,0],[1,0],[0,2],[-2,2],[-2,5],[-4,5],[-4,7]],
            [[0,0],[1,0],[1,2],[3,5],[3,1],[4,6],[4,2]],
            [[0,0],[1,0],[0,1],[3,3],[4,1],[7,3],[6,2]],
            [[0,0],[1,0],[0,2],[-3,1],[-1,3],[-5,3],[-5,2]],
            [[0,0],[2,0],[0,1],[4,1],[1,2],[5,2],[5,4]],
            [[0,0],[1,0],[0,2],[-3,1],[-2,3],[-5,2],[-6,3]],
            [[0,0],[1,0],[0,1],[2,2],[3,5],[2,7],[3,9]],
            [[0,0],[1,0],[0,2],[-2,5],[-4,5],[-4,7],[-3,3]],
            [[0,0],[1,0],[3,5],[0,1],[1,3],[4,3],[5,5]],
            [[0,0],[1,0],[6,8],[-2,-4],[8,12],[5,8],[3,3]],
            [[0,0],[1,0],[0,2],[-4,3],[-4,1],[-3,4],[-2,4]],
            [[0,0],[1,0],[3,4],[5,5],[4,5],[4,1],[5,2]],
            [[0,0],[1,0],[4,7],[2,1],[2,5],[3,7],[4,4]],
            [[0,0],[1,0],[2,3],[3,4],[4,1],[5,5],[5,2]],
            [[0,0],[1,0],[0,1],[6,2],[5,3],[10,4],[11,5]],
            [[0,0],[1,0],[4,8],[-1,-3],[2,2],[3,8],[5,12]],
            [[0,0],[1,0],[1,5],[0,-1],[3,7],[3,4],[4,7]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[-1,3],[-2,1],[1,5],[2,5]],
            [[0,0],[1,0],[2,3],[1,4],[-2,1],[-1,4],[-2,3]],
            [[0,0],[1,0],[4,8],[-1,-3],[3,8],[4,10],[3,4]],
            [[0,0],[1,0],[1,2],[6,4],[4,4],[4,1],[6,3]],
            [[0,0],[1,0],[2,3],[-1,-5],[-3,-9],[3,7],[-4,-10]],
            [[0,0],[1,0],[7,8],[7,9],[6,8],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[4,7],[6,9],[2,1],[6,8],[4,4]],
            [[0,0],[1,0],[5,8],[7,10],[7,11],[2,1],[4,4]],
            [[0,0],[1,0],[1,4],[2,7],[2,1],[3,4],[3,8]],
            [[0,0],[1,0],[1,3],[3,3],[4,5],[3,7],[4,8]],
            [[0,0],[1,0],[2,4],[1,6],[-1,1],[2,7],[-1,2]],
            [[0,0],[1,0],[4,5],[3,3],[-6,-8],[-5,-8],[-7,-10]],
            [[0,0],[1,0],[0,1],[2,4],[3,1],[5,4],[5,3]],
            [[0,0],[1,0],[2,3],[0,-2],[-6,-11],[-6,-10],[-7,-12]],
            [[0,0],[1,0],[1,3],[0,-6],[-1,-4],[-2,-10],[-2,-9]],
            [[0,0],[1,0],[0,1],[5,3],[6,4],[1,3],[2,4]],
            [[0,0],[1,0],[0,1],[-5,3],[-10,7],[-8,5],[-4,4]],
            [[0,0],[1,0],[7,10],[-2,-4],[3,5],[8,12],[7,11]],
            [[0,0],[1,0],[0,3],[-1,4],[-2,1],[-4,4],[-4,3]],
            [[0,0],[1,0],[0,2],[-3,1],[-4,2],[-4,4],[-2,4]],
            [[0,0],[1,0],[0,4],[-1,1],[-1,7],[-2,5],[-2,9]],
            [[0,0],[1,0],[0,2],[4,1],[1,3],[4,4],[3,4]],
            [[0,0],[1,0],[0,1],[1,4],[3,1],[4,4],[4,2]],
            [[0,0],[2,0],[0,2],[-4,4],[-4,2],[-3,4],[-3,1]],
            [[0,0],[1,0],[0,1],[1,-4],[3,-7],[3,-3],[2,-7]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[1,4],[2,1],[4,7],[4,5]],
            [[0,0],[1,0],[0,1],[2,1],[3,4],[2,7],[3,8]],
            [[0,0],[1,0],[0,1],[-4,1],[-3,3],[-8,3],[-7,2]],
            [[0,0],[2,0],[0,1],[1,1],[1,-2],[5,-6],[6,-6]],
            [[0,0],[1,0],[1,2],[-3,4],[-2,1],[-3,2],[0,4]],
            [[0,0],[2,0],[0,1],[4,-2],[2,-4],[4,-5],[3,-5]],
            [[0,0],[1,0],[1,3],[2,5],[3,2],[4,7],[4,4]],
            [[0,0],[1,0],[0,1],[-3,1],[-3,3],[-6,3],[-9,6]],
            [[0,0],[1,0],[2,3],[-3,-5],[-4,-9],[-4,-7],[-3,-8]],
            [[0,0],[1,0],[0,1],[-3,2],[-4,4],[-11,8],[-13,10]],
            [[0,0],[3,0],[0,1],[5,-1],[1,-1],[8,-4],[7,-4]],
            [[0,0],[1,0],[1,4],[2,1],[2,7],[3,4],[3,9]],
            [[0,0],[1,0],[0,1],[-4,4],[-3,1],[-5,2],[-8,4]],
            [[0,0],[2,0],[0,3],[-1,3],[-1,4],[2,-4],[4,-4]],
            [[0,0],[1,0],[5,8],[7,11],[2,1],[4,4],[8,12]],
            [[0,0],[1,0],[4,5],[-1,-3],[-4,-7],[-7,-10],[-6,-8]],
            [[0,0],[3,0],[2,3],[2,-2],[3,2],[0,3],[-1,2]],
            [[0,0],[1,0],[0,1],[2,2],[2,6],[4,7],[4,10]],
            [[0,0],[2,0],[0,3],[-1,4],[-4,4],[-3,2],[-4,3]],
            [[0,0],[1,0],[2,3],[-2,1],[2,4],[-1,4],[-2,3]],
            [[0,0],[1,0],[1,4],[3,8],[3,4],[4,9],[4,7]],
            [[0,0],[1,0],[0,1],[3,-5],[4,-10],[1,-4],[5,-11]],
            [[0,0],[1,0],[0,1],[3,2],[2,5],[1,4],[5,5]],
            [[0,0],[1,0],[0,1],[-5,2],[-8,4],[-4,4],[-7,3]],
            [[0,0],[1,0],[1,4],[3,6],[3,2],[4,6],[4,4]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,6],[-2,-10],[2,7],[-1,-8],[-2,-8]],
            [[0,0],[1,0],[0,1],[3,5],[2,6],[5,11],[5,12]],
            [[0,0],[1,0],[0,1],[1,5],[3,2],[4,5],[4,4]],
            [[0,0],[1,0],[2,3],[4,1],[5,2],[5,5],[4,5]],
            [[0,0],[1,0],[0,5],[1,1],[-2,8],[-3,13],[-3,14]],
            [[0,0],[1,0],[1,2],[-2,3],[-1,5],[-4,7],[-3,7]],
            [[0,0],[1,0],[0,1],[-8,5],[-12,8],[-11,7],[-4,4]],
            [[0,0],[1,0],[3,5],[2,1],[4,4],[7,11],[8,12]],
            [[0,0],[2,0],[1,2],[4,4],[5,2],[2,3],[7,4]],
            [[0,0],[1,0],[0,1],[1,2],[5,2],[4,4],[8,4]],
            [[0,0],[1,0],[1,2],[4,1],[5,2],[5,5],[4,5]],
            [[0,0],[1,0],[0,1],[-4,4],[-3,1],[-8,4],[-7,3]],
            [[0,0],[1,0],[1,2],[0,5],[-2,2],[-3,5],[-3,4]],
            [[0,0],[1,0],[5,6],[2,1],[4,4],[3,6],[5,9]],
            [[0,0],[1,0],[0,1],[2,5],[1,4],[4,3],[5,5]],
            [[0,0],[1,0],[4,7],[2,1],[0,2],[4,4],[2,5]],
            [[0,0],[1,0],[0,1],[2,1],[4,7],[4,4],[1,4]],
            [[0,0],[1,0],[0,3],[-2,2],[-2,7],[-3,5],[-3,8]],
            [[0,0],[1,0],[1,2],[5,2],[4,4],[2,3],[8,4]],
            [[0,0],[1,0],[0,1],[-5,3],[-4,4],[-12,8],[-11,7]],
            [[0,0],[1,0],[1,2],[4,1],[2,3],[4,4],[7,4]],
            [[0,0],[1,0],[0,1],[-2,2],[-5,3],[-8,2],[-10,3]],
            [[0,0],[1,0],[0,1],[-4,1],[-3,3],[-7,2],[-9,3]],
            [[0,0],[1,0],[1,4],[2,7],[2,1],[3,3],[3,9]],
            [[0,0],[1,0],[0,1],[2,1],[3,4],[2,7],[3,9]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[1,4],[4,7],[3,2],[4,4]],
            [[0,0],[1,0],[1,3],[3,2],[3,7],[4,4],[4,8]],
            [[0,0],[2,0],[1,2],[-2,1],[-3,5],[-3,2],[-2,5]],
            [[0,0],[1,0],[1,2],[-2,1],[-4,4],[0,4],[-4,3]],
            [[0,0],[1,0],[0,1],[-4,4],[-6,4],[-10,7],[-13,10]],
            [[0,0],[1,0],[2,5],[0,2],[1,4],[4,3],[5,5]],
            [[0,0],[1,0],[1,3],[3,3],[3,6],[4,6],[0,-1],[2,5]],
            [[0,0],[1,0],[1,5],[2,6],[2,5],[0,-4],[-1,-6],[-1,-7]],
            [[0,0],[1,0],[2,3],[1,4],[-1,3],[2,4],[-2,1],[-2,2]],
            [[0,0],[1,0],[6,7],[6,8],[4,4],[5,7],[-2,-3],[-3,-5]],
            [[0,0],[1,0],[0,1],[4,1],[1,2],[6,2],[4,3],[6,3]],
            [[0,0],[1,0],[0,1],[2,4],[4,5],[3,5],[4,3],[3,1]],
            [[0,0],[1,0],[4,6],[0,-1],[4,4],[1,3],[3,6],[2,5]],
            [[0,0],[1,0],[4,5],[-1,-3],[-3,-4],[-6,-9],[-4,-7],[-5,-7]],
            [[0,0],[1,0],[3,4],[8,10],[-4,-6],[-5,-7],[7,9],[7,8]],
            [[0,0],[1,0],[0,1],[2,6],[2,2],[3,8],[4,7],[4,9]],
            [[0,0],[1,0],[0,1],[-5,2],[-8,4],[-7,3],[-3,3],[-5,4]],
            [[0,0],[1,0],[0,1],[3,1],[1,3],[4,3],[4,5],[3,5]],
            [[0,0],[1,0],[0,1],[1,4],[2,6],[3,4],[4,7],[4,8]],
            [[0,0],[1,0],[0,1],[5,2],[4,1],[2,3],[5,4],[4,4]],
            [[0,0],[1,0],[0,1],[3,1],[1,2],[6,3],[4,4],[7,4]],
            [[0,0],[1,0],[0,2],[-3,1],[-1,3],[-5,4],[-3,4],[-5,3]],
            [[0,0],[1,0],[2,4],[3,2],[4,7],[5,5],[5,8]],
            [[0,0],[2,0],[2,4],[1,3],[1,-1],[4,5],[4,3]],
            [[0,0],[1,0],[0,2],[4,2],[3,4],[-1,1],[5,4]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,3],[-2,3],[-1,5],[-3,5],[-3,7]],
            [[0,0],[1,0],[2,3],[5,4],[4,4],[4,1],[5,2]],
            [[0,0],[1,0],[0,1],[4,5],[4,4],[2,5],[1,4]],
            [[0,0],[1,0],[0,1],[-8,2],[-16,5],[-17,5]],
            [[0,0],[1,0],[0,3],[-2,1],[-3,6],[-3,2]],
            [[0,0],[1,0],[1,4],[3,3],[2,7],[3,9]],
            [[0,0],[2,0],[0,1],[-6,1],[-10,3],[-8,3]],
            [[0,0],[1,0],[1,2],[4,2],[7,6],[8,6]],
            [[0,0],[3,0],[0,2],[-4,3],[-2,3],[-4,1]],
            [[0,0],[1,0],[0,1],[-5,3],[-9,3],[-8,2]],
            [[0,0],[2,0],[3,4],[6,4],[5,2],[6,3]],
            [[0,0],[1,0],[0,4],[-2,3],[-3,5],[-4,8]],
            [[0,0],[1,0],[1,2],[4,4],[4,6],[8,10]],
            [[0,0],[1,0],[3,4],[5,5],[4,5],[5,2]],
            [[0,0],[2,0],[2,3],[4,4],[-2,-4],[0,-3]],
            [[0,0],[1,0],[1,2],[4,4],[2,3],[7,4]],
            [[0,0],[2,0],[1,4],[0,4],[-1,3],[3,2]],
            [[0,0],[1,0],[2,6],[-2,-10],[2,7],[-1,-8]],
            [[0,0],[1,0],[3,5],[1,4],[3,8],[2,7]],
            [[0,0],[1,0],[4,7],[0,-1],[3,7],[4,5]],
            [[0,0],[1,0],[0,6],[-1,5],[-1,6],[2,2]],
            [[0,0],[1,0],[5,6],[-3,-5],[5,7],[4,4]],
            [[0,0],[2,0],[0,3],[-1,2],[3,-2],[2,-3]],
            [[0,0],[1,0],[4,6],[3,6],[4,5],[2,5]],
            [[0,0],[1,0],[1,4],[2,2],[2,6]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,8],[3,4],[3,10]],
            [[0,0],[1,0],[0,4],[3,4],[-2,2]],
            [[0,0],[1,0],[1,2],[9,6],[10,6]],
            [[0,0],[2,0],[0,1],[8,2],[12,4]],
            [[0,0],[1,0],[1,2],[-2,12],[-2,14]],
            [[0,0],[1,0],[3,8],[2,2],[6,14]],
            [[0,0],[1,0],[2,4],[-1,2],[2,8]],
            [[0,0],[1,0],[3,8],[3,4],[5,12]],
            [[0,0],[1,0],[5,8],[4,4],[8,12]],
            [[0,0],[1,0],[3,10],[3,6],[2,2]],
            [[0,0],[2,0],[1,2],[3,2],[-2,-6]],
            [[0,0],[1,0],[5,12],[2,2],[6,14]],
            [[0,0],[1,0],[1,6],[2,6],[2,2]],
            [[0,0],[1,0],[1,4],[3,6],[3,4]],
            [[0,0],[1,0],[1,6],[2,4],[2,8]],
            [[0,0],[1,0],[4,5],[2,5]],
            [[0,0],[1,0],[0,5],[-2,5]],
            [[0,0],[1,0],[15,18],[17,20]],
            [[0,0],[1,0],[13,18],[14,20]],
            [[0,0],[1,0],[6,16],[7,18]],
            [[0,0],[1,0],[3,10],[3,4]],
            [[0,0],[1,0],[0,4],[3,10]],
            [[0,0],[2,0],[6,8],[6,9]],
            [[0,0],[1,0],[0,2],[-6,8]],
            [[0,0],[1,0],[0,2],[4,6]]],
        10: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,17]],
            [[0,0],[1,0],[3,17]],
            [[0,0],[1,0],[3,19]],
            [[0,0],[1,0],[4,19]],
            [[0,0],[1,0],[4,18]],
            [[0,0],[1,0],[16,18]],
            [[0,0],[1,0],[7,22]],
            [[0,0],[1,0],[3,22]],
            [[0,0],[1,0],[10,21]],
            [[0,0],[1,0],[4,21]],
            [[0,0],[1,0],[19,24]],
            [[0,0],[1,0],[7,24]],
            [[0,0],[1,0],[3,7]],
            [[0,0],[1,0],[2,7]],
            [[0,0],[1,0],[2,11]],
            [[0,0],[1,0],[3,11]],
            [[0,0],[1,0],[3,10]],
            [[0,0],[1,0],[9,10]],
            [[0,0],[1,0],[4,13]],
            [[0,0],[1,0],[3,13]],
            [[0,0],[1,0],[9,14]],
            [[0,0],[1,0],[3,14]],
            [[0,0],[1,0],[2,8],[3,10]],
            [[0,0],[1,0],[5,6],[-5,-8]],
            [[0,0],[1,0],[1,2],[7,4]]],
        11: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[9,10],[3,2]],
            [[0,0],[1,0],[2,4],[-1,4]],
            [[0,0],[1,0],[0,4],[-3,4]],
            [[0,0],[6,0],[0,1],[2,-2]],
            [[0,0],[1,0],[1,6],[3,8]],
            [[0,0],[1,0],[7,8],[-7,-10]],
            [[0,0],[3,0],[1,2],[5,-4]],
            [[0,0],[2,0],[0,3],[-4,1]],
            [[0,0],[1,0],[2,10],[3,12]],
            [[0,0],[2,0],[3,4],[5,2]],
            [[0,0],[6,0],[0,1],[4,-2]],
            [[0,0],[1,0],[7,8],[11,12]],
            [[0,0],[1,0],[3,8],[3,4]],
            [[0,0],[1,0],[5,7],[3,7]],
            [[0,0],[1,0],[0,7],[-2,7]],
            [[0,0],[1,0],[5,12],[3,4]],
            [[0,0],[1,0],[2,12],[3,16]],
            [[0,0],[1,0],[8,10],[13,16]],
            [[0,0],[1,0],[7,10],[3,2]],
            [[0,0],[8,0],[0,1],[2,-2]],
            [[0,0],[1,0],[5,16],[3,6]],
            [[0,0],[8,0],[0,1],[6,-2]],
            [[0,0],[1,0],[13,16],[3,2]],
            [[0,0],[1,0],[9,14],[5,6]],
            [[0,0],[1,0],[4,14],[5,16]]],
        12: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[0,1],[9,4]],
            [[0,0],[1,0],[1,3],[-2,12]],
            [[0,0],[2,0],[3,4],[-1,4]],
            [[0,0],[2,0],[1,4],[-3,4]],
            [[0,0],[1,0],[1,6],[4,9]],
            [[0,0],[1,0],[3,15],[4,18]],
            [[0,0],[2,0],[5,6],[5,2]],
            [[0,0],[1,0],[4,12],[7,20]],
            [[0,0],[1,0],[2,5],[7,10]],
            [[0,0],[1,0],[11,15],[14,20]],
            [[0,0],[1,0],[9,14],[3,2]],
            [[0,0],[1,0],[4,14],[7,24]],
            [[0,0],[1,0],[2,5],[3,5]],
            [[0,0],[1,0],[1,5],[2,5]],
            [[0,0],[1,0],[2,6],[3,8]],
            [[0,0],[1,0],[5,6],[3,2]],
            [[0,0],[4,0],[0,1],[2,-2]],
            [[0,0],[1,0],[7,8],[3,2]],
            [[0,0],[6,0],[0,1],[4,-1],[2,-1]],
            [[0,0],[1,0],[1,6],[2,6],[2,4]],
            [[0,0],[3,0],[1,2],[3,-2],[2,2]],
            [[0,0],[1,0],[1,2],[4,4],[4,2]],
            [[0,0],[1,0],[1,2],[-2,4],[-1,4]],
            [[0,0],[1,0],[3,4],[3,2],[5,6]],
            [[0,0],[1,0],[6,8],[-4,-6],[7,10]]],
        13: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,4],[-1,6],[2,2]],
            [[0,0],[2,0],[0,1],[-10,3],[-8,2]],
            [[0,0],[2,0],[2,3],[4,3],[4,1]],
            [[0,0],[1,0],[1,4],[3,2],[4,4]],
            [[0,0],[1,0],[3,4],[4,2],[6,4]],
            [[0,0],[2,0],[1,2],[-3,2],[-1,4]],
            [[0,0],[1,0],[1,6],[0,-2],[3,8]],
            [[0,0],[1,0],[5,8],[7,10],[5,6]],
            [[0,0],[1,0],[2,10],[3,12],[3,14]],
            [[0,0],[1,0],[3,4],[2,6],[3,8]],
            [[0,0],[1,0],[5,6],[3,2],[9,10]],
            [[0,0],[2,0],[1,3],[2,4],[5,1]],
            [[0,0],[2,0],[1,2],[-1,-6],[-2,-6]],
            [[0,0],[1,0],[1,6],[3,10],[0,-4]],
            [[0,0],[1,0],[1,2],[7,4],[9,6]],
            [[0,0],[1,0],[10,12],[6,6],[-3,-4]],
            [[0,0],[2,0],[2,3],[6,3],[6,2]],
            [[0,0],[2,0],[2,4],[4,5],[4,1]],
            [[0,0],[1,0],[5,8],[7,10],[3,2]],
            [[0,0],[2,0],[1,4],[4,2],[5,4]],
            [[0,0],[1,0],[3,4],[5,2],[8,4]],
            [[0,0],[2,0],[3,4],[5,2],[7,4]],
            [[0,0],[1,0],[1,4],[4,2],[6,4]],
            [[0,0],[1,0],[0,4],[2,10],[3,12]],
            [[0,0],[2,0],[3,4],[5,6],[5,2]]],
        14: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[3,8],[0,4],[3,10]],
            [[0,0],[2,0],[0,2],[-9,6],[-8,6]],
            [[0,0],[4,0],[0,1],[8,1],[8,3]],
            [[0,0],[1,0],[0,4],[-2,4],[-4,12]],
            [[0,0],[1,0],[5,8],[3,2],[9,14]],
            [[0,0],[2,0],[2,4],[4,7],[4,1]],
            [[0,0],[2,0],[2,4],[0,4],[-1,3],[3,3]],
            [[0,0],[1,0],[2,6],[1,7],[2,8],[-1,1]],
            [[0,0],[1,0],[1,4],[4,4],[-1,2],[-1,3]],
            [[0,0],[1,0],[1,7],[0,-1],[3,7],[3,6]],
            [[0,0],[1,0],[1,2],[5,1],[5,4],[4,4]],
            [[0,0],[2,0],[0,4],[-1,4],[2,3],[4,1]],
            [[0,0],[1,0],[0,1],[4,5],[4,4],[1,5]],
            [[0,0],[1,0],[4,6],[3,6],[4,4],[1,4]],
            [[0,0],[1,0],[2,3],[5,4],[4,4],[5,1]],
            [[0,0],[1,0],[3,10],[4,10],[2,3],[4,13]],
            [[0,0],[2,0],[1,2],[-5,1],[-1,3],[0,3]],
            [[0,0],[1,0],[0,1],[8,3],[7,4],[10,4]],
            [[0,0],[1,0],[0,7],[-1,7],[-1,9],[2,1]],
            [[0,0],[1,0],[2,4],[0,2],[1,7],[3,9]],
            [[0,0],[1,0],[2,4],[4,4],[0,3],[-2,1]],
            [[0,0],[1,0],[7,8],[6,8],[-4,-6],[-5,-7]],
            [[0,0],[1,0],[0,1],[4,-7],[3,-7],[4,-4]],
            [[0,0],[1,0],[7,8],[6,8],[5,7],[-4,-6]],
            [[0,0],[1,0],[2,5],[0,4],[2,8],[-1,1]]],
        15: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[4,5],[3,6],[6,9]],
            [[0,0],[3,0],[0,2],[-4,3],[-3,3],[-4,1]],
            [[0,0],[1,0],[1,2],[4,1],[4,5],[3,5]],
            [[0,0],[1,0],[3,8],[4,10],[4,7],[3,4]],
            [[0,0],[2,0],[0,1],[4,4],[4,3],[1,4]],
            [[0,0],[1,0],[2,4],[1,6],[-1,2],[2,7]],
            [[0,0],[1,0],[4,6],[3,5],[4,3],[6,6]],
            [[0,0],[1,0],[3,4],[1,3],[4,2],[6,4]],
            [[0,0],[1,0],[5,8],[6,8],[3,3],[9,14]],
            [[0,0],[1,0],[3,8],[1,4],[-1,-5],[4,9]],
            [[0,0],[1,0],[0,1],[5,3],[6,4],[2,4]],
            [[0,0],[1,0],[1,2],[-2,3],[-3,5],[0,5]],
            [[0,0],[1,0],[3,5],[2,6],[4,8],[4,11]],
            [[0,0],[1,0],[3,5],[0,1],[2,7],[3,9]],
            [[0,0],[1,0],[1,3],[4,3],[-1,1],[5,5]],
            [[0,0],[2,0],[1,2],[-3,3],[0,3],[-3,1]],
            [[0,0],[2,0],[0,1],[5,3],[5,2],[1,3]],
            [[0,0],[2,0],[0,1],[4,-2],[4,-4],[2,-4]],
            [[0,0],[2,0],[0,1],[8,2],[8,3],[10,3]],
            [[0,0],[1,0],[2,3],[5,7],[7,8],[9,11]],
            [[0,0],[1,0],[1,2],[4,3],[4,1],[8,3]],
            [[0,0],[1,0],[0,1],[3,3],[4,7],[6,9]],
            [[0,0],[3,0],[0,1],[1,2],[2,-4],[3,-3]],
            [[0,0],[1,0],[2,4],[2,5],[-2,1],[-2,3]],
            [[0,0],[2,0],[3,4],[3,5],[-1,2],[-1,3]]],
        16: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,7],[5,8],[3,2],[5,5]],
            [[0,0],[1,0],[1,4],[-1,-7],[3,10],[4,12]],
            [[0,0],[1,0],[0,4],[-2,1],[-3,4],[-4,3]],
            [[0,0],[1,0],[2,4],[-1,4],[-2,1],[-2,3]],
            [[0,0],[1,0],[1,4],[-1,-5],[2,7],[4,9]],
            [[0,0],[3,0],[0,2],[-3,3],[-2,3],[-5,1]],
            [[0,0],[1,0],[3,5],[0,1],[4,8],[4,11]],
            [[0,0],[1,0],[2,6],[1,7],[2,9],[-1,1]],
            [[0,0],[1,0],[2,3],[0,4],[-3,1],[2,4]],
            [[0,0],[4,0],[1,2],[3,-2],[-1,1],[4,2]],
            [[0,0],[1,0],[0,4],[2,2],[-2,2],[-3,4]],
            [[0,0],[1,0],[2,5],[2,1],[5,8],[5,7]],
            [[0,0],[1,0],[1,3],[3,4],[3,1],[6,4]],
            [[0,0],[2,0],[1,3],[2,4],[4,4],[4,1]],
            [[0,0],[2,0],[1,2],[2,2],[-2,-6],[-1,-6]],
            [[0,0],[1,0],[3,8],[2,8],[0,4],[3,9]],
            [[0,0],[1,0],[0,1],[4,4],[3,5],[8,10]],
            [[0,0],[1,0],[0,1],[3,3],[8,3],[7,2]],
            [[0,0],[2,0],[0,1],[-14,4],[-16,5],[-17,5]],
            [[0,0],[1,0],[0,4],[-3,7],[-2,2],[-3,5]],
            [[0,0],[3,0],[0,2],[4,4],[-1,1],[5,4]],
            [[0,0],[1,0],[6,8],[3,2],[9,11],[10,13]],
            [[0,0],[3,0],[0,1],[-7,1],[-13,3],[-12,3]],
            [[0,0],[2,0],[0,2],[5,1],[2,4],[1,4]],
            [[0,0],[1,0],[0,1],[2,2],[8,4],[11,4]]],
        17: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,2],[-4,1],[-4,4],[-2,4]],
            [[0,0],[1,0],[2,6],[-2,-10],[-1,-8],[-2,-7]],
            [[0,0],[1,0],[4,6],[4,4],[7,10],[10,13]],
            [[0,0],[1,0],[2,4],[-2,-5],[-5,-15],[-5,-14]],
            [[0,0],[1,0],[0,1],[-12,4],[-12,3],[-15,4]],
            [[0,0],[3,0],[0,1],[-15,3],[-18,4],[-19,4]],
            [[0,0],[2,0],[0,2],[4,2],[5,4],[1,4]],
            [[0,0],[2,0],[2,3],[5,6],[4,1],[5,2]],
            [[0,0],[1,0],[0,1],[-8,2],[-10,3],[-4,3]],
            [[0,0],[2,0],[0,1],[1,3],[6,2],[7,3]],
            [[0,0],[1,0],[3,4],[2,4],[3,3],[1,3]],
            [[0,0],[1,0],[2,4],[1,3],[0,-3],[-1,-4]],
            [[0,0],[1,0],[1,3],[0,3],[-1,2],[2,2]],
            [[0,0],[1,0],[1,2],[3,3],[2,3],[3,1]],
            [[0,0],[1,0],[1,4],[2,4],[0,-1],[2,2]],
            [[0,0],[1,0],[0,1],[-5,1],[-6,2],[-4,2]],
            [[0,0],[1,0],[0,1],[4,2],[3,3],[5,3]],
            [[0,0],[1,0],[2,5],[1,4],[0,-4],[-1,-5]],
            [[0,0],[1,0],[1,4],[0,4],[2,3],[-1,3]],
            [[0,0],[1,0],[3,5],[0,-1],[2,5],[3,3]],
            [[0,0],[1,0],[1,3],[3,3],[-1,1],[-1,2]],
            [[0,0],[1,0],[3,5],[4,6],[2,1],[4,4]],
            [[0,0],[1,0],[1,2],[4,3],[3,3],[4,1]],
            [[0,0],[1,0],[0,1],[3,4],[3,3],[1,4]],
            [[0,0],[6,0],[0,1],[4,-1],[-1,1],[2,-1]]],
        18: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,6],[2,6],[0,-1],[2,4]],
            [[0,0],[1,0],[0,1],[-6,1],[-7,2],[-5,2]],
            [[0,0],[1,0],[1,2],[4,2],[4,4],[2,3]],
            [[0,0],[1,0],[0,4],[-1,3],[-1,4],[2,2]],
            [[0,0],[1,0],[5,7],[6,8],[4,4],[2,1]],
            [[0,0],[1,0],[0,1],[4,-4],[2,-4],[1,-3]],
            [[0,0],[6,0],[0,1],[5,-1],[-1,1],[3,-1]],
            [[0,0],[1,0],[0,4],[-1,2],[-2,6],[-2,5]],
            [[0,0],[1,0],[6,7],[-4,-6],[-5,-7],[5,5]],
            [[0,0],[1,0],[2,5],[2,4],[1,5],[-1,-7]],
            [[0,0],[1,0],[4,5],[3,3],[3,5],[-4,-7]],
            [[0,0],[2,0],[1,4],[-1,3],[-1,2],[2,-1]],
            [[0,0],[1,0],[5,6],[5,5],[-3,-4],[-4,-6]],
            [[0,0],[1,0],[2,6],[2,5],[-1,-7],[1,5]],
            [[0,0],[3,0],[0,1],[10,-3],[-5,2],[-3,1]],
            [[0,0],[1,0],[4,7],[2,2],[3,7],[-1,-3]],
            [[0,0],[1,0],[1,5],[2,5],[0,-4],[-1,-6]],
            [[0,0],[1,0],[0,3],[-1,4],[-2,1],[-3,2]],
            [[0,0],[2,0],[0,3],[2,2],[-1,3],[1,-2]],
            [[0,0],[1,0],[0,1],[-6,1],[-7,2],[-4,2]],
            [[0,0],[1,0],[0,1],[-6,3],[-5,2],[-3,3]],
            [[0,0],[1,0],[2,5],[3,6],[2,1],[3,3]],
            [[0,0],[1,0],[1,6],[2,6],[0,-1],[2,3]],
            [[0,0],[1,0],[1,3],[3,4],[2,4],[3,1]],
            [[0,0],[1,0],[1,4],[2,4],[3,9],[-1,-7]]],
        19: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[3,0],[1,2],[0,1],[5,3],[2,-1]],
            [[0,0],[4,0],[0,1],[-4,1],[-7,2],[9,-2]],
            [[0,0],[4,0],[0,1],[9,-2],[-6,2],[-4,1]],
            [[0,0],[4,0],[0,1],[9,-2],[-6,2],[-7,2]],
            [[0,0],[1,0],[4,8],[3,5],[3,8],[-1,-3]],
            [[0,0],[1,0],[1,4],[-1,-7],[2,5],[3,11]],
            [[0,0],[2,0],[1,2],[3,-5],[-1,3],[-1,2]],
            [[0,0],[1,0],[0,5],[-1,2],[-2,7],[-2,6]],
            [[0,0],[1,0],[3,5],[1,4],[3,6],[-1,1]],
            [[0,0],[1,0],[2,3],[-1,2],[0,5],[-1,3]],
            [[0,0],[1,0],[3,5],[1,4],[-1,1],[-1,2]],
            [[0,0],[1,0],[0,1],[4,5],[2,5],[1,4]],
            [[0,0],[1,0],[3,4],[4,4],[1,3],[4,2]],
            [[0,0],[1,0],[1,2],[5,3],[4,3],[5,1]],
            [[0,0],[1,0],[6,8],[5,8],[3,3],[7,10]],
            [[0,0],[1,0],[2,3],[5,5],[4,2],[5,3]],
            [[0,0],[1,0],[4,5],[4,4],[1,3],[2,5]],
            [[0,0],[4,0],[0,1],[5,-1],[3,-2],[1,-2]],
            [[0,0],[1,0],[3,8],[4,8],[3,5],[4,10]],
            [[0,0],[1,0],[3,5],[5,6],[4,4],[5,8]],
            [[0,0],[1,0],[3,4],[-5,-7],[3,3],[-5,-8]],
            [[0,0],[1,0],[0,5],[-1,1],[-2,5],[-2,4]],
            [[0,0],[2,0],[2,3],[0,3],[-1,2],[3,2]],
            [[0,0],[1,0],[2,4],[1,5],[2,6],[-1,1]],
            [[0,0],[1,0],[2,5],[3,6],[-2,-6],[-1,-5]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

// Returns the facets with ids in the range 4001-4248.
function canonical_dim3_facet_cache_9(id)
    // Convert the id
    id -:= 4000;
    // Compute the block and number within the block
    block:=Floor((id - 1) / 25);
    num:=id - block * 25;
    // Create the block
    block:=case< block |
        0: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[5,1],[6,3],[7,3]],
            [[0,0],[1,0],[5,6],[-3,-5],[5,7],[4,6]],
            [[0,0],[1,0],[1,2],[3,5],[3,2],[5,5]],
            [[0,0],[1,0],[1,2],[4,3],[4,1],[6,3]],
            [[0,0],[2,0],[1,2],[-1,3],[0,3],[-3,1]],
            [[0,0],[1,0],[4,6],[5,6],[-2,-4],[-3,-5]],
            [[0,0],[2,0],[0,3],[1,-1],[-2,3],[2,2]],
            [[0,0],[1,0],[0,1],[-5,1],[-7,3],[-6,3]],
            [[0,0],[1,0],[3,8],[1,3],[0,-3],[-2,-8]],
            [[0,0],[1,0],[0,3],[-1,1],[-3,6],[-3,5]],
            [[0,0],[1,0],[0,1],[3,3],[2,4],[5,7]],
            [[0,0],[1,0],[1,2],[3,1],[5,4],[6,4]],
            [[0,0],[1,0],[1,6],[2,6],[0,-2],[2,3]],
            [[0,0],[1,0],[0,1],[6,-6],[4,-6],[3,-5]],
            [[0,0],[1,0],[3,7],[2,7],[3,6],[-1,-5]],
            [[0,0],[1,0],[0,6],[-1,4],[-2,9],[-2,10]],
            [[0,0],[1,0],[4,7],[3,7],[3,3],[4,5]],
            [[0,0],[1,0],[6,7],[3,5],[0,-1],[1,3]],
            [[0,0],[2,0],[1,2],[-1,-3],[3,3],[0,-4]],
            [[0,0],[1,0],[4,7],[5,8],[2,1],[5,6]],
            [[0,0],[1,0],[3,4],[6,6],[4,5],[4,2]],
            [[0,0],[1,0],[2,7],[2,5],[-1,-7],[1,6]],
            [[0,0],[1,0],[2,3],[5,4],[4,1],[5,2]],
            [[0,0],[1,0],[0,6],[-1,7],[2,1],[2,2]],
            [[0,0],[1,0],[0,4],[2,4],[-1,3],[-2,1]]],
        1: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,6],[3,5],[5,6],[-4,-7]],
            [[0,0],[4,0],[0,1],[1,-1],[4,2],[3,-2]],
            [[0,0],[1,0],[0,2],[-5,1],[-3,3],[-2,3]],
            [[0,0],[1,0],[1,2],[4,2],[4,5],[3,5]],
            [[0,0],[1,0],[0,2],[-4,3],[-4,1],[-2,3]],
            [[0,0],[1,0],[0,3],[3,3],[-2,1],[-2,2]],
            [[0,0],[1,0],[0,5],[-1,3],[-2,7],[-2,9]],
            [[0,0],[1,0],[0,1],[-5,2],[-10,5],[-11,5]],
            [[0,0],[1,0],[1,2],[4,1],[3,3],[6,3]],
            [[0,0],[1,0],[2,3],[4,4],[5,7],[8,10]],
            [[0,0],[1,0],[1,4],[3,6],[2,1],[3,3]],
            [[0,0],[1,0],[1,3],[4,6],[0,-1],[5,6]],
            [[0,0],[1,0],[0,1],[3,6],[3,3],[1,4]],
            [[0,0],[1,0],[0,4],[-2,6],[1,1],[-3,10]],
            [[0,0],[3,0],[0,2],[1,-2],[2,1],[3,-3]],
            [[0,0],[1,0],[0,1],[-6,2],[-9,4],[-10,4]],
            [[0,0],[1,0],[0,1],[-6,2],[-4,3],[-7,3]],
            [[0,0],[1,0],[4,9],[4,7],[2,6],[1,4]],
            [[0,0],[1,0],[2,7],[-1,-8],[-1,-4],[-2,-10]],
            [[0,0],[1,0],[4,9],[-2,-7],[5,11],[5,10]],
            [[0,0],[1,0],[3,7],[-3,-9],[-2,-5],[-5,-13]],
            [[0,0],[1,0],[3,7],[4,8],[3,3],[4,5]],
            [[0,0],[1,0],[1,6],[2,5],[2,7],[-1,2]],
            [[0,0],[1,0],[1,4],[3,3],[-1,2],[3,5]],
            [[0,0],[2,0],[1,2],[-2,3],[-1,3],[-4,1]]],
        2: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[6,4],[3,4],[1,3]],
            [[0,0],[1,0],[0,4],[-2,1],[-3,4],[-3,3]],
            [[0,0],[1,0],[2,7],[-1,-8],[0,-6],[-1,-11]],
            [[0,0],[1,0],[3,4],[6,6],[4,2],[5,6]],
            [[0,0],[1,0],[4,7],[3,3],[6,8],[7,10]],
            [[0,0],[1,0],[4,6],[3,2],[3,5],[6,6]],
            [[0,0],[1,0],[3,8],[4,8],[2,2],[5,12]],
            [[0,0],[1,0],[7,10],[8,11],[6,7],[2,1]],
            [[0,0],[1,0],[6,7],[-3,-5],[-6,-8],[-5,-6]],
            [[0,0],[1,0],[4,5],[4,4],[-6,-8],[-7,-10]],
            [[0,0],[1,0],[1,2],[-2,-7],[-2,-5],[0,-5]],
            [[0,0],[1,0],[2,3],[-2,1],[-2,3],[-3,2]],
            [[0,0],[2,0],[0,1],[-10,2],[-12,3],[-13,3]],
            [[0,0],[1,0],[2,6],[3,8],[-1,-5],[4,9]],
            [[0,0],[1,0],[3,5],[0,2],[3,3],[1,5]],
            [[0,0],[2,0],[1,2],[5,3],[3,3],[5,1]],
            [[0,0],[1,0],[0,3],[-3,1],[-4,3],[-4,2]],
            [[0,0],[1,0],[2,5],[-1,-3],[-2,-9],[-3,-11]],
            [[0,0],[1,0],[2,4],[-2,-5],[-1,-6],[-3,-8]],
            [[0,0],[1,0],[0,2],[-3,2],[-2,4],[-5,4]],
            [[0,0],[1,0],[0,1],[4,1],[6,4],[7,4]],
            [[0,0],[1,0],[1,2],[4,1],[2,3],[6,3]],
            [[0,0],[1,0],[0,1],[-3,3],[-7,3],[-6,2]],
            [[0,0],[1,0],[3,4],[7,9],[-6,-9],[-2,-4]],
            [[0,0],[1,0],[0,2],[3,2],[4,4],[1,4]]],
        3: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[2,3],[3,4],[3,1],[6,4]],
            [[0,0],[1,0],[0,1],[4,1],[4,4],[3,4]],
            [[0,0],[1,0],[4,5],[4,4],[-3,-5],[-3,-4],[-4,-6]],
            [[0,0],[1,0],[1,4],[0,4],[2,3],[-1,2],[-1,3]],
            [[0,0],[1,0],[1,2],[2,1],[3,5],[4,4],[4,6]],
            [[0,0],[1,0],[4,5],[3,3],[-2,-4],[4,6],[-3,-5]],
            [[0,0],[1,0],[2,6],[2,5],[1,5],[0,-4],[-1,-6]],
            [[0,0],[2,0],[1,3],[0,-1],[1,-2],[3,3],[2,4]],
            [[0,0],[1,0],[0,2],[-4,2],[-3,3],[-4,1],[-2,3]],
            [[0,0],[1,0],[1,5],[0,4],[2,4],[2,5],[-1,2]],
            [[0,0],[1,0],[3,4],[-3,-5],[4,4],[7,9],[6,7]],
            [[0,0],[1,0],[5,6],[2,3],[4,4],[-3,-5],[5,7]],
            [[0,0],[1,0],[0,1],[3,6],[2,6],[3,5],[1,5]],
            [[0,0],[1,0],[1,5],[2,7],[2,3],[3,8],[3,7]],
            [[0,0],[1,0],[5,6],[0,-1],[4,6],[5,5],[3,5]],
            [[0,0],[1,0],[2,3],[5,4],[5,5],[4,2],[3,4]],
            [[0,0],[2,0],[2,3],[3,2],[0,-3],[-1,-3],[-1,-4]],
            [[0,0],[1,0],[2,3],[0,-2],[-3,-5],[-4,-8],[-4,-7]],
            [[0,0],[1,0],[0,1],[2,-5],[3,-5],[1,-4],[3,-3]],
            [[0,0],[1,0],[0,1],[-7,3],[-6,2],[-5,3],[-4,1]],
            [[0,0],[1,0],[1,4],[2,5],[2,1],[3,5],[3,3]],
            [[0,0],[1,0],[2,4],[1,4],[3,9],[-1,-6],[-1,-7]],
            [[0,0],[1,0],[0,4],[2,3],[-1,3],[1,4],[-2,1]],
            [[0,0],[1,0],[4,6],[0,-1],[2,5],[4,5],[1,4]],
            [[0,0],[1,0],[3,7],[-1,-3],[-2,-7],[3,5],[4,9]]],
        4: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[4,0],[0,1],[9,-2],[-6,2],[-4,1],[-7,2]],
            [[0,0],[1,0],[2,3],[1,4],[3,7],[2,7],[-1,-5]],
            [[0,0],[1,0],[5,6],[4,4],[-4,-5],[-3,-5],[-5,-7]],
            [[0,0],[1,0],[0,4],[1,5],[2,3],[-1,2],[2,5]],
            [[0,0],[1,0],[0,2],[-4,2],[-4,1],[-3,3],[-1,3]],
            [[0,0],[1,0],[0,3],[-1,4],[-2,1],[-3,4],[-3,3]],
            [[0,0],[1,0],[0,5],[-1,4],[-1,5],[2,2],[2,3]],
            [[0,0],[1,0],[5,6],[-1,-2],[4,6],[3,5],[5,5]],
            [[0,0],[1,0],[1,2],[4,5],[4,3],[3,5],[3,1]],
            [[0,0],[2,0],[1,3],[-1,2],[-1,4],[2,-1],[0,5]],
            [[0,0],[1,0],[2,3],[5,5],[3,4],[4,2],[5,3]],
            [[0,0],[1,0],[0,1],[3,3],[2,5],[1,4],[4,5]],
            [[0,0],[1,0],[2,5],[4,8],[1,3],[4,7],[-1,-4]],
            [[0,0],[1,0],[1,2],[4,2],[4,4],[2,3],[6,4]],
            [[0,0],[1,0],[5,7],[4,6],[-2,-4],[5,6],[-3,-5]],
            [[0,0],[1,0],[5,8],[2,4],[5,7],[-2,-5],[6,9]],
            [[0,0],[1,0],[1,4],[2,1],[2,7],[3,5],[3,7]],
            [[0,0],[1,0],[4,6],[0,1],[4,4],[1,3],[3,6]],
            [[0,0],[1,0],[0,1],[5,4],[5,3],[3,4],[1,3]],
            [[0,0],[1,0],[0,3],[-3,3],[-2,4],[-1,4],[-3,1]],
            [[0,0],[1,0],[4,5],[6,6],[5,6],[3,1],[4,2]],
            [[0,0],[1,0],[3,4],[1,3],[4,2],[5,4],[5,3]],
            [[0,0],[1,0],[0,2],[-1,1],[-3,7],[-4,6],[-4,8]],
            [[0,0],[1,0],[4,6],[4,4],[1,3],[3,6],[2,5]],
            [[0,0],[1,0],[2,3],[0,4],[-1,3],[-2,1],[2,4]]],
        5: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[1,3],[2,2],[4,7],[3,8],[4,9]],
            [[0,0],[1,0],[2,4],[3,3],[-1,1],[-1,2],[0,4]],
            [[0,0],[1,0],[0,1],[4,-6],[3,-6],[2,-5],[4,-4]],
            [[0,0],[1,0],[6,7],[4,4],[-4,-6],[6,8],[-5,-7]],
            [[0,0],[1,0],[0,4],[-1,2],[-2,6],[-1,7],[-2,9]],
            [[0,0],[1,0],[0,2],[-3,3],[-2,5],[-2,1],[-3,6]],
            [[0,0],[1,0],[2,4],[0,4],[2,6],[-1,1],[-1,2]],
            [[0,0],[1,0],[1,3],[2,5],[3,2],[4,5],[4,4]],
            [[0,0],[1,0],[0,1],[1,5],[2,2],[3,7],[3,5]],
            [[0,0],[1,0],[1,4],[2,6],[2,1],[3,7],[3,4]],
            [[0,0],[1,0],[3,5],[0,1],[2,4],[3,2],[5,5]],
            [[0,0],[1,0],[1,3],[2,4],[3,1],[4,4],[4,2]],
            [[0,0],[1,0],[3,4],[5,5],[4,5],[3,1],[5,3]],
            [[0,0],[1,0],[0,1],[4,4],[4,2],[1,3],[2,4]],
            [[0,0],[2,0],[1,3],[-1,4],[2,-1],[-1,1],[0,5]],
            [[0,0],[1,0],[2,6],[3,7],[-1,-5],[3,6],[-2,-7]],
            [[0,0],[2,0],[0,4],[1,-1],[-1,5],[-2,4],[-2,5]],
            [[0,0],[1,0],[0,2],[-4,3],[-4,1],[-1,3],[-3,4]],
            [[0,0],[1,0],[2,3],[-1,3],[2,4],[-2,1],[1,5]],
            [[0,0],[1,0],[3,8],[1,4],[-1,-5],[2,7],[3,6]],
            [[0,0],[1,0],[2,3],[3,7],[0,2],[1,6],[3,8]],
            [[0,0],[1,0],[6,7],[-4,-6],[4,4],[7,9],[5,7]],
            [[0,0],[2,0],[2,3],[3,3],[-1,-2],[-1,-4],[0,-4]],
            [[0,0],[1,0],[0,3],[-3,5],[-2,1],[-2,5],[-3,3]],
            [[0,0],[1,0],[4,5],[5,6],[4,4],[-6,-8],[-7,-10]]],
        6: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,4],[-2,6],[-1,7],[-3,10],[-3,11]],
            [[0,0],[1,0],[0,2],[-3,1],[-4,4],[-5,4],[-5,3]],
            [[0,0],[1,0],[0,3],[-1,4],[-2,1],[-3,2],[-4,4]],
            [[0,0],[3,0],[1,3],[3,1],[2,-2],[0,3],[-1,2]],
            [[0,0],[1,0],[0,1],[-2,1],[-4,4],[-6,4],[-10,8]],
            [[0,0],[2,0],[0,1],[-5,3],[-4,1],[-9,3],[-7,2]],
            [[0,0],[1,0],[6,9],[-2,-4],[3,3],[4,7],[6,8]],
            [[0,0],[1,0],[0,1],[4,-6],[3,-6],[4,-4],[1,-4]],
            [[0,0],[1,0],[0,1],[4,-7],[2,-5],[4,-4],[3,-7]],
            [[0,0],[1,0],[0,1],[-5,1],[-9,3],[-6,3],[-10,4]],
            [[0,0],[2,0],[2,4],[3,3],[0,4],[-1,2],[-1,3]],
            [[0,0],[1,0],[0,1],[-2,1],[-5,5],[-8,5],[-7,4]],
            [[0,0],[1,0],[1,2],[2,1],[5,8],[4,7],[5,5]],
            [[0,0],[2,0],[0,3],[-3,3],[-2,4],[-1,4],[-3,1]],
            [[0,0],[1,0],[0,1],[4,6],[4,4],[3,6],[1,4]],
            [[0,0],[1,0],[1,2],[5,1],[2,3],[5,4],[4,4]],
            [[0,0],[2,0],[0,3],[-2,4],[2,-3],[4,-4],[3,-4]],
            [[0,0],[1,0],[3,5],[2,1],[5,8],[4,4],[7,10]],
            [[0,0],[2,0],[2,3],[0,-1],[1,-1],[5,6],[6,6]],
            [[0,0],[1,0],[1,4],[-1,1],[0,3],[3,2],[4,4]],
            [[0,0],[1,0],[0,1],[2,4],[4,3],[3,1],[4,6]],
            [[0,0],[1,0],[1,3],[4,5],[3,1],[3,5],[4,2]],
            [[0,0],[1,0],[1,2],[4,1],[5,2],[3,4],[5,5]],
            [[0,0],[1,0],[1,2],[-3,3],[-3,1],[-2,4],[0,4]],
            [[0,0],[1,0],[6,9],[-2,-4],[4,7],[6,8],[5,6]]],
        7: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[0,1],[-8,6],[-5,5],[-13,10],[-14,11]],
            [[0,0],[2,0],[1,2],[2,3],[5,4],[5,1],[4,4]],
            [[0,0],[1,0],[0,4],[2,-6],[-2,10],[2,-7],[-3,12]],
            [[0,0],[1,0],[0,1],[4,-4],[1,-3],[4,-7],[3,-7]],
            [[0,0],[3,0],[0,1],[8,-2],[-7,2],[-12,4],[-10,3]],
            [[0,0],[1,0],[0,2],[-3,1],[-5,4],[-5,3],[-2,4]],
            [[0,0],[2,0],[2,3],[5,5],[4,5],[4,1],[5,2]],
            [[0,0],[2,0],[3,5],[4,5],[2,4],[-1,-3],[4,3]],
            [[0,0],[2,0],[2,3],[3,4],[4,1],[6,4],[6,3]],
            [[0,0],[1,0],[3,5],[4,5],[-1,-3],[-1,-2],[5,7],[5,8]],
            [[0,0],[1,0],[1,2],[5,4],[4,2],[4,4],[2,3],[5,3]],
            [[0,0],[1,0],[2,7],[0,-1],[1,5],[3,8],[2,3],[3,7]],
            [[0,0],[2,0],[2,3],[1,2],[3,2],[0,-3],[-1,-3],[-1,-4]],
            [[0,0],[1,0],[3,8],[2,3],[3,7],[1,4],[-1,-5],[2,7]],
            [[0,0],[2,0],[3,4],[0,-1],[1,3],[4,4],[3,1],[4,3]],
            [[0,0],[1,0],[4,7],[-1,-3],[2,5],[4,8],[3,4],[3,7]],
            [[0,0],[1,0],[1,4],[2,1],[-1,1],[3,3],[0,3],[3,4]],
            [[0,0],[1,0],[6,7],[-4,-6],[4,4],[-5,-7],[7,9],[6,8]],
            [[0,0],[1,0],[0,1],[3,-8],[3,-5],[4,-9],[4,-8],[1,-4]],
            [[0,0],[1,0],[0,1],[-9,4],[-3,1],[-2,2],[-8,3],[-7,4]],
            [[0,0],[1,0],[0,1],[2,1],[4,5],[2,5],[4,4],[1,4]],
            [[0,0],[1,0],[1,2],[4,1],[2,3],[5,2],[5,4],[4,4]],
            [[0,0],[1,0],[0,1],[2,1],[3,6],[4,6],[4,4],[1,4]],
            [[0,0],[2,0],[0,4],[2,4],[-1,2],[3,2],[-1,3],[3,3]],
            [[0,0],[3,0],[2,3],[2,-3],[3,3]]],
        8: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[4,9],[4,6],[3,3]],
            [[0,0],[1,0],[5,8],[5,6],[3,2]],
            [[0,0],[2,0],[1,4],[-1,2],[3,2]],
            [[0,0],[1,0],[5,6],[7,8],[4,2]],
            [[0,0],[1,0],[1,4],[4,4],[4,2]],
            [[0,0],[1,0],[5,6],[4,6],[5,5],[3,5]],
            [[0,0],[1,0],[1,5],[0,4],[2,4],[-1,2]],
            [[0,0],[1,0],[1,5],[0,4],[2,5],[-1,2]],
            [[0,0],[1,0],[4,5],[-4,-7],[4,6],[3,5]],
            [[0,0],[1,0],[5,6],[6,6],[-1,-2],[3,4]],
            [[0,0],[1,0],[1,2],[4,2],[4,4],[3,4]],
            [[0,0],[1,0],[2,3],[3,7],[2,7],[-1,-5]],
            [[0,0],[1,0],[1,4],[3,7],[2,7],[-1,-5]],
            [[0,0],[1,0],[0,5],[-1,5],[2,2],[2,3]],
            [[0,0],[1,0],[0,5],[-1,4],[2,2],[2,3]],
            [[0,0],[1,0],[0,3],[-2,2],[2,3],[-3,1]],
            [[0,0],[2,0],[0,3],[1,3],[-2,2],[-3,1]],
            [[0,0],[2,0],[2,3],[1,2],[-1,-4],[4,4]],
            [[0,0],[1,0],[4,6],[3,6],[2,5],[4,4]],
            [[0,0],[1,0],[2,7],[3,7],[3,5],[2,1]],
            [[0,0],[1,0],[9,11],[10,12],[6,6],[2,1]],
            [[0,0],[1,0],[2,5],[4,7],[3,3],[4,5]],
            [[0,0],[1,0],[1,4],[2,5],[2,1],[4,5]],
            [[0,0],[1,0],[5,7],[-1,-2],[4,7],[5,5]],
            [[0,0],[1,0],[5,8],[2,1],[4,7],[5,5]]],
        9: [PowerSequence(PowerSequence(Integers())) |
            [[0,0],[1,0],[7,10],[8,11],[2,1],[5,5]],
            [[0,0],[2,0],[0,4],[-1,3],[3,2],[3,4]],
            [[0,0],[2,0],[1,2],[5,2],[5,5],[3,4]],
            [[0,0],[2,0],[1,2],[5,2],[3,4],[7,4]],
            [[0,0],[2,0],[2,3],[3,4],[4,1],[7,4]],
            [[0,0],[2,0],[3,4],[0,-1],[4,4],[1,3],[4,3]],
            [[0,0],[3,0],[0,2],[-4,3],[2,-1],[-5,3],[2,1]],
            [[0,0],[1,0],[6,8],[5,8],[6,9],[5,6],[2,1]],
            [[0,0],[2,0],[3,4],[4,4],[1,-1],[1,3],[4,3]],
            [[0,0],[1,0],[2,5],[4,7],[3,7],[3,3],[4,5]],
            [[0,0],[1,0],[4,7],[0,-1],[3,7],[3,3],[4,5]],
            [[0,0],[1,0],[1,4],[3,7],[2,7],[3,6],[-1,-5]],
            [[0,0],[1,0],[3,6],[2,1],[2,5],[4,6],[4,4]],
            [[0,0],[1,0],[4,7],[5,8],[2,1],[5,6],[4,4]],
            [[0,0],[1,0],[3,7],[2,3],[-2,-5],[-3,-9],[-1,-5]],
            [[0,0],[4,0],[1,2],[3,-2],[4,1],[-1,1],[-1,2]],
            [[0,0],[4,0],[1,2],[1,-1],[4,1],[3,-2],[-1,2]],
            [[0,0],[1,0],[2,5],[1,4],[3,2],[4,5],[4,4]],
            [[0,0],[1,0],[0,1],[3,5],[2,6],[4,8],[4,10]],
            [[0,0],[3,0],[0,1],[2,-1],[4,2],[2,3],[4,4]],
            [[0,0],[1,0],[1,3],[2,2],[4,7],[3,8],[4,10]],
            [[0,0],[1,0],[2,3],[-1,-5],[-4,-9],[-2,-7],[-3,-6]],
            [[0,0],[1,0],[4,5],[-3,-4],[-6,-9],[-5,-7],[-3,-6]]],
        default: 0>;
    // Return the facet
    return block[num];
end function;

/////////////////////////////////////////////////////////////////////////
// Hashing functions
/////////////////////////////////////////////////////////////////////////

// Returns a (sorted) sequence of edge lengths for the polytope P
function edge_lengths(P)
    verts:=Vertices(P);
    S:=[];
    for E in EdgeIndices(P) do
        EE:=SetToSequence(E);
        v:=verts[EE[1]] - verts[EE[2]];
        u:=PrimitiveLatticeVector(v);
        Append(~S,v / u);
    end for;
    return Sort(S);
end function;

// Returns a (sorted) sequence of corner indices for the polytope P
function corner_dets(P)
    P:=PolyhedronInSublattice(P);
    return Sort([Index([verts[j] - verts[i] :
                j in &join[E : E in EdgeIndices(P) | i in E]]) :
                i in [1..#verts]]) where verts:=Vertices(P);
end function;

// Returns the final vertes (as a sequence) for the affine normal form of the
// polytope P
function final_vertex(P)
    verts:=AffineNormalForm(PolyhedronInSublattice(P));
    return Eltseq(verts[#verts]);
end function;

// Returns a hash value for the given 2-dim point, in the range 0..65535.
function hash_point(v)
    assert #v eq 2;
    hash1:=(2^Abs(v[1])) mod 65536;
    hash2:=(3^Abs(v[2])) mod 65536;
    return (hash1 * hash2) mod 65536;
end function;

// Returns a hash value the given polytope, in the range 0..65535.
function hash_polytope(P)
    verts:=AffineNormalForm(PolyhedronInSublattice(P));
    return &+[NthPrime(i + 2) * hash_point(Eltseq(verts[i])) :
                                        i in [1..#verts]] mod 65536;
end function;

/////////////////////////////////////////////////////////////////////////
// Look-up tables
/////////////////////////////////////////////////////////////////////////

// The most basic test -- uses the number of vertices, number of points,
// and number of boundary points. Returns the id on match, 0 otherwise.
function to_id_test1(k,m,n)
    if k eq 3 then
        if m eq 3 then
            if n eq 3 then
                return 34;
            end if;
        elif m eq 4 then
            if n eq 3 then
                return 35;
            elif n eq 4 then
                return 36;
            end if;
        elif m eq 5 then
            if n eq 3 then
                return 37;
            elif n eq 4 then
                return 38;
            elif n eq 5 then
                return 39;
            end if;
        elif m eq 6 then
            if n eq 4 then
                return 40;
            end if;
        elif m eq 7 then
            if n eq 3 then
                return 41;
            elif n eq 6 then
                return 42;
            elif n eq 7 then
                return 43;
            end if;
        elif m eq 8 then
            if n eq 5 then
                return 44;
            elif n eq 6 then
                return 45;
            elif n eq 8 then
                return 46;
            end if;
        elif m eq 9 then
            if n eq 4 then
                return 47;
            elif n eq 8 then
                return 48;
            elif n eq 9 then
                return 49;
            end if;
        elif m eq 10 then
            if n eq 8 then
                return 2;
            elif n eq 9 then
                return 3;
            elif n eq 10 then
                return 1;
            end if;
        elif m eq 12 then
            if n eq 6 then
                return 5;
            elif n eq 7 then
                return 6;
            elif n eq 10 then
                return 4;
            end if;
        elif m eq 13 then
            if n eq 3 then
                return 8;
            elif n eq 4 then
                return 9;
            elif n eq 8 then
                return 10;
            elif n eq 9 then
                return 11;
            elif n eq 10 then
                return 7;
            end if;
        elif m eq 14 then
            if n eq 6 then
                return 13;
            elif n eq 8 then
                return 14;
            elif n eq 10 then
                return 12;
            end if;
        elif m eq 15 then
            if n eq 8 then
                return 15;
            end if;
        elif m eq 16 then
            if n eq 9 then
                return 17;
            elif n eq 10 then
                return 16;
            end if;
        elif m eq 17 then
            if n eq 11 then
                return 18;
            elif n eq 12 then
                return 19;
            elif n eq 7 then
                return 20;
            end if;
        elif m eq 18 then
            if n eq 14 then
                return 22;
            elif n eq 10 then
                return 21;
            end if;
        elif m eq 19 then
            if n eq 14 then
                return 23;
            end if;
        elif m eq 20 then
            if n eq 11 then
                return 25;
            elif n eq 10 then
                return 24;
            end if;
        elif m eq 21 then
            if n eq 12 then
                return 26;
            elif n eq 15 then
                return 27;
            elif n eq 16 then
                return 28;
            end if;
        elif m eq 22 then
            if n eq 15 then
                return 29;
            end if;
        elif m eq 23 then
            if n eq 12 then
                return 30;
            elif n eq 14 then
                return 31;
            end if;
        elif m eq 25 then
            if n eq 15 then
                return 32;
            elif n eq 16 then
                return 33;
            end if;
        end if;
    elif k eq 4 then
        if m eq 17 then
            if n eq 13 then
                return 53;
            end if;
        elif m eq 20 then
            if n eq 15 then
                return 54;
            end if;
        elif m eq 4 then
            if n eq 4 then
                return 60;
            end if;
        elif m eq 21 then
            if n eq 14 then
                return 55;
            elif n eq 16 then
                return 56;
            end if;
        elif m eq 22 then
            if n eq 15 then
                return 57;
            end if;
        elif m eq 5 then
            if n eq 5 then
                return 61;
            end if;
        elif m eq 6 then
            if n eq 5 then
                return 62;
            end if;
        elif m eq 24 then
            if n eq 16 then
                return 58;
            end if;
        elif m eq 7 then
            if n eq 6 then
                return 63;
            end if;
        elif m eq 8 then
            if n eq 7 then
                return 64;
            end if;
        elif m eq 26 then
            if n eq 17 then
                return 59;
            end if;
        elif m eq 11 then
            if n eq 9 then
                return 50;
            end if;
        elif m eq 14 then
            if n eq 4 then
                return 51;
            end if;
        elif m eq 16 then
            if n eq 16 then
                return 52;
            end if;
        end if;
    elif k eq 5 then
        if m eq 25 then
            if n eq 16 then
                return 66;
            end if;
        elif m eq 15 then
            if n eq 5 then
                return 65;
            end if;
        elif m eq 6 then
            if n eq 5 then
                return 67;
            end if;
        elif m eq 7 then
            if n eq 6 then
                return 68;
            end if;
        elif m eq 8 then
            if n eq 7 then
                return 69;
            end if;
        end if;
    elif k eq 6 then
        if m eq 24 then
            if n eq 14 then
                return 72;
            elif n eq 15 then
                return 73;
            end if;
        elif m eq 25 then
            if n eq 15 then
                return 74;
            end if;
        elif m eq 16 then
            if n eq 6 then
                return 70;
            end if;
        elif m eq 17 then
            if n eq 7 then
                return 71;
            end if;
        elif m eq 7 then
            if n eq 6 then
                return 75;
            end if;
        elif m eq 9 then
            if n eq 7 then
                return 76;
            end if;
        end if;
    elif k eq 7 then
        if m eq 12 then
            if n eq 8 then
                return 77;
            end if;
        elif m eq 13 then
            if n eq 9 then
                return 78;
            end if;
        elif m eq 15 then
            if n eq 10 then
                return 79;
            end if;
        elif m eq 17 then
            if n eq 11 then
                return 80;
            end if;
        elif m eq 21 then
            if n eq 13 then
                return 81;
            end if;
        end if;
    elif k eq 8 then
        if m eq 12 then
            if n eq 8 then
                return 82;
            end if;
        elif m eq 15 then
            if n eq 9 then
                return 83;
            end if;
        elif m eq 16 then
            if n eq 10 then
                return 84;
            end if;
        elif m eq 17 then
            if n eq 8 then
                return 85;
            end if;
        elif m eq 18 then
            if n eq 11 then
                return 86;
            end if;
        elif m eq 20 then
            if n eq 11 then
                return 87;
            end if;
        elif m eq 21 then
            if n eq 12 then
                return 88;
            end if;
        end if;
    elif k eq 9 then
        if m eq 16 then
            if n eq 9 then
                return 89;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// The second test function -- also uses the the fact the the barycentre
// is integral (or not).
function to_id_test2(k,m,n,bary1,bary2);
    if k eq 3 then
        if m eq 11 then
            if n eq 4 then
                if bary1 eq false and bary2 eq true then
                    return 94;
                elif bary1 eq false and bary2 eq false then
                    return 93;
                end if;
            elif n eq 5 then
                if bary1 eq false and bary2 eq true then
                    return 96;
                elif bary1 eq false and bary2 eq false then
                    return 95;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 104;
                elif bary1 eq false and bary2 eq false then
                    return 103;
                end if;
            end if;
        elif m eq 16 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 98;
                elif bary1 eq false and bary2 eq false then
                    return 97;
                end if;
            elif n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 100;
                elif bary1 eq false and bary2 eq false then
                    return 99;
                end if;
            end if;
        elif m eq 28 then
            if n eq 18 then
                if bary1 eq true and bary2 eq false then
                    return 105;
                elif bary1 eq true and bary2 eq true then
                    return 106;
                end if;
            end if;
        elif m eq 7 then
            if n eq 4 then
                if bary1 eq false and bary2 eq true then
                    return 108;
                elif bary1 eq false and bary2 eq false then
                    return 107;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if bary1 eq false and bary2 eq true then
                    return 102;
                elif bary1 eq false and bary2 eq false then
                    return 101;
                end if;
            end if;
        elif m eq 10 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 91;
                elif bary1 eq false and bary2 eq false then
                    return 90;
                elif bary1 eq true and bary2 eq true then
                    return 92;
                end if;
            end if;
        end if;
    elif k eq 4 then
        if m eq 5 then
            if n eq 4 then
                if bary1 eq false and bary2 eq false then
                    return 140;
                elif bary1 eq true and bary2 eq true then
                    return 141;
                end if;
            end if;
        elif m eq 6 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 142;
                end if;
            end if;
        elif m eq 7 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 143;
                end if;
            end if;
        elif m eq 8 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 144;
                end if;
            end if;
        elif m eq 9 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 145;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 146;
                elif bary1 eq true and bary2 eq true then
                    return 147;
                end if;
            end if;
        elif m eq 10 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 109;
                end if;
            elif n eq 6 then
                if bary1 eq false and bary2 eq true then
                    return 110;
                elif bary1 eq true and bary2 eq true then
                    return 111;
                end if;
            end if;
        elif m eq 11 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 112;
                end if;
            elif n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 113;
                end if;
            elif n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 114;
                elif bary1 eq true and bary2 eq true then
                    return 115;
                end if;
            end if;
        elif m eq 12 then
            if n eq 6 then
                if bary1 eq true and bary2 eq true then
                    return 116;
                end if;
            end if;
        elif m eq 13 then
            if n eq 4 then
                if bary1 eq true and bary2 eq true then
                    return 117;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq true then
                    return 118;
                end if;
            end if;
        elif m eq 14 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 120;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 119;
                end if;
            end if;
        elif m eq 15 then
            if n eq 12 then
                if bary1 eq true and bary2 eq true then
                    return 121;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 123;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 122;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 124;
                elif bary1 eq true and bary2 eq true then
                    return 125;
                end if;
            end if;
        elif m eq 18 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 127;
                elif bary1 eq false and bary2 eq false then
                    return 126;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 129;
                elif bary1 eq false and bary2 eq true then
                    return 128;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq true then
                    return 130;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 131;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 132;
                end if;
            end if;
        elif m eq 23 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 133;
                elif bary1 eq true and bary2 eq true then
                    return 134;
                end if;
            elif n eq 14 then
                if bary1 eq true and bary2 eq false then
                    return 135;
                end if;
            end if;
        elif m eq 24 then
            if n eq 14 then
                if bary1 eq false and bary2 eq false then
                    return 136;
                end if;
            end if;
        elif m eq 25 then
            if n eq 16 then
                if bary1 eq true and bary2 eq false then
                    return 138;
                elif bary1 eq false and bary2 eq false then
                    return 137;
                elif bary1 eq true and bary2 eq true then
                    return 139;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 17 then
            if n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 171;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq true then
                    return 172;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    return 174;
                end if;
            elif n eq 12 then
                if bary1 eq false and bary2 eq true then
                    return 175;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 176;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 173;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq true then
                    return 177;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 178;
                end if;
            elif n eq 13 then
                if bary1 eq true and bary2 eq false then
                    return 179;
                end if;
            end if;
        elif m eq 21 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    return 181;
                elif bary1 eq false and bary2 eq true then
                    return 180;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 183;
                elif bary1 eq false and bary2 eq true then
                    return 182;
                end if;
            elif n eq 14 then
                if bary1 eq true and bary2 eq false then
                    return 184;
                end if;
            end if;
        elif m eq 23 then
            if n eq 13 then
                if bary1 eq true and bary2 eq false then
                    return 185;
                end if;
            elif n eq 14 then
                if bary1 eq true and bary2 eq false then
                    return 186;
                end if;
            end if;
        elif m eq 8 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 189;
                end if;
            end if;
        elif m eq 26 then
            if n eq 16 then
                if bary1 eq true and bary2 eq false then
                    return 188;
                elif bary1 eq false and bary2 eq false then
                    return 187;
                end if;
            end if;
        elif m eq 9 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 191;
                elif bary1 eq false and bary2 eq true then
                    return 190;
                end if;
            end if;
        elif m eq 10 then
            if n eq 6 then
                if bary1 eq true and bary2 eq false then
                    return 148;
                end if;
            end if;
        elif m eq 11 then
            if n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 149;
                end if;
            end if;
        elif m eq 12 then
            if n eq 6 then
                if bary1 eq false and bary2 eq true then
                    return 150;
                end if;
            elif n eq 7 then
                if bary1 eq true and bary2 eq false then
                    return 152;
                elif bary1 eq false and bary2 eq true then
                    return 151;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 154;
                elif bary1 eq false and bary2 eq true then
                    return 153;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if bary1 eq false and bary2 eq true then
                    return 155;
                end if;
            elif n eq 7 then
                if bary1 eq true and bary2 eq false then
                    return 157;
                elif bary1 eq false and bary2 eq true then
                    return 156;
                end if;
            elif n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 158;
                end if;
            end if;
        elif m eq 14 then
            if n eq 7 then
                if bary1 eq true and bary2 eq false then
                    return 161;
                elif bary1 eq false and bary2 eq true then
                    return 160;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 162;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq false then
                    return 163;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 159;
                end if;
            end if;
        elif m eq 15 then
            if n eq 6 then
                if bary1 eq false and bary2 eq true then
                    return 164;
                end if;
            elif n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 165;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq false then
                    return 167;
                elif bary1 eq false and bary2 eq true then
                    return 166;
                end if;
            end if;
        elif m eq 16 then
            if n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 168;
                end if;
            elif n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 169;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq true then
                    return 170;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 17 then
            if n eq 12 then
                if bary1 eq true and bary2 eq true then
                    return 208;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 209;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq false then
                    return 211;
                elif bary1 eq false and bary2 eq true then
                    return 210;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if bary1 eq false and bary2 eq true then
                    return 213;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 212;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if bary1 eq true and bary2 eq true then
                    return 216;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq true then
                    return 217;
                elif bary1 eq true and bary2 eq true then
                    return 218;
                end if;
            elif n eq 10 then
                if bary1 eq false and bary2 eq true then
                    return 214;
                elif bary1 eq true and bary2 eq true then
                    return 215;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    return 220;
                elif bary1 eq false and bary2 eq true then
                    return 219;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if bary1 eq false and bary2 eq true then
                    return 221;
                elif bary1 eq true and bary2 eq true then
                    return 222;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if bary1 eq true and bary2 eq true then
                    return 223;
                end if;
            elif n eq 13 then
                if bary1 eq true and bary2 eq false then
                    return 224;
                end if;
            end if;
        elif m eq 23 then
            if n eq 13 then
                if bary1 eq true and bary2 eq false then
                    return 225;
                end if;
            elif n eq 14 then
                if bary1 eq true and bary2 eq true then
                    return 226;
                end if;
            end if;
        elif m eq 9 then
            if n eq 6 then
                if bary1 eq true and bary2 eq true then
                    return 227;
                end if;
            end if;
        elif m eq 11 then
            if n eq 7 then
                if bary1 eq true and bary2 eq false then
                    return 192;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 193;
                elif bary1 eq true and bary2 eq true then
                    return 194;
                end if;
            end if;
        elif m eq 12 then
            if n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 195;
                end if;
            end if;
        elif m eq 13 then
            if n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 197;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq true then
                    return 198;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq true then
                    return 196;
                end if;
            end if;
        elif m eq 14 then
            if n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 199;
                end if;
            end if;
        elif m eq 15 then
            if n eq 6 then
                if bary1 eq true and bary2 eq true then
                    return 202;
                end if;
            elif n eq 7 then
                if bary1 eq false and bary2 eq true then
                    return 203;
                end if;
            elif n eq 8 then
                if bary1 eq false and bary2 eq true then
                    return 204;
                elif bary1 eq true and bary2 eq true then
                    return 205;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq true then
                    return 206;
                end if;
            elif n eq 10 then
                if bary1 eq false and bary2 eq true then
                    return 200;
                elif bary1 eq true and bary2 eq true then
                    return 201;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    return 207;
                end if;
            end if;
        end if;
    elif k eq 7 then
        if m eq 14 then
            if n eq 7 then
                if bary1 eq true and bary2 eq true then
                    return 228;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq true then
                    return 229;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 230;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 231;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 233;
                elif bary1 eq false and bary2 eq true then
                    return 232;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 234;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    return 235;
                end if;
            end if;
        end if;
    elif k eq 8 then
        if m eq 15 then
            if n eq 8 then
                if bary1 eq true and bary2 eq true then
                    return 236;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if bary1 eq true and bary2 eq true then
                    return 237;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    return 238;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq true then
                    return 239;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// Augment the basic data with the edge lengths.
function to_id_test3(k,m,n,e)
    if k eq 8 then
        if m eq 19 then
            if n eq 11 then
                if e eq [1,1,1,1,1,1,2,3] then
                    return 240;
                elif e eq [1,1,1,1,1,2,2,2] then
                    return 241;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if e eq [1,1,1,1,1,1,2,2] then
                    return 242;
                elif e eq [1,1,1,1,1,1,1,3] then
                    return 243;
                end if;
            end if;
        end if;
    elif k eq 7 then
        if m eq 22 then
            if n eq 13 then
                if e eq [1,1,1,2,2,3,3] then
                    return 244;
                elif e eq [1,1,1,1,2,3,4] then
                    return 245;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if e eq [1,1,1,1,1,3,4] then
                    return 246;
                elif e eq [1,1,1,2,2,2,3] then
                    return 247;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if e eq [1,1,1,1,1,3,4] then
                    return 248;
                elif e eq [1,1,1,2,2,2,3] then
                    return 249;
                elif e eq [1,1,1,1,2,3,3] then
                    return 250;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,2,2,2,2] then
                    return 251;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if e eq [1,1,1,1,2,2,4] then
                    return 252;
                elif e eq [1,1,1,1,1,2,5] then
                    return 253;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,2,2,2,2] then
                    return 254;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if e eq [1,1,1,2,2,2,2] then
                    return 255;
                elif e eq [1,1,1,1,1,1,5] then
                    return 256;
                end if;
            end if;
        elif m eq 16 then
            if n eq 10 then
                if e eq [1,1,1,1,2,2,2] then
                    return 257;
                end if;
            end if;
        elif m eq 15 then
            if n eq 9 then
                if e eq [1,1,1,1,1,1,3] then
                    return 258;
                end if;
            end if;
        elif m eq 14 then
            if n eq 9 then
                if e eq [1,1,1,1,1,1,3] then
                    return 259;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 15 then
            if n eq 11 then
                if e eq [1,1,1,1,2,5] then
                    return 260;
                elif e eq [1,1,1,1,1,6] then
                    return 261;
                elif e eq [1,1,1,1,3,4] then
                    return 262;
                end if;
            elif n eq 10 then
                if e eq [1,1,2,2,2,2] then
                    return 263;
                end if;
            elif n eq 9 then
                if e eq [1,1,1,1,1,4] then
                    return 264;
                end if;
            end if;
        elif m eq 17 then
            if n eq 12 then
                if e eq [1,1,1,1,4,4] then
                    return 265;
                end if;
            elif n eq 11 then
                if e eq [1,1,2,2,2,3] then
                    return 266;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,1,3,3] then
                    return 267;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if e eq [1,1,1,1,2,6] then
                    return 268;
                elif e eq [1,1,2,2,2,4] then
                    return 269;
                elif e eq [1,1,1,1,3,5] then
                    return 270;
                elif e eq [1,1,2,2,3,3] then
                    return 271;
                end if;
            elif n eq 14 then
                if e eq [1,1,1,1,3,7] then
                    return 272;
                elif e eq [1,1,1,1,2,8] then
                    return 273;
                elif e eq [1,1,1,1,4,6] then
                    return 274;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if e eq [1,1,1,1,1,7] then
                    return 275;
                elif e eq [1,1,1,1,4,4] then
                    return 276;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,2,3,3] then
                    return 277;
                elif e eq [1,1,2,2,2,3] then
                    return 278;
                end if;
            elif n eq 13 then
                if e eq [1,2,2,2,3,3] then
                    return 279;
                elif e eq [1,1,2,2,3,4] then
                    return 280;
                elif e eq [1,1,2,2,2,5] then
                    return 281;
                elif e eq [1,1,1,2,4,4] then
                    return 282;
                elif e eq [1,1,1,1,3,6] then
                    return 283;
                end if;
            end if;
        elif m eq 23 then
            if n eq 14 then
                if e eq [1,1,1,2,4,5] then
                    return 284;
                elif e eq [1,1,1,2,2,7] then
                    return 285;
                elif e eq [1,1,1,3,3,5] then
                    return 286;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,2,4,4] then
                    return 287;
                end if;
            end if;
        elif m eq 10 then
            if n eq 8 then
                if e eq [1,1,1,1,2,2] then
                    return 288;
                elif e eq [1,1,1,1,1,3] then
                    return 289;
                end if;
            end if;
        elif m eq 12 then
            if n eq 9 then
                if e eq [1,1,1,2,2,2] then
                    return 290;
                elif e eq [1,1,1,1,1,4] then
                    return 291;
                elif e eq [1,1,1,1,2,3] then
                    return 292;
                end if;
            end if;
        elif m eq 14 then
            if n eq 10 then
                if e eq [1,1,2,2,2,2] then
                    return 293;
                elif e eq [1,1,1,2,2,3] then
                    return 294;
                end if;
            end if;
        elif m eq 16 then
            if n eq 12 then
                if e eq [1,1,1,1,1,7] then
                    return 295;
                elif e eq [1,1,1,1,2,6] then
                    return 296;
                elif e eq [1,1,1,1,4,4] then
                    return 297;
                elif e eq [1,1,1,1,3,5] then
                    return 298;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,2,2,4] then
                    return 299;
                elif e eq [1,1,2,2,2,3] then
                    return 300;
                end if;
            elif n eq 10 then
                if e eq [1,1,2,2,2,2] then
                    return 301;
                end if;
            end if;
        elif m eq 18 then
            if n eq 12 then
                if e eq [1,1,1,2,2,5] then
                    return 302;
                elif e eq [1,1,2,2,2,4] then
                    return 303;
                elif e eq [1,1,2,2,3,3] then
                    return 304;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,1,1,6] then
                    return 305;
                end if;
            elif n eq 8 then
                if e eq [1,1,1,1,1,3] then
                    return 306;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,1,2,7] then
                    return 307;
                elif e eq [1,1,1,1,4,5] then
                    return 308;
                elif e eq [1,1,1,1,1,8] then
                    return 309;
                elif e eq [1,1,1,1,3,6] then
                    return 310;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if e eq [1,2,2,2,2,3] then
                    return 311;
                elif e eq [1,1,1,1,4,4] then
                    return 312;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,1,1,6] then
                    return 313;
                end if;
            elif n eq 10 then
                if e eq [1,1,2,2,2,2] then
                    return 314;
                elif e eq [1,1,1,1,3,3] then
                    return 315;
                end if;
            elif n eq 13 then
                if e eq [1,1,2,2,3,4] then
                    return 316;
                elif e eq [1,1,1,2,2,6] then
                    return 317;
                elif e eq [1,1,2,2,2,5] then
                    return 318;
                elif e eq [1,1,1,2,3,5] then
                    return 319;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if e eq [1,1,2,2,2,4] then
                    return 320;
                end if;
            elif n eq 14 then
                if e eq [1,1,1,1,3,7] then
                    return 321;
                elif e eq [1,1,1,2,2,7] then
                    return 322;
                elif e eq [1,1,2,2,2,6] then
                    return 323;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,3,3,4] then
                    return 324;
                elif e eq [1,1,1,2,4,4] then
                    return 325;
                end if;
            end if;
        elif m eq 11 then
            if n eq 8 then
                if e eq [1,1,1,1,1,3] then
                    return 326;
                end if;
            end if;
        elif m eq 13 then
            if n eq 10 then
                if e eq [1,1,1,1,2,4] then
                    return 327;
                elif e eq [1,1,1,1,1,5] then
                    return 328;
                end if;
            elif n eq 9 then
                if e eq [1,1,1,2,2,2] then
                    return 329;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 15 then
            if n eq 11 then
                if e eq [1,1,1,4,4] then
                    return 330;
                elif e eq [1,1,2,2,5] then
                    return 331;
                elif e eq [1,1,2,3,4] then
                    return 332;
                elif e eq [1,2,2,3,3] then
                    return 333;
                elif e eq [1,1,1,3,5] then
                    return 334;
                end if;
            elif n eq 10 then
                if e eq [1,1,2,3,3] then
                    return 335;
                elif e eq [1,2,2,2,3] then
                    return 336;
                end if;
            end if;
        elif m eq 17 then
            if n eq 12 then
                if e eq [1,1,1,4,5] then
                    return 337;
                elif e eq [1,2,2,3,4] then
                    return 338;
                elif e eq [1,1,1,3,6] then
                    return 339;
                elif e eq [1,1,2,4,4] then
                    return 340;
                elif e eq [1,1,2,2,6] then
                    return 341;
                end if;
            elif n eq 11 then
                if e eq [1,1,2,2,5] then
                    return 342;
                elif e eq [1,1,1,3,5] then
                    return 343;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,1,6] then
                    return 344;
                end if;
            elif n eq 13 then
                if e eq [1,1,2,4,5] then
                    return 345;
                elif e eq [1,1,2,2,7] then
                    return 346;
                elif e eq [1,1,2,3,6] then
                    return 347;
                elif e eq [1,1,1,2,8] then
                    return 348;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if e eq [1,1,1,2,7] then
                    return 349;
                elif e eq [1,2,3,3,3] then
                    return 350;
                elif e eq [2,2,2,2,4] then
                    return 351;
                end if;
            elif n eq 10 then
                if e eq [1,2,2,2,3] then
                    return 352;
                end if;
            elif n eq 9 then
                if e eq [1,1,1,3,3] then
                    return 353;
                elif e eq [1,1,1,1,5] then
                    return 354;
                end if;
            elif n eq 14 then
                if e eq [1,1,2,4,6] then
                    return 355;
                elif e eq [1,1,1,1,10] then
                    return 356;
                elif e eq [1,1,2,3,7] then
                    return 357;
                elif e eq [1,1,2,2,8] then
                    return 358;
                end if;
            elif n eq 13 then
                if e eq [1,1,3,4,4] then
                    return 359;
                elif e eq [1,1,2,3,6] then
                    return 360;
                elif e eq [1,2,3,3,4] then
                    return 361;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if e eq [1,2,2,3,4] then
                    return 362;
                elif e eq [1,1,2,4,4] then
                    return 363;
                elif e eq [1,2,2,2,5] then
                    return 364;
                elif e eq [2,2,2,3,3] then
                    return 365;
                end if;
            elif n eq 11 then
                if e eq [1,2,2,3,3] then
                    return 366;
                end if;
            elif n eq 14 then
                if e eq [1,2,2,3,6] then
                    return 367;
                elif e eq [1,2,3,3,5] then
                    return 368;
                end if;
            elif n eq 13 then
                if e eq [1,1,2,4,5] then
                    return 369;
                elif e eq [1,1,2,2,7] then
                    return 370;
                elif e eq [1,1,1,2,8] then
                    return 371;
                elif e eq [1,1,1,4,6] then
                    return 372;
                end if;
            end if;
        elif m eq 23 then
            if n eq 15 then
                if e eq [1,1,2,3,8] then
                    return 373;
                elif e eq [1,2,2,3,7] then
                    return 374;
                end if;
            elif n eq 14 then
                if e eq [1,1,2,4,6] then
                    return 375;
                elif e eq [1,1,1,3,8] then
                    return 376;
                elif e eq [1,2,2,4,5] then
                    return 377;
                elif e eq [1,1,3,3,6] then
                    return 378;
                elif e eq [1,1,2,3,7] then
                    return 379;
                elif e eq [1,1,2,2,8] then
                    return 380;
                end if;
            elif n eq 13 then
                if e eq [1,1,3,4,4] then
                    return 381;
                elif e eq [1,2,2,3,5] then
                    return 382;
                elif e eq [1,1,2,3,6] then
                    return 383;
                elif e eq [1,1,1,2,8] then
                    return 384;
                elif e eq [1,2,3,3,4] then
                    return 385;
                end if;
            end if;
        elif m eq 25 then
            if n eq 15 then
                if e eq [1,1,4,4,5] then
                    return 386;
                elif e eq [1,1,2,2,9] then
                    return 387;
                elif e eq [1,1,3,5,5] then
                    return 388;
                elif e eq [1,1,1,2,10] then
                    return 389;
                end if;
            end if;
        elif m eq 10 then
            if n eq 8 then
                if e eq [1,1,1,1,4] then
                    return 390;
                elif e eq [1,1,1,2,3] then
                    return 391;
                elif e eq [1,1,2,2,2] then
                    return 392;
                end if;
            end if;
        elif m eq 14 then
            if n eq 11 then
                if e eq [1,1,2,2,5] then
                    return 393;
                elif e eq [1,1,1,2,6] then
                    return 394;
                elif e eq [1,1,2,3,4] then
                    return 395;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,3,4] then
                    return 396;
                elif e eq [1,1,2,2,4] then
                    return 397;
                end if;
            end if;
        elif m eq 16 then
            if n eq 12 then
                if e eq [1,1,2,4,4] then
                    return 398;
                elif e eq [1,1,1,2,7] then
                    return 399;
                elif e eq [1,1,2,3,5] then
                    return 400;
                elif e eq [1,1,2,2,6] then
                    return 401;
                elif e eq [1,1,1,1,8] then
                    return 402;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,4,4] then
                    return 403;
                elif e eq [1,2,2,3,3] then
                    return 404;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,1,6] then
                    return 405;
                elif e eq [2,2,2,2,2] then
                    return 406;
                end if;
            elif n eq 9 then
                if e eq [1,1,1,3,3] then
                    return 407;
                end if;
            end if;
        elif m eq 18 then
            if n eq 12 then
                if e eq [1,2,2,3,4] then
                    return 408;
                elif e eq [1,1,2,4,4] then
                    return 409;
                elif e eq [1,1,2,2,6] then
                    return 410;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,1,7] then
                    return 411;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,3,7] then
                    return 412;
                elif e eq [1,1,2,4,5] then
                    return 413;
                elif e eq [1,1,2,2,7] then
                    return 414;
                elif e eq [1,1,2,3,6] then
                    return 415;
                elif e eq [1,1,1,1,9] then
                    return 416;
                elif e eq [1,1,1,4,6] then
                    return 417;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if e eq [1,1,1,4,5] then
                    return 418;
                elif e eq [1,2,2,2,5] then
                    return 419;
                end if;
            elif n eq 11 then
                if e eq [1,1,1,4,4] then
                    return 420;
                end if;
            elif n eq 15 then
                if e eq [1,1,2,4,7] then
                    return 421;
                elif e eq [1,1,2,3,8] then
                    return 422;
                end if;
            elif n eq 13 then
                if e eq [1,1,3,3,5] then
                    return 423;
                elif e eq [1,2,3,3,4] then
                    return 424;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if e eq [1,2,2,3,4] then
                    return 425;
                elif e eq [1,1,2,4,4] then
                    return 426;
                elif e eq [1,1,1,2,7] then
                    return 427;
                elif e eq [1,2,2,2,5] then
                    return 428;
                elif e eq [1,1,3,3,4] then
                    return 429;
                end if;
            elif n eq 14 then
                if e eq [1,2,2,3,6] then
                    return 430;
                elif e eq [1,1,1,3,8] then
                    return 431;
                elif e eq [1,1,2,3,7] then
                    return 432;
                elif e eq [1,1,2,2,8] then
                    return 433;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,3,7] then
                    return 434;
                elif e eq [1,1,3,4,4] then
                    return 435;
                elif e eq [1,1,2,2,7] then
                    return 436;
                elif e eq [1,1,1,1,9] then
                    return 437;
                elif e eq [1,1,1,4,6] then
                    return 438;
                elif e eq [1,2,3,3,4] then
                    return 439;
                end if;
            end if;
        elif m eq 24 then
            if n eq 15 then
                if e eq [1,1,3,4,6] then
                    return 440;
                elif e eq [1,2,3,4,5] then
                    return 441;
                elif e eq [1,1,2,3,8] then
                    return 442;
                elif e eq [1,3,3,4,4] then
                    return 443;
                elif e eq [1,1,2,2,9] then
                    return 444;
                end if;
            elif n eq 14 then
                if e eq [1,1,4,4,4] then
                    return 445;
                elif e eq [1,1,1,1,10] then
                    return 446;
                elif e eq [1,1,1,2,9] then
                    return 447;
                end if;
            end if;
        elif m eq 11 then
            if n eq 9 then
                if e eq [1,1,1,2,4] then
                    return 448;
                elif e eq [1,1,2,2,3] then
                    return 449;
                end if;
            end if;
        elif m eq 13 then
            if n eq 10 then
                if e eq [1,1,1,2,5] then
                    return 450;
                elif e eq [1,1,2,2,4] then
                    return 451;
                elif e eq [1,1,1,1,6] then
                    return 452;
                end if;
            elif n eq 9 then
                if e eq [1,1,1,3,3] then
                    return 453;
                end if;
            end if;
        end if;
    elif k eq 4 then
        if m eq 15 then
            if n eq 12 then
                if e eq [2,2,2,6] then
                    return 454;
                elif e eq [1,2,2,7] then
                    return 455;
                elif e eq [2,2,3,5] then
                    return 456;
                end if;
            elif n eq 11 then
                if e eq [1,2,3,5] then
                    return 457;
                elif e eq [1,1,1,8] then
                    return 458;
                elif e eq [1,1,2,7] then
                    return 459;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,7] then
                    return 460;
                elif e eq [1,2,3,4] then
                    return 461;
                elif e eq [1,1,3,5] then
                    return 462;
                elif e eq [1,1,2,6] then
                    return 463;
                end if;
            elif n eq 9 then
                if e eq [1,1,2,5] then
                    return 464;
                end if;
            elif n eq 8 then
                if e eq [1,1,1,5] then
                    return 465;
                end if;
            elif n eq 7 then
                if e eq [1,1,2,3] then
                    return 466;
                end if;
            elif n eq 15 then
                if e eq [1,1,5,8] then
                    return 467;
                elif e eq [1,1,6,7] then
                    return 468;
                end if;
            end if;
        elif m eq 14 then
            if n eq 11 then
                if e eq [1,3,3,4] then
                    return 469;
                elif e eq [1,1,2,7] then
                    return 470;
                end if;
            elif n eq 10 then
                if e eq [1,1,4,4] then
                    return 471;
                end if;
            elif n eq 9 then
                if e eq [1,1,3,4] then
                    return 472;
                elif e eq [1,1,1,6] then
                    return 473;
                end if;
            elif n eq 8 then
                if e eq [1,2,2,3] then
                    return 474;
                end if;
            elif n eq 7 then
                if e eq [1,1,1,4] then
                    return 475;
                end if;
            elif n eq 14 then
                if e eq [1,1,5,7] then
                    return 476;
                elif e eq [1,1,4,8] then
                    return 477;
                elif e eq [1,1,6,6] then
                    return 478;
                end if;
            end if;
        elif m eq 13 then
            if n eq 10 then
                if e eq [1,2,2,5] then
                    return 479;
                end if;
            elif n eq 9 then
                if e eq [1,1,2,5] then
                    return 480;
                elif e eq [1,1,1,6] then
                    return 481;
                end if;
            elif n eq 8 then
                if e eq [2,2,2,2] then
                    return 482;
                elif e eq [1,2,2,3] then
                    return 483;
                end if;
            elif n eq 6 then
                if e eq [1,1,1,3] then
                    return 484;
                end if;
            elif n eq 13 then
                if e eq [1,1,5,6] then
                    return 485;
                elif e eq [1,1,4,7] then
                    return 486;
                elif e eq [1,1,3,8] then
                    return 487;
                end if;
            end if;
        elif m eq 27 then
            if n eq 17 then
                if e eq [1,2,3,11] then
                    return 488;
                elif e eq [1,5,5,6] then
                    return 489;
                end if;
            end if;
        elif m eq 12 then
            if n eq 12 then
                if e eq [1,1,4,6] then
                    return 490;
                elif e eq [1,1,5,5] then
                    return 491;
                elif e eq [1,1,3,7] then
                    return 492;
                elif e eq [1,1,2,8] then
                    return 493;
                end if;
            elif n eq 10 then
                if e eq [2,2,2,4] then
                    return 494;
                elif e eq [2,2,3,3] then
                    return 495;
                elif e eq [1,2,2,5] then
                    return 496;
                end if;
            elif n eq 9 then
                if e eq [1,1,3,4] then
                    return 497;
                elif e eq [1,1,2,5] then
                    return 498;
                elif e eq [1,1,1,6] then
                    return 499;
                end if;
            elif n eq 8 then
                if e eq [1,1,1,5] then
                    return 500;
                elif e eq [1,2,2,3] then
                    return 501;
                end if;
            end if;
        elif m eq 26 then
            if n eq 16 then
                if e eq [1,4,5,6] then
                    return 502;
                elif e eq [1,1,3,11] then
                    return 503;
                elif e eq [1,2,3,10] then
                    return 504;
                end if;
            end if;
        elif m eq 11 then
            if n eq 11 then
                if e eq [1,1,4,5] then
                    return 505;
                elif e eq [1,1,1,8] then
                    return 506;
                elif e eq [1,1,3,6] then
                    return 507;
                elif e eq [1,1,2,7] then
                    return 508;
                end if;
            elif n eq 8 then
                if e eq [1,1,3,3] then
                    return 509;
                end if;
            end if;
        elif m eq 25 then
            if n eq 15 then
                if e eq [1,3,5,6] then
                    return 510;
                elif e eq [1,2,3,9] then
                    return 511;
                end if;
            end if;
        elif m eq 10 then
            if n eq 10 then
                if e eq [1,1,1,7] then
                    return 512;
                elif e eq [1,1,4,4] then
                    return 513;
                elif e eq [1,1,3,5] then
                    return 514;
                elif e eq [1,1,2,6] then
                    return 515;
                end if;
            elif n eq 8 then
                if e eq [1,2,2,3] then
                    return 516;
                end if;
            elif n eq 7 then
                if e eq [1,1,1,4] then
                    return 517;
                end if;
            end if;
        elif m eq 24 then
            if n eq 15 then
                if e eq [1,3,4,7] then
                    return 518;
                elif e eq [1,1,3,10] then
                    return 519;
                end if;
            elif n eq 14 then
                if e eq [1,2,4,7] then
                    return 520;
                elif e eq [1,1,2,10] then
                    return 521;
                elif e eq [2,3,4,5] then
                    return 522;
                elif e eq [1,2,3,8] then
                    return 523;
                end if;
            end if;
        elif m eq 9 then
            if n eq 9 then
                if e eq [1,1,3,4] then
                    return 524;
                elif e eq [1,1,2,5] then
                    return 525;
                elif e eq [1,1,1,6] then
                    return 526;
                end if;
            elif n eq 7 then
                if e eq [1,1,1,4] then
                    return 527;
                elif e eq [1,1,2,3] then
                    return 528;
                end if;
            end if;
        elif m eq 23 then
            if n eq 14 then
                if e eq [1,2,4,7] then
                    return 529;
                end if;
            elif n eq 13 then
                if e eq [1,1,1,10] then
                    return 530;
                elif e eq [1,1,5,6] then
                    return 531;
                elif e eq [1,1,2,9] then
                    return 532;
                end if;
            end if;
        elif m eq 8 then
            if n eq 8 then
                if e eq [1,1,1,5] then
                    return 533;
                elif e eq [1,1,3,3] then
                    return 534;
                elif e eq [1,1,2,4] then
                    return 535;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if e eq [1,2,2,7] then
                    return 536;
                elif e eq [1,2,3,6] then
                    return 537;
                elif e eq [1,1,2,8] then
                    return 538;
                end if;
            elif n eq 14 then
                if e eq [2,2,4,6] then
                    return 539;
                elif e eq [1,2,3,8] then
                    return 540;
                end if;
            elif n eq 13 then
                if e eq [1,1,4,7] then
                    return 541;
                elif e eq [1,1,3,8] then
                    return 542;
                elif e eq [1,3,4,5] then
                    return 543;
                end if;
            end if;
        elif m eq 7 then
            if n eq 7 then
                if e eq [1,1,1,4] then
                    return 544;
                elif e eq [1,1,2,3] then
                    return 545;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if e eq [1,2,4,5] then
                    return 546;
                elif e eq [1,1,4,6] then
                    return 547;
                elif e eq [1,1,3,7] then
                    return 548;
                end if;
            elif n eq 13 then
                if e eq [1,2,3,7] then
                    return 549;
                elif e eq [1,1,3,8] then
                    return 550;
                end if;
            end if;
        elif m eq 6 then
            if n eq 6 then
                if e eq [1,1,2,2] then
                    return 551;
                elif e eq [1,1,1,3] then
                    return 552;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if e eq [1,2,4,5] then
                    return 553;
                elif e eq [1,1,3,7] then
                    return 554;
                elif e eq [1,1,2,8] then
                    return 555;
                end if;
            elif n eq 11 then
                if e eq [1,1,4,5] then
                    return 556;
                elif e eq [1,3,3,4] then
                    return 557;
                elif e eq [1,1,2,7] then
                    return 558;
                end if;
            elif n eq 10 then
                if e eq [1,1,4,4] then
                    return 559;
                elif e eq [1,2,2,5] then
                    return 560;
                end if;
            elif n eq 14 then
                if e eq [3,3,4,4] then
                    return 561;
                elif e eq [1,3,3,7] then
                    return 562;
                elif e eq [1,4,4,5] then
                    return 563;
                end if;
            elif n eq 13 then
                if e eq [1,2,3,7] then
                    return 564;
                elif e eq [1,1,3,8] then
                    return 565;
                end if;
            end if;
        elif m eq 19 then
            if n eq 12 then
                if e eq [1,2,3,6] then
                    return 566;
                elif e eq [1,3,3,5] then
                    return 567;
                elif e eq [2,2,4,4] then
                    return 568;
                end if;
            elif n eq 11 then
                if e eq [1,1,4,5] then
                    return 569;
                elif e eq [1,1,1,8] then
                    return 570;
                elif e eq [1,1,2,7] then
                    return 571;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,7] then
                    return 572;
                elif e eq [1,2,2,5] then
                    return 573;
                end if;
            elif n eq 9 then
                if e eq [1,2,3,3] then
                    return 574;
                elif e eq [1,1,3,4] then
                    return 575;
                end if;
            elif n eq 14 then
                if e eq [1,2,4,7] then
                    return 576;
                elif e eq [1,1,2,10] then
                    return 577;
                elif e eq [1,2,3,8] then
                    return 578;
                end if;
            elif n eq 13 then
                if e eq [1,2,3,7] then
                    return 579;
                elif e eq [1,3,4,5] then
                    return 580;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if e eq [1,1,2,7] then
                    return 581;
                end if;
            elif n eq 10 then
                if e eq [1,1,2,6] then
                    return 582;
                elif e eq [2,2,3,3] then
                    return 583;
                end if;
            elif n eq 8 then
                if e eq [1,2,2,3] then
                    return 584;
                end if;
            elif n eq 14 then
                if e eq [2,2,4,6] then
                    return 585;
                elif e eq [2,2,3,7] then
                    return 586;
                elif e eq [1,2,2,9] then
                    return 587;
                elif e eq [2,2,2,8] then
                    return 588;
                end if;
            elif n eq 13 then
                if e eq [2,3,3,5] then
                    return 589;
                elif e eq [1,1,1,10] then
                    return 590;
                elif e eq [1,1,2,9] then
                    return 591;
                end if;
            end if;
        elif m eq 17 then
            if n eq 12 then
                if e eq [1,1,4,6] then
                    return 592;
                elif e eq [1,1,1,9] then
                    return 593;
                elif e eq [1,1,3,7] then
                    return 594;
                end if;
            elif n eq 11 then
                if e eq [1,1,4,5] then
                    return 595;
                elif e eq [1,3,3,4] then
                    return 596;
                end if;
            elif n eq 10 then
                if e eq [1,1,1,7] then
                    return 597;
                elif e eq [1,1,3,5] then
                    return 598;
                elif e eq [1,2,2,5] then
                    return 599;
                end if;
            elif n eq 9 then
                if e eq [1,1,3,4] then
                    return 600;
                end if;
            end if;
        elif m eq 16 then
            if n eq 12 then
                if e eq [1,2,3,6] then
                    return 601;
                elif e eq [3,3,3,3] then
                    return 602;
                elif e eq [1,2,2,7] then
                    return 603;
                elif e eq [1,2,4,5] then
                    return 604;
                end if;
            elif n eq 11 then
                if e eq [1,2,3,5] then
                    return 605;
                elif e eq [1,1,1,8] then
                    return 606;
                elif e eq [1,1,2,7] then
                    return 607;
                end if;
            elif n eq 10 then
                if e eq [1,2,3,4] then
                    return 608;
                elif e eq [2,2,2,4] then
                    return 609;
                elif e eq [1,1,3,5] then
                    return 610;
                elif e eq [1,1,2,6] then
                    return 611;
                end if;
            elif n eq 9 then
                if e eq [1,1,3,4] then
                    return 612;
                elif e eq [1,1,1,6] then
                    return 613;
                end if;
            elif n eq 6 then
                if e eq [1,1,1,3] then
                    return 614;
                end if;
            end if;
        end if;
    elif k eq 3 then
        if m eq 11 then
            if n eq 8 then
                if e eq [1,1,6] then
                    return 615;
                elif e eq [1,3,4] then
                    return 616;
                end if;
            end if;
        elif m eq 6 then
            if n eq 6 then
                if e eq [1,1,4] then
                    return 617;
                elif e eq [2,2,2] then
                    return 618;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if e eq [1,3,4] then
                    return 619;
                end if;
            end if;
        elif m eq 15 then
            if n eq 12 then
                if e eq [2,2,8] then
                    return 620;
                elif e eq [4,4,4] then
                    return 621;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// Uses all the data collect so far.
function to_id_test4(k,m,n,bary1,bary2,e)
    if k eq 7 then
        if m eq 19 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,1,2,4] then
                        return 622;
                    elif e eq [1,1,1,1,2,2,3] then
                        return 623;
                    end if;
                end if;
            end if;
        elif m eq 18 then
            if n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,1,1,3] then
                        return 624;
                    elif e eq [1,1,1,1,1,2,2] then
                        return 625;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 21 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,2,5] then
                        return 626;
                    end if;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,3,4] then
                        return 627;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,2,3,4] then
                        return 628;
                    end if;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,2,3] then
                        return 629;
                    end if;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,2,3] then
                        return 630;
                    elif e eq [1,1,1,1,2,4] then
                        return 631;
                    elif e eq [1,1,1,1,3,3] then
                        return 632;
                    end if;
                end if;
            end if;
        elif m eq 18 then
            if n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,1,4] then
                        return 633;
                    elif e eq [1,1,1,1,2,3] then
                        return 634;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,1,7] then
                        return 635;
                    elif e eq [1,1,1,1,2,6] then
                        return 636;
                    elif e eq [1,1,1,1,3,5] then
                        return 637;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,1,1,7] then
                        return 638;
                    elif e eq [1,1,1,1,2,6] then
                        return 639;
                    elif e eq [1,1,1,1,3,5] then
                        return 640;
                    end if;
                end if;
            end if;
        elif m eq 15 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,2,4] then
                        return 641;
                    elif e eq [1,1,1,1,1,5] then
                        return 642;
                    end if;
                end if;
            end if;
        elif m eq 13 then
            if n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,1,4] then
                        return 643;
                    elif e eq [1,1,1,1,2,3] then
                        return 644;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,1,1,4] then
                        return 645;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,2,2] then
                        return 646;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 10 then
            if n eq 7 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,2] then
                        return 647;
                    elif e eq [1,1,1,1,3] then
                        return 648;
                    end if;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,4,5] then
                        return 649;
                    elif e eq [1,1,1,2,7] then
                        return 650;
                    elif e eq [1,1,3,3,4] then
                        return 651;
                    end if;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,6] then
                        return 652;
                    elif e eq [1,1,1,3,5] then
                        return 653;
                    end if;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,2,3,3] then
                        return 654;
                    elif e eq [1,1,1,2,5] then
                        return 655;
                    end if;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,4] then
                        return 656;
                    elif e eq [1,1,2,2,3] then
                        return 657;
                    end if;
                end if;
            end if;
        elif m eq 18 then
            if n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,4] then
                        return 658;
                    elif e eq [1,1,1,3,3] then
                        return 659;
                    end if;
                elif bary1 eq false and bary2 eq true then
                    if e eq [1,1,1,2,4] then
                        return 660;
                    elif e eq [1,1,1,1,5] then
                        return 661;
                    elif e eq [1,1,2,2,3] then
                        return 662;
                    end if;
                end if;
            elif n eq 13 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,8] then
                        return 663;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,2,8] then
                        return 664;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,4] then
                        return 665;
                    elif e eq [1,1,1,2,3] then
                        return 666;
                    end if;
                end if;
            elif n eq 7 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,2] then
                        return 667;
                    elif e eq [1,1,1,1,3] then
                        return 668;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,1,3] then
                        return 669;
                    end if;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,4] then
                        return 670;
                    elif e eq [1,1,2,2,2] then
                        return 671;
                    end if;
                end if;
            end if;
        elif m eq 15 then
            if n eq 11 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,6] then
                        return 672;
                    elif e eq [1,1,1,1,7] then
                        return 673;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,2,6] then
                        return 674;
                    elif e eq [1,1,1,1,7] then
                        return 675;
                    end if;
                end if;
            elif n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,3,4] then
                        return 676;
                    elif e eq [1,1,1,2,5] then
                        return 677;
                    elif e eq [1,1,1,1,6] then
                        return 678;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,1,4] then
                        return 679;
                    elif e eq [1,1,2,2,2] then
                        return 680;
                    end if;
                end if;
            end if;
        elif m eq 24 then
            if n eq 14 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,2,2,8] then
                        return 681;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,2,2,8] then
                        return 682;
                    end if;
                end if;
            end if;
        elif m eq 13 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,2,3,3] then
                        return 683;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,2,3,3] then
                        return 684;
                    end if;
                end if;
            elif n eq 9 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,4] then
                        return 685;
                    elif e eq [1,1,2,2,3] then
                        return 686;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,2,3] then
                        return 687;
                    elif e eq [1,1,2,2,2] then
                        return 688;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 4 then
        if m eq 11 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,5] then
                        return 689;
                    elif e eq [1,1,2,4] then
                        return 690;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,1,5] then
                        return 691;
                    elif e eq [1,1,2,4] then
                        return 692;
                    end if;
                end if;
            end if;
        elif m eq 20 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,2,3,4] then
                        return 693;
                    elif e eq [1,1,2,6] then
                        return 694;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,2,3,4] then
                        return 695;
                    end if;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,3,5] then
                        return 696;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 12 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,2,8] then
                        return 697;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,2,8] then
                        return 698;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,5] then
                        return 699;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,2,4] then
                        return 700;
                    end if;
                end if;
            end if;
        elif m eq 15 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,2,2,3] then
                        return 701;
                    elif e eq [1,1,2,4] then
                        return 702;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if e eq [1,1,2,4] then
                        return 703;
                    end if;
                end if;
            end if;
        elif m eq 14 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if e eq [1,1,1,5] then
                        return 704;
                    elif e eq [1,1,3,3] then
                        return 705;
                    end if;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// Now we augment the data with the corner indices.
function to_id_test5(k,m,n,d)
    if k eq 4 then
        if m eq 19 then
            if n eq 9 then
                if d eq [2,12,15,25] then
                    return 706;
                elif d eq [2,10,17,25] then
                    return 707;
                elif d eq [5,7,20,22] then
                    return 708;
                elif d eq [5,12,15,22] then
                    return 709;
                end if;
            elif n eq 10 then
                if d eq [6,11,15,20] then
                    return 710;
                elif d eq [5,6,20,21] then
                    return 711;
                elif d eq [2,8,18,24] then
                    return 712;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if d eq [6,9,18,21] then
                    return 713;
                elif d eq [3,11,16,24] then
                    return 714;
                elif d eq [3,9,18,24] then
                    return 715;
                elif d eq [3,3,24,24] then
                    return 716;
                elif d eq [3,6,21,24] then
                    return 717;
                elif d eq [3,8,19,24] then
                    return 718;
                end if;
            elif n eq 12 then
                if d eq [2,6,20,24] then
                    return 719;
                elif d eq [2,8,18,24] then
                    return 720;
                end if;
            elif n eq 10 then
                if d eq [4,12,16,24] then
                    return 721;
                elif d eq [3,10,18,25] then
                    return 722;
                elif d eq [4,4,24,24] then
                    return 723;
                elif d eq [3,13,15,25] then
                    return 724;
                elif d eq [4,6,22,24] then
                    return 725;
                elif d eq [4,10,18,24] then
                    return 726;
                end if;
            end if;
        elif m eq 21 then
            if n eq 11 then
                if d eq [5,14,15,24] then
                    return 727;
                elif d eq [1,7,22,28] then
                    return 728;
                elif d eq [7,8,21,22] then
                    return 729;
                elif d eq [9,14,15,20] then
                    return 730;
                elif d eq [4,5,24,25] then
                    return 731;
                elif d eq [4,9,20,25] then
                    return 732;
                end if;
            elif n eq 12 then
                if d eq [1,10,18,27] then
                    return 733;
                elif d eq [12,12,16,16] then
                    return 734;
                elif d eq [4,12,16,24] then
                    return 735;
                elif d eq [1,9,19,27] then
                    return 736;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if d eq [5,10,20,25] then
                    return 737;
                elif d eq [5,5,25,25] then
                    return 738;
                end if;
            elif n eq 13 then
                if d eq [2,9,20,27] then
                    return 739;
                elif d eq [2,11,18,27] then
                    return 740;
                end if;
            end if;
        elif m eq 23 then
            if n eq 13 then
                if d eq [7,10,21,24] then
                    return 741;
                elif d eq [3,10,21,28] then
                    return 742;
                end if;
            elif n eq 14 then
                if d eq [3,12,18,27] then
                    return 743;
                elif d eq [6,6,24,24] then
                    return 744;
                elif d eq [3,3,27,27] then
                    return 745;
                elif d eq [6,12,18,24] then
                    return 746;
                end if;
            end if;
        elif m eq 6 then
            if n eq 4 then
                if d eq [3,3,3,3] then
                    return 747;
                elif d eq [1,2,4,5] then
                    return 748;
                elif d eq [2,3,3,4] then
                    return 749;
                end if;
            end if;
        elif m eq 7 then
            if n eq 4 then
                if d eq [1,4,4,7] then
                    return 750;
                elif d eq [2,4,4,6] then
                    return 751;
                elif d eq [1,2,6,7] then
                    return 752;
                elif d eq [1,3,5,7] then
                    return 753;
                elif d eq [3,4,4,5] then
                    return 754;
                end if;
            elif n eq 5 then
                if d eq [1,2,5,6] then
                    return 755;
                elif d eq [2,3,4,5] then
                    return 756;
                end if;
            end if;
        elif m eq 8 then
            if n eq 4 then
                if d eq [1,2,8,9] then
                    return 757;
                elif d eq [4,5,5,6] then
                    return 758;
                elif d eq [2,5,5,8] then
                    return 759;
                elif d eq [1,5,5,9] then
                    return 760;
                elif d eq [2,3,7,8] then
                    return 761;
                end if;
            elif n eq 5 then
                if d eq [3,4,5,6] then
                    return 762;
                elif d eq [3,3,6,6] then
                    return 763;
                elif d eq [2,4,5,7] then
                    return 764;
                elif d eq [2,3,6,7] then
                    return 765;
                elif d eq [1,3,6,8] then
                    return 766;
                elif d eq [1,2,7,8] then
                    return 767;
                end if;
            elif n eq 6 then
                if d eq [2,4,4,6] then
                    return 768;
                elif d eq [2,2,6,6] then
                    return 769;
                elif d eq [2,3,5,6] then
                    return 770;
                elif d eq [4,4,4,4] then
                    return 771;
                end if;
            end if;
        elif m eq 9 then
            if n eq 4 then
                if d eq [5,6,6,7] then
                    return 772;
                elif d eq [2,3,9,10] then
                    return 773;
                elif d eq [1,6,6,11] then
                    return 774;
                elif d eq [4,5,7,8] then
                    return 775;
                elif d eq [3,5,7,9] then
                    return 776;
                elif d eq [3,4,8,9] then
                    return 777;
                elif d eq [1,5,7,11] then
                    return 778;
                elif d eq [6,6,6,6] then
                    return 779;
                elif d eq [4,6,6,8] then
                    return 780;
                elif d eq [1,4,8,11] then
                    return 781;
                elif d eq [1,3,9,11] then
                    return 782;
                elif d eq [1,2,10,11] then
                    return 783;
                elif d eq [3,6,6,9] then
                    return 784;
                elif d eq [2,4,8,10] then
                    return 785;
                elif d eq [2,6,6,10] then
                    return 786;
                end if;
            elif n eq 5 then
                if d eq [1,4,7,10] then
                    return 787;
                elif d eq [2,4,7,9] then
                    return 788;
                elif d eq [1,3,8,10] then
                    return 789;
                elif d eq [4,5,6,7] then
                    return 790;
                elif d eq [1,2,9,10] then
                    return 791;
                end if;
            elif n eq 6 then
                if d eq [3,4,6,7] then
                    return 792;
                elif d eq [1,4,6,9] then
                    return 793;
                end if;
            end if;
        elif m eq 10 then
            if n eq 4 then
                if d eq [7,7,7,7] then
                    return 794;
                elif d eq [1,4,10,13] then
                    return 795;
                elif d eq [3,4,10,11] then
                    return 796;
                elif d eq [1,5,9,13] then
                    return 797;
                elif d eq [1,6,8,13] then
                    return 798;
                end if;
            elif n eq 5 then
                if d eq [5,6,7,8] then
                    return 799;
                elif d eq [2,6,7,11] then
                    return 800;
                elif d eq [2,4,9,11] then
                    return 801;
                elif d eq [2,3,10,11] then
                    return 802;
                elif d eq [2,5,8,11] then
                    return 803;
                elif d eq [1,2,11,12] then
                    return 804;
                end if;
            elif n eq 6 then
                if d eq [6,6,6,6] then
                    return 805;
                elif d eq [4,6,6,8] then
                    return 806;
                elif d eq [3,6,6,9] then
                    return 807;
                elif d eq [3,3,9,9] then
                    return 808;
                elif d eq [4,4,8,8] then
                    return 809;
                end if;
            elif n eq 7 then
                if d eq [2,5,6,9] then
                    return 810;
                elif d eq [2,3,8,9] then
                    return 811;
                elif d eq [3,5,6,8] then
                    return 812;
                end if;
            elif n eq 8 then
                if d eq [2,2,8,8] then
                    return 813;
                elif d eq [2,4,6,8] then
                    return 814;
                end if;
            end if;
        elif m eq 11 then
            if n eq 4 then
                if d eq [2,5,11,14] then
                    return 815;
                elif d eq [3,5,11,13] then
                    return 816;
                elif d eq [2,4,12,14] then
                    return 817;
                elif d eq [4,8,8,12] then
                    return 818;
                elif d eq [5,7,9,11] then
                    return 819;
                elif d eq [2,6,10,14] then
                    return 820;
                elif d eq [2,3,13,14] then
                    return 821;
                elif d eq [4,5,11,12] then
                    return 822;
                end if;
            elif n eq 5 then
                if d eq [5,6,9,10] then
                    return 823;
                elif d eq [1,5,10,14] then
                    return 824;
                elif d eq [1,6,9,14] then
                    return 825;
                elif d eq [3,5,10,12] then
                    return 826;
                elif d eq [2,7,8,13] then
                    return 827;
                elif d eq [6,7,8,9] then
                    return 828;
                elif d eq [2,3,12,13] then
                    return 829;
                elif d eq [1,3,12,14] then
                    return 830;
                elif d eq [4,5,10,11] then
                    return 831;
                elif d eq [5,7,8,10] then
                    return 832;
                elif d eq [2,6,9,13] then
                    return 833;
                elif d eq [1,4,11,14] then
                    return 834;
                elif d eq [3,6,9,12] then
                    return 835;
                elif d eq [2,5,10,13] then
                    return 836;
                elif d eq [4,6,9,11] then
                    return 837;
                end if;
            elif n eq 6 then
                if d eq [3,6,8,11] then
                    return 838;
                elif d eq [5,6,8,9] then
                    return 839;
                elif d eq [2,5,9,12] then
                    return 840;
                elif d eq [2,3,11,12] then
                    return 841;
                end if;
            elif n eq 7 then
                if d eq [3,6,7,10] then
                    return 842;
                elif d eq [1,3,10,12] then
                    return 843;
                elif d eq [4,6,7,9] then
                    return 844;
                elif d eq [4,5,8,9] then
                    return 845;
                elif d eq [3,4,9,10] then
                    return 846;
                elif d eq [1,5,8,12] then
                    return 847;
                end if;
            end if;
        elif m eq 12 then
            if n eq 4 then
                if d eq [2,7,11,16] then
                    return 848;
                elif d eq [1,6,12,17] then
                    return 849;
                elif d eq [6,7,11,12] then
                    return 850;
                elif d eq [1,8,10,17] then
                    return 851;
                elif d eq [2,3,15,16] then
                    return 852;
                elif d eq [1,7,11,17] then
                    return 853;
                elif d eq [5,6,12,13] then
                    return 854;
                elif d eq [7,8,10,11] then
                    return 855;
                elif d eq [3,6,12,15] then
                    return 856;
                elif d eq [5,7,11,13] then
                    return 857;
                elif d eq [1,4,14,17] then
                    return 858;
                elif d eq [3,4,14,15] then
                    return 859;
                elif d eq [3,9,9,15] then
                    return 860;
                elif d eq [1,5,13,17] then
                    return 861;
                elif d eq [1,3,15,17] then
                    return 862;
                elif d eq [3,7,11,15] then
                    return 863;
                elif d eq [6,9,9,12] then
                    return 864;
                end if;
            elif n eq 5 then
                if d eq [1,3,14,16] then
                    return 865;
                elif d eq [3,4,13,14] then
                    return 866;
                elif d eq [1,7,10,16] then
                    return 867;
                elif d eq [6,7,10,11] then
                    return 868;
                elif d eq [4,6,11,13] then
                    return 869;
                elif d eq [7,8,9,10] then
                    return 870;
                elif d eq [4,7,10,13] then
                    return 871;
                elif d eq [1,6,11,16] then
                    return 872;
                end if;
            elif n eq 6 then
                if d eq [8,8,8,8] then
                    return 873;
                elif d eq [4,6,10,12] then
                    return 874;
                elif d eq [2,4,12,14] then
                    return 875;
                elif d eq [1,7,9,15] then
                    return 876;
                elif d eq [6,7,9,10] then
                    return 877;
                elif d eq [4,7,9,12] then
                    return 878;
                elif d eq [2,6,10,14] then
                    return 879;
                elif d eq [3,4,12,13] then
                    return 880;
                elif d eq [1,4,12,15] then
                    return 881;
                elif d eq [2,8,8,14] then
                    return 882;
                elif d eq [1,3,13,15] then
                    return 883;
                elif d eq [3,7,9,13] then
                    return 884;
                elif d eq [6,8,8,10] then
                    return 885;
                end if;
            elif n eq 7 then
                if d eq [3,3,12,12] then
                    return 886;
                elif d eq [3,6,9,12] then
                    return 887;
                elif d eq [3,4,11,12] then
                    return 888;
                elif d eq [6,6,9,9] then
                    return 889;
                elif d eq [3,7,8,12] then
                    return 890;
                elif d eq [4,7,8,11] then
                    return 891;
                end if;
            elif n eq 8 then
                if d eq [2,4,10,12] then
                    return 892;
                elif d eq [4,6,8,10] then
                    return 893;
                end if;
            end if;
        elif m eq 13 then
            if n eq 4 then
                if d eq [4,7,13,16] then
                    return 894;
                elif d eq [3,4,16,17] then
                    return 895;
                elif d eq [1,5,15,19] then
                    return 896;
                elif d eq [5,7,13,15] then
                    return 897;
                elif d eq [1,4,16,19] then
                    return 898;
                elif d eq [1,3,17,19] then
                    return 899;
                elif d eq [4,9,11,16] then
                    return 900;
                elif d eq [5,10,10,15] then
                    return 901;
                elif d eq [1,7,13,19] then
                    return 902;
                elif d eq [1,9,11,19] then
                    return 903;
                elif d eq [1,6,14,19] then
                    return 904;
                elif d eq [4,5,15,16] then
                    return 905;
                end if;
            elif n eq 5 then
                if d eq [2,8,11,17] then
                    return 906;
                elif d eq [2,9,10,17] then
                    return 907;
                elif d eq [6,8,11,13] then
                    return 908;
                elif d eq [2,5,14,17] then
                    return 909;
                elif d eq [5,8,11,14] then
                    return 910;
                elif d eq [3,5,14,16] then
                    return 911;
                elif d eq [2,3,16,17] then
                    return 912;
                elif d eq [2,6,13,17] then
                    return 913;
                elif d eq [2,7,12,17] then
                    return 914;
                end if;
            elif n eq 6 then
                if d eq [6,6,12,12] then
                    return 915;
                elif d eq [2,4,14,16] then
                    return 916;
                end if;
            elif n eq 7 then
                if d eq [1,5,12,16] then
                    return 917;
                elif d eq [6,8,9,11] then
                    return 918;
                elif d eq [1,4,13,16] then
                    return 919;
                elif d eq [2,8,9,15] then
                    return 920;
                elif d eq [3,8,9,14] then
                    return 921;
                elif d eq [2,3,14,15] then
                    return 922;
                elif d eq [4,5,12,13] then
                    return 923;
                elif d eq [2,6,11,15] then
                    return 924;
                elif d eq [3,5,12,14] then
                    return 925;
                end if;
            elif n eq 8 then
                if d eq [1,5,11,15] then
                    return 926;
                elif d eq [5,6,10,11] then
                    return 927;
                end if;
            elif n eq 9 then
                if d eq [3,6,9,12] then
                    return 928;
                elif d eq [6,6,9,9] then
                    return 929;
                end if;
            elif n eq 10 then
                if d eq [2,2,12,12] then
                    return 930;
                elif d eq [6,6,8,8] then
                    return 931;
                end if;
            end if;
        elif m eq 14 then
            if n eq 5 then
                if d eq [1,7,14,20] then
                    return 932;
                elif d eq [2,6,15,19] then
                    return 933;
                elif d eq [2,10,11,19] then
                    return 934;
                elif d eq [6,8,13,15] then
                    return 935;
                elif d eq [2,3,18,19] then
                    return 936;
                elif d eq [4,10,11,17] then
                    return 937;
                elif d eq [3,4,17,18] then
                    return 938;
                elif d eq [6,7,14,15] then
                    return 939;
                elif d eq [2,9,12,19] then
                    return 940;
                elif d eq [1,3,18,20] then
                    return 941;
                elif d eq [4,7,14,17] then
                    return 942;
                elif d eq [3,5,16,18] then
                    return 943;
                elif d eq [7,9,12,14] then
                    return 944;
                elif d eq [3,7,14,18] then
                    return 945;
                elif d eq [2,7,14,19] then
                    return 946;
                elif d eq [3,8,13,18] then
                    return 947;
                elif d eq [2,8,13,19] then
                    return 948;
                elif d eq [7,10,11,14] then
                    return 949;
                elif d eq [7,8,13,14] then
                    return 950;
                elif d eq [5,7,14,16] then
                    return 951;
                elif d eq [3,10,11,18] then
                    return 952;
                end if;
            elif n eq 6 then
                if d eq [2,8,12,18] then
                    return 953;
                elif d eq [5,6,14,15] then
                    return 954;
                elif d eq [5,8,12,15] then
                    return 955;
                elif d eq [3,9,11,17] then
                    return 956;
                elif d eq [3,5,15,17] then
                    return 957;
                elif d eq [8,9,11,12] then
                    return 958;
                elif d eq [2,3,17,18] then
                    return 959;
                elif d eq [5,9,11,15] then
                    return 960;
                elif d eq [4,6,14,16] then
                    return 961;
                elif d eq [2,5,15,18] then
                    return 962;
                elif d eq [3,8,12,17] then
                    return 963;
                elif d eq [6,8,12,14] then
                    return 964;
                elif d eq [5,5,15,15] then
                    return 965;
                end if;
            elif n eq 7 then
                if d eq [6,9,10,13] then
                    return 966;
                elif d eq [1,4,15,18] then
                    return 967;
                elif d eq [3,9,10,16] then
                    return 968;
                elif d eq [4,6,13,15] then
                    return 969;
                elif d eq [1,3,16,18] then
                    return 970;
                elif d eq [7,9,10,12] then
                    return 971;
                end if;
            elif n eq 8 then
                if d eq [4,6,12,14] then
                    return 972;
                elif d eq [2,4,14,16] then
                    return 973;
                elif d eq [2,6,12,16] then
                    return 974;
                elif d eq [3,8,10,15] then
                    return 975;
                elif d eq [6,6,12,12] then
                    return 976;
                elif d eq [9,9,9,9] then
                    return 977;
                elif d eq [3,3,15,15] then
                    return 978;
                elif d eq [6,8,10,12] then
                    return 979;
                elif d eq [6,9,9,12] then
                    return 980;
                elif d eq [3,6,12,15] then
                    return 981;
                end if;
            elif n eq 9 then
                if d eq [2,7,10,15] then
                    return 982;
                elif d eq [5,7,10,12] then
                    return 983;
                end if;
            elif n eq 10 then
                if d eq [1,6,10,15] then
                    return 984;
                elif d eq [2,2,14,14] then
                    return 985;
                elif d eq [4,4,12,12] then
                    return 986;
                elif d eq [6,6,10,10] then
                    return 987;
                elif d eq [2,7,9,14] then
                    return 988;
                elif d eq [4,6,10,12] then
                    return 989;
                end if;
            end if;
        elif m eq 15 then
            if n eq 5 then
                if d eq [1,4,19,22] then
                    return 990;
                elif d eq [1,8,15,22] then
                    return 991;
                elif d eq [2,10,13,21] then
                    return 992;
                elif d eq [1,3,20,22] then
                    return 993;
                elif d eq [1,7,16,22] then
                    return 994;
                end if;
            elif n eq 6 then
                if d eq [3,4,18,19] then
                    return 995;
                elif d eq [7,9,13,15] then
                    return 996;
                elif d eq [3,10,12,19] then
                    return 997;
                elif d eq [2,8,14,20] then
                    return 998;
                elif d eq [3,9,13,19] then
                    return 999;
                elif d eq [2,6,16,20] then
                    return 1000;
                elif d eq [1,4,18,21] then
                    return 1001;
                elif d eq [9,10,12,13] then
                    return 1002;
                elif d eq [3,7,15,19] then
                    return 1003;
                elif d eq [1,6,16,21] then
                    return 1004;
                elif d eq [1,10,12,21] then
                    return 1005;
                elif d eq [1,3,19,21] then
                    return 1006;
                end if;
            elif n eq 7 then
                if d eq [1,4,17,20] then
                    return 1007;
                elif d eq [1,8,13,20] then
                    return 1008;
                elif d eq [4,9,12,17] then
                    return 1009;
                elif d eq [5,9,12,16] then
                    return 1010;
                elif d eq [4,5,16,17] then
                    return 1011;
                end if;
            elif n eq 8 then
                if d eq [2,8,12,18] then
                    return 1012;
                elif d eq [6,8,12,14] then
                    return 1013;
                elif d eq [8,8,12,12] then
                    return 1014;
                end if;
            elif n eq 9 then
                if d eq [1,6,13,18] then
                    return 1015;
                elif d eq [1,7,12,18] then
                    return 1016;
                elif d eq [3,7,12,16] then
                    return 1017;
                elif d eq [4,7,12,15] then
                    return 1018;
                elif d eq [3,4,15,16] then
                    return 1019;
                end if;
            end if;
        elif m eq 16 then
            if n eq 12 then
                if d eq [2,2,16,16] then
                    return 1020;
                elif d eq [2,8,10,16] then
                    return 1021;
                end if;
            elif n eq 6 then
                if d eq [2,6,18,22] then
                    return 1022;
                elif d eq [8,10,14,16] then
                    return 1023;
                elif d eq [6,10,14,18] then
                    return 1024;
                elif d eq [8,12,12,16] then
                    return 1025;
                elif d eq [4,8,16,20] then
                    return 1026;
                elif d eq [8,8,16,16] then
                    return 1027;
                elif d eq [2,10,14,22] then
                    return 1028;
                end if;
            elif n eq 7 then
                if d eq [2,6,17,21] then
                    return 1029;
                elif d eq [9,11,12,14] then
                    return 1030;
                elif d eq [3,9,14,20] then
                    return 1031;
                elif d eq [2,8,15,21] then
                    return 1032;
                elif d eq [3,4,19,20] then
                    return 1033;
                elif d eq [4,11,12,19] then
                    return 1034;
                elif d eq [2,11,12,21] then
                    return 1035;
                elif d eq [4,7,16,19] then
                    return 1036;
                elif d eq [7,11,12,16] then
                    return 1037;
                elif d eq [6,8,15,17] then
                    return 1038;
                elif d eq [2,3,20,21] then
                    return 1039;
                end if;
            elif n eq 8 then
                if d eq [2,8,14,20] then
                    return 1040;
                elif d eq [2,7,15,20] then
                    return 1041;
                elif d eq [4,10,12,18] then
                    return 1042;
                elif d eq [4,6,16,18] then
                    return 1043;
                elif d eq [2,5,17,20] then
                    return 1044;
                elif d eq [2,6,16,20] then
                    return 1045;
                elif d eq [6,10,12,16] then
                    return 1046;
                end if;
            elif n eq 9 then
                if d eq [6,10,11,15] then
                    return 1047;
                elif d eq [1,6,15,20] then
                    return 1048;
                elif d eq [6,6,15,15] then
                    return 1049;
                elif d eq [6,9,12,15] then
                    return 1050;
                elif d eq [5,6,15,16] then
                    return 1051;
                end if;
            elif n eq 10 then
                if d eq [4,4,16,16] then
                    return 1052;
                elif d eq [4,8,12,16] then
                    return 1053;
                end if;
            end if;
        elif m eq 17 then
            if n eq 11 then
                if d eq [3,3,18,18] then
                    return 1054;
                elif d eq [3,9,12,18] then
                    return 1055;
                elif d eq [3,6,15,18] then
                    return 1056;
                end if;
            elif n eq 7 then
                if d eq [5,12,13,20] then
                    return 1057;
                elif d eq [5,9,16,20] then
                    return 1058;
                elif d eq [3,4,21,22] then
                    return 1059;
                elif d eq [1,3,22,24] then
                    return 1060;
                elif d eq [3,9,16,22] then
                    return 1061;
                elif d eq [4,5,20,21] then
                    return 1062;
                elif d eq [5,8,17,20] then
                    return 1063;
                elif d eq [5,5,20,20] then
                    return 1064;
                elif d eq [3,12,13,22] then
                    return 1065;
                elif d eq [1,5,20,24] then
                    return 1066;
                end if;
            elif n eq 8 then
                if d eq [6,6,18,18] then
                    return 1067;
                elif d eq [3,12,12,21] then
                    return 1068;
                elif d eq [4,10,14,20] then
                    return 1069;
                elif d eq [4,9,15,20] then
                    return 1070;
                elif d eq [4,5,19,20] then
                    return 1071;
                elif d eq [3,6,18,21] then
                    return 1072;
                elif d eq [3,9,15,21] then
                    return 1073;
                elif d eq [5,9,15,19] then
                    return 1074;
                elif d eq [9,12,12,15] then
                    return 1075;
                end if;
            elif n eq 9 then
                if d eq [5,6,17,18] then
                    return 1076;
                elif d eq [5,11,12,18] then
                    return 1077;
                end if;
            elif n eq 10 then
                if d eq [6,10,12,16] then
                    return 1078;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if d eq [3,5,18,20] then
                    return 1079;
                elif d eq [5,8,15,18] then
                    return 1080;
                end if;
            elif n eq 8 then
                if d eq [1,6,20,25] then
                    return 1081;
                elif d eq [1,5,21,25] then
                    return 1082;
                elif d eq [2,10,16,24] then
                    return 1083;
                elif d eq [10,12,14,16] then
                    return 1084;
                elif d eq [4,10,16,22] then
                    return 1085;
                elif d eq [4,12,14,22] then
                    return 1086;
                end if;
            elif n eq 9 then
                if d eq [1,7,18,24] then
                    return 1087;
                elif d eq [9,12,13,16] then
                    return 1088;
                elif d eq [4,9,16,21] then
                    return 1089;
                elif d eq [1,4,21,24] then
                    return 1090;
                elif d eq [1,6,19,24] then
                    return 1091;
                elif d eq [4,12,13,21] then
                    return 1092;
                elif d eq [6,7,18,19] then
                    return 1093;
                end if;
            elif n eq 10 then
                if d eq [4,10,14,20] then
                    return 1094;
                elif d eq [3,7,17,21] then
                    return 1095;
                elif d eq [4,4,20,20] then
                    return 1096;
                elif d eq [8,12,12,16] then
                    return 1097;
                elif d eq [3,3,21,21] then
                    return 1098;
                elif d eq [4,8,16,20] then
                    return 1099;
                elif d eq [3,10,14,21] then
                    return 1100;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 19 then
            if n eq 11 then
                if d eq [3,5,6,8,12] then
                    return 1101;
                elif d eq [1,1,3,14,21] then
                    return 1102;
                elif d eq [2,3,5,7,15] then
                    return 1103;
                elif d eq [1,1,7,10,21] then
                    return 1104;
                elif d eq [2,5,6,8,12] then
                    return 1105;
                elif d eq [1,4,5,8,16] then
                    return 1106;
                elif d eq [3,4,6,8,12] then
                    return 1107;
                elif d eq [2,3,5,12,15] then
                    return 1108;
                elif d eq [2,3,4,6,18] then
                    return 1109;
                elif d eq [3,4,6,9,12] then
                    return 1110;
                elif d eq [2,3,3,12,16] then
                    return 1111;
                elif d eq [2,3,5,5,15] then
                    return 1112;
                elif d eq [3,4,6,9,10] then
                    return 1113;
                elif d eq [1,2,3,7,21] then
                    return 1114;
                elif d eq [2,3,5,6,15] then
                    return 1115;
                elif d eq [1,2,6,12,18] then
                    return 1116;
                elif d eq [4,5,6,8,10] then
                    return 1117;
                elif d eq [1,3,7,7,12] then
                    return 1118;
                elif d eq [1,3,7,7,14] then
                    return 1119;
                elif d eq [1,4,4,10,15] then
                    return 1120;
                elif d eq [1,4,5,12,16] then
                    return 1121;
                elif d eq [2,5,6,7,12] then
                    return 1122;
                elif d eq [4,4,5,6,15] then
                    return 1123;
                end if;
            elif n eq 12 then
                if d eq [2,4,6,6,12] then
                    return 1124;
                elif d eq [2,4,4,12,12] then
                    return 1125;
                elif d eq [3,4,5,6,15] then
                    return 1126;
                elif d eq [2,3,6,10,15] then
                    return 1127;
                end if;
            elif n eq 9 then
                if d eq [3,4,6,12,14] then
                    return 1128;
                elif d eq [1,3,4,16,16] then
                    return 1129;
                elif d eq [2,2,8,9,20] then
                    return 1130;
                elif d eq [1,2,2,16,20] then
                    return 1131;
                elif d eq [1,3,8,14,16] then
                    return 1132;
                elif d eq [3,3,6,12,16] then
                    return 1133;
                elif d eq [2,3,4,8,15] then
                    return 1134;
                elif d eq [2,5,6,12,12] then
                    return 1135;
                elif d eq [2,4,5,10,12] then
                    return 1136;
                elif d eq [2,3,8,10,12] then
                    return 1137;
                elif d eq [3,6,7,8,12] then
                    return 1138;
                elif d eq [2,2,5,12,20] then
                    return 1139;
                elif d eq [2,2,4,13,20] then
                    return 1140;
                elif d eq [2,4,5,12,16] then
                    return 1141;
                elif d eq [1,4,8,8,14] then
                    return 1142;
                elif d eq [1,4,7,12,16] then
                    return 1143;
                elif d eq [3,3,8,10,16] then
                    return 1144;
                elif d eq [2,3,3,16,16] then
                    return 1145;
                end if;
            elif n eq 10 then
                if d eq [1,4,9,10,12] then
                    return 1146;
                elif d eq [2,6,6,12,12] then
                    return 1147;
                elif d eq [2,4,8,10,10] then
                    return 1148;
                elif d eq [1,2,4,15,20] then
                    return 1149;
                elif d eq [2,3,9,12,12] then
                    return 1150;
                elif d eq [1,6,7,7,12] then
                    return 1151;
                elif d eq [3,4,7,9,12] then
                    return 1152;
                elif d eq [1,3,5,10,20] then
                    return 1153;
                elif d eq [2,2,9,9,18] then
                    return 1154;
                elif d eq [3,3,4,10,12] then
                    return 1155;
                elif d eq [2,4,6,8,16] then
                    return 1156;
                elif d eq [2,3,3,9,14] then
                    return 1157;
                elif d eq [1,1,6,6,15] then
                    return 1158;
                elif d eq [2,2,3,15,18] then
                    return 1159;
                elif d eq [2,6,8,9,12] then
                    return 1160;
                elif d eq [4,5,5,7,14] then
                    return 1161;
                elif d eq [3,4,7,7,12] then
                    return 1162;
                elif d eq [1,4,6,9,12] then
                    return 1163;
                elif d eq [2,2,6,12,18] then
                    return 1164;
                elif d eq [2,5,5,9,14] then
                    return 1165;
                elif d eq [1,4,6,12,12] then
                    return 1166;
                elif d eq [2,3,4,5,20] then
                    return 1167;
                elif d eq [2,2,5,9,20] then
                    return 1168;
                elif d eq [5,5,5,6,14] then
                    return 1169;
                elif d eq [3,4,4,6,16] then
                    return 1170;
                elif d eq [2,3,6,12,12] then
                    return 1171;
                elif d eq [2,6,6,9,12] then
                    return 1172;
                elif d eq [3,6,6,8,12] then
                    return 1173;
                elif d eq [1,3,6,11,18] then
                    return 1174;
                elif d eq [3,5,6,6,15] then
                    return 1175;
                elif d eq [2,4,5,10,15] then
                    return 1176;
                elif d eq [1,5,5,10,14] then
                    return 1177;
                elif d eq [2,3,5,8,15] then
                    return 1178;
                elif d eq [1,4,6,12,16] then
                    return 1179;
                elif d eq [3,5,8,8,10] then
                    return 1180;
                elif d eq [2,4,5,10,11] then
                    return 1181;
                elif d eq [5,6,6,6,12] then
                    return 1182;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if d eq [4,5,6,6,14] then
                    return 1183;
                elif d eq [1,4,6,8,15] then
                    return 1184;
                elif d eq [1,5,7,7,14] then
                    return 1185;
                elif d eq [1,5,5,12,15] then
                    return 1186;
                elif d eq [3,3,9,12,12] then
                    return 1187;
                elif d eq [3,4,6,8,16] then
                    return 1188;
                elif d eq [1,2,6,11,12] then
                    return 1189;
                elif d eq [3,6,6,6,14] then
                    return 1190;
                elif d eq [3,4,5,7,15] then
                    return 1191;
                elif d eq [1,2,10,10,20] then
                    return 1192;
                elif d eq [2,3,4,12,12] then
                    return 1193;
                elif d eq [1,2,4,12,18] then
                    return 1194;
                elif d eq [1,6,6,8,14] then
                    return 1195;
                elif d eq [3,4,5,10,15] then
                    return 1196;
                elif d eq [1,2,7,11,21] then
                    return 1197;
                elif d eq [2,5,8,10,10] then
                    return 1198;
                elif d eq [3,3,6,9,18] then
                    return 1199;
                elif d eq [2,4,8,9,12] then
                    return 1200;
                elif d eq [2,3,8,12,16] then
                    return 1201;
                elif d eq [2,3,6,6,18] then
                    return 1202;
                elif d eq [3,3,3,12,18] then
                    return 1203;
                elif d eq [3,4,6,12,12] then
                    return 1204;
                elif d eq [3,6,9,9,9] then
                    return 1205;
                elif d eq [2,7,8,9,12] then
                    return 1206;
                elif d eq [1,5,6,6,15] then
                    return 1207;
                elif d eq [3,6,6,8,12] then
                    return 1208;
                elif d eq [1,3,4,15,20] then
                    return 1209;
                elif d eq [3,3,4,5,20] then
                    return 1210;
                elif d eq [3,3,4,15,15] then
                    return 1211;
                end if;
            elif n eq 12 then
                if d eq [2,2,6,12,18] then
                    return 1212;
                elif d eq [1,2,3,14,21] then
                    return 1213;
                elif d eq [2,2,8,12,16] then
                    return 1214;
                elif d eq [2,4,6,8,16] then
                    return 1215;
                elif d eq [2,2,4,16,16] then
                    return 1216;
                elif d eq [1,4,4,14,14] then
                    return 1217;
                elif d eq [4,6,6,8,12] then
                    return 1218;
                elif d eq [2,4,6,6,18] then
                    return 1219;
                elif d eq [2,3,4,14,14] then
                    return 1220;
                elif d eq [2,3,5,6,18] then
                    return 1221;
                elif d eq [2,2,3,7,21] then
                    return 1222;
                elif d eq [2,3,7,7,14] then
                    return 1223;
                end if;
            elif n eq 13 then
                if d eq [1,3,4,12,18] then
                    return 1224;
                elif d eq [1,4,6,6,18] then
                    return 1225;
                end if;
            elif n eq 10 then
                if d eq [3,3,5,8,20] then
                    return 1226;
                elif d eq [1,5,8,10,12] then
                    return 1227;
                elif d eq [4,4,4,12,16] then
                    return 1228;
                elif d eq [3,5,8,9,12] then
                    return 1229;
                elif d eq [3,5,8,8,12] then
                    return 1230;
                elif d eq [3,5,6,8,16] then
                    return 1231;
                elif d eq [2,4,4,14,16] then
                    return 1232;
                elif d eq [1,2,5,16,20] then
                    return 1233;
                elif d eq [4,4,6,8,16] then
                    return 1234;
                elif d eq [2,4,6,14,16] then
                    return 1235;
                elif d eq [1,2,5,10,15] then
                    return 1236;
                elif d eq [3,3,4,9,20] then
                    return 1237;
                elif d eq [2,4,6,10,16] then
                    return 1238;
                elif d eq [2,4,8,12,16] then
                    return 1239;
                elif d eq [3,3,4,12,12] then
                    return 1240;
                elif d eq [1,2,4,10,20] then
                    return 1241;
                elif d eq [2,2,4,16,16] then
                    return 1242;
                elif d eq [1,4,9,12,12] then
                    return 1243;
                elif d eq [1,3,3,12,20] then
                    return 1244;
                elif d eq [3,4,5,8,15] then
                    return 1245;
                elif d eq [4,4,6,10,16] then
                    return 1246;
                end if;
            end if;
        elif m eq 21 then
            if n eq 11 then
                if d eq [1,3,3,15,20] then
                    return 1247;
                elif d eq [2,3,6,12,16] then
                    return 1248;
                elif d eq [4,5,5,10,16] then
                    return 1249;
                elif d eq [2,2,8,10,15] then
                    return 1250;
                elif d eq [1,1,4,18,24] then
                    return 1251;
                elif d eq [1,4,4,8,20] then
                    return 1252;
                elif d eq [2,4,5,10,20] then
                    return 1253;
                elif d eq [1,3,5,10,15] then
                    return 1254;
                elif d eq [4,4,4,5,20] then
                    return 1255;
                elif d eq [4,4,5,12,12] then
                    return 1256;
                elif d eq [5,5,6,8,16] then
                    return 1257;
                elif d eq [4,4,5,8,16] then
                    return 1258;
                elif d eq [3,4,4,9,16] then
                    return 1259;
                elif d eq [1,6,8,10,12] then
                    return 1260;
                elif d eq [1,5,6,8,20] then
                    return 1261;
                elif d eq [1,1,6,16,24] then
                    return 1262;
                elif d eq [1,3,12,12,16] then
                    return 1263;
                end if;
            elif n eq 12 then
                if d eq [2,5,6,10,12] then
                    return 1264;
                elif d eq [4,4,6,6,18] then
                    return 1265;
                elif d eq [1,3,4,16,16] then
                    return 1266;
                elif d eq [2,6,6,10,15] then
                    return 1267;
                elif d eq [1,2,10,12,20] then
                    return 1268;
                elif d eq [1,4,6,12,18] then
                    return 1269;
                elif d eq [1,4,4,15,20] then
                    return 1270;
                elif d eq [3,4,7,7,14] then
                    return 1271;
                elif d eq [1,3,6,7,18] then
                    return 1272;
                elif d eq [1,1,3,16,24] then
                    return 1273;
                elif d eq [1,3,6,6,18] then
                    return 1274;
                elif d eq [3,4,4,9,18] then
                    return 1275;
                elif d eq [3,4,7,8,14] then
                    return 1276;
                elif d eq [1,3,7,8,16] then
                    return 1277;
                elif d eq [4,6,6,9,12] then
                    return 1278;
                elif d eq [2,3,4,7,21] then
                    return 1279;
                elif d eq [1,1,8,11,24] then
                    return 1280;
                elif d eq [2,3,5,10,15] then
                    return 1281;
                elif d eq [2,6,8,8,12] then
                    return 1282;
                elif d eq [3,4,9,12,12] then
                    return 1283;
                elif d eq [2,5,7,7,14] then
                    return 1284;
                elif d eq [3,4,4,5,20] then
                    return 1285;
                end if;
            elif n eq 13 then
                if d eq [3,4,5,10,12] then
                    return 1286;
                elif d eq [1,3,3,14,21] then
                    return 1287;
                elif d eq [4,5,6,6,15] then
                    return 1288;
                elif d eq [1,2,7,12,21] then
                    return 1289;
                elif d eq [2,3,3,7,21] then
                    return 1290;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if d eq [1,2,4,20,20] then
                    return 1291;
                elif d eq [2,2,4,12,24] then
                    return 1292;
                elif d eq [4,6,6,8,16] then
                    return 1293;
                elif d eq [2,3,10,10,12] then
                    return 1294;
                elif d eq [3,4,5,6,20] then
                    return 1295;
                elif d eq [1,4,5,5,20] then
                    return 1296;
                elif d eq [2,2,6,10,24] then
                    return 1297;
                elif d eq [2,6,6,10,16] then
                    return 1298;
                elif d eq [2,3,6,15,15] then
                    return 1299;
                elif d eq [1,4,6,15,20] then
                    return 1300;
                end if;
            elif n eq 13 then
                if d eq [2,3,8,8,16] then
                    return 1301;
                elif d eq [2,3,8,8,14] then
                    return 1302;
                elif d eq [2,3,6,12,12] then
                    return 1303;
                elif d eq [2,3,5,12,18] then
                    return 1304;
                elif d eq [1,4,8,8,14] then
                    return 1305;
                elif d eq [2,3,6,8,18] then
                    return 1306;
                elif d eq [2,2,3,8,24] then
                    return 1307;
                elif d eq [3,5,6,9,15] then
                    return 1308;
                elif d eq [1,2,8,15,20] then
                    return 1309;
                elif d eq [2,4,5,12,20] then
                    return 1310;
                elif d eq [3,5,5,6,18] then
                    return 1311;
                end if;
            end if;
        elif m eq 23 then
            if n eq 13 then
                if d eq [2,4,4,15,20] then
                    return 1312;
                elif d eq [2,7,7,8,16] then
                    return 1313;
                elif d eq [2,4,5,10,16] then
                    return 1314;
                elif d eq [1,1,5,20,25] then
                    return 1315;
                elif d eq [1,1,10,15,25] then
                    return 1316;
                elif d eq [4,6,7,7,16] then
                    return 1317;
                end if;
            elif n eq 14 then
                if d eq [1,2,4,18,18] then
                    return 1318;
                elif d eq [4,6,6,8,16] then
                    return 1319;
                elif d eq [2,6,8,12,16] then
                    return 1320;
                elif d eq [1,2,9,9,14] then
                    return 1321;
                end if;
            end if;
        elif m eq 24 then
            if n eq 14 then
                if d eq [2,2,10,10,25] then
                    return 1322;
                elif d eq [3,4,5,12,15] then
                    return 1323;
                elif d eq [3,4,6,10,20] then
                    return 1324;
                elif d eq [2,2,5,15,25] then
                    return 1325;
                end if;
            elif n eq 15 then
                if d eq [1,1,3,18,27] then
                    return 1326;
                elif d eq [1,1,9,12,27] then
                    return 1327;
                end if;
            end if;
        elif m eq 7 then
            if n eq 5 then
                if d eq [1,1,2,3,3] then
                    return 1328;
                elif d eq [1,1,2,2,3] then
                    return 1329;
                elif d eq [1,1,1,3,4] then
                    return 1330;
                end if;
            end if;
        elif m eq 8 then
            if n eq 5 then
                if d eq [1,1,2,3,5] then
                    return 1331;
                elif d eq [1,1,3,4,4] then
                    return 1332;
                elif d eq [1,1,2,2,5] then
                    return 1333;
                elif d eq [1,1,1,4,6] then
                    return 1334;
                elif d eq [1,1,2,4,5] then
                    return 1335;
                end if;
            elif n eq 6 then
                if d eq [1,2,2,3,3] then
                    return 1336;
                elif d eq [2,2,2,2,3] then
                    return 1337;
                elif d eq [1,2,2,2,4] then
                    return 1338;
                end if;
            end if;
        elif m eq 9 then
            if n eq 5 then
                if d eq [1,1,1,5,8] then
                    return 1339;
                elif d eq [1,1,3,5,6] then
                    return 1340;
                elif d eq [1,2,3,5,5] then
                    return 1341;
                elif d eq [1,2,3,3,5] then
                    return 1342;
                elif d eq [1,2,2,3,7] then
                    return 1343;
                elif d eq [1,1,2,5,7] then
                    return 1344;
                elif d eq [2,2,3,3,5] then
                    return 1345;
                elif d eq [1,1,3,3,8] then
                    return 1346;
                elif d eq [1,1,4,5,5] then
                    return 1347;
                elif d eq [1,1,2,2,7] then
                    return 1348;
                end if;
            elif n eq 6 then
                if d eq [2,2,2,4,4] then
                    return 1349;
                elif d eq [1,2,3,4,4] then
                    return 1350;
                elif d eq [1,2,3,3,4] then
                    return 1351;
                elif d eq [2,2,3,3,4] then
                    return 1352;
                elif d eq [1,1,2,5,6] then
                    return 1353;
                elif d eq [1,1,3,4,6] then
                    return 1354;
                elif d eq [1,2,2,4,5] then
                    return 1355;
                elif d eq [1,2,2,4,4] then
                    return 1356;
                end if;
            elif n eq 7 then
                if d eq [1,2,2,3,4] then
                    return 1357;
                elif d eq [1,2,3,3,3] then
                    return 1358;
                elif d eq [1,2,2,4,4] then
                    return 1359;
                elif d eq [1,1,2,3,6] then
                    return 1360;
                end if;
            end if;
        elif m eq 10 then
            if n eq 5 then
                if d eq [1,3,4,5,5] then
                    return 1361;
                elif d eq [1,3,4,4,5] then
                    return 1362;
                elif d eq [1,1,1,8,9] then
                    return 1363;
                elif d eq [1,2,3,5,7] then
                    return 1364;
                elif d eq [1,2,3,3,7] then
                    return 1365;
                elif d eq [1,1,2,2,9] then
                    return 1366;
                elif d eq [1,1,4,5,9] then
                    return 1367;
                elif d eq [1,1,5,6,6] then
                    return 1368;
                elif d eq [1,1,4,5,5] then
                    return 1369;
                elif d eq [1,1,4,6,7] then
                    return 1370;
                elif d eq [1,3,3,4,7] then
                    return 1371;
                elif d eq [1,1,3,4,7] then
                    return 1372;
                elif d eq [1,1,3,7,8] then
                    return 1373;
                elif d eq [1,1,3,6,8] then
                    return 1374;
                elif d eq [1,2,3,3,8] then
                    return 1375;
                elif d eq [1,1,5,5,8] then
                    return 1376;
                elif d eq [1,1,3,4,10] then
                    return 1377;
                elif d eq [1,1,2,7,9] then
                    return 1378;
                elif d eq [1,2,4,5,7] then
                    return 1379;
                elif d eq [1,1,1,6,10] then
                    return 1380;
                elif d eq [1,2,3,4,7] then
                    return 1381;
                elif d eq [1,1,2,6,9] then
                    return 1382;
                end if;
            elif n eq 6 then
                if d eq [2,2,2,5,6] then
                    return 1383;
                elif d eq [1,2,2,6,7] then
                    return 1384;
                elif d eq [1,2,2,5,7] then
                    return 1385;
                elif d eq [2,2,3,3,6] then
                    return 1386;
                elif d eq [1,2,4,5,5] then
                    return 1387;
                elif d eq [2,2,4,4,5] then
                    return 1388;
                elif d eq [1,3,3,4,6] then
                    return 1389;
                elif d eq [1,1,2,2,8] then
                    return 1390;
                elif d eq [2,2,3,5,5] then
                    return 1391;
                elif d eq [1,1,2,4,8] then
                    return 1392;
                end if;
            elif n eq 7 then
                if d eq [2,3,3,3,4] then
                    return 1393;
                elif d eq [2,2,3,4,4] then
                    return 1394;
                elif d eq [1,3,3,4,4] then
                    return 1395;
                elif d eq [2,2,2,3,6] then
                    return 1396;
                elif d eq [1,1,3,3,6] then
                    return 1397;
                elif d eq [1,2,2,4,6] then
                    return 1398;
                elif d eq [1,2,2,4,5] then
                    return 1399;
                end if;
            end if;
        elif m eq 11 then
            if n eq 5 then
                if d eq [1,3,4,4,7] then
                    return 1400;
                elif d eq [1,1,2,5,11] then
                    return 1401;
                elif d eq [1,1,3,5,8] then
                    return 1402;
                elif d eq [1,1,3,6,9] then
                    return 1403;
                elif d eq [1,2,3,4,11] then
                    return 1404;
                elif d eq [1,2,5,7,7] then
                    return 1405;
                elif d eq [1,1,3,4,10] then
                    return 1406;
                elif d eq [3,3,3,4,7] then
                    return 1407;
                elif d eq [1,3,3,3,10] then
                    return 1408;
                elif d eq [1,3,4,7,7] then
                    return 1409;
                elif d eq [2,3,4,5,7] then
                    return 1410;
                end if;
            elif n eq 6 then
                if d eq [2,2,2,4,9] then
                    return 1411;
                elif d eq [2,2,3,5,6] then
                    return 1412;
                elif d eq [2,2,3,4,8] then
                    return 1413;
                elif d eq [2,2,3,5,8] then
                    return 1414;
                elif d eq [1,2,3,3,8] then
                    return 1415;
                elif d eq [1,2,2,5,9] then
                    return 1416;
                elif d eq [2,2,4,4,7] then
                    return 1417;
                elif d eq [1,2,2,6,9] then
                    return 1418;
                elif d eq [2,2,4,4,6] then
                    return 1419;
                elif d eq [1,2,3,5,8] then
                    return 1420;
                elif d eq [1,1,2,2,10] then
                    return 1421;
                elif d eq [1,2,2,4,10] then
                    return 1422;
                elif d eq [1,2,2,4,8] then
                    return 1423;
                elif d eq [1,2,4,6,8] then
                    return 1424;
                elif d eq [1,2,3,6,7] then
                    return 1425;
                elif d eq [1,2,2,7,8] then
                    return 1426;
                elif d eq [2,3,4,5,5] then
                    return 1427;
                elif d eq [1,2,3,7,8] then
                    return 1428;
                elif d eq [2,2,5,5,6] then
                    return 1429;
                elif d eq [2,3,4,4,6] then
                    return 1430;
                elif d eq [2,2,4,5,6] then
                    return 1431;
                elif d eq [2,2,3,6,7] then
                    return 1432;
                elif d eq [1,2,5,6,6] then
                    return 1433;
                end if;
            elif n eq 7 then
                if d eq [1,2,4,6,6] then
                    return 1434;
                elif d eq [1,2,3,3,9] then
                    return 1435;
                elif d eq [1,1,2,8,8] then
                    return 1436;
                elif d eq [1,2,2,4,7] then
                    return 1437;
                elif d eq [2,3,3,5,5] then
                    return 1438;
                elif d eq [1,3,4,4,6] then
                    return 1439;
                elif d eq [1,2,3,5,6] then
                    return 1440;
                elif d eq [1,2,4,4,6] then
                    return 1441;
                elif d eq [1,3,3,5,6] then
                    return 1442;
                elif d eq [1,1,4,6,8] then
                    return 1443;
                elif d eq [2,3,4,4,5] then
                    return 1444;
                elif d eq [3,3,4,4,4] then
                    return 1445;
                elif d eq [3,3,3,4,5] then
                    return 1446;
                end if;
            elif n eq 8 then
                if d eq [1,2,3,4,6] then
                    return 1447;
                elif d eq [1,2,2,6,6] then
                    return 1448;
                elif d eq [1,2,3,3,6] then
                    return 1449;
                elif d eq [2,2,3,4,6] then
                    return 1450;
                elif d eq [1,2,2,4,8] then
                    return 1451;
                elif d eq [1,3,4,4,4] then
                    return 1452;
                end if;
            end if;
        elif m eq 12 then
            if n eq 5 then
                if d eq [2,4,5,5,7] then
                    return 1453;
                elif d eq [1,2,2,5,13] then
                    return 1454;
                elif d eq [1,2,4,5,9] then
                    return 1455;
                elif d eq [3,3,5,5,8] then
                    return 1456;
                elif d eq [1,2,3,3,11] then
                    return 1457;
                elif d eq [2,2,5,7,7] then
                    return 1458;
                elif d eq [1,2,5,7,11] then
                    return 1459;
                elif d eq [1,2,5,7,9] then
                    return 1460;
                elif d eq [2,3,4,5,9] then
                    return 1461;
                elif d eq [1,4,5,5,9] then
                    return 1462;
                elif d eq [1,4,5,5,8] then
                    return 1463;
                elif d eq [1,4,5,5,7] then
                    return 1464;
                elif d eq [2,2,5,7,9] then
                    return 1465;
                elif d eq [2,2,3,5,11] then
                    return 1466;
                elif d eq [1,1,4,5,14] then
                    return 1467;
                elif d eq [1,1,5,8,12] then
                    return 1468;
                elif d eq [1,1,2,11,12] then
                    return 1469;
                elif d eq [1,2,5,6,7] then
                    return 1470;
                elif d eq [1,2,2,9,11] then
                    return 1471;
                elif d eq [1,2,3,9,11] then
                    return 1472;
                elif d eq [2,3,5,5,8] then
                    return 1473;
                elif d eq [1,2,3,5,11] then
                    return 1474;
                elif d eq [1,3,5,8,8] then
                    return 1475;
                elif d eq [1,2,3,5,10] then
                    return 1476;
                elif d eq [1,3,4,5,9] then
                    return 1477;
                elif d eq [1,3,4,5,11] then
                    return 1478;
                elif d eq [1,2,3,5,13] then
                    return 1479;
                elif d eq [1,3,3,4,11] then
                    return 1480;
                elif d eq [2,3,5,5,7] then
                    return 1481;
                elif d eq [1,1,3,6,14] then
                    return 1482;
                elif d eq [2,3,5,7,7] then
                    return 1483;
                elif d eq [2,2,5,5,9] then
                    return 1484;
                end if;
            elif n eq 6 then
                if d eq [3,4,4,4,7] then
                    return 1485;
                elif d eq [1,3,4,6,7] then
                    return 1486;
                elif d eq [1,2,6,7,7] then
                    return 1487;
                elif d eq [1,2,4,5,9] then
                    return 1488;
                elif d eq [1,2,4,6,11] then
                    return 1489;
                elif d eq [1,4,5,6,6] then
                    return 1490;
                elif d eq [1,2,4,6,8] then
                    return 1491;
                elif d eq [1,1,6,7,10] then
                    return 1492;
                elif d eq [1,2,3,3,10] then
                    return 1493;
                elif d eq [1,1,1,10,12] then
                    return 1494;
                elif d eq [2,2,4,4,8] then
                    return 1495;
                elif d eq [2,3,4,4,8] then
                    return 1496;
                elif d eq [1,1,3,10,10] then
                    return 1497;
                elif d eq [2,4,4,4,8] then
                    return 1498;
                elif d eq [4,4,4,5,5] then
                    return 1499;
                elif d eq [1,2,2,8,10] then
                    return 1500;
                elif d eq [1,1,5,6,12] then
                    return 1501;
                elif d eq [1,4,5,5,6] then
                    return 1502;
                elif d eq [1,1,2,9,12] then
                    return 1503;
                elif d eq [2,3,4,7,7] then
                    return 1504;
                elif d eq [1,1,2,10,11] then
                    return 1505;
                elif d eq [1,4,4,4,9] then
                    return 1506;
                elif d eq [1,2,2,10,10] then
                    return 1507;
                elif d eq [1,1,4,9,10] then
                    return 1508;
                elif d eq [1,3,5,6,8] then
                    return 1509;
                elif d eq [1,2,4,8,9] then
                    return 1510;
                elif d eq [1,1,5,8,10] then
                    return 1511;
                elif d eq [1,2,5,6,6] then
                    return 1512;
                elif d eq [1,2,5,6,10] then
                    return 1513;
                elif d eq [1,3,4,5,10] then
                    return 1514;
                elif d eq [1,4,4,6,8] then
                    return 1515;
                elif d eq [1,2,4,6,7] then
                    return 1516;
                elif d eq [1,1,4,6,7] then
                    return 1517;
                elif d eq [1,2,3,6,10] then
                    return 1518;
                elif d eq [2,2,3,4,10] then
                    return 1519;
                end if;
            elif n eq 7 then
                if d eq [3,3,3,5,6] then
                    return 1520;
                elif d eq [1,2,3,6,7] then
                    return 1521;
                elif d eq [2,3,3,3,9] then
                    return 1522;
                elif d eq [2,2,4,4,7] then
                    return 1523;
                elif d eq [3,3,3,6,6] then
                    return 1524;
                elif d eq [1,2,3,4,9] then
                    return 1525;
                elif d eq [2,2,4,5,7] then
                    return 1526;
                elif d eq [1,3,3,6,9] then
                    return 1527;
                elif d eq [1,3,4,6,6] then
                    return 1528;
                elif d eq [1,3,3,6,8] then
                    return 1529;
                elif d eq [1,1,3,5,12] then
                    return 1530;
                elif d eq [1,3,3,5,8] then
                    return 1531;
                elif d eq [1,1,4,4,12] then
                    return 1532;
                elif d eq [1,2,3,8,9] then
                    return 1533;
                elif d eq [1,2,3,7,9] then
                    return 1534;
                elif d eq [1,2,4,7,8] then
                    return 1535;
                elif d eq [2,3,3,6,7] then
                    return 1536;
                elif d eq [1,2,2,4,9] then
                    return 1537;
                elif d eq [1,2,3,3,9] then
                    return 1538;
                elif d eq [2,4,4,5,6] then
                    return 1539;
                elif d eq [1,2,4,6,8] then
                    return 1540;
                elif d eq [1,3,5,6,6] then
                    return 1541;
                elif d eq [1,2,2,8,10] then
                    return 1542;
                elif d eq [3,3,4,5,6] then
                    return 1543;
                elif d eq [2,2,3,6,6] then
                    return 1544;
                end if;
            elif n eq 8 then
                if d eq [1,2,3,6,6] then
                    return 1545;
                elif d eq [1,2,3,6,9] then
                    return 1546;
                elif d eq [3,3,4,4,5] then
                    return 1547;
                elif d eq [1,1,2,8,8] then
                    return 1548;
                elif d eq [2,2,2,6,8] then
                    return 1549;
                elif d eq [2,3,4,4,6] then
                    return 1550;
                elif d eq [1,3,4,5,6] then
                    return 1551;
                elif d eq [1,2,4,4,8] then
                    return 1552;
                elif d eq [2,2,4,6,6] then
                    return 1553;
                elif d eq [2,2,4,4,6] then
                    return 1554;
                elif d eq [1,4,4,5,5] then
                    return 1555;
                elif d eq [2,4,4,4,5] then
                    return 1556;
                end if;
            elif n eq 9 then
                if d eq [2,2,3,4,6] then
                    return 1557;
                elif d eq [2,3,3,4,6] then
                    return 1558;
                elif d eq [1,1,2,5,10] then
                    return 1559;
                elif d eq [1,2,4,4,8] then
                    return 1560;
                elif d eq [1,1,3,6,9] then
                    return 1561;
                elif d eq [1,2,4,5,5] then
                    return 1562;
                elif d eq [1,3,3,6,6] then
                    return 1563;
                elif d eq [1,2,3,4,8] then
                    return 1564;
                end if;
            end if;
        elif m eq 13 then
            if n eq 5 then
                if d eq [1,3,6,7,7] then
                    return 1565;
                elif d eq [2,3,4,7,11] then
                    return 1566;
                elif d eq [3,4,5,7,7] then
                    return 1567;
                elif d eq [1,1,1,12,15] then
                    return 1568;
                elif d eq [3,3,4,5,10] then
                    return 1569;
                elif d eq [1,1,6,7,8] then
                    return 1570;
                elif d eq [1,1,6,7,15] then
                    return 1571;
                elif d eq [3,4,4,7,7] then
                    return 1572;
                elif d eq [1,2,3,6,11] then
                    return 1573;
                elif d eq [1,2,3,11,13] then
                    return 1574;
                elif d eq [1,5,6,7,7] then
                    return 1575;
                elif d eq [1,3,4,7,11] then
                    return 1576;
                elif d eq [1,3,4,7,9] then
                    return 1577;
                elif d eq [1,5,6,6,7] then
                    return 1578;
                elif d eq [1,1,3,7,16] then
                    return 1579;
                elif d eq [1,3,4,7,13] then
                    return 1580;
                elif d eq [1,1,3,7,10] then
                    return 1581;
                elif d eq [1,1,3,5,14] then
                    return 1582;
                elif d eq [1,3,5,7,10] then
                    return 1583;
                elif d eq [1,3,4,4,11] then
                    return 1584;
                elif d eq [1,1,7,9,12] then
                    return 1585;
                elif d eq [1,2,3,7,13] then
                    return 1586;
                elif d eq [1,1,5,11,12] then
                    return 1587;
                elif d eq [1,2,6,7,13] then
                    return 1588;
                elif d eq [1,2,4,7,11] then
                    return 1589;
                elif d eq [1,3,7,8,8] then
                    return 1590;
                elif d eq [1,1,3,12,13] then
                    return 1591;
                elif d eq [3,3,4,7,8] then
                    return 1592;
                elif d eq [2,3,3,4,13] then
                    return 1593;
                elif d eq [3,3,4,7,10] then
                    return 1594;
                elif d eq [1,4,6,7,9] then
                    return 1595;
                elif d eq [3,3,4,4,11] then
                    return 1596;
                elif d eq [1,3,4,10,11] then
                    return 1597;
                elif d eq [1,3,3,4,14] then
                    return 1598;
                elif d eq [1,2,3,3,13] then
                    return 1599;
                elif d eq [1,2,7,8,11] then
                    return 1600;
                elif d eq [1,4,5,5,11] then
                    return 1601;
                elif d eq [1,1,2,11,15] then
                    return 1602;
                elif d eq [1,1,2,11,13] then
                    return 1603;
                elif d eq [1,1,4,9,15] then
                    return 1604;
                elif d eq [1,1,4,7,9] then
                    return 1605;
                elif d eq [1,3,7,7,10] then
                    return 1606;
                elif d eq [1,3,6,7,11] then
                    return 1607;
                end if;
            elif n eq 6 then
                if d eq [3,5,5,6,6] then
                    return 1608;
                elif d eq [1,3,4,4,10] then
                    return 1609;
                elif d eq [1,2,5,9,10] then
                    return 1610;
                elif d eq [1,3,4,6,9] then
                    return 1611;
                elif d eq [2,2,4,4,11] then
                    return 1612;
                elif d eq [2,2,4,4,10] then
                    return 1613;
                elif d eq [1,1,2,6,14] then
                    return 1614;
                elif d eq [1,2,7,8,8] then
                    return 1615;
                elif d eq [1,4,6,7,7] then
                    return 1616;
                elif d eq [2,2,6,8,8] then
                    return 1617;
                elif d eq [1,1,3,10,10] then
                    return 1618;
                elif d eq [2,2,3,6,9] then
                    return 1619;
                elif d eq [2,3,4,5,10] then
                    return 1620;
                elif d eq [1,2,4,7,11] then
                    return 1621;
                elif d eq [1,2,2,10,13] then
                    return 1622;
                elif d eq [3,4,4,5,8] then
                    return 1623;
                elif d eq [2,2,2,8,12] then
                    return 1624;
                elif d eq [1,2,6,8,10] then
                    return 1625;
                elif d eq [2,3,6,6,8] then
                    return 1626;
                elif d eq [2,4,5,7,7] then
                    return 1627;
                elif d eq [1,2,4,10,11] then
                    return 1628;
                elif d eq [3,3,5,6,8] then
                    return 1629;
                elif d eq [2,3,5,5,8] then
                    return 1630;
                elif d eq [2,2,5,6,8] then
                    return 1631;
                elif d eq [1,2,5,6,13] then
                    return 1632;
                elif d eq [1,3,5,8,10] then
                    return 1633;
                elif d eq [2,2,4,8,10] then
                    return 1634;
                elif d eq [2,3,5,8,8] then
                    return 1635;
                elif d eq [1,2,4,4,14] then
                    return 1636;
                elif d eq [1,4,4,6,10] then
                    return 1637;
                elif d eq [1,2,4,9,11] then
                    return 1638;
                elif d eq [2,3,3,6,11] then
                    return 1639;
                end if;
            elif n eq 7 then
                if d eq [2,2,4,7,8] then
                    return 1640;
                elif d eq [1,4,5,6,8] then
                    return 1641;
                elif d eq [2,3,4,6,8] then
                    return 1642;
                elif d eq [1,3,4,4,9] then
                    return 1643;
                elif d eq [1,3,3,8,9] then
                    return 1644;
                elif d eq [1,3,4,6,9] then
                    return 1645;
                elif d eq [1,1,6,7,12] then
                    return 1646;
                elif d eq [2,4,5,6,7] then
                    return 1647;
                elif d eq [2,4,5,6,6] then
                    return 1648;
                elif d eq [2,2,3,6,8] then
                    return 1649;
                elif d eq [1,1,3,10,12] then
                    return 1650;
                elif d eq [1,3,5,6,7] then
                    return 1651;
                elif d eq [1,2,6,8,8] then
                    return 1652;
                elif d eq [1,2,2,10,10] then
                    return 1653;
                elif d eq [1,3,5,6,9] then
                    return 1654;
                elif d eq [1,2,3,4,12] then
                    return 1655;
                elif d eq [1,3,6,7,7] then
                    return 1656;
                elif d eq [1,1,4,9,12] then
                    return 1657;
                elif d eq [1,2,2,6,12] then
                    return 1658;
                elif d eq [2,2,2,5,12] then
                    return 1659;
                elif d eq [1,2,5,6,8] then
                    return 1660;
                elif d eq [2,2,2,9,10] then
                    return 1661;
                elif d eq [2,2,5,6,8] then
                    return 1662;
                elif d eq [1,1,1,12,12] then
                    return 1663;
                elif d eq [2,2,5,6,10] then
                    return 1664;
                elif d eq [1,3,3,4,12] then
                    return 1665;
                elif d eq [2,2,4,8,9] then
                    return 1666;
                elif d eq [1,3,3,9,10] then
                    return 1667;
                elif d eq [1,2,4,9,9] then
                    return 1668;
                elif d eq [2,2,4,5,10] then
                    return 1669;
                elif d eq [1,2,5,8,10] then
                    return 1670;
                elif d eq [1,1,3,6,9] then
                    return 1671;
                end if;
            elif n eq 8 then
                if d eq [2,4,4,4,8] then
                    return 1672;
                elif d eq [1,2,3,4,12] then
                    return 1673;
                elif d eq [1,3,4,5,8] then
                    return 1674;
                elif d eq [2,3,4,6,6] then
                    return 1675;
                elif d eq [1,2,4,6,8] then
                    return 1676;
                elif d eq [3,4,4,5,6] then
                    return 1677;
                elif d eq [1,3,4,4,8] then
                    return 1678;
                elif d eq [1,2,6,6,9] then
                    return 1679;
                elif d eq [2,3,5,5,6] then
                    return 1680;
                elif d eq [1,4,4,6,7] then
                    return 1681;
                elif d eq [1,1,4,7,12] then
                    return 1682;
                elif d eq [2,2,3,6,9] then
                    return 1683;
                elif d eq [2,3,3,4,9] then
                    return 1684;
                elif d eq [2,2,3,6,7] then
                    return 1685;
                elif d eq [2,3,5,6,6] then
                    return 1686;
                end if;
            elif n eq 9 then
                if d eq [2,3,4,6,6] then
                    return 1687;
                elif d eq [2,3,4,4,8] then
                    return 1688;
                elif d eq [1,2,4,4,8] then
                    return 1689;
                elif d eq [2,3,5,5,5] then
                    return 1690;
                elif d eq [1,2,3,5,10] then
                    return 1691;
                elif d eq [1,4,5,5,5] then
                    return 1692;
                elif d eq [2,3,3,4,8] then
                    return 1693;
                end if;
            end if;
        elif m eq 14 then
            if n eq 5 then
                if d eq [1,4,5,5,13] then
                    return 1694;
                elif d eq [1,2,4,5,17] then
                    return 1695;
                elif d eq [1,4,5,5,11] then
                    return 1696;
                elif d eq [1,2,5,11,13] then
                    return 1697;
                elif d eq [1,1,4,9,13] then
                    return 1698;
                elif d eq [1,1,3,13,16] then
                    return 1699;
                elif d eq [1,1,7,9,16] then
                    return 1700;
                elif d eq [1,3,4,4,13] then
                    return 1701;
                elif d eq [1,3,7,10,10] then
                    return 1702;
                elif d eq [1,1,2,7,17] then
                    return 1703;
                elif d eq [1,1,4,5,14] then
                    return 1704;
                elif d eq [1,1,4,13,15] then
                    return 1705;
                elif d eq [1,1,5,6,11] then
                    return 1706;
                elif d eq [1,1,3,8,11] then
                    return 1707;
                elif d eq [1,1,1,15,16] then
                    return 1708;
                elif d eq [1,4,5,7,11] then
                    return 1709;
                elif d eq [1,3,4,7,13] then
                    return 1710;
                elif d eq [1,1,5,11,16] then
                    return 1711;
                elif d eq [1,1,7,10,15] then
                    return 1712;
                elif d eq [1,2,4,11,13] then
                    return 1713;
                elif d eq [1,4,5,8,9] then
                    return 1714;
                elif d eq [1,3,5,10,11] then
                    return 1715;
                end if;
            elif n eq 6 then
                if d eq [2,5,6,7,8] then
                    return 1716;
                elif d eq [2,3,6,7,10] then
                    return 1717;
                elif d eq [1,2,7,7,8] then
                    return 1718;
                elif d eq [1,2,5,8,12] then
                    return 1719;
                elif d eq [2,5,6,6,8] then
                    return 1720;
                elif d eq [2,4,6,8,8] then
                    return 1721;
                elif d eq [1,2,5,6,11] then
                    return 1722;
                elif d eq [4,4,4,8,8] then
                    return 1723;
                elif d eq [1,2,3,11,14] then
                    return 1724;
                elif d eq [1,2,2,12,13] then
                    return 1725;
                elif d eq [2,2,4,4,15] then
                    return 1726;
                elif d eq [1,2,2,7,15] then
                    return 1727;
                elif d eq [2,3,5,8,11] then
                    return 1728;
                elif d eq [1,2,4,5,16] then
                    return 1729;
                elif d eq [2,3,5,8,9] then
                    return 1730;
                elif d eq [1,2,4,8,12] then
                    return 1731;
                elif d eq [4,4,5,6,8] then
                    return 1732;
                elif d eq [2,2,6,7,10] then
                    return 1733;
                elif d eq [1,4,6,8,8] then
                    return 1734;
                elif d eq [2,2,6,7,8] then
                    return 1735;
                elif d eq [1,2,6,8,14] then
                    return 1736;
                elif d eq [1,2,3,10,14] then
                    return 1737;
                elif d eq [1,2,4,4,14] then
                    return 1738;
                elif d eq [2,2,5,6,12] then
                    return 1739;
                elif d eq [1,2,6,6,10] then
                    return 1740;
                elif d eq [2,2,5,6,11] then
                    return 1741;
                elif d eq [2,2,3,6,14] then
                    return 1742;
                elif d eq [1,2,2,10,14] then
                    return 1743;
                elif d eq [1,2,7,8,13] then
                    return 1744;
                elif d eq [2,2,3,6,11] then
                    return 1745;
                elif d eq [1,2,6,10,11] then
                    return 1746;
                elif d eq [2,2,3,11,12] then
                    return 1747;
                elif d eq [1,2,4,9,11] then
                    return 1748;
                elif d eq [2,2,3,8,14] then
                    return 1749;
                elif d eq [2,3,4,7,11] then
                    return 1750;
                elif d eq [2,2,7,7,12] then
                    return 1751;
                elif d eq [1,2,2,6,16] then
                    return 1752;
                elif d eq [1,2,3,3,14] then
                    return 1753;
                elif d eq [2,2,2,6,15] then
                    return 1754;
                elif d eq [2,3,6,8,10] then
                    return 1755;
                elif d eq [2,2,6,6,11] then
                    return 1756;
                elif d eq [2,2,6,8,12] then
                    return 1757;
                elif d eq [2,5,6,7,7] then
                    return 1758;
                elif d eq [2,2,6,8,9] then
                    return 1759;
                elif d eq [2,4,4,8,8] then
                    return 1760;
                elif d eq [2,2,5,9,12] then
                    return 1761;
                elif d eq [2,4,4,8,11] then
                    return 1762;
                elif d eq [2,3,4,8,11] then
                    return 1763;
                elif d eq [2,2,4,6,13] then
                    return 1764;
                elif d eq [1,2,4,5,13] then
                    return 1765;
                elif d eq [2,3,4,8,8] then
                    return 1766;
                elif d eq [2,4,6,6,8] then
                    return 1767;
                end if;
            elif n eq 7 then
                if d eq [1,2,4,6,12] then
                    return 1768;
                elif d eq [2,4,5,6,10] then
                    return 1769;
                elif d eq [1,2,4,6,10] then
                    return 1770;
                elif d eq [2,3,3,5,12] then
                    return 1771;
                elif d eq [3,5,5,6,7] then
                    return 1772;
                elif d eq [2,4,4,7,9] then
                    return 1773;
                elif d eq [1,1,6,10,12] then
                    return 1774;
                elif d eq [1,4,4,8,9] then
                    return 1775;
                elif d eq [4,5,5,6,6] then
                    return 1776;
                elif d eq [2,4,6,6,7] then
                    return 1777;
                elif d eq [1,3,4,6,10] then
                    return 1778;
                elif d eq [1,1,2,12,14] then
                    return 1779;
                elif d eq [2,3,3,9,11] then
                    return 1780;
                elif d eq [2,3,3,9,10] then
                    return 1781;
                elif d eq [2,4,6,7,8] then
                    return 1782;
                elif d eq [1,1,4,12,12] then
                    return 1783;
                elif d eq [4,4,4,5,9] then
                    return 1784;
                elif d eq [2,3,4,9,10] then
                    return 1785;
                elif d eq [3,4,4,5,10] then
                    return 1786;
                elif d eq [4,4,5,5,8] then
                    return 1787;
                elif d eq [1,2,6,8,10] then
                    return 1788;
                elif d eq [2,3,4,7,8] then
                    return 1789;
                elif d eq [1,2,4,8,14] then
                    return 1790;
                elif d eq [1,2,4,10,11] then
                    return 1791;
                elif d eq [2,4,4,5,11] then
                    return 1792;
                elif d eq [2,3,5,5,9] then
                    return 1793;
                elif d eq [2,3,6,7,8] then
                    return 1794;
                elif d eq [1,2,4,10,12] then
                    return 1795;
                elif d eq [4,4,5,6,7] then
                    return 1796;
                elif d eq [1,4,4,6,10] then
                    return 1797;
                elif d eq [1,3,3,5,12] then
                    return 1798;
                elif d eq [1,4,4,5,12] then
                    return 1799;
                elif d eq [1,2,3,6,15] then
                    return 1800;
                end if;
            elif n eq 8 then
                if d eq [1,4,5,5,8] then
                    return 1801;
                elif d eq [2,4,6,6,6] then
                    return 1802;
                elif d eq [1,2,3,3,12] then
                    return 1803;
                elif d eq [1,1,4,4,12] then
                    return 1804;
                elif d eq [2,4,4,8,8] then
                    return 1805;
                elif d eq [1,2,5,6,9] then
                    return 1806;
                elif d eq [2,2,3,7,12] then
                    return 1807;
                elif d eq [1,3,3,8,10] then
                    return 1808;
                elif d eq [3,3,4,5,10] then
                    return 1809;
                elif d eq [2,3,6,6,9] then
                    return 1810;
                elif d eq [4,4,5,6,6] then
                    return 1811;
                elif d eq [2,4,4,6,9] then
                    return 1812;
                elif d eq [2,4,4,6,8] then
                    return 1813;
                elif d eq [1,2,2,9,12] then
                    return 1814;
                elif d eq [3,3,6,6,7] then
                    return 1815;
                elif d eq [2,2,4,8,10] then
                    return 1816;
                elif d eq [2,2,6,8,8] then
                    return 1817;
                elif d eq [3,3,6,6,6] then
                    return 1818;
                elif d eq [3,4,6,6,6] then
                    return 1819;
                elif d eq [2,3,4,6,8] then
                    return 1820;
                elif d eq [1,4,6,6,8] then
                    return 1821;
                elif d eq [1,2,4,8,12] then
                    return 1822;
                elif d eq [1,3,6,6,9] then
                    return 1823;
                elif d eq [2,2,2,8,12] then
                    return 1824;
                elif d eq [1,3,3,6,12] then
                    return 1825;
                elif d eq [3,3,3,6,10] then
                    return 1826;
                elif d eq [3,3,4,6,9] then
                    return 1827;
                elif d eq [2,3,3,6,9] then
                    return 1828;
                elif d eq [2,4,6,6,7] then
                    return 1829;
                elif d eq [2,2,4,6,10] then
                    return 1830;
                end if;
            elif n eq 9 then
                if d eq [2,3,4,6,9] then
                    return 1831;
                elif d eq [1,3,4,8,8] then
                    return 1832;
                elif d eq [1,2,3,8,12] then
                    return 1833;
                elif d eq [2,5,5,5,6] then
                    return 1834;
                elif d eq [1,5,5,6,6] then
                    return 1835;
                elif d eq [2,2,3,9,9] then
                    return 1836;
                elif d eq [2,2,3,4,12] then
                    return 1837;
                elif d eq [1,2,5,5,10] then
                    return 1838;
                elif d eq [2,3,3,5,9] then
                    return 1839;
                elif d eq [1,3,4,6,8] then
                    return 1840;
                elif d eq [2,4,4,5,8] then
                    return 1841;
                elif d eq [2,3,4,6,7] then
                    return 1842;
                elif d eq [1,2,4,7,8] then
                    return 1843;
                elif d eq [3,4,5,5,6] then
                    return 1844;
                elif d eq [2,3,3,8,8] then
                    return 1845;
                elif d eq [3,4,4,6,6] then
                    return 1846;
                elif d eq [3,3,5,6,6] then
                    return 1847;
                elif d eq [2,3,4,5,8] then
                    return 1848;
                end if;
            elif n eq 10 then
                if d eq [2,2,4,5,10] then
                    return 1849;
                elif d eq [2,2,5,6,6] then
                    return 1850;
                elif d eq [3,3,4,6,6] then
                    return 1851;
                elif d eq [1,2,2,6,12] then
                    return 1852;
                elif d eq [1,2,4,5,10] then
                    return 1853;
                elif d eq [1,3,5,6,6] then
                    return 1854;
                elif d eq [1,3,4,6,9] then
                    return 1855;
                end if;
            end if;
        elif m eq 15 then
            if n eq 6 then
                if d eq [1,4,7,8,12] then
                    return 1856;
                elif d eq [1,1,2,14,17] then
                    return 1857;
                elif d eq [2,4,4,10,11] then
                    return 1858;
                elif d eq [1,1,5,14,14] then
                    return 1859;
                elif d eq [2,4,5,9,10] then
                    return 1860;
                elif d eq [1,4,5,7,14] then
                    return 1861;
                elif d eq [1,1,3,14,16] then
                    return 1862;
                elif d eq [1,1,6,13,14] then
                    return 1863;
                elif d eq [1,1,1,14,18] then
                    return 1864;
                elif d eq [2,3,4,8,10] then
                    return 1865;
                elif d eq [1,1,4,14,15] then
                    return 1866;
                elif d eq [2,5,6,7,10] then
                    return 1867;
                elif d eq [1,1,4,11,18] then
                    return 1868;
                elif d eq [2,4,6,7,10] then
                    return 1869;
                elif d eq [2,2,5,7,16] then
                    return 1870;
                elif d eq [1,3,4,4,16] then
                    return 1871;
                elif d eq [1,1,9,10,14] then
                    return 1872;
                elif d eq [1,1,7,8,18] then
                    return 1873;
                elif d eq [1,2,3,8,16] then
                    return 1874;
                elif d eq [1,5,7,8,10] then
                    return 1875;
                elif d eq [1,6,7,8,8] then
                    return 1876;
                elif d eq [1,6,7,7,8] then
                    return 1877;
                elif d eq [1,2,2,11,16] then
                    return 1878;
                elif d eq [1,3,4,9,10] then
                    return 1879;
                elif d eq [2,5,7,7,8] then
                    return 1880;
                elif d eq [1,2,5,7,12] then
                    return 1881;
                elif d eq [1,3,4,4,14] then
                    return 1882;
                elif d eq [1,3,7,8,14] then
                    return 1883;
                elif d eq [1,1,7,12,14] then
                    return 1884;
                elif d eq [1,3,3,14,14] then
                    return 1885;
                elif d eq [1,2,4,9,10] then
                    return 1886;
                elif d eq [1,2,6,7,11] then
                    return 1887;
                elif d eq [1,2,4,7,15] then
                    return 1888;
                elif d eq [1,1,8,11,14] then
                    return 1889;
                elif d eq [1,2,3,3,16] then
                    return 1890;
                elif d eq [1,2,7,8,16] then
                    return 1891;
                elif d eq [1,4,6,8,10] then
                    return 1892;
                elif d eq [1,1,2,13,18] then
                    return 1893;
                elif d eq [1,4,6,6,13] then
                    return 1894;
                elif d eq [2,4,5,7,13] then
                    return 1895;
                elif d eq [2,4,5,7,10] then
                    return 1896;
                elif d eq [2,4,6,10,10] then
                    return 1897;
                elif d eq [1,1,5,10,18] then
                    return 1898;
                elif d eq [1,2,2,13,15] then
                    return 1899;
                elif d eq [1,3,4,10,13] then
                    return 1900;
                elif d eq [1,2,7,8,9] then
                    return 1901;
                elif d eq [2,2,7,7,15] then
                    return 1902;
                elif d eq [1,4,4,8,15] then
                    return 1903;
                elif d eq [1,4,4,8,11] then
                    return 1904;
                elif d eq [4,4,6,6,10] then
                    return 1905;
                elif d eq [1,2,4,10,17] then
                    return 1906;
                elif d eq [2,2,3,9,16] then
                    return 1907;
                elif d eq [4,4,6,7,10] then
                    return 1908;
                elif d eq [1,2,4,8,14] then
                    return 1909;
                elif d eq [1,4,7,8,8] then
                    return 1910;
                elif d eq [4,6,6,7,7] then
                    return 1911;
                elif d eq [1,2,6,8,10] then
                    return 1912;
                elif d eq [2,3,4,10,13] then
                    return 1913;
                end if;
            elif n eq 7 then
                if d eq [2,3,4,8,13] then
                    return 1914;
                elif d eq [1,3,3,11,12] then
                    return 1915;
                elif d eq [3,3,6,7,9] then
                    return 1916;
                elif d eq [1,3,5,11,12] then
                    return 1917;
                elif d eq [1,1,5,12,15] then
                    return 1918;
                elif d eq [1,1,5,6,18] then
                    return 1919;
                elif d eq [3,4,5,9,9] then
                    return 1920;
                elif d eq [1,3,5,8,9] then
                    return 1921;
                elif d eq [3,4,5,7,9] then
                    return 1922;
                elif d eq [1,1,6,11,15] then
                    return 1923;
                elif d eq [1,5,6,7,9] then
                    return 1924;
                elif d eq [2,3,4,4,14] then
                    return 1925;
                elif d eq [2,4,5,8,10] then
                    return 1926;
                elif d eq [1,2,4,8,14] then
                    return 1927;
                elif d eq [1,4,5,8,10] then
                    return 1928;
                elif d eq [1,3,8,9,9] then
                    return 1929;
                elif d eq [4,6,6,6,7] then
                    return 1930;
                elif d eq [1,2,3,7,12] then
                    return 1931;
                elif d eq [1,4,5,9,12] then
                    return 1932;
                elif d eq [1,3,5,6,11] then
                    return 1933;
                elif d eq [1,2,3,6,15] then
                    return 1934;
                elif d eq [2,2,5,8,9] then
                    return 1935;
                elif d eq [1,1,8,9,15] then
                    return 1936;
                elif d eq [2,3,7,9,9] then
                    return 1937;
                elif d eq [1,5,6,6,9] then
                    return 1938;
                elif d eq [1,3,5,6,15] then
                    return 1939;
                elif d eq [2,5,6,8,8] then
                    return 1940;
                elif d eq [1,3,5,7,12] then
                    return 1941;
                elif d eq [2,2,3,6,12] then
                    return 1942;
                elif d eq [1,1,3,8,18] then
                    return 1943;
                elif d eq [1,1,3,14,15] then
                    return 1944;
                elif d eq [1,3,6,8,11] then
                    return 1945;
                elif d eq [1,1,2,15,15] then
                    return 1946;
                elif d eq [1,3,4,6,12] then
                    return 1947;
                elif d eq [1,3,5,9,10] then
                    return 1948;
                elif d eq [2,2,3,8,14] then
                    return 1949;
                elif d eq [2,3,7,8,9] then
                    return 1950;
                elif d eq [3,3,5,7,12] then
                    return 1951;
                elif d eq [2,4,6,7,11] then
                    return 1952;
                elif d eq [4,5,5,6,9] then
                    return 1953;
                elif d eq [1,2,3,3,15] then
                    return 1954;
                elif d eq [1,3,3,12,14] then
                    return 1955;
                elif d eq [2,2,4,10,11] then
                    return 1956;
                elif d eq [1,2,5,8,16] then
                    return 1957;
                elif d eq [2,2,4,7,13] then
                    return 1958;
                elif d eq [1,5,5,6,12] then
                    return 1959;
                elif d eq [2,3,4,9,11] then
                    return 1960;
                elif d eq [3,3,4,5,12] then
                    return 1961;
                elif d eq [1,2,2,12,16] then
                    return 1962;
                elif d eq [1,3,6,9,12] then
                    return 1963;
                elif d eq [2,3,3,9,9] then
                    return 1964;
                end if;
            elif n eq 8 then
                if d eq [3,4,5,8,8] then
                    return 1965;
                elif d eq [2,4,4,6,12] then
                    return 1966;
                elif d eq [3,4,6,7,7] then
                    return 1967;
                elif d eq [2,2,6,8,12] then
                    return 1968;
                elif d eq [3,4,6,7,8] then
                    return 1969;
                elif d eq [1,3,6,9,10] then
                    return 1970;
                elif d eq [1,3,4,11,12] then
                    return 1971;
                elif d eq [2,3,4,5,12] then
                    return 1972;
                elif d eq [1,4,7,8,8] then
                    return 1973;
                elif d eq [3,4,5,7,8] then
                    return 1974;
                elif d eq [2,3,6,6,10] then
                    return 1975;
                elif d eq [1,3,6,6,10] then
                    return 1976;
                elif d eq [2,4,6,8,8] then
                    return 1977;
                elif d eq [2,2,4,5,12] then
                    return 1978;
                elif d eq [1,3,4,6,11] then
                    return 1979;
                elif d eq [1,2,6,10,12] then
                    return 1980;
                elif d eq [1,4,4,9,12] then
                    return 1981;
                elif d eq [1,2,6,6,15] then
                    return 1982;
                elif d eq [3,3,4,4,12] then
                    return 1983;
                elif d eq [1,3,6,8,9] then
                    return 1984;
                elif d eq [2,3,4,6,12] then
                    return 1985;
                elif d eq [2,4,6,6,9] then
                    return 1986;
                elif d eq [3,4,5,6,9] then
                    return 1987;
                elif d eq [2,4,6,6,8] then
                    return 1988;
                elif d eq [1,3,5,8,12] then
                    return 1989;
                elif d eq [2,4,4,8,8] then
                    return 1990;
                end if;
            elif n eq 9 then
                if d eq [1,3,5,5,10] then
                    return 1991;
                elif d eq [3,3,3,4,12] then
                    return 1992;
                elif d eq [1,4,4,6,12] then
                    return 1993;
                elif d eq [1,1,4,6,16] then
                    return 1994;
                elif d eq [3,4,4,6,8] then
                    return 1995;
                elif d eq [2,3,4,4,12] then
                    return 1996;
                elif d eq [1,3,6,9,9] then
                    return 1997;
                elif d eq [1,3,3,6,12] then
                    return 1998;
                elif d eq [2,2,4,9,9] then
                    return 1999;
                elif d eq [3,4,4,4,10] then
                    return 2000;
                elif d eq [2,3,6,6,8] then
                    return 2001;
                elif d eq [3,3,4,6,9] then
                    return 2002;
                elif d eq [1,2,3,8,12] then
                    return 2003;
                elif d eq [1,1,5,8,15] then
                    return 2004;
                elif d eq [1,3,6,7,9] then
                    return 2005;
                elif d eq [1,3,3,10,10] then
                    return 2006;
                elif d eq [1,3,4,9,12] then
                    return 2007;
                elif d eq [1,2,3,12,12] then
                    return 2008;
                elif d eq [1,1,3,10,15] then
                    return 2009;
                elif d eq [1,3,4,9,9] then
                    return 2010;
                elif d eq [2,4,4,5,10] then
                    return 2011;
                elif d eq [2,4,6,6,9] then
                    return 2012;
                elif d eq [2,2,3,6,10] then
                    return 2013;
                elif d eq [1,3,4,8,12] then
                    return 2014;
                elif d eq [1,2,4,8,8] then
                    return 2015;
                elif d eq [1,4,6,7,8] then
                    return 2016;
                end if;
            elif n eq 10 then
                if d eq [1,2,5,5,10] then
                    return 2017;
                elif d eq [1,5,6,6,6] then
                    return 2018;
                elif d eq [2,3,3,4,12] then
                    return 2019;
                elif d eq [3,3,6,6,6] then
                    return 2020;
                elif d eq [1,2,5,6,10] then
                    return 2021;
                elif d eq [1,2,4,9,12] then
                    return 2022;
                elif d eq [2,4,6,6,6] then
                    return 2023;
                elif d eq [1,3,3,8,12] then
                    return 2024;
                end if;
            end if;
        elif m eq 16 then
            if n eq 11 then
                if d eq [3,3,5,6,10] then
                    return 2025;
                elif d eq [2,2,3,10,10] then
                    return 2026;
                elif d eq [1,2,3,7,14] then
                    return 2027;
                elif d eq [3,4,5,6,8] then
                    return 2028;
                elif d eq [2,4,5,5,10] then
                    return 2029;
                elif d eq [1,2,5,6,12] then
                    return 2030;
                elif d eq [2,3,6,7,7] then
                    return 2031;
                elif d eq [2,3,4,6,12] then
                    return 2032;
                elif d eq [1,4,6,7,7] then
                    return 2033;
                elif d eq [1,2,6,8,12] then
                    return 2034;
                elif d eq [1,2,3,5,15] then
                    return 2035;
                end if;
            elif n eq 6 then
                if d eq [1,2,3,10,17] then
                    return 2036;
                elif d eq [1,1,4,6,16] then
                    return 2037;
                elif d eq [1,2,5,8,13] then
                    return 2038;
                elif d eq [1,1,2,8,20] then
                    return 2039;
                end if;
            elif n eq 7 then
                if d eq [1,2,2,14,16] then
                    return 2040;
                elif d eq [2,6,7,8,8] then
                    return 2041;
                elif d eq [2,2,5,10,12] then
                    return 2042;
                elif d eq [1,3,3,10,15] then
                    return 2043;
                elif d eq [3,3,4,5,15] then
                    return 2044;
                elif d eq [2,3,4,9,15] then
                    return 2045;
                elif d eq [2,2,7,10,14] then
                    return 2046;
                elif d eq [1,3,5,6,15] then
                    return 2047;
                elif d eq [2,2,2,7,18] then
                    return 2048;
                elif d eq [2,2,4,13,14] then
                    return 2049;
                elif d eq [2,2,7,10,10] then
                    return 2050;
                elif d eq [2,3,4,8,11] then
                    return 2051;
                elif d eq [2,2,4,5,18] then
                    return 2052;
                elif d eq [2,3,7,8,14] then
                    return 2053;
                elif d eq [2,2,6,7,14] then
                    return 2054;
                elif d eq [1,1,3,9,12] then
                    return 2055;
                elif d eq [2,3,4,8,14] then
                    return 2056;
                elif d eq [2,3,7,8,10] then
                    return 2057;
                elif d eq [1,3,3,7,16] then
                    return 2058;
                elif d eq [1,3,9,10,10] then
                    return 2059;
                elif d eq [3,3,4,8,14] then
                    return 2060;
                elif d eq [1,4,7,9,12] then
                    return 2061;
                elif d eq [1,1,3,6,18] then
                    return 2062;
                elif d eq [3,3,5,6,13] then
                    return 2063;
                elif d eq [1,3,4,4,15] then
                    return 2064;
                elif d eq [1,3,7,9,12] then
                    return 2065;
                elif d eq [2,4,6,9,10] then
                    return 2066;
                elif d eq [3,3,5,9,10] then
                    return 2067;
                elif d eq [3,3,4,7,12] then
                    return 2068;
                elif d eq [3,3,5,7,12] then
                    return 2069;
                elif d eq [3,3,4,7,15] then
                    return 2070;
                elif d eq [3,4,6,7,11] then
                    return 2071;
                elif d eq [1,2,9,9,15] then
                    return 2072;
                elif d eq [2,2,7,8,12] then
                    return 2073;
                elif d eq [1,3,3,5,18] then
                    return 2074;
                elif d eq [1,2,2,8,18] then
                    return 2075;
                elif d eq [2,2,8,8,9] then
                    return 2076;
                elif d eq [2,2,8,8,15] then
                    return 2077;
                elif d eq [2,3,3,8,16] then
                    return 2078;
                elif d eq [2,2,3,14,14] then
                    return 2079;
                elif d eq [2,2,3,6,14] then
                    return 2080;
                elif d eq [1,3,6,12,13] then
                    return 2081;
                elif d eq [3,3,3,5,16] then
                    return 2082;
                elif d eq [2,2,6,11,14] then
                    return 2083;
                elif d eq [2,4,6,8,13] then
                    return 2084;
                elif d eq [2,4,6,8,11] then
                    return 2085;
                elif d eq [2,2,8,9,14] then
                    return 2086;
                elif d eq [2,2,4,11,13] then
                    return 2087;
                elif d eq [2,2,2,14,15] then
                    return 2088;
                elif d eq [2,2,4,7,16] then
                    return 2089;
                elif d eq [1,3,3,12,14] then
                    return 2090;
                elif d eq [1,3,6,9,11] then
                    return 2091;
                elif d eq [1,3,6,7,13] then
                    return 2092;
                elif d eq [1,3,4,13,15] then
                    return 2093;
                elif d eq [3,4,7,7,9] then
                    return 2094;
                end if;
            elif n eq 8 then
                if d eq [3,4,7,7,8] then
                    return 2095;
                elif d eq [2,3,6,7,11] then
                    return 2096;
                elif d eq [1,4,4,9,12] then
                    return 2097;
                elif d eq [1,4,5,7,12] then
                    return 2098;
                elif d eq [2,3,4,7,12] then
                    return 2099;
                elif d eq [2,4,4,6,14] then
                    return 2100;
                elif d eq [3,4,4,7,12] then
                    return 2101;
                elif d eq [2,4,5,6,12] then
                    return 2102;
                elif d eq [1,3,4,7,16] then
                    return 2103;
                elif d eq [2,2,3,12,14] then
                    return 2104;
                elif d eq [2,2,5,12,12] then
                    return 2105;
                elif d eq [2,2,5,9,15] then
                    return 2106;
                elif d eq [3,4,6,6,11] then
                    return 2107;
                elif d eq [4,5,6,6,9] then
                    return 2108;
                elif d eq [1,1,4,8,11] then
                    return 2109;
                elif d eq [2,6,6,8,9] then
                    return 2110;
                elif d eq [2,6,6,8,8] then
                    return 2111;
                elif d eq [2,3,5,9,12] then
                    return 2112;
                elif d eq [2,4,6,6,10] then
                    return 2113;
                elif d eq [1,2,6,12,12] then
                    return 2114;
                elif d eq [2,3,4,4,16] then
                    return 2115;
                elif d eq [2,2,6,8,15] then
                    return 2116;
                elif d eq [2,3,5,5,12] then
                    return 2117;
                elif d eq [2,3,6,8,10] then
                    return 2118;
                elif d eq [4,4,4,6,12] then
                    return 2119;
                elif d eq [2,3,6,8,12] then
                    return 2120;
                elif d eq [2,3,3,9,10] then
                    return 2121;
                elif d eq [2,2,2,12,15] then
                    return 2122;
                elif d eq [1,3,4,9,16] then
                    return 2123;
                elif d eq [1,2,4,12,16] then
                    return 2124;
                elif d eq [4,4,6,8,8] then
                    return 2125;
                elif d eq [2,2,3,6,13] then
                    return 2126;
                elif d eq [4,6,6,6,8] then
                    return 2127;
                elif d eq [2,2,6,11,12] then
                    return 2128;
                elif d eq [1,4,5,5,12] then
                    return 2129;
                elif d eq [2,2,8,9,12] then
                    return 2130;
                elif d eq [2,4,4,8,12] then
                    return 2131;
                elif d eq [1,4,4,10,12] then
                    return 2132;
                elif d eq [2,2,3,11,15] then
                    return 2133;
                elif d eq [4,4,6,6,10] then
                    return 2134;
                elif d eq [2,4,4,8,10] then
                    return 2135;
                elif d eq [2,3,4,11,12] then
                    return 2136;
                elif d eq [3,5,6,8,8] then
                    return 2137;
                end if;
            elif n eq 9 then
                if d eq [1,4,6,8,9] then
                    return 2138;
                elif d eq [4,5,6,6,8] then
                    return 2139;
                elif d eq [2,3,3,5,15] then
                    return 2140;
                elif d eq [3,6,6,6,8] then
                    return 2141;
                elif d eq [1,4,6,8,8] then
                    return 2142;
                elif d eq [3,4,4,6,12] then
                    return 2143;
                elif d eq [5,6,6,6,6] then
                    return 2144;
                elif d eq [2,4,7,8,8] then
                    return 2145;
                elif d eq [3,4,6,6,9] then
                    return 2146;
                elif d eq [2,3,6,8,12] then
                    return 2147;
                elif d eq [2,3,3,10,12] then
                    return 2148;
                elif d eq [1,5,5,7,10] then
                    return 2149;
                elif d eq [2,3,4,10,12] then
                    return 2150;
                elif d eq [1,2,8,9,12] then
                    return 2151;
                elif d eq [1,3,3,10,15] then
                    return 2152;
                elif d eq [2,6,6,6,9] then
                    return 2153;
                elif d eq [1,2,5,10,15] then
                    return 2154;
                elif d eq [2,5,6,6,10] then
                    return 2155;
                elif d eq [3,3,4,8,12] then
                    return 2156;
                elif d eq [1,3,4,4,16] then
                    return 2157;
                elif d eq [3,4,5,6,10] then
                    return 2158;
                elif d eq [2,4,6,6,9] then
                    return 2159;
                elif d eq [4,4,5,7,8] then
                    return 2160;
                end if;
            elif n eq 10 then
                if d eq [4,4,4,8,8] then
                    return 2161;
                elif d eq [2,3,6,6,9] then
                    return 2162;
                elif d eq [2,3,5,6,10] then
                    return 2163;
                elif d eq [2,4,6,8,8] then
                    return 2164;
                elif d eq [1,2,3,12,12] then
                    return 2165;
                elif d eq [2,2,3,5,15] then
                    return 2166;
                elif d eq [2,3,5,5,10] then
                    return 2167;
                elif d eq [2,3,6,9,9] then
                    return 2168;
                elif d eq [2,2,6,8,12] then
                    return 2169;
                elif d eq [2,2,6,8,8] then
                    return 2170;
                elif d eq [2,4,6,6,8] then
                    return 2171;
                elif d eq [1,3,4,9,12] then
                    return 2172;
                elif d eq [1,4,5,5,10] then
                    return 2173;
                elif d eq [2,3,3,8,9] then
                    return 2174;
                elif d eq [2,5,6,6,9] then
                    return 2175;
                elif d eq [1,3,4,4,12] then
                    return 2176;
                end if;
            end if;
        elif m eq 17 then
            if n eq 11 then
                if d eq [1,1,8,8,16] then
                    return 2177;
                elif d eq [1,3,6,8,12] then
                    return 2178;
                elif d eq [1,1,4,12,16] then
                    return 2179;
                elif d eq [3,3,6,6,9] then
                    return 2180;
                elif d eq [2,3,4,6,12] then
                    return 2181;
                elif d eq [2,3,4,8,9] then
                    return 2182;
                elif d eq [3,3,6,9,9] then
                    return 2183;
                elif d eq [1,2,6,6,10] then
                    return 2184;
                elif d eq [2,3,4,8,12] then
                    return 2185;
                elif d eq [1,2,3,12,12] then
                    return 2186;
                end if;
            elif n eq 12 then
                if d eq [1,2,4,7,14] then
                    return 2187;
                elif d eq [2,2,6,8,8] then
                    return 2188;
                elif d eq [1,2,2,8,16] then
                    return 2189;
                elif d eq [1,3,6,8,8] then
                    return 2190;
                elif d eq [1,2,3,10,15] then
                    return 2191;
                elif d eq [3,4,5,6,10] then
                    return 2192;
                elif d eq [2,2,4,7,14] then
                    return 2193;
                end if;
            elif n eq 7 then
                if d eq [1,2,4,10,12] then
                    return 2194;
                elif d eq [1,4,6,8,13] then
                    return 2195;
                elif d eq [1,2,5,8,16] then
                    return 2196;
                elif d eq [1,4,5,8,18] then
                    return 2197;
                elif d eq [1,1,8,14,16] then
                    return 2198;
                elif d eq [1,4,4,10,18] then
                    return 2199;
                elif d eq [1,4,6,8,14] then
                    return 2200;
                elif d eq [1,1,10,12,16] then
                    return 2201;
                elif d eq [1,1,2,16,20] then
                    return 2202;
                elif d eq [1,2,4,8,18] then
                    return 2203;
                elif d eq [1,1,4,16,18] then
                    return 2204;
                elif d eq [2,2,6,10,13] then
                    return 2205;
                end if;
            elif n eq 8 then
                if d eq [4,4,5,8,12] then
                    return 2206;
                elif d eq [2,3,6,7,13] then
                    return 2207;
                elif d eq [4,5,6,8,9] then
                    return 2208;
                elif d eq [2,3,4,8,12] then
                    return 2209;
                elif d eq [2,3,3,9,12] then
                    return 2210;
                elif d eq [3,3,5,10,12] then
                    return 2211;
                elif d eq [4,4,4,4,15] then
                    return 2212;
                elif d eq [2,3,3,13,14] then
                    return 2213;
                elif d eq [1,4,5,11,12] then
                    return 2214;
                elif d eq [4,4,4,8,11] then
                    return 2215;
                elif d eq [3,4,5,9,10] then
                    return 2216;
                elif d eq [1,4,4,7,15] then
                    return 2217;
                elif d eq [3,4,6,8,12] then
                    return 2218;
                elif d eq [1,3,4,4,16] then
                    return 2219;
                elif d eq [1,3,7,12,14] then
                    return 2220;
                elif d eq [1,3,7,12,12] then
                    return 2221;
                elif d eq [1,4,6,8,12] then
                    return 2222;
                elif d eq [2,3,6,10,11] then
                    return 2223;
                elif d eq [1,2,6,13,15] then
                    return 2224;
                elif d eq [1,2,6,8,12] then
                    return 2225;
                elif d eq [3,4,4,4,16] then
                    return 2226;
                elif d eq [2,3,3,12,16] then
                    return 2227;
                elif d eq [2,3,6,9,12] then
                    return 2228;
                elif d eq [2,2,3,10,18] then
                    return 2229;
                elif d eq [1,2,6,6,15] then
                    return 2230;
                elif d eq [1,2,8,11,16] then
                    return 2231;
                elif d eq [2,2,4,8,16] then
                    return 2232;
                elif d eq [4,5,6,9,9] then
                    return 2233;
                elif d eq [3,3,7,8,14] then
                    return 2234;
                elif d eq [1,4,4,12,16] then
                    return 2235;
                elif d eq [4,4,4,7,12] then
                    return 2236;
                elif d eq [2,3,3,12,15] then
                    return 2237;
                elif d eq [2,3,6,12,13] then
                    return 2238;
                elif d eq [1,2,3,3,18] then
                    return 2239;
                elif d eq [1,2,4,6,20] then
                    return 2240;
                elif d eq [3,4,4,11,12] then
                    return 2241;
                elif d eq [2,4,4,8,16] then
                    return 2242;
                elif d eq [1,2,4,14,16] then
                    return 2243;
                elif d eq [1,4,7,8,11] then
                    return 2244;
                elif d eq [3,3,4,11,14] then
                    return 2245;
                elif d eq [1,3,3,14,14] then
                    return 2246;
                elif d eq [3,3,6,8,12] then
                    return 2247;
                elif d eq [3,3,6,9,14] then
                    return 2248;
                elif d eq [1,4,8,9,12] then
                    return 2249;
                elif d eq [3,3,3,12,14] then
                    return 2250;
                elif d eq [2,4,5,9,15] then
                    return 2251;
                elif d eq [2,4,8,9,12] then
                    return 2252;
                elif d eq [3,3,4,8,12] then
                    return 2253;
                elif d eq [2,6,7,9,9] then
                    return 2254;
                elif d eq [1,2,2,12,18] then
                    return 2255;
                elif d eq [4,4,6,8,12] then
                    return 2256;
                elif d eq [2,6,7,9,10] then
                    return 2257;
                end if;
            elif n eq 9 then
                if d eq [1,4,6,8,12] then
                    return 2258;
                elif d eq [3,5,5,5,12] then
                    return 2259;
                elif d eq [1,5,5,7,12] then
                    return 2260;
                elif d eq [3,3,8,9,9] then
                    return 2261;
                elif d eq [1,2,8,9,16] then
                    return 2262;
                elif d eq [1,4,6,8,11] then
                    return 2263;
                elif d eq [1,2,8,8,9] then
                    return 2264;
                elif d eq [1,2,4,12,15] then
                    return 2265;
                elif d eq [1,3,4,6,14] then
                    return 2266;
                elif d eq [4,6,6,7,9] then
                    return 2267;
                elif d eq [2,5,5,8,12] then
                    return 2268;
                elif d eq [1,2,5,5,15] then
                    return 2269;
                elif d eq [2,3,3,9,11] then
                    return 2270;
                elif d eq [2,4,5,8,10] then
                    return 2271;
                elif d eq [3,5,6,8,9] then
                    return 2272;
                elif d eq [3,4,6,8,9] then
                    return 2273;
                elif d eq [2,3,3,9,15] then
                    return 2274;
                elif d eq [2,2,5,11,15] then
                    return 2275;
                elif d eq [1,2,4,5,16] then
                    return 2276;
                elif d eq [1,2,2,15,15] then
                    return 2277;
                elif d eq [2,3,5,9,12] then
                    return 2278;
                elif d eq [4,5,6,8,8] then
                    return 2279;
                elif d eq [1,3,5,10,15] then
                    return 2280;
                elif d eq [2,3,6,9,9] then
                    return 2281;
                elif d eq [1,1,5,7,20] then
                    return 2282;
                elif d eq [3,3,5,6,15] then
                    return 2283;
                elif d eq [3,3,3,8,15] then
                    return 2284;
                elif d eq [2,3,5,5,15] then
                    return 2285;
                elif d eq [1,4,6,10,12] then
                    return 2286;
                elif d eq [2,4,6,9,12] then
                    return 2287;
                elif d eq [2,3,4,8,12] then
                    return 2288;
                elif d eq [1,2,4,14,16] then
                    return 2289;
                elif d eq [2,4,7,8,9] then
                    return 2290;
                elif d eq [3,5,5,7,10] then
                    return 2291;
                end if;
            elif n eq 10 then
                if d eq [1,5,6,6,10] then
                    return 2292;
                elif d eq [3,4,6,7,9] then
                    return 2293;
                elif d eq [2,6,6,8,8] then
                    return 2294;
                elif d eq [1,4,5,6,15] then
                    return 2295;
                elif d eq [1,3,6,9,10] then
                    return 2296;
                elif d eq [2,3,4,12,12] then
                    return 2297;
                elif d eq [4,4,6,8,8] then
                    return 2298;
                elif d eq [3,4,5,7,10] then
                    return 2299;
                elif d eq [1,3,4,10,15] then
                    return 2300;
                elif d eq [3,4,6,9,9] then
                    return 2301;
                elif d eq [2,4,6,8,12] then
                    return 2302;
                elif d eq [1,2,6,10,15] then
                    return 2303;
                elif d eq [2,4,5,10,10] then
                    return 2304;
                elif d eq [1,3,8,9,12] then
                    return 2305;
                elif d eq [1,4,6,10,10] then
                    return 2306;
                elif d eq [2,2,4,8,16] then
                    return 2307;
                elif d eq [2,4,4,8,10] then
                    return 2308;
                elif d eq [3,4,4,10,10] then
                    return 2309;
                elif d eq [4,6,6,6,8] then
                    return 2310;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if d eq [1,4,6,7,12] then
                    return 2311;
                elif d eq [2,4,5,6,15] then
                    return 2312;
                elif d eq [1,4,6,6,12] then
                    return 2313;
                elif d eq [1,3,5,10,15] then
                    return 2314;
                elif d eq [2,4,6,9,12] then
                    return 2315;
                elif d eq [2,2,6,10,15] then
                    return 2316;
                elif d eq [1,3,4,12,16] then
                    return 2317;
                elif d eq [1,3,5,12,15] then
                    return 2318;
                elif d eq [2,5,6,8,10] then
                    return 2319;
                elif d eq [2,6,6,8,9] then
                    return 2320;
                elif d eq [2,5,5,6,12] then
                    return 2321;
                elif d eq [4,4,5,6,12] then
                    return 2322;
                elif d eq [1,2,3,12,18] then
                    return 2323;
                elif d eq [3,3,6,8,12] then
                    return 2324;
                end if;
            elif n eq 12 then
                if d eq [1,4,6,9,12] then
                    return 2325;
                elif d eq [1,1,3,12,18] then
                    return 2326;
                elif d eq [1,1,6,9,18] then
                    return 2327;
                elif d eq [3,3,4,6,12] then
                    return 2328;
                end if;
            elif n eq 8 then
                if d eq [1,1,4,17,20] then
                    return 2329;
                elif d eq [1,1,9,12,20] then
                    return 2330;
                elif d eq [1,4,5,8,16] then
                    return 2331;
                elif d eq [1,3,6,8,16] then
                    return 2332;
                elif d eq [1,3,5,12,16] then
                    return 2333;
                elif d eq [2,6,6,8,14] then
                    return 2334;
                elif d eq [1,2,5,16,16] then
                    return 2335;
                elif d eq [2,2,8,10,10] then
                    return 2336;
                elif d eq [2,3,4,13,15] then
                    return 2337;
                elif d eq [2,2,2,16,18] then
                    return 2338;
                elif d eq [1,1,1,20,20] then
                    return 2339;
                elif d eq [2,2,6,14,16] then
                    return 2340;
                elif d eq [1,1,5,16,20] then
                    return 2341;
                elif d eq [2,2,8,12,16] then
                    return 2342;
                elif d eq [1,1,8,13,20] then
                    return 2343;
                elif d eq [1,4,5,5,16] then
                    return 2344;
                elif d eq [2,2,4,16,16] then
                    return 2345;
                elif d eq [1,3,4,4,18] then
                    return 2346;
                elif d eq [2,3,9,9,10] then
                    return 2347;
                elif d eq [1,3,4,12,16] then
                    return 2348;
                elif d eq [2,2,8,10,18] then
                    return 2349;
                elif d eq [2,6,8,8,10] then
                    return 2350;
                end if;
            elif n eq 9 then
                if d eq [2,4,4,9,16] then
                    return 2351;
                elif d eq [3,6,7,9,9] then
                    return 2352;
                elif d eq [2,3,4,8,13] then
                    return 2353;
                elif d eq [3,4,9,9,10] then
                    return 2354;
                elif d eq [3,3,4,10,16] then
                    return 2355;
                elif d eq [2,6,8,8,9] then
                    return 2356;
                elif d eq [2,2,4,12,15] then
                    return 2357;
                elif d eq [1,4,5,11,15] then
                    return 2358;
                elif d eq [3,4,4,10,14] then
                    return 2359;
                elif d eq [1,3,7,9,12] then
                    return 2360;
                elif d eq [1,3,9,12,12] then
                    return 2361;
                elif d eq [1,3,8,10,16] then
                    return 2362;
                elif d eq [3,4,4,5,16] then
                    return 2363;
                elif d eq [1,4,4,12,14] then
                    return 2364;
                elif d eq [1,3,3,15,18] then
                    return 2365;
                elif d eq [2,6,7,8,12] then
                    return 2366;
                elif d eq [2,5,8,9,12] then
                    return 2367;
                elif d eq [1,1,4,15,20] then
                    return 2368;
                elif d eq [2,2,3,6,16] then
                    return 2369;
                elif d eq [1,1,9,12,18] then
                    return 2370;
                elif d eq [3,3,4,9,12] then
                    return 2371;
                elif d eq [1,3,4,16,16] then
                    return 2372;
                elif d eq [1,1,5,14,20] then
                    return 2373;
                elif d eq [1,4,6,8,16] then
                    return 2374;
                elif d eq [1,4,9,9,12] then
                    return 2375;
                elif d eq [1,1,3,18,18] then
                    return 2376;
                elif d eq [3,3,7,9,10] then
                    return 2377;
                elif d eq [2,3,6,12,14] then
                    return 2378;
                elif d eq [2,4,7,8,11] then
                    return 2379;
                elif d eq [4,4,6,7,14] then
                    return 2380;
                elif d eq [2,4,4,11,14] then
                    return 2381;
                elif d eq [1,4,4,10,12] then
                    return 2382;
                elif d eq [1,4,5,5,15] then
                    return 2383;
                elif d eq [4,6,7,9,9] then
                    return 2384;
                elif d eq [1,5,7,9,10] then
                    return 2385;
                elif d eq [1,2,8,12,16] then
                    return 2386;
                elif d eq [2,4,4,11,16] then
                    return 2387;
                elif d eq [1,1,9,10,20] then
                    return 2388;
                elif d eq [1,4,5,10,11] then
                    return 2389;
                elif d eq [1,4,5,7,15] then
                    return 2390;
                elif d eq [3,4,8,8,10] then
                    return 2391;
                elif d eq [1,2,4,12,20] then
                    return 2392;
                elif d eq [2,4,6,9,15] then
                    return 2393;
                elif d eq [1,3,6,9,15] then
                    return 2394;
                elif d eq [1,1,6,15,18] then
                    return 2395;
                elif d eq [4,4,5,8,14] then
                    return 2396;
                elif d eq [1,3,6,9,12] then
                    return 2397;
                end if;
            elif n eq 10 then
                if d eq [4,4,6,6,12] then
                    return 2398;
                elif d eq [2,4,4,6,15] then
                    return 2399;
                elif d eq [1,3,7,8,12] then
                    return 2400;
                elif d eq [2,3,3,6,18] then
                    return 2401;
                elif d eq [3,6,6,6,12] then
                    return 2402;
                elif d eq [4,5,5,8,10] then
                    return 2403;
                elif d eq [2,2,5,10,10] then
                    return 2404;
                elif d eq [1,5,6,6,12] then
                    return 2405;
                elif d eq [2,3,6,12,12] then
                    return 2406;
                elif d eq [6,6,6,6,9] then
                    return 2407;
                elif d eq [3,3,5,12,12] then
                    return 2408;
                elif d eq [2,4,4,8,16] then
                    return 2409;
                elif d eq [3,4,4,5,15] then
                    return 2410;
                elif d eq [4,4,6,8,12] then
                    return 2411;
                elif d eq [1,4,5,12,12] then
                    return 2412;
                elif d eq [2,5,7,7,10] then
                    return 2413;
                elif d eq [2,3,5,6,15] then
                    return 2414;
                elif d eq [2,2,4,10,15] then
                    return 2415;
                elif d eq [3,3,6,7,12] then
                    return 2416;
                elif d eq [2,2,4,8,16] then
                    return 2417;
                elif d eq [3,3,4,12,12] then
                    return 2418;
                elif d eq [1,3,3,12,18] then
                    return 2419;
                elif d eq [4,4,8,8,8] then
                    return 2420;
                elif d eq [2,3,4,9,12] then
                    return 2421;
                elif d eq [1,2,6,11,18] then
                    return 2422;
                elif d eq [1,2,6,10,18] then
                    return 2423;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 17 then
            if n eq 11 then
                if d eq [1,1,2,4,8,8] then
                    return 2424;
                elif d eq [1,2,3,3,6,6] then
                    return 2425;
                elif d eq [1,2,2,4,4,8] then
                    return 2426;
                elif d eq [1,2,2,3,6,9] then
                    return 2427;
                elif d eq [2,2,3,3,3,6] then
                    return 2428;
                elif d eq [1,1,2,2,5,10] then
                    return 2429;
                elif d eq [1,1,2,5,5,6] then
                    return 2430;
                elif d eq [2,2,2,4,4,4] then
                    return 2431;
                end if;
            elif n eq 8 then
                if d eq [1,2,2,2,9,10] then
                    return 2432;
                elif d eq [2,2,4,4,6,7] then
                    return 2433;
                elif d eq [2,2,3,5,6,6] then
                    return 2434;
                elif d eq [2,2,3,4,5,8] then
                    return 2435;
                elif d eq [1,2,2,6,6,7] then
                    return 2436;
                elif d eq [2,2,2,3,5,10] then
                    return 2437;
                elif d eq [2,4,4,4,4,6] then
                    return 2438;
                elif d eq [1,2,3,4,6,8] then
                    return 2439;
                elif d eq [1,2,2,3,5,12] then
                    return 2440;
                elif d eq [2,2,2,3,4,10] then
                    return 2441;
                elif d eq [1,1,3,6,7,7] then
                    return 2442;
                elif d eq [1,2,2,5,6,8] then
                    return 2443;
                elif d eq [1,1,2,3,5,15] then
                    return 2444;
                elif d eq [1,2,3,4,5,9] then
                    return 2445;
                elif d eq [1,2,3,4,5,8] then
                    return 2446;
                elif d eq [1,2,3,4,6,6] then
                    return 2447;
                elif d eq [2,2,2,4,6,7] then
                    return 2448;
                elif d eq [1,2,3,4,4,8] then
                    return 2449;
                elif d eq [4,4,4,4,4,4] then
                    return 2450;
                elif d eq [1,1,2,2,6,12] then
                    return 2451;
                elif d eq [2,2,2,4,6,10] then
                    return 2452;
                elif d eq [1,1,2,2,9,12] then
                    return 2453;
                elif d eq [1,1,1,3,3,15] then
                    return 2454;
                elif d eq [2,2,3,4,6,6] then
                    return 2455;
                elif d eq [1,2,4,4,4,8] then
                    return 2456;
                elif d eq [1,2,3,3,4,11] then
                    return 2457;
                elif d eq [1,1,2,4,7,8] then
                    return 2458;
                elif d eq [1,1,2,3,8,14] then
                    return 2459;
                elif d eq [1,2,2,4,4,8] then
                    return 2460;
                elif d eq [1,1,3,3,5,5] then
                    return 2461;
                elif d eq [2,2,2,4,7,7] then
                    return 2462;
                elif d eq [1,1,2,2,8,10] then
                    return 2463;
                elif d eq [1,1,2,3,8,10] then
                    return 2464;
                elif d eq [1,2,2,2,5,10] then
                    return 2465;
                elif d eq [1,2,2,4,4,4] then
                    return 2466;
                elif d eq [1,2,3,3,5,5] then
                    return 2467;
                elif d eq [1,1,2,2,8,14] then
                    return 2468;
                elif d eq [1,1,2,4,6,12] then
                    return 2469;
                elif d eq [2,2,2,2,7,10] then
                    return 2470;
                elif d eq [2,2,4,4,5,6] then
                    return 2471;
                elif d eq [1,2,2,3,8,10] then
                    return 2472;
                elif d eq [1,1,3,4,6,6] then
                    return 2473;
                elif d eq [1,1,3,3,3,11] then
                    return 2474;
                elif d eq [1,2,3,3,5,9] then
                    return 2475;
                elif d eq [1,1,1,3,9,15] then
                    return 2476;
                elif d eq [1,1,3,3,3,13] then
                    return 2477;
                elif d eq [1,1,2,2,2,16] then
                    return 2478;
                elif d eq [1,2,2,2,8,12] then
                    return 2479;
                elif d eq [1,1,3,3,7,11] then
                    return 2480;
                elif d eq [1,2,2,4,6,10] then
                    return 2481;
                end if;
            elif n eq 9 then
                if d eq [2,3,3,3,4,8] then
                    return 2482;
                elif d eq [2,2,3,3,6,8] then
                    return 2483;
                elif d eq [1,2,2,2,9,9] then
                    return 2484;
                elif d eq [1,1,1,2,12,12] then
                    return 2485;
                elif d eq [1,3,3,4,4,7] then
                    return 2486;
                elif d eq [2,2,4,4,6,6] then
                    return 2487;
                elif d eq [1,2,2,4,8,8] then
                    return 2488;
                elif d eq [1,2,2,2,4,12] then
                    return 2489;
                elif d eq [2,2,3,4,4,7] then
                    return 2490;
                elif d eq [2,3,3,3,5,6] then
                    return 2491;
                elif d eq [1,2,2,5,6,6] then
                    return 2492;
                elif d eq [1,2,4,4,5,7] then
                    return 2493;
                elif d eq [1,3,3,4,4,8] then
                    return 2494;
                elif d eq [1,1,2,6,6,9] then
                    return 2495;
                elif d eq [1,2,2,3,3,10] then
                    return 2496;
                elif d eq [2,2,2,3,4,8] then
                    return 2497;
                elif d eq [1,2,3,4,6,9] then
                    return 2498;
                elif d eq [1,1,4,4,6,8] then
                    return 2499;
                elif d eq [1,2,2,5,6,9] then
                    return 2500;
                elif d eq [2,2,3,3,5,9] then
                    return 2501;
                elif d eq [1,2,3,4,6,7] then
                    return 2502;
                elif d eq [1,2,4,5,6,6] then
                    return 2503;
                elif d eq [1,2,3,3,6,6] then
                    return 2504;
                elif d eq [2,2,3,3,4,9] then
                    return 2505;
                elif d eq [1,2,2,3,4,9] then
                    return 2506;
                elif d eq [1,2,3,4,4,8] then
                    return 2507;
                elif d eq [1,2,2,3,4,12] then
                    return 2508;
                elif d eq [2,2,3,3,4,7] then
                    return 2509;
                elif d eq [1,2,2,3,6,7] then
                    return 2510;
                elif d eq [1,1,2,2,6,12] then
                    return 2511;
                elif d eq [1,2,4,4,6,6] then
                    return 2512;
                elif d eq [1,1,2,2,9,12] then
                    return 2513;
                elif d eq [1,1,4,4,7,7] then
                    return 2514;
                elif d eq [1,1,2,4,7,8] then
                    return 2515;
                elif d eq [1,1,2,3,8,12] then
                    return 2516;
                elif d eq [1,2,2,4,4,8] then
                    return 2517;
                elif d eq [1,1,4,4,4,7] then
                    return 2518;
                elif d eq [1,2,2,4,4,10] then
                    return 2519;
                elif d eq [1,1,1,4,4,16] then
                    return 2520;
                elif d eq [1,1,5,6,6,6] then
                    return 2521;
                elif d eq [1,1,4,4,4,10] then
                    return 2522;
                elif d eq [1,1,2,3,6,6] then
                    return 2523;
                elif d eq [1,2,3,3,4,4] then
                    return 2524;
                elif d eq [1,1,2,4,4,12] then
                    return 2525;
                elif d eq [1,1,2,4,6,12] then
                    return 2526;
                elif d eq [1,2,3,3,8,8] then
                    return 2527;
                elif d eq [2,2,4,4,5,6] then
                    return 2528;
                elif d eq [2,2,3,3,3,8] then
                    return 2529;
                elif d eq [1,1,3,3,4,12] then
                    return 2530;
                elif d eq [1,1,2,3,6,12] then
                    return 2531;
                elif d eq [1,1,3,6,6,8] then
                    return 2532;
                elif d eq [2,2,2,3,3,9] then
                    return 2533;
                end if;
            elif n eq 10 then
                if d eq [1,2,4,4,4,8] then
                    return 2534;
                elif d eq [1,1,1,3,5,15] then
                    return 2535;
                elif d eq [1,2,2,3,4,12] then
                    return 2536;
                elif d eq [1,2,2,3,5,5] then
                    return 2537;
                elif d eq [3,3,3,4,4,4] then
                    return 2538;
                elif d eq [2,3,3,4,4,6] then
                    return 2539;
                elif d eq [1,2,2,4,6,6] then
                    return 2540;
                elif d eq [2,3,3,4,4,5] then
                    return 2541;
                elif d eq [1,1,2,3,5,10] then
                    return 2542;
                elif d eq [1,1,4,6,6,6] then
                    return 2543;
                elif d eq [1,1,2,5,5,7] then
                    return 2544;
                elif d eq [1,1,2,6,6,8] then
                    return 2545;
                elif d eq [2,2,4,4,4,6] then
                    return 2546;
                elif d eq [1,2,2,3,8,8] then
                    return 2547;
                elif d eq [1,1,2,4,6,12] then
                    return 2548;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if d eq [1,2,4,4,4,8] then
                    return 2549;
                elif d eq [2,3,4,4,4,4] then
                    return 2550;
                elif d eq [1,2,2,4,5,10] then
                    return 2551;
                elif d eq [1,1,4,4,4,8] then
                    return 2552;
                elif d eq [1,2,3,4,6,8] then
                    return 2553;
                elif d eq [1,2,2,3,4,12] then
                    return 2554;
                elif d eq [1,1,1,4,10,10] then
                    return 2555;
                elif d eq [2,2,3,4,4,8] then
                    return 2556;
                elif d eq [1,2,2,3,5,10] then
                    return 2557;
                elif d eq [1,1,3,3,8,8] then
                    return 2558;
                elif d eq [1,2,3,3,6,9] then
                    return 2559;
                elif d eq [1,1,2,4,5,10] then
                    return 2560;
                elif d eq [1,3,3,4,6,6] then
                    return 2561;
                elif d eq [2,2,4,4,6,6] then
                    return 2562;
                elif d eq [1,1,4,4,5,10] then
                    return 2563;
                elif d eq [1,4,4,4,4,4] then
                    return 2564;
                elif d eq [2,2,2,6,6,6] then
                    return 2565;
                elif d eq [2,2,3,4,6,6] then
                    return 2566;
                end if;
            elif n eq 12 then
                if d eq [3,3,3,3,3,3] then
                    return 2567;
                elif d eq [1,1,3,3,9,9] then
                    return 2568;
                end if;
            elif n eq 8 then
                if d eq [1,2,2,3,6,8] then
                    return 2569;
                end if;
            elif n eq 9 then
                if d eq [1,1,4,4,8,8] then
                    return 2570;
                elif d eq [2,2,2,4,8,8] then
                    return 2571;
                elif d eq [1,1,4,4,9,9] then
                    return 2572;
                elif d eq [1,2,2,4,9,9] then
                    return 2573;
                elif d eq [2,2,3,4,4,9] then
                    return 2574;
                elif d eq [1,2,3,3,8,10] then
                    return 2575;
                elif d eq [1,2,2,2,3,15] then
                    return 2576;
                elif d eq [2,2,2,3,4,8] then
                    return 2577;
                elif d eq [1,2,3,3,3,10] then
                    return 2578;
                elif d eq [1,1,4,4,5,8] then
                    return 2579;
                elif d eq [1,2,2,3,5,15] then
                    return 2580;
                elif d eq [1,1,4,4,5,12] then
                    return 2581;
                elif d eq [1,3,3,3,8,8] then
                    return 2582;
                elif d eq [1,3,3,4,5,8] then
                    return 2583;
                elif d eq [2,2,3,3,4,9] then
                    return 2584;
                elif d eq [1,1,2,6,8,12] then
                    return 2585;
                elif d eq [1,2,2,3,3,12] then
                    return 2586;
                elif d eq [1,2,3,3,5,10] then
                    return 2587;
                elif d eq [2,2,3,3,8,8] then
                    return 2588;
                elif d eq [2,2,2,2,4,12] then
                    return 2589;
                elif d eq [1,1,4,6,6,9] then
                    return 2590;
                elif d eq [2,3,3,4,4,7] then
                    return 2591;
                elif d eq [1,3,3,4,4,9] then
                    return 2592;
                elif d eq [2,3,3,4,4,9] then
                    return 2593;
                elif d eq [1,1,1,4,8,16] then
                    return 2594;
                elif d eq [1,1,2,3,8,12] then
                    return 2595;
                elif d eq [1,3,3,4,6,8] then
                    return 2596;
                elif d eq [1,1,2,3,10,12] then
                    return 2597;
                elif d eq [1,1,4,4,4,11] then
                    return 2598;
                elif d eq [2,2,2,2,2,14] then
                    return 2599;
                elif d eq [1,2,3,5,6,9] then
                    return 2600;
                elif d eq [1,2,3,5,6,8] then
                    return 2601;
                elif d eq [2,2,3,3,3,10] then
                    return 2602;
                elif d eq [1,3,3,4,6,6] then
                    return 2603;
                elif d eq [2,2,3,3,7,7] then
                    return 2604;
                elif d eq [1,1,3,4,8,9] then
                    return 2605;
                elif d eq [1,1,3,3,8,12] then
                    return 2606;
                elif d eq [1,1,2,4,4,5] then
                    return 2607;
                elif d eq [1,3,4,4,6,6] then
                    return 2608;
                elif d eq [1,1,2,4,4,11] then
                    return 2609;
                elif d eq [1,2,3,4,5,6] then
                    return 2610;
                elif d eq [1,2,3,4,8,8] then
                    return 2611;
                elif d eq [2,2,4,4,6,7] then
                    return 2612;
                elif d eq [2,2,2,4,5,8] then
                    return 2613;
                elif d eq [2,2,4,4,6,6] then
                    return 2614;
                elif d eq [1,2,3,4,5,12] then
                    return 2615;
                elif d eq [1,1,1,4,12,12] then
                    return 2616;
                elif d eq [2,2,2,2,6,10] then
                    return 2617;
                elif d eq [1,2,3,3,6,7] then
                    return 2618;
                elif d eq [1,1,4,4,7,8] then
                    return 2619;
                elif d eq [1,1,2,4,4,16] then
                    return 2620;
                elif d eq [2,3,4,4,5,6] then
                    return 2621;
                elif d eq [1,2,3,3,6,10] then
                    return 2622;
                elif d eq [1,2,3,4,6,9] then
                    return 2623;
                elif d eq [2,2,2,2,8,8] then
                    return 2624;
                elif d eq [1,1,2,4,9,12] then
                    return 2625;
                elif d eq [1,1,4,5,8,8] then
                    return 2626;
                elif d eq [1,2,2,6,7,9] then
                    return 2627;
                elif d eq [1,2,3,6,6,7] then
                    return 2628;
                elif d eq [1,1,2,4,8,12] then
                    return 2629;
                end if;
            elif n eq 10 then
                if d eq [1,1,1,2,5,15] then
                    return 2630;
                elif d eq [1,2,2,2,8,12] then
                    return 2631;
                elif d eq [1,2,4,4,4,8] then
                    return 2632;
                elif d eq [1,2,3,4,5,8] then
                    return 2633;
                elif d eq [1,2,2,4,4,8] then
                    return 2634;
                elif d eq [1,2,3,4,5,10] then
                    return 2635;
                elif d eq [2,2,3,4,6,6] then
                    return 2636;
                elif d eq [2,2,2,3,3,12] then
                    return 2637;
                elif d eq [2,3,3,4,4,6] then
                    return 2638;
                elif d eq [1,2,4,6,6,6] then
                    return 2639;
                elif d eq [2,2,3,5,6,6] then
                    return 2640;
                elif d eq [1,1,3,5,5,7] then
                    return 2641;
                elif d eq [2,2,4,4,4,5] then
                    return 2642;
                elif d eq [2,2,2,4,6,9] then
                    return 2643;
                elif d eq [1,2,2,4,5,10] then
                    return 2644;
                elif d eq [1,3,3,3,6,6] then
                    return 2645;
                elif d eq [1,1,3,3,6,9] then
                    return 2646;
                elif d eq [2,2,2,3,4,8] then
                    return 2647;
                elif d eq [1,2,4,4,6,9] then
                    return 2648;
                elif d eq [1,2,4,4,6,8] then
                    return 2649;
                elif d eq [2,2,2,2,6,12] then
                    return 2650;
                elif d eq [1,3,3,3,6,9] then
                    return 2651;
                elif d eq [1,2,3,4,4,8] then
                    return 2652;
                elif d eq [1,1,2,5,5,10] then
                    return 2653;
                elif d eq [1,1,5,5,5,7] then
                    return 2654;
                elif d eq [3,3,3,3,3,9] then
                    return 2655;
                elif d eq [2,4,4,4,4,6] then
                    return 2656;
                elif d eq [2,2,4,4,6,6] then
                    return 2657;
                elif d eq [1,1,3,3,5,9] then
                    return 2658;
                elif d eq [2,2,2,4,4,10] then
                    return 2659;
                elif d eq [1,2,3,5,5,7] then
                    return 2660;
                elif d eq [1,1,2,4,7,8] then
                    return 2661;
                elif d eq [1,2,2,3,6,10] then
                    return 2662;
                elif d eq [1,1,2,4,4,12] then
                    return 2663;
                elif d eq [1,2,2,2,9,12] then
                    return 2664;
                elif d eq [1,3,3,3,5,6] then
                    return 2665;
                elif d eq [1,1,2,3,5,15] then
                    return 2666;
                elif d eq [2,2,3,4,4,8] then
                    return 2667;
                elif d eq [2,2,3,4,4,6] then
                    return 2668;
                elif d eq [2,2,2,3,6,8] then
                    return 2669;
                elif d eq [2,2,2,4,4,7] then
                    return 2670;
                end if;
            end if;
        elif m eq 19 then
            if n eq 11 then
                if d eq [1,1,2,6,6,7] then
                    return 2671;
                elif d eq [1,1,1,3,6,18] then
                    return 2672;
                elif d eq [2,3,3,3,6,6] then
                    return 2673;
                elif d eq [1,2,3,3,6,12] then
                    return 2674;
                elif d eq [1,1,1,3,12,12] then
                    return 2675;
                elif d eq [2,2,2,5,5,5] then
                    return 2676;
                elif d eq [2,3,4,4,6,6] then
                    return 2677;
                elif d eq [2,2,3,4,5,5] then
                    return 2678;
                elif d eq [1,2,3,6,6,9] then
                    return 2679;
                elif d eq [2,2,3,3,3,12] then
                    return 2680;
                elif d eq [1,3,3,4,4,6] then
                    return 2681;
                elif d eq [1,2,2,5,5,6] then
                    return 2682;
                elif d eq [1,3,3,3,4,12] then
                    return 2683;
                elif d eq [1,1,2,4,6,12] then
                    return 2684;
                elif d eq [1,1,4,4,6,6] then
                    return 2685;
                elif d eq [3,3,4,4,4,6] then
                    return 2686;
                elif d eq [1,2,4,5,5,8] then
                    return 2687;
                elif d eq [2,2,2,5,5,8] then
                    return 2688;
                elif d eq [2,3,3,4,4,8] then
                    return 2689;
                elif d eq [2,2,3,3,6,9] then
                    return 2690;
                elif d eq [1,2,4,4,6,9] then
                    return 2691;
                elif d eq [1,2,4,4,6,8] then
                    return 2692;
                elif d eq [1,1,2,4,5,10] then
                    return 2693;
                elif d eq [1,2,3,4,4,8] then
                    return 2694;
                elif d eq [1,2,3,3,4,12] then
                    return 2695;
                elif d eq [1,1,2,3,12,12] then
                    return 2696;
                elif d eq [1,1,3,6,6,7] then
                    return 2697;
                elif d eq [1,1,2,3,6,12] then
                    return 2698;
                elif d eq [1,1,3,4,4,12] then
                    return 2699;
                elif d eq [1,2,2,5,8,8] then
                    return 2700;
                end if;
            elif n eq 12 then
                if d eq [1,2,2,4,5,10] then
                    return 2701;
                elif d eq [1,2,2,4,6,12] then
                    return 2702;
                elif d eq [1,2,2,2,10,10] then
                    return 2703;
                elif d eq [1,2,3,4,6,8] then
                    return 2704;
                elif d eq [1,2,4,4,5,5] then
                    return 2705;
                end if;
            elif n eq 9 then
                if d eq [1,2,3,3,4,12] then
                    return 2706;
                elif d eq [1,2,4,4,6,8] then
                    return 2707;
                elif d eq [1,2,3,4,8,8] then
                    return 2708;
                elif d eq [1,1,1,2,12,16] then
                    return 2709;
                elif d eq [1,1,1,4,4,16] then
                    return 2710;
                elif d eq [1,2,2,3,8,9] then
                    return 2711;
                elif d eq [1,1,1,3,8,16] then
                    return 2712;
                elif d eq [1,2,2,4,8,8] then
                    return 2713;
                end if;
            elif n eq 10 then
                if d eq [1,1,1,9,9,9] then
                    return 2714;
                elif d eq [2,2,2,3,8,12] then
                    return 2715;
                elif d eq [1,3,3,3,5,9] then
                    return 2716;
                elif d eq [1,2,4,4,5,8] then
                    return 2717;
                elif d eq [2,2,3,5,6,6] then
                    return 2718;
                elif d eq [1,1,4,4,6,6] then
                    return 2719;
                elif d eq [2,2,3,4,4,12] then
                    return 2720;
                elif d eq [1,3,4,4,6,8] then
                    return 2721;
                elif d eq [2,2,3,4,4,8] then
                    return 2722;
                elif d eq [1,2,2,4,8,12] then
                    return 2723;
                elif d eq [1,4,4,4,4,8] then
                    return 2724;
                elif d eq [1,1,3,7,9,9] then
                    return 2725;
                elif d eq [2,2,2,4,8,8] then
                    return 2726;
                elif d eq [1,1,1,3,5,15] then
                    return 2727;
                elif d eq [2,3,3,4,6,6] then
                    return 2728;
                elif d eq [1,1,4,6,9,9] then
                    return 2729;
                elif d eq [1,2,2,6,8,8] then
                    return 2730;
                elif d eq [1,2,3,4,4,12] then
                    return 2731;
                elif d eq [1,2,3,6,6,9] then
                    return 2732;
                elif d eq [2,2,3,4,6,9] then
                    return 2733;
                elif d eq [1,2,4,4,4,7] then
                    return 2734;
                elif d eq [2,2,3,3,4,10] then
                    return 2735;
                elif d eq [2,2,4,4,4,7] then
                    return 2736;
                elif d eq [2,2,3,6,6,7] then
                    return 2737;
                elif d eq [1,1,1,5,5,11] then
                    return 2738;
                elif d eq [2,2,2,4,9,9] then
                    return 2739;
                elif d eq [1,2,4,6,6,9] then
                    return 2740;
                elif d eq [1,2,2,4,4,8] then
                    return 2741;
                elif d eq [1,1,2,4,4,10] then
                    return 2742;
                elif d eq [1,1,4,4,8,10] then
                    return 2743;
                elif d eq [1,3,3,3,3,9] then
                    return 2744;
                elif d eq [3,3,3,3,3,7] then
                    return 2745;
                elif d eq [1,1,4,4,5,10] then
                    return 2746;
                elif d eq [1,1,2,2,12,12] then
                    return 2747;
                elif d eq [3,3,3,3,4,6] then
                    return 2748;
                elif d eq [2,2,4,4,5,8] then
                    return 2749;
                elif d eq [1,1,3,3,3,15] then
                    return 2750;
                elif d eq [1,1,1,5,7,10] then
                    return 2751;
                elif d eq [1,2,2,4,4,16] then
                    return 2752;
                elif d eq [1,1,2,4,8,10] then
                    return 2753;
                elif d eq [1,1,1,4,10,16] then
                    return 2754;
                elif d eq [1,2,4,4,8,8] then
                    return 2755;
                elif d eq [2,2,2,3,3,12] then
                    return 2756;
                elif d eq [1,3,3,4,6,9] then
                    return 2757;
                elif d eq [2,4,4,4,6,6] then
                    return 2758;
                elif d eq [1,2,2,6,6,9] then
                    return 2759;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if d eq [3,3,3,4,4,9] then
                    return 2760;
                elif d eq [1,1,1,4,5,20] then
                    return 2761;
                elif d eq [1,2,3,4,5,12] then
                    return 2762;
                elif d eq [2,2,4,4,5,8] then
                    return 2763;
                elif d eq [1,2,3,3,6,12] then
                    return 2764;
                elif d eq [1,1,5,5,8,8] then
                    return 2765;
                elif d eq [1,1,3,3,12,12] then
                    return 2766;
                elif d eq [1,2,3,6,6,9] then
                    return 2767;
                elif d eq [1,3,3,4,4,6] then
                    return 2768;
                elif d eq [1,2,2,6,9,9] then
                    return 2769;
                elif d eq [1,2,2,5,5,7] then
                    return 2770;
                elif d eq [2,2,4,4,4,8] then
                    return 2771;
                elif d eq [2,2,3,4,9,9] then
                    return 2772;
                elif d eq [2,3,4,4,6,9] then
                    return 2773;
                elif d eq [2,3,3,3,6,9] then
                    return 2774;
                elif d eq [1,3,3,4,4,12] then
                    return 2775;
                elif d eq [1,2,3,4,8,9] then
                    return 2776;
                elif d eq [1,2,4,5,5,8] then
                    return 2777;
                elif d eq [1,1,2,5,10,10] then
                    return 2778;
                elif d eq [1,1,6,6,6,9] then
                    return 2779;
                elif d eq [2,3,3,4,4,8] then
                    return 2780;
                elif d eq [2,2,3,3,6,9] then
                    return 2781;
                elif d eq [1,2,2,3,5,10] then
                    return 2782;
                elif d eq [1,2,2,4,4,16] then
                    return 2783;
                elif d eq [1,1,2,2,10,15] then
                    return 2784;
                elif d eq [1,2,4,4,6,8] then
                    return 2785;
                elif d eq [1,1,2,5,8,10] then
                    return 2786;
                elif d eq [1,2,2,6,8,12] then
                    return 2787;
                elif d eq [1,2,3,3,4,12] then
                    return 2788;
                elif d eq [1,2,5,5,6,8] then
                    return 2789;
                elif d eq [1,1,3,4,6,12] then
                    return 2790;
                elif d eq [2,2,4,4,6,9] then
                    return 2791;
                elif d eq [2,2,4,4,6,8] then
                    return 2792;
                elif d eq [2,2,4,4,6,6] then
                    return 2793;
                elif d eq [2,2,2,4,4,10] then
                    return 2794;
                elif d eq [1,1,3,6,6,12] then
                    return 2795;
                elif d eq [1,3,4,5,5,8] then
                    return 2796;
                elif d eq [1,2,2,4,8,8] then
                    return 2797;
                elif d eq [3,3,3,4,4,4] then
                    return 2798;
                elif d eq [1,2,2,4,8,12] then
                    return 2799;
                end if;
            elif n eq 12 then
                if d eq [1,2,2,4,6,12] then
                    return 2800;
                elif d eq [2,2,2,4,8,8] then
                    return 2801;
                elif d eq [1,1,3,5,5,6] then
                    return 2802;
                elif d eq [2,2,2,3,6,6] then
                    return 2803;
                elif d eq [4,4,4,4,4,4] then
                    return 2804;
                elif d eq [1,2,4,4,5,10] then
                    return 2805;
                elif d eq [1,2,2,3,6,12] then
                    return 2806;
                elif d eq [1,2,2,5,6,10] then
                    return 2807;
                elif d eq [1,2,2,4,6,6] then
                    return 2808;
                elif d eq [1,1,1,2,7,14] then
                    return 2809;
                elif d eq [1,1,1,7,7,7] then
                    return 2810;
                elif d eq [1,1,3,3,5,15] then
                    return 2811;
                elif d eq [1,2,2,6,6,8] then
                    return 2812;
                elif d eq [2,4,4,4,4,6] then
                    return 2813;
                elif d eq [1,1,2,2,12,12] then
                    return 2814;
                end if;
            elif n eq 10 then
                if d eq [2,2,3,4,6,9] then
                    return 2815;
                elif d eq [1,1,2,2,12,16] then
                    return 2816;
                elif d eq [1,2,2,3,4,16] then
                    return 2817;
                elif d eq [1,1,2,4,12,12] then
                    return 2818;
                elif d eq [1,2,3,4,8,12] then
                    return 2819;
                elif d eq [1,1,2,4,8,16] then
                    return 2820;
                elif d eq [1,2,2,2,8,16] then
                    return 2821;
                elif d eq [1,1,2,4,8,12] then
                    return 2822;
                elif d eq [1,1,2,6,8,12] then
                    return 2823;
                end if;
            end if;
        elif m eq 21 then
            if n eq 11 then
                if d eq [1,2,3,3,4,16] then
                    return 2824;
                elif d eq [1,1,3,6,8,12] then
                    return 2825;
                elif d eq [1,2,4,4,4,16] then
                    return 2826;
                elif d eq [1,1,2,8,8,16] then
                    return 2827;
                elif d eq [2,2,2,4,6,12] then
                    return 2828;
                elif d eq [2,2,2,4,8,12] then
                    return 2829;
                elif d eq [2,2,2,2,12,12] then
                    return 2830;
                elif d eq [1,1,3,4,8,12] then
                    return 2831;
                elif d eq [1,1,3,3,8,16] then
                    return 2832;
                elif d eq [1,1,4,4,8,16] then
                    return 2833;
                elif d eq [1,1,3,8,8,9] then
                    return 2834;
                end if;
            elif n eq 12 then
                if d eq [1,1,2,6,6,12] then
                    return 2835;
                elif d eq [2,3,4,6,6,6] then
                    return 2836;
                elif d eq [1,2,2,6,8,12] then
                    return 2837;
                elif d eq [2,3,3,4,4,12] then
                    return 2838;
                elif d eq [1,2,4,6,6,8] then
                    return 2839;
                elif d eq [1,1,3,3,10,15] then
                    return 2840;
                elif d eq [2,2,3,6,6,9] then
                    return 2841;
                elif d eq [1,1,6,6,6,8] then
                    return 2842;
                elif d eq [1,2,3,6,6,8] then
                    return 2843;
                elif d eq [1,1,3,5,5,15] then
                    return 2844;
                elif d eq [2,2,2,5,5,10] then
                    return 2845;
                elif d eq [2,2,4,6,6,9] then
                    return 2846;
                elif d eq [2,2,3,4,6,8] then
                    return 2847;
                elif d eq [2,2,2,5,5,8] then
                    return 2848;
                elif d eq [1,1,1,3,15,15] then
                    return 2849;
                elif d eq [2,2,4,5,5,6] then
                    return 2850;
                elif d eq [1,3,3,3,5,5] then
                    return 2851;
                elif d eq [2,3,4,4,4,9] then
                    return 2852;
                end if;
            elif n eq 13 then
                if d eq [1,1,2,4,7,14] then
                    return 2853;
                elif d eq [1,1,1,2,14,14] then
                    return 2854;
                elif d eq [1,2,2,2,7,7] then
                    return 2855;
                end if;
            end if;
        elif m eq 22 then
            if n eq 12 then
                if d eq [1,1,4,4,4,16] then
                    return 2856;
                elif d eq [2,2,3,4,8,9] then
                    return 2857;
                elif d eq [2,2,3,3,8,12] then
                    return 2858;
                elif d eq [1,1,4,4,8,12] then
                    return 2859;
                elif d eq [2,3,3,4,4,12] then
                    return 2860;
                elif d eq [2,2,3,6,8,8] then
                    return 2861;
                end if;
            elif n eq 13 then
                if d eq [1,1,1,4,10,20] then
                    return 2862;
                elif d eq [2,2,3,3,5,15] then
                    return 2863;
                elif d eq [1,1,1,4,8,16] then
                    return 2864;
                elif d eq [3,3,3,6,6,6] then
                    return 2865;
                elif d eq [2,2,3,3,5,10] then
                    return 2866;
                elif d eq [1,1,2,4,5,20] then
                    return 2867;
                elif d eq [1,1,2,4,7,14] then
                    return 2868;
                elif d eq [1,2,2,3,10,15] then
                    return 2869;
                elif d eq [1,1,4,7,7,8] then
                    return 2870;
                elif d eq [1,2,2,7,7,8] then
                    return 2871;
                elif d eq [2,2,3,4,8,12] then
                    return 2872;
                elif d eq [1,1,1,1,16,16] then
                    return 2873;
                elif d eq [2,2,4,4,6,6] then
                    return 2874;
                elif d eq [2,3,3,6,6,9] then
                    return 2875;
                elif d eq [2,2,2,6,6,6] then
                    return 2876;
                elif d eq [2,3,4,4,6,8] then
                    return 2877;
                end if;
            end if;
        elif m eq 23 then
            if n eq 13 then
                if d eq [3,3,3,4,6,8] then
                    return 2878;
                elif d eq [3,3,3,3,8,8] then
                    return 2879;
                end if;
            elif n eq 14 then
                if d eq [2,2,3,3,12,12] then
                    return 2880;
                elif d eq [1,1,2,2,8,16] then
                    return 2881;
                elif d eq [1,1,2,8,8,8] then
                    return 2882;
                elif d eq [3,3,4,4,6,6] then
                    return 2883;
                end if;
            end if;
        elif m eq 8 then
            if n eq 6 then
                if d eq [1,1,1,1,2,2] then
                    return 2884;
                elif d eq [1,1,1,1,1,3] then
                    return 2885;
                end if;
            end if;
        elif m eq 9 then
            if n eq 6 then
                if d eq [1,1,1,2,2,2] then
                    return 2886;
                elif d eq [1,1,1,1,1,5] then
                    return 2887;
                elif d eq [1,1,1,1,2,4] then
                    return 2888;
                end if;
            end if;
        elif m eq 10 then
            if n eq 6 then
                if d eq [1,1,1,1,4,4] then
                    return 2889;
                elif d eq [1,1,1,2,3,3] then
                    return 2890;
                elif d eq [1,1,1,1,3,5] then
                    return 2891;
                elif d eq [1,1,1,2,2,5] then
                    return 2892;
                elif d eq [1,1,1,1,1,7] then
                    return 2893;
                elif d eq [1,1,1,2,3,5] then
                    return 2894;
                elif d eq [1,1,1,1,2,6] then
                    return 2895;
                end if;
            elif n eq 7 then
                if d eq [1,1,1,1,4,4] then
                    return 2896;
                elif d eq [1,1,2,2,2,3] then
                    return 2897;
                end if;
            end if;
        elif m eq 11 then
            if n eq 6 then
                if d eq [1,1,1,1,4,7] then
                    return 2898;
                elif d eq [1,1,1,1,4,6] then
                    return 2899;
                elif d eq [1,1,1,1,3,7] then
                    return 2900;
                elif d eq [1,1,1,2,2,7] then
                    return 2901;
                elif d eq [1,1,1,1,1,9] then
                    return 2902;
                elif d eq [1,1,1,1,5,5] then
                    return 2903;
                elif d eq [1,1,1,1,5,7] then
                    return 2904;
                elif d eq [1,1,2,2,3,3] then
                    return 2905;
                elif d eq [1,1,1,1,2,8] then
                    return 2906;
                elif d eq [1,1,1,3,3,3] then
                    return 2907;
                elif d eq [1,1,1,2,5,5] then
                    return 2908;
                elif d eq [1,1,1,3,4,4] then
                    return 2909;
                elif d eq [1,1,1,3,3,5] then
                    return 2910;
                elif d eq [1,1,2,3,3,4] then
                    return 2911;
                elif d eq [1,1,2,3,3,3] then
                    return 2912;
                elif d eq [1,1,1,1,4,5] then
                    return 2913;
                end if;
            elif n eq 7 then
                if d eq [1,2,2,2,2,3] then
                    return 2914;
                elif d eq [1,1,2,2,2,5] then
                    return 2915;
                elif d eq [1,1,1,2,2,6] then
                    return 2916;
                elif d eq [1,1,1,2,3,6] then
                    return 2917;
                end if;
            elif n eq 8 then
                if d eq [1,2,2,2,2,3] then
                    return 2918;
                elif d eq [1,1,2,2,2,4] then
                    return 2919;
                end if;
            end if;
        elif m eq 12 then
            if n eq 6 then
                if d eq [1,1,1,2,3,5] then
                    return 2920;
                elif d eq [1,2,2,3,3,4] then
                    return 2921;
                elif d eq [1,2,2,2,4,5] then
                    return 2922;
                elif d eq [1,1,1,3,3,3] then
                    return 2923;
                elif d eq [1,1,2,2,4,4] then
                    return 2924;
                elif d eq [1,1,2,3,3,7] then
                    return 2925;
                elif d eq [1,1,2,2,5,5] then
                    return 2926;
                elif d eq [1,1,1,3,5,7] then
                    return 2927;
                elif d eq [1,1,2,2,4,7] then
                    return 2928;
                elif d eq [1,1,1,3,3,7] then
                    return 2929;
                elif d eq [1,1,2,3,3,3] then
                    return 2930;
                elif d eq [2,2,2,2,4,4] then
                    return 2931;
                elif d eq [1,2,2,3,4,4] then
                    return 2932;
                end if;
            elif n eq 7 then
                if d eq [1,1,2,2,3,4] then
                    return 2933;
                elif d eq [1,1,2,2,4,4] then
                    return 2934;
                elif d eq [1,1,1,2,6,6] then
                    return 2935;
                elif d eq [1,2,2,2,3,4] then
                    return 2936;
                elif d eq [1,1,1,2,4,8] then
                    return 2937;
                elif d eq [1,1,2,3,4,4] then
                    return 2938;
                elif d eq [1,1,2,2,5,5] then
                    return 2939;
                elif d eq [1,2,2,3,3,4] then
                    return 2940;
                elif d eq [1,1,2,2,3,5] then
                    return 2941;
                end if;
            elif n eq 8 then
                if d eq [2,2,2,2,3,3] then
                    return 2942;
                elif d eq [1,1,2,2,4,4] then
                    return 2943;
                elif d eq [1,2,2,2,3,4] then
                    return 2944;
                elif d eq [1,1,1,3,3,5] then
                    return 2945;
                elif d eq [1,1,2,2,3,3] then
                    return 2946;
                elif d eq [1,2,2,2,2,5] then
                    return 2947;
                elif d eq [1,1,2,3,4,4] then
                    return 2948;
                elif d eq [2,2,2,2,2,4] then
                    return 2949;
                elif d eq [1,1,3,3,3,3] then
                    return 2950;
                elif d eq [1,1,1,4,4,4] then
                    return 2951;
                elif d eq [1,1,2,3,3,4] then
                    return 2952;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if d eq [1,1,2,3,5,5] then
                    return 2953;
                elif d eq [1,1,2,2,7,7] then
                    return 2954;
                elif d eq [1,1,1,2,5,11] then
                    return 2955;
                elif d eq [1,1,1,2,5,9] then
                    return 2956;
                elif d eq [1,2,2,2,3,8] then
                    return 2957;
                elif d eq [1,1,1,1,5,11] then
                    return 2958;
                elif d eq [1,1,1,3,5,9] then
                    return 2959;
                elif d eq [1,1,1,3,5,8] then
                    return 2960;
                elif d eq [1,1,1,2,4,9] then
                    return 2961;
                elif d eq [1,2,3,3,3,5] then
                    return 2962;
                elif d eq [1,1,1,2,7,9] then
                    return 2963;
                elif d eq [1,1,1,2,2,11] then
                    return 2964;
                elif d eq [2,2,2,3,3,3] then
                    return 2965;
                elif d eq [1,2,2,3,4,4] then
                    return 2966;
                elif d eq [1,1,3,3,3,8] then
                    return 2967;
                elif d eq [1,1,2,3,3,4] then
                    return 2968;
                elif d eq [1,1,2,2,5,9] then
                    return 2969;
                elif d eq [1,2,3,3,4,5] then
                    return 2970;
                elif d eq [1,1,2,4,4,5] then
                    return 2971;
                elif d eq [1,3,3,3,3,5] then
                    return 2972;
                elif d eq [3,3,3,3,3,3] then
                    return 2973;
                elif d eq [1,1,2,2,5,7] then
                    return 2974;
                elif d eq [1,1,2,2,3,7] then
                    return 2975;
                elif d eq [1,1,2,3,5,8] then
                    return 2976;
                elif d eq [1,1,1,3,3,5] then
                    return 2977;
                elif d eq [1,1,1,5,5,5] then
                    return 2978;
                elif d eq [1,1,1,2,5,6] then
                    return 2979;
                elif d eq [1,1,1,5,5,8] then
                    return 2980;
                elif d eq [1,1,2,3,4,4] then
                    return 2981;
                end if;
            elif n eq 7 then
                if d eq [1,1,1,1,6,10] then
                    return 2982;
                elif d eq [1,1,1,4,4,8] then
                    return 2983;
                elif d eq [1,2,2,4,4,5] then
                    return 2984;
                elif d eq [1,1,2,4,4,7] then
                    return 2985;
                elif d eq [1,1,1,2,4,10] then
                    return 2986;
                elif d eq [1,1,2,4,4,4] then
                    return 2987;
                elif d eq [1,1,3,4,4,5] then
                    return 2988;
                elif d eq [1,1,1,2,2,10] then
                    return 2989;
                elif d eq [1,1,1,3,6,6] then
                    return 2990;
                elif d eq [1,2,2,2,3,7] then
                    return 2991;
                elif d eq [1,2,2,3,3,4] then
                    return 2992;
                elif d eq [1,2,2,2,3,6] then
                    return 2993;
                elif d eq [1,2,2,3,3,7] then
                    return 2994;
                elif d eq [1,1,2,3,4,6] then
                    return 2995;
                elif d eq [1,1,2,2,4,8] then
                    return 2996;
                elif d eq [1,1,1,2,5,6] then
                    return 2997;
                elif d eq [1,1,1,4,4,7] then
                    return 2998;
                elif d eq [1,1,1,4,4,6] then
                    return 2999;
                elif d eq [1,1,2,3,3,6] then
                    return 3000;
                elif d eq [1,1,2,2,4,7] then
                    return 3001;
                elif d eq [1,1,2,2,3,6] then
                    return 3002;
                elif d eq [1,2,3,3,4,4] then
                    return 3003;
                elif d eq [1,1,1,2,6,8] then
                    return 3004;
                elif d eq [1,2,2,3,4,5] then
                    return 3005;
                elif d eq [1,2,2,3,4,4] then
                    return 3006;
                end if;
            elif n eq 8 then
                if d eq [1,2,2,2,2,6] then
                    return 3007;
                elif d eq [1,1,3,3,4,4] then
                    return 3008;
                elif d eq [1,1,1,3,3,9] then
                    return 3009;
                elif d eq [1,1,1,3,6,6] then
                    return 3010;
                elif d eq [2,2,2,2,2,5] then
                    return 3011;
                elif d eq [1,2,2,3,3,4] then
                    return 3012;
                elif d eq [2,2,2,2,3,5] then
                    return 3013;
                elif d eq [2,2,2,2,3,4] then
                    return 3014;
                elif d eq [1,2,2,2,4,6] then
                    return 3015;
                elif d eq [1,1,3,3,3,6] then
                    return 3016;
                elif d eq [1,1,2,2,2,8] then
                    return 3017;
                elif d eq [1,1,1,3,3,4] then
                    return 3018;
                elif d eq [1,1,2,2,4,6] then
                    return 3019;
                elif d eq [1,1,1,3,3,7] then
                    return 3020;
                elif d eq [1,1,2,3,3,5] then
                    return 3021;
                elif d eq [1,2,2,3,4,4] then
                    return 3022;
                end if;
            elif n eq 9 then
                if d eq [2,2,2,3,3,3] then
                    return 3023;
                elif d eq [1,1,2,2,3,6] then
                    return 3024;
                end if;
            end if;
        elif m eq 14 then
            if n eq 6 then
                if d eq [1,1,2,3,4,6] then
                    return 3025;
                elif d eq [1,1,2,3,4,11] then
                    return 3026;
                elif d eq [1,1,2,2,8,8] then
                    return 3027;
                elif d eq [1,1,1,1,7,7] then
                    return 3028;
                elif d eq [1,1,3,3,4,10] then
                    return 3029;
                elif d eq [1,1,1,4,6,7] then
                    return 3030;
                elif d eq [1,1,1,1,7,13] then
                    return 3031;
                elif d eq [1,1,1,1,7,11] then
                    return 3032;
                elif d eq [1,1,1,4,4,7] then
                    return 3033;
                elif d eq [1,1,2,2,4,11] then
                    return 3034;
                elif d eq [1,1,1,2,7,11] then
                    return 3035;
                elif d eq [1,1,1,2,2,13] then
                    return 3036;
                elif d eq [1,3,3,3,4,5] then
                    return 3037;
                elif d eq [1,1,2,2,4,6] then
                    return 3038;
                elif d eq [1,1,1,3,7,7] then
                    return 3039;
                elif d eq [1,1,2,4,6,6] then
                    return 3040;
                elif d eq [1,2,2,3,4,4] then
                    return 3041;
                elif d eq [1,1,2,3,7,7] then
                    return 3042;
                elif d eq [1,1,1,3,7,9] then
                    return 3043;
                elif d eq [1,1,1,3,7,11] then
                    return 3044;
                elif d eq [1,1,1,3,7,10] then
                    return 3045;
                elif d eq [1,1,3,3,5,5] then
                    return 3046;
                elif d eq [1,1,1,3,3,11] then
                    return 3047;
                elif d eq [1,2,3,3,4,5] then
                    return 3048;
                elif d eq [1,1,1,4,7,7] then
                    return 3049;
                elif d eq [1,1,1,3,4,9] then
                    return 3050;
                elif d eq [1,1,1,2,3,9] then
                    return 3051;
                elif d eq [1,1,3,4,4,7] then
                    return 3052;
                elif d eq [1,1,1,3,6,7] then
                    return 3053;
                elif d eq [1,1,3,3,7,7] then
                    return 3054;
                elif d eq [1,1,3,4,5,6] then
                    return 3055;
                elif d eq [1,1,3,4,4,5] then
                    return 3056;
                elif d eq [1,1,1,3,4,13] then
                    return 3057;
                elif d eq [1,1,4,4,4,6] then
                    return 3058;
                elif d eq [1,1,1,3,3,6] then
                    return 3059;
                elif d eq [1,1,2,4,7,7] then
                    return 3060;
                elif d eq [1,1,1,5,5,7] then
                    return 3061;
                elif d eq [1,2,3,4,5,5] then
                    return 3062;
                elif d eq [1,1,1,4,7,10] then
                    return 3063;
                end if;
            elif n eq 7 then
                if d eq [1,1,2,3,4,8] then
                    return 3064;
                elif d eq [2,2,2,2,5,5] then
                    return 3065;
                elif d eq [2,2,2,2,5,7] then
                    return 3066;
                elif d eq [1,2,2,2,4,7] then
                    return 3067;
                elif d eq [1,1,3,3,4,8] then
                    return 3068;
                elif d eq [1,2,2,2,4,5] then
                    return 3069;
                elif d eq [1,1,2,2,4,9] then
                    return 3070;
                elif d eq [1,1,1,2,8,10] then
                    return 3071;
                elif d eq [1,1,2,2,2,11] then
                    return 3072;
                elif d eq [2,2,2,3,3,7] then
                    return 3073;
                elif d eq [1,2,2,3,4,7] then
                    return 3074;
                elif d eq [1,2,2,2,2,9] then
                    return 3075;
                elif d eq [1,2,3,4,4,5] then
                    return 3076;
                elif d eq [2,2,2,2,3,7] then
                    return 3077;
                elif d eq [1,2,2,3,5,5] then
                    return 3078;
                elif d eq [1,2,2,3,3,4] then
                    return 3079;
                elif d eq [1,2,3,3,5,6] then
                    return 3080;
                elif d eq [1,2,2,3,3,6] then
                    return 3081;
                elif d eq [1,2,2,2,7,7] then
                    return 3082;
                elif d eq [1,1,2,4,5,6] then
                    return 3083;
                elif d eq [1,1,2,4,4,7] then
                    return 3084;
                elif d eq [1,1,2,2,5,9] then
                    return 3085;
                elif d eq [1,1,2,4,4,5] then
                    return 3086;
                elif d eq [1,1,1,3,8,8] then
                    return 3087;
                elif d eq [1,2,2,2,5,6] then
                    return 3088;
                elif d eq [1,1,2,5,6,6] then
                    return 3089;
                elif d eq [1,1,2,2,3,10] then
                    return 3090;
                elif d eq [1,1,1,2,6,10] then
                    return 3091;
                elif d eq [1,1,2,3,4,4] then
                    return 3092;
                elif d eq [2,2,3,3,4,4] then
                    return 3093;
                end if;
            elif n eq 8 then
                if d eq [1,1,2,3,4,8] then
                    return 3094;
                elif d eq [1,1,2,3,3,9] then
                    return 3095;
                elif d eq [1,1,2,2,2,10] then
                    return 3096;
                elif d eq [1,2,2,4,4,6] then
                    return 3097;
                elif d eq [1,1,1,3,3,9] then
                    return 3098;
                elif d eq [1,1,2,3,5,6] then
                    return 3099;
                elif d eq [1,2,2,2,4,7] then
                    return 3100;
                elif d eq [2,2,2,3,4,4] then
                    return 3101;
                elif d eq [1,1,1,1,9,9] then
                    return 3102;
                elif d eq [2,2,2,4,4,4] then
                    return 3103;
                elif d eq [1,2,2,2,4,8] then
                    return 3104;
                elif d eq [1,1,3,3,3,3] then
                    return 3105;
                elif d eq [1,1,1,2,6,9] then
                    return 3106;
                elif d eq [1,1,3,3,3,7] then
                    return 3107;
                elif d eq [1,2,2,3,4,6] then
                    return 3108;
                elif d eq [1,1,3,3,3,6] then
                    return 3109;
                elif d eq [1,1,2,2,6,8] then
                    return 3110;
                end if;
            elif n eq 9 then
                if d eq [1,1,4,4,4,4] then
                    return 3111;
                elif d eq [1,2,2,4,4,4] then
                    return 3112;
                elif d eq [1,1,2,4,4,6] then
                    return 3113;
                elif d eq [1,1,2,4,4,5] then
                    return 3114;
                elif d eq [2,2,2,3,3,5] then
                    return 3115;
                elif d eq [1,1,1,2,4,8] then
                    return 3116;
                elif d eq [2,2,2,3,3,3] then
                    return 3117;
                elif d eq [1,1,3,4,4,4] then
                    return 3118;
                elif d eq [2,2,3,3,3,4] then
                    return 3119;
                elif d eq [1,2,2,3,3,4] then
                    return 3120;
                elif d eq [1,1,1,4,4,5] then
                    return 3121;
                elif d eq [1,2,2,2,4,6] then
                    return 3122;
                elif d eq [1,1,1,4,4,6] then
                    return 3123;
                elif d eq [1,1,2,3,3,6] then
                    return 3124;
                elif d eq [1,1,2,2,6,6] then
                    return 3125;
                end if;
            elif n eq 10 then
                if d eq [2,2,2,2,4,4] then
                    return 3126;
                elif d eq [1,3,3,3,3,3] then
                    return 3127;
                elif d eq [2,2,3,3,3,3] then
                    return 3128;
                elif d eq [1,1,1,3,5,5] then
                    return 3129;
                elif d eq [1,1,2,2,5,5] then
                    return 3130;
                elif d eq [1,2,2,3,4,4] then
                    return 3131;
                end if;
            end if;
        elif m eq 15 then
            if n eq 6 then
                if d eq [1,1,1,4,4,11] then
                    return 3132;
                elif d eq [1,1,1,5,5,9] then
                    return 3133;
                elif d eq [1,1,1,5,5,8] then
                    return 3134;
                elif d eq [1,1,1,2,4,8] then
                    return 3135;
                elif d eq [1,1,2,4,4,4] then
                    return 3136;
                elif d eq [1,1,3,4,4,5] then
                    return 3137;
                elif d eq [1,1,1,1,11,13] then
                    return 3138;
                elif d eq [1,1,1,3,7,11] then
                    return 3139;
                elif d eq [1,1,2,4,4,8] then
                    return 3140;
                elif d eq [1,1,2,3,7,10] then
                    return 3141;
                elif d eq [1,1,1,3,3,13] then
                    return 3142;
                elif d eq [1,1,2,4,5,8] then
                    return 3143;
                elif d eq [1,1,1,2,7,13] then
                    return 3144;
                elif d eq [1,1,1,1,5,11] then
                    return 3145;
                elif d eq [1,1,3,3,5,8] then
                    return 3146;
                elif d eq [1,1,1,2,5,13] then
                    return 3147;
                elif d eq [1,1,1,2,10,11] then
                    return 3148;
                end if;
            elif n eq 7 then
                if d eq [1,2,3,4,4,5] then
                    return 3149;
                elif d eq [1,2,2,2,3,11] then
                    return 3150;
                elif d eq [2,3,3,3,4,6] then
                    return 3151;
                elif d eq [1,1,2,4,8,8] then
                    return 3152;
                elif d eq [1,2,3,4,4,7] then
                    return 3153;
                elif d eq [1,1,2,3,5,6] then
                    return 3154;
                elif d eq [1,1,2,2,5,10] then
                    return 3155;
                elif d eq [1,1,2,2,6,9] then
                    return 3156;
                elif d eq [1,1,1,2,8,12] then
                    return 3157;
                elif d eq [1,1,2,2,6,8] then
                    return 3158;
                elif d eq [1,2,3,3,4,6] then
                    return 3159;
                elif d eq [2,2,3,4,4,5] then
                    return 3160;
                elif d eq [1,1,2,2,6,12] then
                    return 3161;
                elif d eq [1,2,3,4,4,8] then
                    return 3162;
                elif d eq [1,1,2,3,4,4] then
                    return 3163;
                elif d eq [1,1,2,2,8,9] then
                    return 3164;
                elif d eq [1,1,2,2,8,11] then
                    return 3165;
                elif d eq [1,1,2,2,8,10] then
                    return 3166;
                elif d eq [1,1,4,4,5,8] then
                    return 3167;
                elif d eq [1,2,2,3,4,4] then
                    return 3168;
                elif d eq [1,1,2,5,6,6] then
                    return 3169;
                elif d eq [1,2,2,3,4,11] then
                    return 3170;
                elif d eq [1,2,2,3,4,10] then
                    return 3171;
                elif d eq [2,2,2,3,4,7] then
                    return 3172;
                elif d eq [1,2,2,3,4,8] then
                    return 3173;
                elif d eq [1,1,2,2,7,11] then
                    return 3174;
                elif d eq [1,1,2,2,7,10] then
                    return 3175;
                elif d eq [1,1,2,2,7,8] then
                    return 3176;
                elif d eq [1,2,3,3,5,6] then
                    return 3177;
                elif d eq [1,1,3,4,4,8] then
                    return 3178;
                elif d eq [1,2,2,3,3,8] then
                    return 3179;
                elif d eq [1,1,1,2,6,14] then
                    return 3180;
                elif d eq [2,2,3,3,4,5] then
                    return 3181;
                elif d eq [2,2,3,3,4,4] then
                    return 3182;
                elif d eq [2,2,3,3,4,7] then
                    return 3183;
                elif d eq [1,1,2,3,6,10] then
                    return 3184;
                elif d eq [1,3,3,4,4,6] then
                    return 3185;
                elif d eq [1,1,2,3,6,8] then
                    return 3186;
                elif d eq [2,3,3,4,4,5] then
                    return 3187;
                elif d eq [1,2,2,4,4,5] then
                    return 3188;
                elif d eq [1,3,4,4,4,5] then
                    return 3189;
                elif d eq [1,1,2,4,6,6] then
                    return 3190;
                elif d eq [1,2,2,5,5,6] then
                    return 3191;
                elif d eq [1,1,2,2,4,9] then
                    return 3192;
                elif d eq [1,1,2,2,4,10] then
                    return 3193;
                elif d eq [1,1,2,3,8,8] then
                    return 3194;
                elif d eq [1,1,2,2,4,7] then
                    return 3195;
                elif d eq [1,2,3,3,6,7] then
                    return 3196;
                elif d eq [1,2,2,4,5,8] then
                    return 3197;
                elif d eq [2,2,2,3,3,7] then
                    return 3198;
                elif d eq [1,2,2,4,5,7] then
                    return 3199;
                elif d eq [1,1,1,2,2,14] then
                    return 3200;
                elif d eq [1,1,2,2,2,13] then
                    return 3201;
                elif d eq [1,2,3,3,4,8] then
                    return 3202;
                elif d eq [1,2,2,2,7,9] then
                    return 3203;
                end if;
            elif n eq 8 then
                if d eq [2,2,3,3,4,6] then
                    return 3204;
                elif d eq [1,1,3,4,4,8] then
                    return 3205;
                elif d eq [2,2,2,4,4,4] then
                    return 3206;
                elif d eq [2,2,3,3,3,7] then
                    return 3207;
                elif d eq [2,2,3,3,3,5] then
                    return 3208;
                elif d eq [1,2,2,4,6,6] then
                    return 3209;
                elif d eq [1,2,2,4,4,7] then
                    return 3210;
                elif d eq [1,2,2,2,4,9] then
                    return 3211;
                elif d eq [1,2,2,2,4,8] then
                    return 3212;
                elif d eq [1,2,3,3,3,5] then
                    return 3213;
                elif d eq [2,2,2,2,4,6] then
                    return 3214;
                elif d eq [1,1,2,2,4,10] then
                    return 3215;
                elif d eq [1,2,3,3,3,7] then
                    return 3216;
                elif d eq [2,2,2,3,3,8] then
                    return 3217;
                elif d eq [2,2,2,2,2,10] then
                    return 3218;
                elif d eq [1,2,2,4,5,8] then
                    return 3219;
                elif d eq [1,2,2,4,5,5] then
                    return 3220;
                elif d eq [1,2,3,4,4,6] then
                    return 3221;
                elif d eq [1,1,1,4,4,10] then
                    return 3222;
                elif d eq [2,2,2,2,4,8] then
                    return 3223;
                elif d eq [1,2,2,4,5,6] then
                    return 3224;
                elif d eq [1,1,4,4,5,6] then
                    return 3225;
                elif d eq [2,2,2,3,4,8] then
                    return 3226;
                elif d eq [1,1,3,3,3,9] then
                    return 3227;
                elif d eq [1,2,2,3,3,7] then
                    return 3228;
                elif d eq [1,2,3,3,5,7] then
                    return 3229;
                elif d eq [1,2,3,3,5,6] then
                    return 3230;
                elif d eq [1,1,2,4,5,10] then
                    return 3231;
                elif d eq [1,1,3,3,5,5] then
                    return 3232;
                elif d eq [1,1,2,3,3,5] then
                    return 3233;
                elif d eq [2,2,2,2,6,6] then
                    return 3234;
                elif d eq [1,1,2,4,4,7] then
                    return 3235;
                elif d eq [1,2,3,3,4,6] then
                    return 3236;
                elif d eq [1,1,2,4,4,6] then
                    return 3237;
                elif d eq [2,2,2,3,4,6] then
                    return 3238;
                elif d eq [1,2,2,2,5,10] then
                    return 3239;
                elif d eq [1,1,2,4,4,9] then
                    return 3240;
                elif d eq [1,2,2,3,6,8] then
                    return 3241;
                elif d eq [1,1,4,4,4,7] then
                    return 3242;
                elif d eq [1,2,4,4,4,5] then
                    return 3243;
                elif d eq [1,2,4,4,4,4] then
                    return 3244;
                elif d eq [1,2,2,3,6,6] then
                    return 3245;
                elif d eq [1,2,2,2,6,8] then
                    return 3246;
                end if;
            elif n eq 9 then
                if d eq [2,2,2,2,4,6] then
                    return 3247;
                elif d eq [1,1,2,3,6,9] then
                    return 3248;
                elif d eq [1,1,2,2,6,9] then
                    return 3249;
                elif d eq [1,2,2,4,4,6] then
                    return 3250;
                elif d eq [1,1,3,3,6,6] then
                    return 3251;
                elif d eq [1,1,1,6,6,6] then
                    return 3252;
                elif d eq [2,2,2,4,4,5] then
                    return 3253;
                elif d eq [1,2,3,4,4,6] then
                    return 3254;
                elif d eq [2,2,2,4,4,4] then
                    return 3255;
                elif d eq [1,1,2,4,4,8] then
                    return 3256;
                elif d eq [1,1,2,2,8,8] then
                    return 3257;
                elif d eq [1,3,3,3,4,4] then
                    return 3258;
                elif d eq [1,2,2,2,3,9] then
                    return 3259;
                elif d eq [1,2,2,3,3,6] then
                    return 3260;
                elif d eq [1,1,2,4,6,6] then
                    return 3261;
                elif d eq [1,1,2,5,6,6] then
                    return 3262;
                elif d eq [2,2,2,2,2,8] then
                    return 3263;
                end if;
            elif n eq 10 then
                if d eq [1,1,2,4,5,5] then
                    return 3264;
                elif d eq [1,2,2,4,4,5] then
                    return 3265;
                elif d eq [2,2,2,4,4,4] then
                    return 3266;
                elif d eq [2,3,3,3,3,4] then
                    return 3267;
                elif d eq [1,3,3,3,3,5] then
                    return 3268;
                elif d eq [1,1,1,5,5,5] then
                    return 3269;
                elif d eq [1,1,2,3,3,9] then
                    return 3270;
                elif d eq [1,1,2,3,4,8] then
                    return 3271;
                elif d eq [1,1,1,2,8,8] then
                    return 3272;
                end if;
            end if;
        elif m eq 16 then
            if n eq 11 then
                if d eq [2,2,2,3,5,5] then
                    return 3273;
                elif d eq [2,3,3,3,4,4] then
                    return 3274;
                elif d eq [1,2,2,4,5,5] then
                    return 3275;
                elif d eq [1,1,2,3,6,6] then
                    return 3276;
                elif d eq [1,1,1,4,6,6] then
                    return 3277;
                elif d eq [1,1,1,3,4,12] then
                    return 3278;
                elif d eq [1,3,3,4,4,4] then
                    return 3279;
                end if;
            elif n eq 7 then
                if d eq [1,1,1,1,8,16] then
                    return 3280;
                elif d eq [1,1,2,2,7,13] then
                    return 3281;
                elif d eq [1,1,2,5,5,10] then
                    return 3282;
                elif d eq [1,2,2,5,5,8] then
                    return 3283;
                elif d eq [1,1,2,2,5,8] then
                    return 3284;
                elif d eq [1,1,1,5,8,8] then
                    return 3285;
                elif d eq [1,1,2,3,9,10] then
                    return 3286;
                elif d eq [1,1,1,6,6,8] then
                    return 3287;
                elif d eq [1,1,1,2,10,13] then
                    return 3288;
                elif d eq [1,1,1,6,6,10] then
                    return 3289;
                elif d eq [1,2,4,4,5,5] then
                    return 3290;
                elif d eq [1,2,2,2,7,11] then
                    return 3291;
                elif d eq [1,2,2,5,5,5] then
                    return 3292;
                elif d eq [1,1,4,4,6,10] then
                    return 3293;
                elif d eq [1,2,3,4,5,6] then
                    return 3294;
                elif d eq [1,1,2,6,7,10] then
                    return 3295;
                elif d eq [1,2,3,4,6,7] then
                    return 3296;
                elif d eq [1,1,1,2,8,14] then
                    return 3297;
                elif d eq [1,2,2,3,4,11] then
                    return 3298;
                elif d eq [1,1,2,6,7,7] then
                    return 3299;
                elif d eq [1,3,4,4,4,7] then
                    return 3300;
                elif d eq [1,3,4,4,4,6] then
                    return 3301;
                elif d eq [1,2,3,4,4,8] then
                    return 3302;
                elif d eq [1,2,3,5,5,6] then
                    return 3303;
                elif d eq [1,2,2,3,4,8] then
                    return 3304;
                elif d eq [1,2,3,4,4,10] then
                    return 3305;
                elif d eq [1,1,1,2,7,10] then
                    return 3306;
                elif d eq [1,1,1,2,8,8] then
                    return 3307;
                elif d eq [1,1,2,2,4,11] then
                    return 3308;
                elif d eq [1,1,2,4,7,8] then
                    return 3309;
                elif d eq [1,1,3,4,4,8] then
                    return 3310;
                elif d eq [1,2,3,3,4,8] then
                    return 3311;
                elif d eq [1,2,2,2,3,13] then
                    return 3312;
                elif d eq [1,1,2,4,4,7] then
                    return 3313;
                elif d eq [1,1,1,3,8,12] then
                    return 3314;
                elif d eq [1,1,4,4,4,6] then
                    return 3315;
                elif d eq [1,1,2,3,4,14] then
                    return 3316;
                elif d eq [1,2,2,4,5,8] then
                    return 3317;
                elif d eq [1,2,2,2,5,9] then
                    return 3318;
                elif d eq [1,1,2,4,4,8] then
                    return 3319;
                elif d eq [1,1,2,2,10,11] then
                    return 3320;
                elif d eq [1,1,1,2,2,16] then
                    return 3321;
                elif d eq [1,1,1,4,8,10] then
                    return 3322;
                elif d eq [1,1,2,3,6,10] then
                    return 3323;
                elif d eq [1,1,4,4,5,5] then
                    return 3324;
                elif d eq [1,1,3,3,4,8] then
                    return 3325;
                elif d eq [1,1,4,6,6,7] then
                    return 3326;
                elif d eq [1,1,1,4,4,9] then
                    return 3327;
                elif d eq [1,1,1,4,7,8] then
                    return 3328;
                elif d eq [1,1,1,4,4,10] then
                    return 3329;
                end if;
            elif n eq 8 then
                if d eq [1,2,3,4,4,6] then
                    return 3330;
                elif d eq [1,2,2,3,8,8] then
                    return 3331;
                elif d eq [2,2,3,4,5,6] then
                    return 3332;
                elif d eq [2,2,3,4,5,5] then
                    return 3333;
                elif d eq [2,2,2,3,4,8] then
                    return 3334;
                elif d eq [1,1,2,2,8,10] then
                    return 3335;
                elif d eq [2,2,2,2,3,10] then
                    return 3336;
                elif d eq [1,3,3,3,4,9] then
                    return 3337;
                elif d eq [1,2,3,3,7,7] then
                    return 3338;
                elif d eq [1,1,3,5,6,9] then
                    return 3339;
                elif d eq [1,2,2,3,4,6] then
                    return 3340;
                elif d eq [1,3,3,4,5,6] then
                    return 3341;
                elif d eq [1,1,3,3,5,7] then
                    return 3342;
                elif d eq [1,2,2,6,6,7] then
                    return 3343;
                elif d eq [1,2,2,3,6,9] then
                    return 3344;
                elif d eq [1,1,3,3,5,9] then
                    return 3345;
                elif d eq [1,2,2,3,6,8] then
                    return 3346;
                elif d eq [1,3,3,3,3,5] then
                    return 3347;
                elif d eq [2,2,2,3,6,8] then
                    return 3348;
                elif d eq [2,2,3,3,4,6] then
                    return 3349;
                elif d eq [1,3,3,3,3,7] then
                    return 3350;
                elif d eq [1,3,3,4,4,6] then
                    return 3351;
                elif d eq [1,1,2,3,6,9] then
                    return 3352;
                elif d eq [1,2,2,2,4,8] then
                    return 3353;
                elif d eq [1,2,2,4,4,8] then
                    return 3354;
                elif d eq [2,2,2,2,4,9] then
                    return 3355;
                elif d eq [2,2,2,2,4,8] then
                    return 3356;
                elif d eq [1,3,3,3,5,7] then
                    return 3357;
                elif d eq [1,2,2,4,4,4] then
                    return 3358;
                elif d eq [1,2,2,4,4,7] then
                    return 3359;
                elif d eq [1,2,2,4,4,6] then
                    return 3360;
                elif d eq [1,1,2,2,4,12] then
                    return 3361;
                elif d eq [1,2,2,4,7,7] then
                    return 3362;
                elif d eq [1,1,1,3,9,12] then
                    return 3363;
                elif d eq [1,2,2,4,6,9] then
                    return 3364;
                elif d eq [1,2,2,4,6,8] then
                    return 3365;
                elif d eq [2,2,2,2,2,11] then
                    return 3366;
                elif d eq [2,3,3,3,3,4] then
                    return 3367;
                elif d eq [1,1,1,5,9,9] then
                    return 3368;
                elif d eq [2,2,2,4,5,8] then
                    return 3369;
                elif d eq [1,2,2,2,2,12] then
                    return 3370;
                elif d eq [1,1,3,5,5,9] then
                    return 3371;
                elif d eq [1,1,1,3,6,12] then
                    return 3372;
                elif d eq [1,1,1,5,6,9] then
                    return 3373;
                elif d eq [1,1,1,3,6,9] then
                    return 3374;
                elif d eq [2,2,2,2,6,7] then
                    return 3375;
                elif d eq [2,2,2,2,8,8] then
                    return 3376;
                elif d eq [1,1,2,4,9,9] then
                    return 3377;
                elif d eq [1,1,1,3,3,7] then
                    return 3378;
                elif d eq [2,2,4,4,4,6] then
                    return 3379;
                elif d eq [1,1,3,3,6,7] then
                    return 3380;
                elif d eq [1,2,2,5,6,6] then
                    return 3381;
                elif d eq [1,1,2,3,5,9] then
                    return 3382;
                elif d eq [1,1,1,1,6,15] then
                    return 3383;
                elif d eq [1,1,2,2,2,14] then
                    return 3384;
                elif d eq [1,1,3,3,4,9] then
                    return 3385;
                elif d eq [1,1,1,6,6,7] then
                    return 3386;
                elif d eq [1,2,3,3,4,9] then
                    return 3387;
                elif d eq [1,2,2,2,8,10] then
                    return 3388;
                elif d eq [1,1,3,3,3,11] then
                    return 3389;
                end if;
            elif n eq 9 then
                if d eq [2,2,3,3,4,6] then
                    return 3390;
                elif d eq [1,1,3,4,4,8] then
                    return 3391;
                elif d eq [1,1,2,3,5,6] then
                    return 3392;
                elif d eq [1,1,1,4,6,12] then
                    return 3393;
                elif d eq [1,2,2,4,4,5] then
                    return 3394;
                elif d eq [2,2,3,3,3,8] then
                    return 3395;
                elif d eq [1,2,2,4,4,7] then
                    return 3396;
                elif d eq [1,3,3,3,4,8] then
                    return 3397;
                elif d eq [1,2,2,2,4,10] then
                    return 3398;
                elif d eq [1,3,3,4,4,6] then
                    return 3399;
                elif d eq [1,1,2,2,4,12] then
                    return 3400;
                elif d eq [1,2,2,4,6,8] then
                    return 3401;
                elif d eq [1,1,4,4,5,8] then
                    return 3402;
                elif d eq [1,2,2,3,4,6] then
                    return 3403;
                elif d eq [2,2,4,4,4,5] then
                    return 3404;
                elif d eq [1,2,3,4,4,7] then
                    return 3405;
                elif d eq [1,2,2,3,4,9] then
                    return 3406;
                elif d eq [1,2,2,3,4,8] then
                    return 3407;
                elif d eq [1,1,3,3,8,8] then
                    return 3408;
                elif d eq [1,2,3,3,4,8] then
                    return 3409;
                elif d eq [1,1,3,4,6,6] then
                    return 3410;
                elif d eq [1,2,3,4,4,8] then
                    return 3411;
                elif d eq [1,2,2,3,3,10] then
                    return 3412;
                elif d eq [1,2,4,4,5,6] then
                    return 3413;
                elif d eq [1,1,2,4,4,5] then
                    return 3414;
                elif d eq [1,2,2,3,6,9] then
                    return 3415;
                elif d eq [1,2,2,3,6,7] then
                    return 3416;
                elif d eq [1,2,4,4,4,5] then
                    return 3417;
                elif d eq [1,1,2,3,6,8] then
                    return 3418;
                elif d eq [1,1,1,5,8,8] then
                    return 3419;
                elif d eq [2,2,2,4,4,7] then
                    return 3420;
                elif d eq [2,2,3,3,4,4] then
                    return 3421;
                end if;
            elif n eq 10 then
                if d eq [1,1,4,4,4,4] then
                    return 3422;
                elif d eq [1,1,4,4,4,6] then
                    return 3423;
                elif d eq [1,2,2,3,6,6] then
                    return 3424;
                elif d eq [1,1,1,3,5,10] then
                    return 3425;
                elif d eq [2,2,2,3,3,6] then
                    return 3426;
                elif d eq [1,2,2,4,4,6] then
                    return 3427;
                elif d eq [2,2,2,3,6,6] then
                    return 3428;
                elif d eq [2,2,3,3,4,4] then
                    return 3429;
                elif d eq [2,2,3,3,4,6] then
                    return 3430;
                elif d eq [2,2,2,3,4,6] then
                    return 3431;
                elif d eq [1,2,2,4,6,6] then
                    return 3432;
                elif d eq [1,1,1,1,10,10] then
                    return 3433;
                end if;
            end if;
        end if;
    elif k eq 7 then
        if m eq 11 then
            if n eq 7 then
                if d eq [1,1,1,1,1,2,2] then
                    return 3434;
                elif d eq [1,1,1,1,1,2,3] then
                    return 3435;
                end if;
            end if;
        elif m eq 12 then
            if n eq 7 then
                if d eq [1,1,1,1,1,3,3] then
                    return 3436;
                elif d eq [1,1,1,1,2,2,3] then
                    return 3437;
                elif d eq [1,1,1,1,1,2,3] then
                    return 3438;
                end if;
            end if;
        elif m eq 13 then
            if n eq 7 then
                if d eq [1,1,1,2,2,2,3] then
                    return 3439;
                elif d eq [1,1,1,2,2,2,4] then
                    return 3440;
                elif d eq [1,1,1,1,2,2,5] then
                    return 3441;
                elif d eq [1,1,1,1,2,2,3] then
                    return 3442;
                end if;
            elif n eq 8 then
                if d eq [1,1,1,2,2,2,3] then
                    return 3443;
                elif d eq [1,1,1,1,1,2,6] then
                    return 3444;
                elif d eq [1,1,1,1,2,2,3] then
                    return 3445;
                end if;
            end if;
        elif m eq 14 then
            if n eq 7 then
                if d eq [1,1,1,1,1,2,5] then
                    return 3446;
                elif d eq [1,1,1,1,2,4,5] then
                    return 3447;
                elif d eq [1,1,1,1,1,2,7] then
                    return 3448;
                elif d eq [1,1,1,1,1,5,5] then
                    return 3449;
                elif d eq [1,1,1,2,3,3,3] then
                    return 3450;
                elif d eq [1,1,1,1,2,2,8] then
                    return 3451;
                elif d eq [1,1,1,1,2,2,7] then
                    return 3452;
                elif d eq [1,1,1,1,2,2,4] then
                    return 3453;
                elif d eq [1,1,1,1,1,2,9] then
                    return 3454;
                elif d eq [1,1,1,2,2,3,3] then
                    return 3455;
                elif d eq [1,1,1,3,3,3,3] then
                    return 3456;
                end if;
            elif n eq 8 then
                if d eq [1,1,2,2,2,2,2] then
                    return 3457;
                elif d eq [1,1,1,2,2,2,3] then
                    return 3458;
                elif d eq [1,1,1,1,2,4,5] then
                    return 3459;
                elif d eq [1,1,1,1,1,4,4] then
                    return 3460;
                elif d eq [1,1,2,2,2,2,4] then
                    return 3461;
                elif d eq [1,1,2,2,2,2,3] then
                    return 3462;
                end if;
            elif n eq 9 then
                if d eq [1,1,2,2,2,2,2] then
                    return 3463;
                elif d eq [1,1,1,2,2,2,4] then
                    return 3464;
                end if;
            end if;
        elif m eq 15 then
            if n eq 7 then
                if d eq [1,1,1,1,3,3,5] then
                    return 3465;
                elif d eq [1,1,1,1,3,4,4] then
                    return 3466;
                elif d eq [1,1,1,1,2,4,5] then
                    return 3467;
                elif d eq [1,1,1,2,3,3,5] then
                    return 3468;
                elif d eq [1,1,1,1,2,4,4] then
                    return 3469;
                elif d eq [1,1,1,2,3,3,4] then
                    return 3470;
                elif d eq [1,1,1,1,2,4,7] then
                    return 3471;
                elif d eq [1,1,1,1,1,2,6] then
                    return 3472;
                elif d eq [1,1,1,1,1,3,10] then
                    return 3473;
                elif d eq [1,1,1,1,1,3,7] then
                    return 3474;
                elif d eq [1,1,1,1,3,5,5] then
                    return 3475;
                elif d eq [1,1,1,1,1,7,7] then
                    return 3476;
                elif d eq [1,1,1,1,3,3,7] then
                    return 3477;
                elif d eq [1,1,1,1,1,4,6] then
                    return 3478;
                end if;
            elif n eq 8 then
                if d eq [1,2,2,2,2,2,4] then
                    return 3479;
                elif d eq [1,1,2,2,2,2,5] then
                    return 3480;
                elif d eq [1,1,1,1,2,3,4] then
                    return 3481;
                elif d eq [1,1,2,2,3,3,3] then
                    return 3482;
                elif d eq [1,1,1,1,2,2,5] then
                    return 3483;
                elif d eq [1,1,1,2,2,3,5] then
                    return 3484;
                elif d eq [1,1,1,2,3,3,4] then
                    return 3485;
                elif d eq [1,1,1,2,2,3,6] then
                    return 3486;
                elif d eq [1,1,1,2,2,2,5] then
                    return 3487;
                elif d eq [1,1,1,1,2,2,8] then
                    return 3488;
                elif d eq [1,1,1,2,2,2,7] then
                    return 3489;
                elif d eq [1,1,1,2,2,2,6] then
                    return 3490;
                elif d eq [1,1,1,1,2,5,6] then
                    return 3491;
                elif d eq [1,1,1,1,2,4,5] then
                    return 3492;
                end if;
            elif n eq 9 then
                if d eq [1,1,2,2,2,3,4] then
                    return 3493;
                elif d eq [1,1,1,2,2,4,4] then
                    return 3494;
                elif d eq [1,1,2,2,2,2,3] then
                    return 3495;
                end if;
            end if;
        elif m eq 16 then
            if n eq 7 then
                if d eq [1,1,1,1,1,4,8] then
                    return 3496;
                elif d eq [1,1,1,2,2,3,7] then
                    return 3497;
                elif d eq [1,1,1,1,2,4,5] then
                    return 3498;
                elif d eq [1,1,1,1,2,3,8] then
                    return 3499;
                elif d eq [1,1,1,1,2,3,4] then
                    return 3500;
                end if;
            elif n eq 8 then
                if d eq [1,1,1,1,2,4,6] then
                    return 3501;
                elif d eq [1,1,1,1,1,2,12] then
                    return 3502;
                elif d eq [1,2,2,2,2,2,4] then
                    return 3503;
                elif d eq [1,1,2,2,3,3,5] then
                    return 3504;
                elif d eq [1,2,2,2,2,2,3] then
                    return 3505;
                elif d eq [1,1,1,3,3,4,4] then
                    return 3506;
                elif d eq [1,1,1,1,2,2,6] then
                    return 3507;
                elif d eq [1,1,1,2,4,4,5] then
                    return 3508;
                elif d eq [1,1,1,1,2,4,8] then
                    return 3509;
                elif d eq [1,1,1,1,3,4,6] then
                    return 3510;
                elif d eq [1,1,2,3,3,3,4] then
                    return 3511;
                elif d eq [1,1,1,2,3,3,6] then
                    return 3512;
                elif d eq [1,1,1,2,2,3,3] then
                    return 3513;
                elif d eq [1,1,1,1,2,2,10] then
                    return 3514;
                elif d eq [1,1,2,2,3,4,4] then
                    return 3515;
                elif d eq [1,1,1,2,2,2,7] then
                    return 3516;
                elif d eq [1,1,1,2,2,4,7] then
                    return 3517;
                elif d eq [1,1,1,1,2,3,8] then
                    return 3518;
                elif d eq [1,1,1,2,2,3,8] then
                    return 3519;
                elif d eq [1,1,1,2,2,4,5] then
                    return 3520;
                elif d eq [1,1,2,2,2,4,4] then
                    return 3521;
                end if;
            elif n eq 9 then
                if d eq [1,2,2,2,2,2,4] then
                    return 3522;
                elif d eq [1,1,1,2,3,3,5] then
                    return 3523;
                elif d eq [1,1,1,2,3,3,6] then
                    return 3524;
                elif d eq [1,1,2,2,2,2,4] then
                    return 3525;
                elif d eq [1,2,2,2,2,2,3] then
                    return 3526;
                elif d eq [1,1,1,2,3,4,4] then
                    return 3527;
                elif d eq [1,1,1,2,2,3,6] then
                    return 3528;
                elif d eq [1,1,2,2,3,3,3] then
                    return 3529;
                elif d eq [1,1,1,1,2,4,8] then
                    return 3530;
                elif d eq [1,1,1,2,2,2,8] then
                    return 3531;
                end if;
            elif n eq 10 then
                if d eq [1,1,1,1,3,4,6] then
                    return 3532;
                elif d eq [1,1,1,2,2,3,6] then
                    return 3533;
                elif d eq [1,1,1,2,3,3,4] then
                    return 3534;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if d eq [1,1,1,2,2,5,6] then
                    return 3535;
                elif d eq [1,1,2,2,2,2,4] then
                    return 3536;
                elif d eq [1,1,1,1,2,5,8] then
                    return 3537;
                elif d eq [1,1,1,2,4,4,6] then
                    return 3538;
                elif d eq [1,1,1,1,3,4,6] then
                    return 3539;
                elif d eq [1,1,1,2,2,3,6] then
                    return 3540;
                elif d eq [1,1,2,2,3,4,4] then
                    return 3541;
                elif d eq [1,1,1,3,4,4,4] then
                    return 3542;
                elif d eq [1,1,1,1,2,3,8] then
                    return 3543;
                elif d eq [1,1,1,2,3,4,7] then
                    return 3544;
                elif d eq [1,1,1,2,2,4,5] then
                    return 3545;
                elif d eq [1,1,1,1,4,6,7] then
                    return 3546;
                elif d eq [1,1,1,2,2,6,7] then
                    return 3547;
                elif d eq [1,1,1,2,2,4,4] then
                    return 3548;
                elif d eq [1,1,2,2,2,2,8] then
                    return 3549;
                end if;
            elif n eq 9 then
                if d eq [1,1,2,2,3,4,4] then
                    return 3550;
                elif d eq [1,1,1,2,3,4,6] then
                    return 3551;
                elif d eq [1,1,1,2,4,4,6] then
                    return 3552;
                elif d eq [1,1,2,2,2,3,4] then
                    return 3553;
                elif d eq [1,1,1,1,2,6,9] then
                    return 3554;
                elif d eq [1,1,2,2,3,3,3] then
                    return 3555;
                elif d eq [1,1,2,3,3,3,4] then
                    return 3556;
                elif d eq [1,1,1,3,3,4,4] then
                    return 3557;
                elif d eq [1,1,1,1,3,3,9] then
                    return 3558;
                elif d eq [1,1,1,1,3,3,7] then
                    return 3559;
                elif d eq [1,1,2,2,2,2,8] then
                    return 3560;
                elif d eq [1,1,1,2,2,2,10] then
                    return 3561;
                elif d eq [1,1,2,2,2,2,5] then
                    return 3562;
                elif d eq [1,2,2,2,2,3,5] then
                    return 3563;
                elif d eq [1,1,1,2,2,3,9] then
                    return 3564;
                elif d eq [1,1,1,1,3,4,9] then
                    return 3565;
                elif d eq [1,1,1,3,3,3,5] then
                    return 3566;
                elif d eq [1,1,1,3,3,3,4] then
                    return 3567;
                elif d eq [1,1,1,3,3,3,6] then
                    return 3568;
                elif d eq [1,1,2,2,2,4,4] then
                    return 3569;
                elif d eq [1,1,1,3,3,3,3] then
                    return 3570;
                elif d eq [2,2,2,2,3,3,3] then
                    return 3571;
                elif d eq [1,2,2,2,2,2,3] then
                    return 3572;
                elif d eq [1,2,2,2,2,4,4] then
                    return 3573;
                elif d eq [1,1,1,1,3,4,6] then
                    return 3574;
                end if;
            elif n eq 10 then
                if d eq [1,1,2,2,2,3,6] then
                    return 3575;
                elif d eq [1,1,2,2,2,4,6] then
                    return 3576;
                elif d eq [1,1,2,2,3,3,4] then
                    return 3577;
                elif d eq [1,1,1,2,4,4,4] then
                    return 3578;
                elif d eq [1,1,1,1,2,4,8] then
                    return 3579;
                elif d eq [1,1,1,2,3,3,4] then
                    return 3580;
                elif d eq [1,2,2,2,2,3,4] then
                    return 3581;
                elif d eq [1,1,1,2,3,3,6] then
                    return 3582;
                elif d eq [1,2,2,2,2,3,3] then
                    return 3583;
                elif d eq [1,2,2,2,2,4,4] then
                    return 3584;
                elif d eq [1,1,1,1,2,4,4] then
                    return 3585;
                elif d eq [1,1,1,1,3,4,8] then
                    return 3586;
                elif d eq [1,1,1,2,2,4,4] then
                    return 3587;
                elif d eq [1,1,2,2,2,2,8] then
                    return 3588;
                elif d eq [1,1,1,2,3,4,4] then
                    return 3589;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if d eq [1,1,2,2,2,4,4] then
                    return 3590;
                elif d eq [1,2,2,2,3,3,4] then
                    return 3591;
                elif d eq [1,1,2,3,3,4,4] then
                    return 3592;
                end if;
            elif n eq 9 then
                if d eq [1,1,2,4,4,4,4] then
                    return 3593;
                elif d eq [1,1,2,2,2,2,8] then
                    return 3594;
                elif d eq [1,1,1,2,3,3,4] then
                    return 3595;
                elif d eq [1,1,1,2,3,5,6] then
                    return 3596;
                elif d eq [1,1,1,2,3,3,6] then
                    return 3597;
                elif d eq [1,2,2,2,2,4,5] then
                    return 3598;
                elif d eq [1,1,2,2,3,4,4] then
                    return 3599;
                elif d eq [1,1,2,2,2,3,8] then
                    return 3600;
                elif d eq [1,2,2,2,2,3,5] then
                    return 3601;
                elif d eq [1,2,2,2,3,4,4] then
                    return 3602;
                elif d eq [1,2,2,2,2,3,4] then
                    return 3603;
                elif d eq [1,2,2,2,4,4,4] then
                    return 3604;
                elif d eq [1,1,2,2,2,5,6] then
                    return 3605;
                elif d eq [1,1,2,2,2,4,6] then
                    return 3606;
                elif d eq [1,1,2,2,2,6,7] then
                    return 3607;
                elif d eq [1,1,1,2,3,3,8] then
                    return 3608;
                end if;
            elif n eq 10 then
                if d eq [1,1,2,2,4,4,4] then
                    return 3609;
                elif d eq [1,2,2,3,3,3,3] then
                    return 3610;
                elif d eq [1,1,2,2,3,3,4] then
                    return 3611;
                elif d eq [1,2,2,2,3,4,4] then
                    return 3612;
                elif d eq [1,1,2,2,2,3,9] then
                    return 3613;
                elif d eq [1,1,2,2,3,3,3] then
                    return 3614;
                elif d eq [1,1,1,2,3,3,8] then
                    return 3615;
                elif d eq [1,1,1,1,3,4,4] then
                    return 3616;
                elif d eq [1,1,1,2,3,6,6] then
                    return 3617;
                elif d eq [1,2,2,2,2,4,6] then
                    return 3618;
                elif d eq [1,2,2,2,3,3,3] then
                    return 3619;
                elif d eq [1,2,2,2,2,4,4] then
                    return 3620;
                elif d eq [1,1,1,3,4,4,4] then
                    return 3621;
                elif d eq [1,1,1,2,2,3,9] then
                    return 3622;
                elif d eq [1,1,1,1,2,6,9] then
                    return 3623;
                elif d eq [2,2,2,2,2,2,4] then
                    return 3624;
                elif d eq [1,1,1,1,3,4,8] then
                    return 3625;
                end if;
            end if;
        elif m eq 19 then
            if n eq 11 then
                if d eq [1,1,1,2,4,6,6] then
                    return 3626;
                elif d eq [1,1,2,2,4,4,4] then
                    return 3627;
                elif d eq [1,1,1,1,2,5,10] then
                    return 3628;
                elif d eq [1,1,1,2,4,4,6] then
                    return 3629;
                elif d eq [1,1,2,2,2,6,6] then
                    return 3630;
                elif d eq [1,2,2,2,2,3,6] then
                    return 3631;
                elif d eq [1,2,2,2,3,3,6] then
                    return 3632;
                elif d eq [1,1,1,3,3,3,9] then
                    return 3633;
                elif d eq [1,1,2,2,3,4,4] then
                    return 3634;
                elif d eq [1,1,2,2,3,4,6] then
                    return 3635;
                elif d eq [1,1,3,3,3,3,3] then
                    return 3636;
                elif d eq [1,1,1,2,4,5,5] then
                    return 3637;
                end if;
            elif n eq 10 then
                if d eq [1,1,1,1,1,8,12] then
                    return 3638;
                elif d eq [1,1,1,2,2,8,8] then
                    return 3639;
                elif d eq [1,1,1,1,4,4,8] then
                    return 3640;
                elif d eq [1,1,2,3,3,4,5] then
                    return 3641;
                elif d eq [2,2,2,2,2,3,6] then
                    return 3642;
                elif d eq [1,1,2,2,2,6,6] then
                    return 3643;
                elif d eq [1,1,1,3,3,4,6] then
                    return 3644;
                elif d eq [1,1,2,3,3,3,4] then
                    return 3645;
                elif d eq [2,2,2,2,4,4,4] then
                    return 3646;
                elif d eq [1,1,2,3,3,4,6] then
                    return 3647;
                elif d eq [1,1,2,2,2,3,9] then
                    return 3648;
                elif d eq [1,1,1,1,2,4,12] then
                    return 3649;
                elif d eq [2,2,2,2,2,4,6] then
                    return 3650;
                elif d eq [1,2,2,2,4,4,4] then
                    return 3651;
                elif d eq [1,2,2,2,3,3,5] then
                    return 3652;
                elif d eq [1,1,1,2,2,3,12] then
                    return 3653;
                elif d eq [1,2,2,2,3,3,3] then
                    return 3654;
                elif d eq [1,1,1,2,3,3,8] then
                    return 3655;
                elif d eq [2,2,2,2,3,4,4] then
                    return 3656;
                elif d eq [1,1,1,1,4,5,8] then
                    return 3657;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if d eq [1,1,2,2,4,4,5] then
                    return 3658;
                elif d eq [1,1,2,3,4,4,6] then
                    return 3659;
                elif d eq [1,1,1,2,2,8,8] then
                    return 3660;
                elif d eq [1,2,2,3,3,3,3] then
                    return 3661;
                elif d eq [1,1,1,2,2,4,12] then
                    return 3662;
                elif d eq [1,2,2,2,2,3,9] then
                    return 3663;
                elif d eq [1,1,1,3,3,6,6] then
                    return 3664;
                elif d eq [1,1,2,3,3,3,6] then
                    return 3665;
                elif d eq [1,1,2,2,4,6,6] then
                    return 3666;
                elif d eq [1,1,1,1,6,6,9] then
                    return 3667;
                elif d eq [2,2,2,3,3,3,4] then
                    return 3668;
                elif d eq [1,1,2,2,2,4,8] then
                    return 3669;
                elif d eq [1,1,2,2,3,4,8] then
                    return 3670;
                elif d eq [1,1,1,2,3,6,9] then
                    return 3671;
                end if;
            elif n eq 12 then
                if d eq [1,1,1,2,4,5,5] then
                    return 3672;
                elif d eq [1,1,1,1,1,6,12] then
                    return 3673;
                elif d eq [1,1,1,1,4,6,6] then
                    return 3674;
                elif d eq [1,1,2,2,2,5,5] then
                    return 3675;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if d eq [1,1,2,2,3,6,9] then
                    return 3676;
                elif d eq [2,2,2,2,3,4,4] then
                    return 3677;
                elif d eq [1,2,3,3,3,3,4] then
                    return 3678;
                elif d eq [1,2,2,2,2,4,8] then
                    return 3679;
                elif d eq [1,1,2,3,3,4,9] then
                    return 3680;
                elif d eq [1,2,2,3,3,3,6] then
                    return 3681;
                end if;
            end if;
        end if;
    elif k eq 8 then
        if m eq 15 then
            if n eq 8 then
                if d eq [1,1,1,1,1,1,3,3] then
                    return 3682;
                elif d eq [1,1,1,1,1,1,1,4] then
                    return 3683;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if d eq [1,1,1,1,1,1,2,3] then
                    return 3684;
                elif d eq [1,1,1,1,1,2,2,3] then
                    return 3685;
                end if;
            elif n eq 9 then
                if d eq [1,1,1,1,2,2,2,2] then
                    return 3686;
                end if;
            end if;
        elif m eq 17 then
            if n eq 9 then
                if d eq [1,1,1,1,2,2,2,3] then
                    return 3687;
                elif d eq [1,1,1,1,1,1,2,6] then
                    return 3688;
                elif d eq [1,1,1,1,1,2,2,5] then
                    return 3689;
                end if;
            end if;
        elif m eq 18 then
            if n eq 9 then
                if d eq [1,1,1,1,1,2,4,4] then
                    return 3690;
                elif d eq [1,1,1,1,2,2,2,4] then
                    return 3691;
                end if;
            elif n eq 10 then
                if d eq [1,1,1,1,1,2,3,3] then
                    return 3692;
                elif d eq [1,1,1,2,2,2,2,3] then
                    return 3693;
                elif d eq [1,1,1,1,2,2,2,4] then
                    return 3694;
                elif d eq [1,1,1,2,2,2,2,2] then
                    return 3695;
                elif d eq [1,1,1,1,1,1,3,6] then
                    return 3696;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if d eq [1,1,1,2,2,2,2,4] then
                    return 3697;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// Now we use all the data collected so far.
function to_id_test6(k,m,n,bary1,bary2,e,d)
    ed:=e cat d;
    if k eq 7 then
        if m eq 20 then
            if n eq 11 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,2,3,1,2,2,2,3,4,6] then
                        return 3698;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if ed eq [1,1,1,1,1,1,2,1,1,2,2,4,4,4] then
                        return 3699;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,1,2,1,1,2,2,4,4,4] then
                        return 3700;
                    end if;
                end if;
            end if;
        elif m eq 16 then
            if n eq 9 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,2,2,1,1,2,2,3,3,4] then
                        return 3701;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq false then
                    if ed eq [1,1,1,1,1,1,2,1,1,2,2,2,3,4] then
                        return 3702;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,1,2,1,1,2,2,2,3,4] then
                        return 3703;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 21 then
            if n eq 12 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,2,3,4,1,2,3,4,6,12] then
                        return 3704;
                    end if;
                end if;
            end if;
        elif m eq 19 then
            if n eq 11 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,3,4,1,1,3,4,6,12] then
                        return 3705;
                    elif ed eq [1,1,1,1,1,6,1,1,3,4,6,12] then
                        return 3706;
                    end if;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,2,2,2,2,2,2,4,4,4,8] then
                        return 3707;
                    elif ed eq [1,1,1,1,2,4,2,2,4,4,4,8] then
                        return 3708;
                    elif ed eq [1,1,1,2,2,3,1,2,3,4,6,8] then
                        return 3709;
                    elif ed eq [1,1,1,1,2,4,1,2,3,4,6,8] then
                        return 3710;
                    end if;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,3,1,1,3,4,8,12] then
                        return 3711;
                    elif ed eq [1,1,1,1,1,4,1,1,3,4,8,12] then
                        return 3712;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,4,2,2,2,4,4,8] then
                        return 3713;
                    end if;
                end if;
            elif n eq 9 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,3,1,1,2,3,4,12] then
                        return 3714;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq true and bary2 eq true then
                    if ed eq [1,1,1,1,2,2,2,2,4,4,6,6] then
                        return 3715;
                    end if;
                end if;
            end if;
        elif m eq 16 then
            if n eq 9 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,3,1,1,2,3,4,12] then
                        return 3716;
                    end if;
                end if;
            elif n eq 8 then
                if bary1 eq false and bary2 eq true then
                    if ed eq [1,1,1,1,2,2,1,2,4,4,6,6] then
                        return 3717;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,2,2,1,2,4,4,6,6] then
                        return 3718;
                    end if;
                end if;
            end if;
        elif m eq 15 then
            if n eq 8 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,3,1,2,3,4,5,6] then
                        return 3719;
                    end if;
                end if;
            elif n eq 7 then
                if bary1 eq true and bary2 eq false then
                    if ed eq [1,1,1,1,1,2,1,2,2,3,6,7] then
                        return 3720;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,2,1,1,2,4,5,8] then
                        return 3721;
                    end if;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if bary1 eq true and bary2 eq true then
                    if ed eq [1,1,1,1,1,1,1,1,2,4,5,5] then
                        return 3722;
                    elif ed eq [1,1,1,1,1,1,1,1,3,3,5,5] then
                        return 3723;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,1,1,1,1,3,3,5,5] then
                        return 3724;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 11 then
            if n eq 8 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,4,2,2,4,4,4] then
                        return 3725;
                    end if;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,2,2,6,4,4,6,8,12] then
                        return 3726;
                    end if;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,2,2,2,3,2,4,6,8,12] then
                        return 3727;
                    elif ed eq [1,1,1,3,4,2,4,6,6,12] then
                        return 3728;
                    elif ed eq [1,2,2,2,3,2,4,4,12,12] then
                        return 3729;
                    elif ed eq [1,2,2,2,3,2,4,6,6,12] then
                        return 3730;
                    elif ed eq [1,1,1,3,4,2,4,6,8,12] then
                        return 3731;
                    elif ed eq [1,1,1,3,4,2,4,4,12,12] then
                        return 3732;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,2,2,2,4,4,8,8,8] then
                        return 3733;
                    elif ed eq [1,1,1,1,4,4,4,8,8,8] then
                        return 3734;
                    end if;
                end if;
            end if;
        elif m eq 15 then
            if n eq 8 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,4,2,2,4,10,12] then
                        return 3735;
                    elif ed eq [1,1,2,2,2,2,2,4,4,12] then
                        return 3736;
                    elif ed eq [1,1,1,1,4,2,2,4,4,12] then
                        return 3737;
                    end if;
                end if;
            end if;
        elif m eq 13 then
            if n eq 8 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,1,4,2,4,4,6,6] then
                        return 3738;
                    elif ed eq [1,1,2,2,2,4,4,4,4,6] then
                        return 3739;
                    elif ed eq [1,1,1,1,4,4,4,4,4,6] then
                        return 3740;
                    end if;
                end if;
            end if;
        end if;
    elif k eq 4 then
        if m eq 11 then
            if n eq 5 then
                if bary1 eq false and bary2 eq true then
                    if ed eq [1,1,1,2,5,5,10,10] then
                        return 3741;
                    end if;
                elif bary1 eq false and bary2 eq false then
                    if ed eq [1,1,1,2,5,5,10,10] then
                        return 3742;
                    end if;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,2,3,4,6,8,18,20] then
                        return 3743;
                    elif ed eq [1,1,2,6,6,8,18,20] then
                        return 3744;
                    end if;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,2,6,4,6,16,18] then
                        return 3745;
                    elif ed eq [1,1,2,6,4,10,12,18] then
                        return 3746;
                    elif ed eq [1,2,3,4,4,10,12,18] then
                        return 3747;
                    elif ed eq [1,2,3,4,4,6,16,18] then
                        return 3748;
                    end if;
                end if;
            end if;
        elif m eq 13 then
            if n eq 10 then
                if bary1 eq false and bary2 eq false then
                    if ed eq [1,1,2,6,2,6,8,12] then
                        return 3749;
                    elif ed eq [1,2,3,4,2,6,8,12] then
                        return 3750;
                    end if;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// We're down to just 498 facets left to recognise -- we have to resort to the
// affine normal form.
function to_id_test7(k,m,n,v)
    if k eq 3 then
        if m eq 11 then
            if n eq 3 then
                if v[1] eq 4 and v[2] eq 17 then
                    return 3751;
                elif v[1] eq 3 and v[2] eq 17 then
                    return 3752;
                end if;
            end if;
        elif m eq 12 then
            if n eq 3 then
                if v[1] eq 3 and v[2] eq 19 then
                    return 3753;
                elif v[1] eq 4 and v[2] eq 19 then
                    return 3754;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if v[1] eq 4 and v[2] eq 18 then
                    return 3755;
                elif v[1] eq 16 and v[2] eq 18 then
                    return 3756;
                end if;
            end if;
        elif m eq 14 then
            if n eq 4 then
                if v[1] eq 7 and v[2] eq 22 then
                    return 3757;
                elif v[1] eq 3 and v[2] eq 22 then
                    return 3758;
                end if;
            elif n eq 5 then
                if v[1] eq 10 and v[2] eq 21 then
                    return 3759;
                elif v[1] eq 4 and v[2] eq 21 then
                    return 3760;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if v[1] eq 19 and v[2] eq 24 then
                    return 3761;
                elif v[1] eq 7 and v[2] eq 24 then
                    return 3762;
                end if;
            end if;
        elif m eq 6 then
            if n eq 3 then
                if v[1] eq 3 and v[2] eq 7 then
                    return 3763;
                elif v[1] eq 2 and v[2] eq 7 then
                    return 3764;
                end if;
            end if;
        elif m eq 8 then
            if n eq 3 then
                if v[1] eq 2 and v[2] eq 11 then
                    return 3765;
                elif v[1] eq 3 and v[2] eq 11 then
                    return 3766;
                end if;
            elif n eq 4 then
                if v[1] eq 3 and v[2] eq 10 then
                    return 3767;
                elif v[1] eq 9 and v[2] eq 10 then
                    return 3768;
                end if;
            end if;
        elif m eq 9 then
            if n eq 3 then
                if v[1] eq 4 and v[2] eq 13 then
                    return 3769;
                elif v[1] eq 3 and v[2] eq 13 then
                    return 3770;
                end if;
            end if;
        elif m eq 10 then
            if n eq 4 then
                if v[1] eq 9 and v[2] eq 14 then
                    return 3771;
                elif v[1] eq 3 and v[2] eq 14 then
                    return 3772;
                end if;
            end if;
        end if;
    elif k eq 4 then
        if m eq 11 then
            if n eq 6 then
                if v[1] eq 3 and v[2] eq 10 then
                    return 3773;
                elif v[1] eq -5 and v[2] eq -8 then
                    return 3774;
                elif v[1] eq 7 and v[2] eq 4 then
                    return 3775;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3776;
                end if;
            end if;
        elif m eq 12 then
            if n eq 6 then
                if v[1] eq -1 and v[2] eq 4 then
                    return 3777;
                elif v[1] eq -3 and v[2] eq 4 then
                    return 3778;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if v[1] eq 2 and v[2] eq -2 then
                    return 3779;
                elif v[1] eq 3 and v[2] eq 8 then
                    return 3780;
                elif v[1] eq -7 and v[2] eq -10 then
                    return 3781;
                elif v[1] eq 5 and v[2] eq -4 then
                    return 3782;
                elif v[1] eq -4 and v[2] eq 1 then
                    return 3783;
                elif v[1] eq 3 and v[2] eq 12 then
                    return 3784;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 3785;
                elif v[1] eq 4 and v[2] eq -2 then
                    return 3786;
                end if;
            elif n eq 8 then
                if v[1] eq 11 and v[2] eq 12 then
                    return 3787;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 3788;
                end if;
            end if;
        elif m eq 14 then
            if n eq 5 then
                if v[1] eq 3 and v[2] eq 7 then
                    return 3789;
                elif v[1] eq -2 and v[2] eq 7 then
                    return 3790;
                end if;
            elif n eq 6 then
                if v[1] eq 3 and v[2] eq 4 then
                    return 3791;
                elif v[1] eq 3 and v[2] eq 16 then
                    return 3792;
                end if;
            elif n eq 8 then
                if v[1] eq 13 and v[2] eq 16 then
                    return 3793;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3794;
                end if;
            end if;
        elif m eq 16 then
            if n eq 6 then
                if v[1] eq 2 and v[2] eq -2 then
                    return 3795;
                elif v[1] eq 3 and v[2] eq 6 then
                    return 3796;
                elif v[1] eq 6 and v[2] eq -2 then
                    return 3797;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3798;
                end if;
            elif n eq 8 then
                if v[1] eq 5 and v[2] eq 6 then
                    return 3799;
                elif v[1] eq 5 and v[2] eq 16 then
                    return 3800;
                end if;
            elif n eq 9 then
                if v[1] eq 9 and v[2] eq 4 then
                    return 3801;
                elif v[1] eq -2 and v[2] eq 12 then
                    return 3802;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if v[1] eq -1 and v[2] eq 4 then
                    return 3803;
                elif v[1] eq -3 and v[2] eq 4 then
                    return 3804;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 3805;
                elif v[1] eq 4 and v[2] eq 18 then
                    return 3806;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 3807;
                elif v[1] eq 7 and v[2] eq 20 then
                    return 3808;
                end if;
            end if;
        elif m eq 18 then
            if n eq 9 then
                if v[1] eq 7 and v[2] eq 10 then
                    return 3809;
                elif v[1] eq 14 and v[2] eq 20 then
                    return 3810;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if v[1] eq 3 and v[2] eq 2 then
                    return 3811;
                elif v[1] eq 7 and v[2] eq 24 then
                    return 3812;
                end if;
            end if;
        elif m eq 8 then
            if n eq 4 then
                if v[1] eq 3 and v[2] eq 5 then
                    return 3813;
                elif v[1] eq 2 and v[2] eq 5 then
                    return 3814;
                end if;
            end if;
        elif m eq 9 then
            if n eq 6 then
                if v[1] eq 3 and v[2] eq 8 then
                    return 3815;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3816;
                end if;
            end if;
        elif m eq 10 then
            if n eq 6 then
                if v[1] eq 2 and v[2] eq -2 then
                    return 3817;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3818;
                end if;
            end if;
        end if;
    elif k eq 5 then
        if m eq 11 then
            if n eq 6 then
                if v[1] eq 2 and v[2] eq -1 then
                    return 3819;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 3820;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 3821;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 3822;
                end if;
            elif n eq 8 then
                if v[1] eq -1 and v[2] eq 4 then
                    return 3823;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 3824;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if v[1] eq 7 and v[2] eq 10 then
                    return 3825;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 3826;
                end if;
            elif n eq 8 then
                if v[1] eq -8 and v[2] eq 2 then
                    return 3827;
                elif v[1] eq 4 and v[2] eq 1 then
                    return 3828;
                end if;
            end if;
        elif m eq 14 then
            if n eq 8 then
                if v[1] eq 4 and v[2] eq 4 then
                    return 3829;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 3830;
                end if;
            end if;
        elif m eq 15 then
            if n eq 8 then
                if v[1] eq -1 and v[2] eq 4 then
                    return 3831;
                elif v[1] eq 3 and v[2] eq 8 then
                    return 3832;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 3833;
                elif v[1] eq 3 and v[2] eq 14 then
                    return 3834;
                end if;
            elif n eq 10 then
                if v[1] eq 3 and v[2] eq 8 then
                    return 3835;
                elif v[1] eq 9 and v[2] eq 10 then
                    return 3836;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if v[1] eq 5 and v[2] eq 1 then
                    return 3837;
                elif v[1] eq -2 and v[2] eq -6 then
                    return 3838;
                end if;
            end if;
        elif m eq 17 then
            if n eq 10 then
                if v[1] eq 0 and v[2] eq -4 then
                    return 3839;
                elif v[1] eq 9 and v[2] eq 6 then
                    return 3840;
                elif v[1] eq -3 and v[2] eq -4 then
                    return 3841;
                elif v[1] eq 6 and v[2] eq 2 then
                    return 3842;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if v[1] eq 4 and v[2] eq 1 then
                    return 3843;
                elif v[1] eq 3 and v[2] eq 2 then
                    return 3844;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if v[1] eq 5 and v[2] eq 4 then
                    return 3845;
                elif v[1] eq 8 and v[2] eq 4 then
                    return 3846;
                elif v[1] eq 7 and v[2] eq 4 then
                    return 3847;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 3848;
                elif v[1] eq 3 and v[2] eq 12 then
                    return 3849;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 3850;
                end if;
            end if;
        elif m eq 20 then
            if n eq 12 then
                if v[1] eq 3 and v[2] eq 10 then
                    return 3851;
                elif v[1] eq -8 and v[2] eq 6 then
                    return 3852;
                end if;
            elif n eq 10 then
                if v[1] eq 8 and v[2] eq 3 then
                    return 3853;
                elif v[1] eq -4 and v[2] eq 12 then
                    return 3854;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if v[1] eq 9 and v[2] eq 14 then
                    return 3855;
                elif v[1] eq 4 and v[2] eq 1 then
                    return 3856;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 17 then
            if n eq 8 then
                if v[1] eq 3 and v[2] eq 3 then
                    return 3857;
                elif v[1] eq -1 and v[2] eq 1 then
                    return 3858;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 3859;
                elif v[1] eq 3 and v[2] eq 6 then
                    return 3860;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 3861;
                elif v[1] eq 4 and v[2] eq 1 then
                    return 3862;
                elif v[1] eq 1 and v[2] eq 5 then
                    return 3863;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3864;
                elif v[1] eq 5 and v[2] eq 1 then
                    return 3865;
                elif v[1] eq 4 and v[2] eq 13 then
                    return 3866;
                elif v[1] eq 0 and v[2] eq 3 then
                    return 3867;
                elif v[1] eq 10 and v[2] eq 4 then
                    return 3868;
                elif v[1] eq 2 and v[2] eq 1 then
                    return 3869;
                elif v[1] eq 3 and v[2] eq 9 then
                    return 3870;
                elif v[1] eq -2 and v[2] eq 1 then
                    return 3871;
                elif v[1] eq -5 and v[2] eq -7 then
                    return 3872;
                elif v[1] eq 4 and v[2] eq -4 then
                    return 3873;
                elif v[1] eq -4 and v[2] eq -6 then
                    return 3874;
                end if;
            elif n eq 9 then
                if v[1] eq -1 and v[2] eq 1 then
                    return 3875;
                elif v[1] eq 6 and v[2] eq 9 then
                    return 3876;
                elif v[1] eq -4 and v[2] eq 1 then
                    return 3877;
                elif v[1] eq 3 and v[2] eq 5 then
                    return 3878;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 3879;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3880;
                elif v[1] eq 2 and v[2] eq 7 then
                    return 3881;
                elif v[1] eq 6 and v[2] eq 6 then
                    return 3882;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 3883;
                elif v[1] eq 9 and v[2] eq 14 then
                    return 3884;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 3885;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 3886;
                elif v[1] eq 0 and v[2] eq 5 then
                    return 3887;
                elif v[1] eq 4 and v[2] eq 11 then
                    return 3888;
                end if;
            elif n eq 10 then
                if v[1] eq 3 and v[2] eq 9 then
                    return 3889;
                elif v[1] eq 5 and v[2] eq 5 then
                    return 3890;
                elif v[1] eq -3 and v[2] eq 1 then
                    return 3891;
                elif v[1] eq 1 and v[2] eq 3 then
                    return 3892;
                elif v[1] eq 2 and v[2] eq -4 then
                    return 3893;
                elif v[1] eq 10 and v[2] eq 3 then
                    return 3894;
                elif v[1] eq 9 and v[2] eq 11 then
                    return 3895;
                elif v[1] eq 8 and v[2] eq 3 then
                    return 3896;
                elif v[1] eq 6 and v[2] eq 9 then
                    return 3897;
                elif v[1] eq 3 and v[2] eq -3 then
                    return 3898;
                end if;
            end if;
        elif m eq 18 then
            if n eq 8 then
                if v[1] eq -2 and v[2] eq 3 then
                    return 3899;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 3900;
                end if;
            elif n eq 9 then
                if v[1] eq 5 and v[2] eq 5 then
                    return 3901;
                elif v[1] eq 4 and v[2] eq 12 then
                    return 3902;
                elif v[1] eq -4 and v[2] eq 3 then
                    return 3903;
                elif v[1] eq -2 and v[2] eq 3 then
                    return 3904;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 3905;
                elif v[1] eq -5 and v[2] eq 1 then
                    return 3906;
                elif v[1] eq 4 and v[2] eq 11 then
                    return 3907;
                elif v[1] eq -1 and v[2] eq 1 then
                    return 3908;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 3909;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 3910;
                end if;
            elif n eq 10 then
                if v[1] eq -3 and v[2] eq 4 then
                    return 3911;
                elif v[1] eq 5 and v[2] eq 7 then
                    return 3912;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 3913;
                elif v[1] eq 4 and v[2] eq 1 then
                    return 3914;
                elif v[1] eq -1 and v[2] eq -6 then
                    return 3915;
                end if;
            end if;
        elif m eq 19 then
            if n eq 11 then
                if v[1] eq 3 and v[2] eq 9 then
                    return 3916;
                elif v[1] eq 8 and v[2] eq 10 then
                    return 3917;
                elif v[1] eq 7 and v[2] eq 2 then
                    return 3918;
                elif v[1] eq -17 and v[2] eq 5 then
                    return 3919;
                end if;
            elif n eq 10 then
                if v[1] eq -3 and v[2] eq 5 then
                    return 3920;
                elif v[1] eq 5 and v[2] eq 4 then
                    return 3921;
                elif v[1] eq 10 and v[2] eq 13 then
                    return 3922;
                elif v[1] eq -12 and v[2] eq 3 then
                    return 3923;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3924;
                elif v[1] eq 11 and v[2] eq 4 then
                    return 3925;
                elif v[1] eq -2 and v[2] eq 4 then
                    return 3926;
                elif v[1] eq -2 and v[2] eq -7 then
                    return 3927;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if v[1] eq 10 and v[2] eq 13 then
                    return 3928;
                elif v[1] eq -5 and v[2] eq -14 then
                    return 3929;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if v[1] eq -15 and v[2] eq 4 then
                    return 3930;
                elif v[1] eq -19 and v[2] eq 4 then
                    return 3931;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3932;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 3933;
                end if;
            elif n eq 13 then
                if v[1] eq -4 and v[2] eq 3 then
                    return 3934;
                elif v[1] eq 7 and v[2] eq 3 then
                    return 3935;
                end if;
            end if;
        elif m eq 10 then
            if n eq 6 then
                if v[1] eq 1 and v[2] eq 3 then
                    return 3936;
                elif v[1] eq -1 and v[2] eq -4 then
                    return 3937;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 3938;
                end if;
            elif n eq 7 then
                if v[1] eq 3 and v[2] eq 1 then
                    return 3939;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 3940;
                end if;
            end if;
        elif m eq 11 then
            if n eq 7 then
                if v[1] eq -4 and v[2] eq 2 then
                    return 3941;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 3942;
                end if;
            end if;
        elif m eq 12 then
            if n eq 6 then
                if v[1] eq -1 and v[2] eq -5 then
                    return 3943;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 3944;
                end if;
            elif n eq 7 then
                if v[1] eq 3 and v[2] eq 3 then
                    return 3945;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 3946;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 3947;
                elif v[1] eq 4 and v[2] eq 1 then
                    return 3948;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3949;
                elif v[1] eq 2 and v[2] eq -1 then
                    return 3950;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 3951;
                elif v[1] eq -5 and v[2] eq 2 then
                    return 3952;
                elif v[1] eq 2 and v[2] eq 3 then
                    return 3953;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 3954;
                elif v[1] eq 2 and v[2] eq 1 then
                    return 3955;
                elif v[1] eq 1 and v[2] eq -3 then
                    return 3956;
                elif v[1] eq 3 and v[2] eq -1 then
                    return 3957;
                elif v[1] eq -2 and v[2] eq 5 then
                    return 3958;
                end if;
            end if;
        elif m eq 13 then
            if n eq 6 then
                if v[1] eq 5 and v[2] eq 5 then
                    return 3959;
                elif v[1] eq -1 and v[2] eq -7 then
                    return 3960;
                elif v[1] eq -4 and v[2] eq -7 then
                    return 3961;
                elif v[1] eq 2 and v[2] eq -1 then
                    return 3962;
                elif v[1] eq -4 and v[2] eq -6 then
                    return 3963;
                elif v[1] eq 1 and v[2] eq 5 then
                    return 3964;
                elif v[1] eq -3 and v[2] eq 1 then
                    return 3965;
                elif v[1] eq -1 and v[2] eq -3 then
                    return 3966;
                elif v[1] eq -1 and v[2] eq -6 then
                    return 3967;
                end if;
            elif n eq 7 then
                if v[1] eq -3 and v[2] eq 2 then
                    return 3968;
                elif v[1] eq 1 and v[2] eq -2 then
                    return 3969;
                end if;
            elif n eq 8 then
                if v[1] eq -4 and v[2] eq 2 then
                    return 3970;
                elif v[1] eq -3 and v[2] eq 3 then
                    return 3971;
                elif v[1] eq 3 and v[2] eq 3 then
                    return 3972;
                elif v[1] eq 2 and v[2] eq 3 then
                    return 3973;
                elif v[1] eq 3 and v[2] eq 1 then
                    return 3974;
                end if;
            end if;
        elif m eq 14 then
            if n eq 6 then
                if v[1] eq -1 and v[2] eq -7 then
                    return 3975;
                elif v[1] eq 2 and v[2] eq -1 then
                    return 3976;
                elif v[1] eq 9 and v[2] eq -2 then
                    return 3977;
                elif v[1] eq -4 and v[2] eq 1 then
                    return 3978;
                elif v[1] eq -7 and v[2] eq 2 then
                    return 3979;
                elif v[1] eq -1 and v[2] eq -3 then
                    return 3980;
                elif v[1] eq 3 and v[2] eq 11 then
                    return 3981;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 3982;
                end if;
            elif n eq 7 then
                if v[1] eq -2 and v[2] eq 6 then
                    return 3983;
                elif v[1] eq -1 and v[2] eq 1 then
                    return 3984;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 3985;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 3986;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 3987;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 3988;
                elif v[1] eq 5 and v[2] eq 1 then
                    return 3989;
                elif v[1] eq 7 and v[2] eq 10 then
                    return 3990;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 3991;
                elif v[1] eq 2 and v[2] eq 5 then
                    return 3992;
                elif v[1] eq 1 and v[2] eq -2 then
                    return 3993;
                elif v[1] eq 4 and v[2] eq 10 then
                    return 3994;
                elif v[1] eq 5 and v[2] eq 8 then
                    return 3995;
                elif v[1] eq -5 and v[2] eq -8 then
                    return 3996;
                elif v[1] eq -2 and v[2] eq 4 then
                    return 3997;
                end if;
            elif n eq 8 then
                if v[1] eq 3 and v[2] eq 2 then
                    return 3998;
                elif v[1] eq -1 and v[2] eq 1 then
                    return 3999;
                elif v[1] eq -1 and v[2] eq -5 then
                    return 4000;
                elif v[1] eq 7 and v[2] eq 3 then
                    return 4001;
                elif v[1] eq 4 and v[2] eq 6 then
                    return 4002;
                elif v[1] eq 5 and v[2] eq 5 then
                    return 4003;
                elif v[1] eq 6 and v[2] eq 3 then
                    return 4004;
                elif v[1] eq -3 and v[2] eq 1 then
                    return 4005;
                elif v[1] eq -3 and v[2] eq -5 then
                    return 4006;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 4007;
                elif v[1] eq -6 and v[2] eq 3 then
                    return 4008;
                elif v[1] eq -2 and v[2] eq -8 then
                    return 4009;
                end if;
            elif n eq 9 then
                if v[1] eq -3 and v[2] eq 5 then
                    return 4010;
                elif v[1] eq 5 and v[2] eq 7 then
                    return 4011;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 4012;
                elif v[1] eq 2 and v[2] eq 3 then
                    return 4013;
                end if;
            end if;
        elif m eq 15 then
            if n eq 7 then
                if v[1] eq 3 and v[2] eq -5 then
                    return 4014;
                elif v[1] eq -1 and v[2] eq -5 then
                    return 4015;
                elif v[1] eq -2 and v[2] eq 10 then
                    return 4016;
                elif v[1] eq 4 and v[2] eq 5 then
                    return 4017;
                elif v[1] eq 1 and v[2] eq 3 then
                    return 4018;
                elif v[1] eq 0 and v[2] eq -4 then
                    return 4019;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 4020;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 4021;
                elif v[1] eq 1 and v[2] eq 6 then
                    return 4022;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 4023;
                elif v[1] eq 2 and v[2] eq 2 then
                    return 4024;
                elif v[1] eq -2 and v[2] eq 1 then
                    return 4025;
                elif v[1] eq -4 and v[2] eq -7 then
                    return 4026;
                elif v[1] eq 3 and v[2] eq -2 then
                    return 4027;
                elif v[1] eq -2 and v[2] eq 3 then
                    return 4028;
                end if;
            elif n eq 8 then
                if v[1] eq 3 and v[2] eq 5 then
                    return 4029;
                elif v[1] eq -2 and v[2] eq 3 then
                    return 4030;
                elif v[1] eq -2 and v[2] eq 2 then
                    return 4031;
                elif v[1] eq -2 and v[2] eq 9 then
                    return 4032;
                end if;
            elif n eq 9 then
                if v[1] eq -11 and v[2] eq 5 then
                    return 4033;
                elif v[1] eq 6 and v[2] eq 3 then
                    return 4034;
                elif v[1] eq 8 and v[2] eq 10 then
                    return 4035;
                elif v[1] eq 3 and v[2] eq 3 then
                    return 4036;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 4037;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 4038;
                elif v[1] eq -3 and v[2] eq 10 then
                    return 4039;
                elif v[1] eq 3 and v[2] eq -3 then
                    return 4040;
                end if;
            elif n eq 10 then
                if v[1] eq -10 and v[2] eq 4 then
                    return 4041;
                elif v[1] eq -7 and v[2] eq 3 then
                    return 4042;
                end if;
            end if;
        elif m eq 16 then
            if n eq 7 then
                if v[1] eq 1 and v[2] eq 4 then
                    return 4043;
                elif v[1] eq -2 and v[2] eq -10 then
                    return 4044;
                elif v[1] eq 5 and v[2] eq 10 then
                    return 4045;
                elif v[1] eq -5 and v[2] eq -13 then
                    return 4046;
                end if;
            elif n eq 8 then
                if v[1] eq 4 and v[2] eq 5 then
                    return 4047;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 4048;
                elif v[1] eq 3 and v[2] eq 5 then
                    return 4049;
                elif v[1] eq -4 and v[2] eq 1 then
                    return 4050;
                elif v[1] eq 1 and v[2] eq 3 then
                    return 4051;
                elif v[1] eq -3 and v[2] eq 3 then
                    return 4052;
                elif v[1] eq -1 and v[2] eq -11 then
                    return 4053;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 4054;
                elif v[1] eq 7 and v[2] eq 10 then
                    return 4055;
                elif v[1] eq 6 and v[2] eq 6 then
                    return 4056;
                elif v[1] eq 5 and v[2] eq 12 then
                    return 4057;
                elif v[1] eq 2 and v[2] eq 1 then
                    return 4058;
                elif v[1] eq -5 and v[2] eq -6 then
                    return 4059;
                elif v[1] eq -7 and v[2] eq -10 then
                    return 4060;
                end if;
            elif n eq 9 then
                if v[1] eq 0 and v[2] eq -5 then
                    return 4061;
                elif v[1] eq -3 and v[2] eq 2 then
                    return 4062;
                elif v[1] eq -13 and v[2] eq 3 then
                    return 4063;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 4064;
                elif v[1] eq 1 and v[2] eq 5 then
                    return 4065;
                elif v[1] eq 5 and v[2] eq 1 then
                    return 4066;
                elif v[1] eq -4 and v[2] eq 2 then
                    return 4067;
                elif v[1] eq -3 and v[2] eq -11 then
                    return 4068;
                elif v[1] eq -3 and v[2] eq -8 then
                    return 4069;
                end if;
            elif n eq 10 then
                if v[1] eq -5 and v[2] eq 4 then
                    return 4070;
                elif v[1] eq 7 and v[2] eq 4 then
                    return 4071;
                elif v[1] eq 6 and v[2] eq 3 then
                    return 4072;
                elif v[1] eq -6 and v[2] eq 2 then
                    return 4073;
                elif v[1] eq -2 and v[2] eq -4 then
                    return 4074;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 4075;
                elif v[1] eq 6 and v[2] eq 4 then
                    return 4076;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 4077;
                end if;
            end if;
        end if;
    elif k eq 7 then
        if m eq 13 then
            if n eq 7 then
                if v[1] eq -4 and v[2] eq -6 then
                    return 4078;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 4079;
                end if;
            elif n eq 8 then
                if v[1] eq 4 and v[2] eq 6 then
                    return 4080;
                elif v[1] eq -3 and v[2] eq -5 then
                    return 4081;
                end if;
            end if;
        elif m eq 14 then
            if n eq 7 then
                if v[1] eq -1 and v[2] eq -6 then
                    return 4082;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 4083;
                elif v[1] eq -2 and v[2] eq 3 then
                    return 4084;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 4085;
                elif v[1] eq 6 and v[2] eq 7 then
                    return 4086;
                elif v[1] eq 5 and v[2] eq 7 then
                    return 4087;
                elif v[1] eq 1 and v[2] eq 5 then
                    return 4088;
                elif v[1] eq 3 and v[2] eq 7 then
                    return 4089;
                elif v[1] eq 3 and v[2] eq 5 then
                    return 4090;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 4091;
                elif v[1] eq -1 and v[2] eq -4 then
                    return 4092;
                end if;
            elif n eq 8 then
                if v[1] eq -4 and v[2] eq -7 then
                    return 4093;
                elif v[1] eq 3 and v[2] eq -3 then
                    return 4094;
                elif v[1] eq -4 and v[2] eq 1 then
                    return 4095;
                elif v[1] eq 3 and v[2] eq 3 then
                    return 4096;
                end if;
            end if;
        elif m eq 15 then
            if n eq 7 then
                if v[1] eq -1 and v[2] eq -7 then
                    return 4097;
                elif v[1] eq -2 and v[2] eq 1 then
                    return 4098;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 4099;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 4100;
                elif v[1] eq -7 and v[2] eq 2 then
                    return 4101;
                elif v[1] eq -1 and v[2] eq -5 then
                    return 4102;
                end if;
            elif n eq 8 then
                if v[1] eq -5 and v[2] eq -7 then
                    return 4103;
                elif v[1] eq 2 and v[2] eq 5 then
                    return 4104;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 4105;
                elif v[1] eq -3 and v[2] eq 3 then
                    return 4106;
                elif v[1] eq 2 and v[2] eq 3 then
                    return 4107;
                elif v[1] eq 5 and v[2] eq 5 then
                    return 4108;
                elif v[1] eq 3 and v[2] eq 1 then
                    return 4109;
                elif v[1] eq 0 and v[2] eq 5 then
                    return 4110;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 4111;
                elif v[1] eq 4 and v[2] eq 5 then
                    return 4112;
                elif v[1] eq -1 and v[2] eq -4 then
                    return 4113;
                end if;
            elif n eq 9 then
                if v[1] eq 6 and v[2] eq 4 then
                    return 4114;
                elif v[1] eq -3 and v[2] eq -5 then
                    return 4115;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if v[1] eq 6 and v[2] eq 9 then
                    return 4116;
                elif v[1] eq 3 and v[2] eq 7 then
                    return 4117;
                elif v[1] eq 3 and v[2] eq 6 then
                    return 4118;
                elif v[1] eq 1 and v[2] eq 3 then
                    return 4119;
                elif v[1] eq -3 and v[2] eq 1 then
                    return 4120;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 4121;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 4122;
                elif v[1] eq -4 and v[2] eq 8 then
                    return 4123;
                elif v[1] eq 2 and v[2] eq 5 then
                    return 4124;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 4125;
                elif v[1] eq 4 and v[2] eq 9 then
                    return 4126;
                elif v[1] eq 0 and v[2] eq 4 then
                    return 4127;
                elif v[1] eq 4 and v[2] eq -4 then
                    return 4128;
                elif v[1] eq -5 and v[2] eq -7 then
                    return 4129;
                end if;
            elif n eq 9 then
                if v[1] eq -2 and v[2] eq 9 then
                    return 4130;
                elif v[1] eq -3 and v[2] eq 6 then
                    return 4131;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 4132;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 4133;
                elif v[1] eq 3 and v[2] eq 5 then
                    return 4134;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 4135;
                elif v[1] eq 5 and v[2] eq 5 then
                    return 4136;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 4137;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 4138;
                elif v[1] eq 2 and v[2] eq 4 then
                    return 4139;
                elif v[1] eq 0 and v[2] eq 5 then
                    return 4140;
                elif v[1] eq -2 and v[2] eq -7 then
                    return 4141;
                elif v[1] eq -2 and v[2] eq 5 then
                    return 4142;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if v[1] eq -3 and v[2] eq 4 then
                    return 4143;
                elif v[1] eq 1 and v[2] eq 5 then
                    return 4144;
                end if;
            elif n eq 9 then
                if v[1] eq 3 and v[2] eq 6 then
                    return 4145;
                elif v[1] eq 3 and v[2] eq 8 then
                    return 4146;
                elif v[1] eq 5 and v[2] eq 7 then
                    return 4147;
                elif v[1] eq 0 and v[2] eq -4 then
                    return 4148;
                elif v[1] eq -3 and v[2] eq 3 then
                    return 4149;
                elif v[1] eq -7 and v[2] eq -10 then
                    return 4150;
                elif v[1] eq -3 and v[2] eq 11 then
                    return 4151;
                elif v[1] eq -5 and v[2] eq 3 then
                    return 4152;
                elif v[1] eq -4 and v[2] eq 4 then
                    return 4153;
                elif v[1] eq -1 and v[2] eq 2 then
                    return 4154;
                end if;
            end if;
        elif m eq 18 then
            if n eq 11 then
                if v[1] eq -10 and v[2] eq 8 then
                    return 4155;
                elif v[1] eq -7 and v[2] eq 2 then
                    return 4156;
                end if;
            elif n eq 9 then
                if v[1] eq 6 and v[2] eq 8 then
                    return 4157;
                elif v[1] eq 1 and v[2] eq -4 then
                    return 4158;
                elif v[1] eq 3 and v[2] eq -7 then
                    return 4159;
                elif v[1] eq -10 and v[2] eq 4 then
                    return 4160;
                elif v[1] eq -1 and v[2] eq 3 then
                    return 4161;
                elif v[1] eq -7 and v[2] eq 4 then
                    return 4162;
                elif v[1] eq 5 and v[2] eq 5 then
                    return 4163;
                elif v[1] eq -3 and v[2] eq 1 then
                    return 4164;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 4165;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 4166;
                elif v[1] eq 3 and v[2] eq -4 then
                    return 4167;
                end if;
            elif n eq 10 then
                if v[1] eq 7 and v[2] eq 10 then
                    return 4168;
                elif v[1] eq 6 and v[2] eq 6 then
                    return 4169;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 4170;
                elif v[1] eq 4 and v[2] eq 6 then
                    return 4171;
                elif v[1] eq 4 and v[2] eq 2 then
                    return 4172;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if v[1] eq 5 and v[2] eq 5 then
                    return 4173;
                elif v[1] eq 0 and v[2] eq 4 then
                    return 4174;
                elif v[1] eq 5 and v[2] eq 6 then
                    return 4175;
                elif v[1] eq -14 and v[2] eq 11 then
                    return 4176;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 4177;
                elif v[1] eq -3 and v[2] eq 12 then
                    return 4178;
                elif v[1] eq 3 and v[2] eq -7 then
                    return 4179;
                elif v[1] eq -10 and v[2] eq 3 then
                    return 4180;
                end if;
            end if;
        elif m eq 20 then
            if n eq 11 then
                if v[1] eq -2 and v[2] eq 4 then
                    return 4181;
                elif v[1] eq 5 and v[2] eq 2 then
                    return 4182;
                elif v[1] eq 4 and v[2] eq 3 then
                    return 4183;
                elif v[1] eq 6 and v[2] eq 3 then
                    return 4184;
                end if;
            end if;
        end if;
    elif k eq 8 then
        if m eq 14 then
            if n eq 8 then
                if v[1] eq 5 and v[2] eq 8 then
                    return 4185;
                elif v[1] eq 5 and v[2] eq 3 then
                    return 4186;
                end if;
            end if;
        elif m eq 15 then
            if n eq 8 then
                if v[1] eq 3 and v[2] eq 7 then
                    return 4187;
                elif v[1] eq -1 and v[2] eq -4 then
                    return 4188;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if v[1] eq 2 and v[2] eq 7 then
                    return 4189;
                elif v[1] eq 4 and v[2] eq 3 then
                    return 4190;
                end if;
            elif n eq 9 then
                if v[1] eq 3 and v[2] eq 7 then
                    return 4191;
                elif v[1] eq 3 and v[2] eq 4 then
                    return 4192;
                end if;
            end if;
        elif m eq 17 then
            if n eq 9 then
                if v[1] eq 6 and v[2] eq 8 then
                    return 4193;
                elif v[1] eq 1 and v[2] eq -4 then
                    return 4194;
                elif v[1] eq -7 and v[2] eq 4 then
                    return 4195;
                elif v[1] eq 1 and v[2] eq 4 then
                    return 4196;
                elif v[1] eq 4 and v[2] eq 4 then
                    return 4197;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if v[1] eq 1 and v[2] eq 4 then
                    return 4198;
                elif v[1] eq 3 and v[2] eq 3 then
                    return 4199;
                end if;
            end if;
        end if;
    end if;
    // No luck
    return 0;
end function;

// We're down to just 49 facets left to recognise -- we use the hash function.
function to_id_test8(k,m,n,h)
    if k eq 5 then
        if m eq 15 then
            if n eq 7 then
                if h eq 6325 then
                    return 4200;
                elif h eq 15051 then
                    return 4201;
                end if;
            elif n eq 8 then
                if h eq 58075 then
                    return 4202;
                elif h eq 3273 then
                    return 4203;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if h eq 35459 then
                    return 4204;
                elif h eq 21097 then
                    return 4205;
                end if;
            end if;
        end if;
    elif k eq 6 then
        if m eq 13 then
            if n eq 6 then
                if h eq 53099 then
                    return 4206;
                elif h eq 12268 then
                    return 4207;
                elif h eq 23284 then
                    return 4208;
                elif h eq 12011 then
                    return 4209;
                end if;
            elif n eq 8 then
                if h eq 23805 then
                    return 4210;
                elif h eq 36433 then
                    return 4211;
                end if;
            end if;
        elif m eq 14 then
            if n eq 6 then
                if h eq 58925 then
                    return 4212;
                elif h eq 59519 then
                    return 4213;
                end if;
            elif n eq 7 then
                if h eq 11674 then
                    return 4214;
                elif h eq 7462 then
                    return 4215;
                elif h eq 3076 then
                    return 4216;
                elif h eq 2100 then
                    return 4217;
                end if;
            end if;
        elif m eq 15 then
            if n eq 7 then
                if h eq 28833 then
                    return 4218;
                elif h eq 48679 then
                    return 4219;
                elif h eq 29291 then
                    return 4220;
                elif h eq 41271 then
                    return 4221;
                end if;
            elif n eq 8 then
                if h eq 18863 then
                    return 4222;
                elif h eq 22977 then
                    return 4223;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if h eq 5357 then
                    return 4224;
                elif h eq 37599 then
                    return 4225;
                elif h eq 41599 then
                    return 4226;
                end if;
            end if;
        elif m eq 19 then
            if n eq 10 then
                if h eq 15162 then
                    return 4227;
                elif h eq 17407 then
                    return 4228;
                end if;
            end if;
        elif m eq 21 then
            if n eq 12 then
                if h eq 15375 then
                    return 4229;
                elif h eq 10845 then
                    return 4230;
                end if;
            end if;
        end if;
    elif k eq 7 then
        if m eq 15 then
            if n eq 7 then
                if h eq 40194 then
                    return 4231;
                elif h eq 22672 then
                    return 4232;
                elif h eq 43431 then
                    return 4233;
                elif h eq 35073 then
                    return 4234;
                end if;
            end if;
        elif m eq 16 then
            if n eq 8 then
                if h eq 4599 then
                    return 4235;
                elif h eq 55034 then
                    return 4236;
                elif h eq 41199 then
                    return 4237;
                elif h eq 4595 then
                    return 4238;
                elif h eq 48607 then
                    return 4239;
                elif h eq 2133 then
                    return 4240;
                end if;
            end if;
        elif m eq 17 then
            if n eq 8 then
                if h eq 2595 then
                    return 4241;
                elif h eq 2991 then
                    return 4242;
                end if;
            elif n eq 9 then
                if h eq 52185 then
                    return 4243;
                elif h eq 9904 then
                    return 4244;
                elif h eq 34558 then
                    return 4245;
                elif h eq 57969 then
                    return 4246;
                end if;
            end if;
        elif m eq 18 then
            if n eq 10 then
                if h eq 25553 then
                    return 4247;
                elif h eq 58083 then
                    return 4248;
                end if;
            end if;
        end if;
    end if;
    // We should never be here
    return 0;
end function;

/////////////////////////////////////////////////////////////////////////
// Local functions
/////////////////////////////////////////////////////////////////////////

// Returns the normal form for the given facet id. The facet will be returned
// as a sequence of vertices (or, more accurately, as a sequence of sequences
// of integers).
function canonical_dim3_facet(id)
    // Sanity check
    error if id lt 1 or id gt 4248, "Facet id must be in the range 1..4248";
    // Call the appropriate cache function
    if id le 500 then
        return canonical_dim3_facet_cache_1(id);
    elif id le 1000 then
        return canonical_dim3_facet_cache_2(id);
    elif id le 1500 then
        return canonical_dim3_facet_cache_3(id);
    elif id le 2000 then
        return canonical_dim3_facet_cache_4(id);
    elif id le 2500 then
        return canonical_dim3_facet_cache_5(id);
    elif id le 3000 then
        return canonical_dim3_facet_cache_6(id);
    elif id le 3500 then
        return canonical_dim3_facet_cache_7(id);
    elif id le 4000 then
        return canonical_dim3_facet_cache_8(id);
    else
        return canonical_dim3_facet_cache_9(id);
    end if;
end function;

// Returns the id of the facet P (where P is assumed to be the facet of a
// canonical Fano 3-tope).
function canonical_dim3_facet_to_id(P)
    // Sanity check
    error if Dimension(P) ne 2 or not IsIntegral(P),
        "Argument must be the facet of a canonical Fano 3-tope";
    // Collect the most basic data and perform the first test
    k:=NumberOfVertices(P);
    m:=NumberOfPoints(P);
    n:=NumberOfBoundaryPoints(P);
    id:=to_id_test1(k,m,n);
    if id ne 0 then return id; end if;
    // Compute the barycentre in two different ways and ask whether it's
    // a lattice point
    bary1:=IsIntegral(&+Vertices(P) / NumberOfVertices(P));
    bary2:=IsIntegral(&+BoundaryPoints(P) / NumberOfBoundaryPoints(P));
    id:=to_id_test2(k,m,n,bary1,bary2);
    if id ne 0 then return id; end if;
    // Collect the edge lengths
    e:=edge_lengths(P);
    id:=to_id_test3(k,m,n,e);
    if id ne 0 then return id; end if;
    id:=to_id_test4(k,m,n,bary1,bary2,e);
    if id ne 0 then return id; end if;
    // Now we use the corner indices
    d:=corner_dets(P);
    id:=to_id_test5(k,m,n,d);
    if id ne 0 then return id; end if;
    id:=to_id_test6(k,m,n,bary1,bary2,e,d);
    if id ne 0 then return id; end if;
    // For the last few cases we resort to the affine normal form
    v:=final_vertex(P);
    id:=to_id_test7(k,m,n,v);
    if id ne 0 then return id; end if;
    h:=hash_polytope(P);
    id:=to_id_test8(k,m,n,h);
    error if id eq 0, "Argument must be the facet of a canonical Fano 3-tope";
    return id;
end function;

/////////////////////////////////////////////////////////////////////////
// Intrinsics
/////////////////////////////////////////////////////////////////////////

// Note: Don't remove this intrinsic (required by external code).
intrinsic InternalPolytopeCanonicalFanoDim3FacetID( P::TorPol ) -> RngIntElt
{Assumes that the given (2-dimensional) polygon P is a facet of a canonical Fano 3-dimensional polytope. Returns the index of the facet. The facets are indexed (up to equivalence) 1..4248. Note: If the polygon is not a facet of a canonical Fano polytope then the behaviour is undefined.}
    // Sanity check
    require IsPolytope(P) and IsIntegral(P) and Dimension(P) eq 2:
        "Argument must be the facet of a canonical Fano 3-tope";
    k:=NumberOfVertices(P);
    require k le 9:
        "Argument must be the facet of a canonical Fano 3-tope";
    m:=NumberOfPoints(P);
    n:=NumberOfBoundaryPoints(P);
    case k:
        when 3:
            bool:=m le 28 and n le 18;
        when 4:
            bool:=m le 27 and n le 17;
        when 5:
            bool:=m le 26 and n le 16;
        when 6:
            bool:=m le 25 and n le 15;
        when 7:
            bool:=m le 22 and n le 13;
        when 8:
            bool:=m le 21 and n le 12;
        when 9:
            bool:=m le 16 and n le 9;
    end case;
    require bool: "Argument must be the facet of a canonical Fano 3-tope";
    // Hope for the best and return the id
    return canonical_dim3_facet_to_id(P);
end intrinsic;
