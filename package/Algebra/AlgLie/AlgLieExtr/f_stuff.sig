174,1
S,Instance,"Create an instance of L as a structure constant Lie algebra L' by evaluating the f-variety in Q. L' will be defined over the ring Universe(Q). The second value returned is an invertible map from L to L'. An error is thrown if Check is set to true and the resulting multiplication table does not satisfy the Jacobi identity. Rep (""Auto"", ""Dense"", or ""Sparse"") controls the type of multiplication table used",0,2,0,0,0,0,0,0,0,82,,0,0,478,,15,175,-38,-38,-38,-38
S,MultiplicationTable,"Create a multiplication table for L as a structure constant Lie algebra L', over BaseRing(L). An error is thrown if Check is set to true and the resulting multiplication table does not satisfy the Jacobi identity. Rep (""Auto"", ""Dense"", or ""Sparse"") controls the type of multiplication table used",0,1,0,0,0,0,0,0,0,478,,82,-38,-38,-38,-38,-38
S,Instance,"Create an instance of L as a structure constant Lie algebra L', over BaseRing(L). The second value returned is an invertible map from L to L'. An error is thrown if Check is set to true and the resulting multiplication table does not satisfy the Jacobi identity. Rep (""Auto"", ""Dense"", or ""Sparse"") controls the type of multiplication table used",0,1,0,0,0,0,0,0,0,478,,15,-38,-38,-38,-38,-38
S,DimensionsEstimate,"Estimate the dimensions of the subvarieties of the parameter space X of L giving rise to irreducible Lie algebra modules of different dimensions. This procedure repeatedly (at most NumSamples times) invokes Instance(L, g()) to produce a Lie algebra M. The composition series of M are computed, and the dimension e of its simple factor is stored. Then, for each of these e encountered, the dimension of the subvariety (inside the algebraic variety X) that contains Lie algebras whose top factor has dimension e is estimated using the dimension d of the full f-variety that the user provides. The estimate is printed as a sequence of triples (e, n, s): n is the number of times dimension e was encountered, and s the estimate for the dimension of the subvariety. Note that this procedure assumes that X itself is an affine variety (which is proved to be true if Gamma(L) is a connected simply laced Dynkin diagram of finite or affine type) and that g() produces uniformly random elements of X. If either of these two is not the case, the estimates produced are likely wrong. Moreover, g() must produce a sequence of elements of a finite field",0,2,0,0,0,0,0,0,0,41,,0,0,478,,82,198,-38,-38,-38,-38
S,InstancesForDimensions,"By randomly generating instances of L (using g()) try to find instances for each of the ""top factor dimensions"" in ds",1,2,1,83,0,148,3,0,0,0,0,0,0,0,83,,0,0,41,,0,0,478,,457,-38,-38,-38,-38,-38
