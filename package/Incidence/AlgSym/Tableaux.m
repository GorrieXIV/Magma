freeze;
 
intrinsic Tableaux(sf::AlgSymElt,m::RngIntElt) -> SetMulti
{Return the multiset of tableaux in 1..m generated by the Schur function sf}
requirege m,0;
require HasSchurBasis(Parent(sf)): "only for Schur functions";
require BaseRing(Parent(sf)) eq Integers(): "only for Schur functions over integers";

C:=Coefficients(sf);
for i in C do
    if i lt 0 then
       error("negative coefficients:no generation of tableaux possible");
    end if;
end for;
 
l := #C;
P:=Partitions(sf);
res := {* *};
for i in [1..l] do
    t:=TableauxOfShape(P[i],m);
    for tt in t do
    res := res join {* tt^^C[i] *};
    end for;
end for;
 
return res;
end intrinsic;
