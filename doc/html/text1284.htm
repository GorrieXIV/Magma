<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Secondary Invariants</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1285.htm">[Next]</A><A  HREF = "text1283.htm">[Prev]</A> <A  HREF = "text1285.htm">[Right]</A> <A  HREF = "text1283.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "13989">Secondary Invariants</A></H3>

<P>
<P>
<P>
Let R=K[V]<sup>G</sup> be the invariant ring of a finite group G over the field K and
suppose the degree of G is n.  If 
{ f<sub>1</sub>, ..., f<sub>n</sub> } is a set of primary invariants for R then
R can be viewed as a finitely generated module over the algebra
A=K[f<sub>1</sub>, ..., f<sub>n</sub>].
A set of <I>secondary invariants</I> for R with respect to these primary
invariants is set of module generators over A.
The invocation <TT>SecondaryInvariants(R)</TT> allows automatic construction of
secondary invariants of R.  The secondary invariants are stored in R and
recalled as necessary in subsequent computations.
Different algorithms are needed for the modular and non-modular cases --
see <A  HREF = "text1271.htm#bib_KemperSteel">[KS97]</A> for details.


<H5><A NAME = "13990">SecondaryInvariants(R) : RngInvar -&gt; [ RngMPolElt ]</A></H5>
<BLOCKQUOTE>
Construct secondary invariants for the invariant ring R=K[V]<sup>G</sup> (with respect
to the current primary invariants of R, constructed automatically first
if necessary) as a sorted sequence (with increasing degrees) of polynomials
of R.
The secondary invariants are <I>minimal</I>; i.e. they are a minimal generating
set for R considered as a module over the algebra generated by the
primary invariants.
</BLOCKQUOTE>
<H5><A NAME = "13991">SecondaryInvariants(R, H) : RngInvar, Grp -&gt; [ RngMPolElt ]</A></H5>
<BLOCKQUOTE>
Construct secondary invariants for the <I>modular</I> invariant ring
R=K[V]<sup>G</sup> (with respect to the current primary invariants of R),
using the subgroup H.  This function can only be used if R is
a modular invariant ring.  H must be a subgroup of the group G;
first, secondary invariants are computed for K[V]<sup>H</sup> using the current
primary invariants for G and then these secondary invariants are
used in the manner described in <A  HREF = "text1271.htm#bib_KemperSteel">[KS97]</A>.  The function
<TT>SecondaryInvariants(R)</TT> (taking just the invariant ring R)
follows a default strategy in which it tries
to use this function with the best subgroup H appropriate.
Thus usually using this function to specify
a particular subgroup is not more helpful than the one-argument function
but occasionally it may be.
</BLOCKQUOTE>
<H5><A NAME = "13992">IrreducibleSecondaryInvariants(R) : RngInvar -&gt; [ RngMPolElt ]</A></H5>
<BLOCKQUOTE>
Return the irreducible secondary invariants of
the invariant ring R=K[V]<sup>G</sup> (with respect
to the current primary invariants of R, constructed automatically first
if necessary) as a sequence of polynomials of R.  These, together with
the primary invariants of R, generate R as an algebra over K.
In the modular case, these will be the same as the secondary invariants of
R (excluding the polynomial 1)
but in the non-modular case they may form a proper subsequence of the
secondary invariants.  Note that the expression of the secondary
invariants in terms of the irreducible secondary invariants is given
as the second return value of the function <TT>Algebra</TT>
(see the section on the algebra of an invariant ring and algebraic relations
below).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13993">Example <TT>RngInvar_SecondaryInvariants (H116E7)</TT></A></H3>
We construct primary and then secondary invariants for the invariant ring
R of the group G over GF(2), where G is the (permutation) cyclic
group of order 4.
Note that in this example
Noether's degree bound (which holds for characteristic 0) is violated.
<P>
<P>
<PRE>
&gt; K := GF(2);        
&gt; G := CyclicGroup(4);
&gt; R := InvariantRing(G, K);
&gt; time PrimaryInvariants(R);
[
    x1 + x2 + x3 + x4,
    x1*x2 + x1*x4 + x2*x3 + x3*x4,
    x1*x3 + x2*x4,
    x1*x2*x3*x4
]
Time: 0.040
&gt; time SecondaryInvariants(R);
[
    1,
    x1*x2*x3 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4,
    x1^2*x3 + x1^2*x4 + x1*x2^2 + x1*x3^2 + x2^2*x4 + 
        x2*x3^2 + x2*x4^2 + x3*x4^2,
    x1^2*x3^2 + x1^2*x3*x4 + x1*x2^2*x4 + x1*x2*x3^2 + 
        x2^2*x4^2 + x2*x3*x4^2,
    x1^3*x3*x4 + x1^2*x2^2*x3 + x1^2*x2^2*x4 + 
        x1^2*x2*x3^2 + x1^2*x2*x3*x4 + x1^2*x2*x4^2 + 
        x1^2*x3^2*x4 + x1^2*x3*x4^2 + x1*x2^3*x4 + 
        x1*x2^2*x3^2 + x1*x2^2*x3*x4 + x1*x2^2*x4^2 + 
        x1*x2*x3^3 + x1*x2*x3^2*x4 + x1*x2*x3*x4^2 + 
        x1*x3^2*x4^2 + x2^2*x3^2*x4 + x2^2*x3*x4^2 + 
        x2*x3^2*x4^2 + x2*x3*x4^3
]
Time: 0.080
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1285.htm">[Next]</A><A  HREF = "text1283.htm">[Prev]</A> <A  HREF = "text1285.htm">[Right]</A> <A  HREF = "text1283.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>