<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Permutation Representations  of Linear Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text649.htm">[Next]</A><A  HREF = "text647.htm">[Prev]</A> <A  HREF = "text649.htm">[Right]</A> <A  HREF = "text647.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7340">Permutation Representations  of Linear Groups</A></H3>

<P>
<P>
Each of the functions in this family returns two values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A permutation group G corresponding to the action of a designated
matrix group M on a vector space V; and
<DT>(b)</DT><DD>An indexed set of affine or projective points on which M acts,
such that the indexing gives the correspondence between this set and the G-set
of M. 
<P>
<P>
<P>
</DL>
Furthermore, most of the function in this family are parameterized by
two objects: the <I>degree</I> and the <I>coefficient field</I> of the matrix
group.  These can be supplied in one of the following three forms:
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>Integers n and q corresponding to the degree and the
field GF(q) of M (GF(q<sup>2</sup>) in the case of the unitary groups).
<DT>(ii)</DT><DD>An integer n and a finite field K corresponding to the
degree and the coefficient field of M.
<DT>(iii)</DT><DD>A vector space V = K<sup>n</sup> on which M naturally acts.
<P>
<P>
<P>
</DL>
The Suzuki group, however, is only parametrised by the field, as the
degree is always four.  As such, it can be described by the integer q,
the field K = GF(q), or the vector space K<sup>4</sup>.


<H5><A NAME = "7341">AffineGeneralLinearGroup(arguments)</A></H5>
<H5>AGL(arguments)</H5>
<H5>AffineGeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineGeneralLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineGeneralLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine general linear group G = AGL(n, q), 
i.e., the group corresponding to 
the action of GL(n, q) on the affine points of the 
n-dimensional vector space V over K = GF(q).
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the affine points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7342">AffineSpecialLinearGroup(arguments)</A></H5>
<H5>ASL(arguments)</H5>
<H5>AffineSpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSpecialLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSpecialLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine special linear group G = ASL(n, q), 
i.e., the group corresponding to 
the action of SL(n, q) on the affine points of the 
n-dimensional vector space V over K = GF(q).
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the affine points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7343">AffineGammaLinearGroup(arguments)</A></H5>
<H5>AGammaL(arguments)</H5>
<H5>AffineGammaLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineGammaLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineGammaLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGammaL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGammaL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AGammaL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine gamma linear group G = AGammaL(n, q), 
i.e., the group corresponding to 
the action of GammaL(n, q) (the automorphism group of GL(n, q)) 
on the affine points of the n-dimensional vector space V over K = GF(q).
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7344">AffineSigmaLinearGroup(arguments)</A></H5>
<H5>ASigmaL(arguments)</H5>
<H5>AffineSigmaLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSigmaLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSigmaLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine sigma linear group G = ASigmaL(n, q), 
i.e., the group corresponding to 
the action of SigmaL(n, q) (the automorphism group of SL(n, q)) 
on the affine points of the n-dimensional vector space V over K = GF(q).
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7345">AffineSymplecticGroup(arguments)</A></H5>
<H5>ASp(arguments)</H5>
<H5>AffineSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSymplecticGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSymplecticGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASp(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASp(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASp(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine symplectic linear group G,
i.e., the group corresponding to 
the action of Sp(n, q) on the affine points of the 
n-dimensional vector space V over K = GF(q).
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the affine points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7346">AffineSigmaSymplecticGroup(arguments)</A></H5>
<H5>ASigmaSp(arguments)</H5>
<H5>AffineSigmaSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSigmaSymplecticGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>AffineSigmaSymplecticGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaSp(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaSp(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ASigmaSp(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the affine sigma symplectic linear group G,
i.e., the group corresponding to 
the action of Sp(n, q) on the affine points of the 
n-dimensional vector space V over K = GF(q), plus the action of a
field automorphism.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the affine points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7347">ProjectiveGeneralLinearGroup(arguments)</A></H5>
<H5>PGL(arguments)</H5>
<H5>ProjectiveGeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general linear group G = PGL(n, q), 
i.e., the group corresponding to 
the action of GL(n, q) on the projective points of the 
n-dimensional vector space V over K = GF(q), 
where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional 
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7348">ProjectiveSpecialLinearGroup(arguments)</A></H5>
<H5>PSL(arguments)</H5>
<H5>ProjectiveSpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective special linear group G = PSL(n, q), 
i.e., the group corresponding to 
the action of SL(n, q) on the projective points of the 
n-dimensional vector space V over K = GF(q), 
where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional 
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7349">ProjectiveGammaLinearGroup(arguments)</A></H5>
<H5>PGammaL(arguments)</H5>
<H5>ProjectiveGammaLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGammaLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGammaLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct an automorphism group G = PGammaL(n, q) of the 
projective general linear group B = PGL(n, q),
by adding the field automorphisms of GF(q) to B.
The permutation action corresponds to the natural action on 1-dimensional
subspaces of the n-dimensional vector space V over the field 
K = GF(q), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between the points
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7350">ProjectiveSigmaLinearGroup(arguments)</A></H5>
<H5>PSigmaL(arguments)</H5>
<H5>ProjectiveSigmaLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaLinearGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaLinearGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaL(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaL(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaL(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct an automorphism group G = PSigmaL(n, q) of the 
projective special linear group B = PSL(n, q),
by adding the field automorphisms of GF(q) to B.
The permutation action corresponds to the natural action on 1-dimensional
subspaces of the n-dimensional vector space V over the field 
K = GF(q), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between the points
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7351">ProjectiveGeneralUnitaryGroup(arguments)</A></H5>
<H5>PGU(arguments)</H5>
<H5>ProjectiveGeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralUnitaryGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralUnitaryGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGU(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGU(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGU(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general unitary group G = PGU(n, q)
corresponding to the n-dimensional vector space V over the field 
K = GF(q<sup>2</sup>), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional 
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7352">ProjectiveSpecialUnitaryGroup(arguments)</A></H5>
<H5>PSU(arguments)</H5>
<H5>ProjectiveSpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialUnitaryGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialUnitaryGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSU(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSU(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSU(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective special unitary group G = PSU(n, q)
corresponding to the n-dimensional vector space V over the field 
K = GF(q<sup>2</sup>), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional 
subspaces of V, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7353">ProjectiveGammaUnitaryGroup(arguments)</A></H5>
<H5>PGammaU(arguments)</H5>
<H5>ProjectiveGammaUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGammaUnitaryGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGammaUnitaryGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaU(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaU(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGammaU(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct an automorphism group G = PGammaU(n, q) of the
projective general unitary group B = PGU(n, q),
by adding the field automorphisms of GF(q<sup>2</sup>) to B.
The permutation action corresponds to the natural action on 1-dimensional
subspaces of the n-dimensional vector space V over the field 
K = GF(q<sup>2</sup>), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7354">ProjectiveSigmaUnitaryGroup(arguments)</A></H5>
<H5>PSigmaU(arguments)</H5>
<H5>ProjectiveSigmaUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaUnitaryGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaUnitaryGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaU(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaU(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaU(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the automorphism group G = PSigmaU(n, q) of the
projective special unitary group B = PSU(n, q),
by adding the field automorphisms of GF(q<sup>2</sup>) to B.
The permutation action corresponds to the natural action on 1-dimensional
subspaces of the n-dimensional vector space V over the field 
K = GF(q<sup>2</sup>), where n &ge;2 and q is a prime power.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7355">ProjectiveSymplecticGroup(arguments)</A></H5>
<H5>PSp(arguments)</H5>
<H5>ProjectiveSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSymplecticGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSymplecticGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSp(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSp(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSp(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective symplectic group G = PSp(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 4.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7356">ProjectiveSigmaSymplecticGroup(arguments)</A></H5>
<H5>PSigmaSp(arguments)</H5>
<H5>ProjectiveSigmaSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaSymplecticGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSigmaSymplecticGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaSp(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaSp(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSigmaSp(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the group G = PSigmaSp(n, q) of the
projective symplectic group PSp(n, q) extended by field automorphisms
of K = GF(q), where
V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 4.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set giving the correspondence between 
the points and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7357">PGO(arguments)</A></H5>
<H5>ProjectiveGeneralOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGO(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGO(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGO(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general orthogonal group G = PGO(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an odd integer greater than or equal to 3.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7358">PGOPlus(arguments)</A></H5>
<H5>ProjectiveGeneralOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroupPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general orthogonal group G = PGO^ + (n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7359">PGOMinus(arguments)</A></H5>
<H5>ProjectiveGeneralOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveGeneralOrthogonalGroupMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PGOMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general orthogonal group G = PGO^ - (n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7360">PSO(arguments)</A></H5>
<H5>ProjectiveSpecialOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroup(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroup(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSO(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSO(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSO(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective special orthogonal group G = PSO(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an odd integer greater than or equal to 3.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7361">PSOPlus(arguments)</A></H5>
<H5>ProjectiveSpecialOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroupPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective special orthogonal group G = PSO^ + (n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7362">PSOMinus(arguments)</A></H5>
<H5>ProjectiveSpecialOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSpecialOrthogonalGroupMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSOMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective general orthogonal group G = PSO^ - (n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7363">ProjectiveOmega(arguments)</A></H5>
<H5>POmega(arguments)</H5>
<H5>ProjectiveOmega(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmega(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmega(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmega(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmega(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmega(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective orthogonal group G = POmega(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an odd integer greater than or equal to 3.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.
 </DL>
</BLOCKQUOTE>
<H5><A NAME = "7364">ProjectiveOmegaPlus(arguments)</A></H5>
<H5>POmegaPlus(arguments)</H5>
<H5>ProjectiveOmegaPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmegaPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmegaPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaPlus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaPlus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective orthogonal group G = POmega(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7365">ProjectiveOmegaMinus(arguments)</A></H5>
<H5>POmegaMinus(arguments)</H5>
<H5>ProjectiveOmegaMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmegaMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveOmegaMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaMinus(n, K) : RngIntElt, FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>POmegaMinus(V): ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the projective orthogonal group G = POmega(n, q), where
K = GF(q), V is an n-dimensional vector space over K,
and n is an even integer greater than or equal to 2.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7366">ProjectiveSuzukiGroup(arguments)</A></H5>
<H5>PSz(arguments)</H5>
<H5>ProjectiveSuzukiGroup(q) : RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSuzukiGroup(K) : FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>ProjectiveSuzukiGroup(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSz(q): RngIntElt -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSz(K) : FldFin -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<H5>PSz(V) : ModTupRng -&gt; GrpPerm, { at ModTupFldElt  atbrace</H5>
<BLOCKQUOTE>
Construct the permutation representation G = PSz(q) of the 
Suzuki simple group Sz(q), given by its action on projective points, 
where q is of the form 2<sup>2n + 1</sup>.
If K is given, its cardinality is q.
If V is given, it must be 4-dimensional, and over K.
The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The group G;
<DT>(b)</DT><DD>An indexed set of the generators of the 1-dimensional
subspaces of K<sup>(n)</sup>, giving the correspondence between these vectors
and the G-set of G.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7367">AffineGroup(M) : GrpMat[FldFin] -&gt; GrpPerm, { at ModTupFldElt  atbrace</A></H5>
<BLOCKQUOTE>
Given a matrix group of degree d over a finite field F,
construct the semidirect product V:M, where V=F<sup>d</sup> is the natural
M-module. The result, G, is a standard permutation group of degree
|V| = |F|<sup>d</sup>, where the second return value gives the correspondence
between the elements of V and the standard G-set.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text649.htm">[Next]</A><A  HREF = "text647.htm">[Prev]</A> <A  HREF = "text649.htm">[Right]</A> <A  HREF = "text647.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>