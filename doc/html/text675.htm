<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Finding Elements with  Prescribed Properties</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text676.htm">[Next]</A><A  HREF = "text674.htm">[Prev]</A> <A  HREF = "text676.htm">[Right]</A> <A  HREF = "text674.htm">[Left]</A> <A  HREF = "text673.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7745">Finding Elements with  Prescribed Properties</A></H3>



<H5><A NAME = "7746">RandomElementOfOrder(G, n : parameters) : GrpMat, RngIntElt-&gt; BoolElt, GrpMatElt, GrpSLPElt, BoolElt</A></H5>

<PRE>    Central: BoolElt                    Default: <TT>false</TT></PRE>

<PRE>    Proof: BoolElt                      Default: <TT>true</TT></PRE>

<PRE>    Randomiser: GrpRandProc             Default: </PRE>

<PRE>    MaxTries: RngIntElt                 Default: 100</PRE>
<BLOCKQUOTE>
Given a finite matrix group G, this intrinsic attempts to locate an 
element x of order n in G by random search.  If such an element 
is found, then the return values are the boolean value <TT>true</TT>, 
the element x, and an SLP for this element.  
<P>
If <TT>Central</TT> is <TT>true</TT>, then an element is sought which has 
order n modulo the centre of G.  If <TT>Proof</TT> is <TT>false</TT>, 
then the element returned may have order a multiple of n.
In either case, the final return value indicates whether the element
returned is known to have the precise order.  The parameter 
<TT>MaxTries</TT> specifies the maximum number of random elements that 
are chosen.  The parameter <TT>Randomiser</TT> specifies the random process 
that is to be used to construct the element and the SLP returned for 
the element is in the word group associated with this process.  The 
default value of <TT>Randomiser</TT> is the process 
<TT>RandomProcessWithWords(G)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "7747">RandomElementOfNormalClosure(G, N): Grp -&gt; GrpElt</A></H5>
<BLOCKQUOTE>
Given a group G and a subgroup N of G, this intrinsic returns
a random element of the normal closure of N in G. Note that G 
may be a permutation or matrix group.  The algorithm is due to 
Leedham-Green and O'Brien <A  HREF = "text672.htm#bib_crlg-eaob">[LGO02]</A>.
</BLOCKQUOTE>
<H5><A NAME = "7748">InvolutionClassicalGroupEven(G : parameters) : GrpMat[FldFin] -&gt;GrpMatElt[FldFin], GrpSLPElt, RngIntElt</A></H5>

<PRE>    SmallCorank: BoolElt                Default: <TT>false</TT></PRE>

<PRE>    Case: MonStgElt                     Default: "unknown"</PRE>
<BLOCKQUOTE>
Let G be a quasisimple classical group in its natural representation and in 
even characteristic. 
If G is of type &Omega;^ + or &Omega;^ - then it must have even degree at 
least 4 and be defined over a field with at least 4 elements. 
The corank of an involution I is the rank of I -<TT>Identity</TT>(G).
This function returns an involution I of corank in [d/4, ..., d/2], 
the SLP for I in <TT>WordGroup</TT>(G), and the corank of the involution. 
The parameter <TT>Case</TT> should be one of <TT>"SL"</TT>, <TT>"Sp"</TT>, <TT>"SU"</TT>, 
<TT>"Omega-"</TT>, or <TT>"Omega+"</TT>.
If <TT>SmallCorank</TT> is <TT>true</TT>, then accept involution of small corank.
The algorithm used to construct the involution is described
in <A  HREF = "text672.htm#bib_dlgo-even">[DLLGO13]</A>; it was implemented by Heiko Dietrich.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text676.htm">[Next]</A><A  HREF = "text674.htm">[Prev]</A> <A  HREF = "text676.htm">[Right]</A> <A  HREF = "text674.htm">[Left]</A> <A  HREF = "text673.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>