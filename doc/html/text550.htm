<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Newton Polygons</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text551.htm">[Next]</A><A  HREF = "text549.htm">[Prev]</A> <A  HREF = "text551.htm">[Right]</A> <A  HREF = "text549.htm">[Left]</A> <A  HREF = "text548.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5804">Newton Polygons</A></H3>

<P>
<P>
All polygons are determined by a finite collection of points in the rational
plane.
For Magma, these points are the most basic attribute of any Newton polygon.
They are always determined and recorded on creation of a polygon.
Throughout this chapter, for a Newton polygon N, these points are
denoted by P<sub>N</sub>.
As seen in the introduction, the main class of polygons is that comprising
polygons in the first quadrant of the plane and including the points
+&infin; on the two axes.
But there are other useful types, especially when calculating factorizations
of univariate polynomials over series rings.
The data distinguishing the different flavours of Newton polygon is
the collection of lines and points that are considered to be faces and vertices.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text550.htm#5805">Creation of Newton Polygons</A>
<LI> <A  HREF = "text550.htm#5814">Vertices and Faces of Polygons</A>
<LI> <A  HREF = "text550.htm#5836">Tests for Points and Faces</A>
</UL>
<H4><A NAME = "5805">Creation of Newton Polygons</A></H4>

<P>
<P>
<P>
These are the functions available for constructing Newton polygons
and retrieving the points which describe them.


<H5><A NAME = "5806">NewtonPolygon(f) : RngMPolElt -&gt; NwtnPgon</A></H5>

<PRE>    Faces: MonStgElt                    Default: "Inner"</PRE>
<BLOCKQUOTE>
The standard Newton polygon of a polynomial f in two variables.
This is the hull of the Newton points of the polynomial together with
the points +&infin; on each axis.
The horizontal and vertical `end' faces are not listed among the
faces of the polygon; the points at infinity are not listed among
the vertices of the polygon.
<P>
The parameter <TT>Faces</TT> can have the value <TT>"Inner"</TT>, <TT>"Lower"</TT>
or <TT>"All"</TT>. This determines which faces are returned by the intrinsic
<TT>Faces</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5807">NewtonPolygon(f) : RngUPolElt -&gt; NwtnPgon</A></H5>

<PRE>    SwapAxes: BoolElt                   Default: <TT>false</TT></PRE>

<PRE>    Faces: MonStgElt                    Default: </PRE>
<BLOCKQUOTE>
The standard Newton polygon of a polynomial in one variable defined over
a series ring or a local ring or field. A value of <TT>true</TT> for
<TT>SwapAxes</TT> is only valid if the polynomial is over a series
ring. If <TT>SwapAxes</TT> is set to <TT>true</TT> then the exponents of the 
series variable will be plotted on the horizontal axis and the exponents 
of the polynomial on the vertical axis.
<P>
For a polynomial over a series ring, the hull includes the points +&infin;
on each axis. For a polynomial over a local ring, the infinite points 
are not included.
<P>
The parameter <TT>Faces</TT> can have the value <TT>"All"</TT>, <TT>"Inner"</TT>
or <TT>"Lower"</TT>. This determines which faces are returned by the
intrinsic <TT>Faces</TT>. The default for series rings is <TT>"Inner"</TT>
and for local rings is <TT>"Lower"</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5808">NewtonPolygon(f, p) : RngUPolElt, RngOrdIdl -&gt; NwtnPgon</A></H5>
<H5>NewtonPolygon(f, p) : RngUPolElt, RngFunOrdIdl -&gt; NwtnPgon</H5>
<H5>NewtonPolygon(f, p) : RngUPolElt, RngIntElt -&gt; NwtnPgon</H5>

<PRE>    Faces: MonStgElt                    Default: "Inner"</PRE>
<BLOCKQUOTE>
The newton polygon of f where p is a prime used for
valuations of the coefficients of f. The polynomial f may be over the
integers or rationals or a number field or algebraic function field or an 
order thereof. The prime p may be an integer or a prime ideal. The newton
polygon will have points (i, v<sub>i</sub>) where i is the exponent of a term
of f and v<sub>i</sub> is the valuation of the coefficient of the ith term.
The points at +&infin; on each axis are included.
<P>
The parameter <TT>Faces</TT> can have the value <TT>"Inner"</TT>, <TT>"Lower"</TT>
or <TT>"All"</TT>. This determines which faces are returned by the intrinsic
<TT>Faces</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5809">NewtonPolygon(f, p) : RngUPolElt, PlcFunElt -&gt; NwtnPgon</A></H5>

<PRE>    Faces: MonStgElt                    Default: "Inner"</PRE>
<BLOCKQUOTE>
The newton polygon of the polynomial f where the place p of an
algebraic function field is the prime used for determining the valuations
of the coefficients of f. The points at +&infin; on each axis are included.
<P>
The parameter <TT>Faces</TT> can have the value <TT>"Inner"</TT>, <TT>"Lower"</TT>
or <TT>"All"</TT>. This determines which faces are returned by the intrinsic
<TT>Faces</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5810">NewtonPolygon(C) : Crv -&gt; NwtnPgon</A></H5>
<BLOCKQUOTE>
The standard Newton polygon of the defining polynomial of the curve C.
</BLOCKQUOTE>
<H5><A NAME = "5811">NewtonPolygon(V) : SeqEnum -&gt; NwtnPgon</A></H5>
<H5>NewtonPolygon(V) : SetEnum -&gt; NwtnPgon</H5>

<PRE>    Faces: MonStgElt                    Default: "All"</PRE>
<BLOCKQUOTE>
The Newton polygon that is the compact convex hull of the set or sequence 
V of points of the form &lt; a, b &gt; where a, b are integers or 
rational numbers.
<P>
The parameter <TT>Faces</TT> can have the value <TT>"All"</TT>, <TT>"Lower"</TT> or
<TT>"Inner"</TT>. This determines which faces are returned by the intrinsic
<TT>Faces</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5812">DefiningPoints(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The points of the rational plane used in the initial creation of N.
Applying this function to two polygons allows their defining points to 
be compared. No explicit function is provided for testing whether 
defining points of two polygons are equal.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5813">Example <TT>Newton_create-ex (H54E1)</TT></A></H3>
Some ways of creating Newton Polygons from polynomials are shown below.
<P>
<P>
<PRE>
&gt; P&lt;y&gt; := PuiseuxSeriesRing(Rationals());
&gt; R&lt;x&gt; := PolynomialRing(P);
&gt; f := 3*x^4 + (5*y^3 + 4*y^(1/4))*x^3 + (7*y^2 + 1/2*y^(1/3))*x^2 + 6*x + y^(
&gt; 4/5);
&gt; N := NewtonPolygon(f);
&gt; N;
Newton Polygon of 3*x^4 + (4*y^(1/4) + 5*y^3)*x^3 + (1/2*y^(1/3) + 7*y^2)*x^2 + 
6*x + y^(4/5) over Puiseux series field in y over Rational Field
&gt; P&lt;x&gt; := PolynomialRing(Integers());
&gt; L := ext&lt;ext&lt;pAdicRing(5, 100) | 3&gt; | x^2 + 5&gt;;
&gt; R&lt;x&gt; := PolynomialRing(L);
&gt; f := 3*x^4 + 75*x^3 + 78*x^2 + 10*x + 750;
&gt; NR := NewtonPolygon(f);
&gt; NR;
Newton Polygon of 3*x^4 + 75*x^3 + 78*x^2 + 10*x + 750 over L
</PRE>
Newton Polygons can also be created by specifying the defining points that
the polygon must enclose.
<P>
<P>
<PRE>
&gt; N2 := NewtonPolygon({&lt;2, 0&gt;, &lt;0, 3&gt;, &lt;4, 1&gt;});
&gt; N2;
Newton Polygon with defining points {(0, 3), (2, 0), (4, 1)}
&gt; N6 := NewtonPolygon({&lt;1, 4&gt;, &lt;1, 6&gt;, &lt;2, 4&gt;, &lt;3, 1&gt;, &lt;6, 1&gt;, &lt;5, 2&gt;, &lt;4, 5&gt;,
&gt; &lt;4, 7&gt;, &lt;6, 6&gt;, &lt;7, 7&gt;, &lt;2, 7&gt;, &lt;5, 9&gt;, &lt;8, 4&gt;, &lt;8, 6&gt;, &lt;8, 8&gt;, &lt;7, 9&gt;});
&gt; N6;
Newton Polygon with defining points {(1, 4), (1, 6), (2, 4), (2, 7), (3, 1), (4,
5), (4, 7), (5, 2), (5, 9), (6, 1), (6, 6), (7, 7), (7, 9), (8, 4), (8, 6), (8, 
8)}
</PRE>
These polygons will be referred to in later examples.
<HR>
<H4><A NAME = "5814">Vertices and Faces of Polygons</A></H4>

<P>
<P>
Both the vertices &lt; a, b &gt; and faces &lt; a, b, c &gt; 
(representing ax + by = c) of a
given polygon N are computed as needed.
As seen above, these will be a particular choice of possible faces and vertices
determined by the data used to create the polygon.
They can be recovered using the <TT>Faces()</TT> and <TT>Vertices()</TT> intrinsics.
A different choice of faces and vertices, those faces and vertices of the
compact convex hull of the defining points say, can be made using the
other intrinsics below.
<P>
Recall that P<sub>N</sub> denotes the set of points used in the definition of
the Newton polygon N whether they arise as the powers of monomials
appearing in a polynomial or have been given explicitly as a sequence of pairs.


<H5><A NAME = "5815">Faces(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of faces &lt; a, b, c &gt; (representing ax + by = c) of N listed anticlockwise.
How this is interpreted in terms of the points used to create N depends
on the creation function used (see Section <A  HREF = "text550.htm#5805">Creation of Newton Polygons</A>).
The faces are listed anticlockwise starting with the face with its 
left endpoint being the lowest of the leftmost points.
</BLOCKQUOTE>
<H5><A NAME = "5816">InnerFaces(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Those faces of the compact convex hull of P<sub>N</sub> starting at the lowest of the
leftmost points which have strictly negative gradient.
</BLOCKQUOTE>
<H5><A NAME = "5817">LowerFaces(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Those faces of the compact convex hull of P<sub>N</sub> which bound it below in
the y direction.
</BLOCKQUOTE>
<H5><A NAME = "5818">OuterFaces(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The union of lower faces which aren't inner faces and the faces which 
bound the compact convex hull of P<sub>N</sub> above in the y-direction (ignoring
infinite points).
</BLOCKQUOTE>
<H5><A NAME = "5819">AllFaces(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The faces of the compact convex hull of P<sub>N</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5820">Example <TT>Newton_faces-ex (H54E2)</TT></A></H3>
Using some of the polygons defined before the different types of faces 
are illustrated. 
<P>
<P>
<PRE>
&gt; Faces(N);
[ &lt;4, 5, 4&gt; ]
&gt; InnerFaces(N);
[ &lt;4, 5, 4&gt; ]
&gt; OuterFaces(N);
[ &lt;0, 1, 0&gt;, &lt;-1, -4, -4&gt;, &lt;-11, -60, -48&gt; ]
&gt; AllFaces(N);
[ &lt;4, 5, 4&gt;, &lt;0, 1, 0&gt;, &lt;-1, -4, -4&gt;, &lt;-11, -60, -48&gt; ]
&gt; Faces(NR);
[ &lt;4, 1, 6&gt;, &lt;2, 1, 4&gt;, &lt;0, 1, 0&gt; ]
&gt; InnerFaces(NR);
[ &lt;4, 1, 6&gt;, &lt;2, 1, 4&gt; ]
&gt; LowerFaces(NR);
[ &lt;4, 1, 6&gt;, &lt;2, 1, 4&gt;, &lt;0, 1, 0&gt; ]
</PRE>
For the polynomial over the Puiseux Field it is no coincidence that
<TT>InnerFaces</TT> and <TT>Faces</TT> return the same sequences. Similarly,
for the polynomial over the local ring <TT>Faces</TT> is defined to be
<TT>LowerFaces</TT>. For both, this is the category of faces that gives the most
information for the purposes that the polygon is used.
It can also be noted that combining <TT>InnerFaces</TT> and <TT>OuterFaces</TT>
will give <TT>AllFaces</TT> with no repetitions (though repetitions will occur
if the polygon has only one face and this face is an inner face).
<HR>
<H5><A NAME = "5821">Vertices(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of vertices of N.
The vertices will be listed anticlockwise from the lowest of the leftmost 
points.
</BLOCKQUOTE>
<H5><A NAME = "5822">InnerVertices(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of vertices which arise as endpoints of inner faces. 
</BLOCKQUOTE>
<H5><A NAME = "5823">LowerVertices(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of vertices which arise as endpoints of lower faces.
</BLOCKQUOTE>
<H5><A NAME = "5824">OuterVertices(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of vertices which arise as endpoints of outer faces.
</BLOCKQUOTE>
<H5><A NAME = "5825">AllVertices(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The sequence of vertices of the compact convex hull of P<sub>N</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5826">Example <TT>Newton_vertices-ex (H54E3)</TT></A></H3>
This example illustrates the types of vertices that can be calculated.
Note that the printing of these polygons, created
from their defining points, changes as more information is calculated.
This would occur in the same manner if faces were being calculated 
instead of vertices.
<P>
<P>
<PRE>
&gt; InnerVertices(N2);
[ &lt;0, 3&gt;, &lt;2, 0&gt; ]
&gt; N2;
Newton Polygon with vertices {(0, 3), (2, 0)} and defining points {(0, 3), (2, 
0), (4, 1)}
&gt; InnerVertices(N6);
[ &lt;1, 4&gt;, &lt;3, 1&gt; ]
&gt; N6;
Newton Polygon with vertices {(1, 4), (3, 1)} and defining points {(1, 4), (1, 
6), (2, 4), (2, 7), (3, 1), (4, 5), (4, 7), (5, 2), (5, 9), (6, 1), (6, 6), (7, 
7), (7, 9), (8, 4), (8, 6), (8, 8)}
&gt; Vertices(N2);
[ &lt;0, 3&gt;, &lt;2, 0&gt;, &lt;4, 1&gt; ]
&gt; Vertices(N6);
[ &lt;1, 4&gt;, &lt;3, 1&gt;, &lt;6, 1&gt;, &lt;8, 4&gt;, &lt;8, 8&gt;, &lt;7, 9&gt;, &lt;5, 9&gt;, &lt;2, 7&gt;, &lt;1, 6&gt; ]
&gt; AllVertices(N2);
[ &lt;0, 3&gt;, &lt;2, 0&gt;, &lt;4, 1&gt; ]
&gt; N2;
Newton Polygon with vertices {(0, 3), (2, 0), (4, 1)} and defining points {(0, 
3), (2, 0), (4, 1)}
&gt; AllVertices(N6);
[ &lt;1, 4&gt;, &lt;3, 1&gt;, &lt;6, 1&gt;, &lt;8, 4&gt;, &lt;8, 8&gt;, &lt;7, 9&gt;, &lt;5, 9&gt;, &lt;2, 7&gt;, &lt;1, 6&gt; ]
&gt; N6;             
Newton Polygon with vertices {(1, 4), (3, 1), (6, 1), (8, 4), (8, 8), (7, 9), 
(5, 9), (2, 7), (1, 6)} and defining points {(1, 4), (1, 6), (2, 4), (2, 7), (3,
1), (4, 5), (4, 7), (5, 2), (5, 9), (6, 1), (6, 6), (7, 7), (7, 9), (8, 4), (8, 
6), (8, 8)}
</PRE>
Here <TT>Vertices</TT> has been defined to be <TT>AllVertices</TT>. All the known
vertices of the polygon are printed when the polygon is printed. There is some 
overlap between the inner and outer vertices as is shown below. Every vertex
is either an inner vertex or an outer vertex with some being both. Not all 
defining points are vertices.
<P>
<P>
<PRE>
&gt; OuterVertices(N6);
[ &lt;3, 1&gt;, &lt;6, 1&gt;, &lt;8, 4&gt;, &lt;8, 8&gt;, &lt;7, 9&gt;, &lt;5, 9&gt;, &lt;2, 7&gt;, &lt;1, 6&gt;, &lt;1, 4&gt; ]
&gt; OuterVertices(N2);
[ &lt;2, 0&gt;, &lt;4, 1&gt;, &lt;0, 3&gt; ]
</PRE>
<HR>
<H5><A NAME = "5827">EndVertices(F) : NwtnPgonFace -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
A sequence containing the two end vertices of the face
F = &lt; a, b, c &gt;. 
</BLOCKQUOTE>
<H5><A NAME = "5828">FacesContaining(N,p) : NwtnPgon,Tup -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Those faces of the polygon N returned by <TT>Faces</TT> on which the point 
p = &lt; a, b &gt; lies.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5829">Example <TT>Newton_sp-vertices-ex (H54E4)</TT></A></H3>
Using some of the example polygons that have been created above, we illustrate 
the simple use of <TT>EndVertices</TT> and <TT>FacesContaining</TT>.
<P>
<P>
<PRE>
&gt; AN := AllFaces(N);
&gt; AN;
[ &lt;4, 5, 4&gt;, &lt;0, 1, 0&gt;, &lt;-1, -4, -4&gt;, &lt;-11, -60, -48&gt; ]
&gt; A6 := AllFaces(N6);
&gt; A6;
[ &lt;3, 2, 11&gt;, &lt;0, 1, 1&gt;, &lt;-3, 2, -16&gt;, &lt;-1, 0, -8&gt;, &lt;-1, -1, -16&gt;, &lt;0, -1, -9&gt;, 
&lt;2, -3, -17&gt;, &lt;1, -1, -5&gt;, &lt;1, 0, 1&gt; ]
&gt; AllVertices(N);
[ &lt;0, 4/5&gt;, &lt;1, 0&gt;, &lt;4, 0&gt;, &lt;3, 1/4&gt; ]
&gt; AllVertices(N6);
[ &lt;1, 4&gt;, &lt;3, 1&gt;, &lt;6, 1&gt;, &lt;8, 4&gt;, &lt;8, 8&gt;, &lt;7, 9&gt;, &lt;5, 9&gt;, &lt;2, 7&gt;, &lt;1, 6&gt; ]
&gt; EndVertices(AN[1]);
[ &lt;0, 4/5&gt;, &lt;1, 0&gt; ]
&gt; EndVertices(AN[4]);
[ &lt;0, 4/5&gt;, &lt;3, 1/4&gt; ]
&gt; EndVertices(A6[1]);
[ &lt;1, 4&gt;, &lt;3, 1&gt; ]
&gt; EndVertices(A6[5]);
[ &lt;7, 9&gt;, &lt;8, 8&gt; ]
&gt; EndVertices(A6[9]);
[ &lt;1, 4&gt;, &lt;1, 6&gt; ]
&gt; FacesContaining(N, &lt;1, 0&gt;);
[ &lt;4, 5, 4&gt; ]
&gt; FacesContaining(N6, &lt;1, 0&gt;);
[]
&gt; FacesContaining(N6, &lt;4, 1&gt;);
[ &lt;0, 1, 1&gt; ]
&gt; FacesContaining(N, &lt;4, 1&gt;); 
[]
&gt; FacesContaining(N6, &lt;3, 1&gt;);
[ &lt;3, 2, 11&gt;, &lt;0, 1, 1&gt; ]
</PRE>
<HR>
<H5><A NAME = "5830">GradientVector(F) : NwtnPgonFace -&gt; Tup</A></H5>
<BLOCKQUOTE>
The a and b values of the line describing the face
F of the form a * x + b * y = c
where a, b and c are integers.
</BLOCKQUOTE>
<H5><A NAME = "5831">GradientVectors(N) : NwtnPgon -&gt; [ Tup ]</A></H5>
<BLOCKQUOTE>
A sequence containing the gradient vectors of the faces of the newton polygon N.
</BLOCKQUOTE>
<H5><A NAME = "5832">Weight(F) : NwtnPgonFace -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The c value of the line describing the face
F of the form a * x + b * y = c where 
a, b and c are integers.
</BLOCKQUOTE>
<H5><A NAME = "5833">Slopes(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The slopes of the faces of the newton polygon N.
</BLOCKQUOTE>
<H5><A NAME = "5834">InnerSlopes(N) : NwtnPgon -&gt; SeqEnum</A></H5>
<H5>LowerSlopes(N) : NwtnPgon -&gt; SeqEnum</H5>
<H5>AllSlopes(N) : NwtnPgon -&gt; SeqEnum</H5>
<BLOCKQUOTE>
The slopes of the polygon N
corresponding of <TT>InnerFaces</TT>, <TT>LowerFaces</TT> and
<TT>AllFaces</TT> respectively.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5835">Example <TT>Newton_grad-ex (H54E5)</TT></A></H3>
In this example <TT>GradientVector</TT> and <TT>Weight</TT> can be seen to be
access functions on the components of a face of a polygon.
<P>
<P>
<PRE>
&gt; A := AllFaces(N);
&gt; A;
[ &lt;4, 5, 4&gt;, &lt;0, 1, 0&gt;, &lt;-1, -4, -4&gt;, &lt;-11, -60, -48&gt; ]
&gt; f := A[3];
&gt; GradientVector(f);
&lt;-1, -4&gt;
&gt; Weight(f);
-4
</PRE>
The gradient of the face can now be easily computed as shown.
<P>
<P>
<PRE>
&gt; a := GradientVector(f)[1];
&gt; b := GradientVector(f)[2];
&gt; -a/b; 
-1/4
</PRE>
<HR>
<H4><A NAME = "5836">Tests for Points and Faces</A></H4>

<P>
<P>
Once more, recall that P<sub>N</sub> denotes the finite set of points in the
plane used to define the Newton polygon N.
Whether or not a point is considered to lie in a polygon depends on
what are considered to be its faces.
Magma always uses the list of faces returned by <TT>Faces(N)</TT> when
testing points.
Of course, this is not always the case in applications.
One must to perform other tests explicitly when there is doubt.


<H5><A NAME = "5837">IsFace(N, F) : NwtnPgon,Tup -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the tuple F = &lt; a, b, c &gt; describes a line 
coinciding with a face of the polygon N as returned by <TT>Faces</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5838">IsVertex(N, p) : NwtnPgon,Tup -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the point p = &lt; a, b &gt; of the rational plane (given as a tuple)
is a vertex of the polygon N as returned by <TT>Vertices</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5839">IsInterior(N,p) : NwtnPgon,Tup -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the point p = &lt; a, b &gt; given as a 
tuple lies strictly in the
interior of the polygon N.
</BLOCKQUOTE>
<H5><A NAME = "5840">IsBoundary(N, p) : NwtnPgon,Tup -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the point p = &lt; a, b &gt; given as a 
tuple lies on the boundary
of the polygon N, that is, the point is contained in a face of N.
</BLOCKQUOTE>
<H5><A NAME = "5841">IsPoint(N,p) : NwtnPgon,Tup -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the point p = &lt; a, b &gt; (given as 
a tuple) lies on the polygon N.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text551.htm">[Next]</A><A  HREF = "text549.htm">[Prev]</A> <A  HREF = "text551.htm">[Right]</A> <A  HREF = "text549.htm">[Left]</A> <A  HREF = "text548.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>