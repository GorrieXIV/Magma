<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Class Field Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text496.htm">[Next]</A><A  HREF = "text494.htm">[Prev]</A> <A  HREF = "text496.htm">[Right]</A> <A  HREF = "text494.htm">[Left]</A> <A  HREF = "text481.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5425">Class Field Theory</A></H3>

<P>
<P>
<P>
The class field theory of local fields classifies abelian extensions
of local field in a way similar to the way global class field
theory deals with extensions of number fields and global
function fields.
<P>
While the origins of local class field theory are, via completions
and localisations, in the global case, today it is a theory in its
own. Although local class field theory can be used to obtain
global results, it has very powerful generalisations that the global
case (currently) does not allow.
<P>
Local class fields are classified in terms of the norm group, ie. the 
multiplicative group of norms of elements, rather than some ideal or
divisor class group as in the global case. Since the multiplicative
group of a local field is far better understood than the ideal group
of a global field, the theory is much more explicit and easier in the
local case.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text495.htm#5426">Unit Group</A>
<LI> <A  HREF = "text495.htm#5434">Norm Group</A>
<LI> <A  HREF = "text495.htm#5440">Class Fields</A>
</UL>
<H4><A NAME = "5426">Unit Group</A></H4>

<P>
<P>
In contrast to the case of global fields, the multiplicative
group of both p-adic rings and fields has a well understood
structure which can be computed by algorithms developed and implemented
by S. Pauli <A  HREF = "text480.htm#bib_pauli_lcf">[Pau06]</A>. It should be noted that all the 
unit group related functions operate on fixed-precision rings only.


<H5><A NAME = "5427">PrincipalUnitGroupGenerators(R) : RngPad -&gt; SeqEnum</A></H5>
<H5>PrincipalUnitGroupGenerators(R) : FldPad -&gt; SeqEnum</H5>
<BLOCKQUOTE>
The principal units of a p-adic ring or field R are elements 
of the form 1 + &pi; Z<sub>R</sub> where &pi; is a uniformizing element of
R and Z<sub>R</sub> is the ring of integers. This function returns a sequence
of generators for this group.
</BLOCKQUOTE>
<H5><A NAME = "5428">PrincipalUnitGroup(R) : RngPad -&gt; GrpAb, Map</A></H5>
<H5>PrincipalUnitGroup(R) : RngPadResExt -&gt; GrpAb, Map</H5>
<H5>PrincipalUnitGroup(R) : RngPadRes -&gt; GrpAb, Map</H5>
<BLOCKQUOTE>
The principal units of a p-adic ring or field R are elements 
of the form 1 + &pi; Z<sub>R</sub> where &pi; is a uniformizing element of
R and Z<sub>R</sub> is the ring of integers.
This function returns an abstract abelian group isomorphic to the
group of principal units and an explicit isomorphism, ie. a
map between the abstract group and the p-adic ring or field.
</BLOCKQUOTE>
<H5><A NAME = "5429">UnitGroup(R) : RngPad -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
Given a p-adic ring R of fixed precision, this function
computes an abstract abelian group isomorphic to the unit group
as well as an explicit map between the abstract group and R.
</BLOCKQUOTE>
<H5><A NAME = "5430">UnitGroup(F) : FldPad -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
Given a p-adic field F of fixed precision, this function computes
an abstract abelian group isomorphic to the multiplicative group
of F as well as an explicit map between the abstract group and F.
</BLOCKQUOTE>
<H5><A NAME = "5431">UnitGroupGenerators(R) : RngPad -&gt; SeqEnum</A></H5>
<H5>UnitGroupGenerators(R) : RngPadRes -&gt; SeqEnum</H5>
<BLOCKQUOTE>
Given a p-adic ring with fixed precision, this function computes
generators for its unit group.
</BLOCKQUOTE>
<H5><A NAME = "5432">UnitGroupGenerators(F) : FldPad -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Given a p-adic field with fixed precision, this function computes
generators for its multiplicative group.
</BLOCKQUOTE>
<H5><A NAME = "5433">pSelmerGroup(p,F) : RngIntElt, FldPad -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
Given a l-adic field F, return the p-Selmer group, i.e., the group
F<sup> * </sup>/F<sup> * p</sup>, as an abstract group, as well as the map from F<sup> * </sup> to the
abstract group.
</BLOCKQUOTE>
<H4><A NAME = "5434">Norm Group</A></H4>

<P>
<P>
<P>
Given two p-adic field F/k the norm group of F in k, ie. the 
image of the norm map from F to k is the central object of
local class field theory. Since the norm map will always
operate on some multiplicative group, all functions in this section
will take the map returned by <TT>UnitGroup</TT> as an argument as this then
allows the convenient way of describing the norm group as a subgroup of
some explicit finitely generated abelian group.


<H5><A NAME = "5435">NormGroup(R, m) : FldPad, Map -&gt; GrpAb, Map</A></H5>
<H5>NormGroup(R, m) : RngPad, Map -&gt; GrpAb, Map</H5>
<BLOCKQUOTE>
Given a p-adic ring or field R extending S
and a description of the unit group of S
encoded by a map m from some abstract abelian group to S as
computed by <TT>UnitGroup</TT>, compute the image of the 
norm map as a subgroup. The map returned is the embedding map
returned form the subgroup constructor.
</BLOCKQUOTE>
<H5><A NAME = "5436">NormEquation(R, m, b) : FldPad, Map, RngElt -&gt; BoolElt, RngElt</A></H5>
<H5>NormEquation(R, m, b) : RngPad, Map, RngElt -&gt; BoolElt, RngElt</H5>
<BLOCKQUOTE>
Given a p-adic ring R defined over S, the unit group of S
encoded by the map m as computed by <TT>UnitGroup(S)</TT> and some
element b&isin;S, try to compute an element a&isin;R such that
the norm of a equals b. In case such an element exists, it is
returned as a second value.
</BLOCKQUOTE>
<H5><A NAME = "5437">NormEquation(m1, m2, G) : Map, Map, GrpAb -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
Given two p-adic rings R and S and their unit groups U<sub>R</sub> and 
U<sub>S</sub>
as parameterized by the maps m<sub>1</sub>: U<sub>R</sub> to R and U<sub>S</sub>to S as 
well as a subgroup G&lt;U<sub>S</sub>, compute the preimage of G under
the norm map operating on the unit groups.
</BLOCKQUOTE>
<H5><A NAME = "5438">Norm(m1, m2, G) : Map, Map, GrpAb -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
Given two p-adic rings R and S and their unit groups U<sub>R</sub> and 
U<sub>S</sub>
as parameterized by the maps m<sub>1</sub>: U<sub>R</sub> to R and U<sub>S</sub>to S as 
well as a subgroup G&lt;U<sub>R</sub>, compute the image of G under
the norm map operating on the unit groups.
</BLOCKQUOTE>
<H5><A NAME = "5439">NormKernel(m1, m2) : Map, Map -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
Given two p-adic rings R and S and their unit groups U<sub>R</sub> and 
U<sub>S</sub>
as parameterized by the maps m<sub>1</sub>: U<sub>R</sub> to R and U<sub>S</sub>to S compute the
kernel of the norm map from U<sub>R</sub> to U<sub>S</sub> as a subgroup of U<sub>R</sub>.
</BLOCKQUOTE>
<H4><A NAME = "5440">Class Fields</A></H4>

<P>
<P>
<P>
Class fields, that is abelian extensions are parameterized by their
norm groups. Pauli, in <A  HREF = "text480.htm#bib_pauli_lcf">[Pau06]</A> gave explicit algorithms to
solve the reverse problem of class field theory: given a suitable
subgroup of some (abstractly given) multiplicatively group of some
p-adic field, compute explicit defining equations for the class
field.


<H5><A NAME = "5441">ClassField(m, G) : Map, GrpAb -&gt; FldAb</A></H5>
<BLOCKQUOTE>
Given a p-adic field S and its multiplicative group U<sub>S</sub>
specified by the map m: U<sub>S</sub> to S and a suitable subgroup G&lt;U<sub>S</sub>,
this function computes for each cyclic factor of U<sub>S</sub>/G an
explicit defining equation for the class field corresponding to this 
factor.
</BLOCKQUOTE>
<H5><A NAME = "5442">NormGroupDiscriminant(m, G) : Map, GrpAb -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a p-adic field S and its multiplicative group U<sub>S</sub>
specified by the map m: U<sub>S</sub> to S and a suitable subgroup G&lt;U<sub>S</sub>,
this function computes the valuation of the discriminant of the
extension parameterized by G without computing explicit equations for it.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text496.htm">[Next]</A><A  HREF = "text494.htm">[Prev]</A> <A  HREF = "text496.htm">[Right]</A> <A  HREF = "text494.htm">[Left]</A> <A  HREF = "text481.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>