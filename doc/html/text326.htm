<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Number Field Lattice Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text327.htm">[Next]</A><A  HREF = "text325.htm">[Prev]</A> <A  HREF = "text327.htm">[Right]</A> <A  HREF = "text325.htm">[Left]</A> <A  HREF = "text323.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3157">Number Field Lattice Elements</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text326.htm#3158">Creation</A>
<LI> <A  HREF = "text326.htm#3163">Parent and Element Relations</A>
<LI> <A  HREF = "text326.htm#3166">Arithmetic</A>
<LI> <A  HREF = "text326.htm#3177">Access Functions</A>
</UL>
<H4><A NAME = "3158">Creation</A></H4>



<H5><A NAME = "3159">Zero(L) : LatNF -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
The zero vector of the number field lattice L.
</BLOCKQUOTE>
<H5><A NAME = "3160">L ! e : LatNF, Any -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
Object e is coerced into the number field lattice L.
The possibilities for the coerced object e are vectors of number
field lattices, vectors in the proper degree ambient, and sequences
of the proper length.
</BLOCKQUOTE>
<H5><A NAME = "3161">L . i : LatNF, RngIntElt -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
The ith pseudobasis vector of a number field lattice L. The given integer 
i must be nonnegative (0 gives the zero vector, also obtainable by <TT>Zero</TT>),
and not exceed the rank of L. The ith coefficient ideal must also be trivial.
</BLOCKQUOTE>
<H5><A NAME = "3162">CoordinatesToLattice(L, S) : LatNF, SeqEnum -&gt; LatNFElt</A></H5>
<H5>CoordinatesToLattice(L, v) : LatNF, ModTupFldElt -&gt; LatNFElt</H5>
<BLOCKQUOTE>
Given a sequence (or vector) S coercible into the coefficient field of 
number field lattice L whose length is equal to the rank of L, return 
the lattice vector with these coordinates. A check is made as to whether
the vector (S or v) is in L.
</BLOCKQUOTE>
<H4><A NAME = "3163">Parent and Element Relations</A></H4>



<H5><A NAME = "3164">v in L : ModTupRngElt, LatNF -&gt; BoolElt, ModTupFldElt</A></H5>
<H5>v in L : LatNFElt, LatNF -&gt; BoolElt, ModTupFldElt</H5>
<BLOCKQUOTE>
Given a vector in an ambient space A of the number field lattice L 
where A has the same degree as L, determine whether v is in L. 
If so, then the coordinates of v with respect to the pseudobasis of 
L will also be returned. The coordinates of v will actually be 
returned whenever v lies in the K-span of the pseudobasis.
</BLOCKQUOTE>
<H5><A NAME = "3165">Parent(v) : LatNFElt -&gt; LatNF</A></H5>
<BLOCKQUOTE>
The parent number field lattice to which the given lattice vector v
belongs.
</BLOCKQUOTE>
<H4><A NAME = "3166">Arithmetic</A></H4>



<H5><A NAME = "3167">v + w : LatNFElt, LatNFElt -&gt; LatNFElt</A></H5>
<H5>v - w : LatNFElt, LatNFElt -&gt; LatNFElt</H5>
<H5>- v : LatNFElt -&gt; LatNFElt</H5>
<H5>v eq w : LatNFElt, LatNFElt -&gt; BoolElt</H5>
<H5>v ne w : LatNFElt, LatNFElt -&gt; BoolElt</H5>
<H5>IsZero(v) : LatNFElt -&gt; BoolElt</H5>
<BLOCKQUOTE>
Addition, subtraction, negation, and (non)equality
of the number field lattice elements v and w.
</BLOCKQUOTE>
<H5><A NAME = "3168">s * v : RngElt, LatNFElt -&gt; LatNFElt</A></H5>
<H5>v * s : LatNFElt, RngElt -&gt; LatNFElt</H5>
<H5>v / s : LatNFElt, RngElt -&gt; LatNFElt</H5>
<BLOCKQUOTE>
Given a vector v belonging to the number field lattice L defined over
the number field K and an element s of K, scale v by s as indicated.
The result is checked for membership of L.
</BLOCKQUOTE>
<H5><A NAME = "3169">T * v : Mtrx, LatNFElt -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
Given a vector v belonging to the number field lattice L defined over the
number field K, and a matrix T defined over K, the pseudobasis coordinates 
of v are transformed by T. The result is checked for membership of L.
</BLOCKQUOTE>
<H5><A NAME = "3170">v * T : LatNFElt, Mtrx -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
Given a vector v belonging to the number field lattice L defined over the
field K, and a matrix T acting on the ambient space of L, transform v 
by T. The result is checked for membership of L.
</BLOCKQUOTE>
<H5><A NAME = "3171">v ^ M : LatNFElt, Mtrx -&gt; LatNFElt</A></H5>
<BLOCKQUOTE>
Given an element v belonging to the number field lattice L 
and a matrix M acting on the ambient space of L, return the 
image of v under the transformation M. Here the action is on 
the coordinates of the vector (so M must be square, of dimensions
equal to the rank of L), and the resulting vector must belong
to the lattice. 
</BLOCKQUOTE>
<H5><A NAME = "3172">v ^ G : LatNFElt, GrpMat -&gt; Setq[LatNFElt]</A></H5>
<H5>Orbit(G, v) : GrpMat, LatNFElt -&gt; Setq[LatNFElt]</H5>
<BLOCKQUOTE>
Given an element v belonging to the number field lattice L 
and a matrix group G acting on L, return the orbit of v 
under the action of G. This operation is also available if
v is replaced by a set or sequence of elements of L.
The user is responsible for ensuring that the orbit 
is finite.
</BLOCKQUOTE>
<H5><A NAME = "3173">Stabilizer(G, v) : GrpMat, LatNFElt -&gt; GrpMat</A></H5>
<BLOCKQUOTE>
Given an element v belonging to the number field lattice L 
and a matrix group G acting on the coordinates of the vectors 
of L, return the stabilizer of v under the action of G. 
This operation is also available if v is replaced by a set or 
sequence of elements of L.  The user is responsible for 
ensuring that the group G is finite.
</BLOCKQUOTE>
<H5><A NAME = "3174">Norm(v) : LatNFElt -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
The norm of a given number field lattice element v.
</BLOCKQUOTE>
<H5><A NAME = "3175">InnerProduct(v, w) : LatNFElt, LatNFElt -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
The inner product of two number field lattice elements v and w.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3176">Example <TT>LatNF_nflatelt-ex (H31E3)</TT></A></H3>
Here are some examples with number field lattice elements.
<P>
<P>
<P>
<PRE>
&gt; K&lt;s13&gt; := NumberField(Polynomial([-13,0,1])); // Q(sqrt(13))
&gt; L := NumberFieldLattice(K,3);
&gt; v := Zero(L);
&gt; assert IsZero(v);
&gt; w1 := L.1;
&gt; w2 := L.2-L.3;
&gt; CoordinatesToLattice(L,Vector(5*w1-s13*w2));
(   5 -s13  s13)
&gt; assert w2 in L;
&gt; assert not Vector(w2)/2 in L; // cannot divide w2 by 2 directly
&gt; assert Parent(v) eq L;
&gt; Norm(w2);
2
&gt; InnerProduct(w1,w2);
0
&gt; T := Matrix(3,3,[K|s13,1,0, 3,-1,1+s13, s13,-s13,2+s13]);
&gt; T*w2;
(-s13 + 3  s13 - 1       -1)
&gt; w2*T; // same, as basis is standard
(-s13 + 3  s13 - 1       -1)
&gt; S := sub&lt;L|[w1,w2]&gt;;
&gt; Submatrix(T,1,1,2,2)*(S.1); // random input data, 2x2 mat in T*v
(s13   1  -1)
&gt; G := AutomorphismGroup(L);
&gt; assert #G eq 48;
&gt; w2^G; // Orbit
{@
    ( 0  1 -1),
    (-1  1  0),
    ( 1  0 -1),
    (0 1 1),
    ( 1 -1  0),
    (-1  0 -1),
    (1 1 0),
    (1 0 1),
    ( 0 -1 -1),
    (-1  0  1),
    (-1 -1  0),
    ( 0 -1  1)
@}
&gt; assert #$1 eq 12;
&gt; #Stabilizer(G,w2); // 4*12 is 48
4
&gt; #Stabilizer(G,w1);
8
&gt; #Orbit(G,{w1,w2});
24
</PRE>
<HR>
<H4><A NAME = "3177">Access Functions</A></H4>



<H5><A NAME = "3178">Vector(v) : LatNFElt -&gt; ModTupFldElt</A></H5>
<BLOCKQUOTE>
Given an element v of the number field lattice L,
return the underlying vector of the ambient space
associated with v.
</BLOCKQUOTE>
<H5><A NAME = "3179">Eltseq(v) : LatNFElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Given an element v of the number field lattice L,
return the sequence corresponding to the <TT>Vector</TT> 
of the element.
</BLOCKQUOTE>
<H5><A NAME = "3180">Coordinates(v) : LatNFElt -&gt; ModTupFldElt</A></H5>
<BLOCKQUOTE>
Given an element v of the number field lattice L, return 
the coordinates of v, with respect to the pseudobasis of 
the parent lattice.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text327.htm">[Next]</A><A  HREF = "text325.htm">[Prev]</A> <A  HREF = "text327.htm">[Right]</A> <A  HREF = "text325.htm">[Left]</A> <A  HREF = "text323.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>