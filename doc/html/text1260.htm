<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Submodules and Quotient  Modules</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1261.htm">[Next]</A><A  HREF = "text1259.htm">[Prev]</A> <A  HREF = "text1261.htm">[Right]</A> <A  HREF = "text1259.htm">[Left]</A> <A  HREF = "text1254.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "13862">Submodules and Quotient  Modules</A></H3>

<P>
<P>
<P>
The following functions allow the construction of submodules and quotient
modules and access to essential properties.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1260.htm#13863">Creation</A>
<LI> <A  HREF = "text1260.htm#13870">Module Bases</A>
</UL>
<H4><A NAME = "13863">Creation</A></H4>



<H5><A NAME = "13864">sub&lt;M | L&gt; : ModMPol, List -&gt; ModMPol</A></H5>
<BLOCKQUOTE>
Given a module M over a ring R,
return the submodule of M (with the same quotient relations as M)
generated by the elements of M specified by
the list L.  Each term of the list L must be an expression defining
an object of one of the following types:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>An element of M;
<DT>(b)</DT><DD>A set or sequence of elements of M;
<DT>(c)</DT><DD>A submodule of M;
<DT>(d)</DT><DD>A set or sequence of submodules of M.
<P>
</DL>
A morphism is stored from the resulting submodule S into M, such
that S.i is mapped to the i-th generator given in the above list.
</BLOCKQUOTE>
<H5><A NAME = "13865">quo&lt;M | L&gt; : ModMPol, List -&gt; ModMPol</A></H5>
<BLOCKQUOTE>
Given a module M over a ring R,
return the quotient module of M by the elements of M specified by
the list L.  Each term of the list L must be an expression defining
an object of one of the following types:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>An element of M;
<DT>(b)</DT><DD>A set or sequence of elements of M;
<DT>(c)</DT><DD>A submodule of M;
<DT>(d)</DT><DD>A set or sequence of submodules of M.
<P>
</DL>
A morphism is stored from M onto the resulting quotient module Q.
</BLOCKQUOTE>
<H5><A NAME = "13866"></A><A NAME = "PMod:Morphism">Morphism</A>(M, N) : ModMPol, ModMPol -&gt; ModMPolHom</H5>
<BLOCKQUOTE>
Given modules M and N, related by a chain of stored sub and quo morphisms
as mentioned above, returns the resulting morphism matrix map from M to N.
If no known sub/quo relationship chain exists between M and N then an error
is returned.
</BLOCKQUOTE>
<H5><A NAME = "13867">Submodule(I) : RngMPol -&gt; ModMPol</A></H5>
<BLOCKQUOTE>
Given an ideal I of a polynomial ring R, return the submodule
of R<sup>1</sup> generated by I.
</BLOCKQUOTE>
<H5><A NAME = "13868">QuotientModule(I) : RngMPol -&gt; ModMPol</A></H5>
<BLOCKQUOTE>
Given an ideal I of a polynomial ring R, return the quotient
module R<sup>1</sup>/I.
</BLOCKQUOTE>
<H5><A NAME = "13869">GradedModule(I) : RngMPol -&gt; ModMPol</A></H5>
<BLOCKQUOTE>
Given a homogeneous ideal I of a ring R, return the graded quotient
module R<sup>1</sup>/I.
</BLOCKQUOTE>
<H4><A NAME = "13870">Module Bases</A></H4>

<P>
<P>
The following functions allow one to manipulate the bases of modules.
Note that a Gr&ouml;bner basis for a module will be automatically generated when
necessary; the <TT>Groebner</TT> procedure just allows explicit immediate
construction of the Gr&ouml;bner basis.


<H5><A NAME = "13871">Basis(M) : ModMPol -&gt; RngMPolElt</A></H5>
<BLOCKQUOTE>
Given a module M, return the current basis (whether it has been
converted to a Gr&ouml;bner basis or not) of M.
<P>
</BLOCKQUOTE>
<H5><A NAME = "13872">BasisElement(M, i) : ModMPol, RngIntElt -&gt; RngMPolElt</A></H5>
<BLOCKQUOTE>
Given a module M together with an integer i, return the i-th element
of the current basis of M.  Note that this is <I>not</I> the same as M.i.
<P>
</BLOCKQUOTE>
<H5><A NAME = "13873">BasisMatrix(M) : ModMPol -&gt; ModMatRngElt</A></H5>
<BLOCKQUOTE>
Given a module M, return the basis matrix of M, which is a k by
r matrix over R, where k is the length of the basis of M and
r is the degree of M.
</BLOCKQUOTE>
<H5><A NAME = "13874">Groebner(M) : ModMPol -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Explicitly force a Gr&ouml;bner basis for the module M to be constructed.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13875">Example <TT>PMod_SubQuoEmbedded (H115E3)</TT></A></H3>
We construct simple submodules and quotient modules of
an embedded module and consider some of their basic properties.
<P>
<P>
<PRE>
&gt; R&lt;x, y, z&gt; := PolynomialRing(RationalField(), 3);
&gt; M := EModule(R, 3);
&gt; S := sub&lt;M | [1, x, x^2+y], [z, y, x*y^2+1],
&gt;              [y, z, x+z]&gt;;
&gt; Groebner(S);
&gt; S;
Embedded Submodule of R^3
Order: Module TOP: Lexicographical
Groebner basis:
[ -x*z + y^2 + y, x*y^2 - x*y + z,         y^3 + z],
[  x*y - y*z - 1,   x*z - x - z^2,        -y - z^2],
[              y,               z,           x + z],
[        y^3 - z,       y^2*z - y,       y^2*z - 1]
&gt; a := M ! [y, z, x+z];
&gt; a;
[y, z, x + z]
&gt; a in S;
true
&gt; BasisElement(S, 1);
[-x*z + y^2 + y, x*y^2 - x*y + z, y^3 + z]
&gt; Q := quo&lt;M | [x, y, z]&gt;;
&gt; Q;
Embedded Module R^3/&lt;relations&gt;
Order: Module TOP: Lexicographical
Relations (Groebner basis):
[x, y, z]
&gt; a := Q![x, y, 0];
&gt; b := Q![0, 0, z];
&gt; a;
[0, 0, -z]
&gt; b;
[0, 0, z]
&gt; a+b;
[0, 0, 0]
&gt; Q ! [x,y,z];
[0, 0, 0]
&gt; QQ := quo&lt;Q | [x^2, 0, y+z]&gt;;
&gt; QQ;
Embedded Module R^3/&lt;relations&gt;
Order: Module TOP: Lexicographical
Relations (Groebner basis):
[          0,         x*y, x*z - y - z],
[          x,           y,           z]
&gt; SL := Localization(S);
&gt; SL;
Embedded Submodule of R^3 (local)
Order: Module TOP: Local Lexicographical
Basis:
[        1,         x,   x^2 + y],
[        z,         y, 1 + x*y^2],
[        y,         z,     x + z]
</PRE>
<HR>
<H3><A NAME = "13876">Example <TT>PMod_SubQuoReduced (H115E4)</TT></A></H3>
We construct simple submodules and quotient modules of a reduced module
and consider some of their basic properties.
<P>
<P>
<PRE>
&gt; R&lt;x,y,z&gt; := PolynomialRing(RationalField(), 3);
&gt; M := RModule(R, 3);
&gt; S := sub&lt;M | [1, x, x^2+y], [z, y, x*y^2+1]&gt;;
&gt; M;
Free Reduced Module R^3
&gt; S;
Reduced Module R^2/&lt;relations&gt;
&gt; Morphism(S, M);
Module homomorphism (2 by 3)
Ambient matrix:
[        1         x   x^2 + y]
[        z         y x*y^2 + 1]
&gt; RelationMatrix(S);
Matrix with 0 rows and 2 columns
&gt; S;
Free Reduced Module R^2
&gt; M.1;
[1, 0, 0]
&gt; M!S.1;
[1, x, x^2 + y]
&gt; M!S.2;
[z, y, x*y^2 + 1]
&gt; M.1 in S;
false
&gt; Q := quo&lt;M | [1, x^2, y]&gt;;
&gt; Q;
Free Reduced Module R^2
&gt; RelationMatrix(Q);
Matrix with 0 rows and 2 columns
&gt; Morphism(M, Q);
Module homomorphism (3 by 2)
Ambient matrix:
[-x^2   -y]
[   1    0]
[   0    1]
&gt; Morphism(S, Q);
Module homomorphism (2 by 2)
Ambient matrix:
[       -x^2 + x             x^2]
[     -x^2*z + y x*y^2 - y*z + 1]
&gt; Q!M.1;
[-x^2, -y]
&gt; M!Q.1;
[0, 1, 0]
&gt; M!Q.2;
[0, 0, 1]
&gt; Q!M!Q.2;
[0, 1]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1261.htm">[Next]</A><A  HREF = "text1259.htm">[Prev]</A> <A  HREF = "text1261.htm">[Right]</A> <A  HREF = "text1259.htm">[Left]</A> <A  HREF = "text1254.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>