<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Generic Element Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text151.htm">[Next]</A><A  HREF = "text149.htm">[Prev]</A> <A  HREF = "text151.htm">[Right]</A> <A  HREF = "text149.htm">[Left]</A> <A  HREF = "text145.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "1033">Generic Element Functions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text150.htm#1034">Parent and Category</A>
<LI> <A  HREF = "text150.htm#1037">Creation of Elements</A>
<LI> <A  HREF = "text150.htm#1043">Arithmetic Operations</A>
<LI> <A  HREF = "text150.htm#1057">Equality and Membership</A>
<LI> <A  HREF = "text150.htm#1064">Predicates on Ring Elements</A>
<LI> <A  HREF = "text150.htm#1074">Comparison of Ring Elements</A>
</UL>
<H4><A NAME = "1034">Parent and Category</A></H4>



<H5><A NAME = "1035">Parent(r) : RngElt -&gt; Rng</A></H5>
<BLOCKQUOTE>
The (default) parent ring of ring element r. Usually the parent
of r has been created explicitly before, but in certain cases,
such as literal integers, rationals, reals, and values returned
by certain functions a default parent is created in the background.
</BLOCKQUOTE>
<H5><A NAME = "1036">Category(r) : RngElt -&gt; Cat</A></H5>
<H5>Type(r) : RngElt -&gt; Cat</H5>
<BLOCKQUOTE>
The `type' of r, that is, the Magma category to which the
ring element r belongs. The procedure call <TT>ListCategories()</TT> gives a list
of all the categories. 
</BLOCKQUOTE>
<H4><A NAME = "1037">Creation of Elements</A></H4>



<H5><A NAME = "1038">Zero(R) : Rng -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The zero element of ring R; this is equivalent to <TT>R ! 0</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1039">One(R) : Rng  -&gt; RngElt</A></H5>
<H5>Id(R) : Rng  -&gt; RngElt</H5>
<BLOCKQUOTE>
The multiplicative identity 1 of ring R; this is equivalent to <TT>R ! 1</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1040">R ! a : Rng, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Coerce the element a of some ring into the ring R. 
If a is an integer, the coercion
will always succeed: the element a.1<sub>R</sub> will be returned, where
1<sub>R</sub> is the unit element of R.
</BLOCKQUOTE>
<H5><A NAME = "1041">Random(R) : Rng -&gt; RngElt</A></H5>
<BLOCKQUOTE>
A random element of the finite ring R (every element of R has the same
probability of being returned).
</BLOCKQUOTE>
<H5><A NAME = "1042">Representative(R) : Rng -&gt; RngElt</A></H5>
<H5>Rep(R) : Rng -&gt; RngElt</H5>
<BLOCKQUOTE>
A representative element of the finite ring R.
</BLOCKQUOTE>
<H4><A NAME = "1043">Arithmetic Operations</A></H4>



<H5><A NAME = "1044">+ a : RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Element a.
</BLOCKQUOTE>
<H5><A NAME = "1045">- a : RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The negation (additive inverse) of  element a.
</BLOCKQUOTE>
<H5><A NAME = "1046">a + b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The sum of the ring elements a and b; if a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the sum can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1047">a - b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The  difference of the ring elements a and b; if a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the difference can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1048">a * b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The product of the ring elements a and b; if a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the product can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1049">a ^ k : RngElt, RngIntElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Form the k-th power of the ring element a, for small, non-negative, k.
If a = 0 then we must have k &gt; 0.
</BLOCKQUOTE>
<H5><A NAME = "1050">a ^ -k : RngElt, RngIntElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Form the k-th power of the multiplicative inverse of the unit a.
</BLOCKQUOTE>
<H5><A NAME = "1051">a / b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an element a of R and a unit b of R, form the
quotient of the elements a and b.
If b is not invertible in R, an error results, unless both
a and b are integers, in which case
<TT>a / b</TT> returns the rational number a/b.
If a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the quotient can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1052">a +:= b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Mutation assignment: change a into the sum of a and b.
</BLOCKQUOTE>
<H5><A NAME = "1053">a -:= b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Mutation assignment: change a into the difference of a and b.
</BLOCKQUOTE>
<H5><A NAME = "1054">a *:= b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Mutation assignment: change a into the product of a and b.
</BLOCKQUOTE>
<H5><A NAME = "1055">a /:= b : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Mutation assignment: change a into the quotient of a and b.
</BLOCKQUOTE>
<H5><A NAME = "1056">a ^:= k : RngElt, RngIntElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Mutation assignment: change a into the power a<sup>k</sup>.
</BLOCKQUOTE>
<H4><A NAME = "1057">Equality and Membership</A></H4>



<H5><A NAME = "1058">a eq b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the elements a and b of R are the same, otherwise
<TT>false</TT>. 
</BLOCKQUOTE>
<H5><A NAME = "1059">a ne b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the elements a and b of R are distinct, otherwise
<TT>false</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1060">R eq S : Rng, Rng -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the rings R and S are the same, otherwise <TT>false</TT>. 
</BLOCKQUOTE>
<H5><A NAME = "1061">R ne S : Rng, Rng -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the rings R and S are distinct, otherwise <TT>false</TT>. 
</BLOCKQUOTE>
<H5><A NAME = "1062">a in R : RngElt, Rng -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if a is an element of R.
</BLOCKQUOTE>
<H5><A NAME = "1063">a notin R : RngElt, Rng -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if a is not an element of R.
</BLOCKQUOTE>
<H4><A NAME = "1064">Predicates on Ring Elements</A></H4>



<H5><A NAME = "1065">IsZero(a) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of R equals 0<sub>R</sub>.
</BLOCKQUOTE>
<H5><A NAME = "1066">IsOne(a) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of R equals 1<sub>R</sub>.
</BLOCKQUOTE>
<H5><A NAME = "1067">IsMinusOne(a) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of R equals the element -1 of R.
</BLOCKQUOTE>
<H5><A NAME = "1068">IsUnit(a) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if a is a unit in its parent R, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1069">IsIdempotent(x) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if x<sup>2</sup> equals x.
</BLOCKQUOTE>
<H5><A NAME = "1070">IsNilpotent(x) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if some integer power x<sup>i</sup> of x is zero.
</BLOCKQUOTE>
<H5><A NAME = "1071">IsZeroDivisor(x) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if x is a zero-divisor, that is, there exists an element
y in the parent R of x such that xy=0.
</BLOCKQUOTE>
<H5><A NAME = "1072">IsIrreducible(x) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the parent R of the element x is a domain
and x is irreducible in R, that is, x is a non-unit of
R and whenever a product ab of elements of R divides x
then a or b is a unit of R.
</BLOCKQUOTE>
<H5><A NAME = "1073">IsPrime(x) : RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the parent R of the element x is a domain
and x is a prime element of R, that is, x is neither 0 nor a
unit and whenever x divides the product ab of two elements
of R it divides a or b. 
</BLOCKQUOTE>
<H4><A NAME = "1074">Comparison of Ring Elements</A></H4>

<P>
<P>
The comparison operations are only defined
on types of ring that are ordered.


<H5><A NAME = "1075">a gt b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the ring element a is greater than the
ring element b, otherwise <TT>false</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1076">a ge b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the ring element a is greater than or
equal to the ring element b, otherwise <TT>false</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1077">a lt b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the ring element a is less than the
ring element b, otherwise <TT>false</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1078">a le b : RngElt, RngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the ring element a is less than or equal
to the ring element b, otherwise <TT>false</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1079">Maximum(a, b) : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The maximum of the ring elements a and b; if a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the maximum can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1080">Maximum(Q) : [RngIntElt] -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The maximum of the sequence Q of ring elements.
</BLOCKQUOTE>
<H5><A NAME = "1081">Minimum(a, b) : RngElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The minimum of the ring elements a and b; if a and b
do not belong to the same ring R, an attempt will be made
to find a common overstructure in which the minimum can be taken.
</BLOCKQUOTE>
<H5><A NAME = "1082">Minimum(Q) : [RngIntElt] -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The minimum of the sequence Q of ring elements.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text151.htm">[Next]</A><A  HREF = "text149.htm">[Prev]</A> <A  HREF = "text151.htm">[Right]</A> <A  HREF = "text149.htm">[Left]</A> <A  HREF = "text145.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>