<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Conversion Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1816.htm">[Next]</A><A  HREF = "text1814.htm">[Prev]</A> <A  HREF = "text1816.htm">[Right]</A> <A  HREF = "text1814.htm">[Left]</A> <A  HREF = "text1809.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "20153">Conversion Functions</A></H3>

<P>
<P>
<P>
<P>
<P>
<P>
Conversion functions do not preserve a graph's support and 
vertex/edge decorations.  That is, the resulting graph has 
standard support and no vertex/edge decorations.  A slight 
exception to this rule occurs when the resulting graph is 
a network (of type <TT>GrphNet</TT>) and is described in detail 
in <A  HREF = "text1815.htm#MultiGraph:UnderlyingNetwork">UnderlyingNetwork</A>.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1815.htm#20154">Orientated Graphs</A>
<LI> <A  HREF = "text1815.htm#20156">Converse</A>
<LI> <A  HREF = "text1815.htm#20158">Converting between Simple Graphs and Multigraphs</A>
</UL>
<H4><A NAME = "20154">Orientated Graphs</A></H4>

<P>
<P>
<P>
<P>
<P>
<P>
The rules followed in building an orientated graph from 
  an undirected graph are the same as those described for simple
  graphs (see  Section <A  HREF = "text1790.htm#19800">Converting between Graphs  and Digraphs</A>).


<H5><A NAME = "20155">OrientatedGraph(G) : GrphMultUnd -&gt; GrphMultDir</A></H5>
<BLOCKQUOTE>
Given a multigraph G, 
   produce a multidigraph D whose vertex-set is the same as
   that of G and whose edge-set consists of the edges of G, each given
   a direction. 
The edges of D are always directed from the
   lower numbered vertex to the higher numbered vertex. 
Thus, if G
   contains the edge { u, v }, then D will have the edge
  [u, v] if u &lt; v, otherwise the edge [u, v].
If G has a loop at u, then D will have a directed loop at 
  u.
</BLOCKQUOTE>
<H4><A NAME = "20156">Converse</A></H4>



<H5><A NAME = "20157">Converse(G) : GrphMultDir -&gt; GrphMultDir</A></H5>
<BLOCKQUOTE>
Given a multidigraph G with edge-set E, produce a multidigraph 
D whose vertex-set is the same as that of G and whose edge-set 
is { [u, v] : [v, u] &isin;E }.
</BLOCKQUOTE>
<H4><A NAME = "20158">Converting between Simple Graphs and Multigraphs</A></H4>

<P>
<P>
<P>
<P>
<P>
<P>
Any simple (di)graph can be converted into a multi(di)graph and any 
multi(di)graph can be converted into a simple (di)graph.  The resulting  
graph has standard support and neither vertex labels nor edge decorations, 
unless it is a network, in which case all the edges in the resulting
graph are assigned a capacity of 1 (0 if loops).
<P>
Let G be a graph and e an edge of G from u to v and let 
H be the graph resulting from the conversion.  If G and H 
are both undirected or both directed then e is also an edge of H.
If G is undirected while H is undirected then both edges [u, v] 
and [v, u] are edges of H.  If G is directed while H is 
directed then the edge {u, v} is an edge of H.
<P>
Since these conversion functions do not retain the original
  graph's support and vertex/edge decorations, 
  they may also be used when requiring a copy of a graph G
  without G's support and vertex/edge decorations.


<H5><A NAME = "20159">UnderlyingGraph(G) : GrphMult -&gt; GrphUnd, GrphVertSet, GrphEdgeSet</A></H5>
<H5>UnderlyingGraph(G) : Grph -&gt; GrphUnd, GrphVertSet, GrphEdgeSet</H5>
<BLOCKQUOTE>
The underlying simple graph of the graph G.
The support and vertex/edge decorations of G are not retained.
</BLOCKQUOTE>
<H5><A NAME = "20160">UnderlyingDigraph(G) : GrphMult-&gt; GrphDir, GrphVertSet, GrphEdgeSet</A></H5>
<H5>UnderlyingDigraph(G) : Grph -&gt; GrphDir, GrphVertSet, GrphEdgeSet</H5>
<BLOCKQUOTE>
The underlying simple digraph of the graph G.
The support and vertex/edge decorations of G are not retained.
</BLOCKQUOTE>
<H5><A NAME = "20161">UnderlyingMultiGraph(G) : Grph -&gt; GrphMultUnd, GrphVertSet, GrphEdgeSet</A></H5>
<H5>UnderlyingMultiGraph(G) : GrphMult -&gt; GrphMultUnd, GrphVertSet, GrphEdgeSet</H5>
<BLOCKQUOTE>
The underlying multigraph of the graph G.
The support and vertex/edge decorations of G are not retained.
</BLOCKQUOTE>
<H5><A NAME = "20162">UnderlyingMultiDigraph(G) : Grph -&gt; GrphMultDir, GrphVertSet, GrphEdgeSet</A></H5>
<H5>UnderlyingMultiDigraph(G) : GrphMult-&gt; GrphMultDir, GrphVertSet, GrphEdgeSet</H5>
<BLOCKQUOTE>
The underlying multidigraph of the graph G.
The support and vertex/edge decorations of G are not retained.
</BLOCKQUOTE>
<H5><A NAME = "20163">UnderlyingNetwork(G) : Grph -&gt; GrphNet, GrphVertSet, GrphEdgeSet</A></H5>
<H5><A NAME = "MultiGraph:UnderlyingNetwork">UnderlyingNetwork</A>(G) : GrphMult-&gt; GrphNet, GrphVertSet, GrphEdgeSet</H5>
<BLOCKQUOTE>
The underlying network of the graph G.
The support and vertex/edge decorations of G are not retained
  except when G is a network in which case only the 
  edge capacities are retained.
If G is not a network, then all the edge capacities are set to 1
  (0 for loops).
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1816.htm">[Next]</A><A  HREF = "text1814.htm">[Prev]</A> <A  HREF = "text1816.htm">[Right]</A> <A  HREF = "text1814.htm">[Left]</A> <A  HREF = "text1809.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>