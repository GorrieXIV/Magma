<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text544.htm">[Next]</A><A  HREF = "text542.htm">[Prev]</A> <A  HREF = "text544.htm">[Right]</A> <A  HREF = "text542.htm">[Left]</A> <A  HREF = "text541.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5769">Creation Functions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text543.htm#5770">Creation of Structures</A>
<LI> <A  HREF = "text543.htm#5775">Names</A>
<LI> <A  HREF = "text543.htm#5778">Creation of Elements</A>
<LI> <A  HREF = "text543.htm#5782">Sequence Conversions</A>
</UL>
<H4><A NAME = "5770">Creation of Structures</A></H4>



<H5><A NAME = "5771">GaloisRing(q, d) : RngIntElt, RngIntElt -&gt; RngGal</A></H5>
<H5>GR(q, d) : RngIntElt, RngIntElt -&gt; RngGal</H5>
<BLOCKQUOTE>
Given integers q, d&ge;1, where q = p<sup>a</sup> for prime p and a&ge;1, 
create the default Galois ring GR(p<sup>a</sup>, d).
The defining polynomial used to construct the ring will be that
used for GF(p<sup>d</sup>), lifted to Z<sub>p<sup>a</sup></sub>.
If p is very large, it is advised to use the next function
instead, because Magma must first factor q completely.
<P>
The angle bracket notation can be used to assign names to the generator;
e.g.: <TT>R&lt;w&gt; := GaloisRing(2, 3)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5772">GaloisRing(p, a, d) : RngIntElt, RngIntElt, RngIntElt -&gt; RngGal</A></H5>
<H5>GR(p, a, d) : RngIntElt, RngIntElt, RngIntElt -&gt; RngGal</H5>

<PRE>    Check: BoolElt                      Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Given a prime p and integers a, d&ge;1, 
create the default Galois ring GR(p<sup>a</sup>, d).
The defining polynomial used to construct the ring will be that
used for GF(p<sup>d</sup>), lifted to Z<sub>p<sup>a</sup></sub>.
<P>
By default p is checked to be a strong pseudoprime for 20 random bases
b with 1 &lt; b &lt; p;
if the parameter <TT>Check</TT> is <TT>false</TT>, then no check is done on p at all
(this is useful when p is very large and one does not wish to perform
an expensive primality test on p).
</BLOCKQUOTE>
<H5><A NAME = "5773">GaloisRing(q, D) : RngIntElt, RngUPol -&gt; RngGal</A></H5>
<H5>GR(q, D) : RngIntElt, RngUPol -&gt; RngGal</H5>
<BLOCKQUOTE>
Given an integer q, where q = p<sup>a</sup> for prime p and a&ge;1, 
and a monic polynomial D over Z such that D is irreducible mod p,
create the Galois ring R = GR(p<sup>a</sup>, D).  
The coefficients of D are reduced modulo p<sup>a</sup>, and R is
constructed to behave like the polynomial quotient ring Z_(p^a)[x]/&lt;D&gt;.
If p is very large, it is advised to use the next function
instead, because Magma must first factor q completely.
</BLOCKQUOTE>
<H5><A NAME = "5774">GaloisRing(p, a, D) : RngIntElt, RngIntElt, RngUPol -&gt; RngGal</A></H5>
<H5>GR(p, a, D) : RngIntElt, RngIntElt, RngUPol -&gt; RngGal</H5>

<PRE>    Check: BoolElt                      Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Given a prime p, an integer a&ge;1, and a monic polynomial D over Z
such that D is irreducible mod p,
create the Galois ring R = GR(p<sup>a</sup>, D). 
The coefficients of D are reduced modulo p<sup>a</sup>, and R is
constructed to behave like the polynomial quotient ring Z_(p^a)[x]/&lt;D&gt;.
The parameter <TT>Check</TT> is as above.
</BLOCKQUOTE>
<H4><A NAME = "5775">Names</A></H4>



<H5><A NAME = "5776">AssignNames(~R, [f]) : RngGal, [ MonStgElt ]) -&gt;</A></H5>
<BLOCKQUOTE>
Procedure to change the name of the generating element in the
Galois ring R to the contents of the string f.
When R is created, the name will be <TT>R.1</TT>.
<P>
This procedure only changes the name used in printing the elements of R.
It does <I>not</I> assign to an identifier called f
the value of the generator in R; to do this, use an assignment statement,
or use angle brackets when creating the ring.
<P>
Note that since this is a procedure that modifies R,
it is necessary to have a reference <TT>~R</TT> to R
in the call to this function.
</BLOCKQUOTE>
<H5><A NAME = "5777">Name(R, 1) : RngGal, RngIntElt -&gt; RngGalElt</A></H5>
<BLOCKQUOTE>
Given a Galois ring R, return the element which has the name attached
to it, that is, return the element <TT>R.1</TT> of R.
</BLOCKQUOTE>
<H4><A NAME = "5778">Creation of Elements</A></H4>



<H5>One(R) : RngGal -&gt; RngGalElt</H5>

<H5>Identity(R) : RngGal -&gt; RngGalElt</H5><P>

<H5>Zero(R) : RngGal -&gt; RngGalElt</H5>

<H5>Representative(R) : RngGal -&gt; RngGalElt</H5><P>


These generic functions 
create 1, 1, 0, and 0 respectively, in any Galois ring.


<H5><A NAME = "5779">R . 1 : RngGal -&gt; RngGalElt</A></H5>
<H5>Generator(R) : RngGal -&gt; RngGalElt</H5>
<BLOCKQUOTE>
The generator for R as an algebra over its base ring {Z_(p^a)}.
Thus, if R is viewed as {Z_(p^a)[x]/&lt;D&gt;}, then <TT>R.1</TT> corresponds to
x in this presentation.
</BLOCKQUOTE>
<H5><A NAME = "5780">R ! a : RngGal, RngElt -&gt; RngGalElt</A></H5>
<BLOCKQUOTE>
Given a Galois ring R create the element specified by a; here
a is allowed to be an element coercible into R, which means
that a may be
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>An element of R;
<DT>(ii)</DT><DD>An integer, to be identified with a modulo the characteristic
    p<sup>a</sup> of R;
<DT>(iii)</DT><DD>An element of the base ring {Z_(p^a)} of R, to be identified with
    the corresponding element of R.
<DT>(iv)</DT><DD>A sequence of elements of the base ring {Z_(p^a)} of R.
    In this case the element a<sub>0</sub> + a<sub>1</sub>w + ... + a<sub>n - 1</sub>w<sup>n - 1</sup> is created,
    where a=[a<sub>0</sub>, ... a<sub>n - 1</sub>] and w is the generator <TT>R.1</TT> of
    R over {Z_(p^a)}.</DL>
</BLOCKQUOTE>
<H5><A NAME = "5781">Random(R) : RngGal -&gt; RngGalElt</A></H5>
<BLOCKQUOTE>
Create a pseudo-random element of Galois ring R.
</BLOCKQUOTE>
<H4><A NAME = "5782">Sequence Conversions</A></H4>



<H5><A NAME = "5783">ElementToSequence(a) : RngGalElt -&gt; [ RngIntResElt ]</A></H5>
<H5>Eltseq(a) : RngGalElt -&gt; [ RngIntResElt ]</H5>
<BLOCKQUOTE>
Given an element a of the Galois ring R, return the sequence of
coefficients [a<sub>0</sub>, ..., a<sub>n - 1</sub>] in the base ring {Z_(p^a)} of R
(where R is Z_(p^a)[x]/&lt;D&gt;),
such that a=a<sub>0</sub> + a<sub>1</sub>w + ... + a<sub>n - 1</sub>w<sup>d - 1</sup>, with w the generator
of R, and d the degree of D.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5784">Example <TT>RngGal_Create (H53E1)</TT></A></H3>
We can define the Galois ring GR(2<sup>3</sup>, 2) using the default function:
<P>
<P>
<PRE>
&gt; R&lt;w&gt; := GaloisRing(2^3, 2);
&gt; R;
GaloisRing(2, 3, 2)
</PRE>
We note that R has characteristic 8 and that w<sup>2</sup> + w + 1 = 0 in R.
<P>
<P>
<PRE>
&gt; R!8;
0
&gt; R!9;
1
&gt; w;
w
&gt; 4*w;
4*w
&gt; 4*w + 4*w;
0
&gt; w^2;
7*w + 7
&gt; w^2 + w + 1;
0
</PRE>
We can list all the elements of R by simply looping over R:
<P>
<P>
<PRE>
&gt; [x: x in R];   
[ 0, 1, 2, 3, 4, 5, 6, 7, w, w + 1, w + 2, w + 3, w + 4, w + 5, w + 6,
    w + 7, 2*w, 2*w + 1, 2*w + 2, 2*w + 3, 2*w + 4, 2*w + 5, 2*w + 6, 2*w 
    + 7, 3*w, 3*w + 1, 3*w + 2, 3*w + 3, 3*w + 4, 3*w + 5, 3*w + 6, 
    3*w + 7, 4*w, 4*w + 1, 4*w + 2, 4*w + 3, 4*w + 4, 4*w + 5, 4*w + 
    6, 4*w + 7, 5*w, 5*w + 1, 5*w + 2, 5*w + 3, 5*w + 4, 5*w + 5, 5*w 
    + 6, 5*w + 7, 6*w, 6*w + 1, 6*w + 2, 6*w + 3, 6*w + 4, 6*w + 5, 
    6*w + 6, 6*w + 7, 7*w, 7*w + 1, 7*w + 2, 7*w + 3, 7*w + 4, 7*w + 
    5, 7*w + 6, 7*w + 7 ]
</PRE>
We see that the elements of R can be considered as polynomials of
degree at most 1, with coefficients in the range { 0 ... 7}.
<P>
We can easily create elements of R also using the <TT>!</TT> operator,
and use the <TT>Eltseq</TT> function to recover the corresponding sequence
of coefficients.
<P>
<P>
<PRE>
&gt; R ! [1, 2];
2*w + 1
&gt; Eltseq(2*w + 1);
[ 1, 2 ]
&gt; Eltseq(w);
[ 0, 1 ]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text544.htm">[Next]</A><A  HREF = "text542.htm">[Prev]</A> <A  HREF = "text544.htm">[Right]</A> <A  HREF = "text542.htm">[Left]</A> <A  HREF = "text541.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>