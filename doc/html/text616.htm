<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Standard Groups and Extensions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text617.htm">[Next]</A><A  HREF = "text615.htm">[Prev]</A> <A  HREF = "text617.htm">[Right]</A> <A  HREF = "text615.htm">[Left]</A> <A  HREF = "text612.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "6657">Standard Groups and Extensions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text616.htm#6658">Construction of a Standard Group</A>
<LI> <A  HREF = "text616.htm#6667">Construction of Extensions</A>
</UL>
<H4><A NAME = "6658">Construction of a Standard Group</A></H4>

<P>
<P>
A number of functions are provided which construct various standard groups.
The effect of these functions is to construct the group on some standard set
of generators.
The group category of the result may be specified as an argument to the
function.


<H5><A NAME = "6659">AbelianGroup(C, Q) : Cat, [ RngIntElt ] -&gt; GrpFin</A></H5>
<H5>AbelianGroup(Q) : [ RngIntElt ] -&gt; GrpAb</H5>
<BLOCKQUOTE>
Construct the abelian group defined by the sequence Q =
[n<sub>1</sub>, ..., n<sub>r</sub>] of positive integers. The function constructs
the direct product of cyclic groups Z<sub>n<sub>1</sub></sub> x Z<sub>n<sub>2</sub></sub> x ... x Z<sub>n<sub>r</sub></sub>.  In some categories, n<sub>i</sub> may
also be 0, denoting the infinite cyclic group Z.
If the single-argument version of the function is used,
the group will be constructed in the category <A  HREF = "text787.htm#GrpAb"> <TT>GrpAb</TT></A>;
otherwise, its category will be C,
where C may be <A  HREF = "text787.htm#GrpAb"> <TT>GrpAb</TT></A>, <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A>, <A  HREF = "text832.htm#GrpGPC"> <TT>GrpGPC</TT></A>, <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A> or
<A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>.
</BLOCKQUOTE>
<H5><A NAME = "6660">AlternatingGroup(C, n) : Cat, RngIntElt -&gt; GrpFin</A></H5>
<H5>AlternatingGroup(n) : RngIntElt -&gt; GrpPerm</H5>
<H5>Alt(C, n) : Cat, RngIntElt -&gt; GrpFin</H5>
<H5>Alt(n) : RngIntElt -&gt; GrpPerm</H5>
<BLOCKQUOTE>
Construct the alternating group on n letters.
If the single-argument version of the function is used,
the group will be constructed in the category <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>;
otherwise, its category will be C,
where C may be <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A> or <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>.
</BLOCKQUOTE>
<H5><A NAME = "6661">CyclicGroup(C, n) : Cat, RngIntElt -&gt; GrpFin</A></H5>
<H5>CyclicGroup(n) : RngIntElt -&gt; GrpPerm</H5>
<BLOCKQUOTE>
Construct the cyclic group of order n.
If the single-argument version of the function is used,
the group will be constructed in the category <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>;
otherwise, its category will be C,
where C may be <A  HREF = "text787.htm#GrpAb"> <TT>GrpAb</TT></A>, <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A>, <A  HREF = "text832.htm#GrpGPC"> <TT>GrpGPC</TT></A>, <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A> or
<A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>.
</BLOCKQUOTE>
<H5><A NAME = "6662">DihedralGroup(C, n) : Cat, RngIntElt -&gt; GrpFin</A></H5>
<H5>DihedralGroup(n) : RngIntElt -&gt; GrpPerm</H5>
<BLOCKQUOTE>
Construct the dihedral group of order 2 * n.
If the single-argument version of the function is used,
the group will be constructed in the category <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>;
otherwise, its category will be C,
where C may be <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A>, <A  HREF = "text832.htm#GrpGPC"> <TT>GrpGPC</TT></A>, <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A> or <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>.
</BLOCKQUOTE>
<H5><A NAME = "6663">DicyclicGroup(n) : RngIntElt -&gt; GrpFP</A></H5>
<H5>DicyclicGroup(A, a) : GrpAb, GrpAbElt -&gt; GrpFP</H5>
<BLOCKQUOTE>
The first intrinsic constructs the dicyclic group of order 4n.
The second, when given an abelian group A and an element a of order 2,
constructs the associated dicyclic group generated by A
and an x with x<sup>2</sup>=a and a<sup>x</sup>=a<sup> - 1</sup> for all x&isin;A.
</BLOCKQUOTE>
<H5><A NAME = "6664">SymmetricGroup(C, n) : Cat, RngIntElt -&gt; GrpFin</A></H5>
<H5>SymmetricGroup(n) : RngIntElt -&gt; GrpPerm</H5>
<H5>Sym(GrpFin, n) : Cat, RngIntElt -&gt; GrpFin</H5>
<H5>Sym(n) : RngIntElt -&gt; GrpPerm</H5>
<BLOCKQUOTE>
Construct the symmetric group on n letters.
If the single-argument version of the function is used,
the group will be constructed in the category <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>;
otherwise, its category will be C,
where C may be <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A> or <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>.
</BLOCKQUOTE>
<H5><A NAME = "6665">ExtraSpecialGroup(C, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpFin</A></H5>
<H5>ExtraSpecialGroup(p, n : parameters) : RngIntElt, RngIntElt -&gt; GrpPerm</H5>
<BLOCKQUOTE>
Given a prime p and a small positive integer n, construct an
extra-special group G of order p<sup>2n + 1</sup>. The isomorphism type of G
can be selected using the parameter <TT>Type</TT> described below.
<P>
<P>
If the two-argument version of the function is used, the group will be
constructed in the category <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>; otherwise, its category will
be C, where C may be <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A>, <A  HREF = "text832.htm#GrpGPC"> <TT>GrpGPC</TT></A>, <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A> or
<A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>. If C is <A  HREF = "text809.htm#GrpFP"> <TT>GrpFP</TT></A>, <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A> or <A  HREF = "text630.htm#GrpPerm"> <TT>GrpPerm</TT></A>,
the prime p must be small.
<P>
<P>
<PRE>
     Type: MonStgElt                     Default: "+"
</PRE>
Possible values for this parameter are "+" (default) and "-".
<P>
<P>
If <TT>Type</TT> is set to "+", the function returns for p = 2 the central
product of n copies of the dihedral group of order 8, and for p &gt; 2
it returns the unique extra-special group of order p<sup>2n + 1</sup> and exponent p.
<P>
<P>
If <TT>Type</TT> is set to "-", the function returns for p = 2 the central
product of a quaternion group of order 8 and n - 1 copies of the dihedral
group of order 8, and for p &gt; 2 it returns the unique extra-special group
of order p<sup>2n + 1</sup> and exponent p<sup>2</sup>. 
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6666">Example <TT>Grp_StandardGroups (H62E8)</TT></A></H3>
<DL COMPACT class='compact'>
<DT>(1)</DT><DD>The abelian group Z<sub>6</sub> x Z<sub>2</sub> x Z<sub>7</sub>
in the category <A  HREF = "text787.htm#GrpAb"> <TT>GrpAb</TT></A>:
<P>
<P>
</DL>
<PRE>
&gt; A := AbelianGroup([6, 2, 7]);
&gt; A;
Abelian Group isomorphic to Z/2 + Z/42
Defined on 3 generators
Relations:
    6*A.1 = 0
    2*A.2 = 0
    7*A.3 = 0
</PRE>
<DL COMPACT class='compact'>
<DT>(2)</DT><DD>The alternating group on 6 letters as a permutation group:
<P>
<P>
</DL>
<PRE>
&gt; A6 := Alt(6);
&gt; A6;
Permutation group A6 acting on a set of cardinality 6
Order = 360 = 2^3 * 3^2 * 5
    (1, 2)(3, 4, 5, 6)
    (1, 2, 3)
</PRE>
<DL COMPACT class='compact'>
<DT>(3)</DT><DD>The dihedral group of order 8 as a <A  HREF = "text707.htm#GrpPC"> <TT>GrpPC</TT></A>:
<P>
<P>
</DL>
<PRE>
&gt; D8 := DihedralGroup(GrpPC, 4);
&gt; D8;
GrpPC : D8 of order 8 = 2^3
PC-Relations:
  D8.2^2 = D8.3, 
  D8.2^D8.1 = D8.2 * D8.3
</PRE>
<DL COMPACT class='compact'>
<DT>(4)</DT><DD>The symmetric group on 7 letters as a finitely presented group
on generators a and b:
<P>
<P>
</DL>
<PRE>
&gt; S7&lt;a, b&gt; := SymmetricGroup(GrpFP, 7);
&gt; S7;
Finitely presented group S7 on 2 generators
Relations
    a^7 = Id(S7)
    b^2 = Id(S7)
    (a * b)^6 = Id(S7)
    (a^-1 * b * a * b)^3 = Id(S7)
    (b * a^-2 * b * a^2)^2 = Id(S7)
    (b * a^-3 * b * a^3)^2 = Id(S7)
</PRE>
<HR>
<H4><A NAME = "6667">Construction of Extensions</A></H4>



<H5><A NAME = "6668">DirectProduct(G, H) : Grp, Grp -&gt; Grp</A></H5>
<BLOCKQUOTE>
Given two groups G and H belonging to the category C, construct 
the direct product of G and H as a group in C.
</BLOCKQUOTE>
<H5><A NAME = "6669">DirectProduct(Q) : [ Grp ] -&gt; Grp</A></H5>
<BLOCKQUOTE>
Given a sequence Q of n groups belonging to the category C, construct 
the direct product Q[1] x Q[2] x ... x Q[n] as a group
in the category C.
</BLOCKQUOTE>
<H5><A NAME = "6670">SemidirectProduct(K, H, f: parameters) : Grp, Grp, Map -&gt; Grp, Map, Map</A></H5>
<BLOCKQUOTE>
Given two groups K and H and a homomorphism f:H to Aut(K), construct 
the semidirect product of K and H where the elements of H act on K
via the map f. Return the semidirect product, and maps embedding H and K
into the semidirect product.
<P>
<P>
<PRE>
     MaxDeg: RngIntElt                   Default: 1000000
</PRE>
The maximum degree permutation representation the algorithm will attempt.
<P>
<P>
<PRE>
     UseRegular: BoolElt                 Default: <TT>false</TT>
</PRE>
Setting <TT>UseRegular</TT> to true  forces the algorithm to go via the
regular representations of K and H.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6671">Example <TT>Grp_Extensions (H62E9)</TT></A></H3>
We define G to be the symmetric group of degree 4 and
H to be the dihedral group of order 8. We then form the
direct product of G and H.
<P>
<P>
<PRE>
&gt; G := SymmetricGroup(4);
&gt; H := DihedralGroup(3);
&gt; D := DirectProduct(G, H);
&gt; D;
Permutation group D acting on a set of cardinality 7
    (1, 2, 3, 4)
    (1, 2)
    (5, 6, 7)
    (5, 6)
&gt; Order(D);
144
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text617.htm">[Next]</A><A  HREF = "text615.htm">[Prev]</A> <A  HREF = "text617.htm">[Right]</A> <A  HREF = "text615.htm">[Left]</A> <A  HREF = "text612.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>