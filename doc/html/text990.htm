<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Recognition Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text991.htm">[Next]</A><A  HREF = "text989.htm">[Prev]</A> <A  HREF = "text991.htm">[Right]</A> <A  HREF = "text989.htm">[Left]</A> <A  HREF = "text982.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "11202">Recognition Functions</A></H3>

<P>
<P>
A quaternion algebra A over a field K is isomorphic to the
matrix ring M<sub>2</sub>(K) if and only if there exists a zerodivisor
&epsilon; in A.  Given such an &epsilon;, we can exhibit an
explicit isomorphism; otherwise a zerodivisor will be computed 
first by finding a point on a conic (see <A  HREF = "text981.htm#bib_Vigneras80">[Vig80, Cor. I.2.4]</A>).
<P>
Given an associative algebra, we also have an algorithm to recognize if
the algebra is a quaternion algebra, and, if so, return an isomorphism
to a quaternion algebra in standard form.


<H5><A NAME = "11203">IsMatrixRing(A) : AlgQuat -&gt; BoolElt, AlgMat, Map</A></H5>

<PRE>    Isomorphism: BoolElt                Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the quaternion algebra A with base field F
is isomorphic to M<sub>2</sub>(F), or equivalently if A has no ramified places.
The field F has to be Q, F<sub>q</sub>(X) (with q odd) or a number field.
<P>
If A is isomorphic to M<sub>2</sub>(F) and <TT>Isomorphism</TT> is set to <TT>true</TT>, then 
M<sub>2</sub>(F) and an isomorphism A to M<sub>2</sub>(F) are also returned.
</BLOCKQUOTE>
<H5><A NAME = "11204">MatrixRing(A, eps) : AlgQuat, AlgQuatElt -&gt; AlgMat, Map</A></H5>
<H5>MatrixAlgebra(A, eps) : AlgQuat, AlgQuatElt -&gt; AlgMat, Map</H5>
<BLOCKQUOTE>
Given a quaternion algebra A and a zerodivisor &epsilon; &isin;A, the function 
returns the matrix algebra M<sub>2</sub>(F) and an isomorphism A to M<sub>2</sub>(F).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "11205">Example <TT>AlgQuat_Quaternion_MatrixRing (H91E14)</TT></A></H3>
<P>
<P>
<PRE>
&gt; A := QuaternionAlgebra&lt;Rationals() | -1, 1&gt;;
&gt; eps := A.3-1;
&gt; MinimalPolynomial(eps), Norm(eps);
x^2 + 2*x
0
</PRE>
<P>
Thus, since &epsilon; has reduced norm 0, it is a zerodivisor: 
indeed, &epsilon;(&epsilon; + 2)=0.
<P>
<P>
<P>
<PRE>
&gt; M2F, phi := MatrixRing(A,eps);
&gt; [&lt;MinimalPolynomial(A.i), MinimalPolynomial(phi(A.i))&gt; : i in [1..3]];
[
    &lt;x^2 + 1, x^2 + 1&gt;,
    &lt;x^2 - 1, x^2 - 1&gt;,
    &lt;x^2 - 1, x^2 - 1&gt;
]
</PRE>
<HR>
<H5><A NAME = "11206">IsQuaternionAlgebra(B) : AlgAss -&gt; BoolElt, AlgQuat, Map</A></H5>
<H5>IsQuaternionAlgebra(B) : AlgMat -&gt; BoolElt, AlgQuat, Map</H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the associative algebra B 
is a quaternion algebra; if true, it returns the associated 
quaternion algebra A in standard form  and an algebra 
homomorphism from B to A. The algorithm used is 
<A  HREF = "text981.htm#bib_Voight1">[Voi05, Algorithm 4.2.9]</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "11207">Example <TT>AlgQuat_Quaternion_IsQuaternionAlgebra (H91E15)</TT></A></H3>
We create an associative algebra which is known to be a quaternion 
algebra A and then recover A (or an isomorphic algebra).
<P>
<P>
<P>
<PRE>
&gt; A := AssociativeAlgebra(QuaternionAlgebra&lt;Rationals() | -1,1&gt;);
&gt; vecs := [&amp;+[Random(10)*A.i : i in [1..4]] : j in [1..4]];
&gt; Mchange := Matrix(Rationals(),4,4,&amp;cat[Eltseq(vecs[i]) : i in [1..4]]);
&gt; Mchange := Mchange^(-1);
&gt; seq := [&lt;i,j,k,((vecs[i]*vecs[j])*Mchange)[k]&gt; : i,j,k in [1..4]];
&gt; A := AssociativeAlgebra&lt;Rationals(),4 | seq&gt;;
&gt; bl, Aquat, phi := IsQuaternionAlgebra(A);
&gt; bl;
true
&gt; Aquat;
Quaternion Algebra with base ring Rational Field
&gt; Aquat.1^2, Aquat.2^2;
25 -3924/25
&gt; phi;
Mapping from: AlgAss: A to AlgQuat: Aquat given by a rule
</PRE>
<P>
We now verify the functionality when a zerodivisor is encountered.
<P>
<P>
<P>
<PRE>
&gt; A := Algebra(MatrixAlgebra(Rationals(),2));
&gt; IsQuaternionAlgebra(A);
true Quaternion Algebra with base ring Rational Field
Mapping from: AlgAss: A to Quaternion Algebra with base ring Rational Field
given by a rule
</PRE>
<P>
The algebra k&lt;x, y&gt; with x<sup>2</sup>=y<sup>2</sup>=xy + yx=0 is not semisimple; the
ideal generated by x, y is a nontrivial two-sided ideal.  Similarly,
a commutative algebra is not a quaternion algebra.
<P>
<P>
<P>
<PRE>
&gt; A := Algebra(FPAlgebra&lt;Rationals(), x,y | x^2, y^2, x*y+y*x&gt;);
&gt; IsQuaternionAlgebra(A);
false
&gt; A := Algebra(FPAlgebra&lt;Rationals(), x | x^4+x^2+1&gt;);
&gt; IsQuaternionAlgebra(A);
false
</PRE>
<P>
In characteristic 2, the algorithm also performs correctly, both 
for an associative but non-quaternion algebra and for the "universal" 
example of a quaternion algebra.
<P>
<P>
<P>
<PRE>
&gt; A := Algebra(FPAlgebra&lt;GF(2), x,y | x^2, y^2, x*y+y*x+1&gt;);
&gt; IsQuaternionAlgebra(A);
false
&gt; F&lt;a,b,x,y,z,w&gt; := FieldOfFractions(PolynomialRing(GF(2),6));
&gt; M := [[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1],
&gt;       [0,1,0,0],[a,1,0,0],[0,0,0,1],[0,0,a,1],
&gt;       [0,0,1,0],[0,0,1,1],[b,0,0,0],[b,b,0,0],
&gt;       [0,0,0,1],[0,0,a,0],[0,b,0,0],[a*b,0,0,0]];
&gt; A&lt;alpha,beta&gt; := AssociativeAlgebra&lt;F,4 | M&gt;;
&gt; alpha^2+alpha+a;
(0 0 0 0)
&gt; beta^2+b;
(0 0 0 0)
&gt;
&gt; bl, Aquat, phi := IsQuaternionAlgebra(A);
&gt; bl;
true
&gt; Aquat;
Quaternion Algebra with base ring Multivariate rational function field of 
rank 6 over GF(2)
&gt; theta := phi(x+y*alpha+z*beta+w*alpha*beta);
&gt; Trace(theta);
y
&gt; Norm(theta);
a*b*w^2 + a*y^2 + b*z^2 + b*z*w + x^2 + x*y
</PRE>
<HR>
<H5><A NAME = "11208">MatrixRepresentation(A) : AlgQuat -&gt; Map</A></H5>
<H5>MatrixRepresentation(R) : AlgQuatOrd -&gt; Map</H5>
<BLOCKQUOTE>
Given a quaternion algebra A over Q or a quaternion order R over Z, 
this function returns a 2 x 2-matrix representation of A, defined 
over a quadratic extension.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text991.htm">[Next]</A><A  HREF = "text989.htm">[Prev]</A> <A  HREF = "text991.htm">[Right]</A> <A  HREF = "text989.htm">[Left]</A> <A  HREF = "text982.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>