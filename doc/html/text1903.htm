<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Best Known Quantum Codes</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1904.htm">[Next]</A><A  HREF = "text1902.htm">[Prev]</A> <A  HREF = "text1904.htm">[Right]</A> <A  HREF = "text1902.htm">[Left]</A> <A  HREF = "text1896.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "21190">Best Known Quantum Codes</A></H3>

<P>
<P>
<P>
An [[n, k]] quantum stabiliser code Q is said to be a 
<I>best known [[n, k]] quantum code</I> (BKQC) if C has the 
highest minimum weight among all known [[n, k]] quantum codes.
The acronym QECC (Quantum Error Correcting Code) will be used 
to more easily distinguish from the best known linear codes database (BKLC).
<P>
Magma currently has a database for binary quantum codes, though it 
should be noted that these codes are considered to be over the alphabet 
GF(4), not GF(2).
The database for codes over GF(4) currently contains constructions of all
best known quantum codes of length 35.
This includes self-dual quantum codes up to length 35, which
are stored in the database as dimension 0 quantum codes.
<P>
Quantum codes of length up to 12 are optimal, in the sense that their
minimum weights meet the upper bound.
Thus the user has access to 665 best-known binary quantum codes.
<P>
The Magma QECC database uses the tables of bounds and
constructions compiled by Markus Grassl (Karlsruhe), 
available online at <A  HREF = "text1895.htm#bib_GrasslWeb">[Gra]</A>, which are
based on the results in <A  HREF = "text1895.htm#bib_CRSS">[CRSS98]</A>.
Good codes have also been contributed by Eric Rains and Zlatko Varbanov.
<P>
The user can display the method used to construct a particular QECC
code through use of a verbose mode, triggered by the verbose flag
<TT>BestCode</TT>. When it is set to <TT>true</TT>, all of the functions in this
section will output the steps involved in each code they construct.


<H5><A NAME = "21191">QECC(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt</A></H5>
<H5>BKQC(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt</H5>
<H5>BestKnownQuantumCode(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt</H5>
<BLOCKQUOTE>
Given a finite field F, and positive integers n and k such that 
k &le;n, return an [[n, k]] quantum code over F which has the largest
minimum weight among all known [[n, k]] quantum codes.
A second boolean return value signals whether or not the desired
code exists in the database.
<P>
The database currently exists for GF(4) (which are in fact
binary quantum codes) up to length 35.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "21192">Example <TT>QECC_QECC-egs (H164E23)</TT></A></H3>
The weight distribution of a small best known quantum code is
calculated, verifying its minimum weight.
Note that the <I>larger</I> the dimension of a quantum code,
the easier it is to calculate its weight distribution.
<P>
<P>
<PRE>
&gt; F&lt;w&gt; := GF(4);
&gt; Q := QECC(F,25,16);
&gt; Q:Minimal;
[[25, 16, 3]] Quantum code over GF(2^2)
&gt; time WD_S, WD_N, WD := WeightDistribution(Q);
Time: 0.010
&gt; WD_S;
[ &lt;0, 1&gt;, &lt;1, 2&gt;, &lt;2, 1&gt;, &lt;14, 4&gt;, &lt;15, 16&gt;, &lt;16, 38&gt;, &lt;17, 79&gt;, &lt;18, 126&gt;, &lt;19,
129&gt;, &lt;20, 77&gt;, &lt;21, 27&gt;, &lt;22, 9&gt;, &lt;23, 3&gt; ]
&gt; WD_N;
[ &lt;0, 1&gt;, &lt;1, 2&gt;, &lt;2, 1&gt;, &lt;3, 399&gt;, &lt;4, 6527&gt;, &lt;5, 75363&gt;, &lt;6, 707543&gt;, &lt;7,
5404369&gt;, &lt;8, 34084490&gt;, &lt;9, 180107319&gt;, &lt;10, 804255370&gt;, &lt;11, 3052443894&gt;, &lt;12,
9883860222&gt;, &lt;13, 27348684334&gt;, &lt;14, 64649758926&gt;, &lt;15, 130286413858&gt;, &lt;16,
222912028997&gt;, &lt;17, 321704696752&gt;, &lt;18, 387985433701&gt;, &lt;19, 385943417035&gt;, &lt;20,
310898936275&gt;, &lt;21, 197566276671&gt;, &lt;22, 95232787563&gt;, &lt;23, 32688613821&gt;, &lt;24,
7109768160&gt;, &lt;25, 735493959&gt; ]
&gt; WD;
[ &lt;3, 399&gt;, &lt;4, 6527&gt;, &lt;5, 75363&gt;, &lt;6, 707543&gt;, &lt;7, 5404369&gt;, &lt;8, 34084490&gt;, &lt;9,
180107319&gt;, &lt;10, 804255370&gt;, &lt;11, 3052443894&gt;, &lt;12, 9883860222&gt;, &lt;13,
27348684334&gt;, &lt;14, 64649758922&gt;, &lt;15, 130286413842&gt;, &lt;16, 222912028959&gt;, &lt;17,
321704696673&gt;, &lt;18, 387985433575&gt;, &lt;19, 385943416906&gt;, &lt;20, 310898936198&gt;, &lt;21,
197566276644&gt;, &lt;22, 95232787554&gt;, &lt;23, 32688613818&gt;, &lt;24, 7109768160&gt;, &lt;25,
735493959&gt; ]
</PRE>
So the [[25, 16]] code is impure, and has a minimum distance of 3.
<HR>
<H3><A NAME = "21193">Example <TT>QECC_QECC-self-dual (H164E24)</TT></A></H3>
Unlike linear codes, dimension 0 quantum codes are non-trivial
and are the subject of much study. These are the <I>self-dual</I>
quantum codes, which form a special subclass of quantum stabilizer codes.
It can be seen that a length n self-dual code is described
by a n x n generator matrix, an indication of the 
non-triviality of its structure.
<P>
<P>
<PRE>
&gt; F&lt;w&gt; := GF(4);
&gt; C := QECC(GF(4),8, 0);
&gt; C;
[[8, 0, 4]] self-dual Quantum code over GF(2^2), stabilised by:
[  1   0   0   1   0   1   1   0]
[  w   0   0   w   0   w   w   0]
[  0   1   0   1   0   1   0   1]
[  0   w   0   w   0   w   0   w]
[  0   0   1   1   0   0   1   1]
[  0   0   w   w   0   0   w   w]
[  0   0   0   0   1   1   1   1]
[  0   0   0   0   w   w   w   w]
</PRE>
<HR>
<H3><A NAME = "21194">Example <TT>QECC_QECC-verbose (H164E25)</TT></A></H3>
The verbose flag <TT>BestCode</TT> will show the method by which the 
best code is constructed in the database.
In this example the construction of a [[25, 11, 4]] quantum
code is described.
<P>
<P>
<PRE>
&gt; SetVerbose("BestCode",true);
&gt; F&lt;w&gt; := GF(4);
&gt; Q := QECC(F,25,11);
Construction of a [[ 25 , 11 , 4 ]] Quantum Code:
[1]:  [[40, 30, 4]] Quantum code over GF(2^2)
        QuasiCyclicCode of length 40 stacked to height 2 with generating
        polynomials: 1,  w^2*x^4 + w*x^3 + w^2*x^2 + w*x + w^2,  x^4 + w^2*x^2 +
        w^2*x + w^2,  x^4 + w*x^3 + x^2,  w*x^4 + x^3 + w^2*x,  w*x^4 + x^3 +
        x^2 + x,  w^2*x^4 + x^2 + w*x,  x^4 + w^2*x^3 + w^2*x^2 + x + 1,  w,
        x^4 + w^2*x^3 + x^2 + w^2*x + 1,  w*x^4 + x^2 + x + 1,  w*x^4 + w^2*x^3
        + w*x^2,  w^2*x^4 + w*x^3 + x,  w^2*x^4 + w*x^3 + w*x^2 + w*x,  x^4 +
        w*x^2 + w^2*x,  w*x^4 + x^3 + x^2 + w*x + w
[2]:  [[21, 11, 4]] Quantum code over GF(2^2)
        Shortening of [1] at { 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19,
        21, 24, 28, 34, 37 }
[3]:  [[25, 11, 4]] Quantum code over GF(2^2)
        ExtendCode [2] by 4
&gt; Q:Minimal;
[[25, 11, 4]] Quantum code over GF(2^2)
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1904.htm">[Next]</A><A  HREF = "text1902.htm">[Prev]</A> <A  HREF = "text1904.htm">[Right]</A> <A  HREF = "text1902.htm">[Left]</A> <A  HREF = "text1896.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>