<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Polynomials for Finite Fields</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text194.htm">[Next]</A><A  HREF = "text192.htm">[Prev]</A> <A  HREF = "text194.htm">[Right]</A> <A  HREF = "text192.htm">[Left]</A> <A  HREF = "text188.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "1674">Polynomials for Finite Fields</A></H3>



<H5><A NAME = "1675">IrreduciblePolynomial(F, n) : FldFin, RngIntElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a finite field F and a positive integer n &gt; 1, return a
polynomial of degree n that is irreducible over F.  If a Conway
polynomial or a sparse polynomial is available, then it is returned.
</BLOCKQUOTE>
<H5><A NAME = "1676">RandomIrreduciblePolynomial(F, n) : FldFin, RngIntElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a finite field F and a positive integer n &gt; 1, return a random
irreducible polynomial of degree n that is irreducible over F.
The polynomial will be dense in general (that is, a Conway or stored
sparse polynomial is not used).
</BLOCKQUOTE>
<H5><A NAME = "1677"></A><A NAME = "IrreducibleLowTermGF2Polynomial">IrreducibleLowTermGF2Polynomial</A>(n) : RngIntElt -&gt; RngUPolElt</H5>
<BLOCKQUOTE>
Given an integer n in the range 1 &le;n &le;100000, return the
irreducible polynomial f of the form x<sup>n</sup> + g where the
degree of g is minimal and g is the first such polynomial
in lexicographical order.
<P>
This uses a database of low-term irreducible polynomials over GF(2),
constructed by Allan Steel in 2004 (thanks are expressed to William
Stein for providing machines for some of the computations).
</BLOCKQUOTE>
<H5><A NAME = "1678"></A><A NAME = "IrreducibleSparseGF2Polynomial">IrreducibleSparseGF2Polynomial</A>(n) : RngIntElt -&gt; RngUPolElt</H5>
<BLOCKQUOTE>
Given an integer n in the range 4 &le;n &le;12800, return the
irreducible polynomial f of the form x<sup>n</sup> + g where g has 2 non-zero
terms if possible and 4 non-zero terms if not; g is the first such
polynomial in lexicographical order in either case.
<P>
This uses a database of sparse irreducible polynomials over GF(2)
constructed by Allan Steel in 1998.
</BLOCKQUOTE>
<H5><A NAME = "1679">PrimitivePolynomial(F, m) : FldFin, RngIntElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a finite field F and a positive integer m &gt; 1, 
construct a polynomial f of degree m that is primitive 
over F. Thus, f is irreducible over F, and it has 
a primitive root of the degree m extension field of F
as a root.
</BLOCKQUOTE>
<H5><A NAME = "1680">AllIrreduciblePolynomials(F, m) : FldFin, RngIntElt -&gt; { RngUPolElt }</A></H5>
<BLOCKQUOTE>
Given a finite field F and a positive integer m &gt; 1, 
construct the set of all monic polynomials of degree m that are irreducible 
over F. 
</BLOCKQUOTE>
<H5><A NAME = "1681">ConwayPolynomial(p, n) : RngIntElt, RngIntElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a prime p and an exponent n &ge;1, return the Conway
polynomial of degree n over GF(p). The Conway polynomial
is defined in the introduction. Note that this polynomial is
read in from a table containing Conway polynomials for a limited
range of p, n only.
</BLOCKQUOTE>
<H5><A NAME = "1682">ExistsConwayPolynomial(p, n) : RngIntElt, RngIntElt -&gt; BoolElt, RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a prime p and an exponent n&gt;1, return <TT>true</TT> and the Conway
polynomial if it is known for the field GF(p), <TT>false</TT> otherwise.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text194.htm">[Next]</A><A  HREF = "text192.htm">[Prev]</A> <A  HREF = "text194.htm">[Right]</A> <A  HREF = "text192.htm">[Left]</A> <A  HREF = "text188.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>