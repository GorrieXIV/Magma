<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Examples</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text328.htm">[Next]</A><A  HREF = "text326.htm">[Prev]</A> <A  HREF = "text328.htm">[Right]</A> <A  HREF = "text326.htm">[Left]</A> <A  HREF = "text323.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3181">Examples</A></H3>



<HR>
<H3><A NAME = "3182">Example <TT>LatNF_simple-nflat-example (H31E4)</TT></A></H3>
Some basic functionality with number field lattices will be demonstrated.
The standard lattice over (Q)(Sqrt(37)) is created and a
sublattice of it is selected.
<P>
<P>
<P>
<PRE>
&gt; K&lt;s37&gt; := QuadraticField(37);
&gt; L := NumberFieldLattice(K,3);
&gt; r := (1+s37)/2;
&gt; vecs:=[L.2+r*L.3, L.2-r*L.3, L.1+r*L.2];
&gt; SUB := sub&lt;L|vecs&gt;;
</PRE>
<P>
The same sublattice may be obtained in another way, by directly giving 
its generating vectors as elements of the ambient space. Further, let S
be the sublattice generated by one of the basis vectors of SUB.
Then the lattice sum of S and its orthogonal complement O
provide another sublattice.
<P>
<P>
<P>
<PRE>
&gt; S2 := NumberFieldLattice([Vector(v) : v in vecs]);
&gt; assert SUB eq S2; // both methods give the same
&gt; S := sub&lt;SUB|[vecs[1]]&gt;; // 1-dimensional sublattice
&gt; O := OrthogonalComplement(SUB, vecs[1]);
&gt; InnerProduct(SUB!O.1, SUB!vecs[1]);
0
&gt; InnerProduct(SUB!O.2, SUB!vecs[1]);
0
&gt; assert IsSublattice(S+O, SUB);
&gt; Norm(Determinant(S+O)/Determinant(SUB));
10201
&gt; assert 101*SUB.2 in (S+O); // the index has norm 101^2
&gt; assert 101*SUB.3 in (S+O);
</PRE>
<HR>
<H3><A NAME = "3183">Example <TT>LatNF_nf-second-ex (H31E5)</TT></A></H3>
The next example concerns non-trivial Gram matrices and transformations.
<P>
<P>
<P>
<PRE>
&gt; K&lt;s37&gt; := QuadraticField(37);
&gt; L := NumberFieldLattice(K,3); // standard lattice
&gt; r := (1+s37)/2;
&gt; v1 := Vector([1,2+3*r,-1+4*r]);
&gt; v2 := Vector([1/2,1/3-3*r/2,1+r]);
&gt; LAT := NumberFieldLattice([v1,v2]);
&gt; Norm(Determinant(L+LAT));
1/1296
</PRE>
<P>
This lattice is 2-dimensional and has a denominator of 6.
Next, while keeping the same basis vectors, the inner product matrix
is changed. The resulting lattice is then modified by applying
a random transformation matrix (not necessarily of unit determinant). 
<P>
<P>
<P>
<PRE>
&gt; IP := DiagonalMatrix([(s37-1)/2,1,1]);
&gt; LATG := NumberFieldLattice([v1,v2] : InnerProduct:=IP);
&gt; R := Matrix(2,2, [s37,1, -1,(1+s37)/2]);
&gt; NEW := R*LATG;
&gt; BasisMatrix(NEW);
[     1/2*(2*s37 + 1)  1/12*(33*s37 + 661)    1/2*(3*s37 + 151)]
[       1/4*(s37 - 3) 1/12*(-25*s37 - 211)             -s37 + 9]
&gt; InnerProductMatrix(NEW);
[1/2*(s37 - 1)             0             0]
[            0             1             0]
[            0             0             1]
&gt; Determinant(R)^2*Determinant(LATG) eq Determinant(R*LATG);
true
</PRE>
<P>
If an integral transformation has determinant 1,
then the resulting lattices are equal.
<P>
<P>
<P>
<PRE>
&gt; Y := Matrix(3,3,[1,0,0, (1+s37)/2,1,0, -s37,-1,1]);
&gt; Z := Matrix(3,3,[1,0,0, (-1+s37)/2,1,0, 2,s37,1]);
&gt; TYZ := Y*Transpose(Z); // TYZ has determinant 1
&gt; L eq TYZ*L;
true
&gt; LYZ := NumberFieldLattice(K,3 : Gram:=TYZ*Transpose(TYZ));
&gt; IsIsometric(TYZ*L,LYZ); // these have the same pseudoGram matrix
true
[1 0 0]
[0 1 0]
[0 0 1]
&gt; assert PseudoGramMatrix(TYZ*L) eq PseudoGramMatrix(LYZ);
&gt; C := Matrix(3,3,[1,s37,s37^2/2, 0,1,1+s37, 0,0,1]);
&gt; D := Matrix(3,3,[1,(1+s37)/3,-1, 0,1,2+3*s37/4, 0,0,1]);
&gt; TCD := C*Transpose(D);
&gt; IsIsometric(L,TCD*L); // TCD has determinant 1, but is not integral
false
&gt; assert Determinant(TCD) eq 1;
&gt; [Denominator(x) : x in Eltseq(TCD)];
[ 6, 8, 2, 3, 4, 1, 1, 4, 1 ]
</PRE>
<P>
The next statement shows that the call to <TT>IsIsometric</TT> can be 
expensive in some cases.
<P>
<P>
<P>
<PRE>
&gt; time IsIsometric(LAT,sub&lt;LAT|[v1+v2,2*v1+v2]&gt;); // nontrivial enum
Time: 27.960
true
[1 1]
[2 1]
</PRE>
<HR>
<H3><A NAME = "3184">Example <TT>LatNF_nf-lat-sqrt5 (H31E6)</TT></A></H3>
Here we work with lattices over (Q)(&#8730;5)
that are related to the icosahedron and dodecahedron.
<P>
<P>
<P>
<PRE>
&gt; K&lt;s5&gt; := QuadraticField(5);
&gt; L := NumberFieldLattice(K,3); // standard lattice
&gt; phi := (1-s5)/2; // negative golden ratio
&gt; vecs := [L.2+phi*L.3, L.2-phi*L.3, -L.1-phi*L.2];
&gt; SUB := sub&lt;L|vecs&gt;;
&gt; LAT := NumberFieldLattice([Vector(v) : v in vecs]);
&gt; LAT eq SUB; // either way gives the same lattice
true
&gt; Determinant(LAT); // (1-s5)^2
-2*s5 + 6
</PRE>
<P>
The given vectors are all of norm (5 - &#8730;5)/2, and their
orbit under the automorphism group forms the vertices of a dodecahedron.
The automorphism group of this sublattice is a central 2-extension
of (Alt)(5), while that of the standard lattice is a central
2-extension of (Sym)(4).
<P>
<P>
<P>
<PRE>
&gt; [Norm(v) : v in vecs];
[ 1/2*(-s5 + 5), 1/2*(-s5 + 5), 1/2*(-s5 + 5) ]
&gt; A := AutomorphismGroup(LAT);
&gt; IsIsomorphic(A/Center(A),AlternatingGroup(5));
true
&gt; B := AutomorphismGroup(L);
&gt; IsIsomorphic(B/Center(B),SymmetricGroup(4));
true
</PRE>
<P>
Carefully note that acting on vecs[1] as a member of L by a matrix
is different to acting on vecs[1] as a member of LAT by the same
matrix, as the action is on the coordinate vectors.
<P>
<P>
<P>
<PRE>
&gt; vecs[1]^(A.1);
(1/2*(-s5 + 1) 1/2*(-s5 + 5)  1/2*(s5 - 3))
&gt; Norm($1); // not the same
1/2*(-9*s5 + 25)
&gt; (LAT!vecs[1])^(A.1);
(1/2*(s5 - 1)            0            1)
&gt; Norm($1); // as desired
1/2*(-s5 + 5)
</PRE>
<P>
There are twelve vectors of norm (5 - &#8730;5)/2 in the smaller lattice,
while there are 24 in the standard lattice.
<P>
<P>
<P>
<PRE>
&gt; #Sphere(L,1); // 6 vectors of norm 1
6
&gt; #Sphere(L,(5-s5)/2); // 24 vectors of this norm
24
&gt; #Sphere(L,3); // 32 of norm 3
32
&gt; assert Set(vecs) subset Set(Sphere(L,(5-s5)/2));
&gt; #Sphere(LAT,1); // no vectors of norm 1
0
&gt; #Sphere(LAT,(5-s5)/2); // 12 vectors of this norm
12
&gt; #Sphere(LAT,3); // 20 of norm 3
20
&gt; Lvecs := ChangeUniverse(vecs, LAT);
&gt; assert Set(Lvecs) subset Set(Sphere(LAT,(5-s5)/2));
</PRE>
<P>
The orbit of the 12 vectors of norm (5 - &#8730;5)/2 in LAT
is complete under the automorphism group. By taking a 3-sided face of
the icosahedron, or a 5-sided face of the dodecahedron (vectors of norm 3),
its action under the group automorphisms will give all such faces.
<P>
<P>
<P>
<PRE>
&gt; Set(Sphere(LAT,(5-s5)/2)) eq Orbit(A,Lvecs[1]);
true
&gt; FACE3 := {LAT.1,LAT.2,LAT.3}; // vertices of a face
&gt; #(FACE3^A); // all 20 faces, each vertex appears 5 times
20
&gt; Multiplicities(Multiset(&amp;cat[SetToSequence(x) : x in FACE3^A]));
[ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ]
&gt; assert &amp;and[Norm(InnerProduct(a,b)) eq -1 : a,b in FACE3 | a ne b];
&gt; // now the dodecahedron
&gt; S3 := Sphere(LAT,3);
&gt; w1 := LAT ! [(1+s5)/2,0,-(1-s5)/2];
&gt; w2 := LAT ! [1,-1,-1];
&gt; w3 := LAT ! [1,-1,1];
&gt; w4 := LAT ! [(1+s5)/2,0,(1-s5)/2];
&gt; w5 := LAT ! [-(1-s5)/2,-(1+s5)/2,0];
&gt; FACE5 := {w1,w2,w3,w4,w5}; // vertices of a face
&gt; #(FACE5^A); // all 12 faces, each vertex appears thrice
12
&gt; Multiplicities(Multiset(&amp;cat[SetToSequence(x) : x in FACE5^A]));
[ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 ]
&gt; O1 := OrthogonalComplement(LAT,w1);
&gt; O2 := OrthogonalComplement(LAT,w2);
&gt; IsIsometric(O1,O2);
true
[      -s5 + 3   1/2*(s5 + 1)]
[  1/2*(s5 + 3) 1/2*(3*s5 + 7)]
</PRE>
<HR>
<H3><A NAME = "3185">Example <TT>LatNF_nflat-notsimple (H31E7)</TT></A></H3>
<P>
Here are some more examples with nontrivial coefficient ideals.
<P>
<P>
<P>
<PRE>
&gt; K&lt;u&gt; := QuadraticField(257); // class number 3
&gt; O := Integers(K);
&gt; v1 := Vector([K|1,0,0]);
&gt; v2 := Vector([K|0,u,0]);
&gt; p2 := Factorization(2*O)[1][1]; // nonprincipal
&gt; Js := [(2*O)/p2,2*O];
&gt; L := NumberFieldLattice([v1,v2] : Ideals:=Js);
&gt; IsFree(L);
false
&gt; DS := DirectSum([L,L,L]); // Steinitz class is principal
&gt; S := SimpleLattice(DS);
&gt; DS eq S;
true
</PRE>
<P>
The automorphism group in the presence of nontrivial coefficient ideals
need not have integral transforms on the pseudobasis.
<P>
<P>
<P>
<PRE>
&gt; K&lt;u&gt; := QuadraticField(5);
&gt; O := Integers(K);
&gt; Vs := [Vector([K|2,0,1]),Vector([K|0,1,2])];
&gt; Js := [1*O,2*O];
&gt; G := DiagonalMatrix([K|4,1]);
&gt; L := NumberFieldLattice(Vs : Gram:=G,Ideals:=Js);
&gt; AutomorphismGroup(L);
MatrixGroup(2, K) of order 2^3
Generators:
    [ 1  0]    [-1  0]    [ 0   -2]
    [ 0 -1]    [ 0 -1]    [-1/2  0]
&gt; A := AutomorphismGroup(L : NaturalAction);
&gt; L*(&amp;*Generators(A)) eq L;
true
</PRE>
<P>
The enumeration code with <TT>Sphere</TT> is also consistent with
coefficient ideals, and the vectors are always returned in the ambient.
<P>
<P>
<P>
<PRE>
&gt; Sphere(L,4);
{ (2 0 1), (-2  0 -1), (0 2 4), ( 0 -2 -4) }
&gt; Sphere(L,8);
{ ( 2 -2 -3), (-2  2  3), (2 2 5), (-2 -2 -5) }
&gt; Sphere(L,20 : Negatives:=false);
{ (2*u 0 u), ( 4 -2 -2), ( 2 -4 -7), (2 4 9), (4 2 6), (0 2*u 4*u) }
&gt; [Coordinates(v) : v in $1]; // coordinates
[ (-u 0), ( 2 -2), ( 1 -4), (1 4), (2 2), (0 -2*u) ]
</PRE>
<P>
The <TT>IsIsometric</TT> functionality also works with coefficient ideals.
This is demonstrated by first intrinsically transforming a lattice L
by a unimodular transform matrix T to get a lattice N, and then finding 
the isometry between L and N on the ambient space.
<P>
<P>
<P>
<PRE>
&gt; K&lt;u&gt; := QuadraticField(257);
&gt; O := Integers(K);
&gt; v1 := Vector([K|1,0,0]);
&gt; v2 := Vector([K|0,u,0]);
&gt; I := [1*O,2*O];
&gt; G := Matrix(2,2,[K|1,0,0,2]);
&gt; L := NumberFieldLattice([v1,v2] : Gram:=G,Ideals:=I);
&gt; T := Matrix(2,2,[u-1,5,51,u+1]);
&gt; PB :=PseudoBasis(L);
&gt; M := NumberFieldLattice(PB : Gram:=T*G*Transpose(T),Ideals:=I);
&gt; b,U := IsIsometric(T*L,M : NaturalAction); assert b;
&gt; T*L*U^(-1) eq L;
true
</PRE>
<HR>
<H3><A NAME = "3186">Example <TT>LatNF_nflat-maass (H31E8)</TT></A></H3>
<P>
Maass showed <A  HREF = "text322.htm#bib_maass-4dim-lattice">[Maa41]</A>
that there is exactly one even 4-dimensional unimodular lattice
on (Z)[&phi;] where &phi;=(1 + &#8730;5)/2 is the golden ratio.
The size of its automorphism group is 14400.
There are 120 vectors of norm 2.
<P>
<P>
<P>
<PRE>
&gt; K&lt;u&gt; := QuadraticField(5);
&gt; e := (1+u)/2;
&gt; M := Matrix(4,[2,-1,0,1-e, -1,2,-1,e-1, 0,-1,2,-e, 1-e,e-1,-e,2]);
&gt; Determinant(M);
1
&gt; L := NumberFieldLattice(K,4 : Gram:=M);
&gt; Dual(L) eq L; // self-dual, since unimodular
true
&gt; Norm(L); // L is even
Principal Ideal, Generator: 2
&gt; AutomorphismGroup(L);
MatrixGroup(4, K) of order 2^6 * 3^2 * 5^2
&gt; #Sphere(L,2);
120
</PRE>
<P>
It was shown by Costello and Hsia <A  HREF = "text322.htm#bib_CostelloHsia">[CH87]</A>
that there is a unique rootless even 12-dimensional unimodular
lattice on (Z)[&phi;],
with automorphism group of size 72576000. This is associated to
a (Z)[&phi;]-structure on the Leech lattice.
<P>
To construct this lattice, it is first convenient to transform to
coordinates where the hyperbolic decomposition over the prime ideal (2)
is more perspicacious, so that the norms are multiples of 4,
and the inner products are even except for the first/third and second/fourth
vector pairs (this can be done by selecting some vectors of norm 4 that
generate the lattice, and then performing suitable transformations).
Moving then to the triple sum of the resulting lattice, an index 64 sublattice 
corresponding to the hyperbolic decomposition is found.  Rescaling
the inner product yields the desired unimodular lattice.
<P>
<P>
<P>
<PRE>
&gt; H := Matrix(K,4, [     20,   -20*u+8,   u-6,       0,
&gt;                   -20*u+8, -16*u+104, 6*u-8, (1-u)/2,
&gt;                       u-6,     6*u-8,     4,       0,
&gt;                         0,   (1-u)/2,     0,       4]);
&gt; LL := NumberFieldLattice(K,4 : Gram:=H); // det(H) is e^4
&gt; assert IsIsometric(L,LL);
&gt; D := DirectSum([LL,LL,LL]);
&gt; DIAG := [D.1+D.5+D.9, D.2+D.6+D.10];
&gt; ORTHO := [D.3-D.7, D.3-D.11, D.4-D.8, D.4-D.12];
&gt; assert &amp;and[InnerProduct(a,b) eq 0 : a in DIAG, b in ORTHO];
&gt; SUB := (2*D) + sub&lt;D | DIAG cat ORTHO&gt;;
&gt; I6 := IdentityMatrix(K,6);
&gt; T := DiagonalJoin(I6/e,I6); // make determinant be 1
&gt; N := T*InnerProductScaling(SUB,1/2);
&gt; Determinant(N);
1
&gt; Dual(N) eq N; // again self-dual
true
&gt; Norm(N); // and even
Principal Ideal, Generator: 2
&gt; time #AutomorphismGroup(N);
72576000
Time: 1.150
&gt; #Sphere(N,2); // rootless
0
&gt; time #Sphere(N,4 : Negatives:=false);
18900
Time: 6.370
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text328.htm">[Next]</A><A  HREF = "text326.htm">[Prev]</A> <A  HREF = "text328.htm">[Right]</A> <A  HREF = "text326.htm">[Left]</A> <A  HREF = "text323.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>