<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Representation Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text844.htm">[Next]</A><A  HREF = "text842.htm">[Prev]</A> <A  HREF = "text844.htm">[Right]</A> <A  HREF = "text842.htm">[Left]</A> <A  HREF = "text831.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "9732">Representation Theory</A></H3>

<P>
<P>
<P>
This section describes some functions for creating R[G]-modules for a
polycyclic group G, which are unique for this category or have special
properties when called for polycyclic groups. For a complete description of
the functions available for creating and working with R[G]-modules we
refer to Chapter <A  HREF = "text1023.htm#11419">MODULES OVER AN ALGEBRA</A>.
<P>
<P>
Note that the function <A  HREF = "text1031.htm#RepThy:GModuleAction">GModuleAction</A> can be used to extract
the matrix representation associated to an R[G]-module.


<H5><A NAME = "9733"></A><A NAME = "GrpGPC:EFAModuleMaps">EFAModuleMaps</A>(G) : GrpGPC -&gt; [ModGrp]</H5>
<BLOCKQUOTE>
Every polycyclic group G has a normal series
G = N_1 &gt; N_2 &gt; ... &gt; N_{r+1} = 1,
such that every quotient M<sub>i</sub> := N<sub>i</sub> / N<sub>i + 1</sub>
is either free abelian or p-elementary abelian for some
prime p. The action of G by conjugation induces a Z[G]-module structure
on M<sub>i</sub> if M<sub>i</sub> is free abelian and an GF(p)[G]-module structure if M<sub>i</sub>
is p-elementary abelian.
<P>
<P>
This function returns a sequence [f<sub>1</sub>, ..., f<sub>r</sub>], where
f<sub>i</sub> : N<sub>i</sub> -&gt; M<sub>i</sub> is the natural epimorphism onto the additive group
of an R<sub>i</sub>[G]-module M<sub>i</sub> (R<sub>i</sub>&isin;{GF(p), Z}), constructed as above.
<P>
<P>
The functions <TT>EFAModuleMaps</TT> and <A  HREF = "text843.htm#GrpGPC:EFAModules">EFAModules</A>
use the normal series returned by the function <A  HREF = "text841.htm#GrpGPC:EFASeries">EFASeries</A>.
<P>
<P>
Note that the kernels of the epimorphisms f<sub>i</sub> can be computed and hence
it is possible to form preimages of submodules of M<sub>i</sub>, which are normal
subgroups of G contained in N<sub>i</sub> and containing N<sub>i + 1</sub>.
</BLOCKQUOTE>
<H5><A NAME = "9734"></A><A NAME = "GrpGPC:EFAModules">EFAModules</A>(G) : GrpGPC -&gt; [ModGrp]</H5>
<BLOCKQUOTE>
Every polycyclic group G has a normal series
G = N_1 &gt; N_2 &gt; ... &gt; N_{r+1} = 1,
such that every quotient M<sub>i</sub> := N<sub>i</sub> / N<sub>i + 1</sub>
is either free abelian or p-elementary abelian for some
prime p. The action of G by conjugation induces a Z[G]-module structure
on M<sub>i</sub> if M<sub>i</sub> is free abelian and an GF(p)[G]-module structure if M<sub>i</sub>
is p-elementary abelian.
<P>
<P>
This function returns a sequence [M<sub>1</sub>, ..., M<sub>r</sub>] of R<sub>i</sub>[G]-modules
(where R<sub>i</sub>&isin;{GF(p), Z}), constructed as above.
<P>
<P>
The functions <A  HREF = "text843.htm#GrpGPC:EFAModuleMaps">EFAModuleMaps</A> and <TT>EFAModules</TT>
use the normal series returned by the function <A  HREF = "text841.htm#GrpGPC:EFASeries">EFASeries</A>.
</BLOCKQUOTE>
<H5><A NAME = "9735">GModule(G, A, p) : GrpGPC, GrpGPC, RngIntElt -&gt; ModGrp, Map</A></H5>
<H5>GModule(G, A) : GrpGPC, GrpGPC -&gt; ModGrp, Map</H5>
<BLOCKQUOTE>
Let A be a normal subgroup of the polycyclic group G. If p = 0, the
function returns the Z[G]-module corresponding to the conjugation action
of G on the maximal free abelian quotient of A.  If p is a prime, it
returns the GF(p)[G]-module corresponding to the conjugation action of
G on the maximal p-elementary abelian quotient of A. The epimorphism
&pi;: A -&gt; M onto the additive group of the constructed module M
is returned as second return value. Note that the kernel of &pi; can be
computed and hence it is possible to form preimages of submodules of M,
which are normal subgroups of G contained in A.
<P>
<P>
If the maximal abelian quotient A/A<sup>prime</sup> of A is either free abelian or
p-elementary abelian for some prime p, p can be omitted in the function
call.
<P>
<P>
Note that it is the user's responsibility to ensure that A is in fact normal
in G.
</BLOCKQUOTE>
<H5><A NAME = "9736">GModule(G, A, B, p) : GrpGPC, GrpGPC, GrpGPC, RngIntElt -&gt; ModGrp, Map</A></H5>
<H5>GModule(G, A, B) : GrpGPC, GrpGPC, GrpGPC -&gt; ModGrp, Map</H5>
<BLOCKQUOTE>
Let A and B &lt; A be normal subgroups of the polycyclic group G.
If p = 0, the function returns the Z[G]-module corresponding to the
conjugation action of G on the maximal free abelian quotient of A/B.
If p is a prime, it returns the GF(p)[G]-module corresponding to the
conjugation action of G on the maximal p-elementary abelian quotient of 
A/B. The epimorphism &pi;: A -&gt; M onto the additive group of the
constructed module M is returned as second return value. Note that the
kernel of &pi; can be computed and hence it is possible to form preimages
of submodules of M, which are normal subgroups of G contained in A
and containing B.
<P>
<P>
If the maximal abelian quotient of A/B is either free abelian or
p-elementary abelian for some prime p, p can be omitted in the
function call.
<P>
<P>
Note that it is the user's responsibility to ensure that A and B are in
fact normal in G.
</BLOCKQUOTE>
<H5><A NAME = "9737"></A><A NAME = "GrpGPC:GModulePrimes">GModulePrimes</A>(G, A) : GrpGPC, GrpGPC -&gt; SetMulti</H5>
<BLOCKQUOTE>
Let G be a polycyclic group and A a normal subgroup of G. Given any
prime p, the maximal p-elementary abelian quotient
of A can be viewed as an GF(p)[G]-module M<sub>p</sub>. The maximal free abelian
quotient of A can be viewed as a (Z)[G]-module M<sub>0</sub>. This function
determines those primes p for which the module M<sub>p</sub> is non-trivial
(i.e. not zero-dimensional) and the dimensions of the corresponding modules M<sub>p</sub>.
The return value is a multiset S. If 0&notin;S, the maximal abelian
quotient of A is finite and the multiplicity of p is the dimension of 
M<sub>p</sub>. If S contains 0 with multiplicity m, the maximal abelian quotient
of A contains m copies of Z. In this case, the rank of M<sub>0</sub> is m
and M<sub>p</sub> is non-trivial for every prime p and its rank is the sum of m
and the multiplicity of p in S.
</BLOCKQUOTE>
<H5><A NAME = "9738">GModulePrimes(G, A, B) : GrpGPC, GrpGPC, GrpGPC -&gt; SetMulti</A></H5>
<BLOCKQUOTE>
Let G be a polycyclic group, A a normal subgroup of G and B a normal
subgroup of G contained in A. Given any
prime p, the maximal p-elementary abelian quotient
of A/B can be viewed as an GF(p)[G]-module M<sub>p</sub>. The maximal free abelian
quotient of A/B can be viewed as a (Z)[G]-module M<sub>0</sub>. This function
determines those primes p for which the module M<sub>p</sub> is non-trivial
(i.e. not zero-dimensional) and the dimensions of the corresponding modules M<sub>p</sub>.
The return value is a multiset S. If 0&notin;S, the maximal abelian
quotient of A/B is finite and the multiplicity of p is the dimension of 
M<sub>p</sub>. If S contains 0 with multiplicity m, the maximal abelian quotient
of A/B contains m copies of Z. In this case, the rank of M<sub>0</sub> is m
and M<sub>p</sub> is non-trivial for every prime p and its rank is the sum of m
and the multiplicity of p in S.
</BLOCKQUOTE>
<H5><A NAME = "9739"></A><A NAME = "GrpGPC:SemisimpleEFAModuleMaps">SemisimpleEFAModuleMaps</A>(G) : GrpGPC -&gt; [ModGrp]</H5>
<BLOCKQUOTE>
Every polycyclic group G has a normal series
G = N_1 &gt; N_2 &gt; ... &gt; N_{r+1} = 1,
such that every quotient M<sub>i</sub> := N<sub>i</sub> / N<sub>i + 1</sub> is either free abelian and
semisimple as a Q[G]-module or p-elementary abelian and semisimple as
an GF(p)[G]-module for some prime p.
<P>
<P>
This function returns a sequence [f<sub>1</sub>, ..., f<sub>r</sub>], where
f<sub>i</sub> : N<sub>i</sub> -&gt; M<sub>i</sub> is the natural epimorphism onto the additive group
of an R<sub>i</sub>[G]-module M<sub>i</sub> (R<sub>i</sub>&isin;{GF(p), Z}), constructed as above.
<P>
<P>
The functions <A  HREF = "text843.htm#GrpGPC:SemisimpleEFAModules">SemisimpleEFAModules</A> and
<TT>SemisimpleEFAModuleMaps</TT> use the normal series returned by
the function <A  HREF = "text841.htm#GrpGPC:SemisimpleEFASeries">SemisimpleEFASeries</A>. Moreover, this normal series
is a refinement of the normal series returned by the function
<A  HREF = "text841.htm#GrpGPC:EFASeries">EFASeries</A>.
<P>
<P>
Note that the kernels of the epimorphisms f<sub>i</sub> can be computed and hence
it is possible to form preimages of submodules of M<sub>i</sub>, which are normal
subgroups of G contained in N<sub>i</sub> and containing N<sub>i + 1</sub>.
</BLOCKQUOTE>
<H5><A NAME = "9740"></A><A NAME = "GrpGPC:SemisimpleEFAModules">SemisimpleEFAModules</A>(G) : GrpGPC -&gt; [ModGrp]</H5>
<BLOCKQUOTE>
Every polycyclic group G has a normal series
G = N_1 &gt; N_2 &gt; ... &gt; N_{r+1} = 1,
such that every quotient M<sub>i</sub> := N<sub>i</sub> / N<sub>i + 1</sub> is either free abelian and
semisimple as a Q[G]-module or p-elementary abelian and semisimple as
an GF(p)[G]-module for some prime p.
<P>
<P>
This function returns a sequence [M<sub>1</sub>, ..., M<sub>r</sub>] of R<sub>i</sub>[G]-modules
(where R<sub>i</sub>&isin;{GF(p), Z}), constructed as above.
<P>
<P>
The functions <TT>SemisimpleEFAModules</TT> and
<A  HREF = "text843.htm#GrpGPC:SemisimpleEFAModuleMaps">SemisimpleEFAModuleMaps</A> use the normal series returned by
the function <A  HREF = "text841.htm#GrpGPC:SemisimpleEFASeries">SemisimpleEFASeries</A>. Moreover, this normal series
is a refinement of the normal series returned by the function
<A  HREF = "text841.htm#GrpGPC:EFASeries">EFASeries</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9741">Example <TT>GrpGPC_RepresentationTheory (H77E13)</TT></A></H3>
Consider the group G defined by the polycyclic presentation
<PRE>
&lt; a,b,c,d,e | c^6, e^3, d^c=de, e^c=e^2, b^a=b^-1, b^(a^-1)=b^-1,
              c^b=ce, c^(b^-1)=ce, d^b=d^-1, d^(b^-1)=d^-1,
              e^b=e^2, e^(b^-1)=e^2 &gt;.
</PRE>(Trivial commutator relations have been omitted.)
<P>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; GrpGPC : F | c^6 = F!1, e^3 = F!1,
&gt;                                   d^c=d*e, e^c=e^2,
&gt;                                   b^a=b^-1,
&gt;                                   b^(a^-1)=b^-1,
&gt;                                   c^b=c*e,
&gt;                                   c^(b^-1)=c*e,
&gt;                                   d^b=d^-1,
&gt;                                   d^(b^-1)=d^-1,
&gt;                                   e^b=e^2,
&gt;                                   e^(b^-1)=e^2 &gt;;
</PRE>
The subgroup H of G generated by c, d, e is normal in G.
<P>
<P>
<PRE>
&gt; H := sub&lt; G | c,d,e &gt;;
&gt; IsNormal(G, H);
true
</PRE>
We determine the primes such that the action of G on H yields non-trivial
modules.
<P>
<P>
<PRE>
&gt; GModulePrimes(G, H);
{* 0, 2, 3 *}
</PRE>
We construct the (F)<sub>3</sub>[G]-module M given by the action of G on the
maximal 3-elementary abelian quotient of H and the natural epimorphism
&pi; from H onto the additive group of M.
<P>
<P>
<PRE>
&gt; M, pi := GModule(G, H, 3);
&gt; M;
GModule M of dimension 2 over GF(3)
</PRE>
Using the function <A  HREF = "text1025.htm#RepThy:Submodules">Submodules</A>, we obtain the submodules of
M. Their preimages under &pi; are precisely the normal subgroups of G
which are contained in H and contain (ker)(&pi;).
<P>
<P>
<PRE>
&gt; submod := Submodules(M);
&gt; nsgs := [ m @@ pi : m in submod ];
&gt; [ PCGenerators(s, G) : s in nsgs ];
[
    {@ c^3, d^3, e @},
    {@ c, d^3, e @},
    {@ c^3, d, e @},
    {@ c, d, e @}
]
</PRE>
<HR>
<H3><A NAME = "9742">Example <TT>GrpGPC_gmoduleprimes (H77E14)</TT></A></H3>
Consider the group defined by the polycyclic presentation
 &lt; a, b, c, d, e |  a<sup>5</sup>, b<sup>5</sup>, c<sup>6</sup>, d<sup>5</sup>, e<sup>3</sup>, b<sup>a</sup> = bd&gt;.
<P>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; GrpGPC : F | 
&gt;                       a^5, b^5, c^6, d^5, e^3, b^a = b*d &gt;;
</PRE>
Obviously the subgroup of G generated by b, c, d, e is normal in G.
<P>
<P>
<PRE>
&gt; H := sub&lt; G | b,c,d,e &gt;;
&gt; IsNormal(G, H);
true
</PRE>
We use the function <A  HREF = "text843.htm#GrpGPC:GModulePrimes">GModulePrimes</A> to determine the set of
primes p for which the action of G on the maximal p-elementary abelian
quotient of H induces a nontrivial GF(p)[G]-module.
<P>
<P>
<PRE>
&gt; P := GModulePrimes(G, H);
&gt; 0 in P;
false
</PRE>
0 is not contained in P, i.e. the maximal free abelian quotient of H is
trivial. Hence, there are only finitely many primes, satisfying the condition
above.
<P>
<P>
We loop over the distinct elements of P and for each element p we construct
the induced GF(p)[G]-module, print its dimension and check whether it is
decomposable. Note that the dimension of the module for p must be equal to
the multiplicity of p in P.
<P>
<P>
<PRE>
&gt; for p in MultisetToSet(P) do
&gt;    M := GModule(G, H, p);
&gt;    dim := Dimension(M);
&gt;    decomp := IsDecomposable(M);
&gt;
&gt;    assert dim eq Multiplicity(P, p);
&gt;
&gt;    print "prime", p, ": module of dimension", dim;
&gt;    if decomp then
&gt;       print "  has a nontrivial decomposition";
&gt;     else
&gt;       print "  is indecomposable";
&gt;    end if;
&gt; end for;
prime 2 : module of dimension 1
  is indecomposable
prime 3 : module of dimension 2
  has a nontrivial decomposition
prime 5 : module of dimension 2
  is indecomposable
</PRE>
<HR>
<H3><A NAME = "9743">Example <TT>GrpGPC_FittingSubgroup (H77E15)</TT></A></H3>
The Fitting subgroup of a polycyclic group G can be characterised as the
intersection of the centralisers in G of the semisimple G-modules defined
by the action of G on the factors of a semisimple EFA-series of G. The
centraliser in G of a G-module is just the kernel of the action map.
<P>
We illustrate this with the group G defined in the example above.
<P>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; GrpGPC : F | c^6 = F!1, e^3 = F!1,
&gt;                                   b^a = b * d,
&gt;                                   b^(a^-1) = b * d^-1 &gt;;
</PRE>
We first construct the G-modules defined
by the action of G on the factors of a semisimple EFA-series of G.
<P>
<P>
<PRE>
&gt; modules := SemisimpleEFAModules(G);
&gt; modules;
[
    GModule of dimension 2 over Integer Ring,
    GModule of dimension 1 over Integer Ring,
    GModule of dimension 1 over GF(2),
    GModule of dimension 2 over GF(3)
]
</PRE>
Now, we compute the intersection of the kernels of the module action maps,
which can be obtained using the function <A  HREF = "text1031.htm#RepThy:GModuleAction">GModuleAction</A>.
<P>
<P>
<PRE>
&gt; S := G;
&gt; for m in modules do
&gt;    S meet:= Kernel(GModuleAction(m));
&gt; end for;
</PRE>
Finally, we compare the result with the Fitting subgroup of G, returned by
the Magma function <A  HREF = "text841.htm#GrpGPC:FittingSubgroup">FittingSubgroup</A>.
<P>
<P>
<PRE>
&gt; S eq FittingSubgroup(G);
true
</PRE>
<HR>
<H3><A NAME = "9744">Example <TT>GrpGPC_ModuleMaps (H77E16)</TT></A></H3>
The functions <A  HREF = "text843.htm#GrpGPC:EFAModuleMaps">EFAModuleMaps</A> and
<A  HREF = "text843.htm#GrpGPC:SemisimpleEFAModuleMaps">SemisimpleEFAModuleMaps</A> are useful whenever it is desired
to refine an EFA-series or a semisimple EFA-series by computing the subgroups
corresponding to submodules of the G-modules given by the factors of
the series. Consider again the group defined above.
<P>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; GrpGPC : F | c^6 = F!1, e^3 = F!1,
&gt;                                   b^a = b * d,
&gt;                                   b^(a^-1) = b * d^-1 &gt;;
</PRE>
We extract the map f from G (the first group in any EFA-series of G)
onto the module given by the first factor of an EFA-series of G.
<P>
<P>
<PRE>
&gt; f := EFAModuleMaps(G)[1];
&gt; f;
Mapping from: GrpGPC: G to GModule of dimension 2 over Integer 
Ring
</PRE>
The module itself can be accessed as the codomain of f.
<P>
<P>
<PRE>
&gt; M := Codomain(f);
&gt; M;
GModule M of dimension 2 over Integer Ring
</PRE>
Spinning up random elements, we try to construct a submodule S of
M.
<P>
<P>
<PRE>
&gt; repeat
&gt;    S := sub&lt;M|[Random(-1, 1): i in [1 .. Dimension(M)]]&gt;;
&gt;    until Dimension(S) gt 0 and S ne M;
&gt; S;
GModule S of dimension 1 over Integer Ring
</PRE>
The preimage N of S under f is a normal subgroup of G, which lies
between the first and the second subgroup of the original EFA-series for G.
<P>
<P>
<PRE>
&gt; N := S @@ f;
&gt; PCGenerators(N, G);
{@ a^2 * b^4, c, d, e @}
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text844.htm">[Next]</A><A  HREF = "text842.htm">[Prev]</A> <A  HREF = "text844.htm">[Right]</A> <A  HREF = "text842.htm">[Left]</A> <A  HREF = "text831.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>