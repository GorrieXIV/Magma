<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1529.htm">[Next]</A><A  HREF = "text1527.htm">[Prev]</A> <A  HREF = "text1529.htm">[Right]</A> <A  HREF = "text1527.htm">[Left]</A> <A  HREF = "text1526.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17302">Creation Functions</A></H3>

<P>
<P>
Several different models for modular curves are available.  The possible 
model types are "Atkin", "Canonical", and "Classical", each giving 
affine models defined by the modular polynomial databases of the same
names.  
For more details on these polynomials see Section <A  HREF = "text1530.htm#17314">Modular Polynomial  Databases</A>
on modular polynomials and databases.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1528.htm#17303">Creation of a Modular Curve</A>
<LI> <A  HREF = "text1528.htm#17306">Creation of Points</A>
</UL>
<H4><A NAME = "17303">Creation of a Modular Curve</A></H4>



<H5><A NAME = "17304">ModularCurve(X,t,N) : Sch, MonStgElt, RngIntElt -&gt; CrvMod</A></H5>
<BLOCKQUOTE>
Returns a model of the modular curve X<sub>0</sub>(N), in an affine plane 
specified by X.  The string t must be one of "Atkin", 
"Canonical", or "Classical", with N a level in the corresponding 
modular curve database.
</BLOCKQUOTE>
<H5><A NAME = "17305">ModularCurve(D, N) : DB, RngIntElt -&gt; CrvMod</A></H5>
<BLOCKQUOTE>
Returns an affine model of the modular curve X<sub>0</sub>(N) of level N from 
a database D of modular curves.
</BLOCKQUOTE>
<H4><A NAME = "17306">Creation of Points</A></H4>

<P>
<P>
Points on modular curves can be created in the same way as points on
curves or schemes in general.  In addition, there exist several specific 
constructors, defined in terms of the moduli structure, which take a 
parameterized elliptic curve as an argument.


<H5><A NAME = "17307">ModuliPoints(X,E) : CrvMod, CrvEll -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Given a modular curve X = X<sub>0</sub>(N) and an elliptic curve E, with 
compatible base rings, returns the sequence of points over the base 
field of E, corresponding to E with additional level structure.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17308">Example <TT>CrvMod_Moduli points (H134E1)</TT></A></H3>
Below we give an example of the use of the moduli interpretation of 
modular curves in order to construct the corresponding subgroup scheme 
structures defined over a finite field.
<P>
<P>
<PRE>
&gt; FF := FiniteField(NextPrime(10^6));
&gt; A2 := AffineSpace(FF,2);
&gt; X0 := ModularCurve(A2,"Canonical",17);
&gt; E := EllipticCurve([FF|1,23]);
&gt; mp := ModuliPoints(X0,E); mp;
[ (259805, 350390), (380571, 350390) ]
</PRE>
We will see later that it is possible to construct the structure of an 
elliptic curve parameterized by the corresponding moduli points.
<P>
<P>
<PRE>
&gt; P, Q := Explode(mp);
&gt; SubgroupScheme(E,P);
Subgroup of E defined by x^8 + 377217*x^7 + 190510*x^6 + 872850*x^5 
  + 816054*x^4 + 457629*x^3 + 64955*x^2 + 361795*x + 460146
&gt; SubgroupScheme(E,Q);
Subgroup of E defined by x^8 + 796070*x^7 + 308587*x^6 + 62023*x^5 
  + 976430*x^4 + 380273*x^3 + 200328*x^2 + 892738*x + 536749
</PRE>
In this example we see that the prime 17 splits in the endomorphism 
ring of E, so we have exactly two parameterized isogenies defined over 
the base field of E.
<HR>
<PRE></PRE> <A  HREF = "text1529.htm">[Next]</A><A  HREF = "text1527.htm">[Prev]</A> <A  HREF = "text1529.htm">[Right]</A> <A  HREF = "text1527.htm">[Left]</A> <A  HREF = "text1526.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>