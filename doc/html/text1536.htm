<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Modular Curves of Given Level and Genus</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1525.htm">[Next]</A><A  HREF = "text1535.htm">[Prev]</A> <A  HREF = "text1525.htm">[Right]</A> <A  HREF = "text1535.htm">[Left]</A> <A  HREF = "text1526.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17341">Modular Curves of Given Level and Genus</A></H3>

<P>
<P>
<P>
The intrinsics described in this section are designed to construct curves C over 
<B>Q</B> of genus at least 2 which are images of X<sub>1</sub>(N) (or X<sub>0</sub>(N)) under a 
morphism &pi;: X<sub>1</sub>(N) -&gt; C defined over <B>Q</B>.  Such curves will be
referred to as modular curves. The code uses some of the ideas and methods from the
papers <A  HREF = "text1525.htm#bib_GJG03">[GJG03]</A>, <A  HREF = "text1525.htm#bib_BGJGP05">[BGJGP05]</A> and <A  HREF = "text1525.htm#bib_GJO10">[GJO10]</A>.
<P>
The morphism &pi; induces an isogeny &pi;<sup> * </sup> from the Jacobian of C, Jac(C) onto a
<B>Q</B>-rational abelian subvariety B of J<sub>1</sub>(N) (or J<sub>0</sub>(N)), i.e. a 
<B>Q</B>-rational modular abelian variety of dimension g, the genus of C. The 
space of holomorphic differentials of Jac(C) identified with those of C
pull back under &pi;<sup> * </sup> to the holomorphic differentials of B which can be
identified with the space of weight 2 cusp forms associated to B.
<P>
If f<sub>1</sub>, ..., f<sub>g</sub> is a <B>Q</B>-basis of this space, then these forms will satisfy
the canonical relations for some canonical embedding of C in the non-hyperelliptic
case. Conversely, if a basis of the space of cusp forms for a <B>Q</B>-rational modular
abelian variety B of dimension g satisfies the polynomial relations defining
a canonical curve C of genus g, then C is a modular curve, but the pullback
of the space of holomorphic differentials under the obvious map
&pi;: z |-&gt; [f<sub>1</sub>(z):f<sub>2</sub>(z): ... : f<sub>g</sub>(z)]
from X<sub>1</sub>(N) to C may NOT give the space of differentials &lt; f<sub>1</sub>, ..., f<sub>g</sub> &gt;
and Jac(C) may be isogenous to a different modular abelian subvariety of
J<sub>1</sub>(N) to B.
<P>
In the hyperelliptic case, criteria for the pullback of the differentials of
the curve C to give precisely the space of forms of a particular modular
abelian variety B are given in <A  HREF = "text1525.htm#bib_GJG03">[GJG03]</A> and <A  HREF = "text1525.htm#bib_BGJGP05">[BGJGP05]</A>, provided that
B lies in the new part of J<sub>1</sub>(N). In the genus
3 non-hyperelliptic case, a simple explicit criterion for Jac(C) to
pull back to B is given in <A  HREF = "text1525.htm#bib_GJO10">[GJO10]</A>.
<P>
Modular curves C such that the pullback &pi;<sup> * </sup>(Jac(C)) lies in the <I>new</I>
part of J<sub>1</sub>(N) (or J<sub>0</sub>(N)) are referred to as <I>new</I> modular curves.
<P>
Intrinsics are provided that determine all of the new modular hyperelliptic curves
or all of the new modular genus 3 non-hyperelliptic curves of X<sub>1</sub>(N) (or X<sub>0</sub>(N)) 
for a given level N. There are also intrinsics that determine whether a
given modular abelian subvariety B corresponds to a hyperelliptic or genus
3 non-hyperelliptic curve C and give the equations of C (as a Weierstrass
model or canonical model, respectively) in the affirmative case.
<P>
In future releases it is planned to add intrinsics to deal with non-hyperelliptic 
modular curves of genus greater than 3 and to add more functionality to cover 
non-new cases.


<H5><A NAME = "17342">SetVerbose("ModularCurve", v) : MonStgElt, RngIntElt -&gt;</A></H5>
<BLOCKQUOTE>
Set the printing level for verbose output for the following intrinsics.
Currently the legal values for v are <TT>true</TT>, <TT>false</TT>, 0, 1,
2 (<TT>false</TT> is the same as 0, and <TT>true</TT> is the same as 1).
</BLOCKQUOTE>
<H5><A NAME = "17343">NewModularHyperellipticCurves(N, g) : RngIntElt, RngIntElt -&gt; SeqEnum</A></H5>

<PRE>    check: BoolElt                      Default: <TT>false</TT></PRE>

<PRE>    prec: RngIntElt                     Default: 100</PRE>

<PRE>    gamma: RngIntElt                    Default: 1</PRE>
<BLOCKQUOTE>
For level N, this function returns a list of all hyperelliptic curves of 
genus g &ge;2 which are new modular curves for X<sub>1</sub>(N) if parameter 
<TT>gamma</TT> equals 1 (the default) or X<sub>0</sub>(N), if <TT>gamma</TT> equals 0.
<P>
A hyperelliptic curve is returned as a univariate polynomial f(x) such that
y<sup>2</sup>=f(x) is a Weierstrass equation of the actual curve.
<P>
The parameter <TT>prec</TT> (default 100) is the precision to which modular forms are
expanded in the computations. If parameter <TT>check</TT> (default <TT>false</TT>) is
<TT>true</TT>, the forms are actually computed to a precision slightly in excess of the
precision prec<sub>1</sub> needed to guarantee that polynomial relations on them (of the 
degrees that are used in the computations) vanish if they vanish to precision 
prec<sub>1</sub>.
</BLOCKQUOTE>
<H5><A NAME = "17344">NewModularHyperellipticCurve(B) : [ModSym] -&gt; BoolElt, RngUPol</A></H5>

<PRE>    check: BoolElt                      Default: <TT>false</TT></PRE>

<PRE>    prec: RngIntElt                     Default: 100</PRE>

<PRE>    gamma: RngIntElt                    Default: 1</PRE>
<BLOCKQUOTE>
Given a sequence B of distinct modular abelian subvarieties of J<sub>1</sub>(N)<sup>new</sup>, 
presented as subspaces of modular symbols, this function <TT>true</TT> if the modular 
abelian variety M which is the direct sum of the B corresponds exactly to 
a hyperelliptic curve C as described in the introduction (M is isogenous to 
Jac(C)). If so, a univariate polynomial f(x) is also returned such that 
y<sup>2</sup>=f(x) is a Weierstrass equation for C.
<P>
The parameters <TT>check</TT> and <TT>prec</TT> have the same meaning as in the 
previous intrinsic.  The parameter <TT>gamma</TT> is only relevant if <TT>check</TT> 
is <TT>true</TT>, is 1 by default, and should only be set to 0 if all of the B 
are abelian subvarieties of J<sub>0</sub>(N). It is then used to get sharper bounds 
for the precision required for the q-expansions.
</BLOCKQUOTE>
<H5><A NAME = "17345">NewModularHyperellipticCurve(F) : [RngSerPowElt] -&gt; BoolElt, RngUPol</A></H5>
<BLOCKQUOTE>
This is a variant on the intrinsic directly above where, instead of the sequence 
of modular abelian subvarieties as argument, the sequence of q-expansions of 
the basis of weight 2 forms for the modular abelian subvariety M is given instead.
</BLOCKQUOTE>
<H5><A NAME = "17346">ModularHyperellipticCurve(B) : [ModSym] -&gt; BoolElt, RngUPol</A></H5>

<PRE>    prec: RngIntElt                     Default: 100</PRE>
<BLOCKQUOTE>
Given a sequence B of distinct modular abelian subvarieties of J<sub>1</sub>(N)<sup>new</sup>,
where the direct sum modular abelian variety M that B defines does not have 
to lie in the new part J<sub>1</sub>(N)<sup>new</sup>, the function determines whether the basis 
of the differentials (forms) of M satisfy the correct relations so as to arise 
from a hyperelliptic curve C of genus g. If so, the intrinsic also returns a 
univariate polynomial f(x), such that y<sup>2</sup>=f(x) is a Weierstrass equation
for C. The difference between this and the new case is that, although C 
is a modular curve, it is not guaranteed that Jac(C) is isogenous to M: 
it may be isogenous to a different modular abelian subvariety of J<sub>1</sub>(N).
<P>
The parameter <TT>prec</TT> (default 100) is the precision to which modular forms are
expanded in the computations.
</BLOCKQUOTE>
<H5><A NAME = "17347">ModularHyperellipticCurve(F) : [RngSerPowElt] -&gt; BoolElt, RngUPol</A></H5>
<BLOCKQUOTE>
This is a variant on the intrinsic immediately above where, instead of a sequence
of modular abelian varieties B with direct sum M passed as the argument, a
sequence of q-expansions of the basis of weight 2 cusp forms of such an M is
given instead.
</BLOCKQUOTE>
<H5><A NAME = "17348">NewModularNonHyperellipticCurvesGenus3(N) : RngIntElt -&gt; SeqEnum</A></H5>

<PRE>    check: BoolElt                      Default: <TT>false</TT></PRE>

<PRE>    prec: RngIntElt                     Default: 100</PRE>

<PRE>    gamma: RngIntElt                    Default: 1</PRE>
<BLOCKQUOTE>
Given an integer N, this function returns a list of all non-hyperelliptic 
curves of genus 3 which are new modular curves, for X<sub>1</sub>(N) if the 
parameter <TT>gamma</TT> equals 1 (the default), or for X<sub>0</sub>(N) if <TT>gamma</TT> 
equals 0. 
<P>
The parameter <TT>prec</TT> (default 100) is the precision to which modular forms 
are computed to in the computations. If parameter <TT>check</TT> (default <TT>false</TT>) is
<TT>true</TT>, the forms are actually computed to a little over the precision prec<sub>1</sub> needed
to check that polynomial relations on them (of the degrees that are used in the
computations) are definitely guaranteed to vanish if they vanish to precision prec<sub>1</sub>.
</BLOCKQUOTE>
<H5><A NAME = "17349">NewModularNonHyperellipticCurveGenus3(B) : [ModSym] -&gt; BoolElt, RngMPolElt</A></H5>

<PRE>    check: BoolElt                      Default: <TT>false</TT></PRE>

<PRE>    prec: RngIntElt                     Default: 100</PRE>

<PRE>    gamma: RngIntElt                    Default: 1</PRE>
<BLOCKQUOTE>
Given a sequence B of distinct modular abelian subvarieties of J<sub>1</sub>(N)<sup>new</sup>,
where the direct sum modular abelian variety M that B defines does not have 
to lie in the new part J<sub>1</sub>(N)<sup>new</sup>, the function determines whether the basis 
of the differentials (forms) of M satisfy the correct relations so as to arise 
from a non-hyperelliptic curve C of genus 3. If so, the intrinsic also returns a 
a defining polynomial for the canonical image of C. The parameters <TT>check</TT> 
and <TT>prec</TT> have the same meaning as for the intrinsic 
<TT>NewModularHyperellipticCurves</TT>. The parameter <TT>gamma</TT>, which is only 
relevant if <TT>check</TT> is <TT>true</TT>, and is 1 by default, may be set to 0 if M 
is an abelian subvariety of J<sub>0</sub>(N) when sharper bounds for the required precision 
of q-expansions will be used.  This intrinsic is similar to 
<TT>NewModularHyperellipticCurve(B)</TT>. 
</BLOCKQUOTE>
<H5><A NAME = "17350">NewModularNonHyperellipticCurveGenus3(F) : [RngSerPowElt] -&gt;  BoolElt, RngMPolElt</A></H5>
<BLOCKQUOTE>
This is a variant on the intrinsic <TT>NewModularNonHyperellipticCurveGenus3(B)</TT> 
above where, instead of the sequence of modular abelian varieties B with direct 
sum M passed as the argument, a sequence F of q-expansions of the basis of weight 
2 cusp forms of such an M is given instead.
</BLOCKQUOTE>
<H5><A NAME = "17351">ModularNonHyperellipticCurveGenus3(F) : [RngSerPowElt] -&gt;  BoolElt, RngMPolElt</A></H5>
<BLOCKQUOTE>
This is the same as the intrinsic <TT>NewModularNonHyperellipticCurveGenus3(F)</TT>
immediately preceding except that it is not required that the modular abelian 
variety M which corresponds to F lies in the new part J<sub>1</sub>(N)<sup>new</sup>.  This 
may be used to search for non-new non-hyperelliptic genus 3 curves.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17352">Example <TT>CrvMod_jim_ex_mod_crvs_hyp (H134E7)</TT></A></H3>
We give some examples of the use of these intrinsics.
<P>
The modular curve X<sub>1</sub>(13) is of genus 2, therefore hyperelliptic, and the 
space of modular forms of weight 2 for &Gamma;<sub>1</sub>(13) is generated by an 
unique newform f of nebentypus a Dirichlet character of order 6, such that 
the modular abelian variety attached to f, A<sub>f</sub>, is Q-isogenous to 
J<sub>1</sub>(13):
<P>
<P>
<P>
<PRE>
&gt; chi := DirichletGroup(13,CyclotomicField(6)).1; //order 6 character mod 13
&gt; A13:=Af(chi)[1];
&gt; NewModularHyperellipticCurve([A13]);
true x^6 + 4*x^5 + 6*x^4 + 2*x^3 + x^2 + 2*x + 1
&gt; f13:=qIntegralBasis(A13,100);
&gt; NewModularHyperellipticCurve(f13);
true x^6 + 4*x^5 + 6*x^4 + 2*x^3 + x^2 + 2*x + 1
&gt; SetVerbose("ModularCurve",1);
&gt; NewModularHyperellipticCurve([A13]:check:=true);
Checking ...
          ... bound =113
true x^6 + 4*x^5 + 6*x^4 + 2*x^3 + x^2 + 2*x + 1
</PRE>
<P>
Let us compute all the new modular hyperelliptic curves parameterized by X<sub>0</sub>(80):
<P>
<P>
<P>
<PRE>
&gt; NewModularHyperellipticCurves(80,0: gamma:=0);

     Candidates:=3

     All the curves

1 2 3 

[
    x^5 + 2*x^4 - 26*x^3 - 132*x^2 - 231*x - 142
]
</PRE>
<P>
Finally, we calculate the new modular hyperelliptic curves parameterized by X<sub>1</sub>(80) 
(the default):
<P>
<P>
<P>
<PRE>
&gt; SetVerbose("ModularCurve",0);
&gt; NewModularHyperellipticCurves(80,0);
[
    x^5 + 2*x^4 - 26*x^3 - 132*x^2 - 231*x - 142,
    x^5 - 2*x^4 - 2*x^3 + 20*x^2 - 47*x + 30,
    x^7 - 4*x^6 - 4*x^5 + 39*x^4 - 64*x^3 + 40*x^2 - 8*x,
    x^7 + 2*x^5 + 7*x^4 - 4*x^3 - 20*x^2 - 16*x - 4
]
</PRE>
<HR>
<H3><A NAME = "17353">Example <TT>CrvMod_jim_ex_mod_crvs_jeon (H134E8)</TT></A></H3>
<P>
In this exercise, an interesting example from <A  HREF = "text1525.htm#bib_jeon">[JK07]</A> is presented.
<P>
<P>
<P>
<PRE>
&gt; S:=CuspidalSubspace(ModularSymbolsH(21,[1,8,13,20],2,+1));
&gt; S;
Modular symbols space of level 21, weight 2, and dimension 3 over Rational Field 
(multi-character)
&gt; ModularHyperellipticCurve([S]);
true x^8 - 6*x^6 + 4*x^5 + 11*x^4 - 24*x^3 + 22*x^2 - 8*x + 1
</PRE>
The above curve is the unique hyperelliptic intermediate modular curve 
X<sub>&Delta;</sub>(N) between X<sub>1</sub>(N) and X<sub>0</sub>(N), where &Delta; is a subgroup 
of ((Z)/N(Z))<sup> * </sup>/{&#8723; 1} and X<sub>&Delta;</sub>(N) is the modular 
curve associated to some congruence subgroup of PSL<sub>2</sub>((Z)) attached 
to &Delta;. In fact, the above hyperelliptic curve is the new modular curve 
denoted by C<sup>A</sup>_(21A_({0, 2})) in <A  HREF = "text1525.htm#bib_BGJGP05">[BGJGP05]</A>.
<HR>
<H3><A NAME = "17354">Example <TT>CrvMod_jim_ex_mod_crvs_jeon (H134E9)</TT></A></H3>
<P>
Given a modular abelian subvariety of J<sub>0</sub>(97), we determine whether it 
corresponds to a new modular non-hyperelliptic curve of genus 3 and level 97:
<P>
<P>
<P>
<PRE>
&gt; M:=ModularSymbols(97,2,1);
&gt; NN:=SortDecomposition(NewformDecomposition(NewSubspace(CuspidalSubspace(M))));
&gt; NN;  
[
    Modular symbols space for Gamma_0(97) of weight 2 and dimension 3 over
    Rational Field,
    Modular symbols space for Gamma_0(97) of weight 2 and dimension 4 over
    Rational Field
]
&gt; A97:=NN[1];
&gt; NewModularNonHyperellipticCurveGenus3([A97]);
true -x^2*y^2 + x*y^3 + x^3*z + x*y^2*z - 5*x^2*z^2 + 3*x*y*z^2 - 3*y^2*z^2 + 
  6*x*z^3 - y*z^3 - 2*z^4
</PRE>
<HR>
<H3><A NAME = "17355">Example <TT>CrvMod_jim_ex_mod_crvs_gen3 (H134E10)</TT></A></H3>
<P>
We calculate all of the new modular non-hyperelliptic curves of genus 3 
parameterized by X<sub>1</sub>(20):
<P>
<P>
<P>
<PRE>
&gt; NewModularNonHyperellipticCurvesGenus3(20);
[
    -x^2*y^2 + x*y^3 + x^3*z - 3*x^2*z^2 + 4*x*z^3 - 2*z^4
]
</PRE>
<P>
We now construct an example of a non-new modular non-hyperelliptic curve of 
genus 3:
<P>
<P>
<P>
<PRE>
&gt; S1:=ModularSymbols(178,2,1);  
&gt; N1:=SortDecomposition(NewformDecomposition(NewSubspace(CuspidalSubspace(S1))));    
&gt; A:=N1[3];A;
Modular symbols space for Gamma_0(178) of weight 2 and dimension 2 over
Rational Field
&gt; S2:=ModularSymbols(89,2,1); 
&gt; N2:=SortDecomposition(NewformDecomposition(NewSubspace(CuspidalSubspace(S2))));  
&gt; B:=N2[1];B;
Modular symbols space for Gamma_0(89) of weight 2 and dimension 1 over
Rational Field
&gt; fA:=qIntegralBasis(A,100);
&gt; fB:=qIntegralBasis(B,100); 
&gt; q := Universe(fB).1;
&gt; fB2:=&amp;+[Coefficient(fB[1],k)*q^(2*k) : k in [1..99]];  
&gt; g:=fB[1]+2*fB2;
&gt; ModularNonHyperellipticCurveGenus3([g,fA[1],fA[2]]);
true -x^4 + 2*x^2*y^2 - y^4 + 8*x^2*y*z + 8*y^3*z - 6*x^2*z^2 - 38*y^2*z^2 +
    24*y*z^3 + 7*z^4
&gt;
</PRE>
The above curve is denoted by C<sup>89A</sup><sub>178C</sub> in <A  HREF = "text1525.htm#bib_GJO10">[GJO10]</A>. Its jacobian is 
(Q)-isogenous to A x B.
<PRE></PRE> <A  HREF = "text1525.htm">[Next]</A><A  HREF = "text1535.htm">[Prev]</A> <A  HREF = "text1525.htm">[Right]</A> <A  HREF = "text1535.htm">[Left]</A> <A  HREF = "text1526.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>