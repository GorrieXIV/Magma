<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operations on Root Data</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1093.htm">[Next]</A><A  HREF = "text1091.htm">[Prev]</A> <A  HREF = "text1093.htm">[Right]</A> <A  HREF = "text1091.htm">[Left]</A> <A  HREF = "text1089.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12144">Operations on Root Data</A></H3>



<H5><A NAME = "12145">R1 eq R2 : RootDtm, RootDtm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if, and only if, R<sub>1</sub> and R<sub>2</sub> are identical root data.
</BLOCKQUOTE>
<H5><A NAME = "12146">IsIsomorphic(R1, R2) : RootDtm, RootDtm -&gt; BoolElt, [RngIntElt], Map</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if, and only if, R<sub>1</sub> and R<sub>2</sub> are isomorphic root data.
If <TT>true</TT>, the second value returned is a sequence giving the simple 
root of R<sub>2</sub> corresponding to each simple root of R<sub>1</sub>, and the third 
value returned is an isomorphism R<sub>1</sub>to R<sub>2</sub>.
This function is currently only implemented for semisimple root data.
</BLOCKQUOTE>
<H5><A NAME = "12147">IsCartanEquivalent(R1, R2) : RootDtm, RootDtm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if, and only if, the root data R<sub>1</sub> and R<sub>2</sub> are Cartan equivalent,
i.e. they have isomorphic Dynkin diagrams.  
If <TT>true</TT>, the second value returned is a sequence
giving the simple root of R<sub>2</sub> corresponding to each simple root of R<sub>1</sub>.
</BLOCKQUOTE>
<H5><A NAME = "12148">IsIsogenous(R1, R2) : RootDtm, RootDtm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if, and only if, R<sub>1</sub> and R<sub>2</sub> are 
isogenousroot data.
If <TT>true</TT>, the subsequent values returned are:
a sequence 
giving the simple root of R<sub>2</sub> corresponding to each simple root of R<sub>1</sub>,
the corresponding adjoint root datum R<sub>ad</sub>, the morphisms
R<sub>ad</sub>to R<sub>1</sub> and R<sub>ad</sub>to R2, the corresponding simply connected root 
datum R<sub>sc</sub>, and the morphisms R<sub>1</sub>to R<sub>sc</sub> and R<sub>2</sub>to R<sub>sc</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12149">Example <TT>RootDtm_IsomorphismIsogeny (H103E8)</TT></A></H3>
An example of isogenous root data:
<P>
<P>
<PRE>
&gt; R1 := RootDatum("A3");
&gt; R2 := RootDatum("A3" : Isogeny := "SC");
&gt; R1 eq R2;
false
&gt; IsIsomorphic(R1, R2);
false
&gt; IsCartanEquivalent(R1, R2);
true [ 1, 2, 3 ]
&gt; IsIsogenous(R1, R2);
true [ 1, 2, 3 ]
Adjoint root datum of type A3 
Mapping from: RootDtm: ad to RootDtm: ad
Mapping from: RootDtm: ad to RootDtm: sc
Simply connected root datum of type A3 
Mapping from: RootDtm: ad to RootDtm: sc
Mapping from: RootDtm: sc to RootDtm: sc
</PRE>
An example of distinct isomorphic root data:
<P>
<P>
<PRE>
&gt; C := CartanMatrix("B2");
&gt; R1 := RootDatum(C);
&gt; R2 := RootDatum(Transpose(C));
&gt; R1; R2;
Adjoint root datum of type B2
Adjoint root datum of type C2
&gt; R1 eq R2;
false
&gt; IsIsomorphic(R1, R2);
true [ 2, 1 ]
</PRE>
<HR>
<H5><A NAME = "12150">CartanName(R) : RootStr -&gt; MonStgElt</A></H5>
<BLOCKQUOTE>
The Cartan name of the root datum R (Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A>).
</BLOCKQUOTE>
<H5><A NAME = "12151">TwistedCartanName(R) : RootDtm -&gt; MonStgElt</A></H5>
<BLOCKQUOTE>
The twisted Cartan name of the root datum R. E.g., <TT>"2A_3,2"</TT>.
</BLOCKQUOTE>
<H5><A NAME = "12152">CoxeterDiagram(R) : RootStr -&gt;</A></H5>
<BLOCKQUOTE>
Print the Coxeter diagramof the root datum R
(Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A>).
</BLOCKQUOTE>
<H5><A NAME = "12153">DynkinDiagram(R) : RootStr -&gt;</A></H5>
<BLOCKQUOTE>
Print the Dynkin diagramof the root datum R
(Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A>).
</BLOCKQUOTE>
<H5><A NAME = "12154">CoxeterMatrix(R) : RootStr -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The Coxeter matrix of the root datum R (Section <A  HREF = "text1070.htm#11914">Coxeter Matrices</A>).
</BLOCKQUOTE>
<H5><A NAME = "12155">CoxeterGraph(R) : RootStr -&gt; GrphUnd</A></H5>
<BLOCKQUOTE>
The Coxeter graph of the root datum R (Section <A  HREF = "text1071.htm#11924">Coxeter Graphs</A>).
</BLOCKQUOTE>
<H5><A NAME = "12156">CartanMatrix(R) : RootStr -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The Cartan matrix of the root datum R (Section <A  HREF = "text1072.htm#11931">Cartan Matrices</A>).
</BLOCKQUOTE>
<H5><A NAME = "12157">DynkinDigraph(R) : RootStr -&gt; GrphDir</A></H5>
<BLOCKQUOTE>
The Dynkin digraph of the root datum R
(Section <A  HREF = "text1073.htm#11947">Dynkin Digraphs</A>).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12158">Example <TT>RootDtm_Diagrams (H103E9)</TT></A></H3>
<P>
<P>
<PRE>
&gt; R := RootDatum("F4");
&gt; DynkinDiagram(R);

F4    1 - 2 =&gt;= 3 - 4
&gt; CoxeterDiagram(R);

F4    1 - 2 === 3 - 4
</PRE>
<HR>
<H3><A NAME = "12159">Example <TT>RootDtm_BasicOperations (H103E10)</TT></A></H3>
<P>
<P>
<PRE>
&gt; R := RootDatum("G2");
&gt; RootSpace(R);
Standard Lattice of rank 2 and degree 2
&gt; CorootSpace(R);
Standard Lattice of rank 2 and degree 2
&gt; // Add RootLattice, CorootLattice.
&gt; // and maybe move (Co)RootSpace and (Co)RootLattice 
&gt; // to after introducing them
&gt; SimpleRoots(R);
[1 0]
[0 1]
&gt; SimpleCoroots(R);
[ 2 -3]
[-1  2]
&gt; CartanMatrix(R);
[ 2 -1]
[-3  2]
&gt; Rank(R) eq Dimension(R);
true
</PRE>
<HR>
<H5><A NAME = "12160">GammaAction(R) : RootDtm -&gt; Rec</A></H5>
<BLOCKQUOTE>
The &Gamma;-action of the root datum R. This is a record consisting of four
elements: <TT>gamma</TT> is the Group &Gamma; acting on R,
<TT>perm_ac</TT> is the homomorphism defining the permutation action of &Gamma;
on the set of all roots of R, finally <TT>mats_rt</TT> and <TT>mats_co</TT> are 
sequences of matrices defining the action of &Gamma; on the root and coroot spaces
of R.
</BLOCKQUOTE>
<H5><A NAME = "12161">GammaRootSpace(R) : RootDtm -&gt; GSetEnum, Map</A></H5>
<H5>GammaCorootSpace(R) : RootDtm -&gt; GSetEnum, Map</H5>
<BLOCKQUOTE>
Given a root datum R, create the fixed space of &Gamma; acting 
on the (co)root space V = Q tensor X of R as well as the
embedding in V.
</BLOCKQUOTE>
<H5><A NAME = "12162">GammaOrbitOnRoots(R,r) : RootDtm, RngIntElt -&gt; GSetEnum</A></H5>
<BLOCKQUOTE>
The orbit through the rth root of the &Gamma;-action on the root datum R.
</BLOCKQUOTE>
<H5><A NAME = "12163">GammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]</A></H5>
<H5>PositiveGammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]</H5>
<H5>NegativeGammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]</H5>
<H5>ZeroGammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]</H5>
<BLOCKQUOTE>
The sequence of all (respectively positive, negative and zero) orbits of the &Gamma;-action
on the root datum R (Section <A  HREF = "text1090.htm#12123">Extended Root Data</A>).
</BLOCKQUOTE>
<H5><A NAME = "12164">GammaActionOnSimples(R) : RootDtm -&gt; HomGrp</A></H5>
<BLOCKQUOTE>
The [&Gamma;]-action on the simple (co)roots of the root datum R.
(Section <A  HREF = "text1090.htm#12123">Extended Root Data</A>).
This function was called <TT>GammaActionPi</TT> in the last release.
</BLOCKQUOTE>
<H5><A NAME = "12165">OrbitsOnSimples(R) : RootDtm -&gt; SeqEnum[GSetEnum]</A></H5>
<BLOCKQUOTE>
The sequence of all orbits of the 
[&Gamma;]-action on the simple (co)roots of the root datum R
(Section <A  HREF = "text1090.htm#12123">Extended Root Data</A>).
This function was called <TT>OrbitsPi</TT> in the last release.
</BLOCKQUOTE>
<H5><A NAME = "12166">DistinguishedOrbitsOnSimples(R) : RootDtm -&gt; SeqEnum[GSetEnum]</A></H5>
<BLOCKQUOTE>
The sequence of distinguished orbits of the 
[&Gamma;]-action on the simple (co)roots of the root datum R
(Section <A  HREF = "text1090.htm#12123">Extended Root Data</A>).
This function was called <TT>DistinguishedOrbitsPi</TT> in the last release.
</BLOCKQUOTE>
<H5><A NAME = "12167">BaseRing(R) : RootDtm -&gt; RngInt</A></H5>
<BLOCKQUOTE>
The base ring of the root datum R is the field of rational numbers.
</BLOCKQUOTE>
<H5><A NAME = "12168">Rank(R) : RootStr -&gt; RngIntElt</A></H5>
<H5>AbsoluteRank(R) : RootDtm -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The (absolute) rankof the root datum R, i.e. the
number of simple (co)roots. 
</BLOCKQUOTE>
<H5><A NAME = "12169">RelativeRank(R) : RootDtm -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The relative rankof the root datum R, i.e. the
number of simple (co)roots of the relative root system. 
This is the same as absolute rank for split root data.
</BLOCKQUOTE>
<H5><A NAME = "12170">Dimension(R) : RootStr -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The dimension of the root datum R, i.e. the dimension of the (co)root space.
This is at least as large as the rank, with equality when R is
semisimple. 
</BLOCKQUOTE>
<H5><A NAME = "12171">TwistingDegree(R) : RootDtm -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The twisting degree of the root datum R, i.e. the order of &Gamma; 
divided by the kernel of the [&Gamma;]-action.
</BLOCKQUOTE>
<H5><A NAME = "12172">AnisotropicSubdatum(R) : RootDtm -&gt; RootDtm</A></H5>
<BLOCKQUOTE>
The anisitropic subdatum of the root datum R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12173">Example <TT>RootDtm_OperationsForTwistedRootData (H103E11)</TT></A></H3>
Consider the twisted root datum of type ()<sup>2</sup>A<sub>3, 1</sub> with 
distinguished orbit {2}:
<P>
<P>
<PRE>
&gt; R := RootDatum( "A3" : Twist := &lt; {{2}}, 2 &gt; );
</PRE>
First, print out the action of &Gamma; on the root datum:
<P>
<P>
<PRE>
&gt; GammaAction(R);
rec&lt;recformat&lt;gamma: GrpPerm, perm_ac: HomGrp, mats_rt, mats_co&gt; |
     gamma := Permutation group acting on a set of cardinality 4
     Order = 4 = 2^2
          (1, 2, 3, 4),
     perm_ac := Homomorphism of GrpPerm: $, Degree 4, Order 2^2 into GrpPerm: $,
     Degree 12, Order 2^10 * 3^5 * 5^2 * 7 * 11 induced by
          (1, 2, 3, 4) |--&gt; (1, 3, 7, 9)(2, 4, 6, 5)(8, 10, 12, 11),
     mats_rt := [
          [ 0  0  1]
          [ 1  1  0]
          [-1  0  0]
     ],
     mats_co := [
          [ 0  0  1]
          [ 0  1  0]
          [-1  1  0]
     ]
     &gt;
</PRE>
Compute the orbits of the &Gamma;-action:
<P>
<P>
<PRE>
&gt; PositiveGammaOrbitsOnRoots(R);
[
     GSet{ 2, 4, 5, 6 }
]
&gt; NegativeGammaOrbitsOnRoots(R);
[
     GSet{ 8, 10, 11, 12 }
]
&gt; ZeroGammaOrbitsOnRoots(R);
[
     GSet{ 1, 3, 7, 9 }
]
&gt; &amp;+[ Root(R,r) : r in ZeroGammaOrbitsOnRoots(R)[1] ];
(0 0 0)
</PRE>
Compute the [&Gamma;]-action and its orbits:
<P>
<P>
<PRE>
&gt; GammaActionOnSimples(R);
Homomorphism of GrpPerm: $, Degree 4, Order 2^2 into GrpPerm: $, 
Degree 3, Order 2 * 3 induced by
     (1, 2, 3, 4) |--&gt; (1, 3)
&gt; OrbitsOnSimples(R);
[
     GSet{ 2 },
     GSet{ 1, 3 }
]
&gt; DistinguishedOrbitsOnSimples(R);
[
     GSet{ 2 }
]
</PRE>
Absolute and relative rank and the twisting degree, as well as their 
appearance in the name of the root datum:
<P>
<P>
<PRE>
&gt; AbsoluteRank(R);
3
&gt; RelativeRank(R);
1
&gt; TwistingDegree(R);
2
&gt; R;
R: Twisted adjoint root datum of type 2A3,1
</PRE>
anisotropic subdatum:
<P>
<P>
<PRE>
&gt; A := AnisotropicSubdatum(R); A;
A: Twisted root datum of type 2(A1 A1)2,0
&gt; GammaAction(A)`perm_ac;
Homomorphism of GrpPerm: $, Degree 4, Order 2^2 into GrpPerm: $, 
Degree 4, Order 2^2 induced by
     (1, 2, 3, 4) |--&gt; (1, 2, 3, 4)
</PRE>
<HR>
<H5><A NAME = "12174">CoxeterGroupOrder(R) : RootStr -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The order of the (split) Coxeter group of the root datum R.
</BLOCKQUOTE>
<H5><A NAME = "12175">GroupOfLieTypeOrder(R, q) : RootDtm, RngElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The order of the group of Lie type with split root datum R over
the field of cardinality q.
</BLOCKQUOTE>
<H5><A NAME = "12176">GroupOfLieTypeFactoredOrder(R, q) : RootDtm, RngElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The factored order of the group of Lie type with split root datum R over the field
of order q. 
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12177">Example <TT>RootDtm_GroupOfLieTypeOrder (H103E12)</TT></A></H3>
As well as accepting a specific prime power, these functions also take an
indeterminate so that the generic order formula can be computed.
<P>
<P>
<PRE>
&gt; P&lt;q&gt; := PolynomialRing(Integers());
&gt; R := RootDatum("F4");
&gt; GroupOfLieTypeFactoredOrder(R, q);
[
    &lt;q - 1, 4&gt;,
    &lt;q, 24&gt;,
    &lt;q + 1, 4&gt;,
    &lt;q^2 - q + 1, 2&gt;,
    &lt;q^2 + 1, 2&gt;,
    &lt;q^2 + q + 1, 2&gt;,
    &lt;q^4 - q^2 + 1, 1&gt;,
    &lt;q^4 + 1, 1&gt;
]
&gt; 
&gt; R := RootDatum("B2");
&gt; ord := GroupOfLieTypeOrder(R, q);
&gt; forall{ q : q in [2..200] | not IsPrimePower(q) or
&gt;   Evaluate(ord, q) eq GroupOfLieTypeOrder(R, q) };
true
</PRE>
<HR>
<H5><A NAME = "12178">FundamentalGroup(R) : RootDtm -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
The fundamental group&Lambda;/Z&Phi; of
the root datum R together with the projection 
&Lambda; -&gt; &Lambda;/Z&Phi;. 
See Subsection <A  HREF = "text1090.htm#12122">Isogeny of Split Reduced Root  Data</A>.
</BLOCKQUOTE>
<H5><A NAME = "12179">IsogenyGroup(R) : RootDtm -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
The isogeny groupX/Z&Phi; of the root datum R 
together with the projection X -&gt; X/Z&Phi;.
If R is semisimple,
the injection X/Z&Phi; -&gt; &Lambda;/Z&Phi; is also returned.
See Subsection <A  HREF = "text1090.htm#12122">Isogeny of Split Reduced Root  Data</A>.
</BLOCKQUOTE>
<H5><A NAME = "12180">CoisogenyGroup(R) : RootDtm -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
The coisogeny groupY/Z&Phi;<sup>star</sup> of the root datum
R together with the projection Y -&gt; Y/Z&Phi;<sup>star</sup>.
If R is semisimple, the projection 
Y/Z&Phi;<sup>star</sup> -&gt; &Lambda;/Z&Phi; is also returned.
See Subsection <A  HREF = "text1090.htm#12122">Isogeny of Split Reduced Root  Data</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12181">Example <TT>RootDtm_IsogenyGroups (H103E13)</TT></A></H3>
In the semisimple case, the fundamental group contains the isogeny group, with
quotient isomorphic to the coisogeny group.
<P>
<P>
<PRE>
&gt; R := RootDatum("A5" : Isogeny := 3);
&gt; F := FundamentalGroup(R);
&gt; G := IsogenyGroup(R);
&gt; H := CoisogenyGroup(R);
&gt; #G * #H eq #F;
true
</PRE>
Nonsemisimple root data have infinite isogeny groups.
<P>
<P>
<PRE>
&gt; R := StandardRootDatum("A", 5);
&gt; IsogenyGroup(R);
Abelian Group isomorphic to Z
Defined on 1 generator (free)
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1093.htm">[Next]</A><A  HREF = "text1091.htm">[Prev]</A> <A  HREF = "text1093.htm">[Right]</A> <A  HREF = "text1091.htm">[Left]</A> <A  HREF = "text1089.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>