<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operations on Point Sets</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1433.htm">[Next]</A><A  HREF = "text1431.htm">[Prev]</A> <A  HREF = "text1433.htm">[Right]</A> <A  HREF = "text1431.htm">[Left]</A> <A  HREF = "text1425.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "16168">Operations on Point Sets</A></H3>

<P>
<P>
Each elliptic curve E has associated with it a family of <I>point sets</I>
of E indexed by coefficient rings.  These point sets, not E, are the
objects in which points lie.  If K is the base ring of E and L is
some extension of K then the elements of the point set E(L) comprise
all points lying on E whose coordinates are in L.
<P>
There is a distinguished point set E(K) of E which is called the
<I>base point set</I> of E.  Many intrinsics (such as <TT>#</TT>, or
<TT>TorsionSubgroup</TT>), strictly speaking, only make sense when applied
to point sets; as a convenience, when E is passed to these functions
the behaviour is the same as if the base point set E(K) were passed
instead.  It is important to remember, however, that E and E(K)
are different objects and will not always behave in the same manner.
<P>
The above statements are equally valid if the elliptic curve E is
replaced by some subgroup scheme G.  Moreover, the types of the
point sets of G and E are the same, and similarly for points.
(They may be distinguished by checking the type of the scheme of
which they are point sets.)



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1432.htm#16169">Creation of Point Sets</A>
<LI> <A  HREF = "text1432.htm#16172">Associated Structures</A>
<LI> <A  HREF = "text1432.htm#16177">Predicates on Point Sets</A>
</UL>
<H4><A NAME = "16169">Creation of Point Sets</A></H4>



<H5><A NAME = "16170">E(L) : CrvEll, Rng -&gt; SetPtEll</A></H5>
<H5>PointSet(E, L) : CrvEll, Rng -&gt; SetPtEll</H5>
<BLOCKQUOTE>
Given an elliptic curve E (or a subgroup scheme thereof) and an
extension L of its base ring, this function returns a point set
whose elements are points on E with coefficients in L.
</BLOCKQUOTE>
<H5><A NAME = "16171">E(m) : CrvEll, Map -&gt; SetPtEll</A></H5>
<H5>PointSet(E, m) : CrvEll, Map -&gt; SetPtEll</H5>
<BLOCKQUOTE>
Given an elliptic curve E (or a subgroup scheme thereof) and a map
m from the base ring of E to a field L, this function returns
a point set whose elements are points on E with coefficients in L.
The map is retained to permit coercions between point sets.
</BLOCKQUOTE>
<H4><A NAME = "16172">Associated Structures</A></H4>



<H5><A NAME = "16173">Category(H) : SetPtEll -&gt; Cat</A></H5>
<H5>Type(H) : SetPtEll -&gt; Cat</H5>
<BLOCKQUOTE>
Given a point set H of an elliptic curve,
returns the category <TT>SetPtEll</TT> of point sets of elliptic curves.
</BLOCKQUOTE>
<H5><A NAME = "16174">Scheme(H) : SetPtEll -&gt; CrvEll</A></H5>
<BLOCKQUOTE>
Returns the associated scheme (either an elliptic curve or a subgroup
scheme) of which H is a point set.
</BLOCKQUOTE>
<H5><A NAME = "16175">Curve(H) : SetPtEll -&gt; CrvEll</A></H5>
<BLOCKQUOTE>
Returns the associated elliptic curve that contains <TT>Scheme(H)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "16176">Ring(H) : SetPtEll -&gt; Rng</A></H5>
<BLOCKQUOTE>
Returns the ring that contains the coordinates of points in H.
</BLOCKQUOTE>
<H4><A NAME = "16177">Predicates on Point Sets</A></H4>



<H5><A NAME = "16178">H1 eq H2 : SetPtEll, SetPtEll -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns whether the two point sets are equal.  That is, whether the
point sets have equal coefficient rings and elliptic curves (subgroup
schemes).
</BLOCKQUOTE>
<H5><A NAME = "16179">H1 ne H2 : SetPtEll, SetPtEll -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
The logical negation of <TT>eq</TT>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "16180">Example <TT>CrvEll_PointSets (H126E15)</TT></A></H3>
We create an elliptic curve E over GF(5) and then construct two
associated point sets:
<P>
<P>
<P>
<PRE>
&gt; K := GF(5);
&gt; E := EllipticCurve([K | 1, 0]);
&gt; H := E(K);
&gt; H;
Set of points of E with coordinates in GF(5)
&gt; H2 := E(GF(5, 2));
&gt; H2;
Set of points of E with coordinates in GF(5^2)
</PRE>
We note that although these are point sets of the same curve, they are
not equal because the rings are not equal.
<P>
<P>
<PRE>
&gt; Scheme(H) eq Scheme(H2);
true
&gt; Ring(H) eq Ring(H2);
false
&gt; H eq H2;
false
</PRE>
Similarly, we see that a point set of a subgroup scheme is not the same
object as the point set of the curve because the schemes are different.
<P>
<P>
<PRE>
&gt; P&lt;t&gt; := PolynomialRing(K);
&gt; G := SubgroupScheme(E, t - 2);
&gt; HG := G(K);
&gt; Scheme(HG) eq Scheme(H);
false
&gt; Ring(HG) eq Ring(H);
true
&gt; HG eq H;
false
</PRE>
Also note that the scheme and the parent curve of point sets of G are
different:
<P>
<P>
<PRE>
&gt; Scheme(HG);
Subgroup scheme of E defined by x + 3
&gt; Curve(HG);
Elliptic Curve defined by y^2 = x^3 + x over GF(5)
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1433.htm">[Next]</A><A  HREF = "text1431.htm">[Prev]</A> <A  HREF = "text1433.htm">[Right]</A> <A  HREF = "text1431.htm">[Left]</A> <A  HREF = "text1425.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>