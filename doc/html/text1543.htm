<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Automorphisms</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1544.htm">[Next]</A><A  HREF = "text1542.htm">[Prev]</A> <A  HREF = "text1544.htm">[Right]</A> <A  HREF = "text1542.htm">[Left]</A> <A  HREF = "text1539.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17368">Automorphisms</A></H3>

<P>
<P>
<P>
For modular curves X<sub>0</sub>(N), there is a finite group of automorphisms B<sub>0</sub>(N) which come from matrices
acting on the complex upper half-plane. This group is isomorphic to (Nm)_((SL)<sub>2</sub>((R)))(&Gamma;<sub>0</sub>(N))/&Gamma;<sub>0</sub>(N)
where (Nm)_((SL)<sub>2</sub>((R)))(&Gamma;<sub>0</sub>(N)) is the normaliser of &Gamma;<sub>0</sub>(N) in (SL)<sub>2</sub>((R)). It is generated
by Atkin-Lehner involutions and, if 4 or 9 divides N, a transformation of the form z |-&gt; z + (1/r) for
some 1 &lt; r  | 24 (see <A  HREF = "text1538.htm#bib_atkin_lehner_70">[AL70]</A> and also <A  HREF = "text1538.htm#bib_fbars08">[Bar08]</A> for the correct structure in all cases).
We denote the latter
transformations by S<sub>r</sub> and write w<sub>d</sub> for the d-th Atkin-Lehner involution (d|N, (d, N/d)=1). These
transformations have a natural modular interpretation.
<P>
A famous result of Kenku and Momose <A  HREF = "text1538.htm#bib_KM88">[KM88]</A>, completed by Elkies for N=63 <A  HREF = "text1538.htm#bib_Elk90">[Elk90]</A>, says that B<sub>0</sub>(N) gives
the <I>full</I> group of algebraic automorphisms of X<sub>0</sub>(N) (in characteristic zero) when the genus of X<sub>0</sub>(N)
is at least 2, except for N=37 and 63. In fact, there is a slight error in their analysis, and N=108 is
also an exception <A  HREF = "text1538.htm#bib_mike_harr_auts_10">[Har]</A>. In these three cases B<sub>0</sub>(N) is of index two in the full automorphism
group A<sub>0</sub>(N) of X<sub>0</sub>(N).
<P>
We have precomputed and stored the w<sub>d</sub> and S<sub>r</sub> curve isomorphisms in the database. Let g(N) denote the genus
of X<sub>0</sub>(N). There are intrinsics to return these individual isomorphisms and a special intrinsic to compute and
return the automorphism group B<sub>0</sub>(N), when g &le;1, or A<sub>0</sub>(N), when g &ge;2, over various fields as a
<TT>GrpAutCrv</TT>. We sometimes refer to the elements of these groups as modular automorphisms to emphasise that
they are not all of the curve automorphisms in the g(N) = 0 or 1 cases (when the automorphism group is
infinite).
<P>
Except in the N=108 case, all automorphisms are defined over the cyclotomic field (Q)(&mu;<sub>r</sub>) where r is the
largest divisor of 24 such that r<sup>2</sup>|N (for this field of definition, r can be replaced by r/2 if r is
twice an odd number). Specifically, the w<sub>d</sub> are all defined over (Q) and S<sub>r</sub> has (Q)(&mu;<sub>r</sub>)
as its field of definition.
<P>
The automorphism group intrinsics include in various ways an integer n that specifies a
cyclotomic level and they return the subgroup of A<sub>0</sub>(N), or B<sub>0</sub>(N) for g &le;1, containing all elements
defined over (Q)(&mu;<sub>n</sub>). In all cases, the group of automorphism returned is a semi-direct product of
groups, one for each prime p dividing N. For p &gt; 3 this group is just C<sub>2</sub>, generated by an Atkin-Lehner
involution. For p=2 or 3, if p<sup>2</sup>|N and n is appropriately divisible, the p-component is more complex.
We build up the automorphism group in the various cases from the known structure. This is much faster than
using the generic algorithm to compute it. The only real time goes into building up the total set of function field
automorphisms (starting from the stored data for the generators) that is cached in the <TT>GrpAutCrv</TT> object.


<H5><A NAME = "17369">AtkinLehnerInvolution(CN,N,d) : Crv, RngIntElt, RngIntElt -&gt; MapAutSch</A></H5>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field of characteristic 0.
d is a divisor of N with (d, N/d)=1. Returns the Atkin-Lehner involution w<sub>d</sub> as a scheme automorphism
of CN. If the full automorphism group G of CN has already been computed and cached with CN (see the intrinsics
below and the section in the Algebraic Curves chapter on automorphism groups) then the intrinsic will return
w<sub>d</sub> as a <TT>GrpAutCrvElt</TT> in G. Note that the intrinsic should terminate immediately in the first case,
when it is just retrieving the equations from the database file, but has to do a little bit of work in the
second case.
</BLOCKQUOTE>
<H5><A NAME = "17370">SrAutomorphism(CN,N,r,u): Crv, RngIntElt, RngIntElt, RngElt -&gt; MapAutSch</A></H5>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field K of characteristic 0.
r is a divisor of 24 such that r<sup>2</sup>|N. u is a primitive r-th root-of-unity in K.
Returns S<sub>r</sub> as a scheme automorphism of CN that corresponds to z |-&gt; z + (1/r) if K is embedded into
(C) so that u maps to e<sup>2&pi; i/r</sup>. If the full automorphism group G of CN has already been computed and 
cached with CN (see the intrinsics
below and the section in the Algebraic Curves chapter on automorphism groups) then the intrinsic will return
S<sub>r</sub> as a <TT>GrpAutCrvElt</TT> in G. Note that the intrinsic will usually terminate more quickly in the first case,
when it is just retrieving equations from the database file and maybe performing a composition, whereas in the second case
it is doing an extra little bit of work.
</BLOCKQUOTE>
<H5><A NAME = "17371">ExtraAutomorphism(CN,N,u): Crv, RngIntElt, RngElt -&gt; MapAutSch</A></H5>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field K of characteristic 0.
N is 37, 63 or 108. u is a primitive r-th root-of-unity in K where r=1 (so u=1) when N=37 and r=3
in the other cases. Returns an automorphism of CN in A<sub>0</sub>(N) that is not in B<sub>0</sub>(N) (i.e. not given by the
action of a matrix on the complex upper half-plane: see the introduction). This "extra" automorphism generates
A<sub>0</sub>(N) over B<sub>0</sub>(N) and is an involution when N=37 (the hyperelliptic involution) or N=108 and is of
order 4 when N=63 with square equal to the Atkin-Lehner involution w<sub>9</sub>.
If the full automorphism group G of CN has already been computed and 
cached with CN (see the intrinsics
below and the section in the Algebraic Curves chapter on automorphism groups) then the intrinsic will return
the extra automorphism as a <TT>GrpAutCrvElt</TT> in G. Note that the intrinsic should terminate immediately in
the first case, when it is just retrieving the equations from the database file, but has to do a little bit of work
in the second case.
</BLOCKQUOTE>
<H5><A NAME = "17372">AutomorphismGroupOverQ(CN,N): Crv, RngIntElt -&gt; GrpAutCrv</A></H5>

<PRE>    Install: BoolElt                    Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field K of characteristic 0.
Computes and returns the full group of automorphisms of CN (automorphisms in B<sub>0</sub>(N) if the genus of X<sub>0</sub>(N)
is &le;1: see the introduction) defined over (Q). If the parameter <TT>Install</TT> has the value <TT>true</TT>,
which is the default, the return value is internally installed and cached
as the (full) automorphism group of CN, so the user should be careful that K doesn't contains roots of unity which
generate a field over which some extra modular automorphisms are defined (viz. roots of unity of exact order r where
2 &lt; r|24 and r<sup>2</sup>|N).
</BLOCKQUOTE>
<H5><A NAME = "17373">AutomorphismGroupOverCyclotomicExtension(CN,N,n): Crv, RngIntElt, RngIntElt -&gt; GrpAutCrv</A></H5>

<PRE>    Install: BoolElt                    Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field K which is the
cyclotomic extension of (Q) obtained by adjoining the n-th roots of unity (the precise condition is
that K.1 should be a primitive n-th root of unity).
Computes and returns the full group of automorphisms of CN (automorphisms in B<sub>0</sub>(N) if the genus of X<sub>0</sub>(N)
is &le;1: see the introduction) defined over K. If the parameter <TT>Install</TT> has the value <TT>true</TT>,
which is the default, the return value is internally installed and cached
as the (full) automorphism group of CN.
</BLOCKQUOTE>
<H5><A NAME = "17374">AutomorphismGroupOverExtension(CN,N,n,u): Crv, RngIntElt, RngIntElt, RngElt -&gt; GrpAutCrv</A></H5>

<PRE>    Install: BoolElt                    Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
The curve CN should be a base change of the small modular database curve of level N to a field K which is an
extension of (Q) containing the n-th roots of unity. u should be a primitive n-th root of unity
in K.
Computes and returns the full group of automorphisms of CN (automorphisms in B<sub>0</sub>(N) if the genus of X<sub>0</sub>(N)
is &le;1: see the introduction) defined over the cyclotomic field (Q)(&mu;<sub>n</sub>).
If the parameter <TT>Install</TT> has the value <TT>true</TT>, which is the default, the return value is internally installed
and cached as the (full) automorphism group of CN. In that case, the user should be careful that n is 
well-chosen so that K doesn't contain higher order roots of unity which generate a subfield over which some modular 
automorphisms are defined that are not defined over (Q)(&mu;<sub>n</sub>).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17375">Example <TT>SmallModCrv_sm_mod_crvs_auto_ex (H135E3)</TT></A></H3>
<P>
<P>
<PRE>
&gt; C := SmallModularCurve(37);
&gt; C;
Hyperelliptic Curve defined by y^2 + (-x^3)*y = 2*x^5 - 5*x^4 + 7*x^3 - 6*x^2 
    + 3*x - 1 over Rational Field
&gt; AtkinLehnerInvolution(C,37,37);
Mapping from: CrvHyp: C to CrvHyp: C
with equations : 
$.1
$.2
$.1 - $.3
and inverse
$.1
$.2
$.1 - $.3
&gt; ExtraAutomorphism(C,37,1); //the hyperelliptic involution
Mapping from: CrvHyp: C to CrvHyp: C
with equations : 
$.1
$.1^3 - $.2
$.3
and inverse
$.1
$.1^3 - $.2
$.3
&gt; C&lt;x,y,z&gt; := SmallModularCurve(48);
&gt; C;
Hyperelliptic Curve defined by y^2 + (-x^4 - 1)*y = 3*x^4 over Rational Field
&gt; AtkinLehnerInvolution(C,48,3);
Mapping from: CrvHyp: C to CrvHyp: C
with equations : 
-z
x^4 - y + z^4
x
and inverse
-z
x^4 - y + z^4
x
&gt; Type($1);
MapAutSch
&gt; G := AutomorphismGroupOverQ(C,48);
&gt; #G;
16
&gt; AtkinLehnerInvolution(C,48,3);
Mapping from: CrvHyp: C to CrvHyp: C
with equations : 
-z
x^4 - y + z^4
x
and inverse
-z
x^4 - y + z^4
x
&gt; Type($1);
GrpAutCrvElt
&gt; PermutationRepresentation(G);
Permutation group acting on a set of cardinality 6
Order = 16 = 2^4
    (2, 3)
    (1, 2)(3, 4)
    (5, 6)
Mapping from: GrpAutCrv: G to GrpPerm: $, Degree 6, Order 2^4 given by a rule
&gt; // D8 X C2
&gt; K&lt;i&gt; := QuadraticField(-1);
&gt; CK&lt;x,y,z&gt; := SmallModularCurve(48,K);
&gt; G := AutomorphismGroupOverCyclotomicExtension(CK,48,4);
&gt; #G;
48
&gt; SrAutomorphism(CK,48,4,i); // z -&gt; z+(1/4)
Mapping from: CrvHyp: CK to CrvHyp: CK
with equations : 
-i*x
y
z
and inverse
i*x
y
z
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1544.htm">[Next]</A><A  HREF = "text1542.htm">[Prev]</A> <A  HREF = "text1544.htm">[Right]</A> <A  HREF = "text1542.htm">[Left]</A> <A  HREF = "text1539.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>