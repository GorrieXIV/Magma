<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Constructors for Lie Algebras</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1133.htm">[Next]</A><A  HREF = "text1131.htm">[Prev]</A> <A  HREF = "text1133.htm">[Right]</A> <A  HREF = "text1131.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12662">Constructors for Lie Algebras</A></H3>

<P>
<P>
<P>
<P>
The construction of a Lie algebra defined by structure constants 
 is identical to that of a 
general structure constant algebra. Most constructors take two optional
parameters: <TT>Check</TT> and <TT>Rep</TT>.
<P>
By default, the conditions for the algebra to be a Lie algebra are checked.  
If the user decides to omit this check, by setting the parameter 
<TT>Check</TT> to <TT>false</TT>, and the algebra is not actually Lie
then functions in this section will fail or give incorrect answers.
<P>
The optional parameter <TT>Rep</TT> can be used to select the internal
representation of the structure constants. The possible values for
<TT>Rep</TT> are "<TT>Dense</TT>", "<TT>Sparse</TT>" and "<TT>Partial</TT>", with the
default being "<TT>Dense</TT>".
In the dense format, the n<sup>3</sup> structure constants are stored as n<sup>2</sup> vectors
of length n. This is the best representation if most
of the structure constants are non-zero.
The sparse format, intended for use when most structure constants are zero,
stores the positions and values of the non-zero structure constants.
The partial format stores the vectors,
but records for efficiency the positions of the non-zero structure constants.


<H5><A NAME = "12663"></A><A NAME = "LieAlgebraRnQ">LieAlgebra</A>&lt;R, n | Q : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgLie</H5>
<H5>LieAlgebra&lt;M | Q : parameters &gt; : ModTupRng, SeqEnum -&gt; AlgLie</H5>

<PRE>    Check: BoolElt                      Default: <TT>true</TT></PRE>

<PRE>    Rep: MonStgElt                      Default: "Dense"</PRE>
<BLOCKQUOTE>
This function creates the Lie structure constant algebra L over
the free module M = R<sup>n</sup>, with standard basis {e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub>},
and structure constants a<sub>ij</sub><sup>k</sup> being given by the sequence Q. 
The sequence Q can be of any of the following three forms.
Note that in all cases the actual ordering of the structure constants is
the same: the only difference is that their partitioning into blocks varies.
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>A sequence of n sequences of n sequences of length n.
The j-th element of the i-th sequence is the sequence
[ a<sub>ij</sub><sup>1</sup>, ..., a<sub>ij</sub><sup>n</sup> ], or the element (a<sub>ij</sub><sup>1</sup>, ..., a<sub>ij</sub><sup>n</sup>) of M, giving the coefficients of the product
e<sub>i</sub> * e<sub>j</sub>.
<DT>(ii)</DT><DD>A sequence of n<sup>2</sup> sequences of length n, or n<sup>2</sup> elements
of M. Here the coefficients of e<sub>i</sub> * e<sub>j</sub> are given by position
(i - 1)n + j of Q.
<DT>(iii)</DT><DD>A sequence of n<sup>3</sup> elements of the ring R. The
sequence elements are the structure constants themselves, in the
order a<sub>11</sub><sup>1</sup>, a<sub>11</sub><sup>2</sup>, ..., a<sub>11</sub><sup>n</sup>, a<sub>12</sub><sup>1</sup>, a<sub>12</sub><sup>2</sup>, ...,
a<sub>nn</sub><sup>n</sup>. So a<sub>ij</sub><sup>k</sup> lies in position (i - 1)n<sup>2</sup> + (j - 1)n + k
of Q.</DL>
</BLOCKQUOTE>
<H5><A NAME = "12664">LieAlgebra&lt;R, n | T : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgLie</A></H5>

<PRE>    Check: BoolElt                      Default: <TT>true</TT></PRE>

<PRE>    Rep: MonStgElt                      Default: "Dense"</PRE>
<BLOCKQUOTE>
This function creates the Lie structure constant algebra L with
standard basis 
{e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub>} over the ring R. The sequence T contains quadruples
&lt; i, j, k, a<sub>ij</sub><sup>k</sup>&gt; giving the non-zero structure constants. All other
structure constants are defined to be 0.
</BLOCKQUOTE>
<H5><A NAME = "12665">LieAlgebra&lt; t | T : parameters &gt; : SeqEnum, SeqEnum -&gt; AlgLie</A></H5>

<PRE>    Check: BoolElt                      Default: <TT>true</TT></PRE>

<PRE>    Rep: MonStgElt                      Default: "Dense"</PRE>
<BLOCKQUOTE>
This function creates the Lie structure constant algebra L over the
integers, with standard basis {e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub>}. 
The sequence T contains quadruples &lt; i, j, k, a<sub>ij</sub><sup>k</sup>&gt; (where
the a<sub>ij</sub><sup>k</sup> are integers) giving the non-zero structure constants. 
All other structure constants are defined to be 0. 
The argument t is a sequence of length n consisting of nonnegative 
integers giving the moduli of the basis elements.  Thus let t<sub>i</sub> denote 
the i-th element of t; then t<sub>i</sub>e<sub>i</sub> =0. So if t<sub>i</sub>=0, then 
ke<sub>i</sub> != 0 for all integers k.
</BLOCKQUOTE>
<H5><A NAME = "12666">LieAlgebra(A) : AlgAss -&gt; AlgLie, Map</A></H5>
<BLOCKQUOTE>
Given an associative structure-constant algebra A, create the Lie
algebra L consisting of the elements in A with the induced Lie product
(x, y) -&gt; x * y - y * x.
As a second value the map identifying the elements of L and A is returned.
</BLOCKQUOTE>
<H5><A NAME = "12667">LieAlgebra(A) : AlgMat -&gt; AlgLie</A></H5>
<BLOCKQUOTE>
Given an associative matrix algebra A, create a structure-constant Lie
algebra L isomorphic to A with the induced Lie product
(x, y) -&gt; x * y - y * x.
</BLOCKQUOTE>
<H5><A NAME = "12668">AbelianLieAlgebra(R, n) : Rng, RngIntElt -&gt; AlgLie</A></H5>

<PRE>    Rep: MonStgElt                      Default: "Sparse"</PRE>
<BLOCKQUOTE>
Create the abelian Lie algebra of dimension n over the ring R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12669">Example <TT>AlgLie_LieAlgebraCons (H106E1)</TT></A></H3>
We construct the Heisenberg Lie algebra, then a Lie algebra from an
associative algebra, and finally a Lie algebra over the integers (also
called a Lie ring).
<P>
<P>
<PRE>
&gt; T:= [ &lt;1,2,3,1&gt;, &lt;2,1,3,-1&gt; ];
&gt; LieAlgebra&lt; Rationals(), 3 | T &gt;;
Lie Algebra of dimension 3 with base ring Rational Field
&gt; A:= Algebra( GF(27), GF(3) );
&gt; LieAlgebra(A);
Lie Algebra of dimension 3 with base ring GF(3)
&gt; T:= [ &lt;1,2,2,2&gt;, &lt;2,1,2,2&gt; ];
&gt; t:= [0,4];
&gt; K:= LieAlgebra&lt; t | T : Rep:= "Dense" &gt;; K;
Lie Algebra of dimension 2 with base ring Integer Ring
Column moduli: [0, 4]
&gt; LowerCentralSeries( K );
[
    Lie Algebra of dimension 2 with base ring Integer Ring
    Column moduli: [0, 4],
    Lie Algebra of dimension 1 with base ring Integer Ring
    Column moduli: [2],
    Lie Algebra of dimension 0 with base ring Integer Ring
]
</PRE>
<HR>
<H5><A NAME = "12670">ChangeBasis(L, B) : AlgLie, [AlgLieElt] -&gt; AlgLie</A></H5>
<H5>ChangeBasis(L, B) : AlgLie, [ModTupFldElt] -&gt; AlgLie</H5>
<H5>ChangeBasis(L, B) : AlgLie, Mtrx -&gt; AlgLie</H5>

<PRE>    Rep: MonStgElt                      Default: "Dense"</PRE>
<BLOCKQUOTE>
Create a new Lie structure constant algebra L', isomorphic to L, by recomputing the structure constants with respect to the basis B.
The basis B can be specified as a set or sequence of elements of L, a set or sequence of vectors, or a matrix.
The second returned value is the isomorphism from L to L'.
<P>
As above, the optional parameter <TT>Rep</TT> can be used to select the internal
representation of the structure constants.
Note that the default is dense representation, regardless of the representation used by L.
</BLOCKQUOTE>
<H5><A NAME = "12671">MatrixLieAlgebra(R, n) : Rng, RngIntElt -&gt; AlgMatLie</A></H5>
<BLOCKQUOTE>
Given a ring R and an integer n, create the full Lie algebra of matrices of degree 
d over R.
</BLOCKQUOTE>
<H5><A NAME = "12672">MatrixLieAlgebra(A) : AlgMat -&gt; AlgMatLie</A></H5>
<BLOCKQUOTE>
Given an associative matrix algebra A, create the matrix Lie
algebra L consisting of the elements in A with the induced Lie product
(x, y) -&gt; x * y - y * x.
</BLOCKQUOTE>
<H5><A NAME = "12673">Algebra(M) : AlgMatLie -&gt; AlgLie, Map</A></H5>
<H5>LieAlgebra(M) : AlgMatLie -&gt; AlgLie, Map</H5>
<BLOCKQUOTE>
Return a structure-constant Lie algebra isomorphic to the matrix Lie algebra
M.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12674">Example <TT>AlgLie_MatrixLieAlgebra (H106E2)</TT></A></H3>
We construct the subalgebra of the matrix Lie algebra of 2 x 2 matrices,
consisting of upper triangular matrices.
<P>
<P>
<PRE>
&gt; L:= MatrixLieAlgebra( Rationals(), 2 );
&gt; a:= L!Matrix( [[1,0],[0,0]] );
&gt; b:= L!Matrix( [[0,0],[1,0]] );
&gt; c:= L!Matrix( [[0,0],[0,1]] );
&gt; K:= sub&lt; L | [ a, b, c ] &gt;;
&gt; Dimension(K);
3
&gt; IsSolvable(K);
true
&gt; IsNilpotent(K);
false
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1133.htm">[Next]</A><A  HREF = "text1131.htm">[Prev]</A> <A  HREF = "text1133.htm">[Right]</A> <A  HREF = "text1131.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>