<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Families of Lie Algebras</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1136.htm">[Next]</A><A  HREF = "text1134.htm">[Prev]</A> <A  HREF = "text1136.htm">[Right]</A> <A  HREF = "text1134.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12726">Families of Lie Algebras</A></H3>

<P>
<P>
<P>
<P>
The radical of a Lie algebra is the maximal soluble ideal.
A Lie algebra is called <I>reductive</I>
if its radical is equal to its centre, and <I>semisimple</I> if its radical is trivial.
A Lie algebra is <I>almost reductive (resp. simple, semisimple)</I> if the corresponding
group of Lie type is reductive (resp. simple, semisimple).
Note that these concepts are equivalent if the field has characteristic zero.
<P>
The commands in this section construct almost reductive Lie algebras over an
arbitrary field.  
Such Lie algebras have a corresponding root datum.
The matrix versions of these commands give the standard matrix representation,
which is the smallest degree representation (with a few exceptions for small
characteristic fields).



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1135.htm#12727">Almost Reductive Lie Algebras</A>
<LI> <A  HREF = "text1135.htm#12735">Cartan-Type Lie Algebras</A>
<LI> <A  HREF = "text1135.htm#12744">Melikian Lie Algebras</A>
</UL>
<H4><A NAME = "12727">Almost Reductive Lie Algebras</A></H4>

<P>
<P>
<P>
<P>
The intrinsics <A  HREF = "text1135.htm#LieAlgebra">LieAlgebra</A> and <A  HREF = "text1135.htm#MatrixLieAlgebra">MatrixLieAlgebra</A> described below
take as first argument an object which describes the type of the reductive Lie 
algebra to be constructed. Specifically, it may be one of the five following 
types:
<P>
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A string describing the Cartan type;
<DT>(b)</DT><DD>A root datum (see Chapter <A  HREF = "text1089.htm#12115">ROOT DATA</A>);
<DT>(c)</DT><DD>A crystallographic root system (see Chapter <A  HREF = "text1079.htm#12000">ROOT SYSTEMS</A>);
<DT>(d)</DT><DD>A Dynkin digraph (see Section <A  HREF = "text1073.htm#11947">Dynkin Digraphs</A>);
<DT>(e)</DT><DD>A crystallographic Cartan matrix C (see Section <A  HREF = "text1072.htm#11931">Cartan Matrices</A>).
<P>
</DL>
In the cases (a), (d), and (e) these intrinsics take an optional argument
<TT>Isogeny</TT>. See Section <A  HREF = "text1177.htm#13095">Constructing Groups of  Lie Type</A> for the possible values 
of this flag.


<H5><A NAME = "12728"></A><A NAME = "LieAlgebra">LieAlgebra</A>(T, k) : MonStgElt, Rng -&gt; AlgLie</H5>
<H5>LieAlgebra(R, k) : RootDtm, Rng -&gt; AlgLie</H5>
<H5>LieAlgebra(R, k) : RootSys, Rng -&gt; AlgLie</H5>
<H5>LieAlgebra(D, k) : GrphDir, Rng -&gt; AlgLie</H5>
<H5>LieAlgebra(C, k) : AlgMatElt, Rng -&gt; AlgLie</H5>

<PRE>    Isogeny: .                          Default: "Ad"</PRE>
<BLOCKQUOTE>
Construct the reductive Lie algebra of type T over the ring k.
</BLOCKQUOTE>
<H5><A NAME = "12729"></A><A NAME = "MatrixLieAlgebra">MatrixLieAlgebra</A>(T, k) : MonStgElt, Rng -&gt; AlgLie</H5>
<H5>MatrixLieAlgebra(R, k) : RootDtm, Rng -&gt; AlgLie</H5>
<H5>MatrixLieAlgebra(R, k) : RootSys, Rng -&gt; AlgLie</H5>
<H5>MatrixLieAlgebra(D, k) : GrphDir, Rng -&gt; AlgLie</H5>
<H5>MatrixLieAlgebra(C, k) : AlgMatElt, Rng -&gt; AlgLie</H5>

<PRE>    Isogeny: .                          Default: "Ad"</PRE>
<BLOCKQUOTE>
Construct the reductive matrix Lie algebra of type T over the ring k.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12730">Example <TT>AlgLie_ReductiveLieAlgebra (H106E17)</TT></A></H3>
We construct some (semi)simple Lie algebras.
<P>
<P>
<PRE>
&gt; LieAlgebra("D7", RationalField());
Lie Algebra of dimension 91 with base ring Rational Field
&gt; LieAlgebra("G2", GF(5));
Lie Algebra of dimension 14 with base ring GF(5)
&gt; L := LieAlgebra( "G2 B3", Rationals() );
&gt; L;
Lie Algebra of dimension 35 with base ring Rational Field
&gt; DirectSumDecomposition(L);
[
    Lie Algebra of dimension 14 with base ring Rational Field,
    Lie Algebra of dimension 21 with base ring Rational Field
]
&gt; LieAlgebra( "E8", GF(2) );
Lie Algebra of dimension 248 with base ring GF(2)
</PRE>
<HR>
<H3><A NAME = "12731">Example <TT>AlgLie_LieAlgebraIsogeny (H106E18)</TT></A></H3>
This example demonstrates the use of the <TT>Isogeny</TT> option.
Over a field of characteristic zero, this option only effects the basis used. 
In characteristic p, it sometimes effects the isomorphism type of the algebra. 
For type A<sub>n</sub> with
p|(n + 1), the default Isogeny is "Ad" (adjoint), which gives an algebra with
nontrivial derived subalgebra but no centre:
<P>
<P>
<PRE>
&gt; L := LieAlgebra("A4", GF(5));
&gt; Dimension(L);
24
&gt; Dimension(L*L);
23
&gt; Dimension(Centre(L));
0
</PRE>
If you take Isogeny to be "SC" (simply connected), you get a perfect algebra with a nontrivial centre. 
<P>
<P>
<PRE>
&gt; L := LieAlgebra("A4", GF(5) : Isogeny:="SC");
&gt; Dimension(L);
24
&gt; Dimension(L*L);
24
&gt; Dimension(Centre(L));
1
</PRE>
If p<sup>2</sup>|(n + 1) there is an intermediate isogeny type which has both
a centre and a nontrivial derived algebra:
<P>
<P>
<PRE>
&gt; L := LieAlgebra("A24", GF(5) : Isogeny:=5);
&gt; Dimension(L);
624
&gt; Dimension(L*L);
623
&gt; Dimension(Centre(L));
1
</PRE>
Similar results can be obtained by constructing the Lie algebra from a root datum. 
This kind of phenomenon happens whenever the characteristic divides the
order of the fundamental group of your root datum. 
See <A  HREF = "text1129.htm#bib_Hogeweij82">[Hog82]</A> for more details.
<P>
<P>
<PRE>
&gt; R := RootDatum("E6");
&gt; #FundamentalGroup(R);
3
&gt; L := LieAlgebra(R,GF(3));
&gt; L;
Lie Algebra of dimension 78 with base ring GF(3)
&gt; L*L;
Lie Algebra of dimension 77 with base ring GF(3)
</PRE>
<HR>
<H5><A NAME = "12732">LieAlgebra(N, k, p) : MonStgElt, Rng, GrpPermElt -&gt; AlgLie</A></H5>
<H5>LieAlgebra(R, k, p) : RootDtm, Rng, GrpPermElt -&gt; AlgLie</H5>
<BLOCKQUOTE>
The twisted (almost) semisimple Lie algebra over the finite field k with 
Cartan type N given as a string or root datum R, with twist given by 
the permutation p. The twist should either be a permutation of the 
indices of the simple roots, or of the indices of all roots.
</BLOCKQUOTE>
<H5><A NAME = "12733">TwistedLieAlgebra(R, k) : RootDtm, Rng -&gt; AlgLie</A></H5>
<BLOCKQUOTE>
Given a twisted root datum R and a finite field k, construct the
twisted Lie algebra L = R(k). 
<P>
This variant has 5 return values. First, the twisted Lie algebra L. 
Second, a homomorphism &phi; from L into the split Lie algebra L' (over a
suitable field extension of k); Third, L'; Fourth, a split toral
subalgebra H of L, and, fifth, a split toral subalgebra H' of L',
such that &phi;(H) &sube;H'.
<P>
See also <A  HREF = "text1138.htm#TwistedBasis">TwistedBasis</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12734">Example <TT>AlgLie_TwistedLieAlgebra (H106E19)</TT></A></H3>
We construct two twisted Lie algebras.
<P>
<P>
<PRE>
&gt; DynkinDiagram("E6");

E6    1 - 3 - 4 - 5 - 6
              |
              2

&gt; LieAlgebra( "E6", GF(5), Sym(6)!(1,6)(3,5) );
Lie Algebra of dimension 78 with base ring GF(5)
&gt; Rt := TwistedRootDatum(RootDatum("D4") : Twist := 3);
&gt; k := GF(7);
&gt; L, phi, Lp, H, Hp := TwistedLieAlgebra(Rt, k);
&gt; L;
Lie Algebra of dimension 28 with base ring GF(7)
&gt; Lp;
Lie Algebra of dimension 28 with base ring GF(7^3)
&gt; phi(L.3);
(0 0 ksi^49 ksi^7 ksi 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
&gt; IsSplitToralSubalgebra(L, H);
true
&gt; IsSplitToralSubalgebra(Lp, Hp);
true
&gt; forall{b : b in Basis(H) | phi(b) in Hp};
true
</PRE>
<HR>
<H4><A NAME = "12735">Cartan-Type Lie Algebras</A></H4>

<P>
<P>
<P>
<P>
<P>
Simple Lie algebras over fields of characteristic 0 have been 
classified and are precisely the twisted forms of Lie algebras of 
types A<sub>l</sub>, B<sub>l</sub>, C<sub>l</sub>, D<sub>l</sub>, E<sub>6</sub>, E<sub>7</sub>, E<sub>8</sub>, F<sub>4</sub> and G<sub>2</sub> 
(see previous Subsection). 
Over fields of finite characteristic p, the analogues of 
these algebras are called <I>classical-type</I> (including the exceptional
algebras).
Over such fields there are other simple Lie algebras, the first of them found
by Witt sometimes before 1937. For p &ge;7, the only non-classical
simple Lie algebras are the Lie algebras of 
<I>Cartan-type</I>, 
which we discuss in this section.
For p=5, one further class of simple Lie algebras occurs: 
<I>Melikian</I> algebras, 
which are discussed in the next section.
In characteristic 2 and 3, the classification of simple Lie algebras
is not yet complete. 
<P>
Cartan-type Lie algebras are non-classical Lie algebras which arise
from infinite dimensional algebras of differential operators over C:
<P>
<DL COMPACT class='compact'>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>(generalised) Witt algebras,
<P>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>special and conformal special Lie algebras,
<P>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>Hamiltonian and conformal Hamiltonian Lie algebras,
<P>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>and contact Lie algebras.
<P>
<P>
</DL>
The notation and the description of these Lie algebras
closely follow Strade and Farnsteiner <A  HREF = "text1129.htm#bib_Str2004">[Str04]</A> and <A  HREF = "text1129.htm#bib_Str-Frn88">[SF88]</A>.
Where the notation of the two books differs, we follow <A  HREF = "text1129.htm#bib_Str2004">[Str04]</A>.
<P>
Let F be a finite field of characteristic p&gt;0 and m a positive integer.
We refer for the definition of O(m) and x<sup>(a)</sup> to <A  HREF = "text1129.htm#bib_Str2004">[Str04, 2.1]</A>.
The basis of O(m) is { x<sup>(a)</sup> | 0&le;a, a&isin;N<sup>m</sup> }.
<P>
Let n be a sequence of positive integers of length m and set
N := &sum;<sub>i=1</sub><sup>m</sup> n<sub>i</sub>. Define
<P>
     O(m, n) := &lt; x<sup>(a)</sup> | 0 &le;a<sub>i</sub> &lt; p<sup>n<sub>i</sub></sup> &gt;
<P>
For i=1, ..., m denote by &part;<sub>i</sub> the derivation of O(m) defined by
<P>
     &part;<sub>i</sub>(x<sub>j</sub><sup>(r)</sup>) = &delta;<sub>i, j</sub> x<sub>j</sub><sup>(r - 1)</sup>.
<P>
Now define
<P>
     W(m, n) := &sum;<sub>i=1</sub><sup>m</sup> O(m)&part;<sub>i</sub>.
<P>
The algebra W(m, n) is the <I>Witt</I> algebra
and has dimension m p<sup>N</sup> over F.
In particular, W(1, [1]) is the standard p-dimensional Witt algebra.
<P>
The Witt algebra W(m, n) is simple unless p=2 and m=1 (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.2.4(1)]</A>)
and is restrictable if and only if n=[1, ..., 1] (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.2.4(2)]</A>).
<P>
Further define
<P>
     &Omega;<sup>0</sup>(m, n) := O(m, n),
<P>
     &Omega;<sup>1</sup>(m, n) := Hom()<sub>O(m, n)</sub>(W(m, n), O(m, n)),
<P>
     &Omega;<sup>r</sup>(m, n) := bigwedge<sup>r</sup> &Omega;<sup>1</sup>(m, n),
<P>
     &Omega;(m, n) := bigoplus &Omega;<sup>r</sup>(m, n).
<P>
<P>
Let m&ge;2 and &omega;<sub>S</sub> = dx<sub>1</sub> ^ ... ^ dx<sub>m</sub>. Define the following
subalgebras of W(m, n):
<P>
      S(m, n) := { D&isin;W(m, n) | D(&omega;<sub>S</sub>) = 0 },
<P>
     CS(m, n) := { D&isin;W(m, n) | D(&omega;<sub>S</sub>) &isin;F&omega;<sub>S</sub> }.
<P>
The algebra S(m, n) is the <I>special</I> and CS(m, n) is the 
<I>conformal special</I> 
Lie algebra. The dimension of S(m, n) over F is (m - 1)p<sup>N</sup> + 1 and
the dimension of CS(m, n) is dim S(m, n) + 1.
<P>
Suppose m&ge;3. Then the algebra S(m, n)<sup>(1)</sup> is simple (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.3.5(1)]</A>)
and is restrictable if and only if n=[1, ..., 1] (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.3.5(2)]</A>).
<P>
<P>
Let p&gt;2, m = 2r &ge;2 and let &omega;<sub>H</sub> = &sum;limits<sub>i=1</sub><sup>r</sup> dx<sub>i</sub> ^ dx<sub>i + r</sub>. Define the following
subalgebras of W(m, n):
<P>
      H(m, n) := { D&isin;W(m, n) | D(&omega;<sub>H</sub>) = 0 },
<P>
     CH(m, n) := { D&isin;W(m, n) | D(&omega;<sub>H</sub>) &isin;F&omega;<sub>H</sub> }.
<P>
The algebra H(m, n) is the <I>Hamiltonian</I> and CH(m, n) is the 
<I>conformal Hamiltonian</I> 
Lie algebra. The dimension of H(m, n) over F is p<sup>N</sup> - 1 and
the dimension of CH(m, n) is dim H(m, n) + 1.
<P>
The algebra H(m, n)<sup>(2)</sup> is simple (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.4.5(1)]</A>)
and is restrictable if and only if n=[1, ..., 1] (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.4.5(2)]</A>).
And, if m&gt;2, then H(m, n)<sup>(2)</sup> = H(m, n)<sup>(1)</sup>.
<P>
<P>
Let p&gt;2, m = 2r + 1 &ge;3 and let &omega;<sub>K</sub> = dx<sub>m</sub> + &sum;limits<sub>i=1</sub><sup>r</sup> (x<sub>i</sub>dx<sub>i + r</sub> - x<sub>i + r</sub>dx<sub>i</sub>). Define the following
subalgebra of W(m, n):
<P>
      K(m, n) := { D&isin;W(m, n) | D(&omega;<sub>K</sub>) &isin;O(m, n)&omega;<sub>K</sub> },
<P>
The algebra K(m, n) is the <I>contact</I> 
Lie algebra. The dimension of K(m, n) over F is p<sup>N</sup>.
<P>
The algebra K(m, n)<sup>(1)</sup> is simple (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.5.5(1)]</A>)
and is restrictable if and only if n=[1, ..., 1] (<A  HREF = "text1129.htm#bib_Str-Frn88">[SF88, 4.5.6]</A>).
If m + 3 &#8802; 0 mod p, then K(m, n)<sup>(1)</sup> = K(m, n).


<H5><A NAME = "12736">WittLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, Map</A></H5>

<PRE>    Check: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The Witt algebra W(m, n) is constructed over the finite field F, where
m must be a positive integer and n a sequence of positive integers of length m.
If the optional argument <TT>Check</TT> is <TT>true</TT>, the algebra is checked to be Lie
upon construction.
<P>
An invertible map from the polynomial ring P over F of degree 2m to W(m, n) is
returned as second value, to assist in identifying the elements of W(m, n). 
For 1 &le;i&le;m
the i-th generator of P maps to x<sub>i</sub> in W(m, n), and for m + 1 &le;i&le;2m 
the i-th generator of P maps to &delta;<sub>i - m</sub> in W(m, n).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12737">Example <TT>AlgLie_witt-alg-ex (H106E20)</TT></A></H3>
We compute the Witt algebra W(2, [2, 1]) over GF(9) and verify the multiplication
of x<sub>1</sub><sup>(1)</sup> &delta;<sub>1</sub> and x<sub>1</sub><sup>(2)</sup> x<sub>2</sub><sup>(1)</sup> &delta;<sub>2</sub>.
<P>
<P>
<PRE>
&gt; W, phi := WittLieAlgebra(GF(9), 2, [2,1]);
&gt; W;
Lie Algebra of dimension 54 with base ring GF(3^2)
&gt; IsSimple(W);
true
&gt; P&lt;x1, x2, d1, d2&gt; := Domain(phi);
&gt; phi(x1*d1);
(0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
&gt; (phi(x1*d1)*phi(x1^2*x2*d2)) @@ phi;
2*x1^2*x2*d2
</PRE>
and the standard Witt algebra W(1, [1]) over GF(2):
<P>
<P>
<PRE>
&gt; W := WittLieAlgebra(GF(2), 1, [1]);
&gt; W;
Lie Algebra of dimension 2 with base ring GF(2)
&gt; IsSimple(W);
false
&gt; IsRestrictedLieAlgebra(W);
true [ (0 0), (0 1) ]
</PRE>
<HR>
<H5><A NAME = "12738">SpecialLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie, Map, Map</A></H5>
<H5>ConformalSpecialLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie, AlgLie, Map, Map</H5>

<PRE>    Check: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The (conformal) special Lie algebra (C)S(m, n) is constructed over the finite 
field F, where m&ge;2 must be an integer and n a sequence of positive 
integers of length m.  If the optional argument <TT>Check</TT> is <TT>true</TT>, Magma 
checks that the algebra constructed is a Lie algebra. 
<P>
The intrinsic <TT>SpecialLieAlgebra</TT> returns the Witt algebra W(m, n) in which 
it is embedded as the second return value. In addition, similarly to 
<TT>WittLieAlgebra</TT>, a map from the polynomial ring P of degree 2m over F 
to S(m, n) is returned as the third return value, and a map from P to W(m, n) 
as the fourth return value.
<P>
Similarly, <TT>ConformalSpecialLieAlgebra</TT> returns the special Lie algebra
S(m, n) which it contains and the Witt Lie algebra W(m, n) in which it 
is embedded in as second and third return values. Maps from P to CS(m, n), 
S(m, n), and W(m, n) are returned as fourth, fifth, and sixth return values, 
respectively.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12739">Example <TT>AlgLie_special-lie-alg-ex (H106E21)</TT></A></H3>
We compute both S(3, [1, 2, 1]) and CS(3, [1, 2, 1]) over GF(9):
<P>
<P>
<PRE>
&gt; CS,S,W := ConformalSpecialLieAlgebra( GF(9), 3, [1,2,1] );
&gt; CS;S;W;
Lie Algebra of dimension 164 with base ring GF(3^2)
Lie Algebra of dimension 163 with base ring GF(3^2)
Lie Algebra of dimension 243 with base ring GF(3^2)
&gt; IsSimple(S);
false
&gt; IsSimple(S*S);
true
&gt; IsRestrictedLieAlgebra(S*S);
false []
</PRE>
<HR>
<H5><A NAME = "12740">HamiltonianLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie</A></H5>
<H5>ConformalHamiltonianLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie, AlgLie</H5>

<PRE>    Check: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The (conformal) Hamiltonian Lie algebra (C)H(m, n) is constructed over the finite 
field F of characteristic at least 3, where
m&ge;2 must be even and n a sequence of positive integers of length m.
If the optional argument <TT>Check</TT> is <TT>true</TT>, the algebra is checked to be Lie
upon construction. 
<P>
The intrinsic <TT>HamiltonianlLieAlgebra</TT> returns the Witt Lie algebra W(m, n) 
in which it is embedded as the second return value. Additionally, similarly to <TT>WittLieAlgebra</TT>, a map from the polynomial ring P of degree 2m over F to
H(m, n) is returned as the third return value, and a map from P to W(m, n) as
the fourth return value.
<P>
Similarly, <TT>ConformalHamiltonianLieAlgebra</TT> returns the Hamiltonian Lie
algebra H(m, n) it contains and the Witt Lie algebra W(m, n) in which it is 
embedded as the second and third return values. Maps from P to CH(m, n), 
H(m, n), and W(m, n) are returned as the fourth, fifth, and sixth return values, 
respectively.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12741">Example <TT>AlgLie_hamilton-alg-ex (H106E22)</TT></A></H3>
We compute both H(2, [2, 2]) and CH(2, [2, 2]) over GF(9):
<P>
<P>
<PRE>
&gt; CH,H,W := ConformalHamiltonianLieAlgebra( GF(9), 2, [2,2] );
&gt; CH;H;W;
Lie Algebra of dimension 81 with base ring GF(3^2)
Lie Algebra of dimension 80 with base ring GF(3^2)
Lie Algebra of dimension 162 with base ring GF(3^2)
&gt; IsSimple(H);
false
&gt; IsSimple(H*H);
true
&gt; IsSimple(H*H*H);
true
&gt; IsRestrictedLieAlgebra(H*H*H);
false []
</PRE>
<HR>
<H5><A NAME = "12742">ContactLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie</A></H5>

<PRE>    Check: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The contact Lie algebra K(m, n) is constructed  over the finite field F
of characteristic at least 3, where
m&ge;3 must be odd and n a sequence of positive integers of length m.
If the optional argument <TT>Check</TT> is <TT>true</TT>, the algebra is checked to be Lie
upon construction. 
<P>
The intrinsic <TT>ContactLieAlgebra</TT> returns the Witt Lie algebra W(m, n) 
in which it is embedded as the second return value. Additionally, similarly to <TT>WittLieAlgebra</TT>, a map from the polynomial ring P of degree 2m over F to
K(m, n) is returned as the third return value, and a map from P to W(m, n) as
the fourth return value.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12743">Example <TT>AlgLie_contact-alg-ex (H106E23)</TT></A></H3>
We compute the contact Lie algebra K(3, [1, 1, 1]) over GF(5):
<P>
<P>
<PRE>
&gt; K,W := ContactLieAlgebra( GF(5), 3, [1,1,1] );
&gt; K;W;
Lie Algebra of dimension 125 with base ring GF(5)
Lie Algebra of dimension 375 with base ring GF(5)
&gt; K*K eq K;
true
&gt; IsSimple(K);
true
</PRE>
<HR>
<H4><A NAME = "12744">Melikian Lie Algebras</A></H4>

<P>
<P>
<P>
<P>
The Melikian Lie Algebras are a class of simple Lie algebras over finite
fields of characteristic 5, parameterized by two positive integers n<sub>1</sub>, n<sub>2</sub>.
We follow the explicit construction by Strade <A  HREF = "text1129.htm#bib_Str2004">[Str04, Section 4.3]</A>.
<P>
<P>
Let F be a field of characteristic p = 5 and recall the definition of O(m, n) and
W(m, n) from Section <A  HREF = "text1135.htm#12735">Cartan-Type Lie Algebras</A>. Define W = W(2, [n<sub>1</sub>, n<sub>2</sub>]), O = O(2, [n<sub>1</sub>, n<sub>2</sub>]), and take W' to be a copy of W.
We equip the vector space W direct-sum O direct-sum W' with a bilinear product [., .] that is defined by the following equations, where D, E &isin;W and f, f<sub>1</sub>, f<sub>2</sub>, g, g<sub>1</sub>, g<sub>2</sub> &isin;O. 
<P>
<DL COMPACT class='compact'>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On W x W, the usual multiplication in W.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On W x O: [D, f] = D(f) - 2div(D) f.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On W x W': [D, E'] = ([D, E])' + 2div(D) E'.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On O x O: [f, g] = 2(g &delta;<sub>2</sub>(f) - f &delta;<sub>2</sub>(g)) &delta;'<sub>1</sub> + 2(f &delta;<sub>1</sub>(g) - g &delta;<sub>1</sub>(f)) &delta;'<sub>2</sub>.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On O x W': [f, E'] = fE.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>On W' x W': [f<sub>1</sub> &delta;'<sub>1</sub> + f<sub>2</sub> &delta;'<sub>2</sub>, g<sub>1</sub> &delta;'<sub>1</sub> + g<sub>2</sub> &delta;'<sub>2</sub>] = f<sub>1</sub> g<sub>2</sub> - f<sub>2</sub> g<sub>1</sub>.
<P>
<P>
</DL>
Here div is the linear map defined by div(f &delta;<sub>i</sub>) = &delta;<sub>i</sub> f.
It follows that M(n<sub>1</sub>, n<sub>2</sub>), of dimension 5<sup>n<sub>1</sub> + n<sub>2</sub> + 1</sup>, is a simple Lie algebra <A  HREF = "text1129.htm#bib_Str2004">[Str04, Lemma 4.3.1, Theorem 4.3.3]</A>.


<H5><A NAME = "12745">MelikianLieAlgebra(F, n1, n2) : Fld, RngIntElt, RngIntElt -&gt; AlgLie, Map</A></H5>

<PRE>    Check: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The Melikian Lie algebra M = M(n<sub>1</sub>, n<sub>2</sub>) over F. 
An invertible map from the polynomial ring P of degree 6 over F to M is
returned as second value, to assist in identifying the elements of M. Here the 
six generators of P represent x<sub>1</sub>, x<sub>2</sub>, &delta;<sub>1</sub>, &delta;<sub>2</sub>, &delta;'<sub>1</sub>,  &delta;'<sub>2</sub>, respectively.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12746">Example <TT>AlgLie_melikian-alg-ex (H106E24)</TT></A></H3>
We construct M(2, 1) over GF(5) and inspect some of its properties.
<P>
<P>
<PRE>
&gt; M, phi := MelikianLieAlgebra(GF(5), 2, 1);     
&gt; M;
Lie Algebra of dimension 625 with base ring GF(5)
&gt; IsSimple(M);
true
</PRE>
Next, we construct subspaces (not subalgebras) W, O, W' of M.
<P>
<P>
<PRE>
&gt; P&lt;x1, x2, d1, d2, dp1, dp2&gt; := Domain(phi);
&gt; V := VectorSpace(GF(5), Dimension(M));
&gt; W := sub&lt;V | [ V | phi(x1^i*x2^j*d) : i in [0..24], j in [0..4], 
&gt;                                                     d in [d1,d2] ]&gt;;
&gt; O := sub&lt;V | [ V | phi(x1^i*x2^j) : i in [0..24], j in [0..4] ]&gt;;
&gt; Wp := sub&lt;V | [ V | phi(x1^i*x2^j*d) : i in [0..24], j in [0..4], 
&gt;                                                      d in [dp1,dp2] ]&gt;;
&gt; Dimension(W), Dimension(O), Dimension(Wp);
250 125 250
&gt; Dimension(W meet O), Dimension(W meet Wp), Dimension(O meet Wp);
0 0 0
</PRE>
Finally, we verify that these subspaces multiply as required by the definition.
<P>
<P>
<PRE>
&gt; m := func&lt; A, B | sub&lt;V | [ V | M!a*M!b : a in Basis(A), b in Basis(B) ]&gt; &gt;;
&gt; WxWp := m(W, Wp); [ WxWp subset VV : VV in [W, O, Wp] ]; 
[ false, false, true ]
</PRE>
So indeed [W, W'] &sube;W'. 
<P>
<P>
<PRE>
&gt; VV := [W, O, Wp]; VVnm := ["W", "O", "W'" ];
&gt; mm := function(A, B)
&gt;   AB := m(A, B);
&gt;   for i in [1..#VV] do 
&gt;     if AB eq VV[i] then return VVnm[i]; end if;
&gt;   end for;
&gt;   return "??";
&gt; end function;
&gt; mm(W, Wp);  
W'
&gt; for i,j in [1..#VV] do
&gt;   printf "[ %2o, %2o ] = %2o%o", VVnm[i], VVnm[j], mm(VV[i], VV[j]), 
&gt;     (j eq 3) select "\n" else ", ";
&gt; end for;
[  W,  W ] =  W, [  W,  O ] =  O, [  W, W' ] = W'
[  O,  W ] =  O, [  O,  O ] = W', [  O, W' ] =  W
[ W',  W ] = W', [ W',  O ] =  W, [ W', W' ] =  O
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1136.htm">[Next]</A><A  HREF = "text1134.htm">[Prev]</A> <A  HREF = "text1136.htm">[Right]</A> <A  HREF = "text1134.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>