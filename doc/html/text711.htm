<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>New Groups from Existing</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text712.htm">[Next]</A><A  HREF = "text710.htm">[Prev]</A> <A  HREF = "text712.htm">[Right]</A> <A  HREF = "text710.htm">[Left]</A> <A  HREF = "text706.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "8026">New Groups from Existing</A></H3>



<H5><A NAME = "8027">DirectProduct(G, H) : GrpPC, GrpPC -&gt; GrpPC, [Map], [Map]</A></H5>
<BLOCKQUOTE>
The direct product K of the pc-groups G and H.
The second argument returned is a sequence containing the inclusion maps
I<sub>G</sub>: G -&gt; K and I<sub>H</sub>: H -&gt; K.  The third
argument returned is a sequence containing the projection maps
P<sub>G</sub>: K -&gt; G and P<sub>H</sub>: K -&gt; H.
Furthermore, the (user-) presentation of K is arranged so that the first
pc-generators correspond to those of G and the remaining generators
correspond to those of H.
</BLOCKQUOTE>
<H5><A NAME = "8028">DirectProduct(Q) : [GrpPC] -&gt; GrpPC, [ Map ], [ Map ]</A></H5>
<BLOCKQUOTE>
The direct product of pc-groups in the non-empty sequence Q, and the inclusion and projection maps.
</BLOCKQUOTE>
<H5><A NAME = "8029">Extension(G, H, f) : GrpPC, GrpPC, [Map] -&gt; GrpPC</A></H5>
<BLOCKQUOTE>
The split extension K of the pc-group G by the pc-group H, where the
action of H on G is given by the homomorphism &phi;: H -&gt; Aut(G)
specified by f.
The extension K will have a normal subgroup G~ isomorphic to G,
while the quotient group K/G~ is isomorphic to H.
<P>
The homomorphism &phi; is given by the sequence of maps f.  Suppose that
the pc-generators for H are h<sub>1</sub>, ..., h<sub>s</sub>.  The i-th entry of f
defines the action of h<sub>i</sub> on G.  That is,
f[i](x) = h<sub>i</sub><sup> - 1</sup>.x.h<sub>i</sub>, for x &isin;G.
</BLOCKQUOTE>
<H5><A NAME = "8030">Extension(M, H) : ModGrp, GrpPC -&gt; GrpPC</A></H5>
<BLOCKQUOTE>
The split extension K of the G-module M by the pc-group H.
We use the action of H on M to define the action of H on an elementary
abelian p-group of order p<sup>d</sup> where M is a d-dimensional module over
GF(p), p prime.
</BLOCKQUOTE>
<H5><A NAME = "8031">Extension(G, H, f, t) : GrpPC, GrpPC, [Map], [GrpPCElt] -&gt; GrpPC</A></H5>
<H5>Extension(G, H, f, t) : GrpPC, GrpPC, [Map], Tup -&gt; GrpPC</H5>
<BLOCKQUOTE>
The non-split extension K of the pc-group G by the pc-group H, where the
action of H on G is given by the homomorphism &phi;: H -&gt; Aut(G)
and the tails for H are given as the set of tuples t.  The extension K 
will have a normal subgroup G~ isomorphic to G, while the quotient group 
K/G~ is isomorphic to H.
<P>
The homomorphism &phi; is given by the sequence of maps f.  Suppose that
the pc-generators for H are h<sub>1</sub>, ..., h<sub>s</sub>.  The i-th entry of f
defines the action of h<sub>i</sub> on G.  That is,
f[i](x) = h<sub>i</sub><sup> - 1</sup>.x.h<sub>i</sub>, for x &isin;G.
<P>
The specification of t involves giving the relations h<sub>j</sub><sup> - 1</sup>h<sub>i</sub>h<sub>j</sub>
= w<sub>ij</sub>, where w<sub>ij</sub> is a word in K for 1 &le;j &lt; i &le;s.  For
i = j, we need the relation (h<sub>i</sub>)<sup>p<sub>i</sub></sup> = w<sub>ii</sub>, where w<sub>ii</sub> is a
word in K for 1 &le;i &le;s.  Each w<sub>ij</sub> is the RHS of the
relation from H with the tail x<sub>ij</sub>. The tails are given by the sequence
t in the order t = [x<sub>11</sub>, x<sub>21</sub>, x<sub>22</sub>, x<sub>31</sub>, ... , x<sub>ss</sub> ].
Alternatively, t can be given as a set of tuples &lt; i, j, x<sub>ij</sub> &gt; for
non-trivial x<sub>ij</sub>.
<P>
Note that if x<sub>ij</sub> = <TT>Id(G)</TT>, for 1&le;i&le;s and 1&le;j&le;i,
then K will just be the split extension of G and H.
</BLOCKQUOTE>
<H5><A NAME = "8032">Extension(M, H, t) : ModGrp, GrpPC, [ModGrpElt] -&gt; GrpPC</A></H5>
<BLOCKQUOTE>
The non-split extension K of the G-module M by the pc-group H.
We use the action of H on M to define the action of H on an elementary
abelian p-group of order p<sup>d</sup> where M is a d-dimensional module over
GF(p), p prime.
<P>
The specification of t is similar to that for t in the preceding description.
</BLOCKQUOTE>
<H5><A NAME = "8033">IsExtension(G, H, f) : GrpPC, GrpPC, [Map] -&gt; BoolElt, GrpPC</A></H5>
<H5>IsExtension(M, H) : ModGrp, GrpPC -&gt; BoolElt, GrpPC</H5>
<H5>IsExtension(G, H, f, t) : GrpPC, GrpPC, [Map], [GrpPCElt] -&gt; BoolElt, GrpPC</H5>
<H5>IsExtension(G, H, f, t) : GrpPC, GrpPC, [Map], Tup -&gt; BoolElt, GrpPC</H5>
<H5>IsExtension(M, H, t) : ModGrp, GrpPC, [ModGrpElt] -&gt; BoolElt, GrpPC</H5>
<BLOCKQUOTE>
For each <TT>Extension</TT> variation, there is a corresponding function <TT>IsExtension</TT>
which attempts to construct the specified group and returns a boolean value indicating
whether or not the construction succeeded.  If the construction succeeds, the
extension group is also returned.  
<P>
The <TT>Extension</TT> functions will generate
a runtime error if the specified construction is not legal.
The <TT>IsExtension</TT> function allows
the user to detect this error condition and continue.
</BLOCKQUOTE>
<H5><A NAME = "8034">WreathProduct(G, H) : GrpPC, GrpPC -&gt; GrpPC</A></H5>
<BLOCKQUOTE>
The wreath product of the pc-groups G and H, where the regular permutation
representation of H is used to define the action.
</BLOCKQUOTE>
<H5><A NAME = "8035">WreathProduct(G, H, f) : GrpPC, GrpPC, Map -&gt; GrpPC</A></H5>
<H5>WreathProduct(G, H, f) : GrpPC, GrpPC, [GrpPermElt] -&gt; GrpPC</H5>
<BLOCKQUOTE>
The wreath product of the pc-groups G and H where the action of H
is given by f, which may be either a homomorphism from H into a 
permutation group P
or a sequence of permutations defining a homomorphism from H into
P. If f is a sequence, the homomorphism
&phi;: H -&gt; P is defined by H.i -&gt; f[i] for
i = 1, ..., s.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "8036">Example <TT>GrpPC_extension (H68E6)</TT></A></H3>
To demonstrate some of the versions of <TT>Extension</TT> we first
build a split extension of a cyclic group of order 4 acting on
an elementary abelian group of order 9.
<P>
<P>
<PRE>
&gt; C4 := CyclicGroup(GrpPC,4);
&gt; E9 := AbelianGroup(GrpPC,[3,3]);
&gt; f1 := hom&lt;E9-&gt;E9|[E9.1*E9.2^2, E9.1^2*E9.2^2]&gt;;
&gt; f2 := hom&lt;E9-&gt;E9|[E9.1^2,E9.2^2]&gt;;
&gt; G := Extension(E9,C4,[f1,f2]);
&gt; G;
GrpPC : G of order 36 = 2^2 * 3^2
PC-Relations:
    G.1^2 = G.2, 
    G.2^2 = Id(G), 
    G.3^3 = Id(G), 
    G.4^3 = Id(G), 
    G.3^G.1 = G.3 * G.4^2, 
    G.3^G.2 = G.3^2, 
    G.4^G.1 = G.3^2 * G.4^2, 
    G.4^G.2 = G.4^2
</PRE>
Then, we define a module for this group and use it to
build a nonsplit extension.
<P>
<P>
<PRE>
&gt; MR := MatrixRing(GF(3),2);
&gt; m1 := MR![1,1,1,2];
&gt; m2 := MR![2,0,0,2];
&gt; V := GModule(G,[m1,m2,Id(MR),Id(MR)]);
&gt; IsIrreducible(V);
true
&gt; v0 := V!0;
&gt; tails := [v0,v0,v0,v0,V![1,0],V![2,0],V![1,2],V![0,2],v0,V![0,1]];
&gt; H := Extension(V,G,tails);
&gt; H;
GrpPC : H of order 324 = 2^2 * 3^4
PC-Relations:
    H.1^2 = H.2, 
    H.2^2 = Id(H), 
    H.3^3 = H.5^2, 
    H.4^3 = H.6, 
    H.5^3 = Id(H), 
    H.6^3 = Id(H), 
    H.3^H.1 = H.3 * H.4^2, 
    H.3^H.2 = H.3^2 * H.5, 
    H.4^H.1 = H.3^2 * H.4^2 * H.5 * H.6^2, 
    H.4^H.2 = H.4^2 * H.6^2, 
    H.5^H.1 = H.5 * H.6, 
    H.5^H.2 = H.5^2, 
    H.6^H.1 = H.5 * H.6^2, 
    H.6^H.2 = H.6^2
</PRE>
Notice that the relations of H involving the first four
generators are those of G with the specified tails
appended.  We are then ready to compute various properties of H.
<P>
<P>
<PRE>
&gt; [N`order:N in NormalSubgroups(H)];
[ 1, 9, 81, 162, 324 ]
</PRE>
<HR>
<H3><A NAME = "8037">Example <TT>GrpPC_cossey_hawkes (H68E7)</TT></A></H3>
In this example we verify an example of Cossey and Hawkes in <A  HREF = "text705.htm#bib_CH-classes">[CH00]</A>.
The paper shows that the largest size of a conjugacy class
in an abelian by nilpotent finite group is at least as large
as the product of the largest class sizes for the Sylow subgroups.
The example is a group having derived length 3 in which this fails.
<P>
We start with a dihedral group of order 10 acting on
a cyclic group of order 8.
<P>
<P>
<PRE>
&gt; E := DihedralGroup(GrpPC,5);
&gt; A := CyclicGroup(GrpPC,8);
</PRE>
Define an action of E on A and create
the split extension.
<P>
<P>
<PRE>
&gt; f1 := hom&lt;A-&gt;A|A.1-&gt;(A.1)^-1&gt;;
&gt; f2 := hom&lt;A-&gt;A|A.1-&gt;A.1&gt;;
&gt; H := Extension(A, E, [f1, f2]);
</PRE>
Then construct a certain H-module...
<P>
<P>
<PRE>
&gt; QH := SylowSubgroup(H,2);
&gt; t := TrivialModule(QH, FiniteField(5));
&gt; B := Induction(t, H);
</PRE>
 ...and form the split extension of H acting on that module.
<P>
<P>
<PRE>
&gt; G := Extension(B, H);
&gt; print G;
GrpPC : G of order 250000 = 2^4 * 5^6
PC-Relations:
    G.1^2 = Id(G),
    G.2^5 = Id(G),
    G.3^2 = G.4,
    G.4^2 = G.5,
    G.5^2 = Id(G),
    G.6^5 = Id(G),
    G.7^5 = Id(G),
    G.8^5 = Id(G),
    G.9^5 = Id(G),
    G.10^5 = Id(G),
    G.2^G.1 = G.2^4,
    G.3^G.1 = G.3 * G.4 * G.5,
    G.4^G.1 = G.4 * G.5,
    G.6^G.2 = G.10,
    G.7^G.1 = G.10,
    G.7^G.2 = G.6,
    G.8^G.1 = G.9,
    G.8^G.2 = G.7,
    G.9^G.1 = G.8,
    G.9^G.2 = G.8,
    G.10^G.1 = G.7,
    G.10^G.2 = G.9
&gt; print DerivedLength(G);
3
</PRE>
Now check the relevant class sizes.
<P>
<P>
<PRE>
&gt; P := SylowSubgroup(G,5);
&gt; Q := SylowSubgroup(G,2);
&gt; print  Maximum({x[2]:x in Classes(G)});
1250
&gt; print  Maximum({x[2]:x in Classes(P)});
625
&gt; print  Maximum({x[2]:x in Classes(Q)});
4
</PRE>
Note that 1250 is less than the product 625*4.
<HR>
<PRE></PRE> <A  HREF = "text712.htm">[Next]</A><A  HREF = "text710.htm">[Prev]</A> <A  HREF = "text712.htm">[Right]</A> <A  HREF = "text710.htm">[Left]</A> <A  HREF = "text706.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>