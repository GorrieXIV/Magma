<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Quotient Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text639.htm">[Next]</A><A  HREF = "text637.htm">[Prev]</A> <A  HREF = "text639.htm">[Right]</A> <A  HREF = "text637.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7061">Quotient Groups</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text638.htm#7062">Construction of Quotient Groups</A>
<LI> <A  HREF = "text638.htm#7066">Abelian, Nilpotent and Soluble Quotients</A>
</UL>
<H4><A NAME = "7062">Construction of Quotient Groups</A></H4>



<H5><A NAME = "7063">quo&lt;G | L&gt; : GrpPerm, List -&gt; GrpPerm, Map</A></H5>
<BLOCKQUOTE>
Given the permutation group G, construct the quotient group
Q = G/N, where N is the normal closure of the subgroup of
G generated by the elements specified by L. The clause L
is a list of one or more items of the following types:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A sequence of n integers defining a permutation of G;
<DT>(b)</DT><DD>A set or sequence of sequences of type (a);
<DT>(c)</DT><DD>An element of G;
<DT>(d)</DT><DD>A set or sequence of elements of G;
<DT>(e)</DT><DD>A subgroup of G;
<DT>(f)</DT><DD>A set or sequence of subgroups of G.
<P>
<P>
</DL>
Each element or group specified by the list must belong to the
<I>same</I> generic permutation group. The function returns
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>the quotient group Q, and
<DT>(b)</DT><DD>the natural homomorphism f: G -&gt; Q.
<P>
<P>
</DL>
Currently, the quotient group is constructed via the regular
representation of the quotient, so the application of this operator
is restricted to the case where the index of N in G is small.
The representation of the quotient group that is returned is the result
of a degree reduction applied to the regular representation, so need not be
regular.
The generators of the quotient are images of the generators of G.
<P>
The second return value is the epimorphism from G to the resulting
quotient group.
</BLOCKQUOTE>
<H5><A NAME = "7064">G / N : GrpPerm, GrpPerm -&gt; GrpPerm</A></H5>
<BLOCKQUOTE>
Given a normal subgroup N of the permutation group G, construct the
quotient of G by N.
Currently, the quotient group is constructed via the regular
representation of the quotient, so the application of this operator
is restricted to the case where the index of N in G is small.
The representation of the quotient group that is returned is the result
of a degree reduction applied to the regular representation, so need not be
regular.
The generators of the quotient are images of the generators of G.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "7065">Example <TT>GrpPerm_Quotient (H63E21)</TT></A></H3>
The quotient of Sym(4) by the Klein 4-group is constructed
by the following statement:
<P>
<P>
<PRE>
&gt; Q, f := quo&lt; Sym(4) | (1,2)(3,4), (1,3)(2,4) &gt;;
&gt; Q;
Permutation group Q acting on a set of cardinality 3
Order = 6 = 2 * 3
    (2, 3)
    (1, 2)
</PRE>
<HR>
<H4><A NAME = "7066">Abelian, Nilpotent and Soluble Quotients</A></H4>

<P>
<P>
A number of standard quotients may be constructed. The method first
constructs a presentation for the permutation group and then applies
the appropriate fp-group algorithm.


<H5><A NAME = "7067">AbelianQuotient(G) : GrpPerm -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
The maximal abelian quotient G/G<sup>prime</sup> of the group G as <TT>GrpAb</TT>
(cf. Chapter <A  HREF = "text786.htm#8898">ABELIAN GROUPS</A>). The natural epimorphism 
&pi;:G -&gt; G/G<sup>prime</sup> is returned as second value.
</BLOCKQUOTE>
<H5><A NAME = "7068">ElementaryAbelianQuotient(G, p) : GrpPerm, RngIntElt -&gt; GrpAb, Map</A></H5>
<BLOCKQUOTE>
The maximal p-elementary abelian quotient Q of the group G as
<TT>GrpAb</TT> (cf. Chapter <A  HREF = "text786.htm#8898">ABELIAN GROUPS</A>). The natural epimorphism
&pi;:G -&gt; Q is returned as second value.
</BLOCKQUOTE>
<H5><A NAME = "7069">pQuotient(G, p, c) : GrpPerm, RngIntElt, RngIntElt -&gt; GrpPC, Map, SeqEnum, BoolElt</A></H5>
<BLOCKQUOTE>
Given a permutation group G, a prime p and a positive integer c,
construct a pc-presentation for the largest p-quotient P of G having 
lower exponent-p class at most c. If c is given as 0, then the
limit 127 is placed on the class.
<P>
The function also returns the natural homomorphism
&pi; from G to P, a sequence S describing the definitions of the
pc-generators of P and a flag indicating whether P is the maximal
p-quotient of G.
<P>
The k-th element of S is a sequence of two integers, describing the
definition of the k-th pc-generator P.k of P as follows.
<P>
<DL COMPACT class='compact'>
<DT>-</DT><DD>If S[k] = [0, r], then P.k is defined via the image of G.r under &pi;.
<P>
<DT>-</DT><DD>If S[k] = [r, 0], then P.k is defined via the power relation for P.r.
<P>
<DT>-</DT><DD>If S[k] = [r, s], then P.k is defined via the conjugate relation involving
P.r<sup>P.s</sup>.</DL>
</BLOCKQUOTE>
<H5><A NAME = "7070">NilpotentQuotient(G, c) : GrpPerm, RngIntElt -&gt; GrpGPC, Map</A></H5>
<BLOCKQUOTE>
This function returns the class c nilpotent quotient of G, together
with the epimorphism &pi; from G onto this quotient.
</BLOCKQUOTE>
<H5><A NAME = "7071">SolvableQuotient(G): GrpPerm -&gt; GrpPC, Map, SeqEnum, MonStgElt</A></H5>
<H5>SolubleQuotient(G): GrpPerm -&gt; GrpPC, Map, SeqEnum, MonStgElt</H5>
<BLOCKQUOTE>
The function returns the largest soluble quotient S of the permutation 
group G together with the epimorphism &pi;:G -&gt; S.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "7072">Example <TT>GrpPerm_SpecialQuotient (H63E22)</TT></A></H3>
The soluble quotient of the wreath product of Sym(6) with
the dihedral group of order 12 is easily constructed:
<P>
<P>
<PRE>
&gt; G := WreathProduct( Sym(6), DihedralGroup(6));
&gt; #G;
1671768834048000000
&gt; SQ, phi := SolubleQuotient(G);
SQ;
GrpPC : SQ of order 768 = 2^8 * 3
PC-Relations:
    SQ.1^2 = SQ.5, 
    SQ.2^2 = Id(SQ), 
    SQ.3^2 = Id(SQ), 
    SQ.4^2 = Id(SQ), 
    SQ.5^3 = Id(SQ), 
    SQ.6^2 = Id(SQ), 
    SQ.7^2 = Id(SQ), 
    SQ.8^2 = Id(SQ), 
    SQ.9^2 = Id(SQ), 
    SQ.2^SQ.1 = SQ.2 * SQ.5, 
    SQ.3^SQ.1 = SQ.3 * SQ.4 * SQ.6 * SQ.8, 
    SQ.4^SQ.1 = SQ.4 * SQ.9, 
    SQ.4^SQ.2 = SQ.4 * SQ.6 * SQ.7 * SQ.8, 
    SQ.5^SQ.2 = SQ.5^2, 
    SQ.5^SQ.3 = SQ.5 * SQ.7, 
    SQ.5^SQ.4 = SQ.5 * SQ.6 * SQ.8, 
    SQ.6^SQ.1 = SQ.6 * SQ.8, 
    SQ.6^SQ.2 = SQ.7 * SQ.8, 
    SQ.6^SQ.5 = SQ.6 * SQ.7 * SQ.8 * SQ.9, 
    SQ.7^SQ.1 = SQ.8, 
    SQ.7^SQ.2 = SQ.9, 
    SQ.7^SQ.5 = SQ.7 * SQ.9, 
    SQ.8^SQ.1 = SQ.7 * SQ.9, 
    SQ.8^SQ.2 = SQ.6 * SQ.9, 
    SQ.8^SQ.5 = SQ.6 * SQ.9, 
    SQ.9^SQ.1 = SQ.6 * SQ.8 * SQ.9, 
    SQ.9^SQ.2 = SQ.7, 
    SQ.9^SQ.5 = SQ.7
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text639.htm">[Next]</A><A  HREF = "text637.htm">[Prev]</A> <A  HREF = "text639.htm">[Right]</A> <A  HREF = "text637.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>