<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Automorphisms</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1186.htm">[Next]</A><A  HREF = "text1184.htm">[Prev]</A> <A  HREF = "text1186.htm">[Right]</A> <A  HREF = "text1184.htm">[Left]</A> <A  HREF = "text1175.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "13245">Automorphisms</A></H3>

<P>
<P>
<P>
<P>
The following functions construct the standard automorphisms of a group of Lie
type, as described in <A  HREF = "text1174.htm#bib_Carter-small">[Car72]</A> (except for the graph 
automorphism of G<sub>2</sub>).  In many cases, including the finite
groups, every automorphism is a product of these standard automorphisms.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1185.htm#13246">Basic Functionality</A>
<LI> <A  HREF = "text1185.htm#13255">Constructing Special  Automorphisms</A>
<LI> <A  HREF = "text1185.htm#13263">Operations and Properties of Automorphisms</A>
</UL>
<H4><A NAME = "13246">Basic Functionality</A></H4>



<H5><A NAME = "13247">AutomorphismGroup(G) : GrpLie -&gt; GrpLieAuto</A></H5>
<BLOCKQUOTE>
Automorphism group of a group of Lie type G.
</BLOCKQUOTE>
<H5><A NAME = "13248">IdentityAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt</A></H5>
<H5>One(A) : GrpLieAuto -&gt; GrpLieAutoElt</H5>
<H5>Id(A) : GrpLieAuto -&gt; GrpLieAutoElt</H5>
<BLOCKQUOTE>
The identity automorphism of the group of Lie type G.
</BLOCKQUOTE>
<H5><A NAME = "13249">Mapping(a) : GrpLieAutoElt -&gt; Map</A></H5>
<BLOCKQUOTE>
The map object associated with the automorphism a.
</BLOCKQUOTE>
<H5><A NAME = "13250">Automorphism(m) : Map -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
Given a map object m from G to G, which is an isomorphism,
returns the associated automorphism as an automorphism of a group
of Lie type.
</BLOCKQUOTE>
<H5><A NAME = "13251">h * g : GrpLieAutoElt, GrpLieAutoElt -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
The composition of the group of Lie type automorphisms h and g.
</BLOCKQUOTE>
<H5><A NAME = "13252">h ^ n : GrpLieAutoElt, RngIntElt -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
The nth power of the group of Lie type automorphism h.
</BLOCKQUOTE>
<H5><A NAME = "13253">g ^ h : GrpLieAutoElt, GrpLieAutoElt -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
The conjugate h<sup> - 1</sup>gh, where g and h are group of Lie type automorphisms g and h
</BLOCKQUOTE>
<H5><A NAME = "13254">Domain(A) : GrpLieAuto -&gt; GrpLie</A></H5>
<H5>Codomain(A) : GrpLieAuto -&gt; GrpLie</H5>
<H5>Domain(h) : GrpLieAutoElt -&gt; GrpLie</H5>
<H5>Codomain(h) : GrpLieAutoElt -&gt; GrpLie</H5>
<BLOCKQUOTE>
Domain or codomain of an automorphism of a group of
Lie type or of the group of automorphisms.
</BLOCKQUOTE>
<H4><A NAME = "13255">Constructing Special  Automorphisms</A></H4>



<H5><A NAME = "13256">InnerAutomorphism(G, x) : GrpLie, GrpLieElt -&gt; Map</A></H5>
<BLOCKQUOTE>
The inner automorphism taking g&isin;G to g<sup>x</sup>, where x is an element of the
group of Lie type G.
</BLOCKQUOTE>
<H5><A NAME = "13257">DiagonalAutomorphism(G, v) : GrpLie, ModTupRngElt -&gt; Map</A></H5>
<BLOCKQUOTE>
The diagonal automorphism of the semisimple group of Lie type G given by the 
vector v.
Let n be the semisimple rank of G and let k be its base field.
Then v must be a vector in k<sup>n</sup> with every component nonzero.
The function returns the automorphism given by the character &chi; defined by
&chi;(&alpha;<sub>i</sub>)=v<sub>i</sub>, where &alpha;<sub>i</sub> is the ith simple root.
Since our groups are algebraic, a diagonal automorphism is just a special 
case of an inner automorphism.
</BLOCKQUOTE>
<H5><A NAME = "13258">GraphAutomorphism(G, p) : GrpLie, GrpPermElt -&gt; Map</A></H5>
<H5>DiagramAutomorphism(G, p) : GrpLie, GrpPermElt -&gt; Map</H5>

<PRE>    SimpleSigns: Any                    Default: 1</PRE>
<BLOCKQUOTE>
The graph automorphism of the group of Lie type G given by the permutation p.
The permutation must act on the indices of simple roots of G or the indices of
all roots of G.  The graph automorphism of the group of type G<sub>2</sub> has not
been implemented yet.
<P>
The optional parameter <TT>SimpleSigns</TT> can be used to specify the signs 
corresponding to each simple root.  This should either be a sequence
of integers &#8723; 1, or a single integer &#8723; 1.
</BLOCKQUOTE>
<H5><A NAME = "13259">FieldAutomorphism(G, sigma) : GrpLie, Map -&gt; Map</A></H5>
<BLOCKQUOTE>
The field automorphism of the group of Lie type G induced by &sigma;, 
an element of the automorphism group of the base field of G
</BLOCKQUOTE>
<H5><A NAME = "13260">RandomAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt</A></H5>
<H5>Random(A) : GrpLieAuto -&gt; GrpLieAutoElt</H5>
<BLOCKQUOTE>
A random element in A, the automorphism group 
of the group of Lie type G.
</BLOCKQUOTE>
<H5><A NAME = "13261">DualityAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
The duality automorphism of G.
This is an automorphism that takes every unipotent term x<sub>r</sub>(t) to 
x<sub>s</sub>(&#8723; t), where s= <TT>Negative(RootDatum(G),r))</TT>.
</BLOCKQUOTE>
<H5><A NAME = "13262">FrobeniusMap(G,q) : GrpLie, RngIntElt -&gt; GrpLieAutoElt</A></H5>
<BLOCKQUOTE>
The Frobenius automorphism of the finite group of Lie type G gotten by qth
powers in the base field.
The integer q must be a power of the characteristic of the base field of G.
</BLOCKQUOTE>
<H4><A NAME = "13263">Operations and Properties of Automorphisms</A></H4>



<H5><A NAME = "13264">DecomposeAutomorphism(h) : GrpLieAutoElt -&gt; GrpLieAutoElt, GrpLieAutoElt,GrpLieAutoElt, Rec</A></H5>
<BLOCKQUOTE>
Given a group of Lie type automorphism h, this returns 
a field automorphism f,
a graph automorphism g  and 
an inner automorphism i
such that h=fgi. This only works for groups defined over finite fields.
The algorithm is due to Scott Murray and Sergei Haller.
</BLOCKQUOTE>
<H5><A NAME = "13265">IsAlgebraic(h) : GrpLieAutoElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the automorphism h is algebraic.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13266">Example <TT>GrpLie_Automorphism (H109E18)</TT></A></H3>
Some automorphisms of B<sub>2</sub>(4)
<P>
<P>
<PRE>
&gt; G := GroupOfLieType("B2", GF(4));
&gt; A := AutomorphismGroup(G);
&gt; A!1 eq IdentityAutomorphism(G);
true
&gt; g := GraphAutomorphism(G, Sym(2)!(1,2));
&gt; g;
Automorphism of Group of Lie type B2 over Finite field of size 2^2
given by: Mapping from: Group of Lie type  to Group of Lie type 
given by a rule
Decomposition:
  Mapping from: GF(2^2) to GF(2^2) given by a rule,
  (1, 2),
  1
</PRE>
The automorphism of B<sub>2</sub>(4) whose stabiliser is ()<sup>2</sup>B<sub>2</sub>(4) is constructed
by the following code.
<P>
<P>
<PRE>
&gt; sigma := iso&lt; GF(4) -&gt; GF(4) | x :-&gt; x^2, x :-&gt; x^2 &gt;;
&gt; h := FieldAutomorphism(G, sigma) * g;
&gt; h in A;
true
&gt; f,g,i := DecomposeAutomorphism(h);
&gt; assert f*g*i eq h;
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1186.htm">[Next]</A><A  HREF = "text1184.htm">[Prev]</A> <A  HREF = "text1186.htm">[Right]</A> <A  HREF = "text1184.htm">[Left]</A> <A  HREF = "text1175.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>