<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Construction of Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text581.htm">[Next]</A><A  HREF = "text579.htm">[Prev]</A> <A  HREF = "text581.htm">[Right]</A> <A  HREF = "text579.htm">[Left]</A> <A  HREF = "text575.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "6125">Construction of Elements</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text580.htm#6132">Deconstruction of Elements</A>
<LI> <A  HREF = "text580.htm#6134">Operations on Module Elements</A>
<LI> <A  HREF = "text580.htm#6150">Properties of Vectors</A>
<LI> <A  HREF = "text580.htm#6155">Inner Products</A>
</UL>
<H5><A NAME = "6126">elt&lt; M | a<sub>1</sub>, ..., a<sub>n</sub> &gt; : ModTupRng, List -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given a module M with base module S<sup>(n)</sup>, and elements 
a<sub>1</sub>, ..., a<sub>n</sub> belonging to S, construct the element
m = (a<sub>1</sub>, ..., a<sub>n</sub>) of M. Note that if m is
not an element of M, an error will result.
</BLOCKQUOTE>
<H5><A NAME = "6127">M ! Q : ModTupRng, [RngElt] -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given the module M with base module S<sup>(n)</sup>, and elements 
a<sub>1</sub>, ..., a<sub>n</sub> belonging to S, construct the element 
m = (a<sub>1</sub>, ..., a<sub>n</sub>) of M. Note that if m is not an 
element of M, an error will result.
</BLOCKQUOTE>
<H5><A NAME = "6128">CharacteristicVector(M, S) : ModRng, { RngIntElt } -&gt; ModRngElt</A></H5>
<BLOCKQUOTE>
Given a submodule M of the module R<sup>(n)</sup> together with a set S 
of integers lying in the interval [1, n], return the characteristic 
number of S as a vector of R.
</BLOCKQUOTE>
<H5><A NAME = "6129">Zero(M) : ModRng -&gt; ModRngElt</A></H5>
<H5>M ! 0 : ModRng, RngIntElt -&gt; ModRngElt</H5>
<BLOCKQUOTE>
The zero element for the R-module M.
</BLOCKQUOTE>
<H5><A NAME = "6130">Random(M) : ModRng -&gt; ModRngElt</A></H5>
<BLOCKQUOTE>
Given a module M defined over a finite ring or field,
return a random vector.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6131">Example <TT>ModRng_Elements (H58E2)</TT></A></H3>
We create the module of 4-tuples over the polynomial ring 
Z[x] and define various elements.
<P>
<P>
<P>
<PRE>
&gt; P&lt;x&gt; := PolynomialRing(IntegerRing());
&gt; M := RModule(P, 4);
&gt; a := elt&lt; M | 1+x, -x, 2+x, 0 &gt;;
&gt; a;
(x + 1    -x x + 2     0)
&gt; b := M ! [ 1+x+x^2, 0, 1-x^7, 2*x ];
&gt; b;
(x^2 + x + 1           0    -x^7 + 1         2*x)
&gt; zero := M ! 0;
&gt; zero;
(0 0 0 0)
</PRE>
<HR>
<H4><A NAME = "6132">Deconstruction of Elements</A></H4>



<H5><A NAME = "6133">ElementToSequence(u) : ModTupRngElt -&gt; [RngElt]</A></H5>
<H5>Eltseq(u) : ModTupRngElt -&gt; [RngElt]</H5>
<BLOCKQUOTE>
Given an element u belonging to the R-module M, return u in 
the form of a sequence Q of elements of R. Thus, if u is an 
element of R<sup>(n)</sup>, then Q[i] = u[i], 1 &le;i &le;n, while if u is an 
element of R<sup>(m x n)</sup>, then Q[(i - 1)n + j] = u[i, j], 1 &le;i &le;m, 
1 &le;j &le;n.
</BLOCKQUOTE>
<H4><A NAME = "6134">Operations on Module Elements</A></H4>



<H5><A NAME = "6135">Arithmetic</A></H5>



<H5><A NAME = "6136">u + v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Sum of the elements u and v, where u and v lie in the same 
R-module M.
</BLOCKQUOTE>
<H5><A NAME = "6137">- u : ModTupRngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Additive inverse of the element u.
</BLOCKQUOTE>
<H5><A NAME = "6138">u - v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Difference of the elements u and v, where u and v lie in the 
same R-module M.
</BLOCKQUOTE>
<H5><A NAME = "6139">x * u : RngElt, ModTupRngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given an element x belonging to a ring R, and an element u 
belonging to the left R-module M, return the (left) scalar product 
x * u as an element of M.
</BLOCKQUOTE>
<H5><A NAME = "6140">u * x : ModTupRngElt, RngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given an element x belonging to a ring R, and an element u 
belonging to the right R-module M, return the (right) scalar product
u * x as an element of M.
</BLOCKQUOTE>
<H5><A NAME = "6141">u / x : ModTupRngElt, RngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given a non-zero element x belonging to a field K, and an element u 
belonging to the right K-module M, return the scalar product u * (1/x)
as an element of M.
</BLOCKQUOTE>
<H5><A NAME = "6142">Indexing</A></H5>



<H5><A NAME = "6143">u[i] : ModTupRngElt, RngIntElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an element u belonging to a submodule M of the R-module 
R<sup>(n)</sup> and a  positive integer i, 1 &le;i&le;n, return the 
i-th component of u (as an element of the ring R).
</BLOCKQUOTE>
<H5><A NAME = "6144">u[i] := x : ModTupRngElt, RngIntElt, RngElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given an element u belonging to a submodule M of the R-module 
T = R<sup>(n)</sup>, a positive integer i, 1 &le;i&le;n, and an 
element x of the ring R, redefine the i-th component of u 
to be x. The parent of u is changed to T (since the modified
element u need not lie in M).
</BLOCKQUOTE>
<H5><A NAME = "6145">Normalization</A></H5>



<H5><A NAME = "6146">Normalize(u) : ModTupRngElt -&gt; ModTupRngElt</A></H5>
<H5>Normalise(u) : ModTupRngElt -&gt; ModTupRngElt</H5>
<BLOCKQUOTE>
The element u must belong to an R-module, where R is either a field, 
the ring of integers or a univariate polynomial ring over a field. 
Assume that the vector u is non-zero. If R is a field then 
<TT>Normalize</TT> returns (1/a) * u, where a is the first non-zero 
component of u. If R is the ring of integers, <TT>Normalize</TT>
returns &epsilon; * u, where &epsilon; is +1 if the first non-zero
component of u is positive, and -1 otherwise. If R is the
polynomial ring K[x], K a field, then <TT>Normalize</TT> returns 
(1/a) * u, where a is the leading coefficient of the first 
non-zero (polynomial) component of u. 
If u is the zero vector, it is returned as the value of this function. 
</BLOCKQUOTE>
<H5><A NAME = "6147">Rotate(u, k) : ModTupRngElt, RngIntElt -&gt; ModTupRngElt</A></H5>
<BLOCKQUOTE>
Given a vector u, return the vector obtained from u by 
rotating by k coordinate positions.
</BLOCKQUOTE>
<H5><A NAME = "6148">Rotate(~u, k) : ModTupRngElt, RngIntElt -&gt;</A></H5>
<BLOCKQUOTE>
Given a vector u, destructively rotate u by k coordinate positions.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6149">Example <TT>ModRng_Operations (H58E3)</TT></A></H3>
We illustrate the use of the arithmetic operators for module
elements by applying them to elements of the module of 4-tuples over 
the polynomial ring Z[x]. 
<P>
<P>
<P>
<PRE>
&gt; P&lt;x&gt; := PolynomialRing(IntegerRing());
&gt; M := RModule(P, 4);
&gt; a :=  M ! [ 1+x, -x, 2+x, 0 ];
&gt; b := M ! [ 1+x+x^2, 0, 1-x^7, 2*x ];
&gt; a + b;
(x^2 + 2*x + 2    -x    -x^7 + x + 3    2*x)
&gt; -a;
(-x - 1      x -x - 2      0)
&gt; a - b;
(       -x^2          -x x^7 + x + 1        -2*x)
&gt; (1-x + x^2)*a;
(x^3 + 1    -x^3 + x^2 - x    x^3 + x^2 - x + 2    0)
&gt; a*(1-x);
(    -x^2 + 1      x^2 - x -x^2 - x + 2            0)
&gt; a[3];
x + 2
&gt; a[3] := x - 2;
&gt; a;
(x + 1    -x x - 2     0)
&gt; ElementToSequence(a - b);
[
    -x^2,
    -x,
    x^7 + x - 3,
    -2*x
]
&gt; Support(a);                                  
{ 1, 2, 3 }
</PRE>
<HR>
<H4><A NAME = "6150">Properties of Vectors</A></H4>



<H5><A NAME = "6151">IsZero(u) : ModTupRngElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the element u of the R-module M is the zero element.
</BLOCKQUOTE>
<H5><A NAME = "6152">Depth(v) : ModTupRngElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The index of the first non-zero entry of the vector v (0 if none such).
</BLOCKQUOTE>
<H5><A NAME = "6153">Support(u) : ModTupRngElt -&gt; { RngElt }</A></H5>
<BLOCKQUOTE>
A set of integers giving the positions of the non-zero components
of the vector u.
</BLOCKQUOTE>
<H5><A NAME = "6154">Weight(u) : ModTupRngElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The number of non-zero components of the vector u.
</BLOCKQUOTE>
<H4><A NAME = "6155">Inner Products</A></H4>



<H5><A NAME = "6156">(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt</A></H5>
<H5>InnerProduct(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt</H5>
<BLOCKQUOTE>
Return the inner product of the vectors u and v with respect to the inner
product defined on the space.  If an inner product matrix F is given
when the space is created, then this is defined to be
u.F.v<sup>tr</sup>.  Otherwise, this is simply u.v<sup>tr</sup>.
</BLOCKQUOTE>
<H5><A NAME = "6157">Norm(u) : ModTupRngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Return the norm product of the vector u with respect to the inner
product defined on the space.  If an inner product matrix F is given
when the space is created, then this is defined to be
u.F.u<sup>tr</sup>.  Otherwise, this is simply u.u<sup>tr</sup>.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text581.htm">[Next]</A><A  HREF = "text579.htm">[Prev]</A> <A  HREF = "text581.htm">[Right]</A> <A  HREF = "text579.htm">[Left]</A> <A  HREF = "text575.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>