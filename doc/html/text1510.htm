<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Jacobi Motive Examples</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1503.htm">[Next]</A><A  HREF = "text1509.htm">[Prev]</A> <A  HREF = "text1503.htm">[Right]</A> <A  HREF = "text1509.htm">[Left]</A> <A  HREF = "text1504.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17161">Jacobi Motive Examples</A></H3>



<HR>
<H3><A NAME = "17162">Example <TT>HypGeomMot_jacobi-motive-first-example (H132E11)</TT></A></H3>
<P>
Here are some simple examples of Jacobi motives.
The first involves the Fermat cubic, and various twists.
<P>
<P>
<P>
<PRE>
&gt; J := JacobiMotive([2/3,2/3],[1/3]); // CM elliptic curve conductor 27
&gt; Weight(J);
1
&gt; Field(J);
Number Field with defining polynomial y^2 - y + 1 over Q
&gt; P := PrimesInInterval(11,100);
&gt; E := EllipticCurve("27a");
&gt; &amp;and[EulerFactor(J,p) eq EulerFactor(E,p) : p in P];
true
&gt; K := KummerTwist(J, 2, 1/3); // twist by 2^(1/3)
&gt; Et := EllipticCurve("108a");
&gt; &amp;and[EulerFactor(K,p) eq EulerFactor(Et,p) : p in P];
true
&gt; K4 := KummerTwist(J, 4, 1/3); // twist by 4^(1/3)
&gt; E36 := EllipticCurve("36a");
&gt; &amp;and[EulerFactor(K4,p) eq EulerFactor(E36,p) : p in P];
true
&gt; K2 := KummerTwist(J, -2, 1/2); // quadratic twist by 2
&gt; Q := QuadraticTwist(E,-2);
&gt; &amp;and[EulerFactor(K2,p) eq EulerFactor(Q,p) : p in P];
true
</PRE>
<HR>
<H3><A NAME = "17163">Example <TT>HypGeomMot_jacobi-motive7 (H132E12)</TT></A></H3>
<P>
The next example is related to the Klein quartic and the elliptic
curves of conductor 49.
<P>
<P>
<P>
<PRE>
&gt; J := JacobiMotive([1/7,2/7,4/7]);
&gt; Scale(J,2) eq J; // scaling by 2 or 4 gives same motive
true
&gt; Field(J);
Number Field with defining polynomial y^2 - y + 2 over the Rational Field
&gt; Weight(J);
3
&gt; EffectiveWeight(J);
1
&gt; T := TateTwist(J,1); // this twist is weight 1
&gt; Weight(T);
1
&gt; P := PrimesInInterval(11,100);
&gt; E := EllipticCurve("49a");
&gt; &amp;and[EulerFactor(T,p) eq EulerFactor(E,p) : p in P];
true
&gt; Grossencharacter(J);
Grossencharacter of type [[ 1, 2 ]] for Hecke-Dirichlet pair (1,$.1)
with modulus of norm 7 over Number Field y^2 - y + 2
&gt; TateTwist($1,1);
Grossencharacter of type [[ 0, 1 ]] for Hecke-Dirichlet pair (1,$.1)
with modulus of norm 7 over Number Field y^2 - y + 2
</PRE>
<HR>
<H3><A NAME = "17164">Example <TT>HypGeomMot_jacobi-arith (H132E13)</TT></A></H3>
<P>
We next give an example with some tensor arithmetic.
<P>
<P>
<P>
<PRE>
&gt; J := JacobiMotive([1/3,1/3,1/3]); // weight 3, effective wt 1
&gt; J;
Jacobi motive given by 3*[1/3]
&gt; Grossencharacter(J);
Grossencharacter of type [[ 1, 2 ]] for Hecke-Dirichlet pair
(1,$.1*$.2^2) with modulus of norm 9 over Number Field y^2 - y + 1
&gt; J^3;
Jacobi motive given by 9*[1/3]
&gt; Grossencharacter(J^3); // norm 3
Grossencharacter of type [[ 3, 6 ]] for Hecke-Dirichlet pair
(1,$.1) with modulus of norm 3 over Number Field y^2 - y + 1
&gt; Grossencharacter(J^6); // norm 1
Grossencharacter of type [[ 6, 12 ]] for Hecke-Dirichlet pair
(1,1) with modulus of norm 1 over Number Field y^2 - y + 1
&gt; A := JacobiMotive([2/3,2/3],[1/3]);
&gt; J*A; // one of the 1/3 cancels
Jacobi motive given by 2*[1/3]+2*[2/3]
&gt; Grossencharacter(J*A); // trivial character
Tate twist by -2 of Hecke character 1 in Group of Hecke characters
of modulus of norm 1 over Number Field y - 1
&gt; K := KummerTwist(J*A, 3, 1/3); K;
Jacobi motive given by 2*[1/3]+2*[2/3] with Kummer twisting
parameters (t,rho)=(3,1/3)
&gt; Grossencharacter(K); // bad reduction at 3
Grossencharacter of type [[ 2, 2 ]] for Hecke-Dirichlet pair (1,1)
with modulus of norm 81 over Number Field y^2 - y + 1
&gt; K2 := KummerTwist(JacobiMotive([]),3,1/3); K2;
Unital Jacobi motive with Kummer twisting parameters (t,rho)=(3,1/3)
&gt; Grossencharacter(K2); // twist of the above
Grossencharacter of type [[ 0, 0 ]] for Hecke-Dirichlet pair
(1,$.1^2) with modulus of norm 81 over Number Field y^2 - y + 1
&gt; K/K2 eq J*A; // removing the Kummer twist from K, gives J*A
true
</PRE>
<HR>
<H3><A NAME = "17165">Example <TT>HypGeomMot_jacobi-same-overQ (H132E14)</TT></A></H3>
<P>
Here is an example with motives that are the same over (Q),
but not over (Q)(Sqrt( - 3)). One of the Gr&ouml;ssencharacters
is seen to agree with the Jacobi motive at prime ideals.
<P>
<P>
<P>
<PRE>
&gt; J := JacketMotive([], [], 2, 1/3, 0); J; // Field is Q(2^(1/3))
Unital Jacobi motive with Kummer twisting parameters (t,rho)=(2,1/3)
&gt; GR := Grossencharacter(J); GR;
Grossencharacter of type [[ 0, 0 ]] for Hecke-Dirichlet pair (1,$.1)
with modulus of norm 36 over Number Field y^2 - y + 1
&gt; ef := func&lt;G,p | EulerFactor(G,p : Integral)&gt;;
&gt; P := PrimesUpTo(100);
&gt; &amp;and[ef(GR,p) eq ef(GR2,p) where GR2:=GR^2 : p in P]; // same over Q
true
&gt; p7 := Ideal(Decomposition(Field(J),7)[1][1]); // norm 7, degree 1
&gt; GR(p7);
-0.499999999999999999999999999998 - 0.866025403784438646763723170754*i
&gt; (GR^2)(p7);
-0.500000000000000000000000000001 + 0.866025403784438646763723170752*i
&gt; ComplexEvaluation(J,p7); // same as GR, not GR^2
-0.499999999999999999999999999998 - 0.866025403784438646763723170754*i
&gt; PK := [p : p in PrimesUpTo(100,Field(J)) | Norm(p) ne 3];
&gt; Max([Norm(GR(p)-ComplexEvaluation(J,p)) : p in PK | Degree(p) eq 1]);
1.01121993374575362499804556062E-59
</PRE>
<HR>
<H3><A NAME = "17166">Example <TT>HypGeomMot_jacobi-relation-to-hypergeom (H132E15)</TT></A></H3>
<P>
Jacobi motives also can be used to determine the tame prime information
for a hypergeometric motive. It is easiest to write the hypergeometric
datum in its <TT>GammaList</TT> form when doing this. The appropriate
Kummer-Tate twist of the Jacobi motive gives the tame hypergeometric
Euler factor corresponding to trivialised inertia near t=0 or t=&infin;.
<P>
<P>
<P>
<PRE>

&gt; H := HypergeometricData([* 1,2,3,3,6, -5,-5,-5 *]); H;
Hypergeometric data given by [ 1, 1, 2, 2, 3, 3, 3, 6 ] and [ 5, 5, 5 ]
&gt; Weight(H);
3
&gt; POS := [x/5 : x in GammaList(H) | x ge 0];
&gt; NEG := [x/5 : x in GammaList(H) | x le 0];
&gt; J:=JacobiMotive(POS,NEG); J; // weight 5
Jacobi motive given by 2*[1/5]+[2/5]+2*[3/5]
&gt; p := 11; // check 5th powers for beta value
&gt; EulerFactor(H,1/p^5/MValue(H),p); // weight 3-2
121*x^4 + 11*x^3 - 9*x^2 + x + 1
&gt; EulerFactor(TateTwist(J,2),p); // weight 5-2*2
121*x^4 + 11*x^3 - 9*x^2 + x + 1
&gt; [EulerFactor(H,u/p^5/MValue(H),p) : u in [1..p-1]];
[
    121*x^4 + 11*x^3 - 9*x^2 + x + 1,
    121*x^4 + 121*x^3 + 51*x^2 + 11*x + 1,
    121*x^4 - 44*x^3 + 6*x^2 - 4*x + 1,
    121*x^4 - 99*x^3 + 41*x^2 - 9*x + 1,
    121*x^4 + 11*x^3 + 21*x^2 + x + 1,
    121*x^4 + 11*x^3 + 21*x^2 + x + 1,
    121*x^4 - 99*x^3 + 41*x^2 - 9*x + 1,
    121*x^4 - 44*x^3 + 6*x^2 - 4*x + 1,
    121*x^4 + 121*x^3 + 51*x^2 + 11*x + 1,
    121*x^4 + 11*x^3 - 9*x^2 + x + 1
]
&gt; [EulerFactor(JacketMotive(POS,NEG,u,1/5,2),p) : u in [1..p-1]];
[
    121*x^4 + 11*x^3 - 9*x^2 + x + 1,
    121*x^4 + 121*x^3 + 51*x^2 + 11*x + 1,
    121*x^4 - 44*x^3 + 6*x^2 - 4*x + 1,
    121*x^4 - 99*x^3 + 41*x^2 - 9*x + 1,
    121*x^4 + 11*x^3 + 21*x^2 + x + 1,
    121*x^4 + 11*x^3 + 21*x^2 + x + 1,
    121*x^4 - 99*x^3 + 41*x^2 - 9*x + 1,
    121*x^4 - 44*x^3 + 6*x^2 - 4*x + 1,
    121*x^4 + 121*x^3 + 51*x^2 + 11*x + 1,
    121*x^4 + 11*x^3 - 9*x^2 + x + 1
]
&gt; p := 31;
&gt; &amp;and[EulerFactor(H,u/p^5/MValue(H),p) eq
&gt;      EulerFactor(JacketMotive(POS,NEG,u,1/5,2),p) : u in [1..p-1]];
true
</PRE>
<P>
The same can be done for the &alpha; parameters, with positive
valuation in the t-values. Here there can be various contributions
depending which of the positive &gamma;-values (1,2,3,3,6) divide
the valuation.
<P>
<P>
<P>
<PRE>
&gt; p := 7; // again take a prime that is 1 mod 6
&gt; d := 6;
&gt; D := Divisors(d);
&gt; POS := [[x/e : x in GammaList(H) | x ge 0] : e in D];
&gt; NEG := [[-x/e : x in GammaList(H) | x le 0] : e in D];
&gt; A, B := CyclotomicData(H);
&gt; for e in D do e,Multiplicity(A cat B,e); end for;
1 2 // weight should be 3 + 1 - 2
2 2 // weight should be 3 + 1 - 2
3 3 // weight should be 3 + 1 - 3
6 1 // weight should be 3 + 1 - 1
&gt; EulerFactor(H,p^2/MValue(H),p);
49*x^2 - 14*x + 1
&gt; f1 := EulerFactor(JacobiMotive(POS[1],NEG[1] : Weight:=2),p);
&gt; f2 := EulerFactor(JacobiMotive(POS[2],NEG[2] : Weight:=2),p);
&gt; f1 * f2;
49*x^2 - 14*x + 1
&gt; function ef(t0,v) ans:=PolynomialRing(Integers())!1;
&gt;   for i in [1..#D] do
&gt;     e := D[i]; if Gcd(v,e) ne e then continue; end if;
&gt;     w := Weight(H)+1-Multiplicity(A cat B,e);
&gt;     J := JacobiMotive(POS[i],NEG[i] : Kummer:=[t0,1/e], Weight:=w);
&gt;     ans := ans*EulerFactor(J,p); end for;
&gt;   return ans; end function;
&gt; for i in [1..100] do v:=Random([1..12]); t0:=Random([1..p-1]);
&gt;   assert EulerFactor(H,t0*p^v/MValue(H),p) eq ef(t0,v); end for;
</PRE>
<PRE></PRE> <A  HREF = "text1503.htm">[Next]</A><A  HREF = "text1509.htm">[Prev]</A> <A  HREF = "text1503.htm">[Right]</A> <A  HREF = "text1509.htm">[Left]</A> <A  HREF = "text1504.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>