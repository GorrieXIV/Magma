<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Non-trivial Properties</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text277.htm">[Next]</A><A  HREF = "text275.htm">[Prev]</A> <A  HREF = "text277.htm">[Right]</A> <A  HREF = "text275.htm">[Left]</A> <A  HREF = "text265.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "2556">Non-trivial Properties</A></H3>

<P>
<P>
The following functions compute non-trivial properties of sparse matrices.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text276.htm#2557">Nullspace and Rowspace</A>
<LI> <A  HREF = "text276.htm#2562">Rank</A>
</UL>
<H4><A NAME = "2557">Nullspace and Rowspace</A></H4>

<P>
<P>
The following functions compute nullspaces (solving
equations of the form V.A=0) or rowspaces of sparse matrices.


<H5><A NAME = "2558">Nullspace(A) : MtrxSprs -&gt; ModTupRng</A></H5>
<H5>Kernel(A) : MtrxSprs -&gt; ModTupRng, Map</H5>
<BLOCKQUOTE>
Given an m x n sparse matrix A over a ring R, return the 
nullspace of A (or the kernel of A, considered as a linear 
transformation or map), which is the R-space consisting of all 
vectors v of length m such that v.A = 0.  Since the result
will be given in the dense representation, both the nullity of A 
and the number of rows of A must both be reasonably small.
<P>
The algorithm first performs sparse elimination using Markowitz 
pivoting (<A  HREF = "text264.htm#bib_SmatBook">[DEJ84, Sec. 9.2]</A>) to obtain a smaller dense 
matrix, then the nullspace algorithm for dense-representation
matrices is applied to this matrix.
</BLOCKQUOTE>
<H5><A NAME = "2559">NullspaceMatrix(A) : MtrxSprs -&gt; Mtrx</A></H5>
<H5>KernelMatrix(A) : MtrxSprs -&gt; Mtrx</H5>
<BLOCKQUOTE>
Given an m x n sparse matrix A over a ring R, return a
(dense-representation) basis matrix of the nullspace of A.  This is a
matrix N having m columns and the maximal number of independent
rows subject to the condition that N.A = 0.  This function has
the advantage that the nullspace is not returned as a R-space, so
echelonization of the resulting nullspace may be avoided.
</BLOCKQUOTE>
<H5><A NAME = "2560">NullspaceOfTranspose(A) : MtrxSprs -&gt; ModTupRng</A></H5>
<BLOCKQUOTE>
This function is equivalent to <TT>Nullspace(Transpose(A))</TT>, but
will be more efficient in space for large matrices, since the
transpose may not have to be explicitly constructed to compute
the nullspace.
</BLOCKQUOTE>
<H5><A NAME = "2561">Rowspace(A) : MtrxSprs -&gt; ModTupRng</A></H5>
<BLOCKQUOTE>
Given an m x n sparse matrix A over a ring R, return the 
rowspace of A, which is the R-space generated by the rows of A.
Since the result will be given in the dense representation,
the rank and the number of columns of A must both be reasonably small.
</BLOCKQUOTE>
<H4><A NAME = "2562">Rank</A></H4>



<H5><A NAME = "2563">Rank(A) : MtrxSprs -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given an m x n sparse matrix A over a ring R, return the rank
of A.
The algorithm first performs sparse elimination using Markowitz pivoting
(<A  HREF = "text264.htm#bib_SmatBook">[DEJ84, Sec. 9.2]</A>) to obtain a smaller dense matrix, then
the rank algorithm for dense-representation matrices is applied to 
this matrix.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text277.htm">[Next]</A><A  HREF = "text275.htm">[Prev]</A> <A  HREF = "text277.htm">[Right]</A> <A  HREF = "text275.htm">[Left]</A> <A  HREF = "text265.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>