<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Construction of Invariants of  Specified Degree</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1281.htm">[Next]</A><A  HREF = "text1279.htm">[Prev]</A> <A  HREF = "text1281.htm">[Right]</A> <A  HREF = "text1279.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "13970">Construction of Invariants of  Specified Degree</A></H3>

<P>
<P>
<P>
Let R=K[V]<sup>G</sup> be the invariant ring of the group G over the field K.
Let d &ge;0 be a fixed integer.  The homogeneous invariants in R of degree
d form a vector space R<sub>d</sub> over K.
<P>
There are two ways of explicitly constructing homogeneous invariants in R
of degree d: the <I>Reynolds operator</I> method and the <I>linear
algebra</I> method.  Both methods are described in detail in <A  HREF = "text1271.htm#bib_KemperSteel">[KS97]</A>.
<P>
The Reynolds operator method only works fro finite groups in the
non-modular case. It takes a monomial of degree d and yields either
the zero polynomial or a non-zero invariant of degree d.  By applying
it to several different monomials, a complete basis of R<sub>d</sub> can be
constructed.
If G is a permutation group, a simplified version of the Reynolds operator
can always be used which is independent of the field K (and thus
whether we are in the modular case or not).
<P>
The linear algebra method works in both the modular and
non-modular cases and, with appropriate modifications, also for linear
algebraic groups.  It simply finds a basis for R<sub>d</sub> in one step --
it is not possible to find a single invariant alone by this method.
<P>
Magma provides the function <TT>InvariantsOfDegree</TT> to automatically
compute a basis of R<sub>d</sub> by a default appropriate method -- the method
can also be selected by a parameter.
The function <TT>InvariantsOfDegree</TT> can also be given a positive integer
k which is less than or equal to the dimension of R<sub>d</sub>: in such a case,
only k linearly independent invariants are computed.
See also the functions <A  HREF = "text1206.htm#GB:MonomialsOfDegree">MonomialsOfDegree</A>
and <A  HREF = "text1206.htm#GB:MonomialsOfWeightedDegree">MonomialsOfWeightedDegree</A> in the Ideal Theory chapter.


<P>
<P>
The following sections <A  HREF = "text1281.htm#13977">Construction of G-modules</A> through <A  HREF = "text1288.htm#14009">Properties of Invariant Rings</A> all deal
with invariant rings of finite groups.
<H5><A NAME = "13971">ReynoldsOperator(f, G) : RngMPolElt, GrpMat -&gt; RngMPolElt</A></H5>
<BLOCKQUOTE>
Given a polynomial f and a matrix group G such that G can act on
f, return the application of the Reynolds operator of G to f.
(f need not be a monomial but may be a non-homogeneous polynomial.)
</BLOCKQUOTE>
<H5><A NAME = "13972">InvariantsOfDegree(R, d) : RngInvar, RngIntElt -&gt; [ RngMPolElt ]</A></H5>
<H5>InvariantsOfDegree(G, d) : GrpMat, RngIntElt -&gt; [ RngMPolElt ]</H5>
<H5>InvariantsOfDegree(G, K, d) : GrpPerm, Fld, RngIntElt -&gt; [ RngMPolElt ]</H5>
<H5>InvariantsOfDegree(G, P, d) : GrpMat, RngMPol, RngIntElt -&gt; [ RngMPolElt ]</H5>
<H5>InvariantsOfDegree(G, P, d) : GrpPerm, RngMPol, RngIntElt -&gt; [ RngMPolElt ]</H5>

<PRE>    Invariants: MonStgElt               Default: "Both"</PRE>
<BLOCKQUOTE>
Construct a K-basis of the space R<sub>d</sub> of the homogeneous invariants
of degree d in the invariant ring R=K[V]<sup>G</sup>
of the group G over the field K as a sequence of polynomials.
Either the invariant ring R, the group G (if a matrix group), or
the group G (if a permutation group) together with the field K
may be passed.  A specific polynomial ring P compatible with G and K
may be passed so that the returned invariants lie in P.
The parameter <TT>Invariants</TT> may be supplied to select the method of
the construction of the invariants: <TT>"Reynolds"</TT>
(use the Reynolds operator), <TT>"Linear"</TT> (use the linear algebra method),
or <TT>"Both"</TT> (use an appropriate combination of both methods).  The
default is <TT>"Both"</TT>.
</BLOCKQUOTE>
<H5><A NAME = "13973">InvariantsOfDegree(R, d, k) : RngInvar, RngIntElt, RngIntElt -&gt; [ RngMPolElt ]</A></H5>
<H5>InvariantsOfDegree(G, d, k) : GrpMat, RngIntElt, RngIntElt -&gt; [ RngMPolElt ]</H5>
<H5>InvariantsOfDegree(G, K, d, k) : GrpPerm, Fld, RngIntElt, RngIntElt -&gt; [ RngMPolElt ]</H5>
<H5>InvariantsOfDegree(G, P, d, k) : GrpPerm, RngMPol, RngIntElt, RngIntElt -&gt; [ RngMPolElt ]</H5>

<PRE>    Invariants: MonStgElt               Default: "Both"</PRE>
<BLOCKQUOTE>
Construct k linearly independent homogeneous invariants of degree d
in the invariant ring R=K[V]<sup>G</sup> of the group G over the field K as a
sequence of polynomials, where k must be greater than or equal to 1 and
less than or equal to the dimension of the space R<sub>d</sub>.
Either the invariant ring R, the group G (if a matrix group), or
the group G (if a permutation group) together with the field K
may be passed.  A specific polynomial ring P compatible with G and K
may be passed so that the returned invariants lie in P.
The parameter <TT>Invariants</TT> may be supplied to select the method of
the construction of the invariants -- see the last function.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13974">Example <TT>RngInvar_InvariantsOfDegree (H116E2)</TT></A></H3>
We demonstrate elementary uses of <TT>ReynoldsOperator</TT> and
<TT>InvariantsOfDegree</TT>.
<P>
<P>
<PRE>
&gt; K&lt;z&gt; := CyclotomicField(5);
&gt; w := -z^3 - z^2;
&gt; G := MatrixGroup&lt;3,K |
&gt;    [1,0,-w, 0,0,-1, 0,1,-w],
&gt;    [-1,-1,w, -w,0,w, -w,0,1]&gt;;
&gt; P&lt;x1,x2,x3&gt; := PolynomialRing(K, 3);
&gt; time ReynoldsOperator(x1^4, G);
(-z^3 - z^2 + 1)*x1^4 + (12/5*z^3 + 12/5*z^2 - 
    4/5)*x1^3*x2 + (12/5*z^3 + 12/5*z^2 - 4/5)*x1^3*x3 
    + (-14/5*z^3 - 14/5*z^2 + 14/5)*x1^2*x2^2 + 
    (4/5*z^3 + 4/5*z^2 + 4/5)*x1^2*x2*x3 + (-14/5*z^3 -
    14/5*z^2 + 14/5)*x1^2*x3^2 + (12/5*z^3 + 12/5*z^2 -
    4/5)*x1*x2^3 + (4/5*z^3 + 4/5*z^2 + 4/5)*x1*x2^2*x3
    + (4/5*z^3 + 4/5*z^2 + 4/5)*x1*x2*x3^2 + (12/5*z^3 
    + 12/5*z^2 - 4/5)*x1*x3^3 + (-z^3 - z^2 + 1)*x2^4 +
    (12/5*z^3 + 12/5*z^2 - 4/5)*x2^3*x3 + (-14/5*z^3 - 
    14/5*z^2 + 14/5)*x2^2*x3^2 + (12/5*z^3 + 12/5*z^2 -
    4/5)*x2*x3^3 + (-z^3 - z^2 + 1)*x3^4
Time: 0.090
&gt; time I20_1 := InvariantsOfDegree(G, 20, 1);
0.259
&gt; time I20 := InvariantsOfDegree(G, 20);
3.589
&gt; [LeadingMonomial(f): f in I20];
[
    x1^20,
    x1^18*x2^2,
    x1^16*x2^4,
    x1^15*x2^5,
    x1^14*x2^6,
    x1^13*x2^7,
    x1^12*x2^8
]
&gt; G := CyclicGroup(4);   
&gt; K := GF(2);
&gt; InvariantsOfDegree(G, K, 4);
[
    x1^4 + x2^4 + x3^4 + x4^4,
    x1^3*x2 + x1*x4^3 + x2^3*x3 + x3^3*x4,
    x1^3*x3 + x1*x3^3 + x2^3*x4 + x2*x4^3,
    x1^3*x4 + x1*x2^3 + x2*x3^3 + x3*x4^3,
    x1^2*x2^2 + x1^2*x4^2 + x2^2*x3^2 + x3^2*x4^2,
    x1^2*x2*x3 + x1*x2*x4^2 + x1*x3^2*x4 + x2^2*x3*x4,
    x1^2*x2*x4 + x1*x2^2*x3 + x1*x3*x4^2 + x2*x3^2*x4,
    x1^2*x3^2 + x2^2*x4^2,
    x1^2*x3*x4 + x1*x2^2*x4 + x1*x2*x3^2 + x2*x3*x4^2,
    x1*x2*x3*x4
]
</PRE>
<HR>
<H5><A NAME = "13975">SetAllInvariantsOfDegree(R, d, Q) : RngInvar, RngIntElt, [ RngMPolElt ] -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)
Given an invariant ring R=K[V]<sup>G</sup>, an integer d&ge;0, and a sequence
Q consisting of k degree-d homogeneous invariants of G,
set the internal list of all linearly-independent homogeneous invariants
of degree d of R to be Q.  Thus the elements of Q must describe
a basis of the space of all homogeneous invariants of degree d of R.
If the Hilbert Series of R is known, it will be used to check that
the length of Q (the dimension of the basis) is correct.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13976">Example <TT>RngInvar_InvariantsOfDegree (H116E3)</TT></A></H3>
We demonstrate a simple use of <TT>SetAllInvariantsOfDegree</TT>.
<P>
<P>
<PRE>
&gt; R := InvariantRing(CyclicGroup(4), GF(2));
&gt; P&lt;x1,x2,x3,x4&gt; := PolynomialRing(R);
&gt; L := [
&gt;     x1^2 + x2^2 + x3^2 + x4^2,
&gt;     x1*x2 + x1*x4 + x2*x3 + x3*x4,
&gt;     x1*x3 + x2*x4
&gt; ];
&gt; SetAllInvariantsOfDegree(R, 2, L);
&gt; InvariantsOfDegree(R, 2);
[
    x1^2 + x2^2 + x3^2 + x4^2,
    x1*x2 + x1*x4 + x2*x3 + x3*x4,
    x1*x3 + x2*x4
]
&gt; PrimaryInvariants(R);
[
    x1 + x2 + x3 + x4,
    x1*x2 + x1*x4 + x2*x3 + x3*x4,
    x1*x3 + x2*x4,
    x1*x2*x3*x4
]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1281.htm">[Next]</A><A  HREF = "text1279.htm">[Prev]</A> <A  HREF = "text1281.htm">[Right]</A> <A  HREF = "text1279.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>