<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Different Types of Scheme</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1326.htm">[Next]</A><A  HREF = "text1324.htm">[Prev]</A> <A  HREF = "text1326.htm">[Right]</A> <A  HREF = "text1324.htm">[Left]</A> <A  HREF = "text1321.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "14438">Different Types of Scheme</A></H3>

<P>
<P>
As discussed briefly in Section <A  HREF = "text1322.htm#14380">Aside: Types of Schemes</A>, there are a number of
different increasingly specialised data types for schemes.
It is often useful to check whether a given scheme can be thought
of as belonging to one of these more specialised classes, and if so
and appropriate then actually making the type change.
In this section we document a number of such type-checking and 
type-change intrinsics,
most of which are of the form <TT>IsSpecialisedType</TT>.
These intrinsics always return a boolean value. If that value is <TT>true</TT>
then they may also return a new scheme of the given specialised type,
although in some trivial cases this does not happen.
Of course, each of the different types of scheme has its own methods
of construction independently of these intrinsics.


<H5><A NAME = "14439">IsAffine(X) : Sch -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is an affine space.
</BLOCKQUOTE>
<H5><A NAME = "14440">IsProjective(X) : Sch -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is a projective space.
Projective space here includes the case of scrolls.
</BLOCKQUOTE>
<H5><A NAME = "14441">IsOrdinaryProjectiveSpace(X) : Sch -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is a projective space in the usual sense: its
coordinate ring has a single grading in which all the variables have
weight one.
</BLOCKQUOTE>
<H5><A NAME = "14442">IsAmbient(X) : Sch -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if the scheme X is an ambient space.
</BLOCKQUOTE>
<H5><A NAME = "14443">IsCluster(X) : Sch -&gt; BoolElt,Clstr</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is a zero-dimensional scheme (but not the empty scheme).
See Section <A  HREF = "text1329.htm#14513">Zero-dimensional Schemes</A> for intrinsics which apply to clusters.
</BLOCKQUOTE>
<H5><A NAME = "14444">IsCurve(X) : Sch -&gt; BoolElt,Crv</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if X is a one-dimensional scheme.
See Chapter <A  HREF = "text1356.htm#14904">ALGEBRAIC CURVES</A> for intrinsics which apply to curves.
</BLOCKQUOTE>
<H5><A NAME = "14445">IsPlaneCurve(X) : Sch -&gt; BoolElt, CrvPln</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if X is a one-dimensional scheme 
defined by a single equation in a two-dimensional ambient space.
</BLOCKQUOTE>
<H5><A NAME = "14446">IsConic(X) : Sch -&gt; BoolElt,CrvCon</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is a curve (in the sense of <TT>IsCurve(X)</TT>)
which is nonsingular and defined by an equation of degree 2.
See Chapter <A  HREF = "text1415.htm#16006">RATIONAL CURVES AND CONICS</A> for intrinsics which apply to such conics.
</BLOCKQUOTE>
<H5><A NAME = "14447">IsRationalCurve(X) : Sch -&gt; BoolElt,CrvRat</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the scheme X is a curve (in the sense of <TT>IsCurve(X)</TT>)
which has genus 0.
See Chapter <A  HREF = "text1415.htm#16006">RATIONAL CURVES AND CONICS</A> for intrinsics which apply to rational curves.
</BLOCKQUOTE>
<H5><A NAME = "14448">IsHyperellipticCurve(X) : Sch -&gt; BoolElt,CrvHyp</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> and a hyperelliptic curve if the scheme X is <I>trivially</I> a hyperelliptic 
curve. This occurs if and only if X is already of <TT>CrvHyp</TT> type or is defined by a non-singular Weierstrass equation in correctly weighted two-dimensional projective
space. For a general scheme of type <TT>Crv</TT>, the intrinsic <A  HREF = "text1361.htm#Crv:isHyp">IsHyperelliptic</A>
in Chapter <A  HREF = "text1356.htm#14904">ALGEBRAIC CURVES</A> will determine whether X is isomorphic to a
hyperelliptic curve and return an isomorphism to a <TT>CrvHyp</TT> if so. This takes
a lot more work in general. See Chapter <A  HREF = "text1483.htm#16729">HYPERELLIPTIC CURVES</A> for more information on hyperelliptic curves.
<P>
</BLOCKQUOTE>
<H5><A NAME = "14449">IsModularCurve(X) : Sch -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> if and only if the scheme X is a curve of type <TT>CrvMod</TT>.
See Chapter <A  HREF = "text1526.htm#17300">MODULAR CURVES</A> for more information on modular curves.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1326.htm">[Next]</A><A  HREF = "text1324.htm">[Prev]</A> <A  HREF = "text1326.htm">[Right]</A> <A  HREF = "text1324.htm">[Left]</A> <A  HREF = "text1321.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>