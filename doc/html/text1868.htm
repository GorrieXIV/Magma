<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>New Codes from Old</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1869.htm">[Next]</A><A  HREF = "text1867.htm">[Prev]</A> <A  HREF = "text1869.htm">[Right]</A> <A  HREF = "text1867.htm">[Left]</A> <A  HREF = "text1862.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "20781">New Codes from Old</A></H3>

<P>
<P>
The operations described here produce a new code by modifying
in some way the code words of a given code.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1868.htm#20782">Sum, Intersection and Dual</A>
<LI> <A  HREF = "text1868.htm#20787">Standard Constructions</A>
</UL>
<H4><A NAME = "20782">Sum, Intersection and Dual</A></H4>

<P>
<P>
For the following operators, C and D are codes defined as subsets
(or subspaces) of the same R-space V.


<H5><A NAME = "20783">C + D : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
The (vector space) sum of the linear codes C and D, where C
and D are contained in the same R-space V.
</BLOCKQUOTE>
<H5><A NAME = "20784">C meet D : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
The intersection of the linear codes C and D, where C
and D are contained in the same R-space V.
</BLOCKQUOTE>
<H5><A NAME = "20785">Dual(C) : Code -&gt; Code</A></H5>
<BLOCKQUOTE>
The dual D of the linear code C.  The dual consists of all codewords
in the R-space V which are orthogonal to all codewords of C.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "20786">Example <TT>CodeRng_SumIntersection (H161E9)</TT></A></H3>
Verify some simple results from the sum and intersection of subcodes.
<P>
<P>
<P>
<PRE>
&gt; R&lt;w&gt; := GR(9,2);
&gt; P&lt;x&gt; := PolynomialRing(R);
&gt; g := x^2 + 7*w*x + 1;
&gt; C := CyclicCode(5, g);
&gt; C;
(5, 43046721) Cyclic Code over GaloisRing(3, 2, 2)
Generator matrix:
[  1   0   0   1   w]
[  0   1   0 2*w 2*w]
[  0   0   1   w   1]
[  0   0   0   3   0]
[  0   0   0   0   3]
&gt; 
&gt; C1 := sub&lt; C | C.1 &gt;;
&gt; C1;
(5, 81, 3) Linear Code over GaloisRing(3, 2, 2)
Generator matrix:
[1 0 0 1 w]
&gt; C2 := sub&lt; C | C.4 &gt;;
&gt; C2;
(5, 9, 1) Linear Code over GaloisRing(3, 2, 2)
Generator matrix:
[0 0 0 3 0]
&gt; C3 := sub&lt; C | { C.1 , C.4} &gt;;
&gt; C3;
(5, 729, 1) Linear Code over GaloisRing(3, 2, 2)
Generator matrix:
[1 0 0 1 w]
[0 0 0 3 0]
&gt; (C1 + C2) eq C3;
true
&gt; (C1 meet C3) eq C1;
true
</PRE>
<HR>
<H4><A NAME = "20787">Standard Constructions</A></H4>



<H5><A NAME = "20788">DirectSum(C, D) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n<sub>1</sub> code C and a length n<sub>2</sub> code
D, both over the same ring R, construct the direct sum of
C and D. The direct sum consists of all length n<sub>1</sub> + n<sub>2</sub> vectors 
u|v, where
u &isin;C and v &isin;D.
</BLOCKQUOTE>
<H5><A NAME = "20789">DirectProduct(C, D) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n<sub>1</sub> code C and a length n<sub>2</sub> code
D, both over the same ring R, construct the direct product of
C and D. The direct product has length n<sub>1</sub>.n<sub>2</sub> and its
generator matrix is the Kronecker product of the basis matrices
of C and D.
</BLOCKQUOTE>
<H5><A NAME = "20790">C1 cat C2 : Code,Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given codes C1 and C2, both defined over the same ring R,
return the concatenation C of C1 and C2. If A and B are the
generator matrices of C1 and C2, respectively, the concatenation
of C1 and C2 is the code with generator matrix whose rows consist
of each row of A concatenated with each row of B.
</BLOCKQUOTE>
<H5><A NAME = "20791">ExtendCode(C) : Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n code C
form a new code C' from C by adding the appropriate extra coordinate
to each vector of C such that the sum of the coordinates of the extended
vector is zero.
</BLOCKQUOTE>
<H5><A NAME = "20792">ExtendCode(C, n) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Return the code C extended n times.
</BLOCKQUOTE>
<H5><A NAME = "20793">PadCode(C, n) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Add n zeros to the end of each codeword of C.
</BLOCKQUOTE>
<H5><A NAME = "20794">PlotkinSum(C, D) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given codes C and D both over the same ring R and of the same length n, 
construct the Plotkin sum of C and D.
The Plotkin sum consists of all vectors u|u + v, 
u &isin;C and v &isin;D.
</BLOCKQUOTE>
<H5><A NAME = "20795">PunctureCode(C, i) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n code C, and an integer i,
1 &le;i &le;n, construct a new code C' by deleting
the i-th coordinate from each code word of C.
</BLOCKQUOTE>
<H5><A NAME = "20796">PunctureCode(C, S) : Code, { RngIntElt } -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n code C and a set S of distinct integers
{ i<sub>1</sub>, ..., i<sub>r</sub> } each of which lies in the range [1, n],
construct a new code C' by deleting the components
i<sub>1</sub>, ..., i<sub>r</sub> from each code word of C.
</BLOCKQUOTE>
<H5><A NAME = "20797">ShortenCode(C, i) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n code C and an integer i,
1 &le;i &le;n, construct a new code from C by selecting
only those codewords of C having a zero as their i-th    
component and deleting the i-th component from these
codewords.  Thus, the resulting code will have length n - 1.
</BLOCKQUOTE>
<H5><A NAME = "20798">ShortenCode(C, S) : Code, { RngIntElt } -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a length n code C and a set S of distinct integers
{ i<sub>1</sub>, ..., i<sub>r</sub>}, each of which lies in the range [1, n],
construct a new code from C by selecting only those codewords
of C having zeros in each of the coordinate positions
i<sub>1</sub>, ..., i<sub>r</sub>, and deleting these components. Thus, the 
resulting code will have length n - r.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "20799">Example <TT>CodeRng_lengths (H161E10)</TT></A></H3>
We combine codes in various ways and look at the length of the
new code.
<P>
<P>
<PRE>
&gt; R&lt;w&gt; := GR(8,2);
&gt; C1 := RandomLinearCode(R, 4, 2);
&gt; C2 := RandomLinearCode(R, 5, 3);
&gt; Length(C1);
4
&gt; Length(C2);
5
&gt; C3 := DirectSum(C1, C2);
&gt; Length(C3);
9
&gt; C4 := DirectProduct(C1, C2);
&gt; Length(C4);
20
&gt; C5 := C1 cat C2;
&gt; Length(C5);
9
</PRE>
<HR>
<H3><A NAME = "20800">Example <TT>CodeRng_punct-z4 (H161E11)</TT></A></H3>
We note that, in general, puncturing a code over Z<sub>4</sub> reduces the minimum Lee
distance by 2.
<P>
<P>
<PRE>
&gt; C := PreparataCode(3);
&gt; C;
(8, 256, 4) Linear Code over IntegerRing(4)
Generator matrix:
[1 0 0 0 3 1 2 1]
[0 1 0 0 2 1 1 3]
[0 0 1 0 1 1 3 2]
[0 0 0 1 3 2 3 3]
&gt; MinimumLeeWeight(C);
6
&gt; C1 := PunctureCode(C,8);
&gt; C1;
(7, 256, 3) Linear Code over IntegerRing(4)
Generator matrix:
[1 0 0 0 3 1 2]
[0 1 0 0 2 1 1]
[0 0 1 0 1 1 3]
[0 0 0 1 3 2 3]
&gt; MinimumLeeWeight(C1);
4
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1869.htm">[Next]</A><A  HREF = "text1867.htm">[Prev]</A> <A  HREF = "text1869.htm">[Right]</A> <A  HREF = "text1867.htm">[Left]</A> <A  HREF = "text1862.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>