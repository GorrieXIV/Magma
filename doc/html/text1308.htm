<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Element Operations on Differential Operators</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1309.htm">[Next]</A><A  HREF = "text1307.htm">[Prev]</A> <A  HREF = "text1309.htm">[Right]</A> <A  HREF = "text1307.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "14233">Element Operations on Differential Operators</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1308.htm#14234">Category and Parent</A>
<LI> <A  HREF = "text1308.htm#14237">Arithmetic</A>
<LI> <A  HREF = "text1308.htm#14244">Predicates and Booleans</A>
<LI> <A  HREF = "text1308.htm#14252">Coefficients and Terms</A>
<LI> <A  HREF = "text1308.htm#14259">Order and Degree</A>
<LI> <A  HREF = "text1308.htm#14263">Related Differential Operators</A>
<LI> <A  HREF = "text1308.htm#14270">Application of Operators</A>
</UL>
<H4><A NAME = "14234">Category and Parent</A></H4>



<H5><A NAME = "14235">Category(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>Type(L) : RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
The category, or type, of the differential operator L.
</BLOCKQUOTE>
<H5><A NAME = "14236">Parent(L) : RngDiffOpElt -&gt; RngDiffOp</A></H5>
<BLOCKQUOTE>
The parent of the differential operator L.
</BLOCKQUOTE>
<H4><A NAME = "14237">Arithmetic</A></H4>

<P>
<P>
<P>
All the usual arithmetic operations are possible for differential 
operators.
It follows from the multiplication rule for differential operators
that the multiplication of differential operators is non--commutative.


<H5><A NAME = "14238">s + t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>s + t : RngDiffOpElt, RngElt -&gt; RngDiffOpElt</H5>
<H5>s + t : RngElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
The sum of the two differential operators s and t.
</BLOCKQUOTE>
<H5><A NAME = "14239">- s : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
The negation of the differential operator s.
</BLOCKQUOTE>
<H5><A NAME = "14240">s - t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>s - t : RngDiffOpElt, RngElt -&gt; RngDiffOpElt</H5>
<H5>s - t : RngElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
The difference between the differential operators s and t.
</BLOCKQUOTE>
<H5><A NAME = "14241">s * t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>s * t : RngDiffOpElt, RngElt -&gt; RngDiffOpElt</H5>
<H5>s * t : RngElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
The product of the differential operators s and t.
</BLOCKQUOTE>
<H5><A NAME = "14242">s ^ n : RngDiffOpElt, RngIntElt -&gt; RngDiffElt</A></H5>
<BLOCKQUOTE>
Given a differential operator s and an integer n&ge;0, 
return the n-th power of s. 
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14243">Example <TT>RngDiff_diff-op-arithmetic (H117E39)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; (z*D-1)*(D+1);
z*D^2 + (z - 1)*D + -1
&gt; (D+1)*(z*D-1);
z*D^2 + z*D + -1
&gt; (D-1/z)^2;
D^2 + -2/z*D + 2/z^2
</PRE>
<HR>
<H4><A NAME = "14244">Predicates and Booleans</A></H4>



<H5><A NAME = "14245">s eq t : RngDiffOpElt, RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> iff the differential operators s and t are 
exactly the same.
</BLOCKQUOTE>
<H5><A NAME = "14246">IsZero(L) : RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> iff the differential operator L is the zero 
element of its parent.
</BLOCKQUOTE>
<H5><A NAME = "14247">IsOne(L) : RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> iff the differential operator L is the unity 
element of its parent.
</BLOCKQUOTE>
<H5><A NAME = "14248">IsMonic(L) : RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Return <TT>true</TT> iff the differential operator L is monic.
</BLOCKQUOTE>
<H5><A NAME = "14249">IsWeaklyEqual(L, P) : RngDiffOpElt, RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the differential operator L 
is weakly equal to the operator P.
This means that the i-th coefficients of L and P should be weakly
equal to each other for every  i &isin;[0..max(deg(L), deg(P))].
</BLOCKQUOTE>
<H5><A NAME = "14250">IsWeaklyZero(L) : RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the differential operator L&isin;R 
is weakly equal to R ! 0.
</BLOCKQUOTE>
<H5><A NAME = "14251">IsWeaklyMonic(L) : RngDiffOpElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the leading coefficient of 
the differential operator L is weakly equal to 1.
</BLOCKQUOTE>
<H4><A NAME = "14252">Coefficients and Terms</A></H4>

<P>
<P>
<P>
Differential operators look like univariate polynomials with coefficients
in a differential ring.
Some of the terminology used for polynomial rings is mimicked for 
differential operators.


<H5><A NAME = "14253">Eltseq(L) : RngDiffOpElt -&gt; SeqEnum</A></H5>
<H5>Coefficients(L) : RngDiffOpElt -&gt; SeqEnum</H5>
<BLOCKQUOTE>
Given an operator L with coefficients in R, this function returns
the sequence of elements in R, that are the coefficients of L.
The sequence is ordered from the constant coefficient to the
coefficient of the highest order term of L. 
</BLOCKQUOTE>
<H5><A NAME = "14254">Coefficient(L, i) : RngDiffOpElt, RngIntElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an operator L with coefficients in R, this function returns
the coefficient of the monomial of degree i in L, as an element
of R. 
</BLOCKQUOTE>
<H5><A NAME = "14255">LeadingCoefficient(L) : RngDiffOpElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an operator L with coefficients in R, this function returns the
coefficient of the highest order term of L. 
</BLOCKQUOTE>
<H5><A NAME = "14256">LeadingTerm(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
The leading term of the differential operator L.
</BLOCKQUOTE>
<H5><A NAME = "14257">Terms(L) : RngDiffOpElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Given an operator L with coefficients in R, this function returns
the sequence of non--zero coefficients of L as elements of R.
The sequence is ordered from the lowest order term to the
highest order term in L. 
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14258">Example <TT>RngDiff_diff-op-coeff-terms (H117E40)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; L := D^3  + (-4*z + 5)*D + (3*z - 4);
&gt; L;
D^3 + (-4*z + 5)*D + 3*z - 4
&gt; Eltseq(L);
[ 3*z - 4, -4*z + 5, 0, 1 ]
&gt; LeadingTerm(L);
D^3
&gt; Terms(L);
[
    3*z - 4,
    (-4*z + 5)*D,
    D^3
]
</PRE>
<HR>
<H4><A NAME = "14259">Order and Degree</A></H4>



<H5><A NAME = "14260">Order(L) : RngDiffOpElt -&gt; RngIntElt</A></H5>
<H5>Degree(L) : RngDiffOpElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Returns the order of the differential operator L.
In the case that L is identically 0, the order is defined to be -1. 
</BLOCKQUOTE>
<H5><A NAME = "14261">WeakOrder(L) : RngDiffOpElt -&gt; RngIntElt</A></H5>
<H5>WeakDegree(L) : RngDiffOpElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
If the differential operator L is defined over a differential series ring, 
then 
the exponent of the highest coefficient of L that is not weakly 0 is returned.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14262">Example <TT>RngDiff_example-booleans-degrees-diff-ops (H117E41)</TT></A></H3>
<P>
<P>
<PRE>
&gt; S&lt;t&gt; := DifferentialLaurentSeriesRing(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(S);
&gt; L := D^2 + 2*t;
&gt; P := O(t)*D^3 + (1+O(t))*D^2  + 2*t;
&gt; Order(L);
2
&gt; Degree(P);
3
&gt; L eq P;
false
&gt; IsWeaklyEqual(L,P);
true
&gt; WeakOrder(P);
2
</PRE>
<HR>
<H4><A NAME = "14263">Related Differential Operators</A></H4>



<H5><A NAME = "14264">MonicDifferentialOperator(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given the differential operator L, this function returns
the monic differential operator 1/c.L, where c
is the leading coefficient of L. 
</BLOCKQUOTE>
<H5><A NAME = "14265">Adjoint(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Returns the formal adjoint of the differential operator L. 
The <I>formal adjoint</I> of L=&sum;<sub>i=0</sub><sup>n</sup> a<sub>i</sub>D<sup>i</sup> in the differential
operator ring R=F[D] over F, is the differential 
operator L<sup> * </sup>:=&sum;<sub>i=0</sub><sup>n</sup> ( - 1)<sup>i</sup>D<sup>i</sup> * a<sub>i</sub>&isin;R.
It follows from the definition that the orders of L and L<sup> * </sup> are the same
and that the leading coefficient of L<sup> * </sup> is ( - 1)<sup>n</sup> a<sub>n</sub>.
</BLOCKQUOTE>
<H5><A NAME = "14266">Translation(L, e) : RngDiffOpElt, RngElt -&gt; RngDiffOpElt, Map</A></H5>
<BLOCKQUOTE>
If R is the parent of the differential operator L and e is a suitable ring element, 
then the operator in R 
obtained by replacing R.1 by R.1 + e in L is returned.
The second argument returned is the translation map on R by e.
</BLOCKQUOTE>
<H5><A NAME = "14267">TruncateCoefficients(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
If L is defined over a differential series ring, then returned is the 
operator whose coefficients are the truncations of the coefficients of L.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14268">Example <TT>RngDiff_related-diff-op (H117E42)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; L := z*D^3  + (-4*z + 5)*D + (3*z - 4);
&gt; Order(L);
3
&gt; MonicDifferentialOperator(L);
D^3 + (-4*z + 5)/z*D + (3*z - 4)/z
&gt; Adjoint(L);
-z*D^3 + -3*D^2 + (4*z - 5)*D + 3*z
&gt; trans, mp := Translation(L, 2); 
&gt; trans;
z*D^3 + 6*z*D^2 + (8*z + 5)*D + 3*z + 6
</PRE>
<HR>
<H3><A NAME = "14269">Example <TT>RngDiff_related-diff-op-truncate-coefficients (H117E43)</TT></A></H3>
<P>
<P>
<PRE>
&gt; S&lt;t&gt; := DifferentialLaurentSeriesRing(Rationals());
&gt; RS&lt;DS&gt; := DifferentialOperatorRing(S);
&gt; L := (5-O(t))*DS^3+(2*t^-1+t^2+O(t^4))*DS - t^-2+t+O(t^3);
&gt; L;
(5 + O(t))*DS^3 + (2*t^-1 + t^2 + O(t^4))*DS + -t^-2 + t + O(t^3)
&gt; TruncateCoefficients(L);
5*DS^3 + (2*t^-1 + t^2)*DS + -t^-2 + t
&gt; L -TruncateCoefficients(L);
O(t)*DS^3 + O(t^4)*DS + O(t^3)
</PRE>
<HR>
<H4><A NAME = "14270">Application of Operators</A></H4>

<P>
<P>
<P>
As pointed out in the introduction a differential operator
L=a<sub>n</sub>D<sup>n</sup> + a<sub>n - 1</sub>D<sup>n - 1</sup> + ... + a<sub>1</sub>D + a<sub>0</sub> in F[D]
leads to the differential equation L(y)=0 given by
 L(y)=a<sub>n</sub> &delta;<sub>F</sub><sup>n</sup>(y) + a<sub>n - 1</sub> &delta;<sub>F</sub><sup>n - 1</sup>(y) + ... + a<sub>1</sub> &delta;<sub>F</sub>(y) + a<sub>0</sub> y
This notation is formal, but also defines an action of L on any element
y&isin;F.
The function <TT>Apply</TT> returns the ring element obtained by this action.


<H5><A NAME = "14271">Apply(L, f) : RngDiffOpElt, RngElt -&gt; RngElt</A></H5>
<H5>L(f) : RngElt, RngDiffOpElt -&gt; RngElt</H5>
<H5>f @ L : RngElt, RngDiffOpElt -&gt; RngElt</H5>
<BLOCKQUOTE>
Given a differential operator L and a ring element f,
return the ring element obtained after applying
L to f, as an element of the base ring of L.
The element f must be coercible into the
base ring of L.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14272">Example <TT>RngDiff_example-apply (H117E44)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; L := D^2-2/z^2;
&gt; Apply(L, z);
-2/z
&gt; L(z);
-2/z
&gt; Apply(L, z^2);
0
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1309.htm">[Next]</A><A  HREF = "text1307.htm">[Prev]</A> <A  HREF = "text1309.htm">[Right]</A> <A  HREF = "text1307.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>