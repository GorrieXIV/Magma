<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Exporting Tensors</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text607.htm">[Next]</A><A  HREF = "text605.htm">[Prev]</A> <A  HREF = "text607.htm">[Right]</A> <A  HREF = "text605.htm">[Left]</A> <A  HREF = "text603.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "6497">Exporting Tensors</A></H3>

<P>
<P>
<P>
Tensors can be used to define algebraic structures such as groups and algebras.


<H5><A NAME = "6498">HeisenbergAlgebra(B) : TenSpcElt -&gt; AlgGen</A></H5>
<BLOCKQUOTE>
Returns the Heisenberg algebra A induced by the bilinear tensor B. If B=<IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> : 
U x V &#8611; W is a bilinear map of K-vector spaces, and U, V, and 
W are isomorphic, then A is the algebra over U with the given product. 
If 
U and V are isomorphic but not with W, then A is the algebra over 
U direct-sum W with the given product. If U is not isomorphic to V, then it 
creates a new bilinear map <IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7>:(U direct-sum V) x (U direct-sum V) &#8611; W, 
where 
 (u, v)<IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7> (u', v') = u<IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> v'. 
</BLOCKQUOTE>
<H5><A NAME = "6499">HeisenbergLieAlgebra(B) : TenSpcElt -&gt; AlgLie</A></H5>
<BLOCKQUOTE>
Returns the Heisenberg Lie algebra with Lie bracket given by the alternating 
bilinear tensor induced by B.
</BLOCKQUOTE>
<H5><A NAME = "6500">HeisenbergGroup(B) : TenSpcElt -&gt; GrpPC</A></H5>
<BLOCKQUOTE>
Returns the class 2, exponent p, Heisenberg p-group with commutator given 
by the alternating bilinear tensor induced by B. 
This uses the <TT>pQuotient</TT> functions to convert a finitely presented group into a polycyclic group.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6501">Example <TT>Multilinear_Ten_Heisenberg (H61E19)</TT></A></H3>
<P>
<P>
<PRE>
&gt; T := RandomTensor(GF(3),[10,10,4]);
&gt; V := Domain(T)[1];
&gt; V.1*T*V.2;
(0 0 1 0)
&gt; A := HeisenbergAlgebra(T);
&gt; A;
Algebra of dimension 14 with base ring GF(3)
&gt; A.1*A.2;
(0 0 0 0 0 0 0 0 0 0 0 0 1 0)
</PRE>
Now we create the Lie algebra. 
The tensor T is not alternating, so it will induce an alternating tensor form which to create the Lie algebra.
<P>
<P>
<PRE>
&gt; L := HeisenbergLieAlgebra(T);
&gt; L.1*L.2;
(0 0 0 0 0 0 0 0 0 0 2 0 1 0)
&gt; T2 := AlternatingTensor(T);
&gt; V.1*T2*V.2;
(2 0 1 0)
</PRE>
Now we create the Heisenberg 3-group G from T.
Because this algorithm uses the p-quotient algorithms, the commutator on G will not be identical to the induced alternating tensor T<sub>2</sub>. 
Instead, it will be pseudo-isometric to the T<sub>2</sub>.
<P>
<P>
<PRE>
&gt; G := HeisenbergGroup(T);  
&gt; (G.2,G.1);  // Defining word for 1st gen in Frattini
G.11
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text607.htm">[Next]</A><A  HREF = "text605.htm">[Prev]</A> <A  HREF = "text607.htm">[Right]</A> <A  HREF = "text605.htm">[Left]</A> <A  HREF = "text603.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>