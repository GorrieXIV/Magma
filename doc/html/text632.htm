<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Elementary Properties of a  Group</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text633.htm">[Next]</A><A  HREF = "text631.htm">[Prev]</A> <A  HREF = "text633.htm">[Right]</A> <A  HREF = "text631.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "6895">Elementary Properties of a  Group</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text632.htm#6896">Accessing Group Information</A>
<LI> <A  HREF = "text632.htm#6907">Group Order</A>
<LI> <A  HREF = "text632.htm#6910">Abstract Properties of a Group</A>
</UL>
<H4><A NAME = "6896">Accessing Group Information</A></H4>

<P>
<P>
The functions in this group provide access to basic information stored 
for a permutation group G.


<P>
<P>
<P>
<H5><A NAME = "6897">G . i : GrpPerm, RngIntElt -&gt; GrpPermElt</A></H5>
<BLOCKQUOTE>
The i-th defining generator for G. A negative subscript indicates
that the inverse of the generator is to be created. The identity
element of G will be created by <TT>G.0</TT>.
</BLOCKQUOTE>
<H5><A NAME = "6898">Degree(G) : GrpPermElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The degree of the permutation group G.
</BLOCKQUOTE>
<H5><A NAME = "6899">Generators(G) : GrpPerm -&gt; { GrpPermElt }</A></H5>
<BLOCKQUOTE>
A set of elements of G that generate G.
</BLOCKQUOTE>
<H5><A NAME = "6900"></A><A NAME = "GrpPerm:GeneratorsSequence">GeneratorsSequence</A>(G) : GrpPerm -&gt; [ GrpPermElt ]</H5>
<BLOCKQUOTE>
The sequence of elements used to define the group G. Any 
occurrences of the identity element or any repetitions of
a generator, as removed by <TT>Generators(G)</TT>, are retained
in this sequence.  This function has the same effect as the
expression <TT>[G.i : i in [1..Ngens(G)]] </TT>.
</BLOCKQUOTE>
<H5><A NAME = "6901">NumberOfGenerators(G) : GrpPerm -&gt; RngIntElt</A></H5>
<H5>Ngens(G) : GrpPerm -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The number of defining generators for G.
</BLOCKQUOTE>
<H5><A NAME = "6902">FewGenerators(G) : GrpPerm -&gt; [GrpPermElt]</A></H5>
<BLOCKQUOTE>
A typically short sequence of random elements generating the group. 
Especially when groups are generated as subgroups, the result
of <TT>FewGenerators</TT> is a much shorter sequence than returned by
<A  HREF = "text632.htm#GrpPerm:GeneratorsSequence">GeneratorsSequence</A>.
</BLOCKQUOTE>
<H5><A NAME = "6903">Generic(G) : GrpPerm -&gt; GrpPerm</A></H5>
<BLOCKQUOTE>
The generic group containing G, i.e. the symmetric group in which G
is naturally embedded.
</BLOCKQUOTE>
<H5><A NAME = "6904">Parent(g) : GrpPermElt -&gt; GrpPerm</A></H5>
<BLOCKQUOTE>
The parent group G for the permutation g.
</BLOCKQUOTE>
<H5><A NAME = "6905">GSet(G) : GrpPerm -&gt; GSet</A></H5>
<BLOCKQUOTE>
The natural G-set for the permutation group G.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6906">Example <TT>GrpPerm_BasicAccess (H63E4)</TT></A></H3>
Consider the group G of order 648 generated by the
permutations (1,6,7)(2,5,8,3,4,9)(11,12) and (1,3)(4,9,12)(5,8,10,6,7,11).
<P>
<P>
<PRE>
&gt; G := PermutationGroup&lt; 12 | (1,6,7)(2,5,8,3,4,9)(11,12),
&gt;                             (1,3)(4,9,12)(5,8,10,6,7,11) &gt;;
&gt; G;
Permutation group G acting on a set of cardinality 12
    (1, 6, 7)(2, 5, 8, 3, 4, 9)(11, 12)
    (1, 3)(4, 9, 12)(5, 8, 10, 6, 7, 11)
&gt; G.1;
(1, 6, 7)(2, 5, 8, 3, 4, 9)(11, 12)
&gt; G.1*G.2;
(1, 7, 3, 9, 2, 8)(4, 12, 5, 10, 6, 11)
&gt; Degree(G);
12
&gt; GSet(G);
GSet{ at 1 .. 12 atbrace
&gt; Generic(G);
Symmetric group acting on a set of cardinality 12
Order = 479001600 = 2^10 * 3^5 * 5^2 * 7 * 11
&gt; Generators(G);
{ 
    (1, 6, 7)(2, 5, 8, 3, 4, 9)(11, 12),
    (1, 3)(4, 9, 12)(5, 8, 10, 6, 7, 11)
 }
&gt; Ngens(G);
2
&gt; x := G ! (1,6,7)(2,5,8,3,4,9)(11,12);
&gt; x;
(1, 6, 7)(2, 5, 8, 3, 4, 9)(11, 12)
&gt; Parent(x);
Permutation group G acting on a set of cardinality 12
Order = 648 = 2^3 * 3^4
    (1, 6, 7)(2, 5, 8, 3, 4, 9)(11, 12)
    (1, 3)(4, 9, 12)(5, 8, 10, 6, 7, 11)
]
</PRE>
<HR>
<H4><A NAME = "6907">Group Order</A></H4>

<P>
<P>
Unless the order is already known, each of the functions in this family will
create a base and strong generating set for the group if one does not already
exist.
<P>
<P>


<H5><A NAME = "6908">Order(G) : GrpPerm -&gt; RngIntElt</A></H5>
<H5># G : GrpPerm -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The order of the group G as an integer. If the order is not currently
known, a base and strong generating set will be constructed for G.
</BLOCKQUOTE>
<H5><A NAME = "6909">FactoredOrder(G) : GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]</A></H5>
<BLOCKQUOTE>
The order of the group G returned as a factored integer. 
The factorization is returned
in the form of a sequence Q which is defined as follows: If
# G = p<sub>1</sub><sup>e<sub>1</sub></sup> ... p<sub>n</sub><sup>e<sub>n</sub></sup>,   e<sub>i</sub> != 0,
then Q will be the integer sequence
 [ &lt;p<sub>1</sub>, e<sub>1</sub>&gt;, ..., &lt;p<sub>n</sub>, e<sub>n</sub>&gt; ]. 
If the order of G is not known, it will be computed.
</BLOCKQUOTE>
<H4><A NAME = "6910">Abstract Properties of a Group</A></H4>



<H5><A NAME = "6911">IsAbelian(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is abelian, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6912">IsCyclic(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is cyclic, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6913">IsElementaryAbelian(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is elementary abelian, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6914">IsSpecial(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a p-group G,  return <TT>true</TT> if G is special, <TT>false</TT>
otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6915">IsExtraSpecial(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a group G is a p-group G, return <TT>true</TT> if G is
extra-special, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6916">IsNilpotent(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is nilpotent, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6917">IsSoluble(G) : GrpPerm -&gt; BoolElt</A></H5>
<H5>IsSolvable(G) : GrpPerm -&gt; BoolElt</H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is soluble, <TT>false</TT> otherwise.
Uses the algorithm of Sims <A  HREF = "text628.htm#bib_sol-schreier">[Sim90]</A>.
</BLOCKQUOTE>
<H5><A NAME = "6918">IsPerfect(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is perfect, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6919">IsSimple(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is simple, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "6920">IsWreathProduct(G) : GrpPerm -&gt; BoolElt, GrpPerm, GrpPerm, GrpPerm</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is isomorphic to a wreath product
A wreath B, where B is transitive, and <TT>false</TT> otherwise. If true, then
three subgroups of G, call them A, B, C, are also returned. 
In this case we have G isomorphic to
<TT>WreathProduct(A, CosetImage(B, C))</TT>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "6921">Example <TT>GrpPerm_BasicProperties (H63E5)</TT></A></H3>
We determine the orders of those subgroups of the Mathieu group
M<sub>24</sub> which are perfect but not simple. We use the function 
<TT>PerfectSubgroups</TT> which returns a representative from each conjugacy 
class of perfect subgroups.
<P>
<P>
<P>
<PRE>
&gt; load m24; 
Loading "/home/magma/libs/pergps/m24"
M24 - Mathieu group on 24 letters - degree 24 
Order 244 823 040 = 2^10 * 3^3 * 5 * 7 * 11 * 23;  Base 1,2,3,4,5,6,7
Group: G
&gt; time S := PerfectSubgroups(G);
Time: 29.460
&gt; [ Order(H) : R in S | not IsSimple(H) where H := R`subgroup ];
[ 120, 120, 120, 180, 180, 240, 240, 336, 336, 336, 336, 504, 720, 1008, 1080, 
  960, 960, 960, 1344, 1344, 1344, 1920, 2688, 2688, 2688, 2688, 2688, 2880,
  3840, 3840, 5760, 10752, 11520, 11520, 40320, 21504, 21504, 32256, 64512,
  69120, 322560 ]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text633.htm">[Next]</A><A  HREF = "text631.htm">[Prev]</A> <A  HREF = "text633.htm">[Right]</A> <A  HREF = "text631.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>