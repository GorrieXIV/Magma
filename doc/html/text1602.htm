<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operators</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1603.htm">[Next]</A><A  HREF = "text1601.htm">[Prev]</A> <A  HREF = "text1603.htm">[Right]</A> <A  HREF = "text1601.htm">[Left]</A> <A  HREF = "text1592.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17798">Operators</A></H3>

<P>
<P>
<P>
<P>
Each space Mm of modular symbols comes equipped with a commuting 
family  T<sub>1</sub>, T<sub>2</sub>, T<sub>3</sub>, ... of
linear operators acting on it called the Hecke operators.  
<P>
The Hecke operators are defined recursively, as follows.
First, T<sub>1</sub>=1. When n=p is prime, 
  T<sub>p</sub>(x) = [ pmatrix(p&amp;0cr 0&amp;1) + &sum;_(r (mod ) p)
                    pmatrix(1&amp;r cr 0&amp;p)  ] x,
where the first matrix is omitted if p divides the
level N of M.
If m and n are coprime, then T<sub>mn</sub> = T<sub>m</sub>T<sub>n</sub>.
If p is a prime, r&ge;2 is an integer, &epsilon; is 
the Dirichlet character associated to M, and k is the weight
of M, then 
  T<sub>p<sup>r</sup></sub> = T<sub>p</sub>  T_(p<sup>r - 1</sup>) - &epsilon;(p) p<sup>k - 1</sup> T_(p<sup>r - 2</sup>).


<HR>
<H3><A NAME = "17799">Example <TT>ModSym_HeckeOperators (H139E14)</TT></A></H3>
In Magma, Hecke operators are represented as n x n-matrices,
acting from the right, with respect to the basis <TT>Basis(M)</TT>.
For example
<P>
<P>
<PRE>
&gt; M := ModularSymbols(12);
&gt; T2 := HeckeOperator(M,2);
&gt; M.1;
{oo, 0}
&gt; T2;
[ 2  0 -1  0  0]
[ 2  0 -1  0  0]
[ 0  0  1 -2 -2]
[ 0 -1  1 -1 -2]
[ 0  1 -1  1  2]
&gt; M.1*T2;
2*{oo, 0} + -1*{-1/10, 0}
</PRE>
<HR>
<H5><A NAME = "17800">HeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Compute a matrix representing the nth Hecke operator T<sub>n</sub> 
with respect to <TT>Basis(M)</TT> where M is a space of modular symbols.
</BLOCKQUOTE>
<H5><A NAME = "17801">HeckePolynomial(M, n) : ModSym, RngIntElt -&gt; RngUPolResElt</A></H5>
<BLOCKQUOTE>
Compute the characteristic polynomial of the Hecke operator T<sub>n</sub> with
respect to the space of modular symbols M.
When n is prime, the Deligne bound on the sizes of Hecke eigenvalues
is used, so <TT>HeckePolynomial</TT> is frequently much faster than 
<TT>CharacteristicPolynomial(HeckeOperator(M,n))</TT>.
</BLOCKQUOTE>
<H5><A NAME = "17802">IntegralHeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
A matrix representing the nth Hecke operator with 
respect to <TT>Basis(Lattice(M))</TT> where M is a space of modular symbols.
</BLOCKQUOTE>
<H5><A NAME = "17803">DualHeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Compute a matrix representing the Hecke operator T<sub>n</sub> on 
the dual vector space representation of the space of modular symbols M.    This function 
is much more efficient than <TT>HeckeOperator(M,n)</TT> 
when the dimension of M is small relative to the dimension of 
the <TT>AmbientSpace(M)</TT>.  Note that <TT>DualHeckeOperator(M,n)</TT> 
is not guaranteed to be the transpose of <TT>HeckeOperator(M,n)</TT>
because <TT>DualHeckeOperator(M,n)</TT> is computed with respect
to <TT>Basis(DualVectorSpace(M))</TT>.
</BLOCKQUOTE>
<H5><A NAME = "17804">AtkinLehner(M, q) : ModSym, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
A matrix representing the qth Atkin-Lehner involution W<sub>q</sub> on the space of modular symbols M,
when it is defined.  The involution W<sub>q</sub> is defined when M has
trivial character and even weight.  When possible, the Atkin-Lehner
map is normalized so that it is an involution; such normalization may
not be possible when k&gt;2 and the characteristic of the base field
of M divides q.
<P>
To each divisor q of N such that (gcd)(q, N/q)=1
there is an <I>Atkin-Lehner involution</I> W<sub>q</sub> on M,
which is defined as follows.
Using the Euclidean algorithm, 
choose integers x, y, z, w such that qxw - (N/q)yz = 1;
let g=pmatrix(dx &amp; y cr Nz&amp; qw) and define
 W<sub>q</sub>(x) =  g(x) / q<sup>k - 2 /2</sup>.
For example, when q=N we have 
g=pmatrix(0&amp; - 1cr N&amp; 0).
</BLOCKQUOTE>
<H5><A NAME = "17805">DualAtkinLehner(M, q) : ModSym, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The action of the Atkin-Lehner involution on the dual 
representation of the space of modular symbols M, when it is defined.
</BLOCKQUOTE>
<H5><A NAME = "17806">StarInvolution(M) : ModSym -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The conjugation involution * on the space of modular symbols M that
sends the modular symbol X<sup>i</sup>Y<sup>j</sup>{u, v} 
to ( - 1)<sup>j</sup>X<sup>i</sup>Y<sup>j</sup> {-u, - v}.
</BLOCKQUOTE>
<H5><A NAME = "17807">DualStarInvolution(M) : ModSym -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The conjugation involution * on the dual representation of the space of modular symbols M
(see the documentation for <TT>StarInvolution</TT>.)
</BLOCKQUOTE>
<H5><A NAME = "17808">ThetaOperator(M1, M2) : ModSym, ModSym  -&gt; Map</A></H5>
<BLOCKQUOTE>
Multiplication by X<sup>p</sup>Y - XY<sup>p</sup>, which is 
a possible analogue of the &theta;-operator.
(On mod p modular forms, the &theta;-operator 
is the map given by f |-&gt; q (df/dq).)
Both M<sub>1</sub> and M<sub>2</sub> must be spaces of modular symbols over a 
field of positive characteristic p; they must have the same 
level and character, and the weight of M<sub>2</sub> must equal 
the weight of M<sub>1</sub> plus p + 1.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17809">Example <TT>ModSym_Operators (H139E15)</TT></A></H3>
<P>
<P>
<PRE>
&gt; M := ModularSymbols(11,4,+1); M;
Full modular symbols space for Gamma_0(11) of weight 4 and dimension 4
over Rational Field
&gt; HeckeOperator(M,2);
[   9    0  2/5 -2/5]
[   0    5  9/5 11/5]
[   0    5  7/5 13/5]
[   0    0 22/5 23/5]
</PRE>
The entries of T<sub>2</sub> are not guaranteed to be
integers because <TT>Basis(M)</TT> is just a basis
of a Q-vector space.  The entries will be integers
if we compute T<sub>2</sub> with respect to an integral basis.
<P>
<P>
<PRE>
&gt; IntegralHeckeOperator(M,2);
[ 0  2  0  0]
[ 1  2  0  0]
[-5  6  9  0]
[ 2  0  0  9]
</PRE>
The matrix for the Hecke operator on the dual of M is the transpose of
T<sub>2</sub>.
However, the chosen basis for the cuspidal subspace of the dual 
of M need not satisfy any compatibility with 
<TT>CuspidalSubspace(M)</TT>.
<P>
<P>
<PRE>
&gt; DualHeckeOperator(M,2);
[   9    0    0    0]
[   0    5    5    0]
[ 2/5  9/5  7/5 22/5]
[-2/5 11/5 13/5 23/5]
&gt; S := CuspidalSubspace(M);
&gt; HeckeOperator(S, 2);
[    5 -13/5]
[    5    -3]
&gt; DualHeckeOperator(S, 2);
[-3/4  1/8]
[-1/2 11/4]
&gt; // NOT the transpose!
</PRE>
We can also compute the Atkin-Lehner and the *-involution.
The *-involution is the identity because we are working
in the +1-quotient, which is the largest quotient 
of <TT>ModularSymbols(11,4)</TT> where * acts as +1.
<P>
<P>
<PRE>
&gt; AtkinLehner(S, 11);
[1 0]
[0 1]
&gt; StarInvolution(S);   
[1 0]
[0 1]
</PRE>
On the -1 quotient the Atkin-Lehner involution is the same,
but * acts as -1:
<P>
<P>
<PRE>
&gt; M := ModularSymbols(11,4,-1); M;
Full modular symbols space for Gamma_0(11) of weight 4 and dimension 2
over Rational Field
&gt; S := CuspidalSubspace(M);
&gt; AtkinLehner(S, 11);
[1 0]
[0 1]
&gt; StarInvolution(S);   
[-1  0]
[ 0 -1]
</PRE>
<HR>
<H3><A NAME = "17810">Example <TT>ModSym_ThetaOperator (H139E16)</TT></A></H3>
We compute an example of our analogue of the 
&theta;-operator on modular symbols.
<P>
<P>
<PRE>
&gt; N := 11; p := 3; 
&gt; k1 := 2; k2 := k1 + (p+1);
&gt; M1 := ModularSymbols(11,k1,GF(p));
&gt; M2 := ModularSymbols(11,k2,GF(p));
&gt; theta  := ThetaOperator(M1,M2); theta;
Mapping from: ModSym: M1 to ModSym: M2 given by a rule [no inverse]
</PRE>
<P>
Now that we have computed <TT>theta</TT>, we can apply it to one of the
modular symbols corresponding to the newform in S<sub>2</sub>(&Gamma;<sub>0</sub>(11)).
<P>
<P>
<PRE>
&gt; D := Decomposition(M1,2);
&gt; f := qEigenform(D[2],10); f;
q + q^2 + 2*q^3 + 2*q^4 + q^5 + 2*q^6 + q^7 + q^9 + O(q^10)
&gt; x := D[2].1;
&gt; y := theta(x); y;
(X^4 + X*Y^3)*{-1/7, 0} + (X^4 + X^3*Y + X*Y^3 + Y^4)*{-1/7, 0} + (X^4 
+ 2*X^3*Y + 2*X*Y^3 + Y^4)*{-1/5, 0} + Y^4*{oo, 0}
</PRE>
<P>
Finally, we verify for n&lt;10 that the nth Hecke eigenvalue of
y=&theta;(x) equals n.a<sub>n</sub>(f), where f is as above.
<P>
<P>
<PRE>
&gt; [y*HeckeOperator(M2,n) - n*Coefficient(f,n)*y : n in [1..9]];
[
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1603.htm">[Next]</A><A  HREF = "text1601.htm">[Prev]</A> <A  HREF = "text1603.htm">[Right]</A> <A  HREF = "text1601.htm">[Left]</A> <A  HREF = "text1592.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>