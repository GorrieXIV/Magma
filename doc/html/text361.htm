<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Element Operations</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text362.htm">[Next]</A><A  HREF = "text360.htm">[Prev]</A> <A  HREF = "text362.htm">[Right]</A> <A  HREF = "text360.htm">[Left]</A> <A  HREF = "text356.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3453">Element Operations</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text361.htm#3454">Parent and Category</A>
<LI> <A  HREF = "text361.htm#3455">Arithmetic</A>
<LI> <A  HREF = "text361.htm#3462">Equality and Membership</A>
<LI> <A  HREF = "text361.htm#3463">Predicates on Elements</A>
<LI> <A  HREF = "text361.htm#3467">Field Generators</A>
<LI> <A  HREF = "text361.htm#3475">Real and Complex Embeddings</A>
<LI> <A  HREF = "text361.htm#3476">Heights</A>
<LI> <A  HREF = "text361.htm#3477">Norm, Trace, and Minimal Polynomial</A>
<LI> <A  HREF = "text361.htm#3489">Other Functions</A>
</UL>
<H4><A NAME = "3454">Parent and Category</A></H4>



<H5>Parent(a) : FldNumElt -&gt; FldNum</H5>

<H5>Category(a) : FldNumElt -&gt; Cat</H5>

<H5>Type(a) : FldNumElt -&gt; Cat</H5>

<H5>ExtendedType(a) : FldNumElt -&gt; Cat</H5>
<P>


<H4><A NAME = "3455">Arithmetic</A></H4>

<P>
<P>
The table below lists the generic arithmetic functions on
number field elements. Note that automatic coercion ensures
that the binary operations <TT>+</TT>, <TT>-</TT>, <TT>*</TT>, and <TT>/</TT>
may be applied to an element of a number field and an element of
one of its orders; the result will be a number field element.


<H5>+ a : FldNumElt -&gt; FldNumElt</H5>

<H5>- a : FldNumElt -&gt; FldNumElt</H5>
<P>

<H5>a + b : FldNumElt, FldNumElt -&gt; FldNumElt</H5>

<H5>a - b : FldNumElt, FldNumElt -&gt; FldNumElt</H5>

<H5>a * b : FldNumElt, FldNumElt -&gt; FldNumElt</H5>

<H5>a / b : FldNumElt, FldNumElt -&gt; FldNumElt</H5>

<H5>a ^ k : FldNumElt, RngIntElt -&gt; FldNumElt</H5>
<P>


<H5><A NAME = "3456">Sqrt(a) : FldNumElt -&gt; FldNumElt</A></H5>
<H5>SquareRoot(a) : FldNumElt -&gt; FldNumElt</H5>
<BLOCKQUOTE>
Returns the square root of the number field element
a if it exists in the field containing
a.
</BLOCKQUOTE>
<H5><A NAME = "3457">Root(a, n) : FldNumElt, RngIntElt -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
Returns the n-th root of the number field element
a if it exists in the field containing
a.
</BLOCKQUOTE>
<H5><A NAME = "3458">IsPower(a, k) : FldNumElt, RngIntElt -&gt; BoolElt, FldNumElt</A></H5>
<H5>IsSquare(a) : FldNumElt -&gt; BoolElt, FldNumElt</H5>
<BLOCKQUOTE>
Return <TT>true</TT> if the number field element
a is a kth power, (respectively square) and the root
if so.
</BLOCKQUOTE>
<H5><A NAME = "3459">Denominator(a) : FldNumElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Returns the denominator of the number field element
a, that is the least common
multiple of the denominators of the coefficients of a.
</BLOCKQUOTE>
<H5><A NAME = "3460">Numerator(a) : FldNumElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Returns the numerator of the number field element
a, that is the element
multiplied by its denominator.
</BLOCKQUOTE>
<H5><A NAME = "3461">Qround(E, M): FldNumElt, RngIntElt -&gt; FldNumElt</A></H5>

<PRE>    ContFrac: BoolElt                   Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Finds an approximation of the number field element
E where the denominator is bounded by the integer M.
If <TT>ContFrac</TT> is <TT>true</TT>, the approximation is computed by applying
the continued fraction algorithm to the coefficients of E viewed over Q.
</BLOCKQUOTE>
<H4><A NAME = "3462">Equality and Membership</A></H4>

<P>
<P>
Elements may also be tested for whether they lie in an ideal of an order.
See Section <A  HREF = "text394.htm#3967">Predicates on Ideals</A>.


<H5>a eq b : FldNumElt, FldNumElt -&gt; BoolElt</H5>

<H5>a ne b : FldNumElt, FldNumElt -&gt; BoolElt</H5>
<P>

<H5>a in F : FldNumElt, FldNum -&gt; BoolElt</H5>
<P>


<H4><A NAME = "3463">Predicates on Elements</A></H4>

<P>
<P>
In addition to the generic predicates <TT>IsMinusOne</TT>, <TT>IsZero</TT> 
and <TT>IsOne</TT>, the predicates <TT>IsIntegral</TT> and <TT>IsPrimitive</TT>
are defined on elements of number fields.


<H5>IsZero(a) : FldNumElt -&gt; BoolElt</H5>

<H5>IsOne(a) : FldNumElt -&gt; BoolElt</H5><P>

<H5>IsMinusOne(a) : FldNumElt -&gt; BoolElt</H5>


<H5>IsUnit(a) : FldNumElt -&gt; BoolElt</H5>
<P>

<H5>IsNilpotent(a) : FldNumElt -&gt; BoolElt</H5>

<H5>IsIdempotent(a) : FldNumElt -&gt; BoolElt</H5>
<P>

<H5>IsZeroDivisor(a) : FldNumElt -&gt; BoolElt</H5>

<H5>IsRegular(a) : FldNumElt -&gt; BoolElt</H5>
<P>

<H5>IsIrreducible(a) : FldNumElt -&gt; BoolElt</H5>

<H5>IsPrime(a) : FldNumElt -&gt; BoolElt</H5>
<P>


<H5><A NAME = "3464">IsIntegral(a) : FldNumElt -&gt; BoolElt, RngIntElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the element a of a number field F
is contained in the ring of integers of F, <TT>false</TT> otherwise.
We use the minimal polynomial to determine the answer, which
means that the calculation of the maximal order is <I>not</I> triggered
if it is not known yet. A denominator d such that d * a is integral
is also returned on request.
</BLOCKQUOTE>
<H5><A NAME = "3465">IsPrimitive(a) : FldNumElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the element a of the number field F 
generates F over its coefficient field.
</BLOCKQUOTE>
<H5><A NAME = "3466">IsTotallyPositive(a) : FldNumElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returnes <TT>true</TT> iff all real embeddings of the number field element
a are positive. For elements
in absolute fields this is equivalent to all real conjugates being positive.
</BLOCKQUOTE>
<H4><A NAME = "3467">Field Generators</A></H4>



<H5><A NAME = "3468">K . 1 : FldNum -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
Return the image &alpha; of x in G[x]/f where f is the first defining
polynomial of the number field K and G is the base field of K.
<P>
In case of simple extensions this will be a primitive element.
</BLOCKQUOTE>
<H5><A NAME = "3469">PrimitiveElement(K) : FldNum -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
Returns a primitive element for the simple number field K, that is 
an element whose minimal polynomial has the same degree as the field. 
For a simple number field K this is K.1 , while for non-simple fields
a random element with this property is returned.
</BLOCKQUOTE>
<H5><A NAME = "3470">Generators(K): FldNum -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
The set of generators of the number field 
K over its coefficient field, that is a set
containing a root of each defining polynomial is returned.
</BLOCKQUOTE>
<H5><A NAME = "3471">GeneratorsOverBaseRing(K) : FldNum -&gt; FldNumElt</A></H5>
<BLOCKQUOTE>
A set of generators of the number field K over Q.
</BLOCKQUOTE>
<H5><A NAME = "3472">GeneratorsSequence(K): FldNum -&gt; [FldNumElt]</A></H5>
<BLOCKQUOTE>
The sequence of generators of the number field K over its coefficient field, that is a sequence
containing a root of each defining polynomial is returned.
</BLOCKQUOTE>
<H5><A NAME = "3473">GeneratorsSequenceOverBaseRing(K) : FldNum -&gt; [FldNumElt]</A></H5>
<BLOCKQUOTE>
A sequence of generators of the number field K over Q.
</BLOCKQUOTE>
<H5><A NAME = "3474">Generators(K, k) : FldAlg, FldAlg -&gt; [FldAlgElt]</A></H5>
<H5>Generators(K, Q) : FldAlg, FldRat -&gt; [FldAlgElt]</H5>
<BLOCKQUOTE>
A sequence of generators of the number field K over k is returned. That is a sequence
containing a root of each defining polynomial for K and its subfield down
to the level of k is returned.
</BLOCKQUOTE>
<H4><A NAME = "3475">Real and Complex Embeddings</A></H4>

<P>
<P>
See Chapter <A  HREF = "text383.htm#3640">NUMBER FIELDS AND ORDERS</A> (on number fields and orders).


<H4><A NAME = "3476">Heights</A></H4>

<P>
<P>
See Chapter <A  HREF = "text383.htm#3640">NUMBER FIELDS AND ORDERS</A> (on number fields and orders).


<H4><A NAME = "3477">Norm, Trace, and Minimal Polynomial</A></H4>

<P>
<P>
The norm, trace and minimal polynomial of number field elements 
can be calculated both with respect to the coefficient ring and to Z or Q.


<H5><A NAME = "3478"></A><A NAME = "FldNum:Norm">Norm</A>(a) : FldNumElt -&gt; FldNumElt</H5>
<H5>Norm(a, R) : FldNumElt, Rng -&gt; RngElt</H5>
<BLOCKQUOTE>
The relative norm N<sub>L/F</sub>(a) over F
of the element a of the number field L where F is the field over which L
is defined as an extension. If R is given the norm is calculated over R.
In this case, R must occur as a coefficient ring somewhere in the tower
under L.
</BLOCKQUOTE>
<H5><A NAME = "3479">AbsoluteNorm(a) : FldNumElt -&gt; FldRatElt</A></H5>
<H5>NormAbs(a) : FldNumElt -&gt; FldRatElt</H5>
<BLOCKQUOTE>
The absolute norm N<sub>L/Q</sub>(a) over Q of the element a of the number field L.
</BLOCKQUOTE>
<H5><A NAME = "3480"></A><A NAME = "FldNum:Trace">Trace</A>(a) : FldNumElt -&gt; FldNumElt</H5>
<H5>Trace(a) : FldNumElt -&gt; FldRatElt</H5>
<H5>Trace(a, R) : FldNumElt, Rng -&gt; RngElt</H5>
<BLOCKQUOTE>
The relative trace Tr<sub>L/F</sub>(a) over F of the element a of the number field L
where F is the field over which L is defined as an extension.
If R is given the trace is computed over R.
In this case, R must occur as a coefficient ring somewhere in the tower
under L.
</BLOCKQUOTE>
<H5><A NAME = "3481">AbsoluteTrace(a) : FldNumElt -&gt; FldRatElt</A></H5>
<H5>TraceAbs(a) : FldNumElt -&gt; FldRatElt</H5>
<BLOCKQUOTE>
The absolute trace Tr<sub>L/Q</sub>(a) over Q of the element a of the 
number field L.
</BLOCKQUOTE>
<H5><A NAME = "3482">CharacteristicPolynomial(a) : FldNumElt -&gt; RngUPolElt</A></H5>
<H5>CharacteristicPolynomial(a, R) : FldNumElt, Rng -&gt; RngUPolElt</H5>
<BLOCKQUOTE>
Given an element a from a number field L, returns
the characteristic polynomial of the element over R if given or 
the subfield F otherwise
where F is the field over which L is defined as an extension.
</BLOCKQUOTE>
<H5><A NAME = "3483">AbsoluteCharacteristicPolynomial(a) : FldNumElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given an element a from a number field, this function
returns the characteristic polynomial of a over Q. 
</BLOCKQUOTE>
<H5><A NAME = "3484">MinimalPolynomial(a) : FldNumElt -&gt; RngUPolElt</A></H5>
<H5>MinimalPolynomial(a, R) : FldNumElt, Rng -&gt; RngUPolElt</H5>
<BLOCKQUOTE>
Given an element a from a number field L, returns
the minimal polynomial of the element over R if given otherwise 
the subfield F
where F is the field over which L is defined as an extension.
</BLOCKQUOTE>
<H5><A NAME = "3485">AbsoluteMinimalPolynomial(a) : FldNumElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given an element a from a number field, this function
returns the minimal polynomial of the element as a polynomial over Q.
</BLOCKQUOTE>
<H5><A NAME = "3486">RepresentationMatrix(a) : FldNumElt -&gt; NumMatElt</A></H5>
<H5>RepresentationMatrix(a, R) : FldNumElt, Rng -&gt; NumMatElt</H5>
<BLOCKQUOTE>
Return the representation matrix of the number field element a, that is, the matrix which
represents the linear map wrt to the field basis, 
given by multiplication by a.
The ith row of the representation matrix gives the coefficients
of aw<sub>i</sub> with respect to the basis w<sub>1</sub>, ..., w<sub>n</sub>.
<P>
If R is given the matrix is over R and with respect to the basis of
the order or field over R.
</BLOCKQUOTE>
<H5><A NAME = "3487">AbsoluteRepresentationMatrix(a) : FldNumElt -&gt; NumMatElt</A></H5>
<BLOCKQUOTE>
Return the representation matrix of the number field element a relative to the Q-basis
of the field constructed using products of the basis elements, where
a is an element of the relative number field L.
<P>
Let L<sub>i</sub> := &sum;L<sub>i - 1</sub> &omega;<sub>i, j</sub>, L := L<sub>n</sub> and L<sub>0</sub> := Q. 
Then the representation matrix is computed with respect to the Q-basis
(&prod;<sub>j</sub> &omega;<sub>i<sub>j</sub>, j</sub>)<sub>i &isin;I</sub> consisting of products of basis elements
of the different levels.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3488">Example <TT>FldNum_NormsEtc (H35E12)</TT></A></H3>
We create the norm, trace, minimal polynomial and representation matrix
of the element &alpha;/2 in the quartic field Q(&alpha;).
<P>
<P>
<PRE>
&gt; R&lt;x&gt; := PolynomialRing(Integers());
&gt; K&lt;y&gt; := NumberField(x^4-420*x^2+40000);
&gt; z := y/2;
&gt; Norm(z), Trace(z);
2500 0
&gt; MinimalPolynomial(z);
$.1^4 - 105*$.1^2 + 2500
&gt; RepresentationMatrix(z);
[     0    1/2      0      0]
[     0      0    1/2      0]
[     0      0      0    1/2]
[-20000      0    210      0]
</PRE>
The awkwardness of the printing of the minimal polynomial above
can be overcome by providing a parent for the polynomial, keeping
in mind that it is a univariate polynomial over the rationals:
<P>
<P>
<PRE>
&gt; P&lt;t&gt; := PolynomialRing(RationalField());
&gt; MinimalPolynomial(z);
t^4 - 105*t^2 + 2500
</PRE>
<HR>
<H4><A NAME = "3489">Other Functions</A></H4>

<P>
<P>
Elements can be represented by sequences and have a product representation. 


<H5><A NAME = "3490">ElementToSequence(a) : FldNumElt -&gt; [ FldNumElt ]</A></H5>
<H5><A NAME = "FldNum:Eltseq">Eltseq</A>(a) : FldNumElt -&gt; [ FldNumElt ]</H5>
<BLOCKQUOTE>
For an element a of a number field F,
a sequence of coefficients of length degree of F
with respect to the basis is returned.
</BLOCKQUOTE>
<H5><A NAME = "3491">Eltseq(E, k) : FldNumElt, FldNum -&gt; [RngElt]</A></H5>
<H5>Eltseq(E, k) : FldNumElt, Rng -&gt; [RngElt]</H5>
<BLOCKQUOTE>
For an algebraic number E&isin;K and a ring k which occurs somewhere
in the defining tower for K, return the list of coefficients of E
over k, that is, apply <TT>Eltseq</TT> to E and to its coefficients
until the list is over k.
</BLOCKQUOTE>
<H5><A NAME = "3492">Flat(e) : FldNumElt -&gt; [ FldRatElt]</A></H5>
<BLOCKQUOTE>
The coefficients of the number field element e wrt. to the canonical Q basis for its
field. This is performed by iterating <A  HREF = "text361.htm#FldNum:Eltseq">Eltseq</A> until 
the coefficients are rational numbers. The
coefficients obtained match the coefficients wrt. to 
<A  HREF = "text360.htm#FldNum:AbsoluteBasis">AbsoluteBasis</A>.
</BLOCKQUOTE>
<H5><A NAME = "3493">a[i] : FldNumElt, RngIntElt -&gt; FldRatElt</A></H5>
<H5>a[i] : FldNumElt, RngIntElt -&gt; FldNumElt</H5>
<BLOCKQUOTE>
The coefficient of the ith basis element in the number field element a.
</BLOCKQUOTE>
<H5><A NAME = "3494">ProductRepresentation(a) : FldNumElt -&gt; [ FldNumElt ], [ RngIntElt ]</A></H5>
<BLOCKQUOTE>
Return sequences P and E such that the product of elements in P to
the corresponding exponents in E is the algebraic number a.
</BLOCKQUOTE>
<H5><A NAME = "3495">ProductRepresentation(P, E) : [ FldNumElt ], [ RngIntElt ] -&gt; FldNumElt</A></H5>
<H5>PowerProduct(P, E) : [FldNumElt], [RngIntElt] -&gt; FldNumElt</H5>
<BLOCKQUOTE>
Return the number field element a of the universe of the sequence P such that a
is the product of elements of P to the corresponding exponents in the
sequence E.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text362.htm">[Next]</A><A  HREF = "text360.htm">[Prev]</A> <A  HREF = "text362.htm">[Right]</A> <A  HREF = "text360.htm">[Left]</A> <A  HREF = "text356.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>