<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Recursion, Reduction, and Iteration</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text103.htm">[Next]</A><A  HREF = "text101.htm">[Prev]</A> <A  HREF = "text103.htm">[Right]</A> <A  HREF = "text101.htm">[Left]</A> <A  HREF = "text96.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "825">Recursion, Reduction, and Iteration</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text102.htm#826">Recursion</A>
<LI> <A  HREF = "text102.htm#829">Reduction</A>
</UL>
<H4><A NAME = "826">Recursion</A></H4>

<P>
<P>
It is often very useful to be able to refer to a sequence currently
under construction, for example to define the sequence recursively.
For this purpose the <TT>Self</TT> operator is available.


<H5><A NAME = "827">Self(n) : RngIntElt -&gt; Elt</A></H5>
<H5>Self() : -&gt; SeqEnum</H5>
<BLOCKQUOTE>
This operator enables the user to refer to an already defined previous
entry s[n] of the enumerated sequence s inside the sequence 
constructor, or the sequence s itself.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "828">Example <TT>Seq_Self (H10E5)</TT></A></H3>
The example below shows how the sequence of the first 100 Fibonacci
numbers can be created recursively, using <TT>Self</TT>. Next it is shown
how to use reduction on these 100 integers.
<P>
<P>
<PRE>
&gt; s := [ i gt 2 select Self(i-2)+Self(i-1) else 1 : i in [1..100] ];
&gt; &amp;+s;
927372692193078999175
</PRE>
<HR>
<H4><A NAME = "829">Reduction</A></H4>

<P>
<P>
Instead of using a loop to apply the same binary associative
operator to all elements of a complete enumerated sequence, it is possible
to use the <I>reduction operator</I> <TT>&amp;</TT>.


<H5><A NAME = "830">&amp; <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> S : Op, SeqEnum -&gt; Elt</A></H5>
<BLOCKQUOTE>
Given a complete enumerated
sequence S = [ a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub> ] of elements 
belonging to an algebraic structure U, and an (associative) operator
<IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> : U x U -&gt; U,
form the element a<sub>1</sub> <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> a<sub>2</sub> <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> a<sub>3</sub> <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> ... <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> a<sub>n</sub>.
<P>
Currently, the following operators may be used to reduce
sequences: <TT>+, *, and, or, join, meet, cat</TT>. An error will occur if
the operator is not defined on U.
<P>
If S contains a single element a, then the value returned is a. 
If S is the null sequence (empty and no universe specified),
then reduction over S leads to an error; if S is empty with
universe U in which the operation is defined, then the
result (or error) depends on the operation and upon U.
The following table defines the return value:
<PRE>

          EMPTY     NULL
  &amp;+       U!0      error
  &amp;*       U!1      error
  &amp;and    true      true
  &amp;or     false     false
  &amp;join   empty     null
  &amp;meet   error     error
  &amp;cat    empty     null
</PRE>
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text103.htm">[Next]</A><A  HREF = "text101.htm">[Prev]</A> <A  HREF = "text103.htm">[Right]</A> <A  HREF = "text101.htm">[Left]</A> <A  HREF = "text96.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>