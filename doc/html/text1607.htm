<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>The Associated Complex  Torus</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1608.htm">[Next]</A><A  HREF = "text1606.htm">[Prev]</A> <A  HREF = "text1608.htm">[Right]</A> <A  HREF = "text1606.htm">[Left]</A> <A  HREF = "text1592.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17843">The Associated Complex  Torus</A></H3>

<P>
<P>
<P>
Let M be a space of cuspidal modular symbols, which is the kernel of
an ideal in the Hecke algebra.  When M has weight 2 there is an
abelian variety A<sub>M</sub> attached to M; more generally, there is a
complex torus A<sub>M</sub>(C) attached to M.  The associated complex torus
A<sub>M</sub>(C) is constructed as follows.  Let S be the space of modular
forms corresponding to M.  The integration pairing gives rise to a
natural map M -&gt; Hom(S, C), and the cokernel of this map is
A<sub>M</sub>(C).



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1607.htm#17853">The Period Map</A>
<LI> <A  HREF = "text1607.htm#17857">Projection Mappings</A>
</UL>
<H5><A NAME = "17844">SubgroupOfTorus(M, x) : ModSym, ModSymElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The cyclic subgroup of the complex torus attached to the space of modular symbols M
that is generated by the image under the period map of 
the modular symbol x.
</BLOCKQUOTE>
<H5><A NAME = "17845">SubgroupOfTorus(M, s) : ModSym, SeqEnum -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
An abelian group that is isomorphic to the finite group 
generated by the sequence of images &pi;(s[i]) in the complex 
torus attached to M, where &pi; is <TT>PeriodMapping(M)</TT>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17846">Example <TT>ModSym_CuspidalSubgroup (H139E21)</TT></A></H3>
<P>
The cuspidal subgroup of J<sub>0</sub>(N) is the subgroup generated by the
degree 0 divisors on X<sub>0</sub>(N) of the form (&alpha;) - (&beta;),
where &alpha; and &beta; are cusps.  The following examples
illustrate how to use the above functions to compute the cuspidal
subgroup, as an abstract abelian group. 
<P>
The modular symbols approach has the advantage that it is essentially
no more complicated for N highly composite than for N prime.
However, it is only applicable when the corresponding space of modular
symbols can be computed in a reasonable amount of time, which at
present means that N should have less than 5 decimal digits.
There are other methods which may be much more efficient in special
cases.  For example, when p is prime Andrew Ogg showed that the
cuspidal subgroup of J<sub>0</sub>(p) is cyclic of order equal to the numerator of
(p - 1)/12.  More generally, he gave a simple formula for the order of
the cuspidal subgroup when N=pq is the product of two primes.  See
also papers of Ligozat.
<P>
<P>
<P>
<PRE>
&gt; M := ModularSymbols(20); M;
Full Modular symbols space of level 20, weight 2, and dimension 7
&gt; e := M ! &lt;1, [Cusps()|0,Infinity()] &gt;;   // the path from 0 to infinity
&gt; e;
-1*{oo, 0}
&gt; J0of20 := CuspidalSubspace(M);
&gt; A := SubgroupOfTorus(J0of20, e); A;
Abelian Group isomorphic to Z/6
Defined on 1 generator
Relations:
    6*A.1 = 0
&gt; // Next, the subgroup generated by all cusps
&gt; A := SubgroupOfTorus(J0of20, IntegralBasis(M));  A; 
Abelian Group isomorphic to Z/6
Defined on 1 generator
Relations:
    6*A.1 = 0
&gt; // Let's do another example.
&gt; M := ModularSymbols(100);
&gt; J0of100 := CuspidalSubspace(M);
&gt; A := SubgroupOfTorus(J0of100, IntegralBasis(M));  A;
Abelian Group isomorphic to Z/6 + Z/30 + Z/30 + Z/30 + Z/30
Defined on 5 generators
Relations:
    6*A.1 = 0
    30*A.2 = 0
    30*A.3 = 0
    30*A.4 = 0
    30*A.5 = 0
&gt; M := ModularSymbols(77);
&gt; J0of77 := CuspidalSubspace(M);
&gt; A := SubgroupOfTorus(J0of77, IntegralBasis(M)); A;
Abelian Group isomorphic to Z/10 + Z/60
Defined on 2 generators
Relations:
    10*A.1 = 0
    60*A.2 = 0

&gt; M := ModularSymbols(97);
&gt; A := SubgroupOfTorus(CuspidalSubspace(M), IntegralBasis(M)); A;
Abelian Group isomorphic to Z/8
Defined on 1 generator
Relations:
    8*A.1 = 0
&gt; Numerator((97-1)/12);
8
</PRE>
<HR>
<H3><A NAME = "17847">Example <TT>ModSym_CuspidalSubgroupTable (H139E22)</TT></A></H3>
The following code creates a file that contains a table which lists,
for each integer N in some range, the abstract group structure of
the subgroup of J<sub>0</sub>(N) = (Jac)(X<sub>0</sub>(N)) generated by the cusps
(&alpha;) - (&infin;), with &alpha;&isin;Q &cup;{&infin;}.
<P>
<P>
<PRE>
&gt; function CuspidalSubgroup(N)
&gt;    M := ModularSymbols(N);
&gt;    J := CuspidalSubspace(M);
&gt;    G := SubgroupOfTorus(J,IntegralBasis(M));
&gt;    return G;
&gt; end function;
&gt; // Test the function
&gt; CuspidalSubgroup(65);
Abelian Group isomorphic to Z/2 + Z/84
Defined on 2 generators
Relations:
    2*$.1 = 0
    84*$.2 = 0
&gt; procedure CuspidalTable(start, stop)
&gt;    fname := Sprintf("cuspidal_subgroup_%o-%o.m", start, stop);
&gt;    file  := Open(fname,"w");
&gt;       for N in [start..stop] do
&gt;       G := Invariants(CuspidalSubgroup(N));
&gt;       fprintf file, "C[%o] := \t%o;\n\n", N, G;
&gt;       printf "C[%o] := \t%o;\n\n", N, G;
&gt;       Flush(file);
&gt;    end for;
&gt; end procedure;
</PRE>
<HR>
<H5><A NAME = "17848">ModularKernel(M) : ModSym -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
The kernel of the modular isogeny.  Let T be the complex torus 
attached to the space of modular symbols M.  Then the modular isogeny is the natural map 
from the dual of T into T induced by autoduality 
of <TT>CuspidalSubspace(AmbientSpace(M))</TT>.
</BLOCKQUOTE>
<H5><A NAME = "17849">CongruenceGroup(M : parameters) : ModSym -&gt; GrpAb</A></H5>

<PRE>    Bound: RngIntElt                    Default: -1</PRE>
<BLOCKQUOTE>
The congruence group of the space of cusp forms corresponding to the
space of cuspidal modular symbols M.  Let S=S<sub>k</sub>(&Gamma;<sub>0</sub>(N), Z), 
let V be the sub Z-module corresponding to M, 
and W be its orthogonal complement.  Then the congruence
group is S/(V + W).  This group encodes information about congruences
between forms in V and forms in the complement of V.
<P>
The optional parameter <TT>Bound</TT> is a positive integer b such that
the q-expansions of cusp forms are computed to absolute
precision b.  If the bound is too small, then <TT>CongruenceGroup</TT>
will give only an upper bound on the correct answer.  The default is
<TT>HeckeBound(M) + 1</TT>, which gives a provably correct answer.
</BLOCKQUOTE>
<H5><A NAME = "17850">IntersectionGroup(M1, M2) : ModSym, ModSym -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
An abelian group G that encodes information about the intersection
of the complex tori corresponding to the spaces of modular symbols M<sub>1</sub> and M<sub>2</sub>.  We require that
M<sub>1</sub> and M<sub>2</sub> lie in a common ambient space.  When the 
<TT>IntersectionGroup(M1,M2)</TT> is finite, it is isomorphic to 
A<sub>M<sub>1</sub></sub>(C) &cap;A<sub>M<sub>2</sub></sub>(C).
</BLOCKQUOTE>
<H5><A NAME = "17851">IntersectionGroup(S) : SeqEnum -&gt; GrpAb</A></H5>
<BLOCKQUOTE>
An abelian group G that encodes information about the 
intersection of the collection of complex tori corresponding to the
sequence S of spaces of modular symbols.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17852">Example <TT>ModSym_BSD (H139E23)</TT></A></H3>
In this example, we investigate a 2-dimensional abelian variety B,
which is a quotient of J<sub>0</sub>(43).  The purpose of this example is to
show how numerical computation with modular symbols suggests
interesting arithmetic questions about familiar abelian varieties.  In
the following example, we find that the conjecture of Birch and
Swinnerton-Dyer (plus the Manin c=1 conjecture) implies that the
first nontrivial Shafarevich-Tate group of an (optimal) modular
abelian variety has order <I>two</I>.  Thus the surprising existence of an
abelian varieties with non-square order could have been (but was not)
hinted at long ago by somebody playing around with a modular symbols
package (in fact, it was discovered by B. Poonen and M. Stoll 
<A  HREF = "text1591.htm#bib_poonen-stoll">[PS99]</A> while they were designing and implementing
algorithms for computing with Jacobians of genus-two curves).
<P>
<P>
<P>
<P>
<P>
<P>
<P>
<P>
<PRE>
&gt; M43 := ModularSymbols(43,2);     // Level 43, weight 2.
&gt; H1  := CuspidalSubspace(M43);    // H_1(X_0(43),Q)
&gt; D   := NewformDecomposition(H1); // factors corresponding to newforms
&gt; A,B := Explode(D);
&gt; A;     // The homology of the elliptic curve "43A"
Modular symbols space of level 43, weight 2, and dimension 2
&gt; B;     // The homology of the 2-dimensional abelian variety "43B"
Modular symbols space of level 43, weight 2, and dimension 4
&gt; LRatio(B,1);        // L(B,1)/Omega_B
2/7
</PRE>
The Birch and Swinnerton-Dyer conjecture predicts that 
the Shafarevich-Tate group of B has order
as given by the formula for <TT>ShaAn</TT> in the
code below.  To compute this value, it remains to
compute #B(Q) and the Tamagawa number c<sub>43</sub>.
<P>
<P>
<PRE>
&gt; T := TorsionBound(B,11);  T; // #B(Q) divides this number
7 
&gt; // Compute the subgroup of B(Q) generated by (0)-(oo). 
&gt; C := SubgroupOfTorus(B,WindingElement(M43));  C;
Abelian Group isomorphic to Z/7
Defined on 1 generator
Relations:
    7*C.1 = 0
&gt; TamagawaNumber(B,43);
7
&gt; ShaAn := LRatio(B,1)*TorsionBound(B,11)^2/TamagawaNumber(B,43);
</PRE>
<TT>ShaAn</TT> is the Birch and Swinnerton-Dyer conjectural 
order of the Shafarevich-Tate group of B, under
the assumption that the Manin constant of B is 1.
<P>
<P>
<PRE>
&gt; ShaAn; 
2
</PRE>
One of the Galois conjugate newforms associated to B is given below.
<P>
<P>
<PRE>
&gt; qEigenform(B,12);
q + a*q^2 - a*q^3 + (-a + 2)*q^5 - 2*q^6 + (a - 2)*q^7 - 2*a*q^8 - q^9 
    + (2*a - 2)*q^10 + (2*a - 1)*q^11 + O(q^12)
&gt; BaseRing(Parent(qEigenform(B,12)));
Univariate Quotient Polynomial Algebra in a over Rational Field 
with modulus a^2 - 2
&gt; qIntegralBasis(B,12);
[
    q + 2*q^5 - 2*q^6 - 2*q^7 - q^9 - 2*q^10 - q^11 + O(q^12),
    q^2 - q^3 - q^5 + q^7 - 2*q^8 + 2*q^10 + 2*q^11 + O(q^12)
]
</PRE>
By integrating homology against the differentials corresponding
to the two modular forms above, we obtain a lattice that 
defines the complex torus A<sub>B</sub>(C):
<P>
<P>
<PRE>
&gt; Periods(B,97);   
[
    (-0.2259499583067642118739519224 - 
        1.766644676299599532273333140*i 
        0.5250281159132219433729491648 + 
        0.8066018577029307230283142371*i),
    (0.5981563162241222986475767220 - 
        1.920085638612119493276485632*i 
        0.8241062742261960348649172082 - 
        0.1534409622571770568748354995*i),
    (-0.8241062745308865105215286445 - 
        0.1534409623125199610031524920*i 
        -0.2990781583129740914919680434 - 
        0.9600428199601077799031497367*i),
    (-0.5981563162241222986475767220 - 
        1.920085638612119493276485632*i 
        -0.8241062742261960348649172083 - 
        0.1534409622571770568748354995*i)
]
</PRE>
<P>
Finally, it is tempting to ask whether or not the (conjectural)
two-torsion element of the Shafarevich-Tate group of B suggested
above is "visible" in the sense that it is "explained by a jump in
the rank of the Mordell-Weil group of A" 
(see <A  HREF = "text1591.htm#bib_cremona-mazur">[CM00]</A>).  
The following computation suggests, but does not prove, 
that this is the case.
<P>
<P>
<PRE>
&gt; G := MordellWeilGroup(EllipticCurve(A)); G;
Abelian Group isomorphic to Z
Defined on 1 generator (free)
&gt; IntersectionGroup(A,B);
Abelian Group isomorphic to Z/2 + Z/2
Defined on 2 generators
Relations:
    2*$.1 = 0
    2*$.2 = 0
</PRE>
<HR>
<H4><A NAME = "17853">The Period Map</A></H4>

<P>
<P>
<P>
Let M be a space of modular symbols the corresponds to 
a Galois-conjugacy class of newforms. 
The <I>period map</I> attached to M is a linear map
    (AmbientSpace(M)) -&gt; C<sup>d</sup>,
where d is the dimension of the space of modular forms
associated to M.
The cokernel of the period map is a complex torus A<sub>M</sub>(C). 
The terminology "period mapping" comes from the
fact that there are (often?) mereomorphic functions on C<sup>d</sup> 
whose periods are the image of the integral cuspidal modular 
symbols under the period mapping.
<P>
In the functions below, M must not be a +1 or -1 quotient 
and must be cuspidal.


<H5><A NAME = "17854">PeriodMapping(M, prec) : ModSym, RngIntElt -&gt; Map</A></H5>
<BLOCKQUOTE>
The period mapping attached to the space of modular symbols M, computed using <I>prec</I> terms of
the q-expansions of modular forms associated to M.  
</BLOCKQUOTE>
<H5><A NAME = "17855">Periods(M, prec) : ModSym, RngIntElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
The complex period lattice associated to the space of modular symbols M,
computed using <I>prec</I> terms of the q-expansions
of modular forms associated to M.
</BLOCKQUOTE>
<H5><A NAME = "17856">ClassicalPeriod(M, j, prec) : ModSym, RngIntElt, RngIntElt -&gt; FldPrElt</A></H5>
<BLOCKQUOTE>
The value
      r<sub>j</sub>(f) = int<sub>0</sub><sup>i&infin;</sup> f(z) z<sup>j</sup> dz.
</BLOCKQUOTE>
<H4><A NAME = "17857">Projection Mappings</A></H4>

<P>
<P>
<P>
Let M be a space of modular symbols over a field K. For many
purposes it is useful to have a surjective map 
&pi;: (AmbientSpace(M)) -&gt; V, 
where V is a vector space over K and
ker(&pi;) is the same as the kernel of the period mapping.


<H5><A NAME = "17858">RationalMapping(M) : ModSym -&gt; Map</A></H5>
<BLOCKQUOTE>
A surjective linear map from the ambient space of the space of modular symbols M 
to a vector space, such that the kernel of this map 
is the same as the kernel of the period mapping. 
</BLOCKQUOTE>
<H5><A NAME = "17859">IntegralMapping(M) : ModSym -&gt; Map</A></H5>
<BLOCKQUOTE>
A surjective linear map from the ambient space of the space of modular symbols M 
to a vector space, such that the kernel of this map 
is the same as the kernel of the period mapping.   
This map is chosen in such a way that the image of 
<P>
<TT>IntegralBasis(CuspidalSubspace(AmbientSpace(M)))</TT> 
<P>
<P>
is the standard Z-lattice. 
(Note that M must be defined over Q.)
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17860">Example <TT>ModSym_ModularAbVarRational (H139E24)</TT></A></H3>
<P>
<P>
<PRE>
&gt; M := ModularSymbols(33); M;
Full Modular symbols space of level 33, weight 2, and dimension 9
&gt; S := CuspidalSubspace(M);
&gt; N := NewSubspace(S);
&gt; phi := RationalMapping(N);
&gt; [phi(x) : x in IntegralBasis(S)];
[
    ( -2 4/3),
    ( -4 2/3),
    ( -2 2/3),
    (-2  0),
    (  -2 -2/3),
    (-4  0)
]
</PRE>
Notice that the image of the basis <TT>IntegralBasis(S)</TT> 
for H<sub>1</sub>(X<sub>0</sub>(33), Z) 
is not Z x Z.  However, <TT>IntegralMapping(N)</TT> is normalized so that
the image is Z x Z:
<P>
<P>
<PRE>
&gt; int := IntegralMapping(N);
&gt; [int(S.i) : i in [1..Dimension(S)]];
[
    ( 2 -1),
    ( 1 -2),
    ( 1 -1),
    ( 0 -2),
    ( 0 -1),
    (-1 -1)
]
</PRE>
Consider a quotient A<sub>f</sub> of J<sub>0</sub>(N) attached to a newform f&isin;S<sub>2</sub>(&Gamma;<sub>0</sub>(N)). 
Using <TT>IntegralMapping</TT> and the Abel-Jacobi theorem, we can see the image 
in A<sub>f</sub>(Q)  of the point (0) - (&infin;) &isin;J<sub>0</sub>(N)(Q).   In the 
level 97 example below, this image has 
order 8, which is the numerator of (97 - 1)/12.
<P>
<P>
<PRE>
&gt; Af := ModularSymbols("97B"); Af;
Modular symbols space of level 97, weight 2, and dimension 8
&gt; int := IntegralMapping(Af);
&gt; // Let x be the modular symbol {0,oo}
&gt; x := AmbientSpace(Af)!&lt;1,[Cusps()|0,Infinity()]&gt;;    
&gt; int(x);
(-5/8  1/4 -1/4    0    0  1/4  3/8  1/4)
&gt; Numerator((97-1)/12);
8
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1608.htm">[Next]</A><A  HREF = "text1606.htm">[Prev]</A> <A  HREF = "text1608.htm">[Right]</A> <A  HREF = "text1606.htm">[Left]</A> <A  HREF = "text1592.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>