<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Representation Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text819.htm">[Next]</A><A  HREF = "text817.htm">[Prev]</A> <A  HREF = "text819.htm">[Right]</A> <A  HREF = "text817.htm">[Left]</A> <A  HREF = "text808.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "9430">Representation Theory</A></H3>

<P>
<P>
This section describes some functions for creating R[G]-modules for a
finitely presented group G, which are unique for this category or have
special properties when called for fp-groups. For a complete description of
the functions available for creating and working with R[G]-modules we
refer to Chapter <A  HREF = "text1023.htm#11419">MODULES OVER AN ALGEBRA</A>.
<P>
<P>
Note that the function <A  HREF = "text1031.htm#RepThy:GModuleAction">GModuleAction</A> can be used to extract
the matrix representation associated to an R[G]-module.
<P>
<P>
All operations described in this subsection may require a closed coset table
for at least one subgroup of an fp-group. If a closed coset table is needed and
has not been computed, a coset enumeration will be invoked. If the coset
enumeration does not produce a closed coset table, a runtime error is reported.
<P>
<P>
Experienced users can control the behaviour of such indirectly invoked coset
enumeration with a set of global parameters. These global parameters can be
changed using the function <A  HREF = "text814.htm#GrpFP_1:SetGlobalTCParameters">SetGlobalTCParameters</A>. For a
detailed description of the available parameters and their meanings, we refer
to Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.


<H5><A NAME = "9431"></A><A NAME = "GrpFP_1:GModulePrimes">GModulePrimes</A>(G, A) : GrpFP, GrpFP -&gt; SetMulti</H5>
<BLOCKQUOTE>
Let G be a finitely presented group and A a normal subgroup of G of
finite index. Given any prime p, the maximal p-elementary abelian quotient
of A can be viewed as a GF(p)[G]-module M<sub>p</sub>. This function determines
all primes p such that M<sub>p</sub> is not trivial (i.e. zero-dimensional) and the
dimensions of the corresponding modules M<sub>p</sub>.
The return value is a multiset S. If 0&notin;S, the maximal abelian
quotient of A is finite and the multiplicity of p is the dimension of 
M<sub>p</sub>. If S contains 0 with multiplicity m, the maximal abelian quotient
of A contains m copies of Z. In this case, M<sub>p</sub> is non-trivial for
every prime p. The rank of M<sub>p</sub> in this case is the sum of m and the
multiplicity of p in S.
</BLOCKQUOTE>
<H5><A NAME = "9432"></A><A NAME = "GrpFP_1:GModulePrimes_3">GModulePrimes</A>(G, A, B) : GrpFP, GrpFP, GrpFP -&gt; SetMulti</H5>
<BLOCKQUOTE>
Let G be a finitely presented group, A a normal subgroup of finite index
in G and B a normal subgroup of G contained in A. Given any prime
p, the maximal p-elementary abelian quotient of A/B can be viewed as
a GF(p)[G]-module M<sub>p</sub>. This function determines all primes p such that
M<sub>p</sub> is not trivial (i.e. zero-dimensional) and the dimensions of the
corresponding modules M<sub>p</sub>.
The return value is a multiset S. If 0&notin;S, the maximal abelian
quotient of A/B is finite and the multiplicity of p is the dimension
of M<sub>p</sub>. If S contains 0 with multiplicity m, the maximal abelian
quotient of A/B contains m copies of Z. In this case, M<sub>p</sub> is
non-trivial for every prime p. The rank of M<sub>p</sub> in this case is the sum
of m and the multiplicity of p in S.
</BLOCKQUOTE>
<H5><A NAME = "9433"></A><A NAME = "GrpFP_1:GModule">GModule</A>(G, A, p) : GrpFP, GrpFP, RngIntElt -&gt; ModGrp, Map</H5>
<BLOCKQUOTE>
Given a finitely presented group G, a normal subgroup A of finite
index in G and a prime p, create the GF(p)[G]-module M
corresponding to the conjugation action of G on the maximal
p-elementary abelian quotient of A. The function also returns the
epimorphism &pi;: A -&gt; M.
<P>
Note that normality of A in G is not checked. The results for invalid
input data are undefined.
</BLOCKQUOTE>
<H5><A NAME = "9434"></A><A NAME = "GrpFP_1:GModule_3">GModule</A>(G, A, B, p) : GrpFP, GrpFP, GrpFP, RngIntElt -&gt; ModGrp, Map</H5>
<H5>GModule(G, A, B) : GrpFP, GrpFP, GrpFP -&gt; ModGrp, Map</H5>
<BLOCKQUOTE>
Given a finitely presented group G, a normal subgroup A of G of finite
index, a normal subgroup B of G contained in A and a prime p, create
the GF(p)[G]-module M corresponding to the conjugation action of G on
the maximal p-elementary abelian quotient of A/B.
<P>
<P>
The integer p can be omitted, if the maximal elementary abelian quotient of A/B is
a p-group for some prime p. Note, however, that the computation is much
faster, if a prime is specified.
<P>
<P>
The function also returns the epimorphism &pi;: A -&gt; M.
<P>
Note that normality of A and B in G is not checked. The results
for invalid input data are undefined.
</BLOCKQUOTE>
<H5><A NAME = "9435"></A><A NAME = "GrpFP_1:Pullback">Pullback</A>(f, N) : Map, ModGrp -&gt; GrpFP</H5>
<BLOCKQUOTE>
Given a map f:A -&gt; M from a normal subgroup A of an fp-group G
onto a GF(p)[G]-module M and a submodule N of M, try to compute the
preimage of N under f using a fast pullback method.  If successful, the
preimage is returned as subgroup of A.
<P>
If the pullback works, it is in general faster than a direct computation
of the preimage using the preimage operator and it produces a more concise
generating set for the preimage; see the following example.
In cases where the pullback fails, a runtime error is reported and a preimage
construction should be used instead.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9436">Example <TT>GrpFP_1_RepresentationTheory (H75E81)</TT></A></H3>
<P>
Consider the group G defined by the presentation
<PRE>
&lt; a,b,c,d,e | a^4, b^42, c^6, e^3, b^a=b^-1, [a,c], [a,d], [a,e],
              c^b=c*e, d^b=d^-1, e^b=e^2, d^c=d*e, e^c=e^2, [d,e] &gt;.
</PRE>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; F | a^4, b^42, c^6, e^3,
&gt;                          b^a=b^-1, (a,c), (a,d), (a,e),
&gt;                          c^b=c*e, d^b=d^-1, e^b=e^2,
&gt;                          d^c=d*e, e^c=e^2,
&gt;                          (d,e) &gt;;
</PRE>
The finite index subgroup H of G generated by c, d, e is normal in G.
<P>
<P>
<PRE>
&gt; H := sub&lt; G | c,d,e &gt;;
&gt; Index(G, H);
168
&gt; IsNormal(G, H);
true
</PRE>
We check, for which characteristics the action of G on H yields non-trivial
modules.
<P>
<P>
<PRE>
&gt; GModulePrimes(G, H);
{* 0, 2, 3 *}
</PRE>
We construct the (F)<sub>3</sub>[G]-module M given by the action of G on the
maximal 3-elementary abelian quotient of H and the natural epimorphism
&pi; from H onto the additive group of M.
<P>
<P>
<PRE>
&gt; M, pi := GModule(G, H, 3);
&gt; M;
GModule M of dimension 2 over GF(3)
</PRE>
Using the function <A  HREF = "text1025.htm#RepThy:Submodules">Submodules</A>, we obtain the submodules of
M. Their preimages under &pi; are precisely the normal subgroups of G
which are contained in H and contain (ker)(&pi;).
<P>
<P>
<PRE>
&gt; submod := Submodules(M);
&gt; time nsgs := [ m @@ pi : m in submod ];
Time: 11.640
&gt; [ Index(G, s) : s in nsgs ];
[ 1512, 504, 504, 168 ]
</PRE>
The generating sets for the normal subgroups obtained in this way, contain
in general many redundant generators. (E.g. each will contain a generating set
for (ker)(&pi;).)
<P>
<P>
<PRE>
&gt; [ NumberOfGenerators(s) : s in nsgs ];
[ 19, 20, 20, 21 ]
</PRE>
Optimised generating sets can be obtained using the
function <A  HREF = "text817.htm#GrpFP_1:ReduceGenerators">ReduceGenerators</A>.
<P>
<P>
<PRE>
&gt; nsgs_red := [ ReduceGenerators(s) : s in nsgs ];
&gt; [ NumberOfGenerators(s) : s in nsgs_red ];
[ 2, 2, 3, 2 ]
</PRE>
Alternatively, and in fact this is the recommended way, we can use the function
<A  HREF = "text818.htm#GrpFP_1:Pullback">Pullback</A> to compute the preimages of the submodules under
&pi;.  Note that the generating sets for the preimages computed this way
contain fewer redundant generators.
<P>
<P>
<PRE>
&gt; time nsgs := [ Pullback(pi, m) : m in submod ];
Time: 8.560
&gt; [ Index(G, s) : s in nsgs ];
[ 1512, 504, 504, 168 ]
&gt; [ NumberOfGenerators(s) : s in nsgs ];
[ 4, 4, 3, 2 ]
</PRE>
<HR>
<H3><A NAME = "9437">Example <TT>GrpFP_1_gmoduleprimes (H75E82)</TT></A></H3>
Consider the group defined by the presentation
<PRE>
     &lt; a, b, c, d, e |  
	  a^5, b^5, c^6, d^5, e^3, b^a = bd,\cr
          (a,c), (a,d), (a,e), (b,c), (b,d), (b,e), (c,d), (c,e), (d,e) &gt;.
</PRE>
<P>
<PRE>
&gt; G&lt;a,b,c,d,e&gt; := Group&lt; a,b,c,d,e | 
&gt;                            a^5, b^5, c^6, d^5, e^3, b^a = b*d,
&gt;                            (a,c), (a,d), (a,e), (b,c), (b,d), (b,e),
&gt;                            (c,d), (c,e), (d,e) &gt;;
</PRE>
Obviously the subgroup of G generated by b, c, d, e is normal in G.
<P>
<P>
<PRE>
&gt; H := sub&lt; G | b,c,d,e &gt;;
&gt; IsNormal(G, H);
true
</PRE>
We use the function <A  HREF = "text818.htm#GrpFP_1:GModulePrimes">GModulePrimes</A> to determine the set of
primes p for which the action of G on the maximal p-elementary abelian
quotient of H induces a nontrivial GF(p)[G]-module.
<P>
<P>
<PRE>
&gt; P := GModulePrimes(G, H);
&gt; 0 in P;
false
</PRE>
0 is not contained in P, i.e. the maximal free abelian quotient of H is
trivial. Hence, there are only finitely many primes, satisfying the condition
above.
<P>
<P>
We loop over the distinct elements of P and for each element p we construct
the induced GF(p)[G]-module, print its dimension and check whether it is
decomposable. Note that the dimension of the module for p must be equal to
the multiplicity of p in P.
<P>
<P>
<PRE>
&gt; for p in MultisetToSet(P) do
&gt;    M := GModule(G, H, p);
&gt;    dim := Dimension(M);
&gt;    decomp := IsDecomposable(M);
&gt;
&gt;    assert dim eq Multiplicity(P, p);
&gt;
&gt;    print "prime", p, ": module of dimension", dim;
&gt;    if decomp then
&gt;       print "  has a nontrivial decomposition";
&gt;     else
&gt;       print "  is indecomposable";
&gt;    end if;
&gt; end for;
prime 2 : module of dimension 1
  is indecomposable
prime 3 : module of dimension 2
  has a nontrivial decomposition
prime 5 : module of dimension 2
  is indecomposable
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text819.htm">[Next]</A><A  HREF = "text817.htm">[Prev]</A> <A  HREF = "text819.htm">[Right]</A> <A  HREF = "text817.htm">[Left]</A> <A  HREF = "text808.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>