<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Other Functions for Nilpotent  Matrix Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text692.htm">[Next]</A><A  HREF = "text690.htm">[Prev]</A> <A  HREF = "text692.htm">[Right]</A> <A  HREF = "text690.htm">[Left]</A> <A  HREF = "text684.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7922">Other Functions for Nilpotent  Matrix Groups</A></H3>



<H5><A NAME = "7923">RecogniseAbelian (G) : GrpMat -&gt; GrpGPC, Map, Map</A></H5>
<BLOCKQUOTE>
Given a completely reducible abelian matrix group G defined over Q or 
a number field, return an isomorphic polycyclic copy P, 
a map from G to P, and a map from P to G.
It uses an algorithm of Biasse and
Fieker <A  HREF = "text683.htm#bib_Fieker">[BF12]</A> to 
work with irreducible abelian
groups defined over number fields.
</BLOCKQUOTE>
<H5><A NAME = "7924">SylowSystem(G : parameters) : GrpMat[FldFin] -&gt; []</A></H5>

<PRE>    Verify: BoolElt                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given a nilpotent matrix group G over a finite field, this
function constructs one Sylow p-subgroup for each prime p
dividing |G| using the algorithm of <A  HREF = "text683.htm#bib_Large">[DF06]</A>. If the
optional parameter <TT>Verify</TT> is set to <TT>true</TT>, then we
first verify that G is nilpotent.
<P>
The next two functions were developed and implemented
by Tobias Rossmann.
</BLOCKQUOTE>
<H5><A NAME = "7925">IsIrreducibleFiniteNilpotent(G : parameters): GrpMat -&gt; BoolElt, Any</A></H5>

<PRE>    DecideOnly: BoolElt                 Default: <TT>false</TT></PRE>

<PRE>    Verify: BoolElt                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Let G be a finite nilpotent matrix group over K, where K is a number 
field or a rational function field over a number field. The function returns 
<TT>true</TT> if G is
irreducible or <TT>false</TT> and a proper submodule of <TT>GModule(G)</TT>. 
The construction of a
submodule can be suppressed by setting <TT>DecideOnly</TT> to <TT>true</TT>. 
If the optional parameter <TT>Verify</TT> is set to <TT>true</TT>,
then the function checks if G is nilpotent and finite. 
The algorithm used for
irreducibility testing is described in [Ros10a].
</BLOCKQUOTE>
<H5><A NAME = "7926">IsPrimitiveFiniteNilpotent(G : parameters): GrpMat -&gt; BoolElt, Any</A></H5>

<PRE>    DecideOnly: BoolElt                 Default: <TT>false</TT></PRE>

<PRE>    Verify: BoolElt                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Let G be an irreducible finite nilpotent matrix group over K, 
where K is a number field or a rational function field over 
a number field. The function returns <TT>true</TT> if G
is primitive, or <TT>false</TT> and a system of imprimitivity for G
given as a sequence of subspaces of <TT>RSpace(G)</TT>. The construction of 
a system of imprimitivity can be suppressed by setting 
<TT>DecideOnly</TT> to <TT>true</TT>. If the optional parameter 
<TT>Verify</TT> is set to <TT>true</TT>, then the function checks 
if G is nilpotent and finite.  The algorithm used for 
primitivity testing is described in [Ros10b].
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text692.htm">[Next]</A><A  HREF = "text690.htm">[Prev]</A> <A  HREF = "text692.htm">[Right]</A> <A  HREF = "text690.htm">[Left]</A> <A  HREF = "text684.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>