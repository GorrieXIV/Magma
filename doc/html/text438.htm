<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Element Operations</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text439.htm">[Next]</A><A  HREF = "text437.htm">[Prev]</A> <A  HREF = "text439.htm">[Right]</A> <A  HREF = "text437.htm">[Left]</A> <A  HREF = "text434.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "4466">Element Operations</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text438.htm#4467">Arithmetic</A>
<LI> <A  HREF = "text438.htm#4468">Equality and Membership</A>
<LI> <A  HREF = "text438.htm#4469">Numerator, Denominator and Degree</A>
<LI> <A  HREF = "text438.htm#4476">Predicates on Ring Elements</A>
<LI> <A  HREF = "text438.htm#4477">Evaluation</A>
<LI> <A  HREF = "text438.htm#4481">Derivative</A>
<LI> <A  HREF = "text438.htm#4486">Partial Fraction Decomposition</A>
</UL>
<H4><A NAME = "4467">Arithmetic</A></H4>



<H5>+ a : FldFunRatElt -&gt; FldFunRatElt</H5>

<H5>- a : FldFunRatElt -&gt; FldFunRatElt</H5><P>

<H5>a + b : FldFunRatElt, FldFunRatElt -&gt; FldFunRatElt</H5>

<H5>a - b : FldFunRatElt, FldFunRatElt -&gt; FldFunRatElt</H5>

<H5>a * b : FldFunRatElt, FldFunRatElt -&gt; FldFunRatElt</H5>

<H5>a / b : FldFunRatElt, FldFunRatElt -&gt; FldFunRatElt</H5>

<H5>a ^ k : FldFunRatElt, RngIntElt -&gt; FldFunRatElt</H5><P>


<H4><A NAME = "4468">Equality and Membership</A></H4>



<H5>a eq b : FldFunRatElt, FldFunRatElt -&gt; BoolElt</H5>

<H5>a ne b : FldFunRatElt, FldFunRatElt -&gt; BoolElt</H5><P>

<H5>a in F : FldFunRatElt, FldFunRat -&gt; BoolElt</H5>

<H5>a notin F : FldFunRatElt, FldFunRat -&gt; BoolElt</H5><P>


<H4><A NAME = "4469">Numerator, Denominator and Degree</A></H4>



<H5><A NAME = "4470">Numerator(f) : FldFunRatElt -&gt; RngElt</A></H5>
<H5>Numerator(f) : RngUPolElt -&gt; RngUPolElt</H5>
<H5>Numerator(f) : RngMPolElt -&gt; RngMPolElt</H5>
<BLOCKQUOTE>
Given a rational function f&isin;K, the field of fractions of R,
return the numerator P of f=P/Q as an element
of the polynomial ring R.
</BLOCKQUOTE>
<H5><A NAME = "4471">Denominator(f) : FldFunRatElt -&gt; RngElt</A></H5>
<H5>Denominator(f) : RngUPolElt -&gt; RngUPolElt</H5>
<H5>Denominator(f) : RngMPolElt -&gt; RngMPolElt</H5>
<BLOCKQUOTE>
Given a rational function f&isin;K, the field of fractions of R,
return the denominator Q of f=P/Q as an element
of the polynomial ring R.
</BLOCKQUOTE>
<H5><A NAME = "4472">Degree(f) : FldFunRatElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a rational function f in a univariate function field, return
the degree of f as an integer (the maximum of the degree of the numerator of f
and the degree of the denominator of f).
</BLOCKQUOTE>
<H5><A NAME = "4473">TotalDegree(f) : FldFunRatElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a rational function f in a multivariate function field, return
the total degree of f as an integer (the total degree of the numerator of f
minus the total degree of the denominator of f).
</BLOCKQUOTE>
<H5><A NAME = "4474">WeightedDegree(f) : FldFunRatElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a rational function f in a multivariate function field, return
the weighted degree of f as an integer (the weighted degree of the
numerator of f minus the weighted degree of the denominator of f).
</BLOCKQUOTE>
<H5><A NAME = "4475">Numerator(f, R) : FldFunRatElt -&gt; RngElt</A></H5>
<H5>Denominator(f, R) : FldFunRatElt -&gt; RngElt</H5>
<BLOCKQUOTE>
Return the numerator or denominator of f with respect to the ring of integers
R of the rational function field F containing f. The ring R may be a 
polynomial ring or a valuation ring.
</BLOCKQUOTE>
<H4><A NAME = "4476">Predicates on Ring Elements</A></H4>



<H5>IsZero(a) : FldFunRatElt -&gt; BoolElt</H5>

<H5>IsOne(a) : FldFunRatElt -&gt; BoolElt</H5>

<H5>IsMinusOne(a) : FldFunRatElt -&gt; BoolElt</H5><P>

<H5>IsNilpotent(a) : FldFunRatElt -&gt; BoolElt</H5>

<H5>IsIdempotent(a) : FldFunRatElt -&gt; BoolElt</H5><P>

<H5>IsUnit(a) : FldFunRatElt -&gt; BoolElt</H5>

<H5>IsZeroDivisor(a) : FldFunRatElt -&gt; BoolElt</H5>

<H5>IsRegular(a) : FldFunRatElt -&gt; BoolElt</H5><P>


<H4><A NAME = "4477">Evaluation</A></H4>



<H5><A NAME = "4478">Evaluate(f, r) : FldFunRatUElt, RngElt -&gt; FldFunRatUElt</A></H5>
<BLOCKQUOTE>
Given a univariate rational function f in F, return the rational
function in F obtained by evaluating the
indeterminate in r, which must be from (or coercible into)
the coefficient ring of the integers of F.
</BLOCKQUOTE>
<H5><A NAME = "4479">Evaluate(f, v, r) : FldFunRatMElt, RngIntElt, RngElt -&gt; FldFunRatMElt</A></H5>
<BLOCKQUOTE>
Given a multivariate rational function f in F, return the rational
function in F obtained by evaluating the v-th variable
in r, which must be from (or coercible into)
the coefficient ring of the integers of F.
</BLOCKQUOTE>
<H5><A NAME = "4480">Evaluate(f, S) : FldFunRatMElt, [RngElt] -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given a multivariate rational function f in F return the result of
evaluating the v-th variable at the v-th element of the sequence S
which should be a sequence of elements coercible into the coefficient ring
of the integers of F.
</BLOCKQUOTE>
<H4><A NAME = "4481">Derivative</A></H4>



<H5><A NAME = "4482">Derivative(f) : FldFunRatUElt -&gt; FldFunRatUElt</A></H5>
<BLOCKQUOTE>
Given a univariate rational function f, return the first
derivative of f with respect to its variable.
</BLOCKQUOTE>
<H5><A NAME = "4483">Derivative(f, k) : FldFunRatUElt, RngIntElt -&gt; FldFunRatUElt</A></H5>
<BLOCKQUOTE>
Given a univariate rational function f, return the k-th
derivative of f with respect to its variable.  k must be non-negative.
</BLOCKQUOTE>
<H5><A NAME = "4484">Derivative(f, v) : FldFunRatMElt, RngIntElt -&gt; FldFunRatMElt</A></H5>
<BLOCKQUOTE>
Given a multivariate rational function f, return the first
derivative of f with respect to variable number v.
</BLOCKQUOTE>
<H5><A NAME = "4485">Derivative(f, v, k) : FldFunRatMElt, RngIntElt, RngIntElt -&gt; FldFunRatMElt</A></H5>
<BLOCKQUOTE>
Given a multivariate rational function f, return the k-th
derivative of f with respect to variable number v.
k must be non-negative.
</BLOCKQUOTE>
<H4><A NAME = "4486">Partial Fraction Decomposition</A></H4>



<H5><A NAME = "4487">PartialFractionDecomposition(f) : FldFunRatUElt -&gt; [ &lt;RngUPolElt, RngIntElt, RngUPolElt&gt; ]</A></H5>
<BLOCKQUOTE>
Given a univariate rational function f in F=K(x), return the (unique)
complete partial fraction decomposition of f.
The decomposition
is returned as a (sorted) sequence Q consisting of triples, each of
which is of the form &lt;d, k, n&gt; where d is the denominator, k
is the multiplicity of the denominator, and n is the corresponding numerator,
and also d is irreducible and the degree of n is strictly less than
the degree of d.
Thus f equals the sum of the n<sub>t</sub>/(d<sub>t</sub>)<sup>k<sub>t</sub></sup>, where t ranges over the
triples contained in Q.  If f is improper (the degree of its numerator
is greater than or equal to the degree of its denominator), then the first
triple of Q will be of the form &lt;1, 1, q&gt; where q is the quotient
of the numerator of f by the denominator of f.
</BLOCKQUOTE>
<H5><A NAME = "4488">SquarefreePartialFractionDecomposition(f) : FldFunRatUElt -&gt; [ &lt;RngUPolElt, RngIntElt, RngUPolElt&gt; ]</A></H5>
<BLOCKQUOTE>
Given a univariate rational function f in F=K(x), return the (unique)
complete squarefree partial fraction decomposition of f.
The decomposition
is returned as a (sorted) sequence Q consisting of triples, each of
which is of the form &lt;d, k, n&gt; where d is the denominator, k
is the multiplicity of the denominator, and n is the corresponding numerator,
and also d is squarefree and the degree of n is strictly less than
the degree of d.
Thus f equals the sum of the n<sub>t</sub>/(d<sub>t</sub>)<sup>k<sub>t</sub></sup>, where t ranges over the
triples contained in Q.  If f is improper (the degree of its numerator
is greater than or equal to the degree of its denominator), then the first
triple of Q will be of the form &lt;1, 1, q&gt; where q is the quotient
of the numerator of f by the denominator of f.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "4489">Example <TT>FldFunRat_PartialFractionDecomposition (H43E3)</TT></A></H3>
We compute the squarefree and complete (irreducible) partial
fraction decompositions of a fraction in Q(t).
<P>
<P>
<PRE>
&gt; F&lt;t&gt; := FunctionField(RationalField());
&gt; P&lt;x&gt; := IntegerRing(F);
&gt; f := ((t + 1)^8 - 1) / ((t^3 - 1)*(t + 1)^2*(t^2 - 4)^2);
&gt; SD := SquarefreePartialFractionDecomposition(f);
&gt; SD;
[
    &lt;x^4 + 2*x^3 - x - 2, 1, 467/196*x^3 + 1371/196*x^2 + 
        1391/196*x + 234/49&gt;,
    &lt;x^2 - x - 2, 1, -271/196*x + 505/98&gt;,
    &lt;x^2 - x - 2, 2, 271/14*x + 139/7&gt;
]
&gt; // Check appropriate sum equals f:
&gt; &amp;+[F!t[3] / F!t[1]^t[2]: t in SD] eq f;  
&gt; D := PartialFractionDecomposition(f);
&gt; D;
[
    &lt;x - 2, 1, -3683/2646&gt;,
    &lt;x - 2, 2, 410/63&gt;,
    &lt;x - 1, 1, 85/36&gt;,
    &lt;x + 1, 1, 1/108&gt;,
    &lt;x + 1, 2, 1/18&gt;,
    &lt;x + 2, 1, 1/18&gt;,
    &lt;x^2 + x + 1, 1, -5/147*x - 8/147&gt;
]
&gt; // Check appropriate sum equals f:
&gt; &amp;+[F!t[3] / F!t[1]^t[2]: t in D] eq f;  
true
</PRE>
Note that doing the same operation in the function field Z(t) must
modify the numerators and denominators to be integral but the result
is otherwise the same.
<P>
<P>
<PRE>
&gt; F&lt;t&gt; := FunctionField(IntegerRing());
&gt; P&lt;x&gt; := IntegerRing(F);
&gt; f := ((t + 1)^8 - 1) / ((t^3 - 1)*(t + 1)^2*(t^2 - 4)^2);
&gt; D := PartialFractionDecomposition(f);
&gt; D;
[
    &lt;2646*x - 5292, 1, -3683&gt;,
    &lt;63*x - 126, 2, 25830&gt;,
    &lt;36*x - 36, 1, 85&gt;,
    &lt;108*x + 108, 1, 1&gt;,
    &lt;18*x + 18, 2, 18&gt;,
    &lt;18*x + 36, 1, 1&gt;,
    &lt;147*x^2 + 147*x + 147, 1, -5*x - 8&gt;
]
&gt; // Check appropriate sum equals f:
&gt; &amp;+[F!t[3] / F!t[1]^t[2]: t in D] eq f;  
true
</PRE>
Finally, we compute the partial fraction decomposition of a fraction in
a function field whose coefficient ring is a multivariate function field.
<P>
<P>
<PRE>
&gt; R&lt;a, b&gt; := FunctionField(IntegerRing(), 2);
&gt; F&lt;t&gt; := FunctionField(R);
&gt; P&lt;x&gt; := IntegerRing(F);
&gt; f := 1 / ((t^2 - a)^2*(t + b)^2*t^3);
&gt; SD := SquarefreePartialFractionDecomposition(f);
&gt; SD;
[
    &lt;x^3 + b*x^2 - a*x - a*b, 1, (-3*a - 2*b^2)/(a^3*b^4)*x^2 + 
        (-a - 2*b^2)/(a^3*b^3)*x + (3*a + 3*b^2)/(a^2*b^4)&gt;,
    &lt;x^3 + b*x^2 - a*x - a*b, 2, (a + b^2)/(a^2*b^3)*x^2 + 
        1/a^2*x + (-a - b^2)/(a*b^3)&gt;,
    &lt;x, 1, (3*a + 2*b^2)/(a^3*b^4)&gt;,
    &lt;x, 2, -2/(a^2*b^3)&gt;,
    &lt;x, 3, 1/(a^2*b^2)&gt;
]
&gt; // Check appropriate sum equals f:
&gt; &amp;+[F!t[3] / F!t[1]^t[2]: t in SD] eq f;  
true
&gt; D := PartialFractionDecomposition(f);
&gt; D;
[
    &lt;x, 1, (3*a + 2*b^2)/(a^3*b^4)&gt;,
    &lt;x, 2, -2/(a^2*b^3)&gt;,
    &lt;x, 3, 1/(a^2*b^2)&gt;,
    &lt;x + b, 1, (-3*a + 7*b^2)/(a^3*b^4 - 3*a^2*b^6 + 3*a*b^8 - 
        b^10)&gt;,
    &lt;x + b, 2, -1/(a^2*b^3 - 2*a*b^5 + b^7)&gt;,
    &lt;x^2 - a, 1, (-3*a^2 - 3*a*b^2 + 2*b^4)/(a^6 - 3*a^5*b^2 + 
        3*a^4*b^4 - a^3*b^6)*x + (6*a*b - 2*b^3)/(a^5 - 3*a^4*b^2
        + 3*a^3*b^4 - a^2*b^6)&gt;,
    &lt;x^2 - a, 2, (a + b^2)/(a^4 - 2*a^3*b^2 + a^2*b^4)*x - 
        2*b/(a^3 - 2*a^2*b^2 + a*b^4)&gt;
]
&gt; // Check appropriate sum equals f:
&gt; &amp;+[F!t[3] / F!t[1]^t[2]: t in D] eq f;  
true
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text439.htm">[Next]</A><A  HREF = "text437.htm">[Prev]</A> <A  HREF = "text439.htm">[Right]</A> <A  HREF = "text437.htm">[Left]</A> <A  HREF = "text434.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>