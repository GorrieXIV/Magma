<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Adjacency and Degree</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1818.htm">[Next]</A><A  HREF = "text1816.htm">[Prev]</A> <A  HREF = "text1818.htm">[Right]</A> <A  HREF = "text1816.htm">[Left]</A> <A  HREF = "text1809.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "20184">Adjacency and Degree</A></H3>

<P>
<P>
<P>
<P>
<P>
<P>
The adjacency and degree functionalities that apply to simple graphs
  (see <A  HREF = "text1794.htm#19851">Adjacency and Degree</A>) similarly apply to multigraphs.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1817.htm#20185">Adjacency and Degree Functions for Mul-tigraphs</A>
<LI> <A  HREF = "text1817.htm#20193">Adjacency and Degree Functions for Multidigraphs</A>
</UL>
<H4><A NAME = "20185">Adjacency and Degree Functions for Mul-tigraphs</A></H4>



<H5><A NAME = "20186">Degree(u) : GrphVert -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a vertex u of a graph G, return the degree of u, ie
the number of edges incident to u.
</BLOCKQUOTE>
<H5><A NAME = "20187">Alldeg(G, n) : GrphMultUnd, RngIntElt -&gt; { GrphVert }</A></H5>
<BLOCKQUOTE>
Given a multigraph G, and a non-negative integer n, return the set of
   all vertices of G that have degree equal to n.
</BLOCKQUOTE>
<H5><A NAME = "20188">MaximumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert</A></H5>
<H5>Maxdeg(G) : GrphMultUnd -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The maximum of the degrees of the vertices of the multigraph G. 
This function returns two values: 
  the maximum degree, and a vertex of G having
  that degree.
</BLOCKQUOTE>
<H5><A NAME = "20189">MinimumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert</A></H5>
<H5>Mindeg(G) : GrphMultUnd -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The minimum of the degrees of the vertices of the multigraph G. 
This function returns two values: 
  the minimum degree, and a vertex of G having
  that degree.
</BLOCKQUOTE>
<H5><A NAME = "20190">DegreeSequence(G) : GrphMultUnd -&gt; [ { GrphVert } ]</A></H5>
<BLOCKQUOTE>
Given a multigraph G such that the maximum degree of any vertex of G
   is r, return a sequence D of length r + 1, such that D[i],
   1 &le;i &le;r + 1, is the number of vertices in G having
   degree i - 1.
</BLOCKQUOTE>
<H5><A NAME = "20191">Neighbours(u) : GrphVert -&gt; { GrphVert }</A></H5>
<H5>Neighbors(u) : GrphVert -&gt; { GrphVert }</H5>
<BLOCKQUOTE>
Given a vertex u of a graph G, return the set of vertices of
G that are adjacent to u.
</BLOCKQUOTE>
<H5><A NAME = "20192">IncidentEdges(u) : GrphVert -&gt; { GrphEdge }</A></H5>
<BLOCKQUOTE>
Given a vertex u of a graph G, return the set of all edges 
  incident with the vertex u.
</BLOCKQUOTE>
<H4><A NAME = "20193">Adjacency and Degree Functions for Multidigraphs</A></H4>



<H5><A NAME = "20194">InDegree(u) : GrphVert -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The number of edges directed into the vertex u belonging to a
   multidigraph.
</BLOCKQUOTE>
<H5><A NAME = "20195">OutDegree(u) : GrphVert -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The number of edges of the form [u, v] where u is a vertex belonging
   to a  multidigraph.
</BLOCKQUOTE>
<H5><A NAME = "20196">MaximumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert</A></H5>
<H5>Maxindeg(G) : GrphMultDir -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The maximum indegree of the vertices of the multidigraph G. 
This function returns two values: the maximum indegree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20197">MinimumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert</A></H5>
<H5>Minindeg(G)) : GrphMultDir -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The minimum indegree of the vertices of the multidigraph G. 
This function returns two values: the minimum indegree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20198">MaximumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert</A></H5>
<H5>Maxoutdeg(G) : GrphMultDir -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The maximum outdegree of the vertices of the multidigraph G.
This function returns two values: the maximum outdegree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20199">MinimumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert</A></H5>
<H5>Minoutdeg(G) : GrphMultDir -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The minimum outdegree of the vertices of the multidigraph G.
This function returns two values: the minimum outdegree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20200">Degree(u) : GrphVert -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a vertex u belonging to the multidigraph G, return the total
   degree of u, i.e. the sum of the in--degree and out--degree for u.
</BLOCKQUOTE>
<H5><A NAME = "20201">MaximumDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert</A></H5>
<H5>Maxdeg(G) : GrphMultDir -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The maximum total degree of the vertices of the multidigraph G. 
This function returns two values: the maximum total degree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20202">MinimumDegree(G) : GrphMultDir  -&gt; RngIntElt, GrphVert</A></H5>
<H5>Mindeg(G) : GrphMultDir  -&gt; RngIntElt, GrphVert</H5>
<BLOCKQUOTE>
The minimum total degree of the vertices of the multidigraph G. 
This function returns two values: the minimum total degree, 
  and the first vertex of G having that degree.
</BLOCKQUOTE>
<H5><A NAME = "20203">Alldeg(G, n) : GrphMultDir, RngIntElt -&gt; { GrphVert }</A></H5>
<BLOCKQUOTE>
Given a multidigraph G, and a non--negative integer n, return the set
   of all vertices of G that have total degree equal to n.
</BLOCKQUOTE>
<H5><A NAME = "20204">DegreeSequence(G) : GrphMultDir -&gt;  [  GrphVert  ]</A></H5>
<BLOCKQUOTE>
Given a multidigraph G such that the maximum degree of any vertex of G
  is r, return a sequence D of length r + 1, such that 
  D[i], 1 &le;i &le;r + 1, 
  is the number of vertices in G having degree i - 1. 
</BLOCKQUOTE>
<H5><A NAME = "20205">InNeighbours(u) : GrphVert -&gt; { GrphVert }</A></H5>
<H5>InNeighbors(u) : GrphVert -&gt; { GrphVert }</H5>
<BLOCKQUOTE>
Given a vertex u of a multidigraph G, return the set containing all
   vertices v such that [v, u] is an edge in G, i.e. the initial
   vertex of all edges that are directed into the vertex u.
</BLOCKQUOTE>
<H5><A NAME = "20206">OutNeighbours(u) : GrphVert -&gt; { GrphVert }</A></H5>
<H5>OutNeighbors(u) : GrphVert -&gt; { GrphVert }</H5>
<BLOCKQUOTE>
Given a vertex u of the multidigraph G, return the set of vertices v
   of G such that [u, v] is an edge in G, i.e. the set of
   vertices v that are terminal vertices of edges directed from u to
   v.
</BLOCKQUOTE>
<H5><A NAME = "20207">IncidentEdges(u) : GrphVert -&gt; { GrphEdge }</A></H5>
<BLOCKQUOTE>
Given a vertex u of a graph G, return the set of all edges 
  incident with the vertex u, that is, the set of all edges incident
  into u and incident from u.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1818.htm">[Next]</A><A  HREF = "text1816.htm">[Prev]</A> <A  HREF = "text1818.htm">[Right]</A> <A  HREF = "text1816.htm">[Left]</A> <A  HREF = "text1809.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>