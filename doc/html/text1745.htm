<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Partitions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1746.htm">[Next]</A><A  HREF = "text1744.htm">[Prev]</A> <A  HREF = "text1746.htm">[Right]</A> <A  HREF = "text1744.htm">[Left]</A> <A  HREF = "text1743.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "19232">Partitions</A></H3>

<P>
<P>
<P>
<P>
A <I>partition</I> of a positive integer n is a decreasing sequence 
[n<sub>1</sub>, n<sub>2</sub>, ..., n<sub>k</sub>] of positive integers such that &sum;(n<sub>i</sub>)=n.
The n<sub>i</sub> are called the <I>parts</I> of the partition.
<P>
All partition functions in Magma operate only on small, positive integers.


<H5><A NAME = "19233">NumberOfPartitions(n) : RngIntElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a positive integer n, return
the total number of partitions of n.
</BLOCKQUOTE>
<H5><A NAME = "19234">Partitions(n) : RngIntElt -&gt; [ [ RngIntElt ] ]</A></H5>
<BLOCKQUOTE>
Given a positive integer n, return
the sequence of all partitions of n.
</BLOCKQUOTE>
<H5><A NAME = "19235">Partitions(n, k) : RngIntElt, RngIntElt -&gt; [ [ RngIntElt ] ]</A></H5>
<BLOCKQUOTE>
Given positive integers n and k, return
the sequence of all the partitions of n into 
k parts.
</BLOCKQUOTE>
<H5><A NAME = "19236">RestrictedPartitions(n, M) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]</A></H5>
<BLOCKQUOTE>
Given a positive integer n and a set of positive integers M, return
the sequence of all partitions of n, where the parts are restricted 
to being elements of the set M. 
</BLOCKQUOTE>
<H5><A NAME = "19237">RestrictedPartitions(n, k, M) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]</A></H5>
<BLOCKQUOTE>
Given positive integers n and k, and a set of positive integers M, return
the sequence of all partitions of n into k parts, where the parts 
are restricted to being elements of the set M. 
</BLOCKQUOTE>
<H5><A NAME = "19238">IsPartition(S) : SeqEnum -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
A sequence S 
is considered to be a partition if it consists of 
weakly decreasing positive integers. A sequence is allowed to 
have trailing zeros, and the empty sequence
is accepted as a partition (of zero).
</BLOCKQUOTE>
<H5><A NAME = "19239">RandomPartition(n) : RngIntElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Returns a weakly decreasing sequence of positive integers
which is random partition of the positive integer n.
</BLOCKQUOTE>
<H5><A NAME = "19240">Weight(P) : SeqEnum -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a sequence of positive integers P which is a partition,
return a positive integer which is the sum of it's parts.
</BLOCKQUOTE>
<H5><A NAME = "19241">IndexOfPartition(P) : SeqEnum -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a sequence of positive integers P which is a partition,
return its lexicographical order among partitions of the same weight.
<P>
Lexicographical ordering of partitions is such 
that for partitions P<sub>1</sub> and P<sub>2</sub>, then
P<sub>1</sub> &gt; P<sub>2</sub> implies that P<sub>1</sub> is greater in the first part which differs
from P<sub>2</sub>. The first index is zero.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "19242">Example <TT>Tableau_Partitions (H151E1)</TT></A></H3>
The conjugacy classes of the symmetric group on n elements correspond to
the partitions of n.  The function <TT>PartnToElt</TT> below converts a
partition to an element of the corresponding conjugacy class.
<P>
<P>
<P>
<PRE>
&gt; PartitionToElt := function(G, p)
&gt;     x := [];
&gt;     s := 0;
&gt;     for d in p do
&gt;         x cat:= Rotate([s+1 .. s+d], -1);
&gt;         s +:= d;
&gt;     end for;
&gt;     return G!x;
&gt; end function;
&gt;
&gt; ConjClasses := function(n)
&gt;     G := Sym(n);
&gt;     return [ PartitionToElt(G, p) : p in Partitions(n) ];
&gt; end function;
&gt;
&gt; ConjClasses(5);
[
    (1, 2, 3, 4, 5),
    (1, 2, 3, 4),
    (1, 2, 3)(4, 5),
    (1, 2, 3),
    (1, 2)(3, 4),
    (1, 2),
    Id($)
]
&gt; Classes(Sym(5));
Conjugacy Classes
-----------------
[1]     Order 1       Length 1      
        Rep Id($)


[2]     Order 2       Length 10     
        Rep (1, 2)


[3]     Order 2       Length 15     
        Rep (1, 2)(3, 4)


[4]     Order 3       Length 20     
        Rep (1, 2, 3)


[5]     Order 4       Length 30     
        Rep (1, 2, 3, 4)


[6]     Order 5       Length 24     
        Rep (1, 2, 3, 4, 5)


[7]     Order 6       Length 20     
        Rep (1, 2, 3)(4, 5)
</PRE>
<HR>
<H3><A NAME = "19243">Example <TT>Tableau_RestrictedPartitions (H151E2)</TT></A></H3>
The number of ways of changing money into five, ten, twenty and fifty
cent coins can be calculated using <TT>RestrictedPartitions</TT>.  There is also
a well known solution using generating functions, which we use as a check.
<P>
<P>
<P>
<PRE>
&gt; coins := {5, 10, 20, 50};
&gt; T := [#RestrictedPartitions(n, coins) : n in [0 .. 100 by 5]];
&gt; T;
[ 1, 1, 2, 2, 4, 4, 6, 6, 9, 9, 13, 13, 18, 18, 24, 24, 31, 31, 39, 39, 49 ]
&gt; F&lt;t&gt; := PowerSeriesRing(RationalField(), 101);
&gt; &amp;*[1/(1-t^i) : i in coins];
1 + t^5 + 2*t^10 + 2*t^15 + 4*t^20 + 4*t^25 + 6*t^30 + 6*t^35 + 9*t^40 + 9*t^45 
    + 13*t^50 + 13*t^55 + 18*t^60 + 18*t^65 + 24*t^70 + 24*t^75 + 31*t^80 + 
    31*t^85 + 39*t^90 + 39*t^95 + 49*t^100 + O(t^101)
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1746.htm">[Next]</A><A  HREF = "text1744.htm">[Prev]</A> <A  HREF = "text1746.htm">[Right]</A> <A  HREF = "text1744.htm">[Left]</A> <A  HREF = "text1743.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>