<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Affine Kac-Moody Lie Algebras</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1152.htm">[Next]</A><A  HREF = "text1155.htm">[Prev]</A> <A  HREF = "text1152.htm">[Right]</A> <A  HREF = "text1155.htm">[Left]</A> <A  HREF = "text1153.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12975">Affine Kac-Moody Lie Algebras</A></H3>

<P>
<P>
<P>
<P>
<P>
For affine Lie algebras there exists a well-known explicit construction of these in terms of an underlying finite-dimensional Lie algebra and a central extension (see <A  HREF = "text1152.htm#bib_Kac90">[Kac90, Chapters 7,8]</A>). We briefly reiterate the construction here.
Suppose A is an affine Cartan matrix, so that g(A) is an affine Lie algebra; then A is of affine Cartan type simX<sub>n</sub> for X=A,B,C,D,E,F, or G, and some n. If we let g<sub>0</sub> be the finite variant (i.e., a Lie algebra of Cartan type X<sub>n</sub>) then
<P>
g (A) isomorphic to g<sub>0</sub> tensor C[t, t<sup> - 1</sup>] direct-sum C c direct-sum C d
<P>
for some formal basis elements c and d, where C[t, t<sup> - 1</sup>] is the ring of Laurent polynomials over C.
In Magma we represent affine Lie algebras and their elements using the form on the right hand side.
<P>
Multiplication is given by
<P>
[t<sup>k</sup> tensor x direct-sum &lambda; c direct-sum &mu; d, t<sup>k<sub>1</sub></sup> tensor y direct-sum &lambda;<sub>1</sub> c direct-sum &mu;<sub>1</sub> d] = 
<P>
(t<sup>k + k<sub>1</sub></sup> tensor [x, y] + &mu; k<sub>1</sub> t<sup>k<sub>1</sub></sup> tensor y - &mu;<sub>1</sub> k t<sup>k</sup> tensor x ) direct-sum k &delta;<sub>k, - k<sub>1</sub></sub> (x|y) c,
<P>
where (x|y) denotes a fixed non-degenerate invariant symmetric bilinear C-valued form on g<sub>0</sub>.
<P>
If we fix E<sub>i</sub>, F<sub>i</sub> to be canonical generators of g<sub>0</sub>, then the canonical generators of g(A), as described
in the introduction (<A  HREF = "text1154.htm#12969">Introduction</A>) are given by
e<sub>0</sub> = t tensor E<sub>0</sub>, f<sub>0</sub> = t<sup> - 1</sup> tensor F<sub>0</sub>, and e<sub>i</sub> = 1 tensor E<sub>i</sub>, f<sub>i</sub> = 1 tensor F<sub>i</sub>,
for i = 1, ..., l, where l is the rank of the Cartan matrix.
<P>
Affine Lie algebras and their elements are of type <A NAME = "AlgKac"><TT>AlgKac</TT></A> and <A NAME = "AlgKacElt"><TT>AlgKacElt</TT></A> respectively.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1156.htm#12976">Constructing Affine Kac-Moody  Lie Algebras</A>
<LI> <A  HREF = "text1156.htm#12980">Properties of Affine Kac-Moody  Lie Algebras</A>
<LI> <A  HREF = "text1156.htm#12989">Constructing Elements of Affine  Kac-Moody Lie Algebras</A>
<LI> <A  HREF = "text1156.htm#12993">Properties of Elements of Affine Kac-Moody Lie Algebras</A>
</UL>
<H4><A NAME = "12976">Constructing Affine Kac-Moody  Lie Algebras</A></H4>



<H5><A NAME = "12977">AffineLieAlgebra(N, F) : MonStgElt, Fld -&gt; AlgKac</A></H5>
<BLOCKQUOTE>
Construct the affine Kac-Moody Lie algebra of type N over the field F.
N should be a string describing an affine Cartan type (e.g. <TT>A~3</TT>).
See Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A> for more information on the conventions, syntax,
and functions for creating and working with affine Cartan matrices.
</BLOCKQUOTE>
<H5><A NAME = "12978">AffineLieAlgebra(C, F) : AlgMatElt, Fld -&gt; AlgKac</A></H5>
<BLOCKQUOTE>
Construct the affine Kac-Moody Lie algebra with affine Cartan matrix C over the field F.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12979">Example <TT>AlgLieKM_construct (H107E2)</TT></A></H3>
We demonstrate the construction functions.
<P>
<P>
<PRE>
&gt; L := AffineLieAlgebra("G~2", Rationals());                                   
&gt; L;
Affine Kac-Moody Lie algebra over Rational Field
&gt; C := Matrix(Integers(),3,3,[2,-1,-1,-1,2,-1,-1,-1,2]);
&gt; CartanName(C);
A~2
&gt; L := AffineLieAlgebra(C, Rationals());
&gt; L;
Affine Kac-Moody Lie algebra over Rational Field
</PRE>
<HR>
<H4><A NAME = "12980">Properties of Affine Kac-Moody  Lie Algebras</A></H4>



<H5><A NAME = "12981">CartanMatrix(L) : AlgKac -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The Cartan matrix of L.
</BLOCKQUOTE>
<H5><A NAME = "12982">CartanName(L) : AlgKac -&gt; MonStgElt</A></H5>
<BLOCKQUOTE>
The Cartan type of L.
</BLOCKQUOTE>
<H5><A NAME = "12983">Dimension(L) : AlgKac -&gt; Infty</A></H5>
<BLOCKQUOTE>
Infinity.
</BLOCKQUOTE>
<H5><A NAME = "12984">CoefficientRing(L) : AlgKac -&gt; Rng</A></H5>
<H5>BaseRing(L) : AlgKac -&gt; Rng</H5>
<BLOCKQUOTE>
The coefficient ring of L.
</BLOCKQUOTE>
<H5><A NAME = "12985">FiniteLieAlgebra(L) : AlgKac -&gt; AlgLie</A></H5>
<BLOCKQUOTE>
The Lie algebra g<sub>0</sub> underlying L (see the Introduction, Section <A  HREF = "text1154.htm#12969">Introduction</A>).
</BLOCKQUOTE>
<H5><A NAME = "12986">LaurentSeriesRing(L) : AlgKac -&gt; RngSerLaur</A></H5>
<BLOCKQUOTE>
The Laurent series ring C[t, t<sup> - 1</sup>] underlying L (see the Introduction, Section <A  HREF = "text1154.htm#12969">Introduction</A>).
</BLOCKQUOTE>
<H5><A NAME = "12987">StandardGenerators(L) : AlgKac -&gt; SeqEnum[AlgKacElt], SeqEnum[AlgKacElt], SeqEnum[AlgKacElt]</A></H5>
<BLOCKQUOTE>
The standard generators of L. These are returned as three sequences,
the first containing the e<sub>i</sub>, the second containing the f<sub>i</sub>, and the last containing the h<sub>i</sub>.
Note that the root usually labeled "0" occurs as the last element of each of these sequences.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12988">Example <TT>AlgLieKM_construct (H107E3)</TT></A></H3>
We demonstrate some properties of affine Lie algebras.
<P>
<P>
<PRE>
&gt; L := AffineLieAlgebra("A~2", Rationals());
&gt; L;
Affine Kac-Moody Lie algebra over Rational Field
&gt; Lf := FiniteLieAlgebra(L);
&gt; Lf;
Lie Algebra of dimension 8 with base ring Rational Field
&gt; SemisimpleType(Lf);
A2
&gt; e,f,h := StandardGenerators(L);
&gt; e;
[ (0 0 0 0 0 1 0 0), (0 0 0 0 0 0 1 0), (t)*(1 0 0 0 0 0 0 0) ]
&gt; F&lt;e1,e2,e0,f1,f2,f0&gt; := FreeLieAlgebra(Rationals(), 6);
&gt; phi := hom&lt;F -&gt; L | e cat f&gt;;
&gt; phi(e1);
(0 0 0 0 0 1 0 0)
&gt; phi(e1*e0) eq phi(e1)*phi(e0);
true
</PRE>
<HR>
<H4><A NAME = "12989">Constructing Elements of Affine  Kac-Moody Lie Algebras</A></H4>



<H5><A NAME = "12990">L . i : AlgKac, RngIntElt -&gt; AlgKacElt</A></H5>
<BLOCKQUOTE>
The i-th basis element of the finite dimensional Lie algebra underlying L, as an element of L.
</BLOCKQUOTE>
<H5><A NAME = "12991">HasAttribute(L, "c") : AlgKac, MonStgElt -&gt; BoolElt, AlgKacElt</A></H5>
<H5>HasAttribute(L, "d") : AlgKac, MonStgElt -&gt; BoolElt, AlgKacElt</H5>
<BLOCKQUOTE>
Return <TT>true</TT> and the basis element c or d of L, according to the second argument of <TT>HasAttribute</TT>.
</BLOCKQUOTE>
<H5><A NAME = "12992">elt&lt;L | &lt; [ (&lt;) p<sub>1</sub>, y<sub>1</sub> (&gt;), ... ], &lambda;, &mu; (&gt;) &gt; : AlgKac, Tup -&gt; AlgKacElt</A></H5>
<BLOCKQUOTE>
For a 3-tuple t such that t<sub>1</sub> is a sequence of elements of C[t, t<sup> - 1</sup>] x g<sub>0</sub>,
and t<sub>2</sub> and t<sub>3</sub> are elements of the coefficient ring of L, construct
<P>
&sum;<sub>(p, y) &isin;t<sub>1</sub></sub> p tensor y direct-sum t<sub>2</sub> c direct-sum t<sub>3</sub> d &isin;L.
<P>
See <A  HREF = "text1156.htm#KMAff:EltTup">EltTup</A> below for the converse function.
</BLOCKQUOTE>
<H4><A NAME = "12993">Properties of Elements of Affine Kac-Moody Lie Algebras</A></H4>



<H5><A NAME = "12994"></A><A NAME = "KMAff:EltTup">EltTup</A>(x) : AlgKacElt -&gt; Tup</H5>
<BLOCKQUOTE>
The element x of the affine Lie algebra L as a three-tuple t such that
<P>
x = &sum;<sub>(p, y) &isin;t<sub>1</sub></sub> p tensor y direct-sum t<sub>2</sub> c direct-sum t<sub>3</sub> d.
<P>
The first entry, t<sub>1</sub>, is a sequence of pairs (p, y) &isin;C[t, t<sup> - 1</sup>] x g<sub>0</sub>,
t<sub>2</sub> is the coefficient of c and t<sub>3</sub> is the coefficient of d. 
</BLOCKQUOTE>
<H5><A NAME = "12995">IsZero(x) : AlgKacElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Whether x is zero.
</BLOCKQUOTE>
<H5><A NAME = "12996">x eq y : AlgKacElt, AlgKacElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Whether x and y are equal.
</BLOCKQUOTE>
<H5><A NAME = "12997">x + y : AlgKacElt, AlgKacElt -&gt; AlgKacElt</A></H5>
<H5>x - y : AlgKacElt, AlgKacElt -&gt; AlgKacElt</H5>
<H5>x * y : AlgKacElt, AlgKacElt -&gt; AlgKacElt</H5>
<H5>c * y : RngElt, AlgKacElt -&gt; AlgKacElt</H5>
<BLOCKQUOTE>
Respectively the sum, difference, and multiplication of x and y.
</BLOCKQUOTE>
<H5><A NAME = "12998">-x : AlgKacElt -&gt; AlgKacElt</A></H5>
<BLOCKQUOTE>
The negation of x.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12999">Example <TT>AlgLieKM_construct (H107E4)</TT></A></H3>
We perform various computations with elements of an affine Lie algebra.
<P>
<P>
<PRE>
&gt; L&lt;t&gt; := AffineLieAlgebra("B~3", Rationals());
&gt; Lf := FiniteLieAlgebra(L);
&gt; e,f,h := StandardGenerators(L);
&gt; E,F,H := StandardBasis(Lf);
&gt; e[1] eq L!E[1];
true
&gt; x := e[4];
&gt; x;
(t)*(1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
&gt; EltTup(x);
&lt;[
    &lt;t, (1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)&gt;
], 0, 0&gt;
&gt; elt&lt;L | EltTup(x) &gt; eq x;
true
&gt; y := elt&lt;L | &lt;[&lt;t^2-t^-2, F[1]&gt;,&lt;-2,Lf.3&gt;], -1/3, 1&gt; &gt;;
&gt; y;
(-2)*(0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) + (-t^-2 + t^2)*(0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0) -1/3*c + d
&gt; z := t^3*L.2 - 1/5*h[1] + 1/7*L`c-L`d;
&gt; z;
(t^3)*(0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) + (2/5)*(0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0) (-1/5)*(0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
0 0 0 0 0) + 1/7*c -1*d
&gt; x*(y*z) + y*(z*x) + z*(x*y);
0
</PRE>
<PRE></PRE> <A  HREF = "text1152.htm">[Next]</A><A  HREF = "text1155.htm">[Prev]</A> <A  HREF = "text1152.htm">[Right]</A> <A  HREF = "text1155.htm">[Left]</A> <A  HREF = "text1153.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>