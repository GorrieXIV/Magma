<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text437.htm">[Next]</A><A  HREF = "text435.htm">[Prev]</A> <A  HREF = "text437.htm">[Right]</A> <A  HREF = "text435.htm">[Left]</A> <A  HREF = "text434.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "4441">Creation Functions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text436.htm#4442">Creation of Structures</A>
<LI> <A  HREF = "text436.htm#4446">Names</A>
<LI> <A  HREF = "text436.htm#4449">Creation of Elements</A>
</UL>
<H4><A NAME = "4442">Creation of Structures</A></H4>



<H5><A NAME = "4443">FunctionField(R) : Rng -&gt; FldFunRat</A></H5>
<H5>RationalFunctionField(R) : Rng -&gt; FldFunRat</H5>

<PRE>    Global: BoolElt                     Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Create the field F of rational functions in 1 indeterminate (consisting
of quotients of univariate polynomials) over the integral domain R.
The angle bracket notation
may be used to assign names to the indeterminates, just as in the case
of polynomial rings, e.g.: <TT>K&lt;t&gt; := FunctionField(IntegerRing());</TT>.
<P>
By default, the unique <I>global</I> univariate function field
over R will be returned;
if the parameter <TT>Global</TT> is set to <TT>false</TT>, then a non-global univariate
function field over R will be returned (to which a separate
name for the indeterminate can be assigned).
</BLOCKQUOTE>
<H5><A NAME = "4444">FunctionField(R, r) : Rng, RngIntElt -&gt; FldFunRat</A></H5>
<H5>RationalFunctionField(R, r) : Rng, RngIntElt -&gt; FldFunRat</H5>

<PRE>    Global: BoolElt                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Create the field F of rational functions in r indeterminates
over the integral domain R.
may be used to assign names to the indeterminates, just as in the case
of polynomial rings, e.g.: <TT>K&lt;a,b,c&gt; := FunctionField(IntegerRing(), 3);</TT>.
<P>
By default, a <I>non-global</I> function field will be returned;
if the parameter <TT>Global</TT> is set to <TT>true</TT>, then the
unique global function field over R with n variables will be
returned.
This may be useful in some contexts, but a non-global result is
returned by default since one often wishes to have several function
fields with the same numbers of variables but with different variable
names (and create mappings between them, for example).
Explicit coercion is always allowed between function fields having the
same number of variables (and suitable base rings), whether they are
global or not, and the coercion maps the i-variable of one function
field to the i-th variable of the other function field.
</BLOCKQUOTE>
<H5><A NAME = "4445">FieldOfFractions(P) : RngUPol -&gt; FldFunRat</A></H5>
<BLOCKQUOTE>
Given a polynomial ring P, return its field of
fractions F, consisting of quotients f/g, with f, g&isin;P.
The angle bracket notation
may be used to assign names to the indeterminates, just as in the case
of polynomial rings: <TT>K&lt;t&gt; := FieldOfFractions(P);</TT>.
If this function is called more than once for a fixed P, then the
identical function field will be returned each time.
</BLOCKQUOTE>
<H4><A NAME = "4446">Names</A></H4>



<H5><A NAME = "4447">AssignNames(~F, s) : FldFunRat, [ MonStgElt ]) -&gt;</A></H5>
<BLOCKQUOTE>
Procedure to change the name of the indeterminates of a function field F.
The i-th indeterminate will be given the name of the i-th
element of the sequence of strings s (for 1&le;i&le;#s);
the sequence may have length less
than the number of indeterminates of F, in which case the remaining
indeterminate names remain unchanged.
<P>
This procedure only changes the name used in printing the elements of F.
It does <I>not</I> assign to identifiers corresponding to the strings
the indeterminates in F; to do this, use an assignment statement,
or use angle brackets when creating the field.
<P>
Note that since this is a procedure that modifies F,
it is necessary to have a reference <TT>~F</TT> to F
in the call to this function.
</BLOCKQUOTE>
<H5><A NAME = "4448">Name(F, i) : FldFunRat, RngIntElt -&gt; FldFunRatElt</A></H5>
<BLOCKQUOTE>
Given a function field F, return the i-th indeterminate
of F (as an element of F).
</BLOCKQUOTE>
<H4><A NAME = "4449">Creation of Elements</A></H4>



<H5>One(F) : FldFunRat -&gt; FldFunRatElt</H5>

<H5>Identity(F) : FldFunRat -&gt; FldFunRatElt</H5><P>

<H5>Zero(F) : FldFunRat -&gt; FldFunRatElt</H5>

<H5>Representative(F) : FldFunRat -&gt; FldFunRatElt</H5><P>


<H5><A NAME = "4450">F ! [a, b] : FldFunRat, RngUPolElt, RngUPolElt -&gt; FldFunRatElt</A></H5>
<H5>elt&lt; F | a, b &gt; : FldFunRat, RngUPolElt, RngUPolElt -&gt; FldFunRatElt</H5>
<BLOCKQUOTE>
Given the rational function field F (which is the field of fractions of the
polynomial ring R), and polynomials a, b in R
(with b != 0), construct the rational function a / b.
</BLOCKQUOTE>
<H5><A NAME = "4451">F ! a : FldFunRat, FldElt -&gt; FldFunRatElt</A></H5>
<BLOCKQUOTE>
Given the rational function field F as a field of fractions of R,
and a polynomial a&isin;R, create the rational function a=a/1 in F.
</BLOCKQUOTE>
<H5><A NAME = "4452">K . i : FldFunRat, RngIntElt -&gt; FldFunRatElt</A></H5>
<BLOCKQUOTE>
The i-th generator for the field of fractions K of R
over the coefficient ring of R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "4453">Example <TT>FldFunRat_FunctionField (H43E1)</TT></A></H3>
We create the field of rational functions over the integers in a single
variable w.
<P>
<P>
<PRE>
&gt; R&lt;x&gt; := PolynomialRing(Integers());
&gt; F&lt;w&gt; := FieldOfFractions(R);
&gt; F ! x+3;
w + 3
&gt; F ! [ x, x-1 ];
w/(w - 1)
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text437.htm">[Next]</A><A  HREF = "text435.htm">[Prev]</A> <A  HREF = "text437.htm">[Right]</A> <A  HREF = "text435.htm">[Left]</A> <A  HREF = "text434.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>