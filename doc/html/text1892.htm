<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>New Codes from Old</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1893.htm">[Next]</A><A  HREF = "text1891.htm">[Prev]</A> <A  HREF = "text1893.htm">[Right]</A> <A  HREF = "text1891.htm">[Left]</A> <A  HREF = "text1883.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "21094">New Codes from Old</A></H3>

<P>
<P>
The operations described here produce a new code by modifying
in some way the codewords of a given code.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1892.htm#21095">Standard Constructions</A>
<LI> <A  HREF = "text1892.htm#21110">Combining Codes</A>
</UL>
<H4><A NAME = "21095">Standard Constructions</A></H4>



<H5><A NAME = "21096">AugmentCode(C) : CodeAdd -&gt; Code</A></H5>
<BLOCKQUOTE>
Construct a new additive code by including the all-ones vector with 
the words of the additive code C.
</BLOCKQUOTE>
<H5><A NAME = "21097">CodeComplement(C, S) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a subcode S of the code C, return a code C' such that 
C=S + C'.  Both C and S must be defined over the same field.
</BLOCKQUOTE>
<H5><A NAME = "21098">DirectSum(C, D) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given codes C and D, form the code that is direct sum of C 
and D.  The direct sum consists of all vectors u|v, where
u &isin;C and v &isin;D.
</BLOCKQUOTE>
<H5><A NAME = "21099">DirectSum(Q) : [Code] -&gt; Code</A></H5>
<BLOCKQUOTE>
Given a sequence of codes Q = [C<sub>1</sub>, ..., C<sub>r</sub>], all defined 
over the same field F, construct the direct sum of the C<sub>i</sub>. 
</BLOCKQUOTE>
<H5><A NAME = "21100">DirectProduct(C, D) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n<sub>1</sub>, k<sub>1</sub>] code C and an [n<sub>2</sub>, k<sub>2</sub>] code
D, both over the same ring R, construct the direct product of
C and D. The direct product has length n<sub>1</sub>.n<sub>2</sub> and its
generator matrix is the Kronecker product of the basis matrices
of C and D.
</BLOCKQUOTE>
<H5><A NAME = "21101">ExtendCode(C) : CodeAdd -&gt; CodeAdd</A></H5>
<BLOCKQUOTE>
Given an [n, k, d] additive code C, form a new code C' from 
C by adding the appropriate extra coordinate to each vector of 
C such that the sum of the coordinates of the extended vector 
is zero.  
</BLOCKQUOTE>
<H5><A NAME = "21102">ExtendCode(C, n) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Return the code obtained by extending the code C extended 
n times.
</BLOCKQUOTE>
<H5><A NAME = "21103">PadCode(C, n) : CodeAdd, RngIntElt -&gt; CodeAdd</A></H5>
<BLOCKQUOTE>
Add n zeros to the end of each codeword of the code C.
</BLOCKQUOTE>
<H5><A NAME = "21104">PlotkinSum(C1, C2) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given codes  C<sub>1</sub> and C<sub>2</sub> defined over the same alphabet, return 
the code consisting of all vectors of the form u|u + v, where 
u &isin;C1 and v &isin;C2.  Zeros are appended where needed to make 
up any length differences in the two codes.  
</BLOCKQUOTE>
<H5><A NAME = "21105">PlotkinSum(C1, C2, C3: parameters) : Code,Code,Code -&gt; Code</A></H5>

<PRE>    a: FldFinElt                        Default: -1</PRE>
<BLOCKQUOTE>
Given three codes C<sub>1</sub>, C<sub>2</sub> and C<sub>3</sub> defined over the same alphabet 
K, return the code consisting of all vectors of the form u|u + a * v|u + v + w, 
where u &isin;C1, v &isin;C2 and w &isin;C3. The default value of the 
multiplier a is a primitive element of K.  Zeros are appended where 
needed to ensure that every codeword has the same length.
</BLOCKQUOTE>
<H5><A NAME = "21106">PunctureCode(C, i) : CodeAdd, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n, k] code C, and an integer i,
1 &le;i &le;n, construct a new code C' by deleting
the i-th coordinate from each code word of C.
</BLOCKQUOTE>
<H5><A NAME = "21107">PunctureCode(C, S) : CodeAdd, { RngIntElt } -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n, k] code C and a set S of distinct integers
{ i<sub>1</sub>, ..., i<sub>r</sub> } each of which lies in the range [1, n],
construct a new code C' by deleting the components
i<sub>1</sub>, ..., i<sub>r</sub> from each code word of C.
</BLOCKQUOTE>
<H5><A NAME = "21108">ShortenCode(C, i) : Code, RngIntElt -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n, k] code C and an integer i,
1 &le;i &le;n, construct a new code from C by selecting
only those codewords of C having a zero as their i-th    
component and deleting the i-th component from these
codewords.  Thus, the resulting code will have length n - 1.
</BLOCKQUOTE>
<H5><A NAME = "21109">ShortenCode(C, S) : Code, { RngIntElt } -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n, k] code C and a set S of distinct integers
{ i<sub>1</sub>, ..., i<sub>r</sub>}, each of which lies in the range [1, n],
construct a new code from C by selecting only those codewords
of C having zeros in each of the coordinate positions
i<sub>1</sub>, ..., i<sub>r</sub>, and deleting these components. Thus, the 
resulting code will have length n - r.
</BLOCKQUOTE>
<H4><A NAME = "21110">Combining Codes</A></H4>



<H5><A NAME = "21111">C1 cat C2 : CodeAdd, CodeAdd -&gt; CodeAdd</A></H5>
<BLOCKQUOTE>
Given codes C1 and C2, both defined over the same field K,
return the concatenation C of C1 and C2. The generators of the
resultant code are the concatenations of the generators of C1 
and C2.  
</BLOCKQUOTE>
<H5><A NAME = "21112">Juxtaposition(C1, C2) : Code, Code -&gt; Code</A></H5>
<BLOCKQUOTE>
Given an [n<sub>1</sub>, k, d<sub>1</sub>] code C1 and an [n<sub>2</sub>, k, d<sub>2</sub>] code C2 
of the same dimension, where both codes are defined over the same 
field K, this function returns a [n<sub>1</sub> + n<sub>2</sub>, k, &ge;d<sub>1</sub> + d<sub>2</sub>] code
whose generator matrix is <TT>HorizontalJoin(A, B)</TT>, where A and B 
are the generator matrices for codes C1 and C2, respectively.  
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1893.htm">[Next]</A><A  HREF = "text1891.htm">[Prev]</A> <A  HREF = "text1893.htm">[Right]</A> <A  HREF = "text1891.htm">[Left]</A> <A  HREF = "text1883.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>