<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Lattice Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text310.htm">[Next]</A><A  HREF = "text308.htm">[Prev]</A> <A  HREF = "text310.htm">[Right]</A> <A  HREF = "text308.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "2855">Lattice Elements</A></H3>

<P>
<P>
<P>
The following functions allow basic operations on elements of lattices.
The elements of lattices are simply (row) vectors, just as for R-spaces.
Most of the operations for R-space elements are also applicable to
lattice elements.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text309.htm#2856">Creation of Lattice Elements</A>
<LI> <A  HREF = "text309.htm#2861">Operations on Lattice Elements</A>
<LI> <A  HREF = "text309.htm#2876">Predicates and Boolean Operations</A>
<LI> <A  HREF = "text309.htm#2881">Access Operations</A>
</UL>
<H4><A NAME = "2856">Creation of Lattice Elements</A></H4>



<H5><A NAME = "2857">L . i : Lat, RngIntElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Return the i-th basis element of the current basis of the lattice L.
</BLOCKQUOTE>
<H5><A NAME = "2858">L ! Q : Lat, [ RngElt ] -&gt; LatElt</A></H5>
<H5>elt&lt;L | Q&gt; : Lat, [ RngElt ] -&gt; LatElt</H5>
<BLOCKQUOTE>
Given a lattice L of degree n and a sequence Q of length n,
create the lattice element with the corresponding sequence elements as
entries. The sequence must consist of elements coercible into
the base ring of L.
The resulting vector must lie within L.
</BLOCKQUOTE>
<H5><A NAME = "2859">CoordinatesToElement(L, C) : Lat, [ RngIntElt ] -&gt; LatElt</A></H5>
<H5>Coordelt(L, C) : Lat, [ RngIntElt ] -&gt; LatElt</H5>
<H5>CoordinatesToElement(L, C) : Lat, Mtrx -&gt; LatElt</H5>
<H5>Coordelt(L, C) : Lat, Mtrx -&gt; LatElt</H5>
<BLOCKQUOTE>
Given a lattice L of rank m and a sequence or vector
C=[c<sub>1</sub>, ..., c<sub>m</sub>] of length m of <I>integers</I>,
create the lattice element c<sub>1</sub> .b<sub>1</sub> + ... + c<sub>m</sub> .b<sub>m</sub>, where
[b<sub>1</sub>, ..., b<sub>m</sub>] is the basis of L.
</BLOCKQUOTE>
<H5><A NAME = "2860">L ! 0 : Lat, RngIntElt -&gt; LatElt</A></H5>
<H5>Zero(L) : Lat -&gt; LatElt</H5>
<BLOCKQUOTE>
Return the zero element of the lattice L.
</BLOCKQUOTE>
<H4><A NAME = "2861">Operations on Lattice Elements</A></H4>



<H5><A NAME = "2862">- v : LatElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given an element v in a lattice L, return its negation -v in L.
</BLOCKQUOTE>
<H5><A NAME = "2863">v + w : LatElt, LatElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given elements v and w in a lattice L, return the sum 
v + w in L.
</BLOCKQUOTE>
<H5><A NAME = "2864">v - w : LatElt, LatElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given elements v and w in a lattice L, return the difference 
v - w in L.
</BLOCKQUOTE>
<H5><A NAME = "2865">v * s : LatElt, RngIntElt -&gt; .</A></H5>
<H5>s * v : RngIntElt, LatElt -&gt; .</H5>
<BLOCKQUOTE>
Given an element v in a lattice L and a scalar s of the ring S,
return the product s.v (scalar multiplication of v by s).  If s is
an integer, the resulting vector will lie in L; otherwise the
resulting vector will lie in the R-space of the appropriate degree
whose coefficient ring is the parent S of s.
</BLOCKQUOTE>
<H5><A NAME = "2866">v / s : LatElt, RngIntElt -&gt; .</A></H5>
<BLOCKQUOTE>
Given an element v in a lattice L and a scalar s of the ring S,
return the product (1/s).v (scalar multiplication of v by 1/s).
The resulting vector will always lie in the R-space of the appropriate
degree whose coefficient ring is the field of fractions of the
parent S of s.
</BLOCKQUOTE>
<H5><A NAME = "2867">v div d : LatElt, RngIntElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given an element v in a lattice L and an <I>integer</I> d,
return the vector (1/d).v (scalar multiplication of v by 1/d)
as an element of L if the scaled vector lies in L.
If the scaled vector does not lie in L, an error ensues.
Note that this is different from v/d.
</BLOCKQUOTE>
<H5><A NAME = "2868">v +:= w : LatElt, LatElt -&gt;</A></H5>
<BLOCKQUOTE>
(Assignment statement.)  Replace lattice element v by the sum v + w.
</BLOCKQUOTE>
<H5><A NAME = "2869">v -:= w : LatElt, LatElt -&gt;</A></H5>
<BLOCKQUOTE>
(Assignment statement.)  Replace lattice element v by the difference v - w.
</BLOCKQUOTE>
<H5><A NAME = "2870">v *:= n : LatElt, RngIntElt -&gt;</A></H5>
<BLOCKQUOTE>
(Assignment statement.)  Replace lattice element v by the scalar product
n.v, where n is an integer.
</BLOCKQUOTE>
<H5><A NAME = "2871">v * T : LatElt, AlgMatElt -&gt; LatElt</A></H5>
<H5>v * T : LatElt, ModMatRngElt -&gt; LatElt</H5>
<H5>v * T : LatElt, GrpMatElt -&gt; LatElt</H5>
<BLOCKQUOTE>
Given an element v in a lattice L of degree n, return the result of 
multiplying v from the right by the n x n matrix T. The matrix T 
may be any matrix which is n by n and over the base ring of L.
The resulting product must lie in the lattice L.
</BLOCKQUOTE>
<H5><A NAME = "2872">InnerProduct(v, w) : LatElt, LatElt -&gt; RngElt</A></H5>
<H5>(v, w)</H5>
<BLOCKQUOTE>
Given elements v and w of a lattice L, return their inner product
(v, w) with respect to the inner product of L.
This is v M w<sup>tr</sup> where M is the inner product matrix of L.
</BLOCKQUOTE>
<H5><A NAME = "2873">Norm(v) : LatElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice L, return its norm
(v, v) with respect to the inner product of L.
This is v M v<sup>tr</sup> where M is the inner product matrix of L.
Note that in the case of a lattice with standard Euclidean inner product
this is the square of the usual Euclidean length.
</BLOCKQUOTE>
<H5><A NAME = "2874">Length(v, K) : LatElt, Fld -&gt; FldReElt</A></H5>
<H5>Length(v) : LatElt -&gt; FldReElt</H5>
<BLOCKQUOTE>
Given an element v of a lattice L, return its length
Sqrt((v, v)) with respect to the inner product of L as an element
of the real field K.  This is Sqrt(v M v<sup>tr)</sup> where M is the 
inner product matrix of L.
The argument for the real field K may be omitted, in which case K 
is taken to be the current default real field.  In the case of a
lattice with standard Euclidean inner product this is the usual 
Euclidean length.
</BLOCKQUOTE>
<H5><A NAME = "2875">Support(v) : LatElt -&gt; SetEnum</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice L, return its support,
i.e., the numbers of the columns at which v has non-zero entries.
</BLOCKQUOTE>
<H4><A NAME = "2876">Predicates and Boolean Operations</A></H4>



<H5><A NAME = "2877">v in L : LatElt, Lat -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice which is compatible with the lattice L,
return <TT>true</TT> if and only if v is in L.
</BLOCKQUOTE>
<H5><A NAME = "2878">v eq w : LatElt, LatElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given elements v and w of a lattice L, return 
<TT>true</TT> if and only if lattice elements v and w of lattice L are equal.
</BLOCKQUOTE>
<H5><A NAME = "2879">v ne w : LatElt, LatElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given elements v and w of a lattice L, return <TT>false</TT> if and only 
if lattice elements v and w of lattice L are equal.
</BLOCKQUOTE>
<H5><A NAME = "2880">IsZero(v) : LatElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice L, return
<TT>true</TT> if and only if v is the zero element L.
</BLOCKQUOTE>
<H4><A NAME = "2881">Access Operations</A></H4>



<H5><A NAME = "2882">ElementToSequence(v) : LatElt -&gt; [ RngElt ]</A></H5>
<H5>Eltseq(v) : LatElt -&gt; [ RngElt ]</H5>
<BLOCKQUOTE>
Given an element v of a lattice L of degree n, return the sequence
of entries of v of length n.
</BLOCKQUOTE>
<H5><A NAME = "2883">Coordinates(v) : LatElt -&gt; [ RngIntElt ]</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice L having Z-basis [b<sub>1</sub>, ..., b<sub>m</sub>], 
return a sequence [c<sub>1</sub>, ..., c<sub>m</sub>] of elements of Z giving the 
(unique) coordinates of v relative to the Z-basis, so that
v = c<sub>1</sub> .b<sub>1</sub> + ... + c<sub>m</sub> .b<sub>m</sub>.
</BLOCKQUOTE>
<H5><A NAME = "2884">Coordinates(L, v) : Lat, LatElt -&gt; [ RngIntElt ]</A></H5>
<BLOCKQUOTE>
Given a lattice L of degree n having Z-basis [b<sub>1</sub>, ..., b<sub>m</sub>], 
together with an element v of a lattice L' (also of degree n),
return a sequence [c<sub>1</sub>, ..., c<sub>m</sub>] of elements of Z giving the 
(unique) coordinates of v relative to the Z-basis of L, so that
v = c<sub>1</sub> .b<sub>1</sub> + ... + c<sub>m</sub> .b<sub>m</sub>.
</BLOCKQUOTE>
<H5><A NAME = "2885">CoordinateVector(v) : LatElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given an element v of a lattice L having Z-basis [b<sub>1</sub>, ..., b<sub>m</sub>], 
return the vector c = (c<sub>1</sub>, ..., c<sub>m</sub>) of the coordinate lattice
C of L (see the function <TT>CoordinateLattice</TT>)
giving the (unique) coordinates of v relative to the Z-basis, so that
v = c<sub>1</sub> .b<sub>1</sub> + ... + c<sub>m</sub> .b<sub>m</sub>.
</BLOCKQUOTE>
<H5><A NAME = "2886">CoordinateVector(L, v) : Lat, LatElt -&gt; LatElt</A></H5>
<BLOCKQUOTE>
Given a lattice L of degree n having Z-basis [b<sub>1</sub>, ..., b<sub>m</sub>],
together with an element v of a lattice L' (also of degree n),
return the vector c = (c<sub>1</sub>, ..., c<sub>m</sub>) of the coordinate lattice
C of L (see the function <TT>CoordinateLattice</TT>)
giving the 
(unique) coordinates of v relative to the Z-basis of L, so that
v = c<sub>1</sub> .b<sub>1</sub> + ... + c<sub>m</sub> .b<sub>m</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2887">Example <TT>Lat_LatticeFunctions (H30E4)</TT></A></H3>
This example demonstrates simple uses of the operations on lattice elements.
<P>
<P>
<PRE>
&gt; L := LatticeWithBasis(3, [1,0,0, 1,2,3, 3,6,2]);
&gt; L;
Lattice of rank 3 and degree 3
Basis:
(1 0 0)
(1 2 3)
(3 6 2)
&gt; Coordelt(L, [1, 2, 1]);
( 6 10  8)
&gt; v := L.2;
&gt; w := L ! [2, 4, 6];
&gt; Eltseq(v);
[ 1, 2, 3 ]
&gt; Coordinates(w);
[ 0, 2, 0 ]
&gt; Coordelt(L, [1, 1, 1]);
(5 8 5)
&gt; Norm(v);
14
&gt; InnerProduct(v, w);
28
&gt; A := MatrixRing(Integers(), 3);
&gt; X := A ! [0,-1,0, 1,0,0, 0,1,2];
&gt; X;
[ 0 -1  0]
[ 1  0  0]
[ 0  1  2]
&gt; u := L.1 + L.3;  
&gt; Determinant(X);
2
&gt; Norm(u);
56
&gt; u * X;
( 6 -2  4)
&gt; Norm(u * X);
56
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text310.htm">[Next]</A><A  HREF = "text308.htm">[Prev]</A> <A  HREF = "text310.htm">[Right]</A> <A  HREF = "text308.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>