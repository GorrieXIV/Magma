<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Subindex: BrandtModuleDimensionOfNewSubspace &nbsp;..&nbsp;   By</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

[____] [____] [_____] [____] [__] <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE>
<H2>Subindex: BrandtModuleDimensionOfNewSubspace &nbsp;..&nbsp;   By</H2>
<PRE></PRE>
<PRE>
</PRE><H3><A NAME = "BrandtModuleDimensionOfNewSubspace">BrandtModuleDimensionOfNewSubspace</A></H3>
&nbsp;&nbsp; <A  HREF = "text1620.htm#17953">BrandtModuleDimensionOfNewSubspace(D, N) : RngElt, RngElt -&gt; RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1620.htm#17953">BrandtModule(M, N) : AlgQuatOrd, RngElt -&gt; ModBrdt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1620.htm#17953">BrandtModuleDimension(D, N) : RngElt, RngElt -&gt; RngIntElt</A><BR>
<PRE>
</PRE><H3><A NAME = "Brauer">Brauer</A></H3>
&nbsp;&nbsp; <A  HREF = "text1042.htm#11822">BrauerCharacter(x, p) : AlgChtrElt, RngIntElt -&gt; AlgChtrElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1643.htm#18363">BrauerClass(M) : ModSym -&gt; SeqEnum</A><BR>
<PRE>
</PRE><H3><A NAME = "brauer">brauer</A></H3>
&nbsp;&nbsp; <A  HREF = "text1042.htm#11821">Brauer Characters (CHARACTERS OF FINITE GROUPS)</A><BR>
&nbsp;&nbsp; <A  HREF = "text1042.htm#11824">Chtr_brauer (Example H97E9)</A><BR>
<PRE>
</PRE><H3><A NAME = "brauer-characters">brauer-characters</A></H3>
&nbsp;&nbsp; <A  HREF = "text1042.htm#11821">Brauer Characters (CHARACTERS OF FINITE GROUPS)</A><BR>
<PRE>
</PRE><H3><A NAME = "BrauerCharacter">BrauerCharacter</A></H3>
&nbsp;&nbsp; <A  HREF = "text1042.htm#11822">BrauerCharacter(x, p) : AlgChtrElt, RngIntElt -&gt; AlgChtrElt</A><BR>
<PRE>
</PRE><H3><A NAME = "BrauerClass">BrauerClass</A></H3>
&nbsp;&nbsp; <A  HREF = "text1643.htm#18363">BrauerClass(M) : ModSym -&gt; SeqEnum</A><BR>
<PRE>
</PRE><H3><A NAME = "Bravais">Bravais</A></H3>
&nbsp;&nbsp; <A  HREF = "text699.htm#7959">BravaisGroup(G) : GrpMat[RngInt] -&gt; GrpMat</A><BR>
&nbsp;&nbsp; <A  HREF = "text701.htm#7967">IsBravaisEquivalent(G, H) : GrpMat[RngInt], GrpMat[RngInt] -&gt; BoolElt, GrpMatElt</A><BR>
<PRE>
</PRE><H3><A NAME = "BravaisGroup">BravaisGroup</A></H3>
&nbsp;&nbsp; <A  HREF = "text699.htm#7959">BravaisGroup(G) : GrpMat[RngInt] -&gt; GrpMat</A><BR>
<PRE>
</PRE><H3><A NAME = "Breadth">Breadth</A></H3>
&nbsp;&nbsp; <A  HREF = "text1799.htm#19932">BFSTree(u) : GrphVert -&gt; Grph</A><BR>
&nbsp;&nbsp; <A  HREF = "text1799.htm#19932">BreadthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet</A><BR>
&nbsp;&nbsp; <A  HREF = "text1819.htm#20239">BreadthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet</A><BR>
<PRE>
</PRE><H3><A NAME = "BreadthFirstSearchTree">BreadthFirstSearchTree</A></H3>
&nbsp;&nbsp; <A  HREF = "text1799.htm#19932">BFSTree(u) : GrphVert -&gt; Grph</A><BR>
&nbsp;&nbsp; <A  HREF = "text1799.htm#19932">BreadthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet</A><BR>
&nbsp;&nbsp; <A  HREF = "text1819.htm#20239">BreadthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet</A><BR>
<PRE>
</PRE><H3><A NAME = "break">break</A></H3>
&nbsp;&nbsp; <A  HREF = "text13.htm#91">Early Exit from Iterative Statements (STATEMENTS AND EXPRESSIONS)</A><BR>
&nbsp;&nbsp; <A  HREF = "text13.htm#92">State_break (Example H1E16)</A><BR>
<PRE>
</PRE><H3><A NAME = "Brickells">Brickells</A></H3>
&nbsp;&nbsp; <A  HREF = "text1842.htm#20566">LeeBrickellsAttack(C, v, e, p) : Code, ModTupFldElt, RngIntElt, RngIntElt -&gt; ModTupFldElt</A><BR>
<PRE>
</PRE><H3><A NAME = "Browser">Browser</A></H3>
&nbsp;&nbsp; <A  HREF = "text54.htm#530">GetHelpExternalBrowser() : -&gt; MonStgElt, MonStgElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text54.htm#526">SetHelpExternalBrowser(S, T) : MonStgElt, MonStgElt -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text54.htm#527">SetHelpUseExternalBrowser(b) : BoolElt -&gt;</A><BR>
<PRE>
</PRE><H3><A NAME = "browser">browser</A></H3>
&nbsp;&nbsp; <A  HREF = "text54.htm#533">Internal Help Browser (ENVIRONMENT AND OPTIONS)</A><BR>
<PRE>
</PRE><H3><A NAME = "Bruhat">Bruhat</A></H3>
&nbsp;&nbsp; <A  HREF = "text1181.htm#13196">Bruhat(g) : GrpLieElt -&gt; GrpLieElt, GrpLieElt, GrpLieElt, GrpLieElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12389">BruhatDescendants(x) : GrpPermElt -&gt; SetEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12390">BruhatDescendants(X) : SetEnum -&gt; SetEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12388">BruhatLessOrEqual(x, y) : GrpPermElt, GrpPermElt -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1181.htm#13197">GrpLie_Bruhat (Example H109E11)</A><BR>
<PRE>
</PRE><H3><A NAME = "bruhat">bruhat</A></H3>
&nbsp;&nbsp; <A  HREF = "text1176.htm#13093">Bruhat Normalisation (GROUPS OF LIE TYPE)</A><BR>
&nbsp;&nbsp; <A  HREF = "text1176.htm#13094">Twisted Groups of Lie type (GROUPS OF LIE TYPE)</A><BR>
<PRE>
</PRE><H3><A NAME = "BruhatDescendants">BruhatDescendants</A></H3>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12389">BruhatDescendants(x) : GrpPermElt -&gt; SetEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12390">BruhatDescendants(X) : SetEnum -&gt; SetEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12391">GrpCox_BruhatDescendants (Example H104E11)</A><BR>
<PRE>
</PRE><H3><A NAME = "BruhatLessOrEqual">BruhatLessOrEqual</A></H3>
&nbsp;&nbsp; <A  HREF = "text1105.htm#12388">BruhatLessOrEqual(x, y) : GrpPermElt, GrpPermElt -&gt; BoolElt</A><BR>
<PRE>
</PRE><H3><A NAME = "BSD">BSD</A></H3>
&nbsp;&nbsp; <A  HREF = "text1607.htm#17852">ModSym_BSD (Example H139E23)</A><BR>
<PRE>
</PRE><H3><A NAME = "BSD389A">BSD389A</A></H3>
&nbsp;&nbsp; <A  HREF = "text1609.htm#17877">ModSym_BSD389A (Example H139E27)</A><BR>
<PRE>
</PRE><H3><A NAME = "BSFS-2">BSFS-2</A></H3>
&nbsp;&nbsp; <A  HREF = "text647.htm#7305">GrpPerm_BSFS-2 (Example H63E42)</A><BR>
<PRE>
</PRE><H3><A NAME = "BSGS">BSGS</A></H3>
&nbsp;&nbsp; <A  HREF = "text669.htm">Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)</A><BR>
&nbsp;&nbsp; <A  HREF = "text647.htm">Base and Strong Generating Set (PERMUTATION GROUPS)</A><BR>
&nbsp;&nbsp; <A  HREF = "text669.htm#7707">BSGS(G) : GrpMat -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text647.htm#7298">BSGS(G) : GrpPerm -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text647.htm#7304">GrpPerm_BSGS (Example H63E41)</A><BR>
<PRE>
</PRE><H3><A NAME = "BSGS-base-strong-generator">BSGS-base-strong-generator</A></H3>
&nbsp;&nbsp; <A  HREF = "text669.htm">Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)</A><BR>
&nbsp;&nbsp; <A  HREF = "text647.htm">Base and Strong Generating Set (PERMUTATION GROUPS)</A><BR>
<PRE>
</PRE><H3><A NAME = "BString">BString</A></H3>
&nbsp;&nbsp; <A  HREF = "text31.htm#216">BString(s) : MonStgElt -&gt; BStgElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text31.htm#216">BinaryString(s) : MonStgElt -&gt; BStgElt</A><BR>
<PRE>
</PRE><H3><A NAME = "Buffer">Buffer</A></H3>
&nbsp;&nbsp; <A  HREF = "text1449.htm#16437">SetBufferSize(D, n) : DB, RngIntElt -&gt;</A><BR>
<PRE>
</PRE><H3><A NAME = "Build">Build</A></H3>
&nbsp;&nbsp; <A  HREF = "text971.htm#10973">BuildHomomorphismFromGradedCap(A, B, phi) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt</A><BR>
<PRE>
</PRE><H3><A NAME = "BuildHomomorphismFromGradedCap">BuildHomomorphismFromGradedCap</A></H3>
&nbsp;&nbsp; <A  HREF = "text971.htm#10973">BuildHomomorphismFromGradedCap(A, B, phi) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt</A><BR>
<PRE>
</PRE><H3><A NAME = "Building">Building</A></H3>
&nbsp;&nbsp; <A  HREF = "text1643.htm#18364">ObstructionDescentBuildingBlock(M) : ModSym -&gt; SeqEnum</A><BR>
<PRE>
</PRE><H3><A NAME = "building">building</A></H3>
&nbsp;&nbsp; <A  HREF = "text1643.htm">Building Blocks (MODULAR ABELIAN VARIETIES)</A><BR>
&nbsp;&nbsp; <A  HREF = "text634.htm">Building Permutation Groups (PERMUTATION GROUPS)</A><BR>
<PRE>
</PRE><H3><A NAME = "building-blocks">building-blocks</A></H3>
&nbsp;&nbsp; <A  HREF = "text1643.htm">Building Blocks (MODULAR ABELIAN VARIETIES)</A><BR>
<PRE>
</PRE><H3><A NAME = "building-groups">building-groups</A></H3>
&nbsp;&nbsp; <A  HREF = "text634.htm">Building Permutation Groups (PERMUTATION GROUPS)</A><BR>
<PRE>
</PRE><H3><A NAME = "BuildSubgroups">BuildSubgroups</A></H3>
&nbsp;&nbsp; <A  HREF = "text815.htm#9356">GrpFP_1_BuildSubgroups (Example H75E66)</A><BR>
<PRE>
</PRE><H3><A NAME = "builtin">builtin</A></H3>
&nbsp;&nbsp; <A  HREF = "text1515.htm">Built-in L-series (L-FUNCTIONS)</A><BR>
<PRE>
</PRE><H3><A NAME = "Bundle">Bundle</A></H3>
&nbsp;&nbsp; <A  HREF = "text1346.htm#14860">HorrocksMumfordBundle(P) : Prj -&gt; ShfCoh</A><BR>
<PRE>
</PRE><H3><A NAME = "bup">bup</A></H3>
&nbsp;&nbsp; <A  HREF = "text1383.htm#15436">Introduction (ALGEBRAIC SURFACES)</A><BR>
<PRE>
</PRE><H3><A NAME = "Burau">Burau</A></H3>
&nbsp;&nbsp; <A  HREF = "text852.htm#9899">BurauRepresentation(B) : GrpBrd -&gt; Map</A><BR>
&nbsp;&nbsp; <A  HREF = "text852.htm#9900">BurauRepresentation(B, p) : GrpBrd, RngIntElt -&gt; Map</A><BR>
<PRE>
</PRE><H3><A NAME = "BurauRepresentation">BurauRepresentation</A></H3>
&nbsp;&nbsp; <A  HREF = "text852.htm#9899">BurauRepresentation(B) : GrpBrd -&gt; Map</A><BR>
&nbsp;&nbsp; <A  HREF = "text852.htm#9900">BurauRepresentation(B, p) : GrpBrd, RngIntElt -&gt; Map</A><BR>
<PRE>
</PRE><H3><A NAME = "Burnside">Burnside</A></H3>
&nbsp;&nbsp; <A  HREF = "text1034.htm#11686">AbsolutelyIrreducibleModulesBurnside(G, K : parameters ) : Grp, FldFin -&gt; [ ModGrp ]</A><BR>
&nbsp;&nbsp; <A  HREF = "text625.htm#6859">BurnsideCokernel(G) : Grp -&gt; GrpAb, UserProgram, SeqEnum[AlgChtrElt]</A><BR>
&nbsp;&nbsp; <A  HREF = "text714.htm#8137">BurnsideMatrix(G) : GrpPC -&gt; AlgMatElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text637.htm#7048">BurnsideMatrix(G) : GrpPerm -&gt; AlgMatElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text714.htm#8139">DisplayBurnsideMatrix(G) : GrpPC -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text637.htm#7049">DisplayBurnsideMatrix(G) : GrpPerm -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text1034.htm#11687">IrreducibleModulesBurnside(G, K : parameters ) : Grp, FldFin -&gt; [ ModGrp ]</A><BR>
<PRE>
</PRE><H3><A NAME = "BurnsideCokernel">BurnsideCokernel</A></H3>
&nbsp;&nbsp; <A  HREF = "text625.htm#6859">BurnsideCokernel(G) : Grp -&gt; GrpAb, UserProgram, SeqEnum[AlgChtrElt]</A><BR>
<PRE>
</PRE><H3><A NAME = "BurnsideMatrix">BurnsideMatrix</A></H3>
&nbsp;&nbsp; <A  HREF = "text714.htm#8137">BurnsideMatrix(G) : GrpPC -&gt; AlgMatElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text637.htm#7048">BurnsideMatrix(G) : GrpPerm -&gt; AlgMatElt</A><BR>
<PRE>
</PRE><H3><A NAME = "By">By</A></H3>
&nbsp;&nbsp; <A  HREF = "text1647.htm#18448">ApproximateByTorsionGroup(G : parameters) : ModAbVarSubGrp -&gt;  ModAbVarSubGrp</A><BR>
&nbsp;&nbsp; <A  HREF = "text1646.htm#18437">ApproximateByTorsionPoint(x : parameters) : ModAbVarElt -&gt;  ModAbVarElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1731.htm#19008">ConeQuotientByLinearSubspace(C) : TorCon -&gt; TorCon,Map,Map</A><BR>
&nbsp;&nbsp; <A  HREF = "text1385.htm#15527">CubicSurfaceByHexahedralCoefficients(p) : RngUPolElt -&gt; RngMPolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1383.htm#15438">DesingulariseSurfaceByBlowUp(S) : Srfc -&gt; List</A><BR>
&nbsp;&nbsp; <A  HREF = "text1577.htm#17659">DimensionByFormula(M) : ModFrm -&gt; RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1577.htm#17660">DimensionByFormula(N, k) : RngIntElt, FldRatElt -&gt; RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1362.htm#15044">EvaluateByPowerSeries(m, P) : MapSch, Pt -&gt; Pt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1732.htm#19061">FaceSupportedBy(C,H) : TorCon,TorLatElt -&gt; TorCon</A><BR>
&nbsp;&nbsp; <A  HREF = "text1390.htm#15560">HilbertSeriesMultipliedByMinimalDenominator(p,V) : RngUPolElt, SeqEnum -&gt; RngUPolElt, SeqEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text688.htm#7907">IsAbelianByFinite(G : parameters) : GrpMat -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text688.htm#7908">IsCentralByFinite(G : parameters) : GrpMat -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text453.htm#4722">IsDivisibleBy(a, b) : FldFunElt, FldFunElt -&gt; BoolElt, FldFunElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1495.htm#16981">IsDivisibleBy(P, n) : JacHypPt, RngIntElt -&gt; BoolElt, JacHypPt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1434.htm#16252">IsDivisibleBy(P, n) : PtEll, RngIntElt -&gt; BoolElt, PtEll</A><BR>
&nbsp;&nbsp; <A  HREF = "text159.htm#1170">IsDivisibleBy(n, d) : RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text226.htm#1944">IsDivisibleBy(a, b) : RngMPolElt, RngMPolElt -&gt; BoolElt, RngMPolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text213.htm#1821">IsDivisibleBy(a, b) : RngUPolElt, RngUPolElt -&gt; BoolElt, RngUPolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text688.htm#7906">IsNilpotentByFinite(G : parameters) : GrpMat -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text688.htm#7905">IsPolycyclicByFinite(G : parameters) : GrpMat -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text688.htm#7904">IsSolubleByFinite(G : parameters) : GrpMat -&gt; BoolElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1494.htm#16956">JacobianOrdersByDeformation(Q, Y) : RngMPolElt, SeqEnum -&gt; SeqEnum</A><BR>
&nbsp;&nbsp; <A  HREF = "text159.htm#1159">ModByPowerOf2(n, b) : RngIntElt, RngIntElt -&gt; RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1433.htm#16216">MultiplicationByMMap(E, m) : CrvEll, RngIntElt -&gt; Map</A><BR>
&nbsp;&nbsp; <A  HREF = "text275.htm#2555">MultiplyByTranspose(v, A) : ModTupRng, MtrxSprs -&gt; ModTupRng</A><BR>
&nbsp;&nbsp; <A  HREF = "text73.htm#572">ProfilePrintByTotalCount(G): GrphDir -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text73.htm#573">ProfilePrintByTotalTime(G): GrphDir -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text73.htm#574">ProfilePrintChildrenByCount(G, n): GrphDir, GrphVert -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text73.htm#575">ProfilePrintChildrenByTime(G, n): GrphDir, GrphVert -&gt;</A><BR>
&nbsp;&nbsp; <A  HREF = "text1359.htm#14959">RandomCurveByGenus(g, K) : RngIntElt, Fld -&gt; Crv</A><BR>
&nbsp;&nbsp; <A  HREF = "text970.htm#10958">RandomIdealGeneratedBy(A, n) : AlgBas, RngIntElt -&gt; ModTupFld</A><BR>
&nbsp;&nbsp; <A  HREF = "text1328.htm#14509">RationalPointsByFibration(X) : Sch -&gt; SetIndx</A><BR>
&nbsp;&nbsp; <A  HREF = "text1383.htm#15439">ResolveSingByBlowUp(X,Y) : Sch, Sch -&gt; DesingData</A><BR>
&nbsp;&nbsp; <A  HREF = "text1640.htm#18270">RingGeneratedBy(H) : HomModAbVar -&gt;  HomModAbVar</A><BR>
&nbsp;&nbsp; <A  HREF = "text400.htm#4156">SolveByRadicals(f) : RngUPolElt -&gt; FldNum, [FldNumElt], [FldNumElt]</A><BR>
&nbsp;&nbsp; <A  HREF = "text650.htm#7385">SplitAllByValues(P, V) : StkPtnOrd, SeqEnum[RngIntElt] -&gt; BoolElt, RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text650.htm#7386">SplitCellsByValues(P, C, V) : StkPtnOrd, SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; BoolElt, RngIntElt</A><BR>
&nbsp;&nbsp; <A  HREF = "text1452.htm#16562">ThreeDescentByIsogeny(E) : CrvEll -&gt; [ Crv ], [ Map ]</A><BR>
<PRE></PRE>
[____] [____] [_____] [____] [__] <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>