<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Automorphisms</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text769.htm">[Next]</A><A  HREF = "text767.htm">[Prev]</A> <A  HREF = "text769.htm">[Right]</A> <A  HREF = "text767.htm">[Left]</A> <A  HREF = "text762.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "8789">Automorphisms</A></H3>

<P>
<P>
The elements of a group of automorphisms are automorphisms of the base group,
so Magma treats them as both homomorphisms and group elements. Thus they may
be applied to elements and subgroups of the base group as a homomorphism,
or they may be multiplied and have inverses taken as group elements. Of course,
these last two operations are also homomorphism operations, being
composition and the usual inverse of a bijection.
Elements of a group of automorphisms are of type <TT>GrpAutoElt</TT>.


<H5><A NAME = "8790">A . i : GrpAuto, RngIntElt -&gt; GrpAutoElt</A></H5>
<BLOCKQUOTE>
Let A be a group of automorphisms of a group G and let i be an
integer such that -n &le;i &le;n, where n is the number of
generators of A. This operator returns the i-th generator for A. 
A negative subscript indicates that the inverse of the generator 
is to be created. Finally, A.0 denotes the identity of A.
</BLOCKQUOTE>
<H5><A NAME = "8791">Identity(A) : GrpAuto -&gt; GrpAutoElt</A></H5>
<H5>Id(A) : GrpAuto -&gt; GrpAutoElt</H5>
<H5>A ! 1 : GrpAuto, RngIntElt -&gt; GrpAutoElt</H5>
<BLOCKQUOTE>
The identity element of the group of automorphisms A.
</BLOCKQUOTE>
<H5><A NAME = "8792">A ! f : GrpAuto, Map -&gt; GrpAutoElt</A></H5>
<BLOCKQUOTE>
Let A be a group of automorphisms of a group G.  Given an automorphism 
f of G, represented as a Magma map, this function returns the element 
of A corresponding to f.  An error will result if f is not in the group 
generated by the generators of A. This uses the permutation representation 
of A to test for membership.
</BLOCKQUOTE>
<H5><A NAME = "8793">Order(f) : GrpAutoElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The order of the group automorphism f.
</BLOCKQUOTE>
<H5><A NAME = "8794">f * g : GrpAutoElt, GrpAutoElt -&gt; GrpAutoElt</A></H5>
<BLOCKQUOTE>
The product of the group automorphisms f and g. If f and g are regarded 
as maps, this function returns their composite: first apply f, then apply g. 
</BLOCKQUOTE>
<H5><A NAME = "8795">f ^ n : GrpAutoElt, RngIntElt -&gt; GrpAutoElt</A></H5>
<BLOCKQUOTE>
The nth power of the group automorphism f. The integer n may be
positive or negative.
</BLOCKQUOTE>
<H5><A NAME = "8796">(g<sub>1</sub>, ..., g<sub>r</sub>) : GrpAutoElt, ..., GrpAutoElt -&gt; GrpAutoElt</A></H5>
<BLOCKQUOTE>
The left-normed commutator of the group automorphisms g<sub>1</sub>, ..., g<sub>r</sub>.
Each of g<sub>1</sub>, ..., g<sub>r</sub> must belong to a common automorphism group.
</BLOCKQUOTE>
<H5><A NAME = "8797">g eq h : GrpAutoElt, GrpAutoElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given group automorphisms g and h belonging to the same automorphism
group, return <TT>true</TT> if g and h are the same element, <TT>false</TT> 
otherwise.
</BLOCKQUOTE>
<H5><A NAME = "8798">g ne h : GrpAutoElt, GrpAutoElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given group automorphisms g and h belonging to the same automorphism
group, return <TT>false</TT> if g and h are the same element, <TT>true</TT> 
otherwise.
</BLOCKQUOTE>
<H5><A NAME = "8799">IsInner(f) : GrpAutoElt -&gt; BoolElt, GrpElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group automorphism f is an inner automorphism 
of the base group, <TT>false</TT> otherwise. If f is inner, then an element 
of the base group with conjugation action equal to the action of f is 
also returned.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "8800">Example <TT>GrpAuto_autogp-elts (H72E5)</TT></A></H3>
We illustrate some arithmetic operations with elements of the full group of 
automorphisms of a group of order 81.
<P>
<P>
<PRE>
&gt; G := SmallGroup(81, 10);     
&gt; G;
GrpPC : G of order 81 = 3^4
PC-Relations:
  G.1^3 = G.4, 
  G.2^3 = G.4^2, 
  G.2^G.1 = G.2 * G.3, 
  G.3^G.1 = G.3 * G.4
&gt; A := AutomorphismGroup(G);
&gt; #A;
486
&gt; Ngens(A);
5
&gt; IsInner(A.3);
false
&gt; Order(A.3);
3
&gt; A.3;
Automorphism of GrpPC : G of order 3 which maps:
  G.1 |--&gt; G.1
  G.2 |--&gt; G.2 * G.4^2
  G.3 |--&gt; G.3
  G.4 |--&gt; G.4
&gt; A.3*A.4;
Automorphism of GrpPC : G which maps:
  G.1 |--&gt; G.1
  G.2 |--&gt; G.2 * G.3 * G.4^2
  G.3 |--&gt; G.3 * G.4
  G.4 |--&gt; G.4
&gt; (A.3*A.4)^3;      
Automorphism of GrpPC : G which maps:
  G.1 |--&gt; G.1
  G.2 |--&gt; G.2
  G.3 |--&gt; G.3
  G.4 |--&gt; G.4
&gt; $1 eq Id(A);
true
</PRE>
<HR>
<H3><A NAME = "8801">Example <TT>GrpAuto_characteristic-subgroups (H72E6)</TT></A></H3>
We can use the automorphism group machinery to determine the characteristic
subgroups of a group.
<P>
<P>
<P>
<PRE>
&gt; CharacteristicSubgroups := function(G)
&gt;    local A, outers, NS, CS;
&gt;    A := AutomorphismGroup(G);
&gt;    outers := [ a : a in Generators(A) | not IsInner(a) ];
&gt;    NS := NormalSubgroups(G);
&gt;    CS := [n : n in NS | forall{a: a in outers| a(n`subgroup) eq n`subgroup }];
&gt;    return CS;
&gt; end function;
&gt;
&gt; CS := CharacteristicSubgroups(DirectProduct(Alt(4),Alt(4)));
&gt; [c`order: c in CS];
[ 1, 16, 144 ]
&gt; G := SmallGroup(512,298);     
&gt; #NormalSubgroups(G);
42
&gt; #CharacteristicSubgroups(G);
28
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text769.htm">[Next]</A><A  HREF = "text767.htm">[Prev]</A> <A  HREF = "text769.htm">[Right]</A> <A  HREF = "text767.htm">[Left]</A> <A  HREF = "text762.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>