<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Attributes</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text414.htm">[Next]</A><A  HREF = "text412.htm">[Prev]</A> <A  HREF = "text414.htm">[Right]</A> <A  HREF = "text412.htm">[Left]</A> <A  HREF = "text405.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "4288">Attributes</A></H3>

<P>
<P>
In this rather technical section, we describe the programming interface
to the abelian extension module. Most of the internal representation is 
available as attributes and may be used to extend the package.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text413.htm#4289">Orders</A>
<LI> <A  HREF = "text413.htm#4292">Abelian Extensions</A>
</UL>
<H4><A NAME = "4289">Orders</A></H4>

<P>
<P>
The only attribute of orders <TT>RngOrd</TT> that is of interest here concerns
cyclotomic extensions. The first and usually most time consuming step 
while computing defining extensions is to adjoin certain roots of unity and
to compute class groups of these rather large fields.
<P>
The cyclotomic extensions are stored and are available via an attribute. This
attribute is a read-only attribute.


<H5><A NAME = "4290">o`CyclotomicExtensions : RngOrd -&gt; [Rec]</A></H5>
<BLOCKQUOTE>
If defined, <TT>CyclotomicExtensions</TT> is a list of records, each containing
data for one cyclotomic extension, i.e. for an order o this is an extension
of the form O := o[&zeta;<sub>l</sub>] for a prime power l = p<sup>n</sup>.
The components are
<DL COMPACT class='compact'>
<DT><TT>Abs</TT></DT><DD>: a maximal order Oa of O given as an absolute 
  extension
<DT><TT>Rel</TT></DT><DD>: O as an extension of o
<DT><TT>p2n</TT></DT><DD>: the "l", i.e. the cyclotomic order
<DT><TT>Zeta</TT></DT><DD>: a primitive lth root of unity as an element of
  the absolute extension <TT>Abs</TT>
<DT><TT>Aut</TT></DT><DD>: a list of records describing generators for the
  automorphism group of O over o.
  If p is an odd prime then the list will always be of length 1.
  This list consists of the following components:
<DT><TT>Aut`Abs</TT></DT><DD>: the automorphism as an automorphism of Oa
<DT><TT>Aut`Rel</TT></DT><DD>: the automorphism as an automorphism of O.
      Note that in general this is not an o-automorphism, as o itself may
      contain roots of unity.
<DT><TT>Aut`Order</TT></DT><DD>: the order of the automorphism
<DT><TT>Aut`r</TT></DT><DD>: the image of &zeta;<sub>l</sub>, this automorphism sends
    &zeta;<sub>l</sub> to &zeta;<sub>l</sub><sup>r</sup>.
<P>
<P>
</DL>
Due to possible common subfields of o and Q(&zeta;<sub>k</sub>), the degree
of O over o may be smaller than expected. Furthermore, Oa will be
in optimized representation.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "4291">Example <TT>FldAb_cyclotomic-extension (H40E10)</TT></A></H3>
We will demonstrate this with the Hilbert class field of Q(Sqrt( - 1001)):
<P>
<P>
<PRE>
&gt; Zx&lt;x&gt; := PolynomialRing(Integers());
&gt; k := NumberField(x^2+1001);
&gt; g, m :=ClassGroup(k); g;
Abelian Group isomorphic to Z/2 + Z/2 + Z/10
Defined on 3 generators
Relations:
    2*$.1 = 0
    2*$.2 = 0
    10*$.3 = 0
&gt; K := HilbertClassField(k);
Number Field with defining polynomial [ $.1^2 - 2*k.1 + 136, 
    $.1^2 - 4*k.1 - 47, $.1^2 + 2*k.1 - 136, $.1^5 + 37210*$.1^3 
    + (-2104500*k.1 + 61148840)*$.1^2 + (-292068000*k.1 + 
    14636593760)*$.1 + 305212632000*k.1 - 1779009360128] over k
&gt; o := MaximalOrder(k);
&gt; c := o`CyclotomicExtensions;
&gt; #c;
2
</PRE>
Since there are two non-isomorphic direct cyclic factors of prime
power order in the class group of k, we have two cyclotomic extensions
stored in o. One has order 2 and the other has order 5:
<P>
<P>
<PRE>
&gt; c[1]`p2n; 
2
&gt; c[2]`p2n;
5
</PRE>
Since the order 2 extension is essentially trivial, we will discuss
the other extension in detail.
<P>
<P>
<PRE>
&gt; c[2]`Abs;
Maximal Order of Equation Order with defining polynomial x^8 + 
    4*x^7 + 4016*x^6 + 12034*x^5 + 6032056*x^4 + 12044060*x^3 + 
    4016040045*x^2 + 4010020020*x + 1000000005005 over Z
&gt; c[2]`Rel;
Maximal Equation Order with defining polynomial x^4 + x^3 + x^2 +
    x + [1, 0] over o
</PRE>
The relative extension is generated by a root of the 5th-cyclotomic 
polynomial of degree 4, so there are no common subfields. The 
corresponding absolute extension has degree 8. As one can see, 
the class group (at least a conditional class group) is known:
<P>
<P>
<PRE>
&gt; c[2]`Abs:Maximal;
   F[1]
    |
   F[2]
  /
 /
Q
F  [ 1]     Given by transformation matrix
F  [ 2]     x^8 + 4*x^7 + 4016*x^6 + 12034*x^5 + 6032056*x^4 + 
    12044060*x^3 + 4016040045*x^2 + 4010020020*x + 1000000005005
Discriminant: 4016024016004000000 
Index: 4100090871676479535981/1 
Class Number 12800
Class Group Structure C2 * C4 * C20 * C80
Signature: [0, 4]

</PRE>
We will illustrate the <TT>Aut</TT> entries by showing their effect
on &zeta;<sub>5</sub>. Since the maps operate between the number fields rather than
the orders, we will coerce the results back into the orders for
clarity. The only difference between <TT>Rel</TT> and <TT>Abs</TT> is that
<TT>Rel</TT> implements the automorphism in the relative extension.
<P>
<P>
<PRE>
&gt; Oa := c[2]`Abs;
&gt; z := c[2]`Zeta; z;
[0, 1, 0, 0, 0, 0, 0, 0]
&gt; Oa!c[2]`Aut[1]`Abs(z);
[0, 0, 1, 0, 0, 0, 0, 0]
&gt; z^c[2]`Aut[1]`r;
[0, 0, 1, 0, 0, 0, 0, 0]
</PRE>
The <TT>Order</TT> entry gives the order of the automorphism:
<P>
<P>
<PRE>
&gt; c[2]`Aut[1]`Order;
4
&gt;  Oa!c[2]`Aut[1]`Abs(z);
[0, 0, 1, 0, 0, 0, 0, 0]
&gt;  Oa!(c[2]`Aut[1]`Abs($1));
[-1, -1, -1, -1, 0, 0, 0, 0]
&gt;  Oa!(c[2]`Aut[1]`Abs($1));
[0, 0, 0, 1, 0, 0, 0, 0]
&gt;  Oa!(c[2]`Aut[1]`Abs($1));
[0, 1, 0, 0, 0, 0, 0, 0]
</PRE>
As a by--product one can see the optimized representation:
the first four basis elements are clearly 1, &zeta;<sub>5</sub>,
&zeta;<sub>5</sub><sup>2</sup>, &zeta;<sub>5</sub><sup>3</sup> which are the T<sub>2</sub> shortest integral elements
in m.
<HR>
<H4><A NAME = "4292">Abelian Extensions</A></H4>

<P>
<P>
Abelian extensions have several attributes. Most of them are only useful in 
programming.


<H5><A NAME = "4293">A`Components : FldAb -&gt; [Rec]</A></H5>
<BLOCKQUOTE>
This read-only attribute contains a record for each cyclic factor of prime 
power degree that occurs in the abelian extension. In order to describe
the contents we have to fix some definitions.
Let o be the base ring of the abelian extension A. Then O
will be the maximal order of the cyclotomic extension o[&zeta;<sub>l</sub>] as
an extensions of Z. The algorithm for the computation of defining
extensions will firstly compute a generator a&isin;O such that
O(a<sup>1/l</sup>) equals A(&zeta;<sub>l</sub>). This element will be a certain S-unit
of O.
<P>
The components are
<DL COMPACT class='compact'>
<DT><TT>Basis</TT></DT><DD>: a matrix B containing order elements. This represents
a "multiplicative basis" for the generator a and all the S-units that
are used.
<DT><TT>GenRaw</TT></DT><DD>: the exponent vector G defining a, i.e.
a = &prod;<sub>i</sub> (B<sub>1, i</sub>)<sup>G<sub>i, 1</sub></sup>.
<DT><TT>UnitsRaw</TT></DT><DD>: a matrix U defining a basis for the group
of S-units, i.e.
u<sub>j</sub> = &prod;<sub>i</sub> (B<sub>1, i</sub>)<sup>U<sub>j, i</sub></sup>.
<DT><TT>S</TT></DT><DD>: a list containing the prime ideals of S
<DT><TT>Gen</TT></DT><DD>: a as an element of Oa
<DT><TT>GenAut</TT></DT><DD>: the image of a generator for the class field 
(an image of <TT>Class-Field.2</TT>) in the field of fractions of O 
under a generator for the 
cyclic group corresponding to this component.
<DT><TT>GenInv</TT></DT><DD>: 1/a as an element of the field of fractions of Oa
<DT><TT>O</TT></DT><DD>: the big Kummer extension Oa(a<sup>1/l</sup>)
<DT><TT>ClassField</TT></DT><DD>: an equation order for the cyclic extension
corresponding to this component. This will be an extension of o.
<DT><TT>Artin</TT></DT><DD>: the Artin map on the big Kummer extension
o[&zeta;<sub>l</sub>](U<sub>S</sub><sup>1/l</sup>) where the automorphisms are represented as elements
in some abelian group of type C<sub>l</sub><sup>#S</sup>.</DL>
</BLOCKQUOTE>
<H5><A NAME = "4294">A`DefiningGroup : FldAb -&gt; Rec</A></H5>
<H5>A`NormGroup : FldAb -&gt; Rec</H5>
<BLOCKQUOTE>
These two attributes give access to the ideal group used to define A,
and they have the same structure. <TT>DefiningGroup</TT> is the group used to 
create A in the first place whereas <TT>NormGroup</TT> contains the 
group defined modulo the conductor. The user needs to call the function 
<A  HREF = "text410.htm#FldAb:Conductor">Conductor</A> in order to define this component.
These attributes are read-only.
<P>
The records contain the following components:
<DL COMPACT class='compact'>
<DT><TT>Map</TT></DT><DD>: the map as passed into the <A  HREF = "text407.htm#FldAb:AbelianExtension">AbelianExtension</A>
constructor, respectively, an equivalent map.
<DT><TT>m0</TT></DT><DD>: the "finite" part of the modulus underlying <TT>Map</TT>
<DT><TT>m_inf</TT></DT><DD>: the "infinite" part of the modulus underlying <TT>Map</TT>
<DT><TT>RcgMap</TT></DT><DD>: if present, contains the map returned from the call
to <A  HREF = "text407.htm#FldAb:RayClassGroup">RayClassGroup</A> with <TT>m0</TT> and <TT>m_inf</TT>.
<DT><TT>GrpMap</TT></DT><DD>: if present, the "rest" of <TT>Map</TT>, i.e.
<TT>Map</TT>  =  <TT>RcgMap</TT> <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> <TT>GrpMap</TT>.</DL>
</BLOCKQUOTE>
<H5><A NAME = "4295">A`IsAbelian : FldAb -&gt; Bool</A></H5>
<BLOCKQUOTE>
Stores the result of a call to <A  HREF = "text408.htm#FldAb:IsAbelian">IsAbelian</A> with parameter
<TT>All := <TT>true</TT></TT>.
</BLOCKQUOTE>
<H5><A NAME = "4296">A`IsNormal : FldAb -&gt; Bool</A></H5>
<BLOCKQUOTE>
Stores the result of a call to <A  HREF = "text408.htm#FldAb:IsNormal">IsNormal</A> with parameter
<TT>All := <TT>true</TT></TT>.
</BLOCKQUOTE>
<H5><A NAME = "4297">A`IsCentral : FldAb -&gt; Bool</A></H5>
<BLOCKQUOTE>
Stores the result of a call to <A  HREF = "text408.htm#FldAb:IsCentral">IsCentral</A> with parameter
<TT>All := <TT>true</TT></TT>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "4298">Example <TT>FldAb_abelian-extension-attributes (H40E11)</TT></A></H3>
To illustrate the preceding examples we will investigate the 3-part of
the ray class field modulo 36 over Z[Sqrt(10)]:
<P>
<P>
<PRE>
&gt; Zx&lt;x&gt; := PolynomialRing(Integers());
&gt; o := MaximalOrder(x^2+10);
&gt; r, mr := RayClassGroup(36*o);
&gt; q, mq := quo&lt;r| [r.i*3 : i in [1..Ngens(r)]]&gt;;
&gt; A := AbelianExtension(Inverse(mq)*mr); A;
FldAb, defined by (&lt;[36, 0]&gt;, [])
of structure: Z/3 + Z/3
</PRE>
At this stage, the only attribute that is assigned is <TT>DefiningGroup</TT>.
<P>
<P>
<PRE>
&gt; la := GetAttributes(FldAb);
&gt; [ &lt;assigned A"i, i&gt; : i in la];
[ &lt;false, Components&gt;, &lt;true, DefiningGroup&gt;, &lt;false, IsAbelian&gt;,
&lt;false, IsCentral&gt;, &lt;false, IsNormal&gt;, &lt;false, NormGroup&gt; ]
</PRE>
So let us have a closer look at <TT>DefiningGroup</TT>:
<P>
<P>
<PRE>
&gt; d := A`DefiningGroup;
&gt; d;
rec&lt;recformat&lt;Map, m0, m_inf, RcgMap, GrpMap&gt; | Map := Mapping 
from: GrpAb: q to Set of ideals of o
Composition of Mapping from: GrpAb: q to GrpAb: r and
Mapping from: GrpAb: r to Set of ideals of o, m0 := Principal 
Ideal of o
Generator:
    [36, 0], m_inf := [], RcgMap := Mapping from: GrpAb: r to Set
of ideals of o, GrpMap := Mapping from: GrpAb: q to GrpAb: r&gt;
</PRE>
As one can see, <TT>Map</TT> is the original map used to define A.
Note that this is the composition of
<TT>RcgMap</TT> and <TT>GrpMap</TT>, the first being 
equivalent to <TT>mr</TT>, the second to <TT>mq</TT>.
Furthermore, the defining modulus is now available in <TT>m0</TT>
and <TT>m_inf</TT>.
<P>
After having set up A, we now need to transform it into a number field
in order for the <TT>Components</TT> to be assigned:
<P>
<P>
<PRE>
&gt; K := NumberField(A);
&gt; K;
Number Field with defining polynomial [ $.1^3 - 3*$.1 - 6*$.1 - 
    11, $.1^3 - 3*$.1 - 6*$.1 + 11] over its ground field
&gt; c := A`Components;
&gt; #c;
2
</PRE>
We will focus on the first component only.
<P>
<P>
<PRE>
&gt; B := c[1]`Basis;
&gt; a := &amp;* [ B[1][i] ^ c[1]`GenRaw[i][1] : i in [1..Ncols(B)]];
&gt; a;
-11/1*$.2 + 4/1*$.3 + 2/1*$.4
&gt; c[1]`Gen;
[0, -11, 4, 2]
&gt; c[1]`Gen eq a;
true
&gt; c[1]`GenInv * a eq 1;
true
&gt; c[2]`GenInv * a eq 1;
false
</PRE>
In S we need all primes dividing the degree 9 of our extension,
all primes dividing the modulus 36 and enough primes to generate the
3-part of the class group. Since the class group can be generated
by the prime ideal over 2, this leaves us with only two prime ideals in 
S. Since k is imaginary quadratic, the base field k[&zeta;<sub>3</sub>] is
totally complex of degree 4 which implies unit rank 1.
So the free rank of our S-unit group will be 3, and since we have
to take care of the torsion unit, <TT>GenRaw</TT> will have 4
columns.
<P>
<P>
<PRE>
&gt; #c[1]`S;
2
&gt; UnitRank(o);
1
&gt; Ncols(c[1]`UnitsRaw);
4
&gt; U := c[1]`UnitsRaw;
&gt; u := [ &amp;* [B[1][i] ^ U[i][j] : i in [1..Ncols(B)]] : j in [1..4]];
</PRE>
Now u<sub>1</sub> should be a fundamental unit for Oa, u<sub>2</sub> and u<sub>3</sub> are S-units
and u<sub>4</sub> is the torsion unit, since we adjoin the 3rd-roots of unity,
this will be a 6th root of unity.
<P>
<P>
<PRE>
&gt; Oa := Parent(B[1][1]);
&gt; Oa!u[1];
[0, -11, 4, 2]
&gt; IsUnit($1);
true
&gt; Decomposition(u[2]);
[
    &lt;Prime Ideal of Oa
    Two element generators:
        [3, 0, 0, 0]
        [-9, 0, 1, 2], 1&gt;
]
&gt; u[4]^6 eq 1;
</PRE>
Now O should be an extension of Oa:
<P>
<P>
<PRE>
&gt; c[1]`O:Maximal;    
         F[1]
           /
          /
      E2[1]
        /
       /
   E1[1]
  /
 /
Q
F  [ 1]     x^3 + [[0, -4], [11, -2]]
E 2[ 1]     x^2 + x + [1, 0]
E 1[ 1]     x^2 + 10
Index : &lt;[[1, 0], [0, 0]]&gt; 
</PRE>
The class field K we are seeking is a subfield of O:
<P>
<P>
<PRE>
&gt; c[1]`ClassField;
Equation Order with defining polynomial x^3 + [-3, 0]*x + [-11, 
    -6] over o
&gt; g := c[1]`ClassField.2;
&gt; c[1]`O!g;
[[[0, 0], [0, 0]], [[1, 0], [0, 0]], [[11, 2], [11, -2]]]
</PRE>
Note that the absolute term of the defining polynomial is a.
Since <TT>GenAut</TT> is an image of g, its minimal polynomial
should be the same as that of g:
<P>
<P>
<PRE>
&gt; MinimalPolynomial(g);
$.1^3 - 3/1*o.1*$.1 - 11/1*o.1 - 6/1*o.2
&gt; Evaluate($1, c[1]`GenAut);
0
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text414.htm">[Next]</A><A  HREF = "text412.htm">[Prev]</A> <A  HREF = "text414.htm">[Right]</A> <A  HREF = "text412.htm">[Left]</A> <A  HREF = "text405.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>