<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Automorphisms and  Isomorphisms</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text973.htm">[Next]</A><A  HREF = "text971.htm">[Prev]</A> <A  HREF = "text973.htm">[Right]</A> <A  HREF = "text971.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10977">Automorphisms and  Isomorphisms</A></H3>

<P>
<P>
<P>
Magma has the capability of computing automorphisms and isomorphisms
of basic algebras. Because the automorphism groups tend to be rather 
large, the functions work best on small examples. 


<H5><A NAME = "10978">GradedAutomorphismGroupMatchingIdempotents(A) : AlgBas -&gt;                GrpMat, SeqEnum, SecEnum</A></H5>
<BLOCKQUOTE>
Returns the group of graded automorphisms of the basic algebra A
that preserve the idempotents of A. Returns also the graded caps
(matrices of homomorphisms from X/Rad<sup>2</sup>(X) to itself, where X is
the Associated Graded algebra of A) of the generators of the automorphism
group in two sequenced, nonunipotent generators and unipotent generators.
</BLOCKQUOTE>
<H5><A NAME = "10979">GradedAutomorphismGroup(A) : AlgBas -&gt; GrpMat, SeqEnum[ModMatFldElt],        SeqEnum[ModMatFldElt], SeqEnum[ModMatFldElt]</A></H5>
<BLOCKQUOTE>
Returns the group of graded automorphisms of the associated graded
algebra X of the basic algebra A. The function returns also the graded 
caps of the generators of the graded automorphism group. These are the 
induced automorphisms of X/Rad<sup>2</sup>(X) to itself, and they are returned as two
lists of nonunipotent and unipotent generators that preserve the idempotents
of X and a list of generators that permute the idempotents.
</BLOCKQUOTE>
<H5><A NAME = "10980">IsGradedIsomorphic(A, B) : AlgBas, AlgBas  -&gt; Bool, ModMatFldElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the associated graded algebras of A and B are isomorphic, in
which case the isomorphism is returned.
</BLOCKQUOTE>
<H5><A NAME = "10981">AutomorphismGroupMatchingIdempotents(A) : AlgBas -&gt; AlgBas, ModMatFldElt</A></H5>
<BLOCKQUOTE>
Returns the group of all automorphism of the basic algebra A that 
preserve the basic idempotent structure. That is, any element of this 
group induces the identity automorphism on the quotient A/Rad(A) of A
by its Jacobson radical.
</BLOCKQUOTE>
<H5><A NAME = "10982">AutomorphismGroup(A) : AlgBas -&gt; GrpMat, SeqEnum, SeqEnum, SeqEnum</A></H5>
<BLOCKQUOTE>
Returns the automorphism group of the basic Algebra A, together with the
sequences of nonnilpotent generators preserving idempotents, nilpotent 
generators preserving idempotents and generators that permute the 
idempotents.
</BLOCKQUOTE>
<H5><A NAME = "10983">InnerAutomorphismGroup(A) : AlgBas -&gt; GrpMat</A></H5>
<BLOCKQUOTE>
Returns the group of inner automorphisms of the basic algebra A.
</BLOCKQUOTE>
<H5><A NAME = "10984">IsIsomorphic(A, B) : AlgBas, AlgBas -&gt; Bool, Map</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the basic algebra A is isomorphic to the basic algebra B and, if 
so, the function also returns an isomorphism.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10985">Example <TT>AlgBas_Automorphism group (H90E9)</TT></A></H3>
We compute the automorphism group of a group algebra. 
<P>
<P>
<PRE>
&gt; A := BasicAlgebra(SmallGroup(81, 7));
&gt; time ba := AutomorphismGroup(A);
Time: 6.260
&gt; #ba;
687170027642681774715281506354161696936143362668
&gt; Factorization(#ba);
[ &lt;2, 2&gt;, &lt;3, 99&gt; ]
</PRE>
As expected the automorphism group has a very large 
unipotent 3-subgroup.  
<HR>
<H3><A NAME = "10986">Example <TT>AlgBas_modify presentation (H90E10)</TT></A></H3>
We can see if small changes in the presentation of an algebra
affect the isomorphism type. We define the algebras by generators
and relations. 
<P>
<P>
<P>
<PRE>
&gt; F&lt;e1,e2,z,y,x&gt; := FreeAlgebra(GF(5),5);                             
&gt; RR:= [(y*z)^3,x^4,x*y*z];
&gt; A := BasicAlgebra(F,RR,2,[&lt;1,2&gt;,&lt;2,1&gt;,&lt;2,2&gt;]);
&gt; A;
Basic algebra of dimension 49 over GF(5)
Number of projective modules: 2
Number of generators: 5
&gt; RS:= [(y*z)^3-x^4,x^5,x*y*z,(z*y)^3];                               
&gt; B := BasicAlgebra(F,RS,2,[&lt;1,2&gt;,&lt;2,1&gt;,&lt;2,2&gt;]);
&gt; B;
Basic algebra of dimension 49 over GF(5)
Number of projective modules: 2
Number of generators: 5
&gt; RT:= [(y*z)^3-2*x^4,x^5,x*y*z,(z*y)^3];                             
&gt; C := BasicAlgebra(F,RS,2,[&lt;1,2&gt;,&lt;2,1&gt;,&lt;2,2&gt;]);
&gt; C;                                                                  
Basic algebra of dimension 49 over GF(5)
Number of projective modules: 2
Number of generators: 5
&gt; time ab, x := IsIsomorphic(A,B);                                    
Time: 0.100
&gt; ab;                             
false
&gt; time ac, x := IsIsomorphic(A,C);                                    
Time: 0.050
&gt; print ac;                       
false
&gt; time bc,x := IsIsomorphic(B,C);                                     
Time: 2.350
&gt; print bc;                      
true
</PRE>
<HR>
<H3><A NAME = "10987">Example <TT>AlgBas_GradedGroupAlgebras (H90E11)</TT></A></H3>
We can see which groups of order 32 have mod 2 group algebras
that are graded. The algebra is graded if and only if it is 
isomorphic to its associated graded algebra. So we make a list
of those algebras whose group algebras are graded. Note that 
there are 51 isomorphism classes of groups of order 32. The last
one (number 51) is elementary abelian and we know that its group
algebra is graded. 
<P>
<P>
<P>
<PRE>
&gt; graded := [];
&gt; for i := 1 to 50 do
&gt;     A := BasicAlgebra(SmallGroup(32,i));
&gt;     B := AssociatedGradedAlgebra(A);
&gt;     boo, map := IsIsomorphic(A, B);
&gt;     if boo then Append(~graded, i); end if;
&gt; end for;
&gt; graded;
[ 1, 2, 3, 5, 9, 12, 14, 16, 18, 21, 22, 25, 36, 39, 45, 46 ]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text973.htm">[Next]</A><A  HREF = "text971.htm">[Prev]</A> <A  HREF = "text973.htm">[Right]</A> <A  HREF = "text971.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>