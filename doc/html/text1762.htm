<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>General Design Constructions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1763.htm">[Next]</A><A  HREF = "text1761.htm">[Prev]</A> <A  HREF = "text1763.htm">[Right]</A> <A  HREF = "text1761.htm">[Left]</A> <A  HREF = "text1758.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "19514">General Design Constructions</A></H3>

<P>
<P>
<P>
Each of these functions returns three values:
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>The incidence structure D;
<DT>(ii)</DT><DD>The point-set P of D;
<DT>(iii)</DT><DD>The block-set B of D.</DL>



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1762.htm#19515">The Construction of Related Structures</A>
<LI> <A  HREF = "text1762.htm#19527">The Witt Designs</A>
<LI> <A  HREF = "text1762.htm#19530">Difference Sets and their Development</A>
</UL>
<H4><A NAME = "19515">The Construction of Related Structures</A></H4>

<P>
<P>
<P>
All operations defined for incidence structures apply also 
to near--linear spaces, linear spaces and designs.


<H5><A NAME = "19516">Complement(D) : Inc -&gt; Inc</A></H5>
<BLOCKQUOTE>
The complement of the incidence structure D.
</BLOCKQUOTE>
<H5><A NAME = "19517">Dual(D) : Inc -&gt; Inc</A></H5>
<BLOCKQUOTE>
The dual of the incidence structure D.
</BLOCKQUOTE>
<H5><A NAME = "19518">Contraction(D, p) : Inc, IncPt -&gt; Inc</A></H5>
<BLOCKQUOTE>
Given an incidence structure D = (P, B), and a point p &isin;P,
form the incidence structure 
E = ( P - { p }, { b - { p } : b &isin;B | p &isin;b } ).
Thus, E is constructed from D by deleting p and retaining only 
those blocks incident with it.
</BLOCKQUOTE>
<H5><A NAME = "19519">Contraction(D, b) : Inc, IncBlk -&gt; Inc</A></H5>
<BLOCKQUOTE>
Given an incidence structure D = (P, B), and a block b &isin;B,
form the incidence structure 
E = ( b, { b &cap;c : c &isin;B | c &ne;b } ).
Thus, E has point set b and its blocks are the non--empty 
intersections of b with the blocks of D other than b itself.
</BLOCKQUOTE>
<H5><A NAME = "19520">Residual(D, b) : Inc, IncBlk -&gt; Inc</A></H5>
<BLOCKQUOTE>
Given an incidence structure D = (P, B), and a block b &isin;B,
form the incidence structure E = ( P - b, B - { b } ).
Thus, E has point set P - b and its blocks are the non--empty 
intersections of P - b with the blocks of D.
</BLOCKQUOTE>
<H5><A NAME = "19521">Residual(D, p) : Inc, IncPt -&gt; Inc</A></H5>
<BLOCKQUOTE>
Given an incidence structure D = (P, B), and a point p &isin;P,
form the incidence structure 
E = ( P - { p }, { x : x &isin;B | p &notin;x } ).
Thus, E has point set P - { p } and its blocks are
the blocks of D which do not contain p.
</BLOCKQUOTE>
<H5><A NAME = "19522">Simplify(D) : Inc -&gt; Inc</A></H5>
<BLOCKQUOTE>
Simplify the incidence structure D; i.e., remove repeated blocks
from D.
</BLOCKQUOTE>
<H5><A NAME = "19523">Sum(Q) : [ Inc ] -&gt; Inc</A></H5>
<BLOCKQUOTE>
Given a sequence Q = [ D<sub>1</sub>, ..., D<sub>l</sub> ] of incidence structures,
each of which is defined over the same set P of points, 
form the incidence structure obtained by taking the union of the
block sets of D<sub>1</sub>, ..., D<sub>l</sub>. Thus, if D<sub>i</sub> = (P, B<sub>i</sub>)
then D = (P, B<sub>1</sub> &cup; ... &cup;B<sub>l</sub>).
</BLOCKQUOTE>
<H5><A NAME = "19524">Union(D, E) : Inc, Inc -&gt; Inc</A></H5>
<BLOCKQUOTE>
The union of incidence structures D and E.
That is, if D = (P, B) and E = (Q, C), then return
U = (P &cup;Q, B &cup;C).
The point sets P and Q must be disjoint.
</BLOCKQUOTE>
<H5><A NAME = "19525">Restriction(D, S) : IncNsp, { Incpt } -&gt; IncNsp</A></H5>
<BLOCKQUOTE>
The restriction of the (near--)linear space D to the set of points S.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "19526">Example <TT>Design_related (H153E3)</TT></A></H3>
We illustrate some of the above functions with an example.
<P>
<P>
<PRE>
&gt; K := Design&lt; 3, 8 | {1,3,7,8}, {1,2,4,8}, {2,3,5,8}, {3,4,6,8}, {4,5,7,8}, 
&gt; {1,5,6,8}, {2,6,7,8}, {1,2,3,6}, {1,2,5,7}, {1,3,4,5}, {1,4,6,7}, {2,3,4,7}, 
&gt; {2,4,5,6}, {3,5,6,7} &gt;;
&gt; CK := Contraction(K, Point(K, 8));
&gt; RK := Residual(K, Block(K, 1));
&gt; K: Maximal;
3-(8, 4, 1) Design with 14 blocks
Points: {@ 1, 2, 3, 4, 5, 6, 7, 8 @}
Blocks:
    {1, 3, 7, 8},
    {1, 2, 4, 8},
    {2, 3, 5, 8},
    {3, 4, 6, 8},
    {4, 5, 7, 8},
    {1, 5, 6, 8},
    {2, 6, 7, 8},
    {1, 2, 3, 6},
    {1, 2, 5, 7},
    {1, 3, 4, 5},
    {1, 4, 6, 7},
    {2, 3, 4, 7},
    {2, 4, 5, 6},
    {3, 5, 6, 7}
&gt; CK: Maximal;
2-(7, 3, 1) Design with 7 blocks
Points: {@ 1, 2, 3, 4, 5, 6, 7 @}
Blocks:
    {1, 3, 7},
    {1, 2, 4},
    {2, 3, 5},
    {3, 4, 6},
    {4, 5, 7},
    {1, 5, 6},
    {2, 6, 7}
&gt; RK: Maximal;
Incidence Structure on 4 points with 13 blocks
Points: {@ 2, 4, 5, 6 @}
Blocks:
    {2, 4},
    {2, 5},
    {4, 6},
    {4, 5},
    {5, 6},
    {2, 6},
    {2, 6},
    {2, 5},
    {4, 5},
    {4, 6},
    {2, 4},
    {2, 4, 5, 6},
    {5, 6}
&gt; RKS := Simplify(RK);
&gt; RKS: Maximal;
Incidence Structure on 4 points with 7 blocks
Points: {@ 2, 4, 5, 6 @}
Blocks:
    {2, 4},
    {2, 5},
    {4, 6},
    {4, 5},
    {5, 6},
    {2, 6},
    {2, 4, 5, 6}
</PRE>
<HR>
<H4><A NAME = "19527">The Witt Designs</A></H4>

<P>
<P>
<P>
The 5--(12, 6, 1) and 5--(24, 8, 1) designs constructed 
by Witt, also
known as the small and large Mathieu designs, respectively, can
be constructed in Magma with the following function.


<H5><A NAME = "19528">WittDesign(n) : RngIntElt -&gt; Dsgn</A></H5>
<BLOCKQUOTE>
The Witt 5--design on n points, where n = 12 or 24.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "19529">Example <TT>Design_wittex (H153E4)</TT></A></H3>
We construct the Witt 5--(24, 8, 1) design and take its contraction at
a point. This contraction is in fact isomorphic to the
design constructed above from the unextended binary Golay code.
<P>
<P>
<PRE>
&gt; D, P, B := WittDesign(24); 
&gt; D;
5-(24, 8, 1) Design with 759 blocks
&gt; p := P.1;
&gt; Cp := Contraction(D, p);
&gt; Cp;
4-(23, 7, 1) Design with 253 blocks
</PRE>
<HR>
<H4><A NAME = "19530">Difference Sets and their Development</A></H4>

<P>
<P>
<P>
Let G be a group of order v and let k and &lambda; be positive
integers such that 1 &lt; k &lt; v. A (v, k, &lambda;) <I>difference set</I>
for G is a set D of k group elements such that the set
 { gh<sup> - 1</sup> : g, h &isin;D | g != h } 
contains every non--identity element of G exactly &lambda; times.


<H5><A NAME = "19531">DifferenceSet(p, t) : RngIntElt, MonStgElt -&gt; { RngIntResElt }</A></H5>
<BLOCKQUOTE>
The difference set of type given by t (which must be one of
<TT>"Q"</TT>, <TT>"H6"</TT>, <TT>"T"</TT>, <TT>"B"</TT>,
<TT>"B0"</TT>, <TT>"O"</TT>, <TT>"O0"</TT>, or <TT>"W4"</TT>)
corresponding to the prime p.
The types have the same interpretation as given by Marshall Hall
in <A  HREF = "text1757.htm#bib_Hall86">[Hal86]</A>, pp. 141--142.
</BLOCKQUOTE>
<H5><A NAME = "19532">SingerDifferenceSet(n, q) : RngIntElt, RngIntElt -&gt;					{ RngIntResElt }</A></H5>
<BLOCKQUOTE>
The Singer difference set corresponding to a hyperplane of PG(n, q).
</BLOCKQUOTE>
<H5><A NAME = "19533">IsDifferenceSet(B) : SetEnum -&gt; BoolElt, RngIntElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> iff B is a difference set over an integer residue class ring
or a finite group (with an iterator). If <TT>true</TT>, the value of the parameter &lambda;
(i.e., the number of times each non--identity group/ring element appears
as a "difference" of elements of B) is also returned.
</BLOCKQUOTE>
<H5><A NAME = "19534">Development(B) : { RngElt } -&gt; Inc</A></H5>
<BLOCKQUOTE>
Let B be a subset of a magma A which is a difference set relative
to A, where A is either the ring Z/mZ, a finite abelian group or 
an arbitrary finite group (with an iterator).
This function constructs the symmetric design
having point set A and whose blocks consist of the sets obtained by 
translating B by each element of A in turn.
</BLOCKQUOTE>
<H5><A NAME = "19535">Development(T) : { { Elt } } -&gt; Inc</A></H5>
<BLOCKQUOTE>
Let T = { B<sub>1</sub>, ..., B<sub>l</sub> } be a difference family consisting
of subsets of a magma A which is either the ring Z/mZ, a finite 
abelian group or an arbitrary finite group (with an iterator).
This function constructs the 
incidence structure with point set A and whose i-th block is the set 
{ B<sub>1</sub> &cup; ... &cup;B<sub>l</sub> } translated by the i-th element 
of A.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "19536">Example <TT>Design_DevelopDifferenceSet (H153E5)</TT></A></H3>
The set { 1, 3, 4, 5, 9 }, where the elements are 
residues modulo 11, forms an (11, 5, 2) difference set. We develop
this set and construct a 2-(11, 5, 2) design.
<P>
<P>
<PRE>
&gt; Z11 := IntegerRing(11);
&gt; B := { Z11 | 1, 3, 4, 5, 9};
&gt; IsDifferenceSet(B);
true 2
&gt; D := Development(B);
&gt; D: Maximal;
2-(11, 5, 2) Design with 11 blocks
Points: {@ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 @}
Blocks:
    {1, 3, 4, 5, 9},
    {2, 4, 5, 6, 10},
    {0, 3, 5, 6, 7},
    {1, 4, 6, 7, 8},
    {2, 5, 7, 8, 9},
    {3, 6, 8, 9, 10},
    {0, 4, 7, 9, 10},
    {0, 1, 5, 8, 10},
    {0, 1, 2, 6, 9},
    {1, 2, 3, 7, 10},
    {0, 2, 3, 4, 8}
</PRE>
We now construct the twin primes (type "T") difference set modulo 323 (= 17 x 19), and its development.
<P>
<P>
<PRE>
&gt; B := DifferenceSet(17, "T");
&gt; D := Development(B);
&gt; D;
2-(323, 161, 80) Design with 323 blocks
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1763.htm">[Next]</A><A  HREF = "text1761.htm">[Prev]</A> <A  HREF = "text1763.htm">[Right]</A> <A  HREF = "text1761.htm">[Left]</A> <A  HREF = "text1758.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>