<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Linear Feedback Shift Registers</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1911.htm">[Next]</A><A  HREF = "text1909.htm">[Prev]</A> <A  HREF = "text1911.htm">[Right]</A> <A  HREF = "text1909.htm">[Left]</A> <A  HREF = "text1908.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "21249">Linear Feedback Shift Registers</A></H3>

<P>
<P>
<P>
For a linear feedback shift register (LFSR) of length L,
initial state s<sub>0</sub>, ..., s<sub>L - 1</sub> &isin;GF(q),
and connection polynomial
C(D) = 1 + c<sub>1</sub> D + c<sub>2</sub> D<sup>2</sup> + ... + c<sub>L</sub> D<sup>L</sup> (also over GF(q)),
the j'th element of the sequence is computed as 
s<sub>j</sub> = - &sum;<sub>i=1</sub><sup>L</sup> c<sub>i</sub> s<sub>j - i</sub> for j &ge;L.


<H5><A NAME = "21250">LFSRSequence(C, S, t) : RngUPolElt, SeqEnum, RngIntElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Computes the first t sequence elements of the LFSR with connection
polynomial C and initial state the sequence S (thus, the length of the LFSR
is assumed to be the length of S).
C must be at least degree 1, its coefficients
must come from the same finite field as the universe of S,
and its constant coefficient must be 1.
Also, the sequence S must have at
least as many terms as the degree of C.
</BLOCKQUOTE>
<H5><A NAME = "21251">LFSRStep(C, S) : RngUPolElt, SeqEnum -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Computes the next state of the LFSR having 
connection polynomial C and current state the sequence S (thus, the length of
the LFSR is assumed to be the length of S).
C must be at least degree 1, its coefficients
must come from the same finite field as the universe of S,
and its constant coefficient must be 1.
Also, the sequence S must have at
least as many terms as the degree of C.
</BLOCKQUOTE>
<H5><A NAME = "21252">BerlekampMassey(S) : SeqEnum -&gt; RngUPolElt, RngIntElt</A></H5>
<H5>ConnectionPolynomial(S) : SeqEnum -&gt; RngUPolElt, RngIntElt</H5>
<H5>CharacteristicPolynomial(S) : SeqEnum -&gt; RngUPolElt, RngIntElt</H5>
<BLOCKQUOTE>
Given a sequence S of elements from GF(q), return the connection
polynomial C(D) and the length L of a LFSR that generates
the sequence S.
<P>
Note that it is possible that the <TT>BerlekampMassey</TT> will
return a singular LFSR (i.e. the degree of C(D) is less than L),
and therefore one must be sure to use the first L elements of S to
regenerate the sequence.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "21253">Example <TT>PseudoRandom_reconstruct-sequence (H165E1)</TT></A></H3>
We first create a sequence and then use <TT>BerlekampMassey</TT> to get the
connection polynomial and its length:
<P>
<P>
<PRE>
&gt; S:= [GF(2)| 1,1,0,1,0,1,1,1,0,0,1,0];
&gt; C&lt;D&gt;, L := BerlekampMassey(S);
&gt; C;
D^3 + D^2 + 1
&gt; L;
5
</PRE>
Now create a new sequence T containing the first L elements of S,
and reconstruct the sequence from C(D) and T.
<P>
<P>
<PRE>
&gt; T := S[1..L];
&gt; LFSRSequence(C, T, #S);
[ 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0 ]
</PRE>
<HR>
<H5><A NAME = "21254">ShrinkingGenerator(C1, S1, C2, S2, t) : RngUPolElt, SeqEnum, RngUPolElt,SeqEnum, RngIntElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Outputs a sequence of t bits from the shrinking generator having
connection polynomials C<sub>1</sub> and C<sub>2</sub> and initial states sequences 
S<sub>1</sub> and S<sub>2</sub>
(thus, the lengths of the LFSRs are assumed to be the lengths of S<sub>1</sub>
and S<sub>2</sub>).
Bits are represented as elements from GF(2).
Polynomial coefficients and sequence elements must be from GF(2).
The degrees of the connection polynomials must be at least 1 and
their trailing coefficients must be 1.
The number  of elements in the initial states must be at least
as large as the degrees of the corresponding connection polynomials.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1911.htm">[Next]</A><A  HREF = "text1909.htm">[Prev]</A> <A  HREF = "text1911.htm">[Right]</A> <A  HREF = "text1909.htm">[Left]</A> <A  HREF = "text1908.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>