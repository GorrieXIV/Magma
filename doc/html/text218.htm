<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Ideals and Quotient Rings</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text219.htm">[Next]</A><A  HREF = "text217.htm">[Prev]</A> <A  HREF = "text219.htm">[Right]</A> <A  HREF = "text217.htm">[Left]</A> <A  HREF = "text209.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "1876">Ideals and Quotient Rings</A></H3>

<P>
<P>
Currently it is only possible to create ideals and quotient rings
in univariate polynomial rings over fields. Note that these are
principal ideal domains: all ideals can be generated by a single
element.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text218.htm#1877">Creation of Ideals and Quotients</A>
<LI> <A  HREF = "text218.htm#1880">Ideal Arithmetic</A>
<LI> <A  HREF = "text218.htm#1890">Other Functions on Ideals</A>
<LI> <A  HREF = "text218.htm#1892">Other Functions on Quotients</A>
</UL>
<H4><A NAME = "1877">Creation of Ideals and Quotients</A></H4>



<H5><A NAME = "1878">ideal&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngUPol, RngUPolElt, ..., RngUPolElt -&gt; RngUPol</A></H5>
<BLOCKQUOTE>
Given a univariate polynomial ring R over a field K, this function
returns the ideal of R generated by the elements a<sub>1</sub>, ..., a<sub>r</sub>&isin;R.
This is the same as the ideal generated by the greatest common
divisor of the elements a<sub>i</sub> in R.
The function returns the ideal as a subring of R, generated by a single
element.
</BLOCKQUOTE>
<H5><A NAME = "1879">quo&lt; R | I &gt; : RngUPol, RngUPol -&gt; RngUPolRes</A></H5>
<H5>quo&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngUPol, RngUPolElt, ..., RngUPolElt -&gt; RngUPolRes, Map</H5>
<BLOCKQUOTE>
Given an ideal I in the univariate polynomial ring R (over a field),
return the quotient R/I, as well as the projection map h: R -&gt; R/I.
The ideal I may either be specified as an ideal or by a list
a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>r</sub>, of generators.
The angle bracket notation can be used to assign names to the indeterminates:
<TT>Q&lt;q&gt; := quo&lt; I | I &gt;;</TT>.
</BLOCKQUOTE>
<H4><A NAME = "1880">Ideal Arithmetic</A></H4>

<P>
<P>
Since ideals of R are regarded as subrings of R, the ring R
itself is a valid ideal as well.


<H5><A NAME = "1881">I + J : RngUPol, RngUPol -&gt; RngUPol</A></H5>
<BLOCKQUOTE>
Given ideals I and J in the same
polynomial ring R, this function
returns the sum of the ideals I and J, which is the ideal generated
by the generators of I and those of J.
Since
we require R to be a principal ideal domain, the resulting ideal
will be simply generated by the greatest common divisor of <TT>I.1</TT>
and <TT>J.1</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1882">I * J : RngUPol, RngUPol -&gt; RngUPol</A></H5>
<BLOCKQUOTE>
Given ideals I and J in the same
polynomial ring R, this function
returns the product of the ideals I and J, which is the ideal generated
by the products of the generators of I and those of J. Since
we require R to be a principal ideal domain, the resulting ideal
will be simply generated by <TT>I.1 * J.1</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1883">I meet J : RngUPol, RngUPol -&gt; RngUPol</A></H5>
<BLOCKQUOTE>
Given ideals I and J in the same
polynomial ring R, this function
returns the intersection of the ideals I and J.
Since we require R to be a principal ideal domain, the resulting ideal
will equal the product of I and J
and be simply generated by <TT>I.1 * J.1</TT>.
</BLOCKQUOTE>
<H5><A NAME = "1884">a in I : RngUPolElt, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given an element a of a polynomial ring P as well as an ideal
I of P, this function returns <TT>true</TT> if and only if a is contained in
I, and <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1885">a notin I : RngUPolElt, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given an element a of a polynomial ring P as well as an ideal
I of P, this function returns <TT>false</TT> if and only if a is contained in
I, and <TT>true</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1886">I eq J : RngUPol, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given two ideals I and J in the same polynomial ring R this
returns <TT>true</TT> if and only if I and J are the same, and <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1887">I ne J : RngUPol, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given two ideals I and J in the same polynomial ring R this
returns <TT>false</TT> if and only if I and J are the same, and <TT>true</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1888">I subset J : RngUPol, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given two ideals I and J in the same polynomial ring R this
returns <TT>true</TT> if and only if I is contained in J, and <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "1889">I notsubset J : RngUPol, RngUPol -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given two ideals I and J in the same polynomial ring R this
returns <TT>false</TT> if and only if I is contained in J, and <TT>true</TT> otherwise.
</BLOCKQUOTE>
<H4><A NAME = "1890">Other Functions on Ideals</A></H4>

<P>
<P>
Since ideals are considered as subrings of polynomial rings, and in
particular are in the same Magma category as polynomial rings,
most of the function listed in this chapter for polynomial rings
do also apply to ideals, but some restrictions
apply. Thus it will be possible to get the coefficient
ring but it will not be possible to use <TT>ChangeRing</TT> to change it.
We list some functions here that additional comments.


<H5><A NAME = "1891">I . 1 : RngUPol -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given an ideal I in a univariate polynomial ring R, return the
generator of I in R as an element of I.
</BLOCKQUOTE>
<H4><A NAME = "1892">Other Functions on Quotients</A></H4>

<P>
<P>
Contrary to ideals, quotient rings form a separate Magma category.
Only very few functions are available on these rings; however
most element functions for polynomial rings apply to elements of
quotients as well, in particular the coefficient, term and degree functions.


<H5><A NAME = "1893">Modulus(Q) : RngUPolRes -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a quotient ring Q=R[x]/I of the univariate polynomial 
ring R[x] obtained by factoring out by the ideal I, return the
generator for I as an element of R.
</BLOCKQUOTE>
<H5><A NAME = "1894">PreimageRing(Q) : RngUPolRes -&gt; RngUPol</A></H5>
<BLOCKQUOTE>
If Q is the quotient Q = R / I for some univariate polynomial ring R,
this function returns R.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text219.htm">[Next]</A><A  HREF = "text217.htm">[Prev]</A> <A  HREF = "text219.htm">[Right]</A> <A  HREF = "text217.htm">[Left]</A> <A  HREF = "text209.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>