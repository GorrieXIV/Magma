<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text791.htm">[Next]</A><A  HREF = "text789.htm">[Prev]</A> <A  HREF = "text791.htm">[Right]</A> <A  HREF = "text789.htm">[Left]</A> <A  HREF = "text786.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "8935">Elements</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text790.htm#8936">Construction of Elements</A>
<LI> <A  HREF = "text790.htm#8943">Representation of an Element</A>
<LI> <A  HREF = "text790.htm#8948">Arithmetic with Elements</A>
</UL>
<H4><A NAME = "8936">Construction of Elements</A></H4>

<P>
<P>
Unless otherwise stated, the operations in this section apply to fp-abelian 
groups and generic abelian groups.


<H5><A NAME = "8937">A ! [a<sub>1</sub>, ... ,a<sub>n</sub>] : GrpAb, [RngIntElt] -&gt; GrpAbElt</A></H5>
<H5>A ! [a<sub>1</sub>, ... ,a<sub>n</sub>] : GrpAbGen, [RngIntElt] -&gt; GrpAbGenElt</H5>
<BLOCKQUOTE>
Given an abelian group A with generators e<sub>1</sub>, ..., e<sub>r</sub> and a sequence 
Q = [a<sub>1</sub>, ..., a<sub>r</sub>] of integers, construct the element 
a<sub>1</sub> e<sub>1</sub> + ... + a<sub>r</sub> e<sub>r</sub> of A.
</BLOCKQUOTE>
<H5><A NAME = "8938">A ! e : GrpAbGen, Elt -&gt; GrpAbGenElt</A></H5>
<BLOCKQUOTE>
Given a generic abelian group A and an element e of the domain
over which it is defined, return e as an element of A.  If A 
is a proper subset of its underlying domain, then e must be a 
linear combination of the generators (which may be user-supplied) 
of A.
</BLOCKQUOTE>
<H5><A NAME = "8939">A ! g : GrpAbGen, GrpAbGenElt -&gt; GrpAbGenElt</A></H5>
<BLOCKQUOTE>
Given a generic abelian group A and an element g of the underlying
set X of A, return g as an element of A.
</BLOCKQUOTE>
<H5><A NAME = "8940">A ! n : GrpAb, RngIntElt -&gt; GrpAbElt</A></H5>
<BLOCKQUOTE>
Given an abelian group A with exactly one generator x, construct the
element n x.
</BLOCKQUOTE>
<H5><A NAME = "8941">Random(A) : GrpAbGen -&gt; GrpAbGenElt</A></H5>
<BLOCKQUOTE>
Given either a finite fp-abelian group or a generic
abelian group A, return a random element of A. 
</BLOCKQUOTE>
<H5><A NAME = "8942">Identity(A) : GrpAb -&gt; GrpAbElt</A></H5>
<H5>Id(A) : GrpAb -&gt; GrpAbElt</H5>
<H5>A ! 0 : GrpAb, RngIntElt -&gt; GrpAbElt</H5>
<BLOCKQUOTE>
Construct the identity element (empty word) for the abelian group A.
<P>
<P>
Let A be a generic abelian group defined in the universe U of A.
If  g is an element of A, then U!g is an element of U.
</BLOCKQUOTE>
<H4><A NAME = "8943">Representation of an Element</A></H4>

<P>
<P>
<P>
An element g of an abelian group A can be represented as a linear 
combination with respect to a given generating sequence. The coefficients 
appearing in this linear combination provide an alternative representation 
for g. If A is a fp-group, the generating set will be the one on which
the group was defined. In the case of a generic group, the generating
set can either be that obtained when constructing a presentation for 
A or a user-supplied generating set.


<H5><A NAME = "8944">Representation(g) : GrpAbGenElt -&gt; [RngIntElt]</A></H5>
<H5>ElementToSequence(g) : GrpAbGenElt -&gt; [RngIntElt]</H5>
<H5>Eltseq(g) : GrpAbGenElt -&gt; [RngIntElt]</H5>
<BLOCKQUOTE>
Let A be an abelian group with generating set e<sub>1</sub>, ..., e<sub>n</sub> 
and suppose g is an element of A, where g = a<sub>1</sub> e<sub>1</sub> + ... + a<sub>n</sub> e<sub>n</sub>.
These functions return the sequence Q of n integers defined by
  Q[i] = (a<sub>i</sub>), for i = 1, ..., n.
Moreover, each a<sub>i</sub>, i = 1, ..., n, is the integer residue modulus
  the order of the ith generator.
</BLOCKQUOTE>
<H5><A NAME = "8945">UserRepresentation(g) : GrpAbGenElt -&gt; [RngIntElt]</A></H5>
<BLOCKQUOTE>
Let A be a generic abelian group with a user-supplied set of
   generators u<sub>1</sub>, ..., u<sub>n</sub> and suppose
   g is an element of A, where g = a<sub>1</sub> u<sub>1</sub> + ... + a<sub>n</sub> u<sub>n</sub>.
This function returns the sequence Q of n integers defined by
  Q[i] = (a<sub>i</sub>), for i = 1, ..., n.
Moreover, each a<sub>i</sub>, i = 1, ..., n, is the integer residue modulus
  the order of the ith generator.
</BLOCKQUOTE>
<H5><A NAME = "8946">Representation(S, g) : SeqEnum, GrpAbGenElt -&gt; [RngIntElt], RngIntElt</A></H5>
<BLOCKQUOTE>
Let A be a generic abelian group and let S = [s<sub>1</sub>, ..., s<sub>m</sub>]
  be any sequence of elements  of A.
Assume g is an element of A such that
  b g = a<sub>1</sub> s<sub>1</sub> + ... + a<sub>m</sub> s<sub>m</sub>.
This function returns as its first value the sequence Q of
  m integers defined by
  Q[i] = (a<sub>i</sub>), for i = 1, ..., m.
The second value returned is the coefficient b of g.
Note that b might not be 1.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "8947">Example <TT>GrpAb_ElementCreationAndRep (H74E7)</TT></A></H3>
We use the quadratic forms example considered above to illustrate
these functions.
<P>
<P>
<P>
<PRE>
&gt; Generators(QF);
[ &lt;2,2,500001&gt;, &lt;206,-102,4867&gt; ]
&gt; g := QF ! [5, 6];
&gt; g;
&lt;837,-766,1370&gt;
&gt; Representation(g);
[ 1, 6 ]
&gt; 
&gt; g := Random(QF);
&gt; Representation(g);
[ 1, 270 ]
&gt; 
&gt; UserRepresentation(g);
[ 377, 0, 515, 0, 0, 0, 0, 0, 0, 0 ]
&gt;
&gt; S := [];
&gt; for i in [1..3] do
&gt;     d := Random(QF);
&gt;     Include(~S, d);
&gt; end for;
&gt; seq, coeff := Representation(S, g);
&gt; seq; coeff;
[ -170, -3, 0 ]
1
</PRE>
<HR>
<H4><A NAME = "8948">Arithmetic with Elements</A></H4>

<P>
<P>
If the generic abelian group A has been constructed with 
the flag <TT>UseRepresentation</TT> set true, then arithmetic 
with elements of A is trivial.


<H5><A NAME = "8949">u + v : GrpAbElt, GrpAbElt -&gt; GrpAbElt</A></H5>
<BLOCKQUOTE>
Given elements u and v belonging to the same abelian group A, 
return the sum of u and v.
</BLOCKQUOTE>
<H5><A NAME = "8950">- u : GrpAbElt -&gt; GrpAbElt</A></H5>
<BLOCKQUOTE>
The inverse of element u.
</BLOCKQUOTE>
<H5><A NAME = "8951">u - v : GrpAbElt, GrpAbElt -&gt; GrpAbElt</A></H5>
<BLOCKQUOTE>
Given elements u and v belonging to the same abelian group A, 
return the sum of u and the inverse of v.
</BLOCKQUOTE>
<H5><A NAME = "8952">m * u : RngIntElt, GrpAbElt-&gt; GrpAbElt</A></H5>
<H5>u * m : GrpAb, RngIntElt -&gt; GrpAbElt</H5>
<BLOCKQUOTE>
Given an integer m, return the element w + w + ... w (|m| summands),
where w = u, if m is positive and w = - u if m is negative.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text791.htm">[Next]</A><A  HREF = "text789.htm">[Prev]</A> <A  HREF = "text791.htm">[Right]</A> <A  HREF = "text789.htm">[Left]</A> <A  HREF = "text786.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>