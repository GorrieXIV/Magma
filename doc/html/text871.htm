<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Set Operations</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text872.htm">[Next]</A><A  HREF = "text870.htm">[Prev]</A> <A  HREF = "text872.htm">[Right]</A> <A  HREF = "text870.htm">[Left]</A> <A  HREF = "text865.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10026">Set Operations</A></H3>

<P>
<P>
In this section we describe functions which allow the user to enumerate
various sets of elements of an automatic group G.


<H5><A NAME = "10027">Random(G, n) : GrpAtc, RngIntElt -&gt; GrpAtcElt</A></H5>
<BLOCKQUOTE>
A random word of length at most n in the generators of G.
</BLOCKQUOTE>
<H5><A NAME = "10028">Random(G) : GrpAtc -&gt; GrpAtcElt</A></H5>
<BLOCKQUOTE>
A random word (of length at most the order of G) in the generators of G.
<P>
</BLOCKQUOTE>
<H5><A NAME = "10029">Representative(G) : GrpAtc -&gt; GrpAtcElt</A></H5>
<H5>Rep(G) : GrpAtc -&gt; GrpAtcElt</H5>
<BLOCKQUOTE>
An element chosen from G.
</BLOCKQUOTE>
<H5><A NAME = "10030">Set(G, a, b) : GrpAtc, RngIntElt, RngIntElt -&gt; SetEnum</A></H5>

<PRE>    Search: MonStgElt                   Default: "DFS"</PRE>
<BLOCKQUOTE>
Create the set of words, w, in G with a &le; length(w) &le;b.
If <TT>Search</TT> is set to <TT>"DFS"</TT> (depth-first search) then words
are enumerated in lexicographical order. If <TT>Search</TT> is
set to <TT>"BFS"</TT> (breadth-first-search) then words are enumerated in
lexicographical order for each individual length
(i.e. in short-lex order). Depth-first-search is marginally quicker.
Since the result is a set the words may not appear in the resultant
set in the search order specified (although internally they
will be enumerated in this order).
<P>
</BLOCKQUOTE>
<H5><A NAME = "10031">Set(G) : GrpAtc -&gt; SetEnum</A></H5>

<PRE>    Search: MonStgElt                   Default: "DFS"</PRE>
<BLOCKQUOTE>
Create the set of words that is the carrier set of G.
If <TT>Search</TT> is set to <TT>"DFS"</TT> (depth-first search) then words
are enumerated in lexicographical order. If <TT>Search</TT> is
set to <TT>"BFS"</TT> (breadth-first-search) then words are enumerated in
lexicographical order for each individual length
(i.e. in short-lex order). Depth-first-search is marginally quicker.
Since the result is a set the words may not appear in the resultant
set in the search order specified (although internally they
will be enumerated in this order).
<P>
</BLOCKQUOTE>
<H5><A NAME = "10032">Seq(G, a, b) : GrpAtc, RngIntElt, RngIntElt -&gt; SeqEnum</A></H5>

<PRE>    Search: MonStgElt                   Default: "DFS"</PRE>
<BLOCKQUOTE>
Create the sequence S of words, w, in G with a &le; length(w) &le;b.
If <TT>Search</TT> is set to <TT>"DFS"</TT> (depth-first search) then words
will appear in S in lexicographical order. If <TT>Search</TT> is
set to <TT>"BFS"</TT> (breadth-first-search) then words will appear in S in
lexicographical order for each individual length
(i.e. in short-lex order). Depth-first-search is marginally quicker.
<P>
</BLOCKQUOTE>
<H5><A NAME = "10033">Seq(G) : GrpAtc -&gt; SeqEnum</A></H5>

<PRE>    Search: MonStgElt                   Default: "DFS"</PRE>
<BLOCKQUOTE>
Create a sequence S of words from the carrier set of G.
If <TT>Search</TT> is set to <TT>"DFS"</TT> (depth-first search) then words
will appear in S in lexicographical order. If <TT>Search</TT> is
set to <TT>"BFS"</TT> (breadth-first-search) then words will appear in S in
lexicographical order for each individual length
(i.e. in short-lex order). Depth-first-search is marginally quicker.
<P>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10034">Example <TT>GrpAtc_Set (H80E9)</TT></A></H3>
We construct the group D<sub>22</sub>, together with a representative
word from the group, a random word and a random word of length at most 5
from the group, and the set of elements of the group.
<P>
<P>
<PRE>
&gt; FG&lt;a,b,c,d,e,f&gt; := FreeGroup(6);
&gt; F := quo&lt; FG | a*c^-1*a^-1*d=1, b*f*b^-1*e^-1=1,
&gt;                c*e*c^-1*d^-1=1, d*f^-1*d^-1*a=1,
&gt;                e*b*e^-1*a^-1=1, f*c^-1*f^-1*b^-1=1 &gt;;
&gt; f, G&lt;a,b,c,d,e,f&gt; := IsAutomaticGroup(F);
Running Knuth-Bendix with the following parameter values
MaxRelations  = 200
MaxStates     = 0
TidyInt       = 20
MaxWdiffs     = 512
HaltingFactor = 100
MinTime       = 5
#System is confluent.
#Halting with 41 equations.
#First word-difference machine with 16 states computed.
#Second word-difference machine with 17 states computed.
#System is confluent, or halting factor condition holds.
#Word-acceptor with 6 states computed.
#General multiplier with 58 states computed.
#Validity test on general multiplier succeeded.
#Checking inverse and short relations.
#Axiom checking succeeded.
&gt; Representative(G);
Id(G)
&gt; Random(G);
a*c;
&gt; Random(G, 5);
a * b
&gt; Set(G);
{ a * d * b, a * b, a * b * e, a * c, a * d, d * b, b * e,
  a * b * a, a * b * d, b * a, a * c * e, Id(G), b * d, c * e,
  e, f, a, a * e, b, c, a * f, d }
&gt; Seq(G : Search := "BFS");
[ Id(G), a, b, c, d, e, f, a * b, a * c, a * d, a * e, a * f,
  b * a, b * d, b * e, c * e, d * b, a * b * a, a * b * d,
  a * b * e, a * c * e, a * d * b ]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text872.htm">[Next]</A><A  HREF = "text870.htm">[Prev]</A> <A  HREF = "text872.htm">[Right]</A> <A  HREF = "text870.htm">[Left]</A> <A  HREF = "text865.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>