<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Hilbert-driven Gr&ouml;bner Basis Construction</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1211.htm">[Next]</A><A  HREF = "text1209.htm">[Prev]</A> <A  HREF = "text1211.htm">[Right]</A> <A  HREF = "text1209.htm">[Left]</A> <A  HREF = "text1203.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "13530">Hilbert-driven Gr&ouml;bner Basis Construction</A></H3>

<P>
<P>
Magma incorporates an implementation of the <I>Hilbert-driven
Buchberger Algorithm</I> <A  HREF = "text1202.htm#bib_HilbertBuchberger">[Tra96]</A>.
This algorithm constructs the Gr&ouml;bner basis
of an homogeneous ideal I whose Hilbert series is known.  The algorithm
is often much more efficient than the conventional Buchberger algorithm
since knowledge of the Hilbert series eliminates many unnecessary reductions
of S-polynomials.  The algorithm can also be used as an alternative
to the Gr&ouml;bner Walk algorithm for changing order since one can compute the 
Hilbert series of the ideal with respect to an easy monomial order, and then
start again with the Hilbert-driven algorithm to compute the Gr&ouml;bner basis
with respect to the desired final order.   Furthermore, the algorithm
can sometimes be used to test whether an ideal has a particular Hilbert series
and abort early if this is proven to be false.
The algorithm is also used extensively internally in the Invariant Theory
algorithms of Magma.


<H5><A NAME = "13531">HilbertGroebnerBasis(S, H) : [ RngMPolElt ], FldFunRatUElt -&gt; BoolElt, [ RngMPolElt ]</A></H5>
<H5>HilbertGroebnerBasis(S, N) : [ RngMPolElt ], RngUPolElt -&gt; BoolElt, [ RngMPolElt ]</H5>
<BLOCKQUOTE>
Let S be a set or sequence of homogeneous polynomials from the
multivariate polynomial ring P=K[x<sub>1</sub>, ..., x<sub>n</sub>], where K is a field,
and let I be the ideal of P generated by S.
Let either H be the Hilbert series H<sub>P/I</sub>(t) of I (as a rational
function in Z(t))
or let N&isin;Z[t] be a univariate integer polynomial
such that the weighted numerator of the Hilbert series of I is N.
This function attempts to construct the (reduced) Gr&ouml;bner basis of I
using the given Hilbert series.
The weighted numerator of the Hilbert series of I is the Hilbert series
H<sub>P/I</sub>(t) of I, multiplied by the denominator
&prod;<sub>i=1</sub><sup>n</sup> 1 - t<sup>d<sub>i</sub></sup>, where d<sub>i</sub> is the weighted degree of the
i-th variable x<sub>i</sub> (this denominator is thus (1 - t)<sup>n</sup> if P has
the default grading).
<P>
If the function returns <TT>false</TT>, then H (or N) cannot be the correct
Hilbert series (or weighted numerator of the Hilbert series) of I.
Otherwise, the function returns <TT>true</TT> and
a sequence B of polynomials which generates the same ideal as S; if
H or N is correct, B will be the (reduced) Gr&ouml;bner basis of I.
<P>
In more detail, let f<sub>H</sub> be the power series
corresponding to the true Hilbert series of I
and let f<sub>N</sub> be the power series corresponding to
N/(&prod;<sub>i=1</sub><sup>n</sup> 1 - t<sup>d<sub>i</sub></sup>).
If f<sub>H</sub> = f<sub>N</sub>, then the function returns <TT>true</TT> and the correct
(reduced) Gr&ouml;bner basis of I.
Otherwise, consider the first term at which f<sub>N</sub> and
f<sub>H</sub> differ: if the coefficient of f<sub>N</sub> is greater than that of f<sub>H</sub>, then
the function returns <TT>false</TT> (since it will not be able to construct the
extra Gr&ouml;bner basis polynomials needed), otherwise the function will
return <TT>true</TT> with a partial Gr&ouml;bner basis (since it concludes that it
has enough Gr&ouml;bner basis polynomials when it hasn't).
Consequently, the algorithm is usually used when the correct Hilbert series
or weighted numerator of the Hilbert series is known,
or when there is a weighted numerator which
is known to be greater than or equal to the correct weighted numerator
of the Hilbert series.
</BLOCKQUOTE>
<H5><A NAME = "13532">SetVerbose("HilbertGroebner", v) : MonStgElt, RngIntElt -&gt;</A></H5>
<BLOCKQUOTE>
Change verbose printing for the Hilbert-driven Buchberger algorithm to be v.
Currently the legal values for v are <TT>true</TT>, <TT>false</TT>, 0, or 1.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "13533">Example <TT>GB_HilbertGroebner (H111E14)</TT></A></H3>
We illustrate a subalgorithm of the Invariant Theory module of
Magma which uses the Hilbert-driven Buchberger Algorithm.
<P>
Let R be the invariant ring of the (permutation) cyclic group G of order 4
over the field K = GF(2).  Suppose we have a sequence L of 4 homogeneous
invariants of degrees 1, 2, 2, and 4 respectively.  We wish to determine
efficiently whether the polynomials of L constitute primary invariants for
R.  To check this, the ideal generated by L must be zero-dimensional
and the elements of L must be algebraically independent.  This is equivalent
to the condition that the weighted numerator of the Hilbert series of the
ideal is the product (1 - t)(1 - t<sup>2</sup>)<sup>2</sup>(1 - t<sup>4</sup>).  If that is not the
correct weighted numerator, it will be less than the correct weighted numerator
so the algorithm will return whether the polynomials L do
constitute primary invariants for R.
<P>
<P>
<PRE>
&gt; K := GF(2);
&gt; P&lt;a,b,c,d&gt; := PolynomialRing(K, 4);
&gt; L := [
&gt;     a + b + c + d,
&gt;     a*b + a*d + b*c + c*d,
&gt;     a*c + b*d,
&gt;     a*b*c*d
&gt; ];
&gt; // Form potential Hilbert series weighted numerator
&gt; T&lt;t&gt; := PolynomialRing(IntegerRing());
&gt; N := &amp;*[1 - t^Degree(f): f in L];
&gt; N;
t^9 - t^8 - 2*t^7 + 2*t^6 + 2*t^3 - 2*t^2 - t + 1
&gt; time l, B := HilbertGroebnerBasis(L, N);
Time: 0.000
&gt; l;
true
&gt; // Examine Groebner basis B of L:
&gt; B;
[
    a + b + c + d,
    b^2 + d^2,
    b*c + b*d + c^2 + c*d,
    c^3 + c^2*d + c*d^2 + d^3,
    d^4
]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1211.htm">[Next]</A><A  HREF = "text1209.htm">[Prev]</A> <A  HREF = "text1211.htm">[Right]</A> <A  HREF = "text1209.htm">[Left]</A> <A  HREF = "text1203.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>