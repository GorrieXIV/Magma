<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Set and Get</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text50.htm">[Next]</A><A  HREF = "text48.htm">[Prev]</A> <A  HREF = "text50.htm">[Right]</A> <A  HREF = "text48.htm">[Left]</A> <A  HREF = "text45.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "389">Set and Get</A></H3>

<P>
<P>
The <TT>Set-</TT> procedures allow the user to attach values to certain
internal variables which control system or global features.
The <TT>Get-</TT> functions enable one to obtain
the current values of these variables.


<H5><A NAME = "390">SetAssertions(b) : RngIntElt -&gt;</A></H5>
<H5>GetAssertions() : -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Controls the checking of assertions (see the <TT>assert</TT> statement and
related statements in the chapter on the language).  Default is <TT>SetAssertions(1)</TT>.  The relevant values are 0 for no checking at all,
1 for normal checks, 2 for debug checks and 3 for extremely stringent
checking.
</BLOCKQUOTE>
<H5><A NAME = "391">SetAutoColumns(b) : BoolElt -&gt;</A></H5>
<H5>GetAutoColumns() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
If enabled, the IO system will try to determine the number of
columns in the window by using <TT>ioctl()</TT>; when a window change
or a stop/cont occurs, the <TT>Columns</TT> variable (below) will be
automatically updated.  If disabled, the <TT>Columns</TT> variable will
only be changed when explicitly done so by <TT>SetColumns</TT>.
Default is <TT>SetAutoColumns(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "392">SetAutoCompact(b) : BoolElt -&gt;</A></H5>
<H5>GetAutoCompact() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Control whether automatic compaction is performed.
Normally the memory manager of Magma will compact all of its memory
between each statement at the top level.  This removes fragmentation
and reduces excessive memory usage.  In some very rare situations, the
compactions may become very slow (one symptom is that an inordinate pause
occurs between prompts when only a trivial operation or nothing is done).
In such cases, turning the automatic
compaction off may help (at the cost of possibly more use of memory).
Default is <TT>SetAutoCompact(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "393">SetBeep(b) : BoolElt -&gt;</A></H5>
<H5>GetBeep() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls `beeps'.
Default is <TT>SetBeep(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "394">SetColumns(n) : RngIntElt -&gt;</A></H5>
<H5>GetColumns() : -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Controls the number of columns used by the IO system.  This affects
the line editor and the output system.  (As explained above, if
AutoColumns is on, this variable will be automatically determined.)
The number of columns will determine how words are wrapped.
If set to 0, word wrap is not performed. The default value is 
<TT>SetColumns(80)</TT> (unless <TT>SetAutoColumns(true)</TT>).
</BLOCKQUOTE>
<H5><A NAME = "395">GetCurrentDirectory() : -&gt;</A></H5>
<BLOCKQUOTE>
Returns the current directory as a string.
(Use <TT>ChangeDirectory(s)</TT> to change the working directory.)
</BLOCKQUOTE>
<H5><A NAME = "396">SetEchoInput(b) : BoolElt -&gt;</A></H5>
<H5>GetEchoInput() : -&gt;</H5>
<BLOCKQUOTE>
Set to <TT>true</TT> or <TT>false</TT> according to whether or not input
from external files should also be sent to standard output.
</BLOCKQUOTE>
<H5><A NAME = "397">GetEnvironmentValue(s) : MonStgElt -&gt; MonStgElt</A></H5>
<H5>GetEnv(s) : MonStgElt -&gt; MonStgElt</H5>
<BLOCKQUOTE>
Returns the value of the external environment variable s as a string.
</BLOCKQUOTE>
<H5><A NAME = "398"></A><A NAME = "Env:SetGPU">SetGPU</A>(b) : BoolElt -&gt;</H5>
<H5>GetGPU() : -&gt;  BoolElt</H5>
<BLOCKQUOTE>
Set the NVIDIA GPU mode to b; this determines whether Magma
should use NVIDIA GPUs via CUDA when present.  This
is only relevant to a CUDA-enabled executable (typically downloaded as
<TT>magma.cuda.exe</TT>) and is {<TT>true</TT>} by default in that case (so
the GPU is used by default); for a non-CUDA-enabled executable,
the procedure has no effect.
Currently, a GPU is exploited in matrix multiplication over GF(2)
and small prime finite fields and consequently anything which
depends on such multiplication, such as the
dense F<sub>4</sub> Gr&ouml;bner basis algorithm over such fields.
</BLOCKQUOTE>
<H5><A NAME = "399">SetHistorySize(n) : RngIntElt -&gt;</A></H5>
<H5>GetHistorySize() : -&gt;</H5>
<BLOCKQUOTE>
Controls the number of lines saved in the history. If the
number is set to 0, no history is preserved.
</BLOCKQUOTE>
<H5><A NAME = "400">SetIgnorePrompt(b) : BoolElt -&gt;</A></H5>
<H5>GetIgnorePrompt() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls the option to ignore the prompt
to allow the pasting of input lines back in.
If enabled, any leading '&gt;' characters (possibly separated by white space)
are ignored by the history system when the input file is a terminal,
<I>unless</I> the line consists of the '&gt;' character alone (without
a following space), which could not come from a prompt since in a prompt
a space or another character follows a '&gt;'.
Default is <TT>SetIgnorePrompt(false)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "401">SetIgnoreSpaces(b) : BoolElt -&gt;</A></H5>
<H5>GetIgnoreSpaces() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls the option to ignore spaces when searching in the line editor.
If the user moves up or down in the line editor using &lt;Ctrl&gt;-P or &lt;Ctrl&gt;-N
(see the line editor key descriptions)
and if the cursor
is not at the beginning of the line, a search is made forwards or
backwards, respectively, to the first line which starts with the same string
as the string consisting of all the characters before the cursor.
While doing the search, spaces are ignored if and only if this option is on
(value <TT>true</TT>).  Default is <TT>SetIgnoreSpaces(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "402">SetIndent(n) : RngIntElt -&gt;</A></H5>
<H5>GetIndent() : -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Controls the indentation level for formatting output.
The default is <TT>SetIndent(4)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "403">SetLibraries(s) : MonStgElt -&gt;</A></H5>
<H5>GetLibraries() : -&gt; MonStgElt</H5>
<BLOCKQUOTE>
Controls the Magma library directories via environment
variable <TT>MAGMA_LIBRARIES</TT>.
The procedure <TT>SetLibraries</TT> takes a string, which will be taken as the
(colon-separated) list of sub-directories in the library root
directory for the libraries; the function
<TT>GetLibraryRoot</TT> returns the current value as a string.
These directories will be searched when you try to <TT>load</TT>
a file; note however that first the directories indicated
by the current value of your path environment variable <TT>MAGMA_PATH</TT> will be searched. See <TT>SetLibraryRoot</TT> for the
root directory.
</BLOCKQUOTE>
<H5><A NAME = "404">SetLibraryRoot(s) : MonStgElt -&gt;</A></H5>
<H5>GetLibraryRoot() : -&gt; MonStgElt</H5>
<BLOCKQUOTE>
Controls the root directory for the Magma libraries, via the
environment variable <TT>MAGMA_LIBRARY_ROOT</TT>.
The procedure <TT>SetLibraryRoot</TT> takes a string, which will be the
absolute pathname for the root of the libraries; the function
<TT>GetLibraryRoot</TT> returns the current value as a string.
See also <TT>SetLibraries</TT>.
</BLOCKQUOTE>
<H5><A NAME = "405">SetLineEditor(b) : BoolElt -&gt;</A></H5>
<H5>GetLineEditor() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls the line editor.
Default is <TT>SetLineEditor(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "406">SetLogFile(F) : MonStgElt -&gt;</A></H5>

<PRE>    Overwrite: BoolElt                  Default: <TT>false</TT></PRE>
<H5>UnsetLogFile() : -&gt;</H5>
<BLOCKQUOTE>
Procedure.
Set the log file to be the file specified by the string F: all
input and output will be sent to this log file as well as to the terminal.
If a log file is already in use, it is closed and F is used instead.
The parameter <TT>Overwrite</TT> can be used to indicate that
the file should be truncated before writing input and output on it; by default
the file is appended.
</BLOCKQUOTE>
<H5><A NAME = "407">SetMemoryLimit(n) : RngIntElt -&gt;</A></H5>
<H5>GetMemoryLimit() : -&gt;  RngIntElt</H5>
<BLOCKQUOTE>
Set the limit (in bytes) of the memory which the memory manager
will allocate (no limit if 0).
Default is <TT>SetMemoryLimit(0)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "408"></A><A NAME = "Env:SetNthreads">SetNthreads</A>(n) : RngIntElt -&gt;</H5>
<H5>GetNthreads() : -&gt;  RngIntElt</H5>
<BLOCKQUOTE>
Set the number of threads to be used in multi-threaded algorithms to be
n, if POSIX threads are enabled in this version of Magma.  Currently,
this affects the coding theory minimum weight algorithm
(<A  HREF = "text1839.htm#CodeFld:MinimumWeight">MinimumWeight</A>) and the F<sub>4</sub> Gr&ouml;bner basis algorithm
for medium-sized primes (<A  HREF = "text1207.htm#GB:Groebner">Groebner</A>).
</BLOCKQUOTE>
<H5><A NAME = "409">SetOutputFile(F) : MonStgElt -&gt;</A></H5>

<PRE>    Overwrite: BoolElt                  Default: <TT>false</TT></PRE>
<H5>UnsetOutputFile() : -&gt;</H5>
<BLOCKQUOTE>
Start/stop redirecting all Magma output to a file (specified by the
string F). The parameter <TT>Overwrite</TT> can be used to indicate that
the file should be truncated before writing output on it.
</BLOCKQUOTE>
<H5><A NAME = "410">SetPath(s) : MonStgElt -&gt;</A></H5>
<H5>GetPath() : -&gt;  MonStgElt</H5>
<BLOCKQUOTE>
Controls the path by which the searching of files is done.  The
path consists of a colon separated list of directories which
are searched in order ("." implicitly assumed at the front).
Tilde expansion is done on each directory.
(May be overridden by the environment variable MAGMA_PATH.)
</BLOCKQUOTE>
<H5><A NAME = "411">SetPrintLevel(l) : MonStgElt -&gt;</A></H5>
<H5>GetPrintLevel() : -&gt; MonStgElt</H5>
<BLOCKQUOTE>
Controls the global printing level, which is one of
<TT>"Minimal"</TT>, <TT>"Magma"</TT>, <TT>"Maximal"</TT>, <TT>"Default"</TT>.
Default is <TT>SetPrintLevel("Default")</TT>.
</BLOCKQUOTE>
<H5><A NAME = "412">SetPrompt(s) : MonStgElt -&gt;</A></H5>
<H5>GetPrompt() : -&gt; MonStgElt</H5>
<BLOCKQUOTE>
Controls the terminal prompt (a string).  Expansion of
the following % escapes occurs:
<DL COMPACT class='compact'>
<DT>%%</DT><DD>The character %
<DT>%h</DT><DD>The current history line number.
<DT>%S</DT><DD>The parser `state': when a new line is about to be
read while the parser has only seen incomplete
statements, the state consists of a stack of words
like "if", "while", indicating the incomplete
statements.
<DT>%s</DT><DD>Like %S except that only the topmost word is
displayed.
<P>
<P>
</DL>
Default is <TT>SetPrompt("%S&gt; ")</TT>.
</BLOCKQUOTE>
<H5><A NAME = "413">SetQuitOnError(b) : BoolElt -&gt;</A></H5>
<BLOCKQUOTE>
Set whether Magma should quit on any error to b.  If b is <TT>true</TT>,
Magma will completely quit when any error (syntax, runtime, etc.) occurs.
Default is <TT>SetQuitOnError(false)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "414">SetRows(n) : RngIntElt -&gt;</A></H5>
<H5>GetRows() : -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Controls the number of rows in a page used by the IO system.  This affects
the output system.  If set to 0, paging is not performed.  Otherwise
a prompt is given after the given number of rows for a new page.
The default value is <TT>SetRows(0)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "415">GetTempDir() : -&gt; MonStgElt</A></H5>
<BLOCKQUOTE>
Returns the directory Magma uses for storing temporary files. 
May be influenced on startup via the MAGMA_TEMP_DIR environment variable (see Section <A  HREF = "text48.htm#379">Environment Variables</A>).
</BLOCKQUOTE>
<H5><A NAME = "416">SetTraceback(n) : BoolElt -&gt;</A></H5>
<H5>GetTraceback() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls whether Magma should produce a traceback of user
function calls before each error message.
The default value is <TT>SetTraceback(true)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "417">SetSeed(s, c) : RngIntElt -&gt;</A></H5>
<H5>GetSeed() : -&gt; RngIntElt, RngIntElt</H5>
<BLOCKQUOTE>
Controls the initialization seed and step number for pseudo-random
number generation.  For details, see the section on random object
generation in the chapter on statements and expressions.
</BLOCKQUOTE>
<H5><A NAME = "418">GetVersion() : -&gt; RngIntElt, RngIntElt, RngIntElt</A></H5>
<BLOCKQUOTE>
Return integers x, y and z such the current version of Magma is
Vx.y--z.
</BLOCKQUOTE>
<H5><A NAME = "419">SetViMode(b) : BoolElt -&gt;</A></H5>
<H5>GetViMode() : -&gt; BoolElt</H5>
<BLOCKQUOTE>
Controls the type of line editor used: Emacs (<TT>false</TT>) or VI style.
Default is <TT>SetViMode(false)</TT>.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text50.htm">[Next]</A><A  HREF = "text48.htm">[Prev]</A> <A  HREF = "text50.htm">[Right]</A> <A  HREF = "text48.htm">[Left]</A> <A  HREF = "text45.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>