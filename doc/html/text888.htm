<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Specification of a Presentation</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text889.htm">[Next]</A><A  HREF = "text887.htm">[Prev]</A> <A  HREF = "text889.htm">[Right]</A> <A  HREF = "text887.htm">[Left]</A> <A  HREF = "text884.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10107">Specification of a Presentation</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text888.htm#10108">Relations</A>
<LI> <A  HREF = "text888.htm#10112">Presentations</A>
<LI> <A  HREF = "text888.htm#10116">Accessing the Defining Generators  and Relations</A>
</UL>
<H4><A NAME = "10108">Relations</A></H4>

<P>
<P>


<H5><A NAME = "10109">w<sub>1</sub> = w<sub>2</sub> : SgpFPElt, SgpFPElt -&gt; Rel</A></H5>
<BLOCKQUOTE>
Given words w<sub>1</sub> and w<sub>2</sub> over the generators of an fp-semigroup S,
create the relation w<sub>1</sub> = w<sub>2</sub>. Note that this relation is
not automatically added to the existing set of defining relations
R for S. It may be added to R, for example, through use of
the <TT>quo</TT>-constructor (see below).
<P>
</BLOCKQUOTE>
<H5><A NAME = "10110">LHS(r) : Rel -&gt; SgpFPElt</A></H5>
<BLOCKQUOTE>
Given a relation r over the generators of S,
return the left hand side of the relation r.
The object returned is a word over the generators of S.
</BLOCKQUOTE>
<H5><A NAME = "10111">RHS(r) : Rel -&gt; SgpFPElt</A></H5>
<BLOCKQUOTE>
Given a relation r over the generators of S,
return the right hand side of the relation r.
The object returned is a word over the generators of S.
<P>
</BLOCKQUOTE>
<H4><A NAME = "10112">Presentations</A></H4>

<P>
<P>
A semigroup with non-trivial relations is constructed as a quotient of an
existing semigroup, possibly a free semigroup.


<H5><A NAME = "10113">Semigroup&lt; generators | relations &gt; : SgpFPElt, ..., SgpFPElt, Rel, ...Rel -&gt; SgpFP</A></H5>
<BLOCKQUOTE>
Given a generators clause consisting of a list of variables
x<sub>1</sub>, ..., x<sub>r</sub>, and a set of relations relations over
these generators, first construct the free semigroup F on the 
generators x<sub>1</sub>, ..., x<sub>r</sub> and then construct the quotient of 
F corresponding to the ideal of F defined by relations.
<P>
The syntax for the relations clause is the same as for the
<TT>quo</TT>-constructor. The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The quotient semigroup S;
<DT>(b)</DT><DD>The natural homomorphism &phi; : F -&gt; S.
<P>
<P>
<P>
</DL>
Thus, the statement
<P>
<TT>S&lt; y<sub>1</sub>, ..., y<sub>r</sub> &gt; := Semigroup&lt; x<sub>1</sub>, ..., x<sub>r</sub> | w<sub>1</sub>, ..., w<sub>s</sub> &gt;;
<P>
</TT>
is an abbreviation for
<P>
<TT>F&lt; x<sub>1</sub>, ..., x<sub>r</sub> &gt; := FreeSemigroup(r);
<P>
S&lt; y<sub>1</sub>, ..., y<sub>r</sub> &gt; := quo&lt; F | w<sub>1</sub>, ..., w<sub>s</sub> &gt;;
<P>
</TT>
</BLOCKQUOTE>
<H5><A NAME = "10114">Monoid&lt; generators | relations &gt; : MonFPElt, ..., MonFPElt, Rel, ..., Rel -&gt; MonFP</A></H5>
<BLOCKQUOTE>
Given a generators clause consisting of a list of variables
x<sub>1</sub>, ..., x<sub>r</sub>, and a set of relations relations over
these generators, first construct the free monoid F on the 
generators x<sub>1</sub>, ..., x<sub>r</sub> and then construct the quotient of 
F corresponding to the ideal of F defined by relations.
<P>
The syntax for the relations clause is the same as for the
<TT>quo</TT>-constructor. The function returns:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The quotient monoid M;
<DT>(b)</DT><DD>The natural homomorphism &phi; : F -&gt; M.
<P>
<P>
</DL>
Thus, the statement
<P>
<TT>M&lt; y1, ..., yr &gt; := Monoid&lt; x1, ..., xr | w1, ..., ws &gt;;
<P>
</TT>
<P>
is an abbreviation for
<P>
<TT>F&lt; x<sub>1</sub>, ..., x<sub>r</sub> &gt; := FreeMonoid(r);
<P>
M&lt; y<sub>1</sub>, ..., y<sub>r</sub> &gt; := quo&lt; F | w<sub>1</sub>, ..., w<sub>s</sub> &gt;;
<P>
</TT>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10115">Example <TT>SgpFP_Monoid (H82E2)</TT></A></H3>
We create the monoid defined by the presentation
&lt; x, y | x<sup>2</sup>, y<sup>2</sup>, (xy)<sup>2</sup> &gt;.
<P>
<P>
<PRE>
&gt; M&lt;x,y&gt; := Monoid&lt; x, y | x^2, y^2, (x*y)^2 &gt;;
&gt; M;
Finitely presented monoid
Relations:
    x^2 = Id(M)
    y^2 = Id(M)
    (x * y)^2 = Id(M)
</PRE>
<HR>
<H4><A NAME = "10116">Accessing the Defining Generators  and Relations</A></H4>

<P>
<P>
The functions in this group provide access to basic information stored for a
finitely-presented semigroup G.


<H5><A NAME = "10117">S . i : SgpFP, RngIntElt -&gt; SgpFPElt</A></H5>
<BLOCKQUOTE>
The i-th defining generator for S.
</BLOCKQUOTE>
<H5><A NAME = "10118">Generators(S) : SgpFP -&gt; { SgpFPElt }</A></H5>
<BLOCKQUOTE>
A set containing the generators for S.
</BLOCKQUOTE>
<H5><A NAME = "10119">NumberOfGenerators(S) : SgpFP -&gt; RngIntElt</A></H5>
<H5>Ngens(S) : SgpFP -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The number of generators for S.
</BLOCKQUOTE>
<H5><A NAME = "10120">Parent(u) : SgpFPElt -&gt; SgpFP</A></H5>
<BLOCKQUOTE>
The parent semigroup S of the word u.
</BLOCKQUOTE>
<H5><A NAME = "10121">Relations(S) : SgpFP -&gt; [ Rel ]</A></H5>
<BLOCKQUOTE>
A sequence containing the defining relations for S.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text889.htm">[Next]</A><A  HREF = "text887.htm">[Prev]</A> <A  HREF = "text889.htm">[Right]</A> <A  HREF = "text887.htm">[Left]</A> <A  HREF = "text884.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>