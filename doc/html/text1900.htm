<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Inner Products and Duals</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1901.htm">[Next]</A><A  HREF = "text1899.htm">[Prev]</A> <A  HREF = "text1901.htm">[Right]</A> <A  HREF = "text1899.htm">[Left]</A> <A  HREF = "text1896.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "21167">Inner Products and Duals</A></H3>

<P>
<P>
<P>
The functions described in this section use the symplectic inner 
product defined for quantum codes.


<H5><A NAME = "21168">SymplecticInnerProduct(v1, v2) : ModTupFldElt, ModTupFldElt -&gt; FldFinElt</A></H5>

<PRE>    ExtendedFormat: BoolElt             Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Let v1 and v2 be two vectors belonging to the vector space K<sup>(n)</sup>,
where K is a finite field. This function returns the inner product of
v1 and v2 with respect to the symplectic inner product.  The symplectic 
inner product in extended format is defined by (a|b) * (c|d) = ad - bc, 
and its definition transfers naturally to the compact format.
<P>
For binary quantum codes whose compact format is over GF(4), the 
symplectic inner product is given by <TT>Trace</TT>(v<sub>1</sub> ./line(v)<sub>2</sub>).
</BLOCKQUOTE>
<H5><A NAME = "21169">SymplecticDual(C) : CodeAdd -&gt; CodeAdd</A></H5>

<PRE>    ExtendedFormat: BoolElt             Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The dual of the additive (or possibly linear) code C with respect to
the symplectic inner product. 
By default, C is interpreted as being in the compact format (a length 
n code over GF(q<sup>2</sup>)), but if <TT>ExtendedFormat</TT> is set to <TT>true</TT>, 
then it will be interpreted as being in extended format (a code of 
length 2n over GF(q)).
</BLOCKQUOTE>
<H5><A NAME = "21170">IsSymplecticSelfDual(C) : CodeAdd -&gt; BoolElt</A></H5>

<PRE>    ExtendedFormat: BoolElt             Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Return <TT>true</TT> if the code C is equal to its symplectic dual and <TT>false</TT> otherwise.
By default, C is interpreted as being in the compact format (a length 
n code over GF(q<sup>2</sup>)), but if <TT>ExtendedFormat</TT> is set to <TT>true</TT>, 
then it will be interpreted as being in extended format (a code of 
length 2n over GF(q)).
</BLOCKQUOTE>
<H5><A NAME = "21171">IsSymplecticSelfOrthogonal(C) : CodeAdd -&gt; BoolElt</A></H5>

<PRE>    ExtendedFormat: BoolElt             Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Return <TT>true</TT> if the code C is contained in its symplectic dual.
By default, C is interpreted as being in the compact format (a length 
n code over GF(q<sup>2</sup>)), but if <TT>ExtendedFormat</TT> is set to <TT>true</TT>, 
then it will be interpreted as being in extended format (a code of 
length 2n over GF(q)).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "21172">Example <TT>QECC_SymplecticEg (H164E17)</TT></A></H3>
Vectors which are symplectically orthogonal to one another
can be used to construct symplectic self-orthogonal codes. 
<P>
<P>
<P>
<PRE>
&gt; F&lt;w&gt; := GF(4);
&gt; V5 := VectorSpace(F, 5);
&gt; v := V5 ! [1,0,w,0,1];
&gt; w := V5 ! [w,1,0,w,w];
&gt; SymplecticInnerProduct(v,w);
0
&gt; C := AdditiveCode&lt;F, GF(2), 5 | v, w&gt;;
&gt; C;
[5, 1 : 2] GF(2)-Additive Code over GF(2^2)
Generator matrix:
[  1   0   w   0   1]
[  w   1   0   w   w]
&gt; D := SymplecticDual(C);
&gt; D;
[5, 4 : 8] GF(2)-Additive Code over GF(2^2)
Generator matrix:
[  1   0   0   0   1]
[  w   0   0   0   w]
[  0   1   0   0   0]
[  0   w   0   0   1]
[  0   0   1   0   w]
[  0   0   w   0   0]
[  0   0   0   1   1]
[  0   0   0   w   0]
&gt; C subset D;
true
&gt; Q := QuantumCode(C);
&gt; Q;
[[5, 3]] Quantum code over GF(2^2), stabilised by:
[  1   0   w   0   1]
[  w   1   0   w   w]
</PRE>
<HR>
<H3><A NAME = "21173">Example <TT>QECC_symplecticselforthog (H164E18)</TT></A></H3>
Any vector over GF(4) will be symplectically orthogonal to itself.
<P>
<P>
<P>
<PRE>
&gt; V5 := VectorSpace(GF(4), 5);
&gt; { SymplecticInnerProduct(v, v) : v in V5 };
{ 0 }
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1901.htm">[Next]</A><A  HREF = "text1899.htm">[Prev]</A> <A  HREF = "text1901.htm">[Right]</A> <A  HREF = "text1899.htm">[Left]</A> <A  HREF = "text1896.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>