<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Automorphism Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1873.htm">[Next]</A><A  HREF = "text1880.htm">[Prev]</A> <A  HREF = "text1873.htm">[Right]</A> <A  HREF = "text1880.htm">[Left]</A> <A  HREF = "text1874.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "20964">Automorphism Groups</A></H3>



<H5><A NAME = "20965">PermutationGroupHadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx</A></H5>
<H5>PAutHadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx</H5>
<BLOCKQUOTE>
Given an integer m&ge;1 and an integer &delta; such that
1&le;&delta; &le;&lfloor;(m + 1)/2 &rfloor;, this function returns the permutation group G 
of a Hadamard code over Z<sub>4</sub> of length 2<sup>m - 1</sup> and type 2<sup>&gamma;</sup> 4<sup>&delta;</sup>, where 
&gamma;=m + 1 - 2&delta;.  The group G contains all permutations of the coordinates which 
preserve the code.  Thus only permutation of coordinates is allowed, and the degree of G 
is always 2<sup>m - 1</sup>.  Moreover, the generator matrix with &gamma; + &delta; rows used to 
generate the code is returned.  This matrix is constructed in a recursive way using the 
<TT>Plotkin</TT> and <TT>BQPlotkin</TT> constructions defined in Section <A  HREF = "text1876.htm#20871">New Codes from Old</A>.
</BLOCKQUOTE>
<H5><A NAME = "20966">PermutationGroupHadamardCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt</A></H5>
<H5>PAutHadamardCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Given an integer m&ge;1 and an integer &delta; such that
1&le;&delta; &le;&lfloor;(m + 1)/2 &rfloor;, return the order of the permutation group 
G of a Hadamard code over Z<sub>4</sub> of length 2<sup>m - 1</sup> and type 2<sup>&gamma;</sup> 4<sup>&delta;</sup>, 
where &gamma;=m + 1 - 2&delta;.  The group G contains all permutations of the 
coordinates which preserve the code.
</BLOCKQUOTE>
<H5><A NAME = "20967">PermutationGroupExtendedPerfectCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx</A></H5>
<H5>PAutExtendedPerfectCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx</H5>
<BLOCKQUOTE>
Given an integer m&ge;2 and an integer &delta; such that
1&le;&delta; &le;&lfloor;(m + 1)/2 &rfloor;, return the permutation group G of an extended
perfect code over Z<sub>4</sub> of length 2<sup>m - 1</sup>, such that its dual code is of type
2<sup>&gamma;</sup> 4<sup>&delta;</sup>, where &gamma;=m + 1 - 2&delta;.
The group G contains all permutations of the coordinates which preserve the code.
Thus only permutation of coordinates is allowed, and the degree of G is always 2<sup>m - 1</sup>.
Moreover, the generator matrix with &gamma; + &delta; rows used to generate the code is
returned. This matrix is constructed in a recursive way using the Plotkin and BQPlotkin 
constructions defined in Section <A  HREF = "text1876.htm#20871">New Codes from Old</A>.
</BLOCKQUOTE>
<H5><A NAME = "20968">PermutationGroupExtendedPerfectCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt</A></H5>
<H5>PAutExtendedPerfectCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Given an integer m&ge;2 and an integer &delta; such that
1&le;&delta; &le;&lfloor;(m + 1)/2 &rfloor;, return the order of the permutation group 
G of an extended perfect code over Z<sub>4</sub> of length 2<sup>m - 1</sup>, such that its dual 
code is of type 2<sup>&gamma;</sup> 4<sup>&delta;</sup>, where &gamma;=m + 1 - 2&delta;.
The group G contains all permutations of the coordinates which preserve the code.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "20969">Example <TT>CodeZ4_spain-Z4-8 (H162E24)</TT></A></H3>
<P>
<P>
<PRE>
&gt; C := HadamardCodeZ4(2,4);
&gt; PAut := PAutHadamardCodeZ4(2,4);
&gt; PAut;
Permutation group PAut acting on a set of cardinality 8
    (1, 2)(3, 4)(5, 6)(7, 8)
    (2, 4)(6, 8)
    (5, 7)(6, 8)
    (1, 5)(3, 7)
&gt; {p : p in Sym(8) | C^p eq C} eq Set(PAut);
true
&gt; #PAut eq PAutHadamardCodeZ4Order(2,4);
true
&gt; d := 2; m := 4; g := m+1-2*d;
&gt; PAutHadamardCodeZ4Order(d, m) eq
&gt;  #GL(d-1,Integers(4))*#GL(g,Integers(2))*2^g*4^((g+1)*(d-1));
true
&gt; d := 4; m := 8; g := m+1-2*d;
&gt; PAutHadamardCodeZ4Order(d, m) eq
&gt;   #GL(d-1,Integers(4))*#GL(g,Integers(2))*2^g*4^((g+1)*(d-1));
true
&gt; PAutHadamardCodeZ4(2,4) eq PAutExtendedPerfectCodeZ4(2,4);
true
</PRE>
<PRE></PRE> <A  HREF = "text1873.htm">[Next]</A><A  HREF = "text1880.htm">[Prev]</A> <A  HREF = "text1873.htm">[Right]</A> <A  HREF = "text1880.htm">[Left]</A> <A  HREF = "text1874.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>