<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>C-Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1726.htm">[Next]</A><A  HREF = "text1724.htm">[Prev]</A> <A  HREF = "text1726.htm">[Right]</A> <A  HREF = "text1724.htm">[Left]</A> <A  HREF = "text1711.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "18963">C-Groups</A></H3>

<P>
<P>
There is a strong link between C-groups and coset geometries.
<P>
Given a group G and a set S of elements of G, we say that (G, S) satisfies the <I>intersection property</I> if 
for every subsets I and J of S, we have &lt; I &gt; &cap;&lt; J &gt; = &lt; I &cap;J &gt;.
<P>
We say that (G, S) satisfies the <I>string property</I> or <I>commuting property</I> if there is an ordering of the elements of S such that any two elements of S that are not one after the other commute.
<P>
A group G is a <I>C-group</I> if its set of generators is a set of involutions that satisfies the intersection property.
Moreover G is a <I>string-C-group</I> if G is a C-group and satisfies the string property.
<P>
When G is a C-group, we associate to it a <I>Coxeter diagram</I>, that is a graph whose vertices are the generators of G. 
Two vertices are joined by an edge provided the corresponding two generators do not commute. 
Moreover, to each edge we put a label that is the order of the product of the two elements corresponding to the two vertices.


<H5><A NAME = "18964">HasIntersectionProperty(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a permutation group G, determines whether or not its set of generators G.1, ..., G.n satisfy the intersection property.
</BLOCKQUOTE>
<H5><A NAME = "18965">HasStringProperty(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a permutation group G, determines whether or not there exists an ordering G.1, ..., G.n of the generators of G such that G.iG.j = G.jG.i whenever |i - j|&gt;1.
</BLOCKQUOTE>
<H5><A NAME = "18966">IsCGroup(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a permutation group G, determines whether or not its set of generators are involutions that satisfy the string
 property and the intersection property.
</BLOCKQUOTE>
<H5><A NAME = "18967">IsStringCGroup(G) : GrpPerm -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a permutation group G, determines whether or not its set of generators are involutions that satisfy the string property and the intersection property.
</BLOCKQUOTE>
<H5><A NAME = "18968">CosetGeometryFromCGroup(G) : GrpPerm -&gt; CosetGeom</A></H5>
<BLOCKQUOTE>
Given a permutation group G that is a C-group, construct the coset geometry D whose maximal parabolic subgroups are the subgroups generated by all but one generator of G. If G has n generators, D will be a coset geometry of rank n.
</BLOCKQUOTE>
<H5><A NAME = "18969">CosetGeometryToCGroup(D) : CosetGeom -&gt; GrpPerm</A></H5>
<BLOCKQUOTE>
Given a coset geometry D that has Borel = 1 and with minimal parabolic subgroups being cyclic groups of order 2, construct G as the group generated by the involutions of the minimal parabolic subgroups and returns it provided it satisfies the intersection property.
</BLOCKQUOTE>
<H5><A NAME = "18970">CoxeterDiagram(G) : GrpPerm -&gt; GrphUnd</A></H5>
<BLOCKQUOTE>
Given a C-group G, construct its Coxeter diagram.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "18971">Example <TT>IncidenceGeometry_cosetgeometrytocgroup (H148E13)</TT></A></H3>
Again back to the cube we constructed above as an incidence geometry.
We can convert it into a coset geometry and then a string-C-group very easily using the following commands.
<P>
<P>
<P>
<PRE>
&gt; cube := IncidenceGeometry(g);
&gt; ok, cg := CosetGeometry(cube);
&gt; G := CosetGeometryToCGroup(cg);
&gt; G;
Permutation group G acting on a set of cardinality 26
    (1, 2)(3, 4)(5, 6)(7, 8)(10, 12)(13, 14)(15, 16)(17, 19)(23, 25)
    (2, 4)(6, 8)(9, 12)(10, 11)(14, 16)(17, 18)(19, 20)(22, 25)(23, 24)
    (3, 6)(4, 5)(10, 14)(11, 18)(12, 13)(15, 19)(16, 17)(21, 22)(24, 26)
&gt; IsStringCGroup(G);
true
</PRE>
<HR>
<H3><A NAME = "18972">Example <TT>IncidenceGeometry_cgrouptocosetgeometry (H148E14)</TT></A></H3>
We also now have a way to construct a coset geometry (and hence the corresponding incidence geometry) from C-groups.
For instance, using E. H. Moore's presentation for the symmetric groups, we can easily construct the 5-simplex as a String C-group.
<P>
<P>
<P>
<PRE>
&gt; G:=sub&lt;Sym(6)|(1,2),(2,3),(3,4),(4,5),(5,6)&gt;;
&gt; IsCGroup(G);
true
&gt; IsStringCGroup(G);
true
&gt; d,v,e:=CoxeterDiagram(G);
&gt; for x in e do print x,Label(x);end for;
{1, 2} 3
{2, 3} 3
{3, 4} 3
{4, 5} 3
&gt; cg:=CosetGeometryFromCGroup(G);
&gt; IsThin(cg);
true
&gt; IsRC(cg);
true
&gt; IsFTGeometry(cg);
true
&gt; d,v,e := Diagram(cg);
&gt; for x in v do print x,Label(x);end for;
1 [ 1, 20 ]
2 [ 1, 15 ]
3 [ 1, 6 ]
4 [ 1, 6 ]
5 [ 1, 15 ]
&gt; for x in e do print x,Label(x);end for;
{1, 2} [ 3, 3, 3 ]
{1, 3} [ 2, 2, 2 ]
{1, 4} [ 2, 2, 2 ]
{1, 5} [ 3, 3, 3 ]
{2, 3} [ 3, 3, 3 ]
{2, 4} [ 2, 2, 2 ]
{2, 5} [ 2, 2, 2 ]
{3, 4} [ 2, 2, 2 ]
{3, 5} [ 2, 2, 2 ]
{4, 5} [ 3, 3, 3 ]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1726.htm">[Next]</A><A  HREF = "text1724.htm">[Prev]</A> <A  HREF = "text1726.htm">[Right]</A> <A  HREF = "text1724.htm">[Left]</A> <A  HREF = "text1711.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>