<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation of a Cohomology Module</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text776.htm">[Next]</A><A  HREF = "text774.htm">[Prev]</A> <A  HREF = "text776.htm">[Right]</A> <A  HREF = "text774.htm">[Left]</A> <A  HREF = "text773.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "8814">Creation of a Cohomology Module</A></H3>

<P>
<P>
<P>
<P>
In order to compute the cohomology of a group with respect to a G-module
M, it is first necessary to construct a data structure known as a 
<I>cohomology module</I>.


<H5><A NAME = "8815"></A><A NAME = "GrpCoh:CohomologyModule">CohomologyModule</A>(G, M) : GrpPerm, ModGrp -&gt; ModCoho</H5>
<H5>CohomologyModule(G, M) : GrpPC, ModGrp -&gt; ModCoho</H5>
<H5>CohomologyModule(G, M) : GrpMat, ModGrp -&gt; ModCoho</H5>
<H5>CohomologyModule(G, M) : GrpFP, ModGrp -&gt; ModCoho</H5>
<BLOCKQUOTE>
Given a group G and a G-module M with acting group G
this function returns a cohomology module for the action of G.  The
group G may be a finite permutation group, a finite matrix group, a PC-group,
or any finitely presented group.
For the PC-group case, however, the PC-presentation of G must be
conditioned.  This can be achieved by first executing the statement
<TT>G := ConditionedGroup(G);</TT>
</BLOCKQUOTE>
<H5><A NAME = "8816">CohomologyModule(G, Q, T) : GrpPerm, SeqEnum, SeqEnum -&gt; ModCoho</A></H5>
<H5>CohomologyModule(G, Q, T) : GrpPC, SeqEnum, SeqEnum -&gt; ModCoho</H5>
<H5>CohomologyModule(G, Q, T) : GrpMat, SeqEnum, SeqEnum -&gt; ModCoho</H5>
<H5>CohomologyModule(G, Q, T) : GrpFP, SeqEnum, SeqEnum -&gt; ModCoho</H5>
<BLOCKQUOTE>
Let G be a group which acts on a finitely-generated abelian group 
with invariants given by the sequence Q, and action described by T.  
The action T is given in the form of a sequence of d x d matrices 
over the integers, where d is the length of T, and <TT>T[i]</TT> 
defines the action of the i-th generator of G on the abelian group. The
function returns a cohomology module for the action of G.  The group G 
may be a finite permutation group, a finite matrix group, a PC-group
or any finitely presented group.  For the PC-group 
case, however, the PC-presentation of G must be conditioned.  This can 
be achieved by first executing the statement <TT>G := ConditionedGroup(G);</TT>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "8817">Example <TT>GrpCoh_coho-module1 (H73E1)</TT></A></H3>
We construct the cohomology module for PSL(3, 2) acting on a module of 
dimension 3 over GF(2). We first need to find a module of dimension 3.
<P>
<P>
<P>
<PRE>
&gt; G := PSL(3, 2);
&gt; Irrs := AbsolutelyIrreducibleModules(G, GF(2));
&gt; Irrs;
[
    GModule of dimension 1 over GF(2),
    GModule of dimension 3 over GF(2),
    GModule of dimension 3 over GF(2),
    GModule of dimension 8 over GF(2)
]
&gt; M := Irrs[2];
&gt; CM := CohomologyModule(G, M);
&gt; CM;
Cohomology Module
</PRE>
<HR>
<H5><A NAME = "8818">CohomologyModule(G, A, M) : GrpPerm, GrpAb, Any -&gt; ModCoho</A></H5>
<BLOCKQUOTE>
For a permutation group G acting on some abelian group A
through M, compute the cohomology module. M has to be either
a map from G into the endomorphisms of A, or a sequence of
endomorphisms of A, one for each of the generators of G.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text776.htm">[Next]</A><A  HREF = "text774.htm">[Prev]</A> <A  HREF = "text776.htm">[Right]</A> <A  HREF = "text774.htm">[Left]</A> <A  HREF = "text773.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>