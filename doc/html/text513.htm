<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Basic Element Operations</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text514.htm">[Next]</A><A  HREF = "text512.htm">[Prev]</A> <A  HREF = "text514.htm">[Right]</A> <A  HREF = "text512.htm">[Left]</A> <A  HREF = "text509.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5551">Basic Element Operations</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text513.htm#5552">Parent and Category</A>
<LI> <A  HREF = "text513.htm#5553">Arithmetic Operators</A>
<LI> <A  HREF = "text513.htm#5554">Equality and Membership</A>
<LI> <A  HREF = "text513.htm#5555">Predicates on Ring Elements</A>
<LI> <A  HREF = "text513.htm#5559">Precision</A>
<LI> <A  HREF = "text513.htm#5563">Coefficients and Degree</A>
<LI> <A  HREF = "text513.htm#5573">Evaluation and Derivative</A>
<LI> <A  HREF = "text513.htm#5579">Square Root</A>
<LI> <A  HREF = "text513.htm#5581">Composition and Reversion</A>
</UL>
<H4><A NAME = "5552">Parent and Category</A></H4>



<H5>Parent(r) : RngSerElt -&gt; RngSer</H5>

<H5>Category(r) : RngSerElt -&gt; Cat</H5><P>

<H4><A NAME = "5553">Arithmetic Operators</A></H4>



<H5>+ b : RngSerElt -&gt; RngSerElt</H5>

<H5>- b : RngSerElt -&gt; RngSerElt</H5><P>

<H5>a + b : RngSerElt, RngSerElt -&gt; RngSerElt</H5>

<H5>a - b : RngSerElt, RngSerElt -&gt; RngSerElt</H5>

<H5>a * b : RngSerElt, RngSerElt -&gt; RngSerElt</H5>

<H5>a ^ k : RngSerElt, RngIntElt -&gt; RngSerElt</H5><P>


<H5>a div b : RngSerPowElt, RngSerPowElt -&gt; RngSerPowElt</H5>

<H5>a / b : RngSerElt, RngSerElt -&gt; RngSerElt</H5><P>


<H4><A NAME = "5554">Equality and Membership</A></H4>



<H5>a eq b : RngSerElt, RngSerElt -&gt; BoolElt</H5>

<H5>a ne b : RngSerElt, RngSerElt -&gt; BoolElt</H5><P>

<H5>a in R : RngSerElt, RngSer -&gt; BoolElt</H5>

<H5>a notin R : RngSerElt, RngSer -&gt; BoolElt</H5><P>

<H4><A NAME = "5555">Predicates on Ring Elements</A></H4>

<P>
 Note that the definition of equality for series
not only affects the result of the application of
<TT>eq</TT> and <TT>ne</TT>, but also that of <TT>IsOne, IsZero</TT> and
<TT>IsMinusOne</TT>.


<H5>IsZero(a) : RngSerElt -&gt; BoolElt</H5>

<H5>IsOne(a) : RngSerElt -&gt; BoolElt</H5>

<H5>IsMinusOne(a) : RngSerElt -&gt; BoolElt</H5><P>

<H5>IsNilpotent(x) : RngSerElt -&gt; BoolElt</H5>

<H5>IsIdempotent(x) : RngSerElt -&gt; BoolElt</H5><P>

<H5>IsUnit(a) : RngSerElt -&gt; BoolElt</H5>

<H5>IsZeroDivisor(x) : RngSerElt -&gt; BoolElt</H5>

<H5>IsRegular(x) : RngSerElt -&gt; BoolElt</H5><P>

<H5>IsIrreducible(x) : RngSerElt -&gt; BoolElt</H5>

<H5>IsPrime(x) : RngSerElt -&gt; BoolElt</H5><P>


<H5><A NAME = "5556">IsWeaklyZero(f) : RngSerElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a series f, return whether f is weakly zero, which is whether
f is exactly zero or of the form O(x<sup>p</sup>) for some p.
</BLOCKQUOTE>
<H5><A NAME = "5557">IsWeaklyEqual(f, g) : RngSerElt, RngSerElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given series f and g, return whether f is weakly equal to g,
which is whether (f - g) is weakly zero (see <TT>IsWeaklyZero</TT>).
</BLOCKQUOTE>
<H5><A NAME = "5558">IsIdentical(f, g) : RngSerElt, RngSerElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given series f and g, return whether f is identical to g,
which is whether f and g have exactly the same valuation,
precision, and coefficients.
</BLOCKQUOTE>
<H4><A NAME = "5559">Precision</A></H4>



<H5><A NAME = "5560">AbsolutePrecision(f) : RngSerElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a series f, this returns the absolute precision that
is stored with f. If f is a series in x, the absolute
precision of f is the exponent p such  that x<sup>p</sup> is the first term
of f of which the coefficient is not known, that is, it is
the least p such that f&isin;O(x<sup>p</sup>).
If f is known exactly (in a free ring), the absolute precision
is infinite and an error occurs.
Note that the absolute precision may be a non-integral rational number if
f is a Puiseux series.
</BLOCKQUOTE>
<H5><A NAME = "5561">RelativePrecision(f) : RngSerElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a series f, this returns the relative precision that
is stored with f. The relative precision counts the number of coefficients
of f that is known, starting at the first non-zero term.
Hence the relative precision is the difference
between the absolute precision and the valuation of f, and is
therefore always non-negative; however, if f is exact,
the relative precision is infinite and the value &infin; is returned.
Note that the relative precision may be a non-integral rational number if
f is a Puiseux series.
</BLOCKQUOTE>
<H5><A NAME = "5562">ChangePrecision(f, r) : RngSerElt, RngIntElt -&gt; RngSerElt</A></H5>
<H5>ChangePrecision(f, r) : RngSerElt, Infty -&gt; RngSerElt</H5>
<H5>ChangePrecision(~f, r) : RngSerElt, RngIntElt -&gt;</H5>
<H5>ChangePrecision(~f, r) : RngSerElt, Infty -&gt;</H5>
<BLOCKQUOTE>
The (non puiseux) series f with absolute precision r 
(which can be positive infinity).
</BLOCKQUOTE>
<H4><A NAME = "5563">Coefficients and Degree</A></H4>



<H5><A NAME = "5564">Coefficients(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt</A></H5>
<H5>ElementToSequence(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt</H5>
<H5>Eltseq(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt</H5>
<BLOCKQUOTE>
Let f be a series with coefficients in a ring R and with indeterminate x.
This function returns the sequence Q of coefficients of f,
the unscaled valuation v and the exponent denominator d of f
(v is the true valuation of f multiplied by d).
The i-th entry Q[i] of Q equals the coefficient of
x^((v + i - 1)/(d)) in f.
Thus the first entry of Q is the `first'
(lowest order) non-zero coefficient of
f, i.e., the coefficient of x<sup>w</sup> where w is the true valuation of f.
</BLOCKQUOTE>
<H5><A NAME = "5565">Coefficient(f, i) : RngSerElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given a series f with coefficients in a ring R, and a rational or
integer i, return the coefficient of the i-th power of the
indeterminate x of f as an element of R.
If f is a Puiseux series i may be a (non-integral) rational;
otherwise i must be an integer (and also must be non-negative if f is a
power series).  Also, i must be less than p, the precision of f.
</BLOCKQUOTE>
<H5><A NAME = "5566">LeadingCoefficient(f) : RngSerElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given a series f with coefficients in a ring R, return the leading
coefficient of f as an element of R, which is the first non-zero
coefficient of f (i.e., the coefficient x<sup>v</sup> in f, where x is
the indeterminate of f and v is the valuation of f).
</BLOCKQUOTE>
<H5><A NAME = "5567">LeadingTerm(f) : RngSerElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given a series f with coefficients in a ring R, return the leading
term of f, which is the first non-zero term of f (i.e., the
term of f whose monomial is x<sup>v</sup>, where x is the indeterminate of
f and v is the valuation of f).
</BLOCKQUOTE>
<H5><A NAME = "5568">Truncate(f) : RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given a series f, return the exact series obtained by
truncating f after the last known non-zero coefficient. 
</BLOCKQUOTE>
<H5><A NAME = "5569">ExponentDenominator(f) : RngMSerElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given a series f, return the exponent denominator of f, i.e.,
the lowest common denominator of all the exponents of the non-zero
terms of f (always an integer).  For power series and Laurent series,
this will always be 1 of course.
</BLOCKQUOTE>
<H5><A NAME = "5570">Degree(f) : RngSerElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a series f, return the degree of the truncation of f, 
that is, the exponent of the last known non-zero term.
Note that this may be a non-integral rational number if f is a
Puiseux series.
</BLOCKQUOTE>
<H5><A NAME = "5571">Valuation(f) : RngSerElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a series f, return the smallest integer v (possibly negative
for Laurent series) such that the coefficient of x<sup>v</sup> in f is not
known to be zero.  For the exact 0 element (in a free ring), the
valuation is &infin;.  Note that the valuation may be a non-integral
rational number if f is a Puiseux series.
</BLOCKQUOTE>
<H5><A NAME = "5572">ExponentDenominator(f) : RngSerElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The exponent denominator of the series f. This is the lowest common 
denominator of the exponents of the non-zero terms of f.
</BLOCKQUOTE>
<H4><A NAME = "5573">Evaluation and Derivative</A></H4>



<H5><A NAME = "5574">Derivative(f) : RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given a series f&isin;R, return the derivative
of f with respect to its indeterminate, as an element of R. 
Note that the precision decreases by 1 (unless f
has infinite precision).
</BLOCKQUOTE>
<H5><A NAME = "5575">Derivative(f, n) : RngSerElt, RngIntElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given a series f&isin;R and an integer n &gt; 0, return the n-th derivative
of f with respect to its indeterminate, as an element of R.
Note that the precision decreases by n (unless f
has infinite precision).
</BLOCKQUOTE>
<H5><A NAME = "5576">Integral(f) : RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given a series f&isin;R, return an anti-derivative F
of f with respect to its indeterminate, which is an element
of R which has derivative f.  The coefficient of x<sup> - 1</sup> in f
must be zero.
Note that the precision of F
will be exceeding that of f by 1 (unless f has infinite precision).
</BLOCKQUOTE>
<H5><A NAME = "5577">Evaluate(f, s) : RngSerElt, RngElt -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Given an element f of a series ring over the
coefficient ring R, and an element s of the ring
S, return the value of f(s) when the indeterminate x is
evaluated at s.  The result will be an element of the common overstructure
over R and S.
</BLOCKQUOTE>
<H5><A NAME = "5578">Laplace(f) : RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
The Laplace transform of the series f; if f has expansion
&sum;<sub>i&ge;0</sub> a<sub>i</sub>x<sup>i</sup>, its Laplace transform has expansion
&sum;<sub>i&ge;0</sub> (i!a<sub>i</sub>)x<sup>i</sup>.  The valuation of f must be integral
and non-negative.
</BLOCKQUOTE>
<H4><A NAME = "5579">Square Root</A></H4>



<H5><A NAME = "5580">SquareRoot(f) : RngSerElt -&gt; RngSerElt</A></H5>
<H5>Sqrt(f) : RngSerElt -&gt; RngSerElt</H5>
<BLOCKQUOTE>
Return the square root of the series f, f must have
even valuation if it is a power or Laurent series.
</BLOCKQUOTE>
<H4><A NAME = "5581">Composition and Reversion</A></H4>



<H5><A NAME = "5582">Composition(f, g) : RngSerElt, RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given elements f and g from the same series ring P, return
their composition, defined by 
f<IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> g = &sum;<sub>i &lt; p</sub>f<sub>i</sub>(g<sup>i</sup>),
where f=&sum;<sub>i &lt; p</sub> f<sub>i</sub>x<sup>i</sup>.
</BLOCKQUOTE>
<H5><A NAME = "5583">Reversion(f) : RngSerElt -&gt; RngSerElt</A></H5>
<H5>Reverse(f) : RngSerElt -&gt; RngSerElt</H5>
<BLOCKQUOTE>
Given a series f (in x, say), this returns the inverse
of f under composition, that is, an element g of the same power series
ring such that its composition with f equals x to the best possible
precision.
If f is a power or Laurent series, the valuation of f must be 1.
If f is a Puiseux series, the valuation of f must be positive
(but need not equal 1), and if the valuation of f is not 1,
the leading coefficient of f must be 1.
</BLOCKQUOTE>
<H5><A NAME = "5584">Convolution(f, g) : RngSerElt, RngSerElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given elements f and g from the same series ring P, return
their convolution f ast g, defined by 
f ast g = &sum;<sub>i &lt; min(p, q)</sub>f<sub>i</sub>g<sub>i</sub>x<sup>i</sup>,
where f=&sum;<sub>i &lt; p</sub> f<sub>i</sub>x<sup>i</sup> + O(x<sup>p</sup>) and g=&sum;<sub>i &lt; q</sub>g<sub>i</sub>x<sup>i</sup> + O(x<sup>q</sup>).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5585">Example <TT>RngSer_CompositionReversion (H49E2)</TT></A></H3>
We demonstrate the functions <TT>Composition</TT> and <TT>Reversion</TT>.
First we check that <TT>Arcsin</TT> is the reversion of <TT>Sin</TT>.
<P>
<P>
<PRE>
&gt; S&lt;x&gt; := PowerSeriesRing(RationalField());
&gt; f := Sin(x);
&gt; g := Arcsin(x);
&gt; f;     
x - 1/6*x^3 + 1/120*x^5 - 1/5040*x^7 + 1/362880*x^9 - 
    1/39916800*x^11 + 1/6227020800*x^13 - 1/1307674368000*x^15 + 
    1/355687428096000*x^17 - 1/121645100408832000*x^19 + O(x^21)
&gt; g;
x + 1/6*x^3 + 3/40*x^5 + 5/112*x^7 + 35/1152*x^9 + 63/2816*x^11 +
    231/13312*x^13 + 143/10240*x^15 + 6435/557056*x^17 + 
    12155/1245184*x^19 + O(x^21)
&gt; Composition(f, g);
x + O(x^21)
&gt; Composition(g, f);
x + O(x^21)
&gt; Reversion(f) - g;
O(x^21)
&gt; Reversion(g) - f;
O(x^21)
</PRE>
Next we compute the reversion of a series whose valuation is not 1.
<P>
<P>
<PRE>
&gt; S&lt;x&gt; := PuiseuxSeriesRing(RationalField());
&gt; f := x^3 - x^5 + 2*x^8;
&gt; r := Reversion(f);
&gt; f;
x^3 - x^5 + 2*x^8
&gt; r;
x^(1/3) + 1/3*x + 4/9*x^(5/3) - 2/3*x^2 + 65/81*x^(7/3) - 
    22/9*x^(8/3) + 5/3*x^3 - 208/27*x^(10/3) + 5005/729*x^(11/3) 
    - 70/3*x^4 + 206264/6561*x^(13/3) - 50830/729*x^(14/3) + 
    134*x^5 - 498674/2187*x^(16/3) + 31389020/59049*x^(17/3) + 
    O(x^6)
&gt; Composition(r, f);
x + O(x^18)
&gt; Composition(f, r);
x + O(x^(20/3))
</PRE>
Finally we compute the reversion of a proper Puiseux series.
<P>
<P>
<PRE>
&gt; f := x^(2/5) - x^(2/3) + x^(3/2) + O(x^2);
&gt; r := Reversion(f); 
&gt; r;
x^(5/2) + 5/2*x^(19/6) + 145/24*x^(23/6) + 715/48*x^(9/2) + 
    389795/10368*x^(31/6) - 5/2*x^(21/4) + O(x^(11/2))
&gt; Composition(f, r);  
x + O(x^4)
&gt; Composition(r, f);
x + O(x^(11/5))
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text514.htm">[Next]</A><A  HREF = "text512.htm">[Prev]</A> <A  HREF = "text514.htm">[Right]</A> <A  HREF = "text512.htm">[Left]</A> <A  HREF = "text509.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>