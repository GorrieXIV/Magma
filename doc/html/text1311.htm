<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Euclidean Algorithms, GCDs and LCMs</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1312.htm">[Next]</A><A  HREF = "text1310.htm">[Prev]</A> <A  HREF = "text1312.htm">[Right]</A> <A  HREF = "text1310.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "14292">Euclidean Algorithms, GCDs and LCMs</A></H3>

<P>
<P>
<P>
A ring of differential operators shares many properties with 
a univariate polynomial ring.
Two of them are GCD and LCM algorithms.
However, a consequence of
the non--commutative multiplication of a differential
operator ring is that the GCD and LCM algorithms
cannot be used directly.
For instance, in the euclidean algorithm multiplication of
the quotient can be done on the left or the right.
Therefore one needs to specify the direction of 
the multiplication in the GCD and LCM algorithms for differential
operator rings.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1311.htm#14293">Euclidean Right and Left Division</A>
<LI> <A  HREF = "text1311.htm#14297">Greatest Common Right and Left Divisors</A>
<LI> <A  HREF = "text1311.htm#14303">Least Common Left Multiples</A>
</UL>
<H4><A NAME = "14293">Euclidean Right and Left Division</A></H4>



<H5><A NAME = "14294">EuclideanRightDivision(N, D) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt,RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given differential operators N and D, return two differential operators Q and R, such that
N=Q.D + R, with <TT>Degree(R) &lt; Degree(D)</TT>.
An error occurs if D is 0.  
</BLOCKQUOTE>
<H5><A NAME = "14295">EuclideanLeftDivision(D, N) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt,RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given differential operators D and N, return two differential operators Q and R, such that
N=D.Q + R, with <TT>Degree(R) &lt; Degree(D)</TT>.
An error occurs if D is 0.  
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14296">Example <TT>RngDiff_example-eucl-alg (H117E51)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; L1 := D;
&gt; L2 := (D-3)*(D+z);
&gt; EuclideanRightDivision(L1, L2);
0
D
&gt; Q, R := EuclideanRightDivision(L2, L1);
&gt; Q, R;
D + z - 3
-3*z + 1
&gt; L2 eq Q*L1+R;
true
&gt; EuclideanLeftDivision(L2, L1);
0
D
&gt; S, T := EuclideanLeftDivision(L1, L2);
&gt; S, T;
D + z - 3
-3*z
&gt; L2 eq L1*S+T;
true
</PRE>
<HR>
<H4><A NAME = "14297">Greatest Common Right and Left Divisors</A></H4>



<H5><A NAME = "14298">GreatestCommonRightDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>GCRD(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, return the unique
monic differential operator G&isin;R that generates the left 
ideal R A + R B.
</BLOCKQUOTE>
<H5><A NAME = "14299">ExtendedGreatestCommonRightDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, this function
returns three operators G, U, V&isin;R, that satisfy U.A + V.B =G.
The differential operator G is the unique monic right GCD of A and B.
</BLOCKQUOTE>
<H5><A NAME = "14300">GreatestCommonLeftDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>GCLD(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, return the unique
monic differential operator G&isin;R that generates the right 
ideal AR + BR.
</BLOCKQUOTE>
<H5><A NAME = "14301">ExtendedGreatestCommonLeftDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, this function
returns three operators G, U, V&isin;R, that satisfy A.U + B.V =G.
The differential operator G is the unique monic left GCD of A and B.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14302">Example <TT>RngDiff_example-GCRD-GCLD (H117E52)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; L1 := D^3+z*D^2+D-z;
&gt; L2 := D^2+(z-3)*D-3*z+1;
&gt; GreatestCommonRightDivisor(L1, L2);
D + z
&gt; GreatestCommonRightDivisor(L1, L2) eq GCRD(L1, L2);
true
&gt; G, U, V :=ExtendedGreatestCommonRightDivisor(L1, L2);
&gt; G, U, V;
D + z
1/8
-1/8*D + -3/8
&gt; G eq U*L1+V*L2;
true
&gt; GreatestCommonLeftDivisor(L1, L2);
1
&gt; GCLD(L2,L2*L1) eq L2;
true
</PRE>
<HR>
<H4><A NAME = "14303">Least Common Left Multiples</A></H4>



<H5><A NAME = "14304">LeastCommonLeftMultiple(L) : RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Let L=D - r be a monic operator of degree 1 in R=F[D].
Return the least common left multiple of L and all its conjugates
over the base ring of F, with respect to the coercion of this base ring 
into F.
</BLOCKQUOTE>
<H5><A NAME = "14305">LeastCommonLeftMultiple(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</A></H5>
<H5>LCLM(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt</H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, 
return the unique monic differential operator L&isin;R,
that generates the left ideal RA&cap;RB.
The order of the least common multiple of A and B is at 
most <TT>Order(A)+ Order(B)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "14306">ExtendedLeastCommonLeftMultiple(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt</A></H5>
<BLOCKQUOTE>
Given two differential operators A, B&isin;R, 
return three operators L, U, V&isin;R, that satisfy L=U.A= V.B.
The differential operator L is the unique monic left LCM of A and B.
</BLOCKQUOTE>
<H5><A NAME = "14307">ExtendedLeastCommonLeftMultiple(S) : [RngDiffOpElt]  -&gt; RngDiffOpElt, SeqEnum</A></H5>
<BLOCKQUOTE>
Given the non--empty sequence of differential operators S, this function
returns the unique monic left LCM L of the entries of S,
as well as a sequence Q of length #S,
satisfying L=Q[i].S[i] for i=1, 2, ..., #S.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14308">Example <TT>RngDiff_example-LCLM (H117E53)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; LCLM(D, D-z);
D^2 + (-z^2 - 1)/z*D
&gt; L1 := D^3+z*D^2+D-z;
&gt; L2 := D^2+(z-3)*D-3*z+1;
&gt; LeastCommonLeftMultiple(L1, L2);
D^4 + (z - 3)*D^3 + (-3*z + 2)*D^2 + (-z - 3)*D + 3*z - 1
&gt; L, U, V := ExtendedLeastCommonLeftMultiple(L1, L2);
&gt; L, U, V;
D^4 + (z - 3)*D^3 + (-3*z + 2)*D^2 + (-z - 3)*D + 3*z - 1
D + -3
D^2 + -1
&gt; L eq U*L1;
true
&gt; L eq V*L2;
true
&gt; L, Q := ExtendedLeastCommonLeftMultiple([D,D+1,z*D+1]);
&gt; L;
D^3 + (z^2 - 6)/(z^2 - 2*z)*D^2 + (2*z - 6)/(z^2 - 2*z)*D
&gt; Q[3]*(z*D+1) eq L;
true
</PRE>
<HR>
<H3><A NAME = "14309">Example <TT>RngDiff_example-LCLM-conjugates (H117E54)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; P&lt;T&gt; := PolynomialRing(F);
&gt; M&lt;u&gt; := ext&lt;F|T^2+T+1&gt;;
&gt; RM&lt;DM&gt; := DifferentialOperatorRing(M);
&gt; LeastCommonLeftMultiple(DM-u^2);
DM^2 + DM + 1
&gt; lclm := LeastCommonLeftMultiple(DM-u+1);
DM^2 + 3*DM + 3
&gt; EuclideanRightDivision(lclm, DM-u+1);
DM + u + 2
0
&gt; N&lt;v&gt;, mp := ext&lt;F|T^2-z&gt;;
&gt; RN&lt;DN&gt; := DifferentialOperatorRing(N);
&gt; lclm := LeastCommonLeftMultiple(DN-v);
&gt; lclm;
DN^2 + -1/2/z*DN + -z
&gt; LeastCommonLeftMultiple(DN-v, DN+v) eq lclm;
true
&gt; EuclideanRightDivision(lclm,DN-v);
DN + v - 1/2/z
0
&gt; EuclideanRightDivision(lclm,DN+v);
DN + -v - 1/2/z
0
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1312.htm">[Next]</A><A  HREF = "text1310.htm">[Prev]</A> <A  HREF = "text1312.htm">[Right]</A> <A  HREF = "text1310.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>