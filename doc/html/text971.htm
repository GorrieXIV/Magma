<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Minimal Forms and Gradings</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text972.htm">[Next]</A><A  HREF = "text970.htm">[Prev]</A> <A  HREF = "text972.htm">[Right]</A> <A  HREF = "text970.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10967">Minimal Forms and Gradings</A></H3>

<P>
<P>
<P>
There are some standard ways of rewriting an algebra to an isomorphic
form. We can also constructed the associated graded algebra of a 
basic algebra. Also included here is a function for rearranging the 
orders of idempotents in a basic algebra. 
<P>
<P>
The first intrinsic is used extensively in the programs for computing
automorphisms and isomorphisms. 


<H5><A NAME = "10968">MinimalGeneratorForm(A) : AlgBas -&gt;  Rec</A></H5>
<BLOCKQUOTE>
Returns a record consisting of an isomorphic basic algebra having
the property that it is generated by a minimal number of elements
and the projective modules are filtered by radical layers. The 
record consists of the following fields:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The algebra in minimal form (field <TT>algebra</TT>).
<DT>(b)</DT><DD>The map from the minimal generator form algebra to A
(field <TT>Homomorphism</TT>).
<DT>(c)</DT><DD>The inverse map from A to the minimal generator form algebra
(field <TT>InverseHomomorphism</TT>).
<DT>(d)</DT><DD>The dimensions of the radical layer (field 
<TT>RadicalDimensions</TT>).
<DT>(e)</DT><DD>The dimensions of the filtration of the top radical layer
by the socle layer (field <TT>FilterDimensions</TT>).</DL>
</BLOCKQUOTE>
<H5><A NAME = "10969">MinimalGeneratorFormAlgebra(A) : AlgBas -&gt; AlgBas</A></H5>
<BLOCKQUOTE>
Returns an isomorphic algebra having minimal generator form.
</BLOCKQUOTE>
<H5><A NAME = "10970">AssociatedGradedAlgebra(A) : AlgBas -&gt; AlgBas</A></H5>
<BLOCKQUOTE>
Returns the basic algebra that is isomorphic to the associated
graded algebra of A.
</BLOCKQUOTE>
<H5><A NAME = "10971">GradedCapHomomorphism(A) : AlgBas -&gt; ModMatFldElt</A></H5>
<BLOCKQUOTE>
Returns the matrix of the map from A/Rad(A) to X/Rad(X) where
X is the associated graded algebra of A.
</BLOCKQUOTE>
<H5><A NAME = "10972">GradedCapHomomorphism(A, B, mu) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt</A></H5>
<BLOCKQUOTE>
Given an algebra homomorphism mu: A -&gt; B, returns the induced homomorphism  A/Rad<sup>2</sup>(A) -&gt; B/Rad<sup>2</sup>(B),
where Rad<sup>2</sup> is the second power of the Jacobson radical.
</BLOCKQUOTE>
<H5><A NAME = "10973">BuildHomomorphismFromGradedCap(A, B, phi) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt</A></H5>
<BLOCKQUOTE>
Returns the graded homomorphism from the associated graded algebra X of
A to the associated graded algebra Y of B, whose cap is &phi;. That is
phi is the matrix of the induced homomorphism of X/Rad<sup>2</sup>(X) to Y/Rad<sup>2</sup>(Y).
</BLOCKQUOTE>
<H5><A NAME = "10974">ChangeIdempotents(A, S) : AlgBas, SeqEnum -&gt; AlgBas, Map</A></H5>
<H5>ChangeIdempotents(A, S) : AlgBas, GrpPermElt -&gt; AlgBas, Map</H5>
<BLOCKQUOTE>
Returns the basic algebra isomorphic to A, obtained by permuting the
order of the idempotents by the permutation S. The permutation S 
can be given as an element of the symmetric group or as the sequence 
of images of the permutation.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10975">Example <TT>AlgBas_GradedHomomorphism (H90E7)</TT></A></H3>
In this examples we investigate properties of the basic algebra
of a Schur algebra. 
<P>
<P>
<PRE>
&gt; A := BasicAlgebraOfSchurAlgebra(3,6,GF(3));
&gt; A;
Basic algebra of dimension 48 over GF(3)
Number of projective modules: 7
Number of generators: 21
&gt; B := BasicAlgebraOfExtAlgebra(A,10);
&gt; B;
Basic algebra of dimension 98 over GF(3)
Number of projective modules: 7
Number of generators: 21
&gt; C := BasicAlgebraOfExtAlgebra(B,10);
&gt; C;
Basic algebra of dimension 48 over GF(3)
Number of projective modules: 7
Number of generators: 21
&gt; boo,mat := IsIsomorphic(A,C);
&gt; boo;
true
&gt; IsAlgebraHomomorphism(mat);
true
</PRE>
So we see that A is isomorphic to its double ext-algebra,
and it is graded since the double ext-algebra is graded.
Thus we know that the basic algebra A is a Koszul algebra. 
<HR>
<H3><A NAME = "10976">Example <TT>AlgBas_GradedHomomorphisms-2 (H90E8)</TT></A></H3>
Here we see how to rearrange an algebra by changing the ordering
on the primitive idempotents.
<P>
<P>
<PRE>
&gt; A := BasicAlgebraOfSchurAlgebra(3,5,GF(3));
&gt; A;
Basic algebra of dimension 11 over GF(3)
Number of projective modules: 5
Number of generators: 9
&gt; B, uu  := ChangeIdempotents(A,[2,4,5,1,3]);
&gt; B;
Basic algebra of dimension 11 over GF(3)
Number of projective modules: 5
Number of generators: 9
&gt; DimensionsOfProjectiveModules(A);
[ 2, 3, 2, 1, 3 ]
&gt; DimensionsOfProjectiveModules(B);
[ 3, 1, 3, 2, 2 ]
&gt; IsAlgebraHomomorphism(A,B,uu);
true
&gt; uu;
[0 0 0 0 0 0 0 1 0 0 0]
[0 0 0 0 0 0 0 0 1 0 0]
[1 0 0 0 0 0 0 0 0 0 0]
[0 1 0 0 0 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0 0 0 0]
[0 0 0 0 0 0 0 0 0 1 0]
[0 0 0 0 0 0 0 0 0 0 1]
[0 0 0 1 0 0 0 0 0 0 0]
[0 0 0 0 1 0 0 0 0 0 0]
[0 0 0 0 0 1 0 0 0 0 0]
[0 0 0 0 0 0 1 0 0 0 0]
</PRE>
We see that uu is a permutation matrix.
<HR>
<PRE></PRE> <A  HREF = "text972.htm">[Next]</A><A  HREF = "text970.htm">[Prev]</A> <A  HREF = "text972.htm">[Right]</A> <A  HREF = "text970.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>