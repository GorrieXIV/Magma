<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Structure Operations on Differential Operator Rings</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1308.htm">[Next]</A><A  HREF = "text1306.htm">[Prev]</A> <A  HREF = "text1308.htm">[Right]</A> <A  HREF = "text1306.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "14211">Structure Operations on Differential Operator Rings</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1307.htm#14212">Category and Parent</A>
<LI> <A  HREF = "text1307.htm#14215">Related Structures</A>
<LI> <A  HREF = "text1307.htm#14218">Derivation and Differential</A>
<LI> <A  HREF = "text1307.htm#14222">Predicates and Booleans</A>
<LI> <A  HREF = "text1307.htm#14230">Precision</A>
</UL>
<H4><A NAME = "14212">Category and Parent</A></H4>

<P>
<P>
<P>
Differential Operator Rings form the magma category <TT>RngDiffOp</TT>.
The notional power structures exist as parents of differential operator rings.


<H5><A NAME = "14213">Category(R) : RngDiffOp -&gt; RngDiffOp</A></H5>
<H5>Type(R) : RngDiffOp -&gt; RngDiffOp</H5>
<BLOCKQUOTE>
The category, or type, of the differential operator ring R.
</BLOCKQUOTE>
<H5><A NAME = "14214">Parent(R) : RngDiffOp -&gt; PowStr</A></H5>
<BLOCKQUOTE>
The power structure of the differential operator ring R.
</BLOCKQUOTE>
<H4><A NAME = "14215">Related Structures</A></H4>

<P>
<P>
<P>
As outlined in the introduction, a differential operator ring R is of the 
form F[D], for a differential ring F.
The ring F is called the <I>base ring</I> or <I>coefficient ring</I> of R.


<H5><A NAME = "14216">BaseRing(R) : RngDiffOp -&gt; Rng</A></H5>
<H5>CoefficientRing(R) : RngDiffOp -&gt; Rng</H5>
<BLOCKQUOTE>
The base ring, or coefficient ring, of the differential operator ring R. 
</BLOCKQUOTE>
<H5><A NAME = "14217">ConstantRing(R) : RngDiffOp -&gt; Rng</A></H5>
<BLOCKQUOTE>
The constant ring of the differential ring operator R. 
</BLOCKQUOTE>
<H4><A NAME = "14218">Derivation and Differential</A></H4>

<P>
<P>
<P>
By construction the variable D of a differential operator ring
F[D] is related to the derivation &delta;<sub>F</sub>.
That is why &delta;<sub>F</sub> is also considered to be the derivation of R.


<H5><A NAME = "14219">Derivation(R) : RngDiffOp -&gt; Map</A></H5>
<BLOCKQUOTE>
The derivation of the differential operator ring R. 
</BLOCKQUOTE>
<H5><A NAME = "14220">Differential(R) : RngDiffOp -&gt; DiffFunElt</A></H5>
<BLOCKQUOTE>
The differential belonging to the derivation of the differential 
operator ring R.
The derivation must have been constructed in such a way that
it is defined by a differential.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14221">Example <TT>RngDiff_diff-op-ring_related_structures (H117E35)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; BaseRing(R) eq F;
true
&gt; Derivation(R);
Mapping from: RngDiff: F to RngDiff: F given by a rule [no inverse]
&gt; Differential(R);
(1) d(z)
</PRE>
<HR>
<H4><A NAME = "14222">Predicates and Booleans</A></H4>



<H5><A NAME = "14223">R eq F : RngDiffOp, RngDiffOp -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the differential operator rings R and 
F are the same.
</BLOCKQUOTE>
<H5><A NAME = "14224">IsIdentical(R, F) : RngDiffOp, RngDiffOp -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the differential operator rings R and 
F are identical.
</BLOCKQUOTE>
<H5><A NAME = "14225">IsDifferentialOperatorRing(R) : . -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the given argument is 
a differential operator ring.
</BLOCKQUOTE>
<H5><A NAME = "14226">HasProjectiveDerivation(R) : RngDiffOp -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> iff R is defined over a ring F with 
derivation weakly of the form (F.1).d/d(F.1).
</BLOCKQUOTE>
<H5><A NAME = "14227">HasZeroDerivation(R) : RngDiffOp -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> iff the base ring of R is an algebraic differential 
field or a differential series ring F such that the derivation of R 
acts as a (weak) zero derivation on F.1.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14228">Example <TT>RngDiff_diff-op-ring_booleans (H117E36)</TT></A></H3>
<P>
<P>
<PRE>
&gt; F&lt;z&gt; := RationalDifferentialField(Rationals());
&gt; R&lt;D&gt; := DifferentialOperatorRing(F);
&gt; IsDifferentialOperatorRing(F);
false
&gt; IsDifferentialOperatorRing(R);
true
&gt; Derivation(R)(z);
1
&gt; HasProjectiveDerivation(R);
false
&gt; HasProjectiveDerivation(ChangeDerivation(R,z));
true
&gt; HasZeroDerivation(R);
false
</PRE>
<HR>
<H3><A NAME = "14229">Example <TT>RngDiff_diff-op-ring_booleans-LSR (H117E37)</TT></A></H3>
<P>
<P>
<PRE>
&gt; S&lt;t&gt; := DifferentialLaurentSeriesRing(Rationals());
&gt; V&lt;W&gt; := DifferentialOperatorRing(S);
&gt; IsDifferentialOperatorRing(V);
true
&gt; Derivation(V)(t);
t
&gt; HasProjectiveDerivation(V);
true
&gt; HasZeroDerivation(V);
false
&gt; P&lt;Q&gt;, mp := ChangeDerivation(V,3/t);
&gt; IsDifferentialOperatorRing(P);
true
&gt; HasProjectiveDerivation(P);
false
&gt; X&lt;y&gt; := BaseRing(P);
&gt; Q*y;
y*Q + 3
</PRE>
<HR>
<H4><A NAME = "14230">Precision</A></H4>



<H5><A NAME = "14231">RelativePrecisionOfDerivation(R) : RngDiffOp -&gt; RngElt</A></H5>
<BLOCKQUOTE>
The relative precision of the derivation of an operator ring over a 
Laurent series ring.
<P>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14232">Example <TT>RngDiff_diff-op-rings-relative-precision (H117E38)</TT></A></H3>
This example illustrates the relative precision of derivations
of differential operatorrings.
<P>
<P>
<P>
<PRE>
&gt; S&lt;t&gt;:=DifferentialLaurentSeriesRing(Rationals());
&gt; RS&lt;DS&gt; := DifferentialOperatorRing(S);
&gt; RelativePrecisionOfDerivation(RS);
Infinity
&gt; RV&lt;DV&gt; := ChangeDerivation(RS, t^2+O(t^8));
&gt; relprec := RelativePrecisionOfDerivation(RV);
&gt; relprec;         
6
&gt; RelativePrecisionOfDerivation(BaseRing(RV)) eq relprec;
true
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1308.htm">[Next]</A><A  HREF = "text1306.htm">[Prev]</A> <A  HREF = "text1308.htm">[Right]</A> <A  HREF = "text1306.htm">[Left]</A> <A  HREF = "text1297.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>