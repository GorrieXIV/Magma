<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Overview</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text686.htm">[Next]</A><A  HREF = "text684.htm">[Prev]</A> <A  HREF = "text686.htm">[Right]</A> [____] <A  HREF = "text684.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7896">Overview</A></H3>

<P>
<P>
In this chapter we provide algorithms for computing with a group
G given by a finite set S = { g<sub>1</sub>, ..., g<sub>r</sub> } of
invertible n x n matrices over an infinite field K. The
algorithms are based on special techniques developed for computing
in this class of groups
(<A  HREF = "text683.htm#bib_Draft">[DF08]</A>, <A  HREF = "text683.htm#bib_Zero">[DF09]</A>, <A  HREF = "text683.htm#bib_Positive">[DFO09]</A>, <A  HREF = "text683.htm#bib_DEF_Survey">[DEF11]</A>, <A  HREF = "text683.htm#bib_Tits">[DFO11]</A>, <A  HREF = "text683.htm#bib_Rank">[DFO13a]</A>, <A  HREF = "text683.htm#bib_Recog">[DFO13b]</A>), which rely on
properties of finitely generated linear groups.
<P>
The group G is defined over the subring R of K generated by
the entries of the matrices g<sub>i</sub>, (g<sub>i</sub>)<sup> - 1</sup> , 1 &le;i &le;r.
If &rho; is an ideal of R, then it induces a congruence
homomorphism from GL(n, R) onto GL(n, R/&rho;), which replaces
every entry of an element in S by its image in R/&rho;. Our
techniques depend on the construction of a congruence homomorphism
with the property that all torsion elements of its kernel
G<sub>&rho;</sub> (called a congruence subgroup) are unipotent. The
existence of a normal subgroup of finite index in G with such a
property was proved by Selberg and Wehrfritz. One advantage of the
congruence homomorphism techniques is that they replace the ground
domain by a domain that is more convenient for computing. In
particular, if the ideal &rho; is maximal, then we get a
reduction to a finite field R/&rho;. For more details on the
method see <A  HREF = "text683.htm#bib_Draft">[DF08, Section 3]</A>.
<P>
In this chapter we provide four sets of functions based on the
above techniques.
<P>
(a) Functions which test finiteness of matrix groups over a wide
range of infinite domains. These functions are implementations
of algorithms developed in <A  HREF = "text683.htm#bib_Zero">[DF09]</A>, <A  HREF = "text683.htm#bib_Positive">[DFO09]</A>, <A  HREF = "text683.htm#bib_Recog">[DFO13b]</A>. Together
with other currently available algorithms for deciding finiteness,
they enable testing finiteness of a finitely generated linear
group over an arbitrary field (subject to special representation
of input data). Additionally, if a group is found to be finite,
then we can construct an isomorphic copy over a finite field, and
use that for further structural investigation of the group.
<P>
(b) Functions for testing various properties of infinite matrix
groups.  These functions test whether G is soluble-by-finite or
soluble, nilpotent-by-finite or nilpotent, abelian-by-finite, or
central-by-finite. In effect, they provide access to the first
publicly available implementations of algorithms to decide the
"Tits alternative" for a linear group. If G is
soluble-by-finite we can test whether it is completely reducible.
These functions are implementations of algorithms developed in
<A  HREF = "text683.htm#bib_Tits">[DFO11]</A>.
<P>
(c) Functions to decide whether a soluble-by finite group G 
defined over Q or a number field has finite rank, to determine 
its Hirsch number, and to decide if a subgroup of G has finite index.
These functions are implementations of algorithms developed in
<A  HREF = "text683.htm#bib_Rank">[DFO13a]</A>.
<P>
(d) Functions for testing nilpotency and computing with nilpotent
matrix groups. These functions are implementation of algorithms
developed in <A  HREF = "text683.htm#bib_Draft">[DF08]</A>, which in turn are based on 
algorithms in <A  HREF = "text683.htm#bib_Large">[DF06]</A> for computing with
nilpotent matrix groups over finite fields. 
The functions may also be used for investigating the
structure of nilpotent matrix groups. In particular, special
algorithms have been developed for deciding finiteness 
of nilpotent matrix groups.
Functions are also available to decide irreducibility and primitivity for
finite nilpotent matrix groups over number fields and function fields
in zero characteristic; these algorithms, developed and
implemented by Tobias Rossmann, are described in <A  HREF = "text683.htm#bib_Ros10a">[Ros10]</A>, <A  HREF = "text683.htm#bib_Ros10b">[Ros11]</A>.
<P>
Since G is finitely generated, it is defined over a finitely
generated subfield of K. Hence, the main fields to be considered
are finite degree extensions of F(x<sub>1</sub>, ..., x<sub>m</sub>), where the 
x<sub>1</sub>, ..., x<sub>m</sub>  are algebraically independent 
indeterminates, m &ge;0, and the coefficient field F is an 
number field or a finite field. 
<P>
For a recent survey of work in the area of computing with matrix
groups over infinite fields, we refer to <A  HREF = "text683.htm#bib_DEF_Survey">[DEF11]</A>.
<P>
Verbose output for these functions can be obtained with 
<TT>SetVerbose ("Infinite", 1);</TT>


<PRE></PRE> <A  HREF = "text686.htm">[Next]</A><A  HREF = "text684.htm">[Prev]</A> <A  HREF = "text686.htm">[Right]</A> [____] <A  HREF = "text684.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>