<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>A-infinity Algebra Structures on Group Cohomology</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text965.htm">[Next]</A><A  HREF = "text978.htm">[Prev]</A> <A  HREF = "text965.htm">[Right]</A> <A  HREF = "text978.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "11107">A-infinity Algebra Structures on Group Cohomology</A></H3>

<P>
<P>
<P>
As described in <A  HREF = "text965.htm#bib_keller2001">[Kel01]</A>, <A  HREF = "text965.htm#bib_keller2002">[Kel02]</A>, an A&infin;-algebra
structure can be induced on H<sup> * </sup>A for any differential graded
algebra A. Consider Ext<sup> * </sup><sub>R</sub>(S, S), for R a quiver
algebra quotient and S the direct sum of all simple R-modules.
Regarded as the homology of the endomorphism algebra of a projective
resolution of S, Keller further demonstrates how this additional
algebraic structure allows recovery of R from Ext<sup> * </sup><sub>R</sub>(S, S).
<P>
An A&infin;-algebra structure on a vector space V consists of
higher structural operations m<sub>1</sub>, ... defined as m<sub>i</sub>:V<sup> tensor i</sup>to V fulfilling the Stasheff axioms for all n:
<P>
&sum;<sub>i + j - 1=n, 0&le;k&le;n - j</sub>&#8723;
m<sub>i</sub>(a<sub>1</sub>, ..., a<sub>k - 1</sub>, m<sub>j</sub>(a<sub>k</sub>, ..., a<sub>k + j</sub>), a<sub>k + j + 1</sub>, ..., a<sub>n</sub>) = 0
<P>
<P>
An A&infin;-algebra homomorphism from an A&infin;-algebra A to an
A&infin;-algebra B is a family f<sub>i</sub> of maps A<sup> tensor i</sup>to B
such that the homomorphism axioms hold for all n:
<P>
&sum;<sub>i + j - 1=n, 0&le;k&le;n - j</sub>
&#8723; f<sub>i</sub>(a<sub>1</sub>, ..., a<sub>k - 1</sub>, m<sub>j</sub>(a<sub>k</sub>, ..., a<sub>k + j</sub>), a<sub>k + j + 1</sub>, ..., a<sub>n</sub>)
= 
&sum;<sub>i<sub>1</sub> + ... + i<sub>r</sub>=n</sub>
&#8723;
m<sub>r</sub>(f<sub>i<sub>1</sub></sub>(a<sub>1</sub>, ..., a<sub>i<sub>1</sub></sub>), ..., f<sub>i<sub>r</sub></sub>(a<sub>n - i<sub>r</sub> + 1</sub>, ..., a<sub>n</sub>))
<P>
<P>
According to a theorem fundamental to the algebraic uses of
A&infin;-techniques, for a differential graded algebra A, there is
an A&infin;-structure on H<sup> * </sup>A and an A&infin;-algebra
homomorphism f:H<sup> * </sup>A to A such that f<sub>1</sub> is a quasiisomorphism of
differential graded algebras, and induced by the identity map on
H<sup> * </sup>A.
<P>
A blackbox method of calculation can be based on Kadeishvilis'
proof of this statement, using the homomorphism axioms to recursively
calculate any specific values that are needed, and choosing the m<sub>i</sub> and
f<sub>i</sub> in such a way as not to violate the axioms. The following package
implements this method for the special case of Ext<sup> * </sup><sub>kG</sub>(k, k) for
G a p-group, k a prime field of characteristic p and also the
one-dimensional unique simple kG-module. 



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text979.htm#11113">Homological Algebra Toolkit</A>
</UL>
<H5><A NAME = "11108">AInfinityRecord(G,n) : Grp, RngIntElt -&gt; Rec</A></H5>
<BLOCKQUOTE>
Constructs a record carrying all relevant information to calculate
A&infin;-operations on a group cohomology ring. Among the data
carried can be found the cohomology ring in <TT>R</TT>, the cohomology
ring quotient in <TT>S</TT>, the projective resolution used in
<TT>P</TT>, the simple module resolved in <TT>k</TT> and the basic
algebra in <TT>A</TT>.
</BLOCKQUOTE>
<H5><A NAME = "11109">MasseyProduct(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; RngElt</A></H5>
<H5>HighProduct(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; RngElt</H5>
<BLOCKQUOTE>
Given an A&infin; object Aoo corresponding to a group cohomology 
ring, this intrinsic calculates the structure map 
m<sub>i</sub>(t<sub>1</sub> tensor ... tensor t<sub>i</sub>), where the i give the length of 
terms, and t<sub>1</sub>, ..., t<sub>i</sub> are the elements of terms.
</BLOCKQUOTE>
<H5><A NAME = "11110">HighMap(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; MapChn</A></H5>
<BLOCKQUOTE>
Given an A&infin; object Aoo corresponding to a group cohomology 
ring, this intrinsic calculates the value of an A&infin;-quasiisomorphism 
f at the point t<sub>1</sub> tensor ... tensor t<sub>i</sub>, where the i gives 
the length of terms, and t<sub>1</sub>, ..., t<sub>i</sub> are the elements of terms.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "11111">Example <TT>AlgBas_A-infinity mod 2 (H90E24)</TT></A></H3>
<P>
The A&infin;-structures on the cohomology rings of cyclic p-groups
are well known examples in the literature: the A&infin;-structure on
H<sup> * </sup>(C<sub>n</sub>, F<sub>2</sub>) has one single higher structure nontrivial operation,
namely m<sub>n</sub>, which takes any n-tuple of odd coclasses to the even
coclass of appropriate degree.
<P>
In order to verify this for a specific example, we start by
constructing an A&infin; record that contains all relevant
information for the cohomology ring.
<P>
<P>
<P>
<PRE>
&gt; Aoo := AInfinityRecord(CyclicGroup(4),10);
&gt; S&lt;x,y&gt; := Aoo`S;
&gt; HighProduct(Aoo,[x,x,x,x]);
y
&gt; HighMap(Aoo,[x,x,x,x]);
Basic algebra chain map of degree -1
</PRE>
<HR>
<H3><A NAME = "11112">Example <TT>AlgBas_A-infinity mod 3 (H90E25)</TT></A></H3>
<P>
The code as written handles odd characteristics well, with the sign
choices featured in Kadeishvilis article <A  HREF = "text965.htm#bib_kadeishvili80">[Kad80]</A> embedded
in the code.
<P>
<P>
<P>
<PRE>
&gt; Aoo := AInfinityRecord(CyclicGroup(3),10);
&gt; S&lt;x,y&gt; := Aoo`S;
&gt; HighProduct(Aoo,[x,x,x]);
y
&gt; HighMap(Aoo,[x,x,x]);
Basic algebra chain map of degree -1
</PRE>
<HR>
<H4><A NAME = "11113">Homological Algebra Toolkit</A></H4>

<P>
<P>
<P>
For the computation of A&infin;-structures, several methods are used
that would invite a wider use in a generic homological algebra
toolkit.


<H5><A NAME = "11114">ActionMatrix(A,x) : AlgBas, Mtrx -&gt; ModMatFldElt</A></H5>
<BLOCKQUOTE>
Produces a matrix of the right action of the Basic algebra element
described by x in the Basic algebra A.
</BLOCKQUOTE>
<H5><A NAME = "11115">CohomologyRingQuotient(CR) : Rec -&gt; Rng,Map</A></H5>
<BLOCKQUOTE>
Computes the actual cohomology ring as a quotient ring of a
multivariate polynomial ring from a cohomology ring record.
</BLOCKQUOTE>
<H5><A NAME = "11116">LiftToChainmap(P,f,d) : ModCpx, Mtrx, RngIntElt -&gt; MapChn</A></H5>
<BLOCKQUOTE>
Lifts the function described by f to a chain map from P to P of degree
d.
</BLOCKQUOTE>
<H5><A NAME = "11117">NullHomotopy(f) : MapChn -&gt; MapChn</A></H5>
<BLOCKQUOTE>
Constructs a null homotopy of the null homotopic chain map f. If f is
not null homotopic, the function will throw an error message, since in
that case some of the equations encountered on the way are not
solvable.
</BLOCKQUOTE>
<H5><A NAME = "11118">IsNullHomotopy(f,H) : MapChn, MapChn -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Confirms that H is a null homotopy of f, in other words that
f=dH - Hd, with d the differential of the corresponding chain
complexes.
</BLOCKQUOTE>
<H5><A NAME = "11119">ChainmapToCohomology(f,CR) : MapChn, Rec -&gt; RngElt</A></H5>
<BLOCKQUOTE>
Takes a chain map f and returns the element in the cohomology quotient
ring to which the chain map corresponds. 
</BLOCKQUOTE>
<H5><A NAME = "11120">CohomologyToChainmap(xi,CR,P) : RngElt, Rec, ModCpx -&gt; MapChn</A></H5>
<BLOCKQUOTE>
Takes an element xi of a cohomology quotient ring of the cohomology
ring record CR and a projective resolution corresponding to that
cohomology ring, and returns a chain map in the coclass represented by
xi.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "11121">Example <TT>AlgBas_Nullhomotopy (H90E26)</TT></A></H3>
To illustrate the code that generates null homotopies, we consider the
cohomology ring of a cyclic group, and pick out chain map
representatives for the degree 1 coclass. Although this squares to 
zero, the corresponding chainmaps do not compose to the zero chainmap. 
<P>
<P>
<P>
<PRE>
&gt; A := BasicAlgebra(CyclicGroup(4));
&gt; k := SimpleModule(A,1);
&gt; P := ProjectiveResolution(k,5);
&gt; R := CohomologyRing(k,5);
&gt; S&lt;x,y&gt; := CohomologyRingQuotient(R);
&gt; xi := CohomologyToChainmap(x,R,P);
&gt; x*x;
0
&gt; IsZero(xi*xi);
false
&gt; ModuleMaps(xi*xi);
[*
    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0]
    [0 0 0 0],


    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0]
    [0 0 0 0],


    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0]
    [0 0 0 0],


    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0]
    [0 0 0 0]
*]
&gt; H := NullHomotopy(xi*xi); 
&gt; ModuleMaps(H);
[*
    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0],


    [0 1 0 0]
    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0],


    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0],


    [0 1 0 0]
    [0 0 1 0]
    [0 0 0 1]
    [0 0 0 0],


    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0]
    [0 0 0 0]
*]
&gt; IsNullHomotopy(xi*xi,H);
true
</PRE>
<PRE></PRE> <A  HREF = "text965.htm">[Next]</A><A  HREF = "text978.htm">[Prev]</A> <A  HREF = "text965.htm">[Right]</A> <A  HREF = "text978.htm">[Left]</A> <A  HREF = "text966.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>