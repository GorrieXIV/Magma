<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Canonical Forms</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text954.htm">[Next]</A><A  HREF = "text952.htm">[Prev]</A> <A  HREF = "text954.htm">[Right]</A> <A  HREF = "text952.htm">[Left]</A> <A  HREF = "text942.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10757">Canonical Forms</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text953.htm#10758">Canonical Forms for Matrices over Euclidean Domains</A>
<LI> <A  HREF = "text953.htm#10764">Canonical Forms for Matrices over a Field</A>
</UL>
<H4><A NAME = "10758">Canonical Forms for Matrices over Euclidean Domains</A></H4>

<P>
<P>
The functions given here apply to matrices defined over Euclidean Domains.
See also the section on Reduction in the Lattices chapter for a description
of the function <TT>LLL</TT> and related functions.


<H5><A NAME = "10759">EchelonForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt</A></H5>
<BLOCKQUOTE>
The (row) echelon form of matrix a belonging to a submodule of the
module M<sub>n</sub>(S). This function returns two values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The (row) echelon form e of a; and
<DT>(b)</DT><DD>A matrix b such that b * a = e, i.e. b is a product of 
elementary matrices that transforms a into echelon form.</DL>
</BLOCKQUOTE>
<H5><A NAME = "10760">ElementaryDivisors(a) : AlgMatElt -&gt; [RngElt]</A></H5>
<BLOCKQUOTE>
The elementary divisors of the matrix a belonging to a submodule of the
module M<sub>n</sub>(S). The divisors are returned as a sequence
[e<sub>1</sub>, ..., e<sub>d</sub>], e<sub>i</sub> | e<sub>i + 1</sub> (i=1 , ..., d - 1)
of d elements of R (which may include ones), where d is the rank of a.
If R is a field, the result is always the sequence of r ones,
where r is the rank of a.
</BLOCKQUOTE>
<H5><A NAME = "10761">HermiteForm(X) : AlgMatElt -&gt; AlgMatElt, AlgMatElt</A></H5>

<PRE>    Al: MonStg                          Default: "LLL"</PRE>

<PRE>    Optimize: BoolElt                   Default: <TT>true</TT></PRE>

<PRE>    Integral: BoolElt                   Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
The row Hermite normal form of a matrix X belonging to the matrix
algebra M<sub>n</sub>(R).
The coefficient ring R must be an Euclidean domain.
This function returns two values: 
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The Hermite normal form H of X; and
<DT>(b)</DT><DD>A unimodular matrix T such that T.X = H, 
i.e., T is the product
of elementary matrices which transforms X into Hermite normal form.
<P>
<P>
</DL>
If R is the ring of integers Z and
the matrix T is requested (i.e., if an assignment statement is used
with two variables on the left side), then the LLL algorithm will
be used by default to improve T (using the kernel of X)
so that the size of its entries are very small.
If the parameter <TT>Optimize</TT> is set to <TT>false</TT>, then this will not
happen (which will be faster but the entries of T will not be as small).
If the parameter <TT>Integral</TT> is set to <TT>true</TT>, then the integral
(de Weger) LLL method will be used in the LLL step, instead of the
default floating point method.  The integral method will often be faster if
the rank of the kernel of X is very large (say 200 or more).
<P>
If R is the ring of integers Z and the parameter <TT>Al</TT> is set
to the string <TT>"Sort"</TT>, then the sorting-gcd algorithm will be used.
However, the new algorithm will practically always perform better than the
sorting-gcd algorithm.
</BLOCKQUOTE>
<H5><A NAME = "10762">SmithForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, AlgMatElt</A></H5>
<BLOCKQUOTE>
The Smith normal form for the matrix a belonging to a submodule
of the module M<sub>n</sub>(S), where S is a Euclidean Domain. This function 
returns three values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The Smith normal form s of a; and
<DT>(b)</DT><DD>Unimodular matrices b and c such that b * a * c = s, i.e.
b and c are matrices that transform a into Smith normal form.</DL>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10763">Example <TT>AlgMat_EchelonForm (H88E6)</TT></A></H3>
We illustrate some of these operations in the context of the 
algebra M<sub>4</sub>(K), where K is the field GF(8).
<P>
<P>
<PRE>
&gt; K&lt;w&gt; := FiniteField(8);
&gt; M := MatrixAlgebra(K, 4);
&gt; A := M ! [1, w, w^5, 0,  w^3, w^4, w, 1,  w^6, w^3, 1, w^4, 1, w, 1, w ];
&gt; A;
[  1   w w^5   0]
[w^3 w^4   w   1]
[w^6 w^3   1 w^4]
[  1   w   1   w]
&gt; EchelonForm(A);
[1 0 0 0]
[0 1 0 0]
[0 0 1 0]
[0 0 0 1]
</PRE>
<HR>
<H4><A NAME = "10764">Canonical Forms for Matrices over a Field</A></H4>

<P>
<P>
The functions in this group apply to elements of matrix algebras whose
coefficient rings are fields
which allow factorization of univariate polynomials over them.


<H5><A NAME = "10765">PrimaryRationalForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ &lt;RngUPolElt, RngIntElt ]</A></H5>
<BLOCKQUOTE>
The primary rational canonical form of a matrix a belonging
to M<sub>n</sub>(K),
where the coefficient ring K must be a field allowing factorization
of univariate polynomials over it.
Each block corresponds to a power of an irreducible polynomial.
This function returns three values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The primary rational canonical form p of a;
<DT>(b)</DT><DD>A non-singular matrix t such that t * a * t<sup> - 1</sup> = p;
<DT>(c)</DT><DD>A sequence of pairs corresponding to the blocks of p where each
	   pair consists of the irreducible polynomial and multiplicity
	   making up the block.</DL>
</BLOCKQUOTE>
<H5><A NAME = "10766">JordanForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ &lt;RngUPolElt, RngIntElt ]</A></H5>
<BLOCKQUOTE>
The (generalized) Jordan canonical form for the matrix a belonging to the
algebra M<sub>n</sub>(K),
where the coefficient ring K must be a field allowing factorization
of univariate polynomials over it.
This function returns three values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The (generalized) Jordan canonical form j of a;
<DT>(b)</DT><DD>A non-singular matrix t such that t * a * t<sup> - 1</sup>= j;
<DT>(c)</DT><DD>A sequence of pairs corresponding to the blocks of j where each
	   pair consists of the irreducible polynomial and multiplicity
	   making up the block.</DL>
</BLOCKQUOTE>
<H5><A NAME = "10767">RationalForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ RngUPolElt ]</A></H5>
<BLOCKQUOTE>
The rational canonical form of a matrix a belonging
to M<sub>n</sub>(K),
where the coefficient ring K must be a field allowing factorization
of univariate polynomials over it.
For each block before the last block, the polynomial
corresponding to that block divides the polynomial corresponding to the
next block.  This function returns three values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>The rational canonical form f of a;
<DT>(b)</DT><DD>A non-singular matrix t such that t * a * t<sup> - 1</sup> = f;
<DT>(c)</DT><DD>A sequence containing the polynomials corresponding to each block
	   (each non-last one dividing the next).</DL>
</BLOCKQUOTE>
<H5><A NAME = "10768">PrimaryInvariantFactors(a) : AlgMatElt -&gt; [ &lt;RngUPolElt, RngIntElt ]</A></H5>
<BLOCKQUOTE>
The primary invariant factors of the matrix a.  This is the same as the third
return value of <TT>PrimaryRationalForm(a)</TT> or <TT>JordanForm(a)</TT>.
The coefficient ring must be a field allowing factorization of univariate
polynomials over it.
</BLOCKQUOTE>
<H5><A NAME = "10769">InvariantFactors(a) : AlgMatElt -&gt; [ AlgPolElt ]</A></H5>
<BLOCKQUOTE>
The invariant factors of the matrix a.  This is the same as the third
return value of <TT>RationalForm(a)</TT>.
The coefficient ring must be a field allowing factorization of univariate
polynomials over it.
</BLOCKQUOTE>
<H5><A NAME = "10770">IsSimilar(a, b) : AlgMatElt, AlgMatElt -&gt; BoolElt, AlgMatElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> iff the matrix a is similar to the matrix b.
If a is similar to b, a transformation matrix t is also
returned with t * a * t<sup> - 1</sup>=b.
The coefficient ring must be a field allowing factorization of univariate
polynomials over it.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10771">Example <TT>AlgMat_ElementaryDivisors (H88E7)</TT></A></H3>
We consider the algebra M<sub>5</sub>(P), where P is the polynomial
ring in indeterminate x over the field GF(5). We take the matrix having
x<sup>i</sup> + x<sup>j</sup> in its (i, j)-th position.
<P>
<P>
<PRE>
&gt; K := GaloisField(5);
&gt; P&lt;x&gt; := PolynomialAlgebra(K);
&gt; M := MatrixAlgebra(P, 5);
&gt; a := M ! [x^i + x^j: i, j in [1..5]];
&gt; a;
[      2*x   x^2 + x   x^3 + x   x^4 + x   x^5 + x]
[  x^2 + x     2*x^2 x^3 + x^2 x^4 + x^2 x^5 + x^2]
[  x^3 + x x^3 + x^2     2*x^3 x^4 + x^3 x^5 + x^3]
[  x^4 + x x^4 + x^2 x^4 + x^3     2*x^4 x^5 + x^4]
[  x^5 + x x^5 + x^2 x^5 + x^3 x^5 + x^4     2*x^5]
&gt; ElementaryDivisors(a);
[
    x,
    x^3 + 3*x^2 + x
]
&gt; Rank(a);
2
</PRE>
<HR>
<H3><A NAME = "10772">Example <TT>AlgMat_CanonicalForms (H88E8)</TT></A></H3>
We construct a 5 by 5 matrix over the finite field with 5 elements
and then calculate various canonical forms.  We verify the correctness
of the polynomial invariant factors corresponding to the rational form by
calculating the Smith form of the characteristic matrix of the original
matrix.
<P>
<P>
<PRE>
&gt; K := GF(5);
&gt; P&lt;x&gt; := PolynomialRing(K);    
&gt; A := MatrixAlgebra(K, 5);
&gt; a := A !
&gt; [
&gt;     0, 2, 4, 2, 0,
&gt;     2, 2, 2, 3, 3,
&gt;     3, 4, 4, 1, 3,
&gt;     0, 0, 0, 0, 1,
&gt;     0, 0, 0, 1, 0
&gt; ];
&gt; a;
[0 2 4 2 0]
[2 2 2 3 3]
[3 4 4 1 3]
[0 0 0 0 1]
[0 0 0 1 0]
&gt; PrimaryInvariantFactors(a);
[
    &lt;x + 1, 1&gt;,
    &lt;x + 1, 1&gt;,
    &lt;x + 4, 1&gt;,
    &lt;x + 4, 1&gt;,
    &lt;x + 4, 1&gt;
]
&gt; r, t, f := RationalForm(a);
&gt; r;
[1 0 0 0 0]
[0 0 1 0 0]
[0 1 0 0 0]
[0 0 0 0 1]
[0 0 0 1 0]
&gt; t;
[1 3 0 2 1]
[2 1 2 2 0]
[3 4 3 4 1]
[1 0 0 0 0]
[0 2 4 2 0]
&gt; f;
[
    x + 4,
    x^2 + 4,
    x^2 + 4
]
&gt; PA := MatrixAlgebra(P, 5);
&gt; ax := PA ! x - PA ! a;
&gt; ax;
[    x     3     1     3     0]
[    3 x + 3     3     2     2]
[    2     1 x + 1     4     2]
[    0     0     0     x     4]
[    0     0     0     4     x]
&gt; SmithForm(ax);
[      1       0       0       0       0]
[      0       1       0       0       0]
[      0       0   x + 4       0       0]
[      0       0       0 x^2 + 4       0]
[      0       0       0       0 x^2 + 4]
&gt; ElementaryDivisors(ax);
[
    1,
    1,
    x + 4,
    x^2 + 4,
    x^2 + 4
]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text954.htm">[Next]</A><A  HREF = "text952.htm">[Prev]</A> <A  HREF = "text954.htm">[Right]</A> <A  HREF = "text952.htm">[Left]</A> <A  HREF = "text942.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>