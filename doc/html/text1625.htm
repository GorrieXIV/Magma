<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1626.htm">[Next]</A><A  HREF = "text1624.htm">[Prev]</A> <A  HREF = "text1626.htm">[Right]</A> <A  HREF = "text1624.htm">[Left]</A> <A  HREF = "text1623.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17962">Creation Functions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1625.htm#17963">Ambient Spaces</A>
<LI> <A  HREF = "text1625.htm#17967">Elements</A>
<LI> <A  HREF = "text1625.htm#17971">Subspaces</A>
</UL>
<H4><A NAME = "17963">Ambient Spaces</A></H4>

<P>
<P>
<P>
An ambient supersingular divisors module is specified by giving 
an integer N (the level) and a prime p (the characteristic).


<H5><A NAME = "17964">SupersingularModule(p,N : parameters) : RngIntElt, RngInt -&gt; ModSS</A></H5>

<PRE>    Brandt: BoolElt                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
The module M of supersingular points on X<sub>0</sub>(N) over 
/line(F)<sub>p</sub>.  Equivalently, this is the free abelian
group on the supersingular elliptic curves in characteristic p
enhanced with level N structure.   We require that N and p
are coprime.
</BLOCKQUOTE>
<H5><A NAME = "17965">SupersingularModule(p) : RngIntElt -&gt; ModForm</A></H5>
<BLOCKQUOTE>
The Hecke module M of divisors of degree 0 on the supersingular 
points on X<sub>0</sub>(1) over  /line(F)<sub>p</sub>.  Equivalently, this is
the free abelian group on the supersingular j-invariants 
in characteristic p.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17966">Example <TT>ModSS_Creation-Spaces (H141E1)</TT></A></H3>
<P>
<P>
<PRE>
&gt; SupersingularModule(11);
Supersingular module associated to X_0(1)/GF(11) of dimension 2
&gt; SupersingularModule(11,3);
Supersingular module associated to X_0(3)/GF(11) of dimension 4
&gt; SupersingularModule(3,11);
Supersingular module associated to X_0(11)/GF(3) of dimension 2
</PRE>
The optional parameter <TT>Brandt</TT> forces computation of the
supersingular module using quaternion arithmetic, even if this will 
be slower.  (It's not clear why anyone would want to do use this
parameter except to compute the same thing using two different 
algorithms.)
<P>
<P>
<PRE>
&gt; SupersingularModule(97);
Supersingular module associated to X_0(1)/GF(97) of dimension 8
&gt; SupersingularModule(97 : Brandt := true);
Supersingular module associated to X_0(1)/GF(97) of dimension 8
</PRE>
<HR>
<H4><A NAME = "17967">Elements</A></H4>



<H5><A NAME = "17968">M . i : ModSS, RngIntElt -&gt; ModSSElt</A></H5>
<BLOCKQUOTE>
The ith basis element of the module M.
</BLOCKQUOTE>
<H5><A NAME = "17969">M ! x : ModSS, . -&gt; ModSSElt</A></H5>
<BLOCKQUOTE>
The coercion of x into the module M. 
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17970">Example <TT>ModSS_Creation-Elements (H141E2)</TT></A></H3>
First we create the supersingular module attached
to p=11, N=3.  This is the free abelian group
generated by the supersingular points on X<sub>0</sub>(3) 
in characteristic 11, equipped with the structure
of module over the Hecke algebra.
<P>
<P>
<PRE>
&gt; X := SupersingularModule(11,3);
&gt; P := X.1;
&gt; P;
(5, 5)
&gt; Eltseq(P);
[ 1, 0, 0, 0 ]
&gt; X![ 1, 0, 0, 0 ];
(5, 5)
</PRE>
Note that the module associated to p=3, N=11 is computed
using Brandt matrices (since X<sub>0</sub>(11) has positive genus),
so elements are printed in a less informative way.
<P>
<P>
<PRE>
&gt; Z := SupersingularModule(3,11); Z;
Supersingular module associated to X_0(11)/GF(3) of dimension 2
&gt; P := Z.1;
&gt; P;
[E1]
&gt; Eltseq(P);
[ 1, 0 ]
&gt; Z![1,0];
[E1]
</PRE>
<HR>
<H4><A NAME = "17971">Subspaces</A></H4>



<H5><A NAME = "17972">CuspidalSubspace(M) : ModSS -&gt; ModSS</A></H5>
<BLOCKQUOTE>
The cuspidal submodule X of M.  Thus X is the submodule
of divisors of degree 0 on the supersingular points.
It is "cuspidal" in the sense that X tensor Q is isomorphic
as a Hecke module to the space S_2(&Gamma;_0(Np);Q)^p-new
of p-new cuspforms
with Fourier coefficients in Q.
Explicitly, the cuspidal subspace is the subspace of elements such
that the sum of the coefficients is 0 (i.e., the subspace of 
divisors of degree 0).
</BLOCKQUOTE>
<H5><A NAME = "17973">EisensteinSubspace(M) : ModSS -&gt; ModSS</A></H5>
<BLOCKQUOTE>
The Eisenstein submodule of M, i.e., the
orthogonal complement of the cuspidal subspace
of M
with respect to the monodromy pairing.
</BLOCKQUOTE>
<H5><A NAME = "17974">OrthogonalComplement(M) : ModSS -&gt; ModSS</A></H5>
<BLOCKQUOTE>
The orthogonal complement of the module M in the ambient space
with respect to the monodromy pairing.
</BLOCKQUOTE>
<H5><A NAME = "17975">Kernel(I, M) : [Tup], ModSS -&gt; ModSS</A></H5>
<BLOCKQUOTE>
The kernel of I on the module M.  This is the subspace of M obtained by
intersecting the kernels of the operators f<sub>n</sub>(T<sub>p<sub>n</sub></sub>), where I is
a sequence [&lt; p<sub>1</sub>, f<sub>1</sub>(x) &gt;, ..., &lt; p<sub>n</sub>, f<sub>n</sub>(x) &gt;] of pairs consisting of a prime number and a
polynomial.
</BLOCKQUOTE>
<H5><A NAME = "17976">Decomposition(M, n) : ModSS, RngIntElt -&gt; [ModSS]</A></H5>
<BLOCKQUOTE>
Decomposition of the module M with respect to the Hecke operators
T<sub>1</sub>, T<sub>2</sub>, ..., T<sub>n</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "17977">Example <TT>ModSS_Creation-Subspaces (H141E3)</TT></A></H3>
We compute bases for the cuspidal and eisenstein
subspaces when p=11 and N=1.  
<P>
<P>
<PRE>
&gt; M := SupersingularModule(11); Basis(M);
[
    (1, 1),
    (0, 0)
]
&gt; S := CuspidalSubspace(M);
&gt; E := EisensteinSubspace(M);
&gt; Basis(S);
[
    (1, 1) - (0, 0)
]
&gt; Basis(E);
[
    3*(1, 1) + 2*(0, 0)
]
</PRE>
Next we compute the orthogonal complement of each subspace.
<P>
<P>
<PRE>
&gt; Basis(OrthogonalComplement(E));
[
    (1, 1) - (0, 0)
]
&gt; Basis(OrthogonalComplement(S));
[
    3*(1, 1) + 2*(0, 0)
]
&gt; S eq OrthogonalComplement(E);
true
</PRE>
Note that the Hecke operator T<sub>2</sub> acts as -2 on the
cuspidal subspace.  Using the <TT>Kernel</TT> command, we 
compute the subspace of M on which T<sub>2</sub> acts as -2, 
and recover the cuspidal subspace.
<P>
<P>
<PRE>
&gt; R&lt;x&gt; := PolynomialRing(Integers());
&gt; I := [&lt;2, x + 2&gt;];
&gt; K := Kernel(I,M);
&gt; Basis(K);
[
    (1, 1) - (0, 0)
]
</PRE>
We can also compute the decomposition of M into
submodules for the action of the first few Hecke operators
(typically a few Hecke operators are enough to give a complete
decomposition with respect to all Hecke operators).
<P>
<P>
<PRE>
&gt; Decomposition(M,5);
[
    Supersingular module associated to X_0(1)/GF(11) of dimension 1,
    Supersingular module associated to X_0(1)/GF(11) of dimension 1
]
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1626.htm">[Next]</A><A  HREF = "text1624.htm">[Prev]</A> <A  HREF = "text1626.htm">[Right]</A> <A  HREF = "text1624.htm">[Left]</A> <A  HREF = "text1623.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>