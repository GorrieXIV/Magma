<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Construction of Matrix Algebras and their Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text945.htm">[Next]</A><A  HREF = "text943.htm">[Prev]</A> <A  HREF = "text945.htm">[Right]</A> <A  HREF = "text943.htm">[Left]</A> <A  HREF = "text942.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "10618">Construction of Matrix Algebras and their Elements</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text944.htm#10619">Construction of the Complete Matrix Algebra</A>
<LI> <A  HREF = "text944.htm#10621">Construction of a Matrix</A>
<LI> <A  HREF = "text944.htm#10633">Constructing a General Matrix Algebra</A>
<LI> <A  HREF = "text944.htm#10638">The Invariants of a Matrix Algebra</A>
</UL>
<H4><A NAME = "10619">Construction of the Complete Matrix Algebra</A></H4>



<H5><A NAME = "10620">MatrixAlgebra(S, n) : Rng, RngIntElt -&gt; AlgMat</A></H5>
<H5>MatrixRing(S, n) : Rng, RngIntElt -&gt; AlgMat</H5>
<BLOCKQUOTE>
Given a positive integer n and a ring S, create the complete matrix algebra 
M<sub>n</sub>(S), consisting of all n x n matrices with coefficients in the 
ring S.
</BLOCKQUOTE>
<H4><A NAME = "10621">Construction of a Matrix</A></H4>



<H5><A NAME = "10622">elt&lt; R | L &gt; : AlgMat, RngElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Given a matrix algebra defined as a subalgebra of M<sub>n</sub>(S), create the 
element of R defined by the list L of n<sup>2</sup> elements from S.
</BLOCKQUOTE>
<H5><A NAME = "10623">R ! Q : AlgMat, [ RngElt ] -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Given a matrix algebra R defined as a subalgebra of M<sub>n</sub>(S) and a 
sequence Q=[a<sub>11</sub>, ..., a<sub>1n</sub>, a<sub>21</sub>, ..., a<sub>2n</sub>, ...,
a<sub>n1</sub>, ..., a<sub>nn</sub>] of n<sup>2</sup> elements of S, 
return the matrix
<PRE>
   [ a_11 a_12 ... a_1n ]
   [ a_21 a_22 ... a_2n ]
   [         ...        ]
   [ a_n1 a_n2 ... a_nn ]
</PRE>
as an element of R. Note that the algebra R must exist before an attempt is 
made to create matrices.
</BLOCKQUOTE>
<H5><A NAME = "10624">CambridgeMatrix(t, K, n, Q) : RngIntElt, FldFin, RngIntElt, [ ] -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
This function creates a n by n matrix over the finite field K of
cardinality q specified in a "Cambridge" format in the general matrix
algebra of degree n over K.  The parameter t specifies the type of
the format.  If t is 1, then q is assumed to be less than 10 and the
sequence Q must consist of n strings which give the n rows---each string
must have length n and contain the entries of that row (each entry is a
digit in the range [0, q - 1]).
If t is 3 then Q must consist of n<sup>2</sup> integers in the range [0, q - 1]
which give the entries in row-major order.  In either format, if q=p<sup>e</sup>,
where p is prime and e&gt;1, then an entry x is written as a vector
using the base-p representation of length e of x and the corresponding
element in K is used (see the Finite Fields chapter for details).
This function is principally provided for the reading in of large matrices.
</BLOCKQUOTE>
<H5><A NAME = "10625">CompanionMatrix(p) : RngUPolElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Given a monic polynomial p of degree n over a ring R, 
create the companion matrix C for p as an element of M<sub>n</sub>(R).
The minimal and characteristic polynomial of C is then p.
</BLOCKQUOTE>
<H5><A NAME = "10626">DiagonalMatrix(R, Q) : AlgMat, [ RngElt ] -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
If R is a subalgebra of M<sub>n</sub>(S) and Q is a sequence of n elements
of S, create the diagonal matrix diag( Q[1], Q[2], ..., Q[n] ).
</BLOCKQUOTE>
<H5><A NAME = "10627">MatrixUnit(R, i, j) : AlgMat, RngIntElt, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Create the matrix unit E(i, j) in the matrix algebra R, i.e. the matrix 
having the one of the coefficient ring of R in position (i, j) and 
zeros elsewhere.
</BLOCKQUOTE>
<H5><A NAME = "10628">Random(R) : AlgMat -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Create a random matrix of the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10629">ScalarMatrix(R, t) : AlgMat, RngElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
If R is a subalgebra of M<sub>n</sub>(S) and t is an element of the ring S,
create the scalar matrix t * I in R.
</BLOCKQUOTE>
<H5><A NAME = "10630">R ! 1 : AlgMat, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Create the identity matrix I<sub>n</sub> of the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10631">R ! 0 : AlgMat, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Create the zero matrix of the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10632">R ! t : AlgMat, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Create the scalar matrix t * I of the matrix algebra R.
</BLOCKQUOTE>
<H4><A NAME = "10633">Constructing a General Matrix Algebra</A></H4>



<H5><A NAME = "10634">MatrixAlgebra&lt;S, n | L&gt; : Rng, RngIntElt, List -&gt; AlgMat</A></H5>
<H5>MatrixRing&lt;S, n | L&gt; : Rng, RngIntElt, List -&gt; AlgMat</H5>
<BLOCKQUOTE>
Given a commutative ring S and a positive integer n, create the S-algebra 
R consisting of the n x n matrices over the ring S generated by the 
elements defined in the list L. Let F denote the algebra M<sub>n</sub>(S).
Each term L<sub>i</sub> of the list L must be an expression defining an object of
one of the following types: 
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A sequence of n<sup>2</sup> elements of S defining an element of F.
<DT>(b)</DT><DD>A set or sequence whose terms are sequences of type (a).
<DT>(c)</DT><DD>An element of F.
<DT>(d)</DT><DD>A set or sequence whose terms are elements of F.
<DT>(e)</DT><DD>The null list.
<P>
<P>
<P>
</DL>
The generators stored for R consist of the elements specified by terms 
L<sub>i</sub> together with the stored generators for subalgebras specified by terms 
of L<sub>i</sub>.  Repetitions of an element and occurrences of scalar matrices
are removed.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10635">Example <TT>AlgMat_Creation (H88E1)</TT></A></H3>
We demonstrate the use of the matrix algebra constructor by creating
an algebra of 3 x 3 lower-triangular matrices over the rational field.
<P>
<P>
<PRE>
&gt; Q := RationalField();
&gt; A := MatrixAlgebra&lt; Q, 3 | [ 1/3,0,0, 3/2,3,0, -1/2,4,3],
&gt;        [ 3,0,0, 1/2,-5,0, 8,-1/2,4] &gt;;
&gt; A:Maximal;
Matrix Algebra of degree 3 with 2 generators over Rational Field
Generators:
[ 1/3    0    0]
[ 3/2    3    0]
[-1/2    4    3]


[   3    0    0]
[ 1/2   -5    0]
[   8 -1/2    4]
&gt; Dimension(A);
6
</PRE>
<HR>
<H3><A NAME = "10636">Example <TT>AlgMat_Cambridge (H88E2)</TT></A></H3>
We construct a 4 by 4 matrix over the finite field with 5 elements using the
CambridgeMatrix function.
<P>
<P>
<PRE>
&gt; K := FiniteField(5);
&gt; x := CambridgeMatrix(1, K, 4, [ "1234", "0111", "4321", "1211" ]);
&gt; x;
[1 2 3 4]
[0 1 1 1]
[4 3 2 1]
[1 2 1 1]
</PRE>
<HR>
<H5><A NAME = "10637">Algebra(R) : AlgMatV -&gt; AlgGen, Map</A></H5>
<BLOCKQUOTE>
Given a matrix algebra R, construct a structure-constant algebra C 
isomorphic to R together with the isomorphism from R onto C.
</BLOCKQUOTE>
<H4><A NAME = "10638">The Invariants of a Matrix Algebra</A></H4>



<H5><A NAME = "10639">R . i : AlgMat, RngIntElt -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
The i-th defining generator for the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10640">BaseRing(R) : AlgMatV -&gt; Rng</A></H5>
<H5>CoefficientRing(R) : AlgMatV -&gt; Rng</H5>
<BLOCKQUOTE>
The coefficient ring S for the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10641">Degree(R) : AlgMatV -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
Given a matrix algebra R, return the degree n of R.
</BLOCKQUOTE>
<H5><A NAME = "10642">Generators(R) : AlgMat -&gt; { AlgMatElt }</A></H5>
<BLOCKQUOTE>
The set consisting of the defining generators for the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10643">Generic(R) : AlgMat -&gt; AlgMat</A></H5>
<BLOCKQUOTE>
The complete matrix algebra M<sub>n</sub>(S) in which the matrix algebra R is naturally embedded.
</BLOCKQUOTE>
<H5><A NAME = "10644">BaseModule(R) : AlgMatV -&gt; ModTup</A></H5>
<BLOCKQUOTE>
If R is a subring of the matrix algebra M<sub>n</sub>(S), then R is considered
to act on the free S-module of rank n, consisting of n-tuples over 
S. The function <TT>BaseModule</TT> returns this S-module.
</BLOCKQUOTE>
<H5><A NAME = "10645">NumberOfGenerators(R) : AlgMat -&gt; { AlgMatElt }</A></H5>
<H5>Ngens(R) : AlgMat -&gt; { AlgMatElt }</H5>
<BLOCKQUOTE>
The number of defining generators for the matrix algebra R.
</BLOCKQUOTE>
<H5><A NAME = "10646">Parent(a) : AlgMatElt -&gt; AlgMat</A></H5>
<BLOCKQUOTE>
Given an element a belonging to the matrix algebra R, return R, 
i.e. the parent structure for a.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "10647">Example <TT>AlgMat_Invariants (H88E3)</TT></A></H3>
We illustrate the use of these functions by applying them 
to the algebra of 3 x 3 lower-triangular matrices over the rational 
field constructed above.
<P>
<P>
<PRE>
&gt; Q := RationalField();
&gt; A := MatrixAlgebra&lt; Q, 3 | [ 1/3,0,0, 3/2,3,0, -1/2,4,3],
&gt;        [ 3,0,0, 1/2,-5,0, 8,-1/2,4] &gt;;
&gt; CoefficientRing(A);
Rational Field
&gt; Degree(A);
3
&gt; Ngens(A);
2
&gt; Generators(A);
{
    [ 1/3    0    0]
    [ 3/2    3    0]
    [-1/2    4    3],


    [   3    0    0]
    [ 1/2   -5    0]
    [   8 -1/2    4]
}
&gt; Generic(A);
Full Matrix Algebra of degree 3 over Rational Field
&gt; Dimension(A);
6
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text945.htm">[Next]</A><A  HREF = "text943.htm">[Prev]</A> <A  HREF = "text945.htm">[Right]</A> <A  HREF = "text943.htm">[Left]</A> <A  HREF = "text942.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>