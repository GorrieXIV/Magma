<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Nested Aggregates</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text85.htm">[Next]</A><A  HREF = "text82.htm">[Prev]</A> [_____] <A  HREF = "text82.htm">[Left]</A> <A  HREF = "text80.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "594">Nested Aggregates</A></H3>

<P>
<P>
Enumerated sets and sequences can be arbitrarily nested (that is, one may create
sets of sets, as well as sequences of sets etc.); tuples can also be nested
and may be freely mixed with sets and sequences (as long as the proper Cartesian
product parent can be created). Lists can be nested, and
one may create lists of sets or sequences or tuples.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text83.htm#595">Multi-indexing</A>
</UL>
<H4><A NAME = "595">Multi-indexing</A></H4>

<P>
<P>
<P>
Since sequences (and lists) can be nested, assignment functions and mutation
operators allow you to use <I>multi-indexing</I>, that is, one can
use a multi-index i<sub>1</sub>, i<sub>2</sub>, ..., i<sub>r</sub> rather than a single i
to reach r levels deep. Thus, for example, if S=[ [1, 2],  [2, 3] ],
instead of
<P>
<P>
<PRE>
&gt; S[2][2] := 4;
</PRE>
one may use the multi-index 2, 2 to obtain the same effect
of changing the 3 into a 4:
<P>
<P>
<PRE>
&gt; S[2,2] := 4;
</PRE>
All i<sub>j</sub> in the multi-index i<sub>1</sub>, i<sub>2</sub>, ..., i<sub>r</sub> have to be greater
than 0, and an error will also be flagged if any i<sub>j</sub> indexes
beyond the length at level j, that is, if i<sub>j</sub>&gt;#S[i<sub>1</sub>, ..., i<sub>j - 1</sub>],
(which means i<sub>1</sub>&gt;#S for j=1). There is one exception: the last index
i<sub>r</sub> is allowed to index beyond the current length of the sequence
at level r if the multi-index is used on the left-hand side of an
assignment, in which case any intermediate terms will be undefined.
This generalizes the possibility to assign beyond the length of a
`flat' sequence.
In the above example the following assignments are allowed:
<P>
<P>
<PRE>
&gt; S[2,5] := 7;
</PRE>
(and the result will be S=[ [1, 2],  [2, 3, undef, undef, 7] ])
<P>
<P>
<PRE>
&gt; S[4] := [7];
</PRE>
(and the result will be S=[ [1, 2],  [2, 3],  undef,  [7] ]).
But the following results in an error:
<P>
<P>
<PRE>
&gt; S[4,1] := 7;
</PRE>
Finally we point out that multi-indexing should not be confused with
the use of sequences as indexes to create subsequences. For example,
to create a subsequence of S = [5, 13, 17, 29] consisting of the
second and third terms, one may use
<P>
<P>
<PRE>
&gt; S := [ 5, 13, 17, 29 ];
&gt; T := S[ [2, 3] ];
</PRE>
To obtain the second term of this subsequence one could have done:
<P>
<P>
<PRE>
&gt; x := S[ [2, 3] ][2];
</PRE>
(so x now has the value S[3]=17), but it would have been more efficient
to index the indexing sequence, since it is rather expensive to build
the subsequence [ S[2], S[3] ] first, so:
<P>
<P>
<PRE>
&gt; x :=  S[ [2, 3][2] ];
</PRE>
has the same effect but is better (of course <TT>x := S[3]</TT> would be
even better in this simple example.) To add to the confusion, it is
possible to mix the above constructions for indexing, since one can
use lists of sequences and indices for indexing; continuing our example,
there is now a third way to do the same as above, using an indexing list
that first takes out the subsequence consisting of the second and third
terms and then extracts the second term of that:
<P>
<P>
<PRE>
&gt; x :=  S[ [2, 3], 2 ];
</PRE>
Similarly, the construction
<P>
<P>
<PRE>
&gt; X :=  S[ [2, 3], [2] ];
</PRE>
pulls out the subsequence consisting of the second term of the
subsequence of terms two and three of S, in other words, this
assigns the <I>sequence</I> consisting of the element 17, not
just the element itself!


<PRE></PRE> <A  HREF = "text85.htm">[Next]</A><A  HREF = "text82.htm">[Prev]</A> [_____] <A  HREF = "text82.htm">[Left]</A> <A  HREF = "text80.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>