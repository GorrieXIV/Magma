<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation of Lattices</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text309.htm">[Next]</A><A  HREF = "text307.htm">[Prev]</A> <A  HREF = "text309.htm">[Right]</A> <A  HREF = "text307.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "2833">Creation of Lattices</A></H3>

<P>
<P>
<P>
Lattices can be created in elementary ways whereby the basis matrix or
a generating matrix and possibly also the inner product matrix are specified.
Magma also provides functions for creating lattices from linear codes or
algebraic number fields
and for creating some special lattices.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text308.htm#2834">Elementary Creation of Lattices</A>
<LI> <A  HREF = "text308.htm#2844">Lattices from Linear Codes</A>
<LI> <A  HREF = "text308.htm#2848">Lattices from Algebraic Number  Fields</A>
<LI> <A  HREF = "text308.htm#2853">Special Lattices</A>
</UL>
<H4><A NAME = "2834">Elementary Creation of Lattices</A></H4>

<P>
<P>
This subsection describes the elementary ways of creating lattices by supplying
the basis or the Gram matrix.
<P>
<P>
<P>
There are two ways of specifying the basis of a lattice at creation.
First, a generating matrix can be specified whose rows need not be
independent; the matrix is reduced to a LLL-reduced form and zero rows are 
removed
to yield a basis matrix.  Secondly, a basis matrix (with independent rows)
can be specified; this matrix is used for the basis matrix without any
changes being made to it.
As well as the basis, a particular inner product can also be specified
by a symmetric positive definite matrix.
By default (when a particular inner product matrix is not given), the
inner product is taken to be the standard Euclidean product.
<P>
Instead of giving the basis one can also define a lattice by its Gram matrix
F which prescribes the inner products of the basis vectors.  The basis is
taken to be the standard basis and the inner product matrix is taken as F so
that the Gram matrix for the lattice is also F.


<H5><A NAME = "2835">Lattice(X, M) : ModMatRngElt, AlgMatElt -&gt; Lat</A></H5>
<H5>Lattice(n, Q, M) : RngIntElt, [ RngElt ], AlgMatElt -&gt; Lat</H5>
<H5>Lattice(S, M) : ModTupRng, AlgMatElt -&gt; Lat</H5>

<PRE>    CheckPositive: BoolElt              Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Construct the lattice L specified by the given generating matrix and
with inner product given by the n x n matrix M.
The generating matrix can be specified by an r x n matrix X,
an integer n with a sequence Q of ring elements of length rn (interpreted as a
r x n matrix), or an R-space S of dimension r and degree n.
In each case, the generating matrix need not have independent rows (though
it always will in the R-space case).  The matrix is reduced to a LLL-reduced form and
zero rows are removed to yield a basis matrix B of rank m (so m&le;r).
The lattice L is then constructed to have rank m, degree n, basis
matrix B and inner product matrix M.
By default Magma checks that M is positive definite but by setting
<TT>CheckPositive := false</TT> this check will be suppressed.
(Unpredictable behaviour will follow if unchecked incorrect input is given.)
</BLOCKQUOTE>
<H5><A NAME = "2836">Lattice(X) : ModMatRngElt -&gt; Lat</A></H5>
<H5>Lattice(n, Q) : RngIntElt, [ RngElt ] -&gt; Lat</H5>
<H5>Lattice(S) : ModTupRng -&gt; Lat</H5>
<BLOCKQUOTE>
Construct the lattice L specified by the given generating matrix and
with standard Euclidean inner product.
The generating matrix can be specified by an r x n matrix X,
an integer n with a sequence Q of ring elements of length rn (interpreted as a
r x n matrix), or an R-space S of dimension r and degree n.
In each case, the generating matrix need not have independent rows (though
it always will in the R-space case).  The matrix is reduced to a LLL-reduced form and
zero rows are removed to yield a basis matrix B of rank m (so m&le;r).
The lattice L is then constructed to have rank m, degree n, basis
matrix B and standard Euclidean inner product.
</BLOCKQUOTE>
<H5><A NAME = "2837">LatticeWithBasis(B, M) : ModMatRngElt, AlgMatElt -&gt; Lat</A></H5>
<H5>LatticeWithBasis(n, Q, M) : RngIntElt, [ RngElt ], AlgMatElt -&gt; Lat</H5>
<H5>LatticeWithBasis(S, M) : ModTupRng, AlgMatElt -&gt; Lat</H5>

<PRE>    CheckIndependent: BoolElt           Default: <TT>true</TT></PRE>

<PRE>    CheckPositive: BoolElt              Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Construct the lattice L with the specified m x n basis matrix and
with inner product given by the n x n matrix M.
The basis matrix B can be specified by an m x n matrix B,
an integer n with a sequence Q of ring elements of length mn (interpreted as an
m x n matrix B), or an R-space S of dimension m and degree n
(whose basis matrix is taken to be B).
The rows of B must be independent (i.e., form a basis).
The lattice L is then constructed to have rank m, degree n, basis
matrix B and inner product matrix M.  (Note that the basis matrix
B is <I>not</I> reduced to a LLL-reduced form as in the <TT>Lattice</TT>
function.)
By default Magma checks that the rows of the matrix B specifying the
basis are independent but by setting <TT>CheckIndependent := false</TT>
this check will be suppressed.
By default Magma also checks that M is positive definite but by setting
<TT>CheckPositive := false</TT> this check will be suppressed.
(Unpredictable behaviour will follow if unchecked incorrect input is given.)
</BLOCKQUOTE>
<H5><A NAME = "2838">LatticeWithBasis(B) : ModMatRngElt -&gt; Lat</A></H5>
<H5>LatticeWithBasis(n, Q) : RngIntElt, [ RngElt ] -&gt; Lat</H5>
<H5>LatticeWithBasis(S) : ModTupRng -&gt; Lat</H5>

<PRE>    CheckIndependent: BoolElt           Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Construct the lattice L with the specified m x n basis matrix and
with standard Euclidean inner product.
The basis matrix B can be specified by an m x n matrix B,
an integer n with a sequence Q of ring elements of length mn (interpreted as an
m x n matrix B), or an R-space S of dimension m and degree n
(whose basis matrix is taken to be B).
The rows of B must be independent (i.e., form a basis).
The lattice L is then constructed to have rank m, degree n, basis
matrix B and standard Euclidean product.  (Note that the basis matrix
B is <I>not</I> reduced to a LLL-reduced form as in the <TT>Lattice</TT>
function.)
By default Magma checks that the rows of the matrix B specifying the
basis are independent but by setting <TT>CheckIndependent := false</TT>
this check will be suppressed.
(Unpredictable behaviour will follow if unchecked incorrect input is given.)
</BLOCKQUOTE>
<H5><A NAME = "2839">LatticeWithGram(F) : AlgMatElt -&gt; Lat</A></H5>
<H5>LatticeWithGram(n, Q) : RngIntElt, [RngElt] -&gt; Lat</H5>

<PRE>    CheckPositive: BoolElt              Default: <TT>true</TT></PRE>
<BLOCKQUOTE>
Construct a lattice with the given Gram matrix. The Gram matrix F can be
specified as a symmetric n x n matrix F, 
or an integer n and a sequence Q of ring elements of length n<sup>2</sup> or
n + 1 choose 2. In the latter case, a sequence of length n<sup>2</sup>
is regarded as an n x n matrix and a sequence of length n + 1 choose 2
as a lower triangular matrix determining a symmetric matrix F.
<P>
This function constructs the lattice L of degree n having the standard 
basis and inner product matrix F, therefore having Gram matrix F as well.
By default Magma checks that F is positive definite but by setting
<TT>CheckPositive := false</TT> this check will be suppressed.
(Unpredictable behaviour will follow if unchecked incorrect input is given.)
</BLOCKQUOTE>
<H5><A NAME = "2840">StandardLattice(n) : RngIntElt -&gt; Lat</A></H5>
<BLOCKQUOTE>
Create the standard lattice Z<sup>n</sup> with standard Euclidean inner product.
</BLOCKQUOTE>
<H5><A NAME = "2841">CoordinateLattice(L) : Lat -&gt; Lat</A></H5>
<BLOCKQUOTE>
Constructs the lattice with the same Gram matrix as the lattice L, but with 
basis equal to the canonical basis of the free module of Rank(L)
over the base ring of L.  The identification of basis elements 
thus determines an isometry of lattices.
</BLOCKQUOTE>
<H5><A NAME = "2842">ScaledLattice(L,n) : Lat, RngIntElt -&gt; Lat</A></H5>
<H5>ScaledLattice(L,n) : Lat, FldRatElt -&gt; Lat</H5>
<BLOCKQUOTE>
Constructs the coordinate lattice with Gram matrix equal to 
that of the lattice L scaled by the integer or rational n. 
The identification of basis elements thus determines an 
similitude of lattices.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2843">Example <TT>Lat_LatticeCreate (H30E1)</TT></A></H3>
We create the lattice in Z<sup>3</sup> of degree 3 and rank 2 generated by the
vectors (1, 2, 3) and (3, 2, 1) in four different ways.  The
first two (identical) lattices are represented by LLL-reduced bases since 
the <TT>Lattice</TT> function is used to create them, while the latter two
(identical) lattices remain represented by the original basis since the
<TT>LatticeWithBasis</TT> function is used to create them.
<P>
<P>
<PRE>
&gt; B := RMatrixSpace(IntegerRing(), 2, 3) ! [1,2,3, 3,2,1];
&gt; B;
[1 2 3]
[3 2 1]
&gt; L1 := Lattice(B);
&gt; L1;
Lattice of rank 2 and degree 3
Basis:
( 2  0 -2)
( 1  2  3)
&gt; L2 := Lattice(3, [1,2,3, 3,2,1]);
&gt; L2 eq L1;
true
&gt; L3 := LatticeWithBasis(B);       
&gt; L3;
Lattice of rank 2 and degree 3
Basis:
(1 2 3)
(3 2 1)
&gt; L4 := LatticeWithBasis(3, [1,2,3, 3,2,1]);
&gt; L4 eq L3, L1 eq L3;
true true
</PRE>
We next create a 3 x 3 positive definite matrix M and create
the lattice L with basis the same as above but also with inner
product matrix M.  We note the Gram matrix of the lattice which
equals BMB<sup>tr</sup> where B is the basis matrix.
<P>
<P>
<PRE>
&gt; B := RMatrixSpace(IntegerRing(), 2, 3) ! [1,2,3, 3,2,1];
&gt; M := MatrixRing(IntegerRing(), 3) ! [3,-1,1, -1,3,1, 1,1,3];
&gt; M;
[ 3 -1  1]
[-1  3  1]
[ 1  1  3]
&gt; IsPositiveDefinite(M);
true
&gt; L := LatticeWithBasis(B, M);
&gt; L;
Lattice of rank 2 and degree 3
Basis:
(1 2 3)
(3 2 1)
Inner Product Matrix:
[ 3 -1  1]
[-1  3  1]
[ 1  1  3]
&gt; GramMatrix(L);
[56 40]
[40 40]
</PRE>
Finally, we create a lattice C with the same Gram matrix as the
last lattice, but with standard basis.  To do this we use the
<TT>LatticeWithGram</TT> function.  This lattice C is the
<I>coordinate</I> lattice of L: it has the same Gram matrix as L
but is not compatible with L since its inner product matrix is different to
that of L.
<P>
<P>
<PRE>
&gt; F := MatrixRing(IntegerRing(), 2) ! [56,40, 40,40];
&gt; C := LatticeWithGram(F);
&gt; C;
Standard Lattice of rank 2 and degree 2
Inner Product Matrix:
[56 40]
[40 40]
&gt; GramMatrix(C);
[56 40]
[40 40]
&gt; C eq CoordinateLattice(L);
true
&gt; GramMatrix(C) eq GramMatrix(L);
true
&gt; C eq L;

Runtime error in 'eq': Arguments are not compatible
</PRE>
<HR>
<H4><A NAME = "2844">Lattices from Linear Codes</A></H4>

<P>
<P>
This subsection presents some standard constructions (known as
constructions `A' and `B') to obtain lattices from linear codes.
In some cases the structural 
invariants of these lattices
(e.g., minimum and kissing number, hence the centre density) can be
deduced from invariants of the codes; in general one still gets
estimates for the invariants of the lattices.


<H5><A NAME = "2845">Lattice(C, "A") : Code -&gt; Lat</A></H5>
<BLOCKQUOTE>
Let C be a linear code of length n over a prime field K := GF(p).
Construct
the lattice L &sube;Z<sup>n</sup> which is the full preimage of
C under the natural epimorphism from Z<sup>n</sup> onto K<sup>n</sup>.
</BLOCKQUOTE>
<H5><A NAME = "2846">Lattice(C, "B") : Code -&gt; Lat</A></H5>
<BLOCKQUOTE>
Let C be a linear code of length n over a prime field K := GF(p) such
that all code words have coordinate sum 0.
Construct the lattice L &sube;Z<sup>n</sup>
which consists of all vectors reducing modulo p to a code word
in C and whose coordinate sum is 0 modulo p<sup>2</sup>.
The inner product matrix is set to the appropriate scalar matrix so that
the Gram matrix is integral and primitive (its entries are coprime).
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2847">Example <TT>Lat_Code (H30E2)</TT></A></H3>
The 16-dimensional Barnes-Wall lattice &Lambda;<sub>16</sub> can be constructed
from the first order Reed-Muller code of length 16 using construction `B'.
Note that the inner product matrix is the identity matrix divided by
2 so that the Gram matrix is integral and primitive.
<P>
<P>
<PRE>
&gt; C := ReedMullerCode(1, 4);
&gt; C: Minimal;
[16, 5, 8] Reed-Muller Code (r = 1, m = 4) over GF(2)
&gt; L := Lattice(C, "B");
&gt; L;
Lattice of rank 16 and degree 16
Basis:
(1 0 0 1 0 1 1 0 0 1 1 0 1 0 0 1)
(0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1)
(0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1)
(0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 2)
(0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1)
(0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 2)
(0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 2)
(0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2)
(0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1)
(0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 2)
(0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 2)
(0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 2)
(0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2)
(0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2)
(0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2)
(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4)
Inner Product denominator: 2
</PRE>
<HR>
<H4><A NAME = "2848">Lattices from Algebraic Number  Fields</A></H4>

<P>
<P>
Let K be an algebraic number field of degree n over Q. 
Then K has n embeddings into the complex numbers, denoted by 
&sigma;<sub>1</sub>, ..., &sigma;<sub>n</sub>.  By convention the first s of 
these are embeddings into the real numbers and the last 2t are 
pairs of complex embeddings such that &sigma;<sub>s + t + i</sub> = 
/line(&sigma;<sub>s + i</sub>) for 1 &le;i &le;t. The T<sub>2</sub>-norm 
K -&gt; R: &alpha; |-&gt; &sum;<sub>i=1</sub><sup>n</sup> |&sigma;<sub>i</sub>(&alpha;)|<sup>2</sup> 
defines a positive definite norm on K in which an order or ideal 
is a positive definite lattice. 
We restrict to the r real embeddings and the first s complex 
embeddings to obtain an embedding of a rank n order or ideal 
R<sup>s</sup> x C<sup>s</sup> = R<sup>n</sup>.  By rescaling the complex coordinates 
by Sqrt(2), we recover the T<sub>2</sub>-norm of the element as its 
Euclidean norm under the embedding in R<sup>n</sup>.  This embedding, 
given by 
<P>
&alpha; |-&gt; ( &sigma;<sub>1</sub>(&alpha;), ..., &sigma;<sub>s</sub>(&alpha;), 
      Sqrt(2) (Re)( &sigma;<sub>s + 1</sub>(&alpha;) ), 
      Sqrt(2) (Im)( &sigma;<sub>s + 1</sub>(&alpha;) ), ...,
      Sqrt(2) (Im)( &sigma;<sub>s + t</sub>(&alpha;) ) ),
<P>
is called the <I>Minkowski map</I> on K.


<H5><A NAME = "2849">MinkowskiLattice(O) : RngOrd -&gt; Lat, Map</A></H5>
<H5>Lattice(O) : RngOrd -&gt; Lat, Map</H5>
<BLOCKQUOTE>
Given an order O in a number field of degree n, create the 
lattice L in R<sup>n</sup> generated by the images of the basis of O 
under the Minkowski map, followed by the isomorphism 
O -&gt; L. 
</BLOCKQUOTE>
<H5><A NAME = "2850">MinkowskiLattice(I) : RngOrdIdl -&gt; Lat, Map</A></H5>
<H5>Lattice(I) : RngOrdIdl -&gt; Lat, Map</H5>
<BLOCKQUOTE>
Given an ideal I of an order O in a number field of degree n,
create the lattice in R<sup>n</sup> generated by the images of the basis 
of I under the Minkowski map, followed by the isomorphism 
O -&gt; L. 
</BLOCKQUOTE>
<H5><A NAME = "2851">MinkowskiSpace(K) : FldNum -&gt; KModTup, Map</A></H5>
<BLOCKQUOTE>
Construct the real inner product space V defined with respect to 
the inner product matrix of the T<sub>2</sub>-norm on the number field K,
followed by the Minkowski map K -&gt; V.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2852">Example <TT>Lat_OrderLattice (H30E3)</TT></A></H3>
In this example we create the lattice corresponding to the equation
order of the number field Q(root 3 of 15). For comparison we
apply the Minkowski map to the elements of the basis for the order.
<P>
<P>
<PRE>
&gt; P&lt;x&gt; := PolynomialRing(Integers());
&gt; R := EquationOrder(NumberField(x^3-15));
&gt; w := R![0,1,0];
&gt; L, f := MinkowskiLattice(R);
&gt; L;
Lattice of rank 3 and degree 3 over Real Field
Basis:
Lattice of rank 3 and degree 3 over Real field of precision 30
Basis:
(1.00000000000000000000000000000 1.41421356237309504&equiv;68872421 
    0.000000000000000000000000000000)
(2.46621207433047010149161132315 -1.74387528160321720079629694216 
    3.02048058980025565688335869988)
(6.08220199557340018489844499774 -4.30076627561630297914843739812 
    -7.44914570084621027635727295139)
&gt; B := Basis(R);
&gt; f(B[2]);
&gt; f(B[2]);
(2.46621207433047010149161132315 -1.74387528160321720079629694216 
    3.02048058980025565688335869988)
</PRE>
Similarly, we create the lattice defined by the ideal generated by 
w<sup>2</sup> + 1, and verify the that the T<sub>2</sub>-norm, given by <TT>Length</TT> 
on the number field, agrees with the norm of the lattice image.
<P>
<P>
<PRE>
&gt; I := ideal&lt; R | w^2+1 &gt;;
&gt; L, f := Lattice(I);
&gt; B := Basis(I);
&gt; [ Length(B[k]) : k in [1..3] ];
[ 113.9795433448711545671225095419565069230968018982624192080454
3346320196288153038584473344161989557225281060164140817511930289
049332599978630989750057117093892447723724, 
693.246605986720200554695334993213407259633012131529936960318255
6345313709169384387254042929336529027528589276741384648056766427
8812020993502245102110970371559009076524, 
4216.46589035691627937357288301497314034052453149249823527965295
1232760419192679099060699351691798691646069328322562756396547517
8203732351663613772502545069466948994156 ]
&gt; [ Norm(f(B[k])) : k in [1..3] ];
[ 113.979543344871154567122509542, 
693.246605986720200554695334993, 4216.46589035691627937357288302 
]
</PRE>
<HR>
<H4><A NAME = "2853">Special Lattices</A></H4>

<P>
<P>
This subsection presents functions to construct some special lattices,
namely root lattices, laminated lattices and Kappa-lattices.
<P>
A much wider variety of lattices can be found in a database provided by
G. Nebe and N.J.A. Sloane at the web-site <A  HREF = "text304.htm#bib_LatticeCatalogue">[NS01a]</A>.
These lattices can easily be made accessible to Magma by a conversion script
also available at this web-site.
The database currently contains (at least):
<DL COMPACT class='compact'>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The root lattices A<sub>n</sub> and their duals for 1 &le;n &le;24
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The root lattices D<sub>n</sub> and their duals for 1 &le;n &le;24
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The root lattices E<sub>n</sub> and their duals for 6 &le;n &le;8
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The laminated lattices &Lambda;<sub>n</sub> for 1 &le;n &le;24 including
    the 16-dimensional Barnes-Wall lattice &Lambda;<sub>16</sub> and the Leech lattice
&Lambda;<sub>24</sub>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The Kappa-lattices K<sub>n</sub> and their duals for 7 &le;n &le;13 including
    the Coxeter-Todd lattice K<sub>12</sub>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The perfect lattices up to dimension 7
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>The 3-dimensional Bravais lattices
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>Various interesting lattices in dimensions 20, 24, 28, 32, 40, 80, 105
    including, e.g., some of the densest known lattices in dimension 32.</DL>


<H5><A NAME = "2854">Lattice(X, n) : MonStgElt, RngIntElt -&gt; Lat</A></H5>
<BLOCKQUOTE>
Given a family name X as a string which is one of
<TT>"A"</TT>, <TT>"B"</TT>, <TT>"C"</TT>, <TT>"D"</TT>, <TT>"E"</TT>, <TT>"F"</TT>, <TT>"G"</TT>,
<TT>"Kappa"</TT> or <TT>"Lambda"</TT>,
together with an integer n, construct a lattice subject to the following
specifications:
<DL COMPACT class='compact'>
<DT><TT>A</TT>:</DT><DD>The root lattice A<sub>n</sub> which is the zero-sum lattice in Q<sup>n + 1</sup>.
<DT><TT>B</TT>:</DT><DD>n &ge;2: The root lattice B<sub>n</sub> which is the standard lattice of
    dimension n.
<DT><TT>C</TT>:</DT><DD>n &ge;3: The root lattice C<sub>n</sub> which is the even sublattice of
    Z<sup>n</sup> and is equal to D<sub>n</sub>.
<DT><TT>D</TT>:</DT><DD>n &ge;3: The root lattice D<sub>n</sub> which is the even sublattice of
    Z<sup>n</sup>, also called the checkerboard lattice.
<DT><TT>E</TT>:</DT><DD>6 &le;n &le;8: The root lattice E<sub>n</sub>, also called Gosset lattice.
<DT><TT>F</TT>:</DT><DD>n = 4: The root lattice F<sub>4</sub> which is equal to D<sub>4</sub>.
<DT><TT>G</TT>:</DT><DD>n = 2: The root lattice G<sub>2</sub> which is equal to A<sub>2</sub>.
<DT><TT>Kappa</TT>:</DT><DD>1 &le;n &le;13: The Kappa-lattice K<sub>n</sub>.
    For n = 12 this is the Coxeter-Todd lattice.
<DT><TT>Lambda</TT>:</DT><DD>1 &le;n &le;31: The laminated lattice &Lambda;<sub>n</sub>.
    For n = 16 this is the Barnes-Wall lattice, for n = 24 the
    Leech lattice.
<P>
</DL>
To avoid irrational entries, each lattice is presented with inner product matrix
taken to be the identity matrix divided by a suitable scale factor so that the
Gram matrix is integral and primitive (its entries are coprime).
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text309.htm">[Next]</A><A  HREF = "text307.htm">[Prev]</A> <A  HREF = "text309.htm">[Right]</A> <A  HREF = "text307.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>