<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Further Examples</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1655.htm">[Next]</A><A  HREF = "text1664.htm">[Prev]</A> <A  HREF = "text1655.htm">[Right]</A> <A  HREF = "text1664.htm">[Left]</A> <A  HREF = "text1656.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "18601">Further Examples</A></H3>



<HR>
<H3><A NAME = "18602">Example <TT>ModFrmHil_integral-hecke (H143E7)</TT></A></H3>
<P>
<P>
<PRE>
&gt; R&lt;x&gt; := PolynomialRing(IntegerRing());
&gt; F := NumberField(x^2-15);  OF := Integers(F);
&gt; M := HilbertCuspForms(F, 1*OF, [2,4]);
&gt; M;
Cuspidal space of Hilbert modular forms over Number Field with defining polynomial 
x^2 - 15 over the Rational Field
   Level = Ideal of norm 1 generated by ( [1, 0] )
   Weight = [ 2, 4 ]
&gt; Dimension(M);
2
&gt; T2 := HeckeOperator(M, Factorization(2*OF)[1][1] );
&gt; BaseRing(T2);
Number Field with defining polynomial $.1^2 + 1 over F
</PRE>
So the basis used to compute M is over this extension of F. 
We now replace this with a F-rational basis (this is implemented 
for new spaces, in particular spaces of level 1).
<P>
<P>
<PRE>
&gt; IsNew(M);
true
&gt; SetRationalBasis(M);
&gt; for P in PrimesUpTo(7,F) do  
&gt;    Norm(P), HeckeOperator(M,P); 
&gt; end for; 
2
[  0   1]
[-20   0]
3
[0 0]
[0 0]
5
[  0   4]
[-80   0]
7
[0 0]
[0 0]
7
[0 0]
[0 0]
&gt; #NewformDecomposition(M);
1
</PRE>
In general the Hecke matrices would be over F, however for this space
there is a basis where they have entries in Z.  The program was able 
to discover this because the basis is chosen by putting one of the 
matrices in rational canonical form.
<HR>
<H3><A NAME = "18603">Example <TT>ModFrmHil_classical-example (H143E8)</TT></A></H3>
It is possible to use this package to compute classical modular forms
(although this will usually be much slower).  
Here we compute the newform of level 14 three times independently.
First we wish to use Algorithm 1, so we choose the quaternion algebra 
over Q ramified at 2 and infinity.
(Note: Algorithm I is not implemented over <TT>Rationals()</TT>, so
we must work over a number field isomorphic to Q instead!)  
<P>
<P>
<PRE>
&gt; QQ := RationalsAsNumberField();
&gt; ZZ := Integers(QQ);
&gt; M := HilbertCuspForms(QQ, 14*ZZ);
&gt; A := QuaternionAlgebra(2*ZZ, InfinitePlaces(QQ) : Optimized);
&gt; M14 := NewSubspace(M : QuaternionOrder:=MaximalOrder(A) );
&gt; Dimension(M14);
1
&gt; f := Eigenform(NewformDecomposition(M14)[1]);
&gt; primes := PrimesUpTo(50);
&gt; time eigenvalues1:= [ &lt;p, HeckeEigenvalue(f,p*ZZ)&gt; : p in primes ];
Time: 0.220
&gt; eigenvalues1;
[ &lt;2, -1&gt;, &lt;3, -2&gt;, &lt;5, 0&gt;, &lt;7, 1&gt;, &lt;11, 0&gt;, &lt;13, -4&gt;, &lt;17, 6&gt;, &lt;19, 2&gt;, &lt;23, 0&gt;, 
  &lt;29, -6&gt;, &lt;31, -4&gt;, &lt;37, 2&gt;, &lt;41, 6&gt;, &lt;43, 8&gt;, &lt;47, -12&gt; ]
</PRE>
Now we use Algorithm 2, choosing the indefinite quaternion algebra over Q 
ramified at 2 and 7.
<P>
<P>
<PRE>
&gt; Q := Rationals();
&gt; M := HilbertCuspForms(Q, 14);
&gt; A := QuaternionAlgebra(14 : Al:="Smallest" );
&gt; A.1^2, A.2^2;
7, -2
&gt; M14 := NewSubspace(M : QuaternionOrder:=MaximalOrder(A) );
&gt; IsDefinite(M14); // Not definite means Algorithm 2
false
&gt; Dimension(M14);
1
&gt; f := Eigenform(NewformDecomposition(M14)[1]);
&gt; time eigenvalues2 := [ &lt;p, HeckeEigenvalue(f,p)&gt; : p in primes | 
&gt;                                                          GCD(p,14) eq 1];
Time: 2.750
&gt; eigenvalues2;
[ &lt;3, -2&gt;, &lt;5, 0&gt;, &lt;11, 0&gt;, &lt;13, -4&gt;, &lt;17, 6&gt;, &lt;19, 2&gt;, &lt;23, 0&gt;, 
  &lt;29, -6&gt;, &lt;31, -4&gt;, &lt;37, 2&gt;, &lt;41, 6&gt;, &lt;43, 8&gt;, &lt;47, -12&gt; ]
</PRE>
Finally we check both results agree with the standard modular forms package.
<P>
<P>
<PRE>
&gt; M14 := CuspForms(14);
&gt; time eigenvalues := [ &lt;p, HeckeOperator(M14,p)[1,1]&gt; : p in primes ];
Time: 0.160
&gt; assert eigenvalues1 eq eigenvalues;
&gt; assert eigenvalues2 subset eigenvalues;
</PRE>
<PRE></PRE> <A  HREF = "text1655.htm">[Next]</A><A  HREF = "text1664.htm">[Prev]</A> <A  HREF = "text1655.htm">[Right]</A> <A  HREF = "text1664.htm">[Left]</A> <A  HREF = "text1656.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>