<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Jacobi Motive Functionality</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1510.htm">[Next]</A><A  HREF = "text1508.htm">[Prev]</A> <A  HREF = "text1510.htm">[Right]</A> <A  HREF = "text1508.htm">[Left]</A> <A  HREF = "text1504.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "17141">Jacobi Motive Functionality</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1509.htm#17142">Creation Functions</A>
<LI> <A  HREF = "text1509.htm#17147">Operations</A>
<LI> <A  HREF = "text1509.htm#17152">Attributes</A>
<LI> <A  HREF = "text1509.htm#17157">L-function</A>
</UL>
<H4><A NAME = "17142">Creation Functions</A></H4>



<H5><A NAME = "17143">JacobiMotive(A, B) : SeqEnum, SeqEnum -&gt; JacketMot</A></H5>

<PRE>    Kummer: SeqEnum                     Default: [1,0]</PRE>

<PRE>    Tate: RngIntElt                     Default: 0</PRE>

<PRE>    Weight: RngIntElt                   Default: </PRE>
<BLOCKQUOTE>
Given two sequences of rationals, corresponding to positive and negative
elements in the free group on (Q)/(Z), create the resulting
Jacobi motive. This requires that the signed sum of the rationals is
an integer. The optional <TT>Kummer</TT> vararg can specify a Kummer twist,
and similarly with the <TT>Tate</TT> vararg. Alternatively, the desired Tate twist
can be obtained by giving and integral argument to the <TT>Weight</TT> vararg,
and the effective Tate twist can be obtained by setting <TT>Weight</TT> as <TT>true</TT>.
A variant with only one argument (B is empty) is also available.
</BLOCKQUOTE>
<H5><A NAME = "17144">JacketMotive(A, B, t, rho, j) : SeqEnum, SeqEnum, RngQZElt, RngQZElt, RngIntElt -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Similar to above, this intrinsic spells out the Jacobi summands (A, B),
the Kummer twist t<sup>&rho;</sup>, and the Tate twist j explicitly.
</BLOCKQUOTE>
<H5><A NAME = "17145">KummerTwist(J, t, rho) : JacketMot, RngQZElt, RngQZElt -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Given a Jacobi motive J, return its Kummer twist by t<sup>&rho;</sup>,
where &rho; is rational and t is a nonzero rational.
</BLOCKQUOTE>
<H5><A NAME = "17146">TateTwist(J, j) : JacketMot, RngIntElt -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Given a Jacobi motive J and an integer j, return the jth
Tate twist of J.
</BLOCKQUOTE>
<H4><A NAME = "17147">Operations</A></H4>



<H5><A NAME = "17148">J1 * J2 : JacketMot, JacketMot -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Given two Jacobi motives, take their tensor product, eliminating any
rationals common to the positive and negative parts.
</BLOCKQUOTE>
<H5><A NAME = "17149">J1 / J2 : JacketMot, JacketMot -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Given two Jacobi motives, take their tensor quotient, eliminating any
rationals common to the positive and negative parts.
</BLOCKQUOTE>
<H5><A NAME = "17150">J1 eq J2 : JacketMot, JacketMot -&gt; JacketMot</A></H5>
<H5>J1 ne J2 : JacketMot, JacketMot -&gt; JacketMot</H5>
<BLOCKQUOTE>
Whether two Jacobi motives are equal, that is, whether they have the
same positive and negative parts, their t<sup>&rho;</sup> Kummer twists are
the same, and they have the same Tate twist parameter.
</BLOCKQUOTE>
<H5><A NAME = "17151">Scale(J, q) : JacketMot, RngQZElt -&gt; JacketMot</A></H5>
<BLOCKQUOTE>
Given a Jacobi motive, scale all the rational numbers defined the datum
by the given rational q. The denominator of q must be coprime to m,
and q must be invertible mod m. The resulting motive will be identical
over (Q) but need only be conjugate over K<sub>&theta;</sub>.
</BLOCKQUOTE>
<H4><A NAME = "17152">Attributes</A></H4>



<H5><A NAME = "17153">Field(J) : JacketMot -&gt; FldNum</A></H5>
<BLOCKQUOTE>
The field of definition of a Jacobi motive.
</BLOCKQUOTE>
<H5><A NAME = "17154">Weight(J) : JacketMot -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The motivic weight of a Jacobi motive.
</BLOCKQUOTE>
<H5><A NAME = "17155">EffectiveWeight(J) : JacketMot -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The effective motivic weight of a Jacobi motive,
that is, the width of its Hodge structure.
</BLOCKQUOTE>
<H5><A NAME = "17156">HodgeStructure(J) : JacketMot -&gt; HodgeStruc</A></H5>
<H5>HodgeVector(J) : JacketMot -&gt; HodgeStruc, RngIntElt</H5>
<H5>EffectiveHodgeStructure(J) : JacketMot -&gt; HodgeStruc</H5>
<BLOCKQUOTE>
The Hodge structure of a Jacobi motive.
</BLOCKQUOTE>
<H4><A NAME = "17157">L-function</A></H4>



<H5><A NAME = "17158">EulerFactor(J, p) : JacketMot, RngIntElt -&gt; RngUPolElt</A></H5>

<PRE>    Degree: RngIntElt                   Default: </PRE>

<PRE>    Roots: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given a good prime p, that is, one which is coprime to m and
the Kummer twisting parameter t, compute its Euler factor.
The <TT>Roots</TT> vararg also returns as a second argument the
p-adic approximations to the roots (associated to the prime ideals
above p). The <TT>Degree</TT> vararg can be used when the full Euler
factor is not needed, though it is often still just as easily computed.
It is often easier to first identify the Jacobi motive
as a <TT>Grossencharacter</TT>, and then compute its Euler factors.
</BLOCKQUOTE>
<H5><A NAME = "17159">ComplexEvaluation(J, P) : JacketMot, RngOrdIdl -&gt; FldComElt</A></H5>

<PRE>    Precision: RngIntElt                Default: </PRE>
<BLOCKQUOTE>
Given a Jacobi motive and a good degree 1 prime over K<sub>&theta;</sub>,
compute the associated Jacobi sum as a complex number.
This is used to identify motives that are equivalent over (Q)
but not over K<sub>&theta;</sub> in some examples.
</BLOCKQUOTE>
<H5><A NAME = "17160">Grossencharacter(J) : JacketMot -&gt; GrossenChar</A></H5>
<BLOCKQUOTE>
Given a Jacobi motive, identify it as a Gr&ouml;ssencharacter.
This uses the Weil bound on the conductor, and then tries enough
good primes to distinguish the character. This is now the preferred
way to compute the <TT>LSeries</TT> of a Jacobi motive (though the latter
still exists).
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1510.htm">[Next]</A><A  HREF = "text1508.htm">[Prev]</A> <A  HREF = "text1510.htm">[Right]</A> <A  HREF = "text1508.htm">[Left]</A> <A  HREF = "text1504.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>