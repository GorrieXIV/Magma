<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operations on Elements</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1142.htm">[Next]</A><A  HREF = "text1140.htm">[Prev]</A> <A  HREF = "text1142.htm">[Right]</A> <A  HREF = "text1140.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12860">Operations on Elements</A></H3>



<H5>x + y : AlgLieElt, AlgLieElt -&gt; AlgLieElt</H5>

<H5>x + y : AlgMatLieElt, AlgMatLieElt -&gt; AlgMatLieElt</H5>

<H5>x - y : AlgLieElt, AlgLieElt -&gt; AlgLieElt</H5>

<H5>x - y : AlgMatLieElt, AlgMatLieElt -&gt; AlgMatLieElt</H5>

<H5>x * y : AlgLieElt, AlgLieElt -&gt; AlgLieElt</H5>

<H5>x * y : AlgMatLieElt, AlgMatLieElt -&gt; AlgMatLieElt</H5><P>



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1141.htm#12866">Indexing</A>
</UL>
<H5><A NAME = "12861">IsCentral(L, M) : AlgLie,AlgLieElt -&gt; BoolElt</A></H5>
<H5>IsCentral(L, M) : AlgMatLie,AlgMatLieElt -&gt; BoolElt</H5>
<BLOCKQUOTE>
Given an element x of the Lie algebra L,
return <TT>true</TT> if x is central in L.
</BLOCKQUOTE>
<H5><A NAME = "12862">NonNilpotentElement(L) : AlgLie -&gt; AlgLieElt</A></H5>
<BLOCKQUOTE>
Given a (structure constant) Lie algebra L,
this function returns an element of L that is <I>not</I> nilpotent, or 
the zero element of L if no such element exists.
<P>
The algorithm follows <A  HREF = "text1129.htm#bib_wdg-lie-alg">[dG00]</A>, Para 2.7.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12863">Example <TT>AlgLie_NonNilpotentElement (H106E45)</TT></A></H3>
We construct a non-nilpotent element of a Lie algebra.
<P>
<P>
<PRE>
&gt; L:=LieAlgebra("G2",RationalField());
&gt; NonNilpotentElement(L);
(0 0 0 0 0 1 0 0 0 0 0 0 0 0)
</PRE>
<HR>
<H5><A NAME = "12864">AdjointMatrix(L, x) : AlgLie, AlgLieElt -&gt; AlgMatLieElt</A></H5>
<H5>RightAdjointMatrix(L, x) : AlgLie, AlgLieElt -&gt; AlgMatLieElt</H5>
<BLOCKQUOTE>
Given a (structure constant) Lie algebra L and an element x of a 
subalgebra or ideal
of L, return the matrix of (ad) xas an
element of a matrix Lie algebra.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12865">Example <TT>AlgLie_Other (H106E46)</TT></A></H3>
<P>
<P>
<PRE>
&gt; L:=LieAlgebra("B2",RationalField());
&gt; AdjointMatrix(L, L.1);
[ 0  0  0  0  0  0  0  0  0  0]
[ 0  0  0  0  0  0  0  0  0  0]
[ 0  0  0  0  0  0  0  0  0  0]
[ 0  0  0  0  0  0  0  0  0  0]
[ 1  0  0  0  0  0  0  0  0  0]
[ 2  0  0  0  0  0  0  0  0  0]
[ 0  0  0  0  0  0  0  0  0  0]
[ 0 -1  0  0  0  0  0  0  0  0]
[ 0  0  1  0  0  0  0  0  0  0]
[ 0  0  0  0  0 -1  0  0  0  0]
</PRE>
<HR>
<H4><A NAME = "12866">Indexing</A></H4>



<H5><A NAME = "12867">a[i] : AlgLieElt, RngIntElt -&gt; RngElt</A></H5>
<H5>a[i] : AlgMatLieElt, RngIntElt -&gt; ModTupRngElt</H5>
<BLOCKQUOTE>
If a is an element of a structure constant Lie algebra L of dimension n
and 1 &le;i&le;n is a positive integer, then the i-th component 
of the element a is returned (as an element of the base ring R of L). 
<P>
If a is an element of a matrix Lie algebra L of degree n and 
1 &le;i &le;n then the ith row of the matrix a is returned.
</BLOCKQUOTE>
<H5><A NAME = "12868">a[i] := r : AlgLieElt, RngIntElt, RngElt -&gt;  AlgLieElt</A></H5>
<H5>a[i] := r : AlgMatLieElt, RngIntElt, ModTupRngElt -&gt;  AlgMatLieElt</H5>
<BLOCKQUOTE>
Given an element a belonging to a structure constant Lie algebra of dimension n
over R, a positive integer 1 &le;i&le;n and an element r &isin;R, 
the i-th component of the element a is redefined to be r.
<P>
If a is an element of a matrix Lie algebra L of degree n over R and 
1 &le;i &le;n, the ith row of the matrix a is redefined to be the
vector r over R.
</BLOCKQUOTE>
<H5><A NAME = "12869">a[i, j] : AlgMatLieElt, RngIntElt, RngIntElt -&gt; RngElt</A></H5>
<H5>a[i, j] := r : AlgMatLieElt, RngIntElt, RngIntElt, RngElt -&gt; AlgMatLieElt</H5>
<BLOCKQUOTE>
For an element a of a matrix Lie algebra L of degree n and integers 
1 &le;i, j &le;n
return the element in the ith row and jth column of a or set this
element to be r where r is an element of the coefficient ring of L.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1142.htm">[Next]</A><A  HREF = "text1140.htm">[Prev]</A> <A  HREF = "text1142.htm">[Right]</A> <A  HREF = "text1140.htm">[Left]</A> <A  HREF = "text1130.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>