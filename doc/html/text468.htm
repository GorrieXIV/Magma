<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Analytic Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text469.htm">[Next]</A><A  HREF = "text467.htm">[Prev]</A> <A  HREF = "text469.htm">[Right]</A> <A  HREF = "text467.htm">[Left]</A> <A  HREF = "text462.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5142">Analytic Theory</A></H3>

<P>
<P>
<P>
<P>
Probably the most significant difference between the class field theories for
number fields and function fields is the fact that function fields
allow an analytic description of abelian extensions in general where
number fields (currently) only admit the analytical view
for extensions of the rationals (cyclotomic fields) and imaginary
quadratic fields (CM-theory).
<P>
The analytic description is based on Drinfeld-modules of rank 1 (or in the case
of the rational function field the Carlitz-module).
Informally, a Drinfeld module is a representation of some
(infinite) maximal order of a function field into the ring of
additive polynomials over some appropriate ring containing the
original field. Similar to CM-theory, abelian extensions are then
generated by adjoining torsion points under this action.


<H5><A NAME = "5143">CarlitzModule(R, x) : RngUPolTwst, RngUPolElt -&gt; RngUPolTwstElt</A></H5>
<H5>CarlitzModule(R, x) : RngUPolTwst, FldFunRatUElt -&gt; RngUPolTwstElt</H5>
<BLOCKQUOTE>
For a rational function field k = F<sub>q</sub>(t) and a polynomial 
f in k[t], compute the image of f under the
Carlitz module as an element in the ring of twisted polynomials
R. Specifically, the Carlitz module is the representation
induced by sending t to F + t where F is the transcendental
element of R, the Frobenius of k.
As F<sub>q</sub>[t] is freely generated by t, this defines a homomorphism
(a representation) of F<sub>q</sub>[t] into the twisted polynomials over k.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5144">Example <TT>FldFunAb_carlitz-module (H45E5)</TT></A></H3>
We demonstrate how the Carlitz-module can be used to define abelian
extensions of the rational function field.
<P>
<P>
<PRE>
&gt; Fq&lt;w&gt; := GF(4);
&gt; k&lt;t&gt; := RationalFunctionField(Fq);
&gt; R&lt;T&gt; := TwistedPolynomials(k:q := 4);
</PRE>
Suppose we want to create the Ray-class field modulo p := t<sup>2</sup> + t + w, ie
we want to find an abelian extension unramified outside p and 
the infinite place.
<P>
<P>
<PRE>
&gt; p := t^2+t+w;
&gt; P := CarlitzModule(R, p);
&gt; F := Polynomial(P);
&gt; Factorisation(F);
[
    &lt;T, 1&gt;,
    &lt;T^15 + (t^4 + t + 1)*T^3 + t^2 + t + w, 1&gt;
]
&gt; K := FunctionField($1[2][1]);
&gt; a := Support(DifferentDivisor(K));
&gt; a[1];
(t^2 + t + w, K.1)
&gt; [ IsFinite(x) : x in a];
[ true, false, false, false, false, false ]
&gt; RamificationIndex(a[1]);
15
</PRE>
So, this shows that the field has the ramification behaviour we wanted.
However, the Carlitz-module will give us more information:
We will demonstrate that the automorphism group of K is isomorphic
to the unit group of F<sub>q</sub>[t]/p under this module.
<P>
<P>
<PRE>
&gt; q, mq := quo&lt;Integers(k)|p&gt;;
&gt; au := func&lt;X|Evaluate(Polynomial(CarlitzModule(R, X)), K.1)&gt;;
&gt; [ &lt;IsUnit(x), Evaluate(DefiningPolynomial(K), au(x@@mq)) eq 0&gt;
&gt; : x in q];
[ &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true,
true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true,
true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true, true&gt;, &lt;true,
true&gt;, &lt;false, false&gt; ]
</PRE>
Now we try to create the same field using the algebraic class field
machinery:
<P>
<P>
<PRE>
&gt; D, U := NormGroup(K);
&gt; Conductor(D, U);
($.1^2 + $.1 + w) + (1/$.1)
</PRE>
So this also shows that K is ramified exactly at p and the infinite 
places and, since the multiplicity is one, tamely ramified at both
places. 
<P>
<P>
<PRE>
&gt; A := AbelianExtension(D, U);
&gt; F := FunctionField(A);
&gt; F;
Algebraic function field defined over Algebraic function field defined
over GF(2^2) by
$.2 + 1 by
$.1^3 + ($.1^2 + $.1 + w)^2
$.1^5 + w^2*$.1^3 + w*$.1 + (w^2*$.1^4 + w^2*$.1^2 + 1)/($.1^6 + $.1^5
    + w^2*$.1^4 + $.1^3 + $.1^2 + w^2*$.1 + 1)
&gt; HasRoot(Polynomial(K, DefiningPolynomials(F)[1]));
true K.1^10 + (t^2 + t + w)*K.1^4 + (t^2 + t + w)*K.1
&gt; HasRoot(Polynomial(K, DefiningPolynomials(F)[2]));
true w/(t^2 + t + w)*K.1^12 + (w*t^2 + w*t + 1)/(t^2 + t + w)*K.1^6 +
    w*K.1^3
</PRE>
<HR>
<H5><A NAME = "5145">AnalyticDrinfeldModule(F, p) : FldFun, PlcFunElt -&gt; RngUPolTwstElt</A></H5>
<BLOCKQUOTE>
For F a global function field and p a place, compute an algebraic
description of "the" Drinfeld module of rank 1 defined for the
ring of functions integral outside p.
More precisely, let R be the ring of functions integral outside p,
ie. functions havinf their only poles at R. In Magma this is
represented by changing the representation of the function field so
that p is the only infinite place. Then R becomes simply the
finite maximal order.
Futhermore, let C be the completion of F at p and tilde C
be the closure of the algebraic closure of C, thus D will play the role
of the complex numbers in this theory, while C is closely related to
the reals. By means of mapping R to its image in D&sub;C, we
obtain a lattice &Lambda; of rank 1. Related to this lattice are
certain exponential functions (analytic functions where the set of zeros
is &Lambda;). The transformation behaviour of such functions can be used
to define a map from R to the endomorphisms of C, represented
as additive (twisted) polynomials. In particular, under suitable
normalisation, the lattice &Lambda; as defined above, the 
transformation behaviour can be realised over the Hilbert-class field
of F. Since a Drinfeld module is uniquely defined by specifying
a single image of a non-constant element of R, this function returns
a non-constant (as first return value) and the image as a twisted polynomial
over the Hilbert-class field as a second. In case the place is of degree
one, the Drinfeld module will also be sign-normalized.
</BLOCKQUOTE>
<H5><A NAME = "5146">Extend(D, x, p) : RngUPolTwstElt, RngElt, PlcFunElt -&gt; RngUPolTwstElt</A></H5>
<BLOCKQUOTE>
Given D, the image of a non-constant element under a Drinfeld module
for the ring R of functions integral outside p,
an element x in R, compute the image of x.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5147">Example <TT>FldFunAb_drinfeld (H45E6)</TT></A></H3>
Although the code is not restricted to genus 1 (or 2) and even though
hyperelliptic function fields can be handled in a more direct fashion,
we will demonstrate the computation of a Drinfeld module
on an elliptic curve.
<P>
We begin by defining a curve.
<P>
<P>
<PRE>
&gt; k&lt;w&gt; := GF(4);
&gt; kt&lt;t&gt; := PolynomialRing(k);
&gt; kty&lt;y&gt; := PolynomialRing(kt);
&gt; F := FunctionField(y^3+w*t^5+w*t);
&gt; Genus(F);
1
&gt; ClassNumber(F);
3
</PRE>
Now, to define a Drinfeld module, we need to single out an "infinite" place:
<P>
<P>
<PRE>
&gt; p := InfinitePlaces(F)[1];
&gt; Degree(p);
1
</PRE>
Since the place p is of degree 1, our Drinfeld module will be 
sign-normalised.
<P>
<P>
<PRE>
&gt; A, D := AnalyticDrinfeldModule(F, p);
&gt; H&lt;h&gt; := CoefficientRing(D);
&gt; A;
w^2/(x + 1)*F.1
&gt; D;
T_4^2 + ((w*x^5 + 1)/(x^5 + x)*$.1^2*h^2 + (w^2*x^5 + w^2*x^4 + w^2*x
+ 1)/(x^4 + x^3 + x^2 + x)*F.1^2*h + (x^4 + x^2 + w)/(x^2 +
1)*$.1^2)*T_4 + w^2/(x + 1)*F.1
</PRE>
So, the Drinfeld module is uniquely determined by the image of a single
non-constant (A) which is chosen to have maximal valuation
at p and sign 1.
<P>
The values of the Drinfeld module are defined over H which is the
Hilbert-class field of F, ie. the maximal abelian unramified extension
where p is completely split.
<P>
<P>
<PRE>
&gt; Sign(A, p);
1
&gt; Valuation(A, p);
-2
</PRE>
To compute the value of "the" Drinfeld module of a different element
we use <TT>Extend</TT>:
<P>
<P>
<PRE>
&gt; b := F!t;
&gt; Extend(D, b, p);
w*T_4^3 + ((w*x^20 + w*x^19 + w*x^18 + w*x^17 + w*x^16 + w*x^15 +
w*x^14 + w*x^13 + w*x^12 + w*x^11 + w*x^10 + w*x^9 + w*x^8 + w*x^7 +
w*x^6 + w*x^5 + w*x^4 + w*x^3 + w*x^2 + w*x + w)/(x^4 + x^3 + x^2 +
x)*$.1^2*h^2 + (w^2*x^20 + w^2*x^19 + w^2*x^16 + w^2*x^15 + w^2*x^4 +
w^2*x^3 + w^2)/(x^3 + x^2 + x + 1)*$.1^2*h + (x^20 + x^18 + x^12 +
x^10 + w*x^4 + w*x^2 + w^2)/(x^2 + 1)*$.1^2)*T_4^2 + ((w*x^5 + w^2*x^3
+ w^2*x^2 + x + w)/(x^2 + 1)*$.1*h^2 + (w^2*x^5 + w^2*x^4 + x^3 +
w)/(x + 1)*$.1*h + (x^5 + w^2*x^3 + w*x^2 + w^2*x)*$.1)*T_4 + x
</PRE>
To compute a "Ray-class field" from here we can use the 
following:
<P>
<P>
<PRE>
&gt; P := Places(F, 2)[1];
&gt; a,b := TwoGenerators(P);
&gt; GCD(Extend(D, a, p), Extend(D, b, p));
T_4^2 + ((w*x^5 + 1)/(x^5 + x)*$.1^2*h^2 + (w^2*x^5 + w^2*x^4 + w^2*x
+ 1)/(x^4 + x^3 + x^2 + x)*$.1^2*h + (x^4 + x^2 + w)/(x^2 +
1)*$.1^2)*T_4 + w^2/(x + 1)*$.1 + w^2
&gt; Polynomial($1);
T_4^16 + ((w*x^5 + 1)/(x^5 + x)*F.1^2*h^2 + (w^2*x^5 + w^2*x^4 + w^2*x
    + 1)/(x^4 + x^3 + x^2 + x)*F.1^2*h + (x^4 + x^2 + w)/(x^2 +
    1)*F.1^2)*T_4^4 + (w^2/(x + 1)*F.1 + w^2)*T_4
&gt; R := FunctionField($1 div Parent($1).1);
&gt; R;
Algebraic function field defined over H by
T_4^15 + ((w*x^5 + 1)/(x^5 + x)*F.1^2*h^2 + (w^2*x^5 + w^2*x^4 + w^2*x
    + 1)/(x^4 + x^3 + x^2 + x)*F.1^2*h + (x^4 + x^2 + w)/(x^2 +
    1)*F.1^2)*T_4^3 + w^2/(x + 1)*F.1 + w^2
</PRE>
This should be an abelian extension over F, ramified only at p and P.
So let's try to verify that:
<P>
<P>
<PRE>
&gt; f := MinimalPolynomial(R.1, F);
&gt; Degree(f);
45
&gt; Ra := FunctionField(f:Check := false);
&gt; NormGroup(Ra:Cond := 1*p+P);
(1/x, 1/x^2*F.1) + (x^2 + x + w^2, F.1 + x + 1)
Abelian Group isomorphic to Z
Defined on 1 generator in supergroup:
    $.1 = 2*$.1 + 3*$.2 + $.3 (free)
&gt; D, sub_group := $1;
&gt; W := AbelianExtension(D, sub_group);
&gt; W;
Abelian extension of type [ 3, 15 ]
Defined modulo (1/x, 1/x^2*$.1) + (x^2 + x + w^2, $.1 + x + 1)
over Algebraic function field defined over Univariate rational
function field over GF(2^2) by
y^3 + w*t^5 + w*t
&gt; FunctionField(W);
Algebraic function field defined over F by
$.1^3 + (x + 1)^-2 * (x^2 + x + w^2)^-1 * (F.1 + w*x + w) * (F.1 +
    w^2*x + w^2)
$.1^3 + (x) * (x + 1)^-4 * (F.1 + x + 1)^2 * (x^2 + x + w^2)^-1 * (F.1
    + w*x + w) * (F.1 + w^2*x + w^2)
$.1^5 + (1/(x^2 + 1)*F.1^2 + w^2/(x + 1)*F.1 + (x^2 + x + 1))*$.1^3 +
    (w/(x^2 + 1)*F.1^2 + w*x*F.1 + (x^4 + x^2 + 1))*$.1 + (x^2 + x +
    1)/(x^2 + 1)*F.1^2 + w^2*x*F.1 + x^4 + w^2*x^2 + w*x + w^2
&gt; WW := $1;
&gt; [HasRoot(Polynomial(Ra, x)) : x in DefiningPolynomials(WW)];
[ true, true, true]
</PRE>
<HR>
<H5><A NAME = "5148"></A><A NAME = "FldFunAb:Exp">Exp</A>(x,p) : RngElt, PlcFunElt -&gt; RngUPolTwstElt</H5>

<PRE>    InfBound: RngIntElt                 Default: 5</PRE>

<PRE>    Map: Map                            Default: id</PRE>

<PRE>    Class: DivFunElt                    Default: 0</PRE>

<PRE>    Limit: RngIntElt                    Default: &infin;</PRE>

<PRE>    Scale: RngElt                       Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
In Drinfeld's theory of elliptic modules, one associates an exponential
function to a lattice. The transformation of this function under scaling of
the lattice gives then rise to the "Drinfeld-module".
This function computes an approximation to the exponential of the
"standard-lattice". More precisely: let R be the ring of functions
integral outside the place p and let C be the completion of
the function field at p. Considered as a subset of C, R is a
1-dimensional lattice &Lambda; in Drinfelds sense. The exponential
associated to this lattice is the function
exp: z to z&prod;'(1 - z/l)
where the product is taken over all non-zero lattice points l. This function
can be seen to be an additive analytic function. 
<P>
For n&gt;0, let now L(np) be the Riemann-Roch spaces and 
f<sub>n</sub> : z to z&prod;'(1 - z/l)
(the product is over the non-zero elements of L(np)). It can be seen that
f<sub>n</sub> to exp as n to&infin;. This intrinsic computes f<sub>n</sub> for
n equal the value of <TT>InfBound</TT>. If <TT>Limit</TT> is given then
the twised polynomial representing f<sub>n</sub> is truncated at that term.
If <TT>Class</TT> is given and contains the divisor d, 
then instead of L(np) we use L(np + d) which will approximate 
a (in general) non-isomorphic exponential coming from the lattice from
the ideal representing the finite part of d.
<P>
If <TT>Map</TT> is given, then the map is applied to each element in L(np)
first, thus allowing to compute analytic approximations instead of
alegebraic ones. Additionally, if <TT>Scale</TT> is given, the elements
of L(np) are multiplied by this value before the functions
are formed, corresponding to a scaling of the lattice.
<P>
The exponential is evaluated at x, the first argument. Typically, x
will be the transcendental element of a polynomial ring, a
twisted polynomial ring or a power series ring.
</BLOCKQUOTE>
<H5><A NAME = "5149">AnalyticModule(x, p) : RngElt, PlcFunElt -&gt; RngElt</A></H5>

<PRE>    InfBound: RngIntElt                 Default: 5</PRE>

<PRE>    Map: Map                            Default: id</PRE>

<PRE>    Class: DivFunElt                    Default: 0</PRE>

<PRE>    Limit: RngIntElt                    Default: &infin;</PRE>

<PRE>    Scale: RngElt                       Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Let &Lambda; be the lattice as described for <A  HREF = "text468.htm#FldFunAb:Exp">Exp</A> above.
By Drinfeld's theory, the exponential functions of &Lambda; and
x&Lambda; are related through some polynomial. This function
computed the polynomial for x, which is "the" image of x under
the Drinfeld module defined by &Lambda;.
The use of the parameters is as for <A  HREF = "text468.htm#FldFunAb:Exp">Exp</A> above.
</BLOCKQUOTE>
<H5><A NAME = "5150">CanNormalize(F) : RngUPolTwstElt -&gt; BoolElt, RngUPolTwstElt, RngElt</A></H5>
<BLOCKQUOTE>
Let F be a twisted polynomial, typically over a completion.
This function tries to conjugate F so that the coefficients are
integral with small valuations.
On success, <TT>true</TT>, the new polynomial and the element used to 
normalise F is returned.
</BLOCKQUOTE>
<H5><A NAME = "5151">CanSignNormalize(F) : RngUPolTwstElt -&gt; BoolElt, RngUPolTwstElt, RngElt</A></H5>
<BLOCKQUOTE>
Let F be a twisted polynomial, typically over a completion.
This function tries to conjugate F so that the highest coefficient
is an element in the residue class field.
On success, <TT>true</TT>, the new polynomial and the element used to 
normalise F is returned.
</BLOCKQUOTE>
<H5><A NAME = "5152">AlgebraicToAnalytic(F, p) : RngUPolTwstElt, PlcFunElt -&gt; RngUPolTwstElt</A></H5>
<BLOCKQUOTE>
Given a non-trivial image F under a Drinfeld module with the "infinite
place" p, compute a basis for a submodule of the lattice
underlying F. The parameter <TT>RelPrec</TT> is used to limit the 
number of coefficients of the exponential that are reconstructed, thus
it also limits the dimenstion of the submodule.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text469.htm">[Next]</A><A  HREF = "text467.htm">[Prev]</A> <A  HREF = "text469.htm">[Right]</A> <A  HREF = "text467.htm">[Left]</A> <A  HREF = "text462.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>