<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Invariant Rings of Linear Algebraic Groups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1293.htm">[Next]</A><A  HREF = "text1291.htm">[Prev]</A> <A  HREF = "text1293.htm">[Right]</A> <A  HREF = "text1291.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "14032">Invariant Rings of Linear Algebraic Groups</A></H3>

<P>
<P>
<P>
By definition, a linear algebraic group is an affine variety G
together with morphisms giving G the structure of a group. In the
invariant theory algorithms of Magma, the group structure of G is
nowhere required. Therefore an algebraic group will be defined by
simply giving polynomials defining G as an affine variety. A
G-module of an algebraic group is a finite dimensional vector space
K<sup>n</sup> together with a morphism G to GL<sub>n</sub> of algebraic groups.
In Magma, such a morphism is given by specifying an n by n matrix
whose entries are polynomials in the same variables as the polynomials
specifying G (for more details, see section <A  HREF = "text1278.htm#13967">Algebraic Group Actions on  Polynomials</A>). An
invariant ring of a linear algebraic group is constructed by giving a
linear algebraic group together with a G-module. Magma makes no
checks that the variety defined by the user has a multiplication
making it into an algebraic group, or that the morphism G to
GL<sub>n</sub>(K) really provides an action of G. If they do not, the
computations will have unpredictable results.
Likewise, Magma is unable to decide whether an algebraic group is
reductive or linearly reductive.  Therefore the user should indicate
whether a group has these properties at creation by the options described
below.  This is important because Derksen's algorithm only works for
linearly reductive groups.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1292.htm#14033">Creation</A>
<LI> <A  HREF = "text1292.htm#14036">Access</A>
<LI> <A  HREF = "text1292.htm#14039">Functions</A>
</UL>
<H4><A NAME = "14033">Creation</A></H4>



<H5><A NAME = "14034">InvariantRing(I, A) : RngMPol, Mtrx -&gt; RngInvar</A></H5>

<PRE>    Reductive: BoolElt                  Default: <TT>false</TT></PRE>

<PRE>    LinearlyReductive: BoolElt          Default: <TT>false</TT></PRE>

<PRE>    PolynomialRing: RngMPol             Default: </PRE>
<BLOCKQUOTE>
Construct the invariant ring R for the algebraic group G defined
by the ideal I and representation matrix A.
<P>
<P>
If the parameter <TT>Reductive</TT> is set to {<TT>true</TT>}, then G is assumed
to be reductive, while if the parameter <TT>LinearlyReductive</TT>
is set to {<TT>true</TT>}, then G is assumed to be linearly reductive.
<P>
If the parameter <TT>PolynomialRing</TT> is set to a value P, then P
is used as the polynomial ring in which the invariants of R will lie.
</BLOCKQUOTE>
<H5><A NAME = "14035">BinaryForms(N, p) : [RngIntElt], RngIntElt -&gt; RngMPol, [[RngMPolElt]], RngMPol</A></H5>
<H5>BinaryForms(n, p) : RngIntElt, RngIntElt -&gt; RngMPol, [[RngMPolElt]], RngMPol</H5>
<BLOCKQUOTE>
Let N = [n<sub>1</sub>, ..., n<sub>k</sub>] be a sequence of positive integers and let
p be a positive prime or zero.
Let G = SL<sub>2</sub>(K) with K an algebraically closed field of characteristic
p.
This function defines the action on a direct sum of spaces of binary
forms with degrees given by the n<sub>i</sub>.  The function returns three items:
the ideal I<sub>G</sub> defining G as an algebraic group, the representation
matrix A (as a sequence of sequences of polynomials),
and a polynomial ring on which G acts with appropriate naming of variables.
<P>
The second version of the function is given an integer n, and
takes N to be [n].
</BLOCKQUOTE>
<H4><A NAME = "14036">Access</A></H4>



<H5><A NAME = "14037">GroupIdeal(R) : RngInvar -&gt; RngMPol</A></H5>
<BLOCKQUOTE>
Given an invariant ring R defined over an algebraic group G,
return the ideal I defining G.
</BLOCKQUOTE>
<H5><A NAME = "14038">Representation(R) : RngInvar -&gt; Mtrx</A></H5>
<BLOCKQUOTE>
Given an invariant ring R defined over an algebraic group G,
return the representation matrix A for G.
</BLOCKQUOTE>
<H4><A NAME = "14039">Functions</A></H4>



<H5><A NAME = "14040">InvariantsOfDegree(R, d) : RngInvar, RngIntElt -&gt; [ RngMPolElt ]</A></H5>
<BLOCKQUOTE>
Return a K-basis of the space R<sub>d</sub> of the homogeneous invariants
of degree d in the invariant ring R=K[V]<sup>G</sup> of the algebraic
group G over the field K as a sequence of polynomials.
</BLOCKQUOTE>
<H5><A NAME = "14041">FundamentalInvariants(R) : RngInvar -&gt; RngMPol</A></H5>

<PRE>    Optimize: BoolElt                   Default: <TT>true</TT></PRE>

<PRE>    Minimize: BoolElt                   Default: <TT>true</TT></PRE>

<PRE>    MinimizeHilbert: BoolElt            Default: <TT>true</TT></PRE>

<PRE>    Force: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given an invariant ring R defined over an algebraic group,
return a sequence of fundamental invariants of R, using
Derksen's algorithm.
<P>
By default, the computation of homogeneous
invariants is optimized by extending at each the degree the basis
obtained from multiplying lower-degree invariants by appropriate monomials.
This method can be suppressed by setting <TT>Optimize</TT> to <TT>false</TT>.
By default the generators will be minimal.  By setting the parameter
<TT>Minimize</TT> to {<TT>false</TT>}, no minimization will be attempted.
By setting the parameter <TT>MinimizeHilbert</TT> to {<TT>false</TT>}, the
basis of the Hilbert ideal will not be minimized.
<P>
By default the group must be linearly reductive.
Setting the parameter <TT>Force</TT> to <TT>true</TT> will force the
application of Derksen's algorithm even though the group may not be
linearly reductive.
</BLOCKQUOTE>
<H5><A NAME = "14042">DerksenIdeal(R) : RngInvar -&gt; [RngMPolElt]</A></H5>
<BLOCKQUOTE>
Given an invariant ring R defined over an algebraic group,
return a sequence of generators of the Derksen ideal of R.
The Derksen ideal is an ideal D of
P[y<sub>1</sub>, ..., y<sub>n</sub>], where P = K[x<sub>1</sub> , ..., x<sub>n</sub>]
is the ambient polynomial ring of R, and the y<sub>i</sub> are new indeterminates.
By definition, D is the intersection of all the ideals
&lt; y<sub>1</sub> - g(x<sub>1</sub>), ..., y<sub>n</sub> - g(x<sub>n</sub>) &gt; for all g &isin;G,
the group of R.
Geometrically, D is the vanishing ideal of the subset
{(x, g(x)) |x &isin;K<sup>n</sup>, g &isin;G}
of the cartesian product K<sup>n</sup> x K<sup>n</sup>.
</BLOCKQUOTE>
<H5><A NAME = "14043">HilbertIdeal(R) : RngInvar -&gt; RngMPol</A></H5>

<PRE>    Minimize: BoolElt                   Default: <TT>true</TT></PRE>

<PRE>    Force: BoolElt                      Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given an invariant ring R defined over a linear algebraic group,
return the Hilbert ideal of R.
This is the ideal in the polynomial ring generated by all non-constant,
homogeneous invariants.  The result is a sequence of homogeneous
generators (not necessarily invariant).
<P>
By default the generators will be minimal.  By setting the parameter
<TT>Minimize</TT> to {<TT>false</TT>}, no minimization will be attempted.
Also, setting the parameter <TT>Force</TT> to <TT>true</TT> will force
the application of Derksen's algorithm even though the group may not
be linearly reductive.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "14044">Example <TT>RngInvar_SL2-invar (H116E18)</TT></A></H3>
We consider invariant ring of the group G = SL<sub>2</sub>(Q), which is
is characterised by the equation det(A)=1.
<P>
<P>
<PRE>
&gt; Q := RationalField();
&gt; P&lt;[a]&gt;:=PolynomialRing(Q, 4);
&gt; A := MatrixRing(P,2)!a;
&gt; IG := ideal&lt;P | Determinant(A) - 1&gt;;
&gt; IG;
Ideal of Polynomial ring of rank 4 over Rational Field
Lexicographical Order
Variables: a[1], a[2], a[3], a[4]
Basis:
[
    a[1]*a[4] - a[2]*a[3] - 1
]
</PRE>
The simultaneous action of G on three
vectors is given by the matrix I<sub>3</sub> tensor A:
<P>
<P>
<PRE>
&gt; T := TensorProduct(MatrixRing(P, 3) ! 1, A);  
&gt; T;
[a[1] a[2]    0    0    0    0]
[a[3] a[4]    0    0    0    0]
[   0    0 a[1] a[2]    0    0]
[   0    0 a[3] a[4]    0    0]
[   0    0    0    0 a[1] a[2]]
[   0    0    0    0 a[3] a[4]]
</PRE>
We create the invariant ring R of G (which is reductive) with this
action and compute fundamental invariants.
<P>
<P>
<PRE>
&gt; IR := InvariantRing(IG, T: Reductive);
&gt; FundamentalInvariants(IR);
[
    x3*x6 - x4*x5,
    x1*x6 - x2*x5,
    x1*x4 - x2*x3
]
</PRE>
We see that there are three fundamental invariants.  It is well known that the
invariant ring of the simultaneous action of SL<sub>n</sub> on m vectors is
generated by the minors of the n x m matrix formed by the
vectors.  We can see this in the present case.
<P>
<P>
<PRE>
&gt; R&lt;x1,x2,x3,x4,x5,x6&gt; := PolynomialRing(Q, 6);
&gt; M := Matrix([[x1,x3,x5], [x2,x4,x6]]);
&gt; M;
[x1 x3 x5]
[x2 x4 x6]
&gt; Minors(M, 2);
[
    x1*x4 - x2*x3,
    -x1*x6 + x2*x5,
    x3*x6 - x4*x5
]
</PRE>
<HR>
<H3><A NAME = "14045">Example <TT>RngInvar_SL2-tensor (H116E19)</TT></A></H3>
As a second example, we consider the representation of the group
SL<sub>2</sub>(Q) x SL<sub>2</sub>(Q) x SL<sub>2</sub>(Q) given by the tensor
product of the canonical representation:
<P>
<P>
<PRE>
&gt; n:=3;
&gt; P&lt;[x]&gt;:=PolynomialRing(RationalField(), n*4, "grevlex");
&gt; L_A := [MatrixRing(P,2)!x[i..i+3]:i in [1..n*4 by 4]];
&gt; IG := ideal&lt;P|[Determinant(A)-1:A in L_A]&gt;;
&gt; IG;
Ideal of Polynomial ring of rank 12 over Rational Field
Graded Reverse Lexicographical Order
Variables: x[1], x[2], x[3], x[4], x[5], x[6], x[7], x[8],
x[9], x[10], x[11], x[12]
Basis:
[
    -x[2]*x[3] + x[1]*x[4] - 1,
    -x[6]*x[7] + x[5]*x[8] - 1,
    -x[10]*x[11] + x[9]*x[12] - 1
]
&gt; 
&gt; M:=L_A[1];
&gt; for i:=2 to n do
&gt;     M:=TensorProduct(M,L_A[i]);
&gt; end for;
&gt; M;
[x[1]*x[5]*x[9]   x[1]*x[5]*x[10]   x[1]*x[6]*x[9]   x[1]*x[6]*x[10]   
    x[2]*x[5]*x[9]   x[2]*x[5]*x[10]   x[2]*x[6]*x[9]   x[2]*x[6]*x[10]]
[x[1]*x[5]*x[11]   x[1]*x[5]*x[12]   x[1]*x[6]*x[11]   x[1]*x[6]*x[12]   
    x[2]*x[5]*x[11]   x[2]*x[5]*x[12]   x[2]*x[6]*x[11]   x[2]*x[6]*x[12]]
[x[1]*x[7]*x[9]   x[1]*x[7]*x[10]   x[1]*x[8]*x[9]   x[1]*x[8]*x[10]   
    x[2]*x[7]*x[9]   x[2]*x[7]*x[10]   x[2]*x[8]*x[9]   x[2]*x[8]*x[10]]
[x[1]*x[7]*x[11]   x[1]*x[7]*x[12]   x[1]*x[8]*x[11]   x[1]*x[8]*x[12]   
    x[2]*x[7]*x[11]   x[2]*x[7]*x[12]   x[2]*x[8]*x[11]   x[2]*x[8]*x[12]]
[x[3]*x[5]*x[9]   x[3]*x[5]*x[10]   x[3]*x[6]*x[9]   x[3]*x[6]*x[10]   
    x[4]*x[5]*x[9]   x[4]*x[5]*x[10]   x[4]*x[6]*x[9]   x[4]*x[6]*x[10]]
[x[3]*x[5]*x[11]   x[3]*x[5]*x[12]   x[3]*x[6]*x[11]   x[3]*x[6]*x[12]   
    x[4]*x[5]*x[11]   x[4]*x[5]*x[12]   x[4]*x[6]*x[11]   x[4]*x[6]*x[12]]
[x[3]*x[7]*x[9]   x[3]*x[7]*x[10]   x[3]*x[8]*x[9]   x[3]*x[8]*x[10]   
    x[4]*x[7]*x[9]   x[4]*x[7]*x[10]   x[4]*x[8]*x[9]   x[4]*x[8]*x[10]]
[x[3]*x[7]*x[11]   x[3]*x[7]*x[12]   x[3]*x[8]*x[11]   x[3]*x[8]*x[12]   
    x[4]*x[7]*x[11]   x[4]*x[7]*x[12]   x[4]*x[8]*x[11]   x[4]*x[8]*x[12]]

&gt; IR:=InvariantRing(IG, M: Reductive);
&gt; time FundamentalInvariants(IR);
[
    x1^2*x8^2 - 2*x1*x2*x7*x8 - 2*x1*x3*x6*x8 - 2*x1*x4*x5*x8 +
        4*x1*x4*x6*x7 + x2^2*x7^2 + 4*x2*x3*x5*x8 - 2*x2*x3*x6*x7 -
        2*x2*x4*x5*x7 + x3^2*x6^2 - 2*x3*x4*x5*x6 + x4^2*x5^2
]
Time: 0.610
&gt; time DerksenIdeal(IR);
[
    y1^2*y8^2 - 2*y1*y2*y7*y8 - 2*y1*y3*y6*y8 - 2*y1*y4*y5*y8 + 4*y1*y4*y6*y7 + 
        y2^2*y7^2 + 4*y2*y3*y5*y8 - 2*y2*y3*y6*y7 - 2*y2*y4*y5*y7 + y3^2*y6^2 - 
        2*y3*y4*y5*y6 + y4^2*y5^2 - x1^2*x8^2 + 2*x1*x2*x7*x8 + 2*x1*x3*x6*x8 + 
        2*x1*x4*x5*x8 - 4*x1*x4*x6*x7 - x2^2*x7^2 - 4*x2*x3*x5*x8 + 
        2*x2*x3*x6*x7 + 2*x2*x4*x5*x7 - x3^2*x6^2 + 2*x3*x4*x5*x6 - x4^2*x5^2
]
Time: 0.010
&gt; time HilbertIdeal(IR);
[
    x1^2*x8^2 - 2*x1*x2*x7*x8 - 2*x1*x3*x6*x8 - 2*x1*x4*x5*x8 + 4*x1*x4*x6*x7 + 
        x2^2*x7^2 + 4*x2*x3*x5*x8 - 2*x2*x3*x6*x7 - 2*x2*x4*x5*x7 + x3^2*x6^2 - 
        2*x3*x4*x5*x6 + x4^2*x5^2
]
Time: 0.000
</PRE>
So in this case, we find that the invariant ring is generated by a single
polynomial.
<HR>
<H3><A NAME = "14046">Example <TT>RngInvar_AlgGroup1 (H116E20)</TT></A></H3>
We compute fundamental invariants for the
invariant ring of G = SL<sub>2</sub>(Q) acting on a space of binary forms.
<P>
<P>
<PRE>
&gt; IG, A := BinaryForms([1,1,2,2], 0);
&gt; IG;
Ideal of Polynomial ring of rank 4 over Rational Field
Lexicographical Order
Variables: t1, t2, t3, t4
Basis:
[
    t1*t4 - t2*t3 - 1
]
&gt; A;
[t4   -t3   0   0   0   0   0   0   0   0]
[-t2   t1   0   0   0   0   0   0   0   0]
[0   0   t4   -t3   0   0   0   0   0   0]
[0   0   -t2   t1   0   0   0   0   0   0]
[0   0   0   0   t4^2   -t3*t4   t3^2   0   0   0]
[0   0   0   0   -2*t2*t4   t1*t4 + t2*t3   -2*t1*t3   0   0   0]
[0   0   0   0   t2^2   -t1*t2   t1^2   0   0   0]
[0   0   0   0   0   0   0   t4^2   -t3*t4   t3^2]
[0   0   0   0   0   0   0   -2*t2*t4   t1*t4 + t2*t3   -2*t1*t3]
[0   0   0   0   0   0   0   t2^2   -t1*t2   t1^2]
&gt; R:=InvariantRing(IG,A: LinearlyReductive);
&gt; time FundamentalInvariants(R);
[
    x8*x10 - 1/4*x9^2,
    x5*x10 - 1/2*x6*x9 + x7*x8,
    x5*x7 - 1/4*x6^2,
    x1*x4 - x2*x3,
    x1*x3*x7 - 1/2*x1*x4*x6 - 1/2*x2*x3*x6 + x2*x4*x5,
    x1*x3*x10 - 1/2*x1*x4*x9 - 1/2*x2*x3*x9 + x2*x4*x8,
    x3^2*x10 - x3*x4*x9 + x4^2*x8,
    x3^2*x7 - x3*x4*x6 + x4^2*x5,
    x1^2*x10 - x1*x2*x9 + x2^2*x8,
    x1^2*x7 - x1*x2*x6 + x2^2*x5,
    x1*x2*x5*x10 - x1*x2*x7*x8 - x2^2*x5*x9 + x2^2*x6*x8,
    x1*x4*x5*x10 - 1/2*x1*x4*x6*x9 + x1*x4*x7*x8 - 1/2*x2*x3*x5*x10 + 
        1/2*x2*x3*x6*x9 - 3/2*x2*x3*x7*x8 - 1/2*x2*x4*x5*x9 + 1/2*x2*x4*x6*x8,
    x3*x4*x5*x10 - x3*x4*x7*x8 - x4^2*x5*x9 + x4^2*x6*x8
]
Time: 0.650
</PRE>
<HR>
<H3><A NAME = "14047">Example <TT>RngInvar_AlgGroup2 (H116E21)</TT></A></H3>
We do simple computations on an invariant ring of an algebraic group.
The group is not reductive, so fundamental invariants cannot be computed,
but invariants of specific degrees can be.
<P>
<P>
<PRE>
&gt; K := RationalField();
&gt; Pa&lt;a,b&gt; := PolynomialRing(K, 2);
&gt; IG := ideal&lt;Pa|&gt;;
&gt; A := Matrix(7,
&gt; [1, 0, 0, 0, 0, 0, 0, a, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
&gt; 0, 0, 0, 0, a, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
&gt; a, 1, 0, 0, 0, 0, 0, b, 0, 1 ]);
&gt; A;
[1 0 0 0 0 0 0]
[a 1 0 0 0 0 0]
[0 0 1 0 0 0 0]
[0 0 a 1 0 0 0]
[0 0 0 0 1 0 0]
[0 0 0 0 a 1 0]
[0 0 0 0 b 0 1]
&gt; R:=InvariantRing(IG, A);
&gt; R;
Invariant Ring of algebraic group
Field of definition:
    Rational Field
&gt; InvariantsOfDegree(R, 1);
[
    x1,
    x3,
    x5
]
&gt; InvariantsOfDegree(R, 2);
[
    x1^2,
    x1*x3,
    x1*x4 - x2*x3,
    x1*x5,
    x1*x6 - x2*x5,
    x3^2,
    x3*x5,
    x3*x6 - x4*x5,
    x5^2
]
&gt; FundamentalInvariants(R);

&gt;&gt; FundamentalInvariants(R);
                        ^
Runtime error in 'FundamentalInvariants': Computing fundamental invariants (via 
Derksen's algorithm) is only possible for linearly reductive groups

</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1293.htm">[Next]</A><A  HREF = "text1291.htm">[Prev]</A> <A  HREF = "text1293.htm">[Right]</A> <A  HREF = "text1291.htm">[Left]</A> <A  HREF = "text1272.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>