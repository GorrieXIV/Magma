<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>GCD and LCM</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text162.htm">[Next]</A><A  HREF = "text160.htm">[Prev]</A> <A  HREF = "text162.htm">[Right]</A> <A  HREF = "text160.htm">[Left]</A> <A  HREF = "text155.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "1208">GCD and LCM</A></H3>

<P>
<P>
Within the classical range, Magma uses the fast classical
Accelerated GCD algorithm of Kenneth Weber <A  HREF = "text154.htm#bib_Weber_GCD">[Web95]</A> to compute
the GCD of two integers, and the fast classical Lehmer extended GCD
(`XGCD') algorithm <A  HREF = "text154.htm#bib_Knuth2">[Knu97, pp. 345--348]</A> (which is about 5 times
faster than the Euclidean XGCD algorithm) to compute the extended GCD
of two integers.
<P>
For larger integers, Magma uses the asymptotically fast Sch&ouml;nhage
recursive ("half-GCD") algorithm (<A  HREF = "text154.htm#bib_Schoenhage_GCD">[Sch71]</A>; see also
<A  HREF = "text154.htm#bib_Montgomery_Thesis">[Mon92, Sec. 3.8]</A> for the basic idea, applied to
polynomials).  On a Sun SPARC workstation, the crossover point for the
Sch&ouml;nhage GCD algorithm (where it beats the classical Accelerated GCD
algorithm) is 32768 bits (about 10000 decimal digits), while the
crossover point for the Sch&ouml;nhage XGCD algorithm (when it beats the
Lehmer XGCD algorithm) is 6000 bits (about 2000 decimal digits).
<P>
<P>


<H5><A NAME = "1209">GreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</A></H5>
<H5>Gcd(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<H5>GCD(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The greatest common divisor of m and n, normalized to be
non-negative.  If either of the inputs is zero, then the result is the
absolute value of the other input, while if m and n are both zero
the result is zero.
</BLOCKQUOTE>
<H5><A NAME = "1210">GreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt</A></H5>
<H5>Gcd(s) : [RngIntElt] -&gt; RngIntElt</H5>
<H5>GCD(s) : [RngIntElt] -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The GCD of the entries of the sequence s.
If all entries of the sequence are zero, the result is zero.
An error results if the sequence is the null sequence.
</BLOCKQUOTE>
<H5><A NAME = "1211">ExtendedGreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt</A></H5>
<H5>Xgcd(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt</H5>
<H5>XGCD(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt</H5>
<BLOCKQUOTE>
The extended GCD of m and n; returns integers g, x and y such
that g is the greatest common divisor of the integers m and n,
and g = x.m + y.n.  If m and n are both zero, g is
zero; otherwise g is always positive.  If m and n are both
non-zero, the multipliers x and y are unique.
</BLOCKQUOTE>
<H5><A NAME = "1212">ExtendedGreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]</A></H5>
<H5>Xgcd(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]</H5>
<H5>XGCD(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]</H5>
<BLOCKQUOTE>
Given a sequence of integers s = [s<sub>1</sub>, ..., s<sub>r</sub>], return the
non-negative integer g and a sequence X=(x<sub>1</sub>, ..., x<sub>r</sub>) such that g 
is the greatest common divisor of the integers s<sub>i</sub> and g is the sum over i of x<sub>i</sub>.s<sub>i</sub>.
<P>
</BLOCKQUOTE>
<H5><A NAME = "1213">LeastCommonMultiple(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</A></H5>
<H5>Lcm(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<H5>LCM(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
The smallest non-negative integer divisible by both m and n.
If m or n equals zero, the result is zero; this ensures
that lcm(m, n)gcd(m, n) = m.n.
</BLOCKQUOTE>
<H5><A NAME = "1214">LeastCommonMultiple(s) : [RngIntElt] -&gt; RngIntElt</A></H5>
<H5>Lcm(s) : [RngIntElt] -&gt; RngIntElt</H5>
<H5>LCM(s) : [RngIntElt] -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Least common multiple of the sequence of integers s.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text162.htm">[Next]</A><A  HREF = "text160.htm">[Prev]</A> <A  HREF = "text162.htm">[Right]</A> <A  HREF = "text160.htm">[Left]</A> <A  HREF = "text155.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>