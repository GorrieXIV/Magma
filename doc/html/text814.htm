<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Subgroups</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text815.htm">[Next]</A><A  HREF = "text813.htm">[Prev]</A> <A  HREF = "text815.htm">[Right]</A> <A  HREF = "text813.htm">[Left]</A> <A  HREF = "text808.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "9287">Subgroups</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text814.htm#9288">Specification of a Subgroup</A>
<LI> <A  HREF = "text814.htm#9296">Index of a Subgroup: The Todd- Coxeter Algorithm</A>
<LI> <A  HREF = "text814.htm#9304">Implicit Invocation of the Todd- Coxeter Algorithm</A>
<LI> <A  HREF = "text814.htm#9308">Constructing a Presentation for a  Subgroup</A>
</UL>
<H4><A NAME = "9288">Specification of a Subgroup</A></H4>



<H5><A NAME = "9289"></A><A NAME = "GrpFP_1:sub">sub</A>&lt; G | L &gt; : GrpFP, List -&gt; GrpFP</H5>
<BLOCKQUOTE>
Construct the subgroup H of the fp-group G generated by the words
specified by the terms of the <I>generator list</I> L = L<sub>1</sub>, ..., L<sub>r</sub>.
<P>
A term L<sub>i</sub> of the generator list may consist of any of the following
objects:
<P>
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A word;
<DT>(b)</DT><DD>A set or sequence of words;
<DT>(c)</DT><DD>A sequence of integers representing a word;
<DT>(d)</DT><DD>A set or sequence of sequences of integers representing words;
<DT>(e)</DT><DD>A subgroup of an fp-group;
<DT>(f)</DT><DD>A set or sequence of subgroups.
<P>
<P>
<P>
</DL>
The collection of words and groups specified by the list must all
belong to the group G and H will be constructed as a subgroup
of G.
<P>
The generators of H consist of the words specified directly by
terms L<sub>i</sub> together with the stored generating words for any
groups specified by terms of L<sub>i</sub>. Repetitions of an element and
occurrences of the identity element are removed (unless H is trivial).
<P>
If the <TT>sub</TT>-constructor is invoked with an empty list L, the
trivial subgroup will be constructed.
</BLOCKQUOTE>
<H5><A NAME = "9290">sub&lt; G | f &gt; : GrpFP, Hom(Grp) -&gt; GrpFP</A></H5>
<BLOCKQUOTE>
Given a homomorphism f from G onto a transitive subgroup of Sym(n), 
construct the subgroup of G which affords this permutation representation.
</BLOCKQUOTE>
<H5><A NAME = "9291"></A><A NAME = "GrpFP_1:ncl">ncl</A>&lt; G | L &gt; : GrpFP, List -&gt; GrpFP</H5>
<BLOCKQUOTE>
Construct the subgroup N of the fp-group G as the normal closure
of the subgroup H generated by the words specified by the terms of 
the <I>generator list</I> L.
<P>
The possible forms of a term of the generator list are the
same as for the <A  HREF = "text814.htm#GrpFP_1:sub">sub</A>-constructor.
<P>
This constructor may be applied even when H has infinite index in G,
provided that its normal closure N has finite index. The subgroup N
is obtained by computing the coset table of the trivial subgroup in the 
group defined by the relations of G together with relators corresponding 
to the words generating H. For a sample application of this function,
see Example <A  HREF = "text812.htm#9193">H75E17</A>.
<P>
<P>
This function may require the computation of a coset table. Experienced users
can control the behaviour of a possibly invoked coset enumeration with a set of
global parameters. These global parameters can be changed using the function
<A  HREF = "text814.htm#GrpFP_1:SetGlobalTCParameters">SetGlobalTCParameters</A>. For a detailed description of the
available parameters and their meanings, we refer to Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<H5><A NAME = "9292">ncl&lt;G | f&gt; : GrpFP, Hom(Grp) -&gt; GrpFP</A></H5>
<BLOCKQUOTE>
Given a homomorphism f from G onto a transitive subgroup of Sym(n), 
construct the subgroup of G that is the normal closure of the subgroup 
K of G which affords this permutation representation.
</BLOCKQUOTE>
<H5><A NAME = "9293">CommutatorSubgroup(G) : GrpFP -&gt; GrpFP</A></H5>
<H5>DerivedSubgroup(G) : GrpFP -&gt; GrpFP</H5>
<H5>DerivedGroup(G) : GrpFP -&gt; GrpFP</H5>
<BLOCKQUOTE>
Given an fp-group G, try to construct the derived subgroup G<sup>prime</sup> of 
G as finite index subgroup of G.  The construction fails if no presentation
for G is known or can be constructed, or if the index of G<sup>prime</sup> in G
is too large or infinite.
<P>
<P>
This function may require the computation of a coset table. Experienced users
can control the behaviour of a possibly invoked coset enumeration with a set of
global parameters. These global parameters can be changed using the function
<A  HREF = "text814.htm#GrpFP_1:SetGlobalTCParameters">SetGlobalTCParameters</A>. For a detailed description of the
available parameters and their meanings, we refer to Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9294">Example <TT>GrpFP_1_Subgroups1 (H75E49)</TT></A></H3>
The group (8, 7 | 2, 3) is defined by the presentation
&lt; a, b    |    a<sup>8</sup>, b<sup>7</sup>, (ab)<sup>2</sup>, (a<sup> - 1</sup>b)<sup>3</sup> &gt;,
and has a subgroup of index 448 generated by the words a<sup>2</sup> and a<sup> - 1</sup>b:
<P>
<P>
<PRE>
&gt; G&lt;a, b&gt; := Group&lt;a, b| a^8, b^7, (a * b)^2, (a^-1 * b)^3&gt;;
&gt; G;
Finitely presented group G on 2 generators
Relations
     a^8 = Id(G)
       b^7 = Id(G)
       (a * b)^2 = Id(G)
&gt; H&lt;x, y&gt; := sub&lt; G | a^2, a^-1 * b &gt;;
&gt; H;
Finitely presented group H on 2 generators
Generators as words in group G
      x = a^2
      y = a^-1 * b
</PRE>
<HR>
<H3><A NAME = "9295">Example <TT>GrpFP_1_Subgroups2 (H75E50)</TT></A></H3>
Given the group G defined by the presentation
<P>
&lt; a, b    |    a<sup>8</sup>, b<sup>7</sup>, (ab)<sup>2</sup>, (a, b)<sup>9</sup> &gt;,
there is a homomorphism into Sym(9) defined by
<PRE>
   a -&gt; (2, 4)(3, 5)(6, 7)(8, 9),
   b -&gt; (1, 2, 3)(4, 6, 7)(5, 8, 9)
</PRE>We construct the subgroup H of G that is the preimage of the stabiliser
of the point 1 in G.
<P>
<P>
<PRE>
&gt; G&lt;a, b&gt; := Group&lt; a, b | a^2, b^3, (a*b)^7, (a, b)^9&gt;;
&gt; T := PermutationGroup&lt; 9 | (2, 4)(3, 5)(6, 7)(8, 9),
&gt;    (1, 2, 3)(4, 6, 7)(5, 8, 9) &gt;;
&gt; f := hom&lt; G -&gt; T | a -&gt; T.1, b -&gt;T.2 &gt;;
&gt; H := sub&lt; G | f &gt;;
&gt; H;
Finitely presented group H
Subgroup of group G defined by coset table
&gt; Index(G, H);
9
</PRE>
Using the function <A  HREF = "text815.htm#GrpFP_1:GeneratingWords">GeneratingWords</A>, we obtain a set of
generators for H.
<P>
<P>
<PRE>
&gt; print GeneratingWords(G, H);
      { a, b^-1 * a * b^3 * a * b, b * a * b * a * b * a * b^-1, 
        b^3, b^-1 * a * b * a * b * a * b, b * a * b^3 * a * b^-1 }
</PRE>
<HR>
<H4><A NAME = "9296">Index of a Subgroup: The Todd- Coxeter Algorithm</A></H4>

<P>
<P>
This section describes the simplest use of coset enumeration techniques in
Magma. Magma also provides interactive facilities for coset enumeration. For
information on these more advanced uses, the user is referred to
Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
<P>
<P>
The Todd-Coxeter implementation installed in Magma is based on the stand
alone coset enumeration programme <TT>ACE3</TT> developed by George Havas and
Colin Ramsay at the University of Queensland.
The reader should consult <A  HREF = "text807.htm#bib_cdhw_todd_coxeter">[CDHW73]</A> and
<A  HREF = "text807.htm#bib_havas_todd_coxeter">[Hav91]</A> for an explanation of the terminology and a 
general description of the algorithm. A manual for <TT>ACE3</TT> as well as the
sources of ACE3 can be found online <A  HREF = "text807.htm#bib_ace_homepage">[Ram]</A>.
<P>
<P>
Experienced users can control the Todd-Coxeter procedures invoked by the
functions described in this section with a wide range of parameters. For a
complete description of these parameters and their meanings we refer to the
manual entry for the function <A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> in
Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>. We just mention briefly the most important ones:
<P>
<A NAME = "GrpFP_1:CosetLimit"></A>
<PRE>
CosetLimit : RngIntElt  Default : 0
</PRE>
If <TT>CosetLimit</TT> is set to n, where n is a positive integer, then the
coset table may have at most n rows.  In other words, a maximum of
n cosets can be defined at any instant during the enumeration. It is ensured
in this case, that enough memory is allocated to store the requested number of
cosets, regardless of the value of the parameter <A  HREF = "text814.htm#GrpFP_1:Workspace">Workspace</A>.
<P>
If <TT>CosetLimit</TT> is set to 0 (default), the maximal number of active cosets
is determined by the size of the coset table (cf. parameter
<A  HREF = "text814.htm#GrpFP_1:Workspace">Workspace</A>)
and the number of columns of the coset table (i.e. the number of group
generators).
<P>
<P>
<A NAME = "GrpFP_1:Workspace"></A>
<PRE>
Workspace : RngIntElt  Default : 4000000
</PRE>
The number of words allocated for the coset table. Note that if
<A  HREF = "text814.htm#GrpFP_1:CosetLimit">CosetLimit</A> is set, at least as much memory is allocated as
is necessary to store the requested number of cosets.
<P>
<A NAME = "GrpFP_1:Strategy"></A>
<PRE>
Strategy : MonStgElt
</PRE>
Using this parameter one of several predefined strategies can be selected.
(See the manual entry for the function <A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A>
in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A> for a complete list.) The most important values
of this parameter are:
<DL COMPACT class='compact'>
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>"Easy": This selects a combination of parameters, which in
 situations where an overflow is not expected is likely to produce a result
 more quickly and using less memory than the default strategy. This strategy
 will fail for more complicated enumerations.
<DT><IMG SRC="closed.gif" ALT="" WIDTH=7 HEIGHT=7></DT><DD>"Hard": This selects a combination of parameters, which is
 more likely to produce a finite result for difficult coset enumerations than
 the default strategy. This strategy will use more memory and enumerations
 usually will take longer.</DL>


<P>
The strategy employed by the functions <TT>Order</TT> and <TT>FactoredOrder</TT>
may involve trying to obtain information on certain subgroups of G.
Whether or not an attempt is made to construct a presentation for a subgroup
arising in the course of the computation by means of Reidemeister-Schreier
rewriting, is controlled by three parameters:
<P>
var UseRewrite: BoolElt                 Default: <TT>true</TT>
var MinIndex: RngIntElt                 Default: 10
var MaxIndex: RngIntElt                 Default: 1000
If <TT>UseRewrite</TT> is set to <TT>false</TT>, attempts to construct presentations
for subgroups are not made. Otherwise, <TT>MinIndex</TT> and <TT>MaxIndex</TT>
specify for subgroups of which index range Reidemeister-Schreier rewriting
is done.
<P>
The following strategy is used for trying to determine the order of G.
<P>
<P>
<DL COMPACT class='compact'>
<DT>(1)</DT><DD>Check whether G is free. If so, G is either trivial or
infinite.
<DT>(2)</DT><DD>Check whether the presentation for G is deficient (i.e. whether
the number of relations is smaller than the number of generators). If it is,
G is infinite.
<DT>(3)</DT><DD>Check the subgroups of G with known order. If such a subgroup is
known to be infinite or if we can compute its index in G, we're done.
<DT>(4)</DT><DD>Try to compute the index of G in a supergroup of known order. (An
infinite supergroup in which G has finite index proves G to be infinite.)
<DT>(5)</DT><DD>Try to enumerate the cosets of the trivial subgroup in G.
<DT>(6)</DT><DD>Check the subgroups of known or easily computable index in G. If
we can compute the order of such a subgroup or prove that it is infinite,
we're done.
<DT>(7)</DT><DD>Try to enumerate the cosets of some subgroups occurring "naturally"
in the presentation of G.
<DT>(8)</DT><DD>Check the supergroups in which G has known or easily computable
index. If we can compute the order of a supergroup or prove that it is
infinite, we're done.
<DT>(9)</DT><DD>Try to rewrite G w.r.t. some supergroup and to enumerate the
cosets of the trivial subgroup using the resulting presentation.
<P>
<P>
</DL>
Steps requiring coset enumeration in G or a supergroup of G are skipped,
if no relations are known for this group. Steps involving Reidemeister-Schreier
rewriting may be skipped according to the values of the parameters mentioned
above.
<P>
<P>
<P>
Experienced users can control the behaviour of coset enumerations which may be
invoked by the functions <TT>Order</TT> and <TT>FactoredOrder</TT> with a wide range
of parameters. Both functions -- in addition to the parameters mentioned above
-- accept the same parameters as the function
<A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> described in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
<H5><A NAME = "9297"></A><A NAME = "GrpFP_1:ToddCoxeter">ToddCoxeter</A>(G, H: parameters) : GrpFP, GrpFP -&gt; RngIntElt, Map, RngIntElt, RngIntElt</H5>
<BLOCKQUOTE>
Given a subgroup H of the fp-group G, this function attempts to build up
a coset table of H in G using the Todd-Coxeter procedure.
<P>
<P>
The first return value is the index of H in G (or 0, if the enumeration
fails to complete).
The other values returned are the coset table map, the maximum number of
simultaneously active cosets, and the total number of cosets defined during
the enumeration.
<P>
<P>
Experienced users can control the Todd-Coxeter procedure invoked by this
function with a wide range of parameters. This function accepts the same
parameters as the function <A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> described
in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<H5><A NAME = "9298"></A><A NAME = "GrpFP_1:Index">Index</A>(G, H: parameters) : GrpFP, GrpFP -&gt; RngIntElt</H5>
<H5>FactoredIndex(G, H: parameters) : GrpFP, GrpFP -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]</H5>
<BLOCKQUOTE>
Given a subgroup H of the fp-group G, these functions attempt to
determine the index of H in G by enumerating the cosets of H
using the Todd-Coxeter procedure. The index is returned as a positive integer
(<TT>Index</TT>) or as a sequence of factors (<TT>FactoredIndex</TT>), respectively.
If the coset enumeration fails to complete with a closed coset table,
<TT>Index</TT> returns a value of 0, whereas <TT>FactoredIndex</TT> reports an error.
No conclusion can be drawn in this case.
<P>
<P>
Experienced users can control the Todd-Coxeter procedure invoked by these
functions with a wide range of parameters. Both functions accept the same
parameters as the function <A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> described
in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9299">Example <TT>GrpFP_1_Index1 (H75E51)</TT></A></H3>
The classical test example for Todd-Coxeter programmes is the enumeration of
the 448 cosets of the subgroup H =  &lt;a<sup>2</sup>, a<sup> - 1</sup>b&gt; in the group
G =  &lt;a, b | a<sup>8</sup>, b<sup>7</sup>, (ab)<sup>2</sup>, (a<sup> - 1</sup>b)<sup>3</sup>&gt;.
<P>
<P>
<PRE>
&gt; F&lt;x, y&gt; := FreeGroup(2);
&gt; G&lt;a, b&gt; := quo&lt;F | x^8, y^7, (x*y)^2, (x^-1*y)^3&gt;;
&gt; H := sub&lt;G | a^2,a^-1*b&gt;;
&gt; Index(G, H);
448
</PRE>
<HR>
<H5><A NAME = "9300"></A><A NAME = "GrpFP_1:Order">Order</A>(G: parameters) : GrpFP -&gt; RngIntElt</H5>
<H5><A NAME = "GrpFP_1:FactoredOrder">FactoredOrder</A>(G: parameters) : GrpFP -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]</H5>
<BLOCKQUOTE>
Given an fp-group G, this function attempts to determine the order of G or
to prove that G is infinite. If a finite order can be computed, the function
<TT>Order</TT> returns the order as a positive integer, whereas the function
<TT>FactoredOrder</TT> returns a sequence of prime power factors. The function
<TT>FactoredOrder</TT> reports an error in all other cases, whereas the function
<TT>Order</TT> returns the object <TT>Infinity</TT>, if G can be shown to be
infinite and returns a value of 0 if neither a finite value for the group order
nor a proof for the infinity of G can be obtained. No conclusions can be
drawn from a return value 0 of <TT>Order</TT>.
<P>
<P>
In addition to the parameters controlling possibly invoked coset enumerations,
there exist some other parameters controlling the strategy used by the
functions <TT>Order</TT> and <TT>FactoredOrder</TT>. These parameters are described
below.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9301">Example <TT>GrpFP_1_Order11 (H75E52)</TT></A></H3>
We use the function <A  HREF = "text814.htm#GrpFP_1:Order">Order</A> without any parameters to compute
the order of the group
 G =  &lt;a, b | a<sup>8</sup>, b<sup>7</sup>, (ab)<sup>2</sup>, (a<sup> - 1</sup>b)<sup>3</sup>&gt;.
<P>
<P>
<PRE>
&gt; G&lt;x, y&gt; := Group&lt;x,y | x^8, y^7, (x*y)^2, (x^-1*y)^3&gt;;
&gt; G;
Finitely presented group G on 2 generators
Relations
    x^8 = Id(G)
    y^7 = Id(G)
    (x * y)^2 = Id(G)
    (x^-1 * y)^3 = Id(G)
&gt; Order(G);
10752
</PRE>
<HR>
<H3><A NAME = "9302">Example <TT>GrpFP_1_HN (H75E53)</TT></A></H3>
The Harada-Norton simple group has the presentation
<PRE>
     &lt; x, a, b, c, d, e, f, g |  
	 x^2, a^2, b^2, c^2, d^2, e^2, f^2, g^2,
          (x,a), (x,g),
	 (bc)^3, (bd)^2, (be)^2, (bf)^2, (bg)^2,
          (cd)^3, (ce)^2, (cf)^2, (cg)^2,
          (de)^3, (df)^2, (dg)^2,
          (ef)^3, (eg)^2,
          (fg)^3,
          (b, xbx),
          (a, edcb), (a,f)dcbdcd, (ag)^5,
          (cdef, xbx), (b, xcdefx), (cdef, xcdefx) &gt;.
</PRE>The subgroup generated by x, b, c, d, e, f, g has index 1,140,000. We use
the parameter <A  HREF = "text826.htm#GrpFP_2:CosetLimit">CosetLimit</A> to request a sufficiently large
coset table.
For the enumeration we choose the predefined strategy <A  HREF = "text826.htm#GrpFP_2:Hard">Hard</A>
with the modification of a complete C-style lookahead
(<A  HREF = "text826.htm#GrpFP_2:Lookahead">Lookahead</A> <TT>:= 2</TT>).
<P>
<P>
<PRE>
&gt; HN&lt;x, a, b, c, d, e, f, g&gt; := 
&gt;     Group&lt; x, a, b, c, d, e, f, g |
&gt;              x^2, a^2, b^2, c^2, d^2, e^2, f^2, g^2,
&gt;              (x, a), (x, g),
&gt;              (b*c)^3, (b*d)^2, (b*e)^2, (b*f)^2, (b*g)^2,
&gt;              (c*d)^3, (c*e)^2, (c*f)^2, (c*g)^2,
&gt;              (d*e)^3, (d*f)^2, (d*g)^2,
&gt;              (e*f)^3, (e*g)^2,
&gt;              (f*g)^3,
&gt;              (b, x*b*x), 
&gt;              (a, e*d*c*b), (a, f)*d*c*b*d*c*d, (a*g)^5,
&gt;              (c*d*e*f, x*b*x), (b, x*c*d*e*f*x),
&gt;              (c*d*e*f, x*c*d*e*f*x) 
&gt;           &gt;;
&gt; H := sub&lt;HN | x,b,c,d,e,f,g &gt;; 
&gt; idx := Index(HN, H: Print := true, CosetLimit := 1200000,
&gt;                     Strategy := "Hard", Lookahead := 2);
INDEX = 1140000
 (a=1140000 r=1471 h=1168483 n=1168483;
  l=2945 c=201.17;
  m=1142416 t=1470356)
&gt; idx;
1140000

</PRE>
<HR>
<H3><A NAME = "9303">Example <TT>GrpFP_1_Family (H75E54)</TT></A></H3>
We use a function representing a parametrised presentation to 
determine the order of a collection of groups obtained by systematically 
varying one relation. We select the predefined coset enumeration strategy
<A  HREF = "text826.htm#GrpFP_2:Easy">Easy</A> for the order computations.
<P>
<P>
<P>
<PRE>
&gt; Grp := func&lt; p, q, r, s | 
&gt; 
&gt;   Group&lt;
&gt;     x, y, z, h, k, a | 
&gt;     x^2, y^2, z^2, (x,y), (y,z), (x,z), h^3, k^3, (h,k), 
&gt;     (x,k), (y,k), (z,k), x^h*y, y^h*z, z^h*x, a^2, a*x*a*y,
&gt;     a*y*a*x, (a,z), (a,k), x^p*y^q*z^r*k^s*(a*h)^2 &gt;
&gt;        &gt;;
&gt; [ &lt; &lt;i,j,k,l&gt;, Order(Grp(i,j,k,l) : Strategy := "Easy") &gt;
&gt; : i, j, k in [0..1], l in [0..2] ];
[ &lt;&lt;0, 0, 0, 0&gt;, 144&gt;, &lt;&lt;0, 0, 1, 0&gt;, 18&gt;, &lt;&lt;0, 1, 0, 0&gt;, 72&gt;, 
  &lt;&lt;0, 1, 1, 0&gt;, 36&gt;, &lt;&lt;1, 0, 0, 0&gt;, 18&gt;, &lt;&lt;1, 0, 1, 0&gt;, 144&gt;,
  &lt;&lt;1, 1, 0, 0&gt;, 36&gt;, &lt;&lt;1, 1, 1, 0&gt;, 72&gt;, &lt;&lt;0, 0, 0, 1&gt;, 144&gt;,
  &lt;&lt;0, 0, 1, 1&gt;, 18&gt;, &lt;&lt;0, 1, 0, 1&gt;, 72&gt;, &lt;&lt;0, 1, 1, 1&gt;, 36&gt;,
  &lt;&lt;1, 0, 0, 1&gt;, 18&gt;, &lt;&lt;1, 0, 1, 1&gt;, 144&gt;, &lt;&lt;1, 1, 0, 1&gt;, 36&gt;,
  &lt;&lt;1, 1, 1, 1&gt;, 72&gt;, &lt;&lt;0, 0, 0, 2&gt;, 144&gt;, &lt;&lt;0, 0, 1, 2&gt;, 18&gt;,
  &lt;&lt;0, 1, 0, 2&gt;, 72&gt;, &lt;&lt;0, 1, 1, 2&gt;, 36&gt;, &lt;&lt;1, 0, 0, 2&gt;, 18&gt;,
  &lt;&lt;1, 0, 1, 2&gt;, 144&gt;, &lt;&lt;1,1, 0, 2&gt;, 36&gt;, &lt;&lt;1, 1, 1, 2&gt;, 72&gt; ]
</PRE>
<HR>
<H4><A NAME = "9304">Implicit Invocation of the Todd- Coxeter Algorithm</A></H4>

<P>
<P>
Several functions working with finitely presented groups at some point
require a coset table of a subgroup and may invoke a coset enumeration
indirectly, e.g. the function <A  HREF = "text815.htm#GrpFP_1:meet">meet</A> or the function
<A  HREF = "text815.htm#GrpFP_1:Normaliser">Normaliser</A>. The default behaviour for such implicitly called
coset enumerations is the same as the one for coset enumerations invoked
explicitly, e.g. using the function <A  HREF = "text814.htm#GrpFP_1:ToddCoxeter">ToddCoxeter</A>.
<P>
<P>
If such an implicitly called coset enumeration fails to produce a closed
coset table, the calling function may terminate with a runtime error.
<P>
<P>
Experienced users can control the behaviour of indirectly invoked coset
enumerations with a set of global parameters. These global parameters are
valid for all implicitly called coset enumerations. For a detailed description
of the available parameters and their meanings, we refer to
Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>. Note that coset enumerations which are
<I>explicitly</I> invoked, e.g. by a call to the function
<A  HREF = "text814.htm#GrpFP_1:Index">Index</A>, are not affected by this global set of parameters.
Parameters for these functions have to be specified in the function call.


<H5><A NAME = "9305"></A><A NAME = "GrpFP_1:SetGlobalTCParameters">SetGlobalTCParameters</A>(: parameters) : -&gt;</H5>
<BLOCKQUOTE>
This function sets the parameter values used for indirect invocations of the
Todd-Coxeter coset enumeration procedure. The parameters accepted and their
default values are the same as for the function
<A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> described in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<H5><A NAME = "9306">UnsetGlobalTCParameters() : -&gt;</A></H5>
<BLOCKQUOTE>
This function restores the default values for the parameters used for indirect
invocations of the Todd-Coxeter coset enumeration procedure. For a
description of the meanings of the parameters and their default values, see
<A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9307">Example <TT>GrpFP_1_ImplicitCosetEnumeration (H75E55)</TT></A></H3>
We consider again the Harada-Norton simple group with the presentation
<P>
<PRE>
   &lt; x, a, b, c, d, e, f, g |  
        x^2, a^2, b^2, c^2, d^2, e^2, f^2, g^2,
        (x,a), (x,g),
        (bc)^3, (bd)^2, (be)^2, (bf)^2, (bg)^2,
        (cd)^3, (ce)^2, (cf)^2, (cg)^2,
        (de)^3, (df)^2, (dg)^2,
        (ef)^3, (eg)^2,
        (fg)^3,
        (b, xbx),
        (a, edcb), (a,f)dcbdcd, (ag)^5,
        (cdef, xbx), (b, xcdefx), (cdef, xcdefx) &gt;
</PRE>and the subgroup H generated by x, b, c, d, e, f, g.
<P>
<P>
<PRE>
&gt; HN&lt;x, a, b, c, d, e, f, g&gt; := 
&gt;     Group&lt; x, a, b, c, d, e, f, g |
&gt;              x^2, a^2, b^2, c^2, d^2, e^2, f^2, g^2,
&gt;              (x, a), (x, g),
&gt;              (b*c)^3, (b*d)^2, (b*e)^2, (b*f)^2, (b*g)^2,
&gt;              (c*d)^3, (c*e)^2, (c*f)^2, (c*g)^2,
&gt;              (d*e)^3, (d*f)^2, (d*g)^2,
&gt;              (e*f)^3, (e*g)^2,
&gt;              (f*g)^3,
&gt;              (b, x*b*x), 
&gt;              (a, e*d*c*b), (a, f)*d*c*b*d*c*d, (a*g)^5,
&gt;              (c*d*e*f, x*b*x), (b, x*c*d*e*f*x),
&gt;              (c*d*e*f, x*c*d*e*f*x) &gt;;
&gt; H := sub&lt;HN | x,b,c,d,e,f,g &gt;; 
</PRE>
H has index 1,140,000 in HN. Using the default settings, the normaliser
of H in HN cannot be computed.
<P>
<P>
<PRE>
&gt; N := Normaliser(HN, H);

&gt;&gt; N := Normaliser(HN, H);
                  ^
Runtime error in 'Normaliser': Coset table is not closed


</PRE>
We change the global parameters for implicitly called coset enumerations and
try again.
<P>
<P>
<PRE>
&gt; SetGlobalTCParameters( : Strategy := "Hard");
&gt; N := Normaliser(HN, H);
</PRE>
With these parameters, the computation works. We see that H is
self-normalising in HN.
<P>
<P>
<PRE>
&gt; Index(HN, N);
1140000
&gt; IsSelfNormalising(HN, H);
true
</PRE>
<HR>
<H4><A NAME = "9308">Constructing a Presentation for a  Subgroup</A></H4>



<H5><A NAME = "9309">Introduction</A></H5>

<P>
<P>
Let H be a subgroup of finite index in the finitely presented group
G.  It frequently happens that it is desirable to construct a set of
defining relations for H from those of G.  Such a presentation can be
obtained either on a set of Schreier generators for H or on the given
generators of H using the Reidemeister-Schreier rewriting
technique <A  HREF = "text807.htm#bib_magnus_cgt">[MKS76]</A>, if necessary together with extended coset
enumeration <A  HREF = "text807.htm#bib_extended_tc">[AR84]</A>, <A  HREF = "text807.htm#bib_havas_tietze">[HKRR84]</A>.
<P>
We emphasise that if the user wishes only to determine the structure
of the maximal abelian quotient of H, then the function
<A  HREF = "text813.htm#GrpFP_1:AbelianQuotientInvariants">AbelianQuotientInvariants</A> should be used. In this 
case there is no need to first construct a presentation for H using the 
<A  HREF = "text814.htm#GrpFP_1:Rewrite">Rewrite</A> function described below, since
<A  HREF = "text813.htm#GrpFP_1:AbelianQuotientInvariants">AbelianQuotientInvariants</A>
employs a special form of the Reidemeister-Schreier rewriting process which 
abelianises each relator as soon as it is constructed.  Thus, compared to
the function <TT>Rewrite</TT>, the function <TT>AbelianQuotientInvariants</TT>
can be applied to subgroups of much larger index.


<H5><A NAME = "9310">Rewriting</A></H5>



<H5><A NAME = "9311"></A><A NAME = "GrpFP_1:Rewrite">Rewrite</A>(G, H : parameters) : GrpFP, GrpFP -&gt; GrpFP, Map</H5>
<BLOCKQUOTE>
Given a finitely presented group G and a subgroup H having finite index 
in G, return a group R isomorphic to H with a presentation on (some of)
the Schreier generators of H in G.  The group R will be created as a
subgroup of G and defining relations of R on its generators will be
available.
Note that the generators of R will, in general, not correspond to the
generators of H.  The isomorphism from H onto R is returned
as second return value.
<P>
<P>
This function may require the computation of a coset table. Experienced users
can control the behaviour of a possibly invoked coset enumeration with a set of
global parameters. These global parameters can be changed using the function
<A  HREF = "text814.htm#GrpFP_1:SetGlobalTCParameters">SetGlobalTCParameters</A>. For a detailed description of the
available parameters and their meanings, we refer to Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
<P>
<P>
<PRE>
     Simplify: BoolElt                   Default: <TT>true</TT>
</PRE>
If this Boolean-valued parameter is given the value <TT>true</TT>, then the 
resulting presentation for H will be simplified (default).
The function <TT>Rewrite</TT> returns a finitely presented group that is 
isomorphic to H.  If simplification is requested (by setting
<TT>Simplify := true</TT>) 
then the simplification procedures are invoked (see next section).
These procedures perform a sequence of Tietze transformations which 
typically result in a considerable simplification of the presentation
produced by the rewriting process.  Alternatively, the user can set 
<TT>Simplify := false</TT> and then perform the simplification directly if
desired. (See next section). If simplification is not requested as part 
of <TT>Rewrite</TT>, a small amount of simplification is performed on the
presentation before it is returned.
<P>
<P>
<PRE>
     EliminationLimit: RngIntElt         Default: 100
</PRE>
<P>
<PRE>
     ExpandLimit: RngIntElt              Default: 150
</PRE>
<P>
<PRE>
     GeneratorsLimit: RngIntElt          Default: 0
</PRE>
<P>
<PRE>
     LengthLimit: RngIntElt              Default: &infin;
</PRE>
<P>
<PRE>
     SaveLimit: RngIntElt                Default: 10
</PRE>
<P>
<PRE>
     SearchSimultaneous: RngIntElt       Default: 20
</PRE>
<P>
<PRE>
     Iterations: RngIntElt               Default: 10000
</PRE>
<P>
<PRE>
     Print: RngIntElt                    Default: 0
</PRE>
These parameters control the simplification.  See the description of
<A  HREF = "text817.htm#GrpFP_1:Simplify">Simplify</A> for an explanation of these parameters.
</BLOCKQUOTE>
<H5><A NAME = "9312"></A><A NAME = "GrpFP_1:Rewrite_var">Rewrite</A>(G, ~H : parameters) : GrpFP, GrpFP -&gt;</H5>
<BLOCKQUOTE>
Given a finitely presented group G and a subgroup H having finite index 
in G, compute a defining set of relations for H on the existing generators,
using extended coset enumeration and Reidemeister-Schreier rewriting,
and change the presentation of H accordingly.
<P>
<P>
If the computation is successful, defining relations for H on its generators
will be available at the end; any previously computed relations of H will
be discarded.  If the computation is unsuccessful, H is not changed.  In
any case, both the isomorphism type of H and its embedding into G as a
subgroup is preserved by this function.
<P>
<P>
<PRE>
     Simplify: BoolElt                   Default: <TT>true</TT>
</PRE>
If this parameter is given the value <TT>true</TT> (default), then an attempt
will be made to simplify the constructed set of relations by substring
searches, that is, Tietze transformations not changing any generators.  The
generating set of H is not modified by this process.
<P>
Moreover, the extended coset enumeration can be controlled by a wide range
of parameters. The function <TT>Rewrite</TT> -- in addition to the parameter
<TT>Simplify</TT> -- accepts the same parameters as the function
<A  HREF = "text826.htm#GrpFP_2:CosetEnumerationProcess">CosetEnumerationProcess</A> described in Chapter <A  HREF = "text823.htm#9460">FINITELY PRESENTED GROUPS: ADVANCED</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9313">Example <TT>GrpFP_1_Rewrite (H75E56)</TT></A></H3>
Starting with the group G defined by
&lt; x, y | x<sup>2</sup>, y<sup>3</sup>, (xy)<sup>12</sup>, (xy)<sup>6</sup>(xy<sup> - 1</sup>)<sup>6</sup> &gt;,
we construct a subgroup K of index 3 generated by the words x, yxy<sup> - 1</sup>
and yxy<sup> - 1</sup>xy<sup> - 1</sup>xy. We present the subgroup K, compute its abelian
quotient structure and then show that the class 30 2-quotient of K
has order 2<sup>62</sup>.
<P>
<P>
<PRE>
&gt; G&lt;x, y&gt; := Group&lt; x, y | x^2, y^3, (x*y)^12, (x*y)^6*(x*y^-1)^6 &gt;;
&gt; G;

Finitely presented group G on 2 generators
Relations
       x^2 = Id(G)
       y^3 = Id(G)
       (x * y)^12 = Id(G)
       x * y * x * y * x * y * x * y * x * y * x * y * x * y^-1 * x * 
          y^-1 * x * y^-1 * x * y^-1 * x * y^-1 * x * y^-1 = Id(G)

&gt; K := sub&lt; G | x, y*x*y^-1, y*x*y^-1*x*y^-1*x*y &gt;;
&gt; K;
Finitely presented group K on 3 generators
Generators as words in group G
       K.1 = x
       K.2 = y * x * y^-1
       K.3 = y * x * y^-1 * x * y^-1 * x * y
&gt; Index(G, K);
3
&gt; T := Rewrite(G, K);
&gt; T;
Finitely presented group T on 3 generators
Generators as words in group G
    T.1 = x
    T.2 = y * x * y^-1
    T.3 = x^y
Relations
    T.1^2 = Id(T)
    T.2^2 = Id(T)
    T.3^2 = Id(T)
    (T.3 * T.2 * T.1 * T.3 * T.2)^2 = Id(T)
    (T.1 * T.3 * T.2 * T.1 * T.3)^2 = Id(T)
    (T.1 * T.2 * T.1 * T.3 * T.2)^2 = Id(T)
&gt; AbelianQuotientInvariants(T);
[ 2, 2, 2 ]

&gt; Q2 := pQuotient(T, 2, 30);
&gt; FactoredOrder(Q2);
[ &lt;2, 62&gt; ]
</PRE>
<HR>
<H3><A NAME = "9314">Example <TT>GrpFP_1_Rewrite2 (H75E57)</TT></A></H3>
In this example we illustrate how the function <A  HREF = "text814.htm#GrpFP_1:Rewrite_var">Rewrite</A>
can be used to obtain a presentation of a finitely presented group on a
different set of generators.
<P>
<P>
We start with a presentation of L<sub>2</sub>(7) on two generators x and y.
<P>
<P>
<PRE>
&gt; F&lt;x,y&gt; := Group&lt; x, y | x^3 = 1, y^3 = 1, (x*y)^4 = 1,
&gt;                         (y*y^x)^2 = y^x*y &gt;;          
</PRE>
The group is also generated by the elements a = (xy)<sup>2</sup> and b = y.
<P>
<P>
<PRE>
&gt; H&lt;a,b&gt; := sub&lt;F | (x*y)^2, y &gt;;
&gt; Index(F,H);
1
</PRE>
At the moment, no defining relations of H isomorphic to F on the generators a and
b are known.
<P>
<P>
<PRE>
&gt; H;
Finitely presented group H on 2 generators
Index in group F is 1
Generators as words in group F
    a = (x * y)^2
    b = y
</PRE>
We apply the function <A  HREF = "text814.htm#GrpFP_1:Rewrite_var">Rewrite</A> to H as a subgroup of F
in order to compute defining relations on the generators a and b.
<P>
<P>
<PRE>
&gt; Rewrite(F, ~H);
&gt; H;
Finitely presented group H on 2 generators
Index in group F is 1
Generators as words in group F
    a = (x * y)^2
    b = y
Relations
    a^2 = Id(H)
    b^3 = Id(H)
    (a * b)^7 = Id(H)
    (a * b^-1 * a * b)^4 = Id(H)
    (b * a * b^-1 * a * b * a)^4 = Id(H)
</PRE>
The last relation turns out to be redundant; a and b are standard
generators for L<sub>2</sub>(7).
<P>
<P>
<PRE>
&gt; Order(DeleteRelation(H,5)) eq Order(H);
true
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text815.htm">[Next]</A><A  HREF = "text813.htm">[Prev]</A> <A  HREF = "text815.htm">[Right]</A> <A  HREF = "text813.htm">[Left]</A> <A  HREF = "text808.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>