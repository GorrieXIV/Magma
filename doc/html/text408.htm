<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Galois Module Structure</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text409.htm">[Next]</A><A  HREF = "text407.htm">[Prev]</A> <A  HREF = "text409.htm">[Right]</A> <A  HREF = "text407.htm">[Left]</A> <A  HREF = "text405.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "4230">Galois Module Structure</A></H3>

<P>
<P>
If the base field k for class field constructions is normal
with respect to some subfield k<sub>0</sub>, i.e. k/k<sub>0</sub> is
normal with Galois group G
and if the defining modulus of the ideal group is G--invariant, 
then G acts on the ideal group.
The following functions view ideal groups as Galois
modules.
Given an abelian extension A and parameters <TT>All</TT> and <TT>Over</TT>, 
we will consider this setup:
<P>
Let k be the <TT>BaseField</TT> of A and k<sub>1</sub> the coefficient field of k.
If <TT>All</TT> is <TT>true</TT>, let g := Aut(k/k<sub>1</sub>), otherwise, 
g := &lt; Over &gt;. In both cases we define k<sub>0</sub> := Fix(k, g).
In particular, if k is normal over the coefficient field k<sub>1</sub> then
k<sub>0</sub> = k<sub>1</sub> and g is the full Galois group.
<P>
In general g is not required to contain k<sub>1</sub> automorphisms, so that any
subset of the Q automorphism group is valid as input.
By construction, k is normal over k<sub>0</sub>, and g acts on the 
ideals of k. In general however, g does not act on the ideal
groups used to define A.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text408.htm#4231">Predicates</A>
<LI> <A  HREF = "text408.htm#4235">Constructions</A>
</UL>
<H4><A NAME = "4231">Predicates</A></H4>



<H5><A NAME = "4232"></A><A NAME = "FldAb:IsAbelian">IsAbelian</A>(A) : FldAb -&gt; BoolElt</H5>

<PRE>    All: BoolElt                        Default: <TT>false</TT></PRE>

<PRE>    Over: [Map]                         Default: []</PRE>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the abelian extension A is abelian 
over k<sub>0</sub>.
</BLOCKQUOTE>
<H5><A NAME = "4233"></A><A NAME = "FldAb:IsNormal">IsNormal</A>(A) : FldAb -&gt; BoolElt</H5>

<PRE>    All: BoolElt                        Default: <TT>false</TT></PRE>

<PRE>    Over: [Map]                         Default: []</PRE>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the abelian extension A is normal 
over k<sub>0</sub>. This tests whether the defining ideal group is a g-module.
</BLOCKQUOTE>
<H5><A NAME = "4234"></A><A NAME = "FldAb:IsCentral">IsCentral</A>(A) : FldAb -&gt; BoolElt</H5>

<PRE>    All: BoolElt                        Default: <TT>false</TT></PRE>

<PRE>    Over: [Map]                         Default: []</PRE>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the abelian extension A is central 
over k<sub>0</sub>.  If k is cyclic over k<sub>0</sub> then
this is equivalent to checking if A is abelian over k<sub>0</sub>.
This tests whether the defining ideal group is a 
g--module with trivial action:
If N is the norm group of A, the group extension
1 to N to G to g to 1
is central.
</BLOCKQUOTE>
<H4><A NAME = "4235">Constructions</A></H4>



<H5><A NAME = "4236">GenusField(A): FldAb  -&gt; FldAb</A></H5>

<PRE>    All: BoolElt                        Default: <TT>false</TT></PRE>

<PRE>    Over: [Map]                         Default: []</PRE>
<BLOCKQUOTE>
The genus field is the maximal abelian extension of k<sub>0</sub> that is contained
in the abelian extension A. The result of this function is an abelian
extension of k<sub>0</sub>.
</BLOCKQUOTE>
<H5><A NAME = "4237">H2_G_A(A) : FldAb -&gt; ModTupRng</A></H5>
<BLOCKQUOTE>
For A such that A is normal over Q with base field k that is
normal too, compute the 2nd cohomology group of the Galois group of
k acting on the ideal group defining A.
</BLOCKQUOTE>
<H5><A NAME = "4238">NormalSubfields(A) : FldAb -&gt; []</A></H5>

<PRE>    Quot: SeqEnum[RngIntElt]            Default: []</PRE>
<BLOCKQUOTE>
For an abelian extension, normal over Q and defined over a normal
number field k as base field, return a list of all
normal intermediate fields. If <TT>Quot</TT> is given,
restrict to fields where the norm group has the abelian invariants
as specified in <TT>Quot</TT>.
</BLOCKQUOTE>
<H5><A NAME = "4239">AbelianSubfield(A, U) : FldAb, GrpAb -&gt; FldAb</A></H5>
<H5>FixedField(A, U) : FldAb, GrpAb -&gt; FldAb</H5>

<PRE>    IsNormal: BoolElt                   Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
For an abelian extension A with norm group map G to I for some
finite abelian group G and a subgroup U&lt;G, define the field
corresponding to G/U, ie. the field fixed by U.
If <TT>IsNormal</TT> is given then any cohomology information that is present
is transferred to the new field - if possible.
</BLOCKQUOTE>
<H5><A NAME = "4240"></A><A NAME = "FldAb:CohomologyModule">CohomologyModule</A>(A) : FldAb -&gt; ModGrp, Map, Map, Map</H5>
<BLOCKQUOTE>
For an abelian extension A defined over some normal field k/Q, compute
the cohomology module (see Chapter <A  HREF = "text773.htm#8812">COHOMOLOGY AND EXTENSIONS</A>). The maps returned give the
transition between the Z-modules used in the cohomology package and the
ideal groups used to define A.
<P>
The first map returned maps between the automorphism group of k (as an
permutation group) and the actual automorphisms of the field. It is
obtained as the third return value of <A  HREF = "text399.htm#RngOrd:AutomorphismGroup">AutomorphismGroup</A>.
<P>
The second map maps between the ideal group used to create A and a
standart representation of the same group.
<P>
The third map maps between the standart representation of the norm group and
the Z-module.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text409.htm">[Next]</A><A  HREF = "text407.htm">[Prev]</A> <A  HREF = "text409.htm">[Right]</A> <A  HREF = "text407.htm">[Left]</A> <A  HREF = "text405.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>