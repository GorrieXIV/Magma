<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation of Genus One Models</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1471.htm">[Next]</A><A  HREF = "text1469.htm">[Prev]</A> <A  HREF = "text1471.htm">[Right]</A> <A  HREF = "text1469.htm">[Left]</A> <A  HREF = "text1468.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "16655">Creation of Genus One Models</A></H3>



<H5><A NAME = "16656">GenusOneModel(seq) : [ RngElt ] -&gt; ModelG1</A></H5>
<H5>GenusOneModel(n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1</H5>
<H5>GenusOneModel(R, n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1</H5>
<H5>GenusOneModel(n, str) : RngIntElt, MonStgElt -&gt; ModelG1</H5>
<BLOCKQUOTE>
The genus one model of degree n (where n is 2, 3, 4, or 5)
determined by the coefficients in the given sequence or string.
The coefficients may belong to any ring.
<P>
A sequence [a, b, c, d, e] of length 5 is interpreted as the
degree 2 model ax<sup>4</sup> + bx<sup>3</sup>z + cx<sup>2</sup>z<sup>2</sup> + dxz<sup>3</sup> + ez<sup>4</sup>.
A sequence [f, g, h, a, b, c, d, e] of length 8 is interpreted as the degree 2
model y<sup>2</sup> + y(fx<sup>2</sup> + gxz + hz<sup>2</sup>) - (ax<sup>4</sup> + bx<sup>3</sup>z + cx<sup>2</sup>z<sup>2</sup> + dxz<sup>3</sup> + ez<sup>4</sup>).
<P>
A sequence [a, b, c, d, e, f, g, h, i, j] of length 10 is interpreted as the
degree 3 model
ax<sup>3</sup> + by<sup>3</sup> + cz<sup>3</sup> + dx<sup>2</sup>y + ex<sup>2</sup>z + fy<sup>2</sup>x + gy<sup>2</sup>z + hz<sup>2</sup>x + iz<sup>2</sup>y + jxyz.
<P>
Sequences of lengths 20 or 50 are interpreted as models of degree 4 or 5
respectively; however, it is easier to create these by specifying matrices
instead (see below).
<P>
The sequence of coefficients can be recovered by calling <TT>Eltseq</TT>.
</BLOCKQUOTE>
<H5><A NAME = "16657">GenusOneModel(C) : Crv  -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
A genus one model that represents the given curve C.
<P>
For degree 2, C should either be a subscheme of a weighted projective
space P(1, 1, 2), or a hyperelliptic curve. For degrees n=3, 4, or 5,
C should be a genus one normal curve of degree n; in other words,
a plane cubic for n=3, an intersection of two quadrics in P<sup>3</sup> for n=4,
or an intersection of five quadrics in P<sup>4</sup> for n=5.
</BLOCKQUOTE>
<H5><A NAME = "16658">GenusOneModel(f) : RngMPolElt -&gt; ModelG1</A></H5>
<H5>GenusOneModel(f) : RngUPolElt -&gt; ModelG1</H5>
<H5>GenusOneModel(seq) : [ RngMPolElt ] -&gt; ModelG1</H5>
<BLOCKQUOTE>
The genus one model given by the polynomial f or the sequence of
equations <TT>seq</TT>.
</BLOCKQUOTE>
<H5><A NAME = "16659">GenusOneModel(n, E) : RngIntElt, CrvEll -&gt; ModelG1, Crv, MapSch, MapSch</A></H5>
<BLOCKQUOTE>
A genus one model of degree n (where n is 2, 3, 4, or 5)
representing the elliptic curve E embedded in P<sup>n - 1</sup>
via the linear system |n.O|.
Also returned are the image of the embedding as a curve C
together with the maps of schemes E to C and C to E.
</BLOCKQUOTE>
<H5><A NAME = "16660">GenusOneModel(mat) : Mtrx -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
The genus one model of degree 5 associated to the given 5 x 5 matrix.
</BLOCKQUOTE>
<H5><A NAME = "16661">GenusOneModel(mats) : [ AlgMatElt ] -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
The genus one model of degree 4 determined by the given
pair of 4 x 4 symmetric matrices in the sequence <I>mats</I>.
(The matrices can be recovered by calling <TT>ModelToMatrices</TT>).
</BLOCKQUOTE>
<H5><A NAME = "16662">IsGenusOneModel(f) : RngUPolElt -&gt; BoolElt, ModelG1</A></H5>
<H5>IsGenusOneModel(f) : RngMPolElt -&gt; BoolElt, ModelG1</H5>
<H5>IsGenusOneModel(seq) : [ RngMPolElt ] -&gt; BoolElt, ModelG1</H5>
<H5>IsGenusOneModel(mat) : Mtrx -&gt; BoolElt, ModelG1</H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the given polynomial, sequence of polynomials,
or matrix determines a "genus one model" in the sense described in the
introduction to this chapter. When true, the model is also returned.
<P>
<I>Important note:</I> This does <I>not</I> imply that the associated scheme
is a curve of genus 1.  Degenerate models are allowed.
</BLOCKQUOTE>
<H5><A NAME = "16663">GenericModel(n) : RngIntElt -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
The generic genus one model of degree n, where n is 2, 3, 4 or 5.
The coefficients are indeterminates in a suitable polynomial ring.
</BLOCKQUOTE>
<H5><A NAME = "16664">RandomGenusOneModel(n) : RngIntElt -&gt; ModelG1</A></H5>
<H5>RandomModel(n) : RngIntElt -&gt; ModelG1</H5>

<PRE>    Size: RngIntElt                     Default: </PRE>
<BLOCKQUOTE>
A random genus one model of degree n, where n is 2, 3, 4, or 5.
The optional parameter <TT>Size</TT> is passed to <TT>RandomSL</TT> or <TT>RandomGL</TT>.
</BLOCKQUOTE>
<H5><A NAME = "16665">ChangeRing(model, R) : ModelG1, Rng -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
The genus one model defined over the ring R obtained by coercing the
coefficients of the given genus one model into R.
</BLOCKQUOTE>
<H5><A NAME = "16666">CompleteTheSquare(model) : ModelG1 -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
Given a genus one model of degree 2, returns a simplified genus one model
of degree 2 without cross terms; this is computed by completing the square
on the multivariate polynomial defining the original model.
</BLOCKQUOTE>
<H5><A NAME = "16667">CubicFromPoint(E, P) : CrvEll, PtEll -&gt; RngMPolElt, MapSch, Pt</A></H5>
<BLOCKQUOTE>
The 3-covering corresponding to the rational point P on
an elliptic curve E.
The 3-covering is returned as the equation of a projective plane cubic
curve.
Also returned are the covering map and a point that maps to P
under the covering map.
</BLOCKQUOTE>
<H5><A NAME = "16668">HesseModel(n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
A genus one model of degree n invariant under the standard representation
of the Heisenberg group. The second argument should be a sequence of two ring elements.
</BLOCKQUOTE>
<H5><A NAME = "16669">DiagonalModel(n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1</A></H5>
<BLOCKQUOTE>
A genus one model of degree n invariant under the diagonal action of &mu;<sub>n</sub>.
The second argument should be a sequence of n ring elements.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "16670">Example <TT>CrvG1_generic-model (H130E1)</TT></A></H3>
We construct the genus one model of degree 5 obtained from the generic
elliptic curve E<sub>a, b</sub> : y<sup>2</sup> = x<sup>3</sup> + ax + b over Q(a, b).
The model is the image of E<sub>a, b</sub> under the embedding in P<sup>4</sup>
given by the linear system |5.O|.
<P>
<P>
<PRE>
&gt; K&lt;a,b&gt; := FunctionField(Rationals(), 2);
&gt; Eab := EllipticCurve([a, b]);
&gt; model := GenusOneModel(5, Eab);
&gt; model;
[           0 -b*x1 - a*x2           x5           x4           x3]
[ b*x1 + a*x2            0           x4           x3           x2]
[         -x5          -x4            0          -x2            0]
[         -x4          -x3           x2            0           x1]
[         -x3          -x2            0          -x1            0]
</PRE>
From this matrix, which is the data storing the model,
the equations of the curve in P<sup>4</sup> can be computed;
they are quadratic forms given by
the 4 x 4 Pfaffians of the matrix.
<P>
<P>
<PRE>
&gt; Equations(model);
[
    -x1*x4 + x2^2,
    x1*x5 - x2*x3,
    b*x1^2 + a*x1*x2 + x2*x4 - x3^2,
    -x2*x5 + x3*x4,
    -b*x1*x2 - a*x2^2 + x3*x5 - x4^2
]
</PRE>
Note that the degree 5 model has the same invariants c4, c6, &Delta;
as E<sub>a, b</sub>:
<P>
<P>
<PRE>
&gt; Invariants(model);
-48*a
-864*b
-64*a^3 - 432*b^2
&gt; cInvariants(Eab), Discriminant(Eab);
[
    -48*a,
    -864*b
]
-64*a^3 - 432*b^2
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1471.htm">[Next]</A><A  HREF = "text1469.htm">[Prev]</A> <A  HREF = "text1471.htm">[Right]</A> <A  HREF = "text1469.htm">[Left]</A> <A  HREF = "text1468.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>