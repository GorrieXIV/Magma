<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Representation Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text669.htm">[Next]</A><A  HREF = "text667.htm">[Prev]</A> <A  HREF = "text669.htm">[Right]</A> <A  HREF = "text667.htm">[Left]</A> <A  HREF = "text653.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7687">Representation Theory</A></H3>

<P>
<P>
A set of functions are provided for computing with the characters of a group.
Full details of these functions may be found in Chapter <A  HREF = "text1039.htm#11721">CHARACTERS OF FINITE GROUPS</A>.
For convenience we include here two of the more useful character functions.
<P>
Also, functions are provided for computing with the modular representations
of a group. 
Full details of these functions may be found in Chapter <A  HREF = "text1023.htm#11419">MODULES OVER AN ALGEBRA</A>.
For the reader's convenience we include here the functions
which may be used to define a K[G]-module for a matrix group.
<P>
The functions described in this section apply only to finite groups for
which a base and strong generating set may be constructed.


<H5><A NAME = "7688">LinearCharacters(G) : GrpMat -&gt; [ Chtr ]</A></H5>
<BLOCKQUOTE>
A sequence containing the linear characters for the group G.
</BLOCKQUOTE>
<H5><A NAME = "7689">CharacterTable(G: parameters) : GrpMat -&gt; TabChtr</A></H5>
<BLOCKQUOTE>
Construct the table of ordinary irreducible characters for the group G.
<P>
<P>
<PRE>
     Al: MonStgElt                       Default: em "Default"
</PRE>
This parameter controls the algorithm used. The string <TT>"DS"</TT>
forces use of the
Dixon-Schneider algorithm. The string <TT>"IR"</TT> forces the use of Unger's
induction/reduction algorithm <A  HREF = "text652.htm#bib_chtr-table-unger">[Ung06a]</A>.
The <TT>"Default"</TT> algorithm is to use Dixon-Schneider for groups of order
&le;5000 and Unger's algorithm for larger groups. This may change in
future.
<P>
<P>
<PRE>
     DSSizeLimit: RngIntElt              Default: 0
</PRE>
When the default algorithm is selected, a positive value n for
<TT>DSSizeLimit</TT>
means that before using Unger's algorithm, the full character space is split
by some passes of Dixon-Schneider, restricted to using class matrices
corresponding to conjugacy classes with size at most n.
</BLOCKQUOTE>
<H5><A NAME = "7690">PermutationCharacter(G, H) : GrpMat, GrpMat -&gt; AlgChtrElt</A></H5>
<BLOCKQUOTE>
Given a group G and a subgroup H of G, construct the ordinary 
character afforded by the representation of G given by its action on 
the coset space of the subgroup H.
</BLOCKQUOTE>
<H5><A NAME = "7691">GModule(G) : GrpMat -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
The natural R[G]-module for the matrix group G.
</BLOCKQUOTE>
<H5><A NAME = "7692">GModule(G, A) : GrpMat, AlgMat -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
Let A be a matrix ring defined over the ring R and let G be a 
finite group defined on m generators. Let M denote the underlying
module of A. Suppose there is a one-to-one correspondence between
the generators of G and the generators [ A<sub>1</sub>, ..., A<sub>m</sub> ] of A.
The function <TT>GModule</TT> creates the R[G]-module corresponding to an
action of G on M defined by A, where the action of the i-th
generator of G on M is given by A<sub>i</sub>.
</BLOCKQUOTE>
<H5><A NAME = "7693">GModule(G, Q) : GrpMat, [ AlgMatElt ] -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
Let A be a matrix ring defined over the ring R and let G be a 
finite group defined on m generators. Let M denote the underlying
module of A. Given a sequence Q of m elements of A, the function 
<TT>GModule</TT> creates the R[G]-module corresponding to an action of 
G on M defined by Q, where the action of the i-th
generator of G on M is given by Q[i].
</BLOCKQUOTE>
<H5><A NAME = "7694">GModule(G, A, B) : GrpMat, GrpMat, GrpMat -&gt; ModGrp, Map</A></H5>
<BLOCKQUOTE>
Let A and B be normal subgroups of G such that B is contained 
in A. Further, assume that A/B is elementary abelian of order p<sup>n</sup>, 
p a prime. Let K denote the field of p elements. This function 
constructs a K[G]-module corresponding to the action of the group G 
on the elementary abelian section A/B of G.  The map from A to the 
K[G]-module's underlying vector space is also returned.
</BLOCKQUOTE>
<H5><A NAME = "7695">PermutationModule(G, H, R) : GrpMat, GrpMat, Rng -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
The permutation module for the matrix group G over the ring R defined by its 
action on the cosets of the subgroup H.
</BLOCKQUOTE>
<H5><A NAME = "7696">ChangeOfBasisMatrix(G, S) : GrpMat, ModGrp -&gt; AlgMatElt</A></H5>
<BLOCKQUOTE>
Given a matrix group G and a submodule S of its natural module,
return an invertible matrix with topmost rows a basis for S. 
Conjugating by the inverse of this matrix puts the generators of G 
into a block form that exhibits their action on S and the quotient module.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "7697">Example <TT>GrpMatGen_GModule (H64E30)</TT></A></H3>
We use the module machinery to refine an elementary abelian
normal subgroup by finding a normal subgroup contained in it.
<P>
<P>
<PRE>
&gt; G := MatrixGroup&lt;4, IntegerRing(4) |
&gt;  [ 3, 3, 1, 3, 0, 2, 2, 3, 3, 0, 1, 3, 3, 2, 2, 1 ],
&gt;  [ 2, 2, 3, 3, 0, 3, 1, 1, 3, 0, 1, 1, 2, 0, 1, 2 ] &gt;;
&gt; #G;
660602880
&gt; H := pCore(G, 2);
&gt; FactoredOrder(H);
[ &lt;2, 15&gt; ]
&gt; IsElementaryAbelian(H);
true
&gt; M, f := GModule(G, H, sub&lt;H|&gt;);
&gt; SM := Submodules(M);
&gt; #SM;
3
</PRE>
One of these submodules is 0, one is all <TT>M</TT>,
we are interested in the one in the middle. Note that the
result returned by <TT>Submodules</TT> is sorted by dimension.
<P>
<P>
<PRE>
&gt; N := SM[2] @@ f;
&gt; N;
MatrixGroup(4, IntegerRing(4))
Generators:
  [3 0 0 0]
  [0 3 0 0]
  [0 0 3 0]
  [0 0 0 3]
</PRE>
We have found <TT>N</TT>, a normal subgroup of <TT>G</TT>, contained
in the 2-core, with order 2.
<HR>
<PRE></PRE> <A  HREF = "text669.htm">[Next]</A><A  HREF = "text667.htm">[Prev]</A> <A  HREF = "text669.htm">[Right]</A> <A  HREF = "text667.htm">[Left]</A> <A  HREF = "text653.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>