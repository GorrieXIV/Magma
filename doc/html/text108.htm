<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creating and Modifying Tuples</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text109.htm">[Next]</A><A  HREF = "text107.htm">[Prev]</A> <A  HREF = "text109.htm">[Right]</A> <A  HREF = "text107.htm">[Left]</A> <A  HREF = "text105.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "849">Creating and Modifying Tuples</A></H3>



<H5><A NAME = "850">elt&lt; C | a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : SetCart, Elt, ..., Elt -&gt; Tup</A></H5>
<H5>C ! &lt; a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : SetCart, Elt, ..., Elt -&gt; Tup</H5>
<BLOCKQUOTE>
Given a cartesian product C = R <sub>1</sub> x ... x R<sub>k</sub> and a
sequence of elements a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub>, such that a<sub>i</sub>
belongs to the set R<sub>i</sub> (i = 1, ..., k), create the tuple
T = &lt; a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt;
of C.
<P>
</BLOCKQUOTE>
<H5><A NAME = "851">&lt; a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : Elt, ..., Elt -&gt; Tup</A></H5>
<BLOCKQUOTE>
Given a cartesian product C = R<sub>1</sub> x ... x R<sub>k</sub> and a
list of elements a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub>, such that a<sub>i</sub>
belongs to the set R<sub>i</sub>, (i = 1, ..., k), create the tuple
T = &lt; a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt;
of C. Note that if C does not already exist, it will be created
at the time this expression is evaluated.
</BLOCKQUOTE>
<H5><A NAME = "852">Append(T, x) : Tup, Elt -&gt; Tup</A></H5>
<BLOCKQUOTE>
Return the tuple formed by adding the object x to the end of the tuple T.
Note that the result lies in a new cartesian product of course.
<P>
</BLOCKQUOTE>
<H5><A NAME = "853">Append(~T, x) : Tup, Elt -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Destructively add the object x to the end of the tuple T.
Note that the new T lies in a new cartesian product of course.
</BLOCKQUOTE>
<H5><A NAME = "854">Prune(T) : Tup -&gt; Tup</A></H5>
<BLOCKQUOTE>
Return the tuple formed by removing the last term of the tuple T.
The length of T must be greater than 1.
Note that the result lies in a new cartesian product of course.
<P>
</BLOCKQUOTE>
<H5><A NAME = "855">Prune(~T) : Tup -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Destructively remove the last term of the tuple T.
The length of T must be greater than 1.
Note that the new T lies in a new cartesian product of course.
</BLOCKQUOTE>
<H5><A NAME = "856"></A><A NAME = "tuple:Flat2">Flat</A>(T) : Tup -&gt; Tup</H5>
<BLOCKQUOTE>
Construct the flattened version of the tuple T.
The flattening is done in the same way as <A  HREF = "text107.htm#tuple:Flat1">Flat</A>, namely
depth-first.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "857">Example <TT>Tuple_Tuple (H11E2)</TT></A></H3>
We build a set of pairs consisting of primes and their reciprocals.
<P>
<P>
<PRE>
&gt; C := car&lt; Integers(), RationalField() &gt;;
&gt; C ! &lt; 26/13, 13/26 &gt;;
&lt;2, 1/2&gt;
&gt; S := { C | &lt;p, 1/p&gt; : p in [1..25] | IsPrime(p) };
&gt; S;
{ &lt;5, 1/5&gt;, &lt;7, 1/7&gt;, &lt;2, 1/2&gt;, &lt;19, 1/19&gt;, &lt;17, 1/17&gt;, &lt;23, 1/23&gt;, &lt;11, 1/11&gt;, 
&lt;13, 1/13&gt;, &lt;3, 1/3&gt; }
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text109.htm">[Next]</A><A  HREF = "text107.htm">[Prev]</A> <A  HREF = "text109.htm">[Right]</A> <A  HREF = "text107.htm">[Left]</A> <A  HREF = "text105.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>