<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Representation Theory</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text646.htm">[Next]</A><A  HREF = "text644.htm">[Prev]</A> <A  HREF = "text646.htm">[Right]</A> <A  HREF = "text644.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "7269">Representation Theory</A></H3>

<P>
<P>
A set of functions are provided for computing with the characters of a group. Full
details of these functions may be found in Chapter <A  HREF = "text1039.htm#11721">CHARACTERS OF FINITE GROUPS</A>.
For convenience we include here two of the more useful character functions.
<P>
Also, functions are provided for computing with the modular representations
of a group. 
Full details of these functions may be found in Chapter <A  HREF = "text1023.htm#11419">MODULES OVER AN ALGEBRA</A>.
For the reader's convenience we include here the functions
which may be used to define a R[G]-module for a permutation group.


<H5><A NAME = "7270">CharacterTable(G: parameters) : GrpPerm -&gt; TabChtr</A></H5>
<BLOCKQUOTE>
Construct the table of ordinary irreducible characters for the group G.
<P>
<P>
<P>
<PRE>
     Al: MonStgElt                       Default: em "Default"
</PRE>
This parameter controls the algorithm used. The string <TT>"DS"</TT>
forces use of the
Dixon-Schneider algorithm. The string <TT>"IR"</TT> forces the use of Unger's
induction/reduction algorithm <A  HREF = "text628.htm#bib_chtr-table-unger">[Ung06a]</A>.
The <TT>"Default"</TT> algorithm is to use Dixon-Schneider for groups of order
&le;5000 and Unger's algorithm for larger groups. This may change in
future.
<P>
<P>
<PRE>
     DSSizeLimit: RngIntElt              Default: 0
</PRE>
When the default algorithm is selected, a positive value n for
<TT>DSSizeLimit</TT>
means that before using Unger's algorithm, the full character space is split
by some passes of Dixon-Schneider, restricted to using class matrices
corresponding to conjugacy classes with size at most n.
</BLOCKQUOTE>
<H5><A NAME = "7271">PermutationCharacter(G) : GrpPerm -&gt; AlgChtrElt</A></H5>
<BLOCKQUOTE>
Given a group G represented as a permutation group, construct the
character of G afforded by the defining permutation representation
of G.
</BLOCKQUOTE>
<H5><A NAME = "7272">PermutationCharacter(G, H) : GrpPerm, GrpPerm -&gt; AlgChtrElt</A></H5>
<BLOCKQUOTE>
Given a group G and some subgroup H of G,
construct the ordinary character of G afforded by the
permutation representation of G given by the
action of G on the coset space of the subgroup H in G.
</BLOCKQUOTE>
<H5><A NAME = "7273">GModule(G, S) : Grp, AlgMat -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
Let G be a group defined on r generators and let S be a subalgebra
of the matrix algebra M<sub>n</sub>(R), also defined by r non-singular matrices.
It is assumed that the mapping from G to S defined by
&phi;(G.i) -&gt; S.i, for i = 1, ..., r, is a group homomorphism.
Let M be the natural module for the matrix algebra S. The function
<TT>GModule</TT> gives M the structure of an S[G]-module, where the action
of the i-th generator of G on M is given by the i-th generator of
S.
</BLOCKQUOTE>
<H5><A NAME = "7274">GModule(G, A, B) : Grp, Grp, Grp -&gt; ModGrp, Map</A></H5>
<BLOCKQUOTE>
Given a finite group G, a normal subgroup A of G and a normal
subgroup B of A such that the section A/B is elementary abelian
of order p<sup>n</sup>, create the K[G]-module M corresponding to the action of
G on A/B, where K is the field GF(p). If B is trivial, it
may be omitted. The function returns
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>the module M; and
<DT>(b)</DT><DD>the homomorphism &phi; : A/B -&gt; M.	</DL>
</BLOCKQUOTE>
<H5><A NAME = "7275">PermutationModule(G, H, R) : Grp, Grp, Rng -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
Given a finite group G and a ring R, create the R[G]-module
for G corresponding to the permutation action of G on the cosets 
of H.
</BLOCKQUOTE>
<H5><A NAME = "7276">PermutationModule(G, R) : GrpPerm, Rng -&gt; ModGrp</A></H5>
<BLOCKQUOTE>
Given a finite permutation group G and a ring R, create the
natural permutation module for G over R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "7277">Example <TT>GrpPerm_GModule (H63E38)</TT></A></H3>
We refine an elementary abelian normal subgroup of
a permutation group to a sequence of normal subgroups.
<P>
<P>
<P>
<PRE>
&gt; G := PermutationGroup&lt;24 | 
&gt;  [ 3, 4, 1, 2,23,24, 7, 8, 9,10,12,11,14,13,16,15,18,17,22,21,
&gt;    20,19, 5, 6 ],
&gt;  [ 7, 8,11,12,13,14,22,21,20,19,15,16,17,18, 6, 5, 4, 3, 1, 2,23,
&gt;    24, 9,10 ] &gt;;
&gt; N := sub&lt;G |  
&gt;  [ 24, 23, 6, 5, 4, 3, 10, 9, 8, 7, 14, 13, 12, 11, 18, 17, 16, 15, 22, 21, 
&gt;    20, 19, 2, 1 ],
&gt;  [ 23, 24, 5, 6, 3, 4, 8, 7, 10, 9, 12, 11, 14, 13, 15, 16, 17, 18, 19, 20, 
&gt;    21, 22, 1, 2 ],
&gt;  [ 2, 1, 4, 3, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 21, 22, 19, 
&gt;    20, 24, 23 ]&gt;;
&gt; #N;
8
&gt; IsNormal(G, N);
true
&gt; IsElementaryAbelian(N);
true
&gt; M, f := GModule(G, N);
&gt; SM := Submodules(M);
&gt; #SM;
4
&gt; refined := [ x @@ f : x in SM ];
&gt; forall{x : x in refined | IsNormal(G, x) };
true;
&gt; [ #x : x in refined];
[ 1, 2, 4, 8 ]
</PRE>
The original elementary abelian normal subgroup of order 8 is the top
of a chain of normal subgroups of length 3.
<HR>
<PRE></PRE> <A  HREF = "text646.htm">[Next]</A><A  HREF = "text644.htm">[Prev]</A> <A  HREF = "text646.htm">[Right]</A> <A  HREF = "text644.htm">[Left]</A> <A  HREF = "text629.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>