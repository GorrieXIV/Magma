<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation of New Lists</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text117.htm">[Next]</A><A  HREF = "text115.htm">[Prev]</A> <A  HREF = "text117.htm">[Right]</A> <A  HREF = "text115.htm">[Left]</A> <A  HREF = "text113.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "876">Creation of New Lists</A></H3>

<P>
<P>
Here, S denotes the list [*  s<sub>1</sub>, ..., s<sub>n</sub> *], while
T denotes the list [*  t<sub>1</sub>, ..., t<sub>m</sub> *].


<H5><A NAME = "877">S cat T : List, List -&gt; List</A></H5>
<BLOCKQUOTE>
The list formed by concatenating the terms of the list S 
with the terms of the list T, i.e. the list 
[*  s<sub>1</sub>, ..., s<sub>n</sub>, t<sub>1</sub>, ..., t<sub>m</sub> *].
</BLOCKQUOTE>
<H5><A NAME = "878">S cat:= T : List, List -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Destructively concatenate the terms of the list T 
to S; i.e. so S becomes the list 
[*  s<sub>1</sub>, ..., s<sub>n</sub>, t<sub>1</sub>, ..., t<sub>m</sub> *].
</BLOCKQUOTE>
<H5><A NAME = "879">Append(S, x) : List, Elt -&gt; List</A></H5>
<BLOCKQUOTE>
The list formed by adding the object x to the end of the list
S, i.e. the list [*  s<sub>1</sub>, ... s<sub>n</sub>, x *].
</BLOCKQUOTE>
<H5><A NAME = "880">Append(~S, x) : List, Elt -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Destructively add the object x to the end of the list
S; i.e. so S becomes the list [*  s<sub>1</sub>, ... s<sub>n</sub>,
x *].
</BLOCKQUOTE>
<H5><A NAME = "881">Insert(~S, i, x) : List, RngIntElt, Any -&gt;</A></H5>
<H5>Insert(S, i, x) : List, RngIntElt, Any -&gt; List</H5>
<BLOCKQUOTE>
Create the list formed by inserting the object x at position i in
S and moving the terms S[i], ..., S[n] down one place,
i.e., the list
[*  s<sub>1</sub>, ..., s<sub>i - 1</sub>, x, s<sub>i</sub>, ..., s<sub>n</sub> *].
Note that i must not be bigger than n + 1 where
n is the length of S.
<P>
There are two versions of this: a procedure, where S is replaced
by the new list, and a function, which returns the
new list. The procedural version takes a reference
~S to S as an argument.
<P>
Note that the procedural version is much more efficient since
the list S will not be copied.
</BLOCKQUOTE>
<H5><A NAME = "882">Prune(S) : List -&gt; List</A></H5>
<BLOCKQUOTE>
The list formed by removing the last term of the list S,
i.e. the list [*  s<sub>1</sub>, ..., s<sub>n - 1</sub> *].
</BLOCKQUOTE>
<H5><A NAME = "883">Prune(~S) : List -&gt;</A></H5>
<BLOCKQUOTE>
(Procedure.)  Destructively remove the last term of the list S;
i.e. so S becomes the list [*  s<sub>1</sub>, ...,
s<sub>n - 1</sub> *].
</BLOCKQUOTE>
<H5><A NAME = "884">SequenceToList(Q) : SeqEnum -&gt; List</A></H5>
<H5>Seqlist(Q) : SeqEnum -&gt; List</H5>
<BLOCKQUOTE>
Given a sequence Q, construct a list whose terms are the elements of 
Q taken in the same order.
</BLOCKQUOTE>
<H5><A NAME = "885">TupleToList(T) : Tup -&gt; List</A></H5>
<H5>Tuplist(T) : Tup -&gt; List</H5>
<BLOCKQUOTE>
Given a tuple T, construct a list whose terms are the elements of 
T taken in the same order.
</BLOCKQUOTE>
<H5><A NAME = "886">Reverse(L) : List -&gt; List</A></H5>
<BLOCKQUOTE>
Given a list L return the same list, but in reverse order.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text117.htm">[Next]</A><A  HREF = "text115.htm">[Prev]</A> <A  HREF = "text117.htm">[Right]</A> <A  HREF = "text115.htm">[Left]</A> <A  HREF = "text113.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>