<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>General Group Properties</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text841.htm">[Next]</A><A  HREF = "text839.htm">[Prev]</A> <A  HREF = "text841.htm">[Right]</A> <A  HREF = "text839.htm">[Left]</A> <A  HREF = "text831.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "9689">General Group Properties</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text840.htm#9698">General Properties of Subgroups</A>
<LI> <A  HREF = "text840.htm#9701">Properties of Subgroups Requiring a Nil-po-tent Covering Group</A>
</UL>
<H5><A NAME = "9690">IsAbelian(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is abelian, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "9691">IsCyclic(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is cyclic, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "9692">IsElementaryAbelian(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is elementary abelian, <TT>false</TT> otherwise. The following definition is used:
<P>
A group G is called elementary abelian if it is an abelian p-group of exponent p for some prime p.
</BLOCKQUOTE>
<H5><A NAME = "9693">IsFinite(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is finite, <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "9694">IsNilpotent(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is nilpotent, <TT>false</TT> otherwise. This function uses an
algorithm described in <A  HREF = "text830.htm#bib_lo_nilpotent">[Lo98]</A>.
</BLOCKQUOTE>
<H5><A NAME = "9695">IsPerfect(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is perfect, <TT>false</TT> otherwise.
A polycyclic group G is perfect, if and only if it is trivial.
</BLOCKQUOTE>
<H5><A NAME = "9696">IsSimple(G) : GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is simple, <TT>false</TT> otherwise. A polycyclic group is simple, if and only if it is cyclic of prime order.
</BLOCKQUOTE>
<H5><A NAME = "9697">IsSoluble(G) : GrpGPC -&gt; BoolElt</A></H5>
<H5>IsSolvable(G) : GrpGPC -&gt; BoolElt</H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the group G is solvable, <TT>false</TT> otherwise. Every polycyclic group is solvable.
</BLOCKQUOTE>
<H4><A NAME = "9698">General Properties of Subgroups</A></H4>



<H5><A NAME = "9699">IsCentral(G, H) : GrpGPC, GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the subgroup H of the group G lies in the centre of G,
<TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "9700">IsNormal(G, H) : GrpGPC, GrpGPC -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the subgroup H of the group G is a normal subgroup of G,
<TT>false</TT> otherwise.
</BLOCKQUOTE>
<H4><A NAME = "9701">Properties of Subgroups Requiring a Nil-po-tent Covering Group</A></H4>

<P>
<P>
The functions described in this section require the existence of a nilpotent
covering group. The are based on algorithms published in <A  HREF = "text830.htm#bib_lo_nilpotent">[Lo98]</A>.


<H5><A NAME = "9702">IsConjugate(G, H, K) : GrpGPC, GrpGPC, GrpGPC -&gt; BoolElt, GrpGPCElt</A></H5>
<BLOCKQUOTE>
Given groups G, H and K with a nilpotent common covering group, return
the value <TT>true</TT> if there exists c&isin;G such that H<sup>c</sup> = K. If so, the
function returns such a conjugating element as second value.
</BLOCKQUOTE>
<H5><A NAME = "9703">IsSelfNormalising(G, H) : GrpGPC, GrpGPC -&gt; BoolElt</A></H5>
<H5>IsSelfNormalizing(G, H) : GrpGPC, GrpGPC -&gt; BoolElt</H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if the subgroup H of the nilpotent group G is self-normalising in G,
<TT>false</TT> otherwise.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "9704">Example <TT>GrpGPC_SubgroupStructure (H77E9)</TT></A></H3>
We define a group G on 5 generators a, ..., e of infinite order by
fixing the commutators of the generators:
 (b, a) = e<sup>2</sup>,   (d, c)=e<sup>3</sup> 
All other pairs of generators commute.
<P>
<P>
<PRE>
&gt; F&lt;a,b,c,d,e&gt; := FreeGroup(5);
&gt; rels := [ b^a = b*e^2, b^(a^-1) = b*e^-2, d^c = d*e^3,
&gt;           d^(c^-1) = d*e^-3 ];
&gt; G&lt;a,b,c,d,e&gt; := quo&lt; GrpGPC: F | rels &gt;;
&gt; IsNilpotent(G);
true
</PRE>
Since G is nilpotent, we can compute intersections of subgroups of G.
<P>
We define the subgroups generated by a, ..., e and their nontrivial commutator groups as subgroups of G.
<P>
<P>
<PRE>
&gt; H1 := sub&lt;G|a&gt;;          
&gt; H2 := sub&lt;G|b&gt;;
&gt; H3 := sub&lt;G|c&gt;;
&gt; H4 := sub&lt;G|d&gt;;
&gt; H5 := sub&lt;G|e&gt;;
&gt; 
&gt; C12 := CommutatorSubgroup(H1, H2);
&gt; {@ G!x : x in PCGenerators(C12) @};
{@ e^2 @}
&gt; C12 subset H5;
true
&gt;
&gt; C34 := CommutatorSubgroup(H3, H4);
&gt; {@ G!x : x in PCGenerators(C34) @};
{@ e^3 @}
&gt; C34 subset H5;
true
</PRE>
Finally, we compute the intersection C of C12 and C13.
<P>
<P>
<PRE>
&gt; C := C12 meet C34;
&gt; {@ G!x : x in PCGenerators(C) @};
{@ e^6 @}
</PRE>
This intersection C is cyclic and central in G.
<P>
<P>
<PRE>
&gt; IsCyclic(C); 
true
&gt; IsCentral(G, C);
true
</PRE>
<HR>
<H3><A NAME = "9705">Example <TT>GrpGPC_SubgroupStructure2 (H77E10)</TT></A></H3>
Consider the nilpotent group G := D<sub>16</sub> wreath 2 generated by the 5 generators a, b, c, d, t with the relations
 a<sup>2</sup> = 1,   b<sup>16</sup> = 1,   b<sup>a</sup> = b<sup>15</sup>                     
 c<sup>2</sup> = 1,   d<sup>16</sup> = 1,   d<sup>c</sup> = d<sup>15</sup>                     
 t<sup>2</sup> = 1,   a<sup>t</sup> = c,   b<sup>t</sup> = d,   c<sup>t</sup> = a,   d<sup>t</sup> = b 
(All other pairs of generators commute.)
<P>
<P>
<PRE>
&gt; F&lt;t, a,b, c,d&gt; := FreeGroup(5);
&gt; G&lt;t, a,b, c,d&gt; := quo&lt;GrpGPC: F | a^2, b^16, b^a=b^15,
&gt;                                   c^2, d^16, d^c=d^15,
&gt;                      t^2, a^t=c, b^t=d, c^t=a, d^t=b&gt;;
&gt; IsNilpotent(G);
true
</PRE>
Since G is nilpotent, we can compute normalisers and centralisers in G.
<P>
We define the (dihedral) subgroup D3 of G generated by ac and bd and compute its normaliser in G and its centraliser in the (dihedral) subgroup D2 of G generated by c and d.
<P>
<P>
<PRE>
&gt; D2 := sub&lt;G|c,d&gt;;
&gt;
&gt; D3&lt;u,v&gt; := sub&lt;G|a*c, b*d&gt;;
&gt; D3;
GrpGPC : D3 of order 2^5 on 2 PC-generators
PC-Relations:
    u^2 = Id(D3), 
    v^16 = Id(D3), 
    v^u = v^15
&gt;
&gt; N3 := Normaliser(G, D3);
&gt; PCGenerators(N3, G);
{@ t, a * c, b * d, d^8 @}
&gt;
&gt; C3 := Centraliser(D2, D3);
&gt; PCGenerators(C3, G);
{@ d^8 @}
</PRE>
Finally we compute the centraliser of the element t in G.
<P>
<P>
<PRE>
&gt; Ct := Centraliser(G, t);
&gt; PCGenerators(Ct, G);
{@ t, a * c, b * d @}
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text841.htm">[Next]</A><A  HREF = "text839.htm">[Prev]</A> <A  HREF = "text841.htm">[Right]</A> <A  HREF = "text839.htm">[Left]</A> <A  HREF = "text831.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>