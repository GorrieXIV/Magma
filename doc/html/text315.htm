<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Voronoi Cells, Holes and Covering Radius</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text316.htm">[Next]</A><A  HREF = "text314.htm">[Prev]</A> <A  HREF = "text316.htm">[Right]</A> <A  HREF = "text314.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3021">Voronoi Cells, Holes and Covering Radius</A></H3>

<P>
<P>
<P>
The functions in this section compute the Voronoi cell of a lattice around the
origin and associated information.
Note that the computation of the Voronoi cell is of truly exponential 
complexity, and therefore the use of these functions is restricted to
small dimensions (up to about 10).  See <A  HREF = "text304.htm#bib_ConwaySloane">[JC98]</A>
for the relevant definitions.
<P>
A lattice to which any of these functions are applied must be an
exact lattice (over Z or Q).


<H5><A NAME = "3022">VoronoiCell(L) : Lat -&gt; [ ModTupFldElt ],  SetEnum , [ ModTupFldElt ]</A></H5>
<BLOCKQUOTE>
Return the Voronoi cell of the lattice L around the origin
 which is the convex polytope consisting
of all the points closer to the origin
 than to any other lattice point of L.
This function returns three values:
<DL COMPACT class='compact'>
<DT>(a)</DT><DD>A sequence V of vectors which are the vertices of the Voronoi cell.
<DT>(b)</DT><DD>A set E of pairs, where each pair {i, j} represents an edge
connecting V[i] and V[j].
<DT>(c)</DT><DD>A sequence P of vectors defining the relevant hyperplanes. A vector
p corresponds to the hyperplane given by (x, p) = (Norm)(p)/2.</DL>
</BLOCKQUOTE>
<H5><A NAME = "3023">VoronoiGraph(L) : Lat -&gt; GrphUnd</A></H5>
<BLOCKQUOTE>
Return a graph having the vertices and edges of the Voronoi cell of the lattice L
as vertices and edges, respectively.
</BLOCKQUOTE>
<H5><A NAME = "3024">Holes(L) : Lat -&gt; [ ModTupFldElt ]</A></H5>
<BLOCKQUOTE>
Return a sequence of vectors which are the holes of the lattice L. The holes are defined
to be the vertices of the Voronoi cell around the origin.
Note that this involves computing the Voronoi cell of L around the origin.
</BLOCKQUOTE>
<H5><A NAME = "3025">DeepHoles(L) : Lat -&gt; [ ModTupFldElt ]</A></H5>
<BLOCKQUOTE>
Return a sequence of vectors which are the deep holes of the lattice L. The deep holes
are defined to be the holes of maximum norm and are points of maximum distance
to all lattice points.
Note that this involves computing the Voronoi cell of L around the origin.
</BLOCKQUOTE>
<H5><A NAME = "3026">CoveringRadius(L) : Lat -&gt; FldRatElt</A></H5>
<BLOCKQUOTE>
Return the squared covering radius of the lattice L,
which is the norm of the deep holes of L.
Note that this involves computing the Voronoi cell of L around the origin.
</BLOCKQUOTE>
<H5><A NAME = "3027">VoronoiRelevantVectors(L) : Lat -&gt; [ ModTupFldElt ]</A></H5>
<BLOCKQUOTE>
Return the Voronoi relevant hyperplanes (as a set of vectors) of the Voronoi cell
of L around the origin.
Note that this is the same as the third return value of the <TT>VoronoiCell</TT>
intrinsic. However, it is usually much faster since it does not compute the
Voronoi cell of L.
The algorithm employed is <A  HREF = "text304.htm#bib_closest_point_search">[AEVZ02, Section C]</A>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3028">Example <TT>Lat_Voronoi (H30E18)</TT></A></H3>
We compute the Voronoi cell of a perfect lattice of dimension 6.
<P>
<P>
<PRE>
&gt; L := LatticeWithGram(6, [4, 1,4, 2,2,4, 2,2,1,4, 2,2,1,1,4, 2,2,2,2,2,4]);
&gt; L;
Standard Lattice of rank 6 and degree 6
Inner Product Matrix:
[4 1 2 2 2 2]
[1 4 2 2 2 2]
[2 2 4 1 1 2]
[2 2 1 4 1 2]
[2 2 1 1 4 2]
[2 2 2 2 2 4]
&gt; time V, E, P := VoronoiCell(L);
Time: 1.740
&gt; #Holes(L), #DeepHoles(L), CoveringRadius(L);
782 28 5/2
</PRE>
The Voronoi cell has 782 vertices, but only 28 of these are of maximal norm
5/2 and therefore deep holes. We now compute the norms and cardinalities for
the shallow holes.
<P>
<P>
<PRE>
&gt; M := MatrixRing(Rationals(), 6) ! InnerProductMatrix(L);
&gt; N := [ (v*M, v) : v in V ];                                 
&gt; norms := Sort(Setseq(Set(N))); norms;                       
[ 17/9, 2, 37/18, 20/9, 7/3, 5/2 ]
&gt; card := [ #[ x : x in N | x eq n ] : n in norms ]; card;    
[ 126, 16, 288, 180, 144, 28 ]
</PRE>
So there are 126 holes of norm 17/9, 16 holes of norm 2, etc.
We now investigate the Voronoi cell as a polyhedron.
<P>
<P>
<PRE>
&gt; #V, #E, #P;
782 4074 104
&gt; { Norm(L!p) : p in P };
{ 4, 6 }
&gt; #ShortVectors(L, 6);
52
</PRE>
The polyhedron which is the convex closure of the holes has 782 vertices,
4074 edges and 104 faces. The faces are defined by vectors of length up to 6
and all such vectors are relevant (since there are only 104).
We finally look at the graph defined by the vertices and edges of the Voronoi
cell.
<P>
<P>
<PRE>
&gt; G := VoronoiGraph(L);
&gt; IsConnected(G);
true
&gt; Diameter(G);
8
&gt; Maxdeg(G);
20 ( -1   0 1/2 1/2 1/2   0)
&gt; v := RSpace(Rationals(), 6) ! [ -1, 0, 1/2, 1/2, 1/2, 0 ]; (v*M, v);
5/2
</PRE>
The graph is (of course) connected, its diameter is 8 and the vertices of
maximal degree 20 are exactly the deep holes.
<HR>
<PRE></PRE> <A  HREF = "text316.htm">[Next]</A><A  HREF = "text314.htm">[Prev]</A> <A  HREF = "text316.htm">[Right]</A> <A  HREF = "text314.htm">[Left]</A> <A  HREF = "text305.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>