<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operators</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1663.htm">[Next]</A><A  HREF = "text1661.htm">[Prev]</A> <A  HREF = "text1663.htm">[Right]</A> <A  HREF = "text1661.htm">[Left]</A> <A  HREF = "text1656.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "18581">Operators</A></H3>

<P>
<P>
<P>
Operators on spaces of Hilbert modular forms are returned as matrices 
with respect to a basis of M.
For spaces of parallel weight 2, operators are matrices over Q,
and the basis of M is permanently fixed.  
For all other weights, two finite extensions of Q may arise:
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>The field that is used for the raw computations;
operators are originally computed as matrices over this field.
<DT>(ii)</DT><DD>The minimal field F for which there exists a basis of M 
such that operators are matrices with entries in F. 
For all parallel weights, this minimal field is Q.
We refer to such a basis as a "rational basis" of M.  
<P>
</DL>
Changing the basis can be expensive for large spaces, so for 
some spaces a "rational basis" is not computed by default.
In these cases, Hecke operators are returned as matrices over 
the "raw" field, with respect to a basis which remains fixed 
until <TT>SetRationalBasis(M)</TT> is invoked by the user.  
When that occurs, the basis of the space is changed to a 
"rational basis" which is then permanently fixed; 
as a result, the operators also change (they are now given 
as matrices with respect to the new basis).
<P>
A space M is guaranteed to have a "rational basis" 
(which is permanently fixed) in any of the following circumstances: 
<DL COMPACT class='compact'>
<DT>(i)</DT><DD>M has parallel weight, 
<DT>(ii)</DT><DD>M was constructed using <TT>NewSubspace</TT> (unless <TT>RationalBasis</TT>
was set to <TT>false</TT>), or was constructed using <TT>NewformDecomposition</TT>, 
<DT>(iii)</DT><DD><TT>SetRationalBasis(M)</TT> has been invoked.</DL>


<H5><A NAME = "18582">HeckeOperator(M, P) : ModFrmHil, RngOrdIdl -&gt; Mtrx</A></H5>
<BLOCKQUOTE>
This returns a matrix representing the Hecke operator T<sub>P</sub> on 
the space M of Hilbert modular forms.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "18583">Example <TT>ModFrmHil_hecke (H143E3)</TT></A></H3>
<P>
<P>
<PRE>
&gt; R&lt;x&gt; := PolynomialRing(IntegerRing());
&gt; F&lt;a&gt; := NumberField(x^2-2);  OF := Integers(F);
&gt; M3 := HilbertCuspForms(F, 3*OF, [2,4]); 
&gt; Dimension(M3);
1
&gt; P2 := Factorization(2*OF)[1][1];
&gt; Norm(P2);
2
&gt; HeckeOperator(M3, P2);
[2]
</PRE>
Since the space has dimension 1, it consists of a single eigenform,
whose eigenvalues can be read from the Hecke matrices.
We now consider the space of level 5, which has dimension 3.
The Hecke matrices are given with respect to the basis used to
compute the space, over the extension K displayed here.
<P>
<P>
<PRE>
&gt; M5 := HilbertCuspForms(F, 5*OF, [2,4] : QuaternionOrder:=QuaternionOrder(M3) );
&gt; Dimension(M5);
3
&gt; T2 := HeckeOperator(M5, P2);
&gt; K&lt;b&gt; := BaseRing(T2); 
&gt; K;
Number Field with defining polynomial $.1^2 + 1 over F
&gt; T2;
[       0    8*a*b -2*b - 2]
[-1/2*a*b        2        0]
[   b - 1        0        0]
</PRE>
<HR>
<H5><A NAME = "18584">AtkinLehnerOperator(M, P) : ModFrmHil, RngOrdIdl -&gt; Mtrx</A></H5>
<BLOCKQUOTE>
This returns a matrix representing the Atkin-Lehner operator w<sub>P</sub> on 
the space M of Hilbert modular forms.
</BLOCKQUOTE>
<H5><A NAME = "18585">DegeneracyOperator(M, P, Q) : ModFrmHil, RngOrdIdl, RngOrdIdl -&gt; Mtrx</A></H5>
<BLOCKQUOTE>
This computes degeneracy maps in the "downward" direction as maps from M to itself.  
Here M is a space of Hilbert modular forms of level N, P is a prime dividing N, 
and Q either equals P or the unit ideal (1). 
The function returns a matrix representing a map from M to M 
whose image equals a copy of the space of level N/P.
<P>
When Q = (1), this is double coset operator defined by cosets of an element 
with determinant 1 (which can be seen as a "norm" map); when Q = P, it is 
the double coset operator defined by cosets of an element with determinant (Norm)(P).
</BLOCKQUOTE>
<H5><A NAME = "18586">DeleteHeckePrecomputation(O) : AlgAssVOrd -&gt;</A></H5>
<H5>DeleteHeckePrecomputation(O, P) : AlgAssVOrd, RngOrdIdl -&gt;</H5>
<BLOCKQUOTE>
These procedures delete data obtained during the precomputation phase
of the "definite" algorithm.  This data is used in the computation
of Hecke operators (and other operators) for given primes, and the 
same data can be re-used for all spaces that are computed with the 
some quaternion order O.  (Often this is the same for spaces of 
all weights and levels over a particular number field.) 
Since the data is the most expensive part of the Hecke computation, 
it is stored by default.  However it is very expensive in memory; 
these procedures allow the user to reclaim this memory when necessary.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text1663.htm">[Next]</A><A  HREF = "text1661.htm">[Prev]</A> <A  HREF = "text1663.htm">[Right]</A> <A  HREF = "text1661.htm">[Left]</A> <A  HREF = "text1656.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>