<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Introduction</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1784.htm">[Next]</A><A  HREF = "text1782.htm">[Prev]</A> <A  HREF = "text1784.htm">[Right]</A> [____] <A  HREF = "text1782.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "19677">Introduction</A></H3>

<P>
<P>
<P>
<P>
<P>
<P>
A <I>simple graph</I> is a graph in which each edge joins two 
  distinct vertices and two distinct vertices are joined by at 
  most one edge. 
A <I>simple digraph</I>, whose edges are directed,
  is defined in an analogous manner.
Thus, loops and multiple edges are not permitted in simple graphs
  and simple digraphs. 
A graph (digraph) with loops and/or
  multiple edges joining a fixed pair of 
  vertices is called a <I>multigraph</I> (resp. <I>multidigraph</I>).
A multidigraph whose edges are assigned a capacity is more commonly
  called a <I>network</I>.
<P>
In this chapter the term "graph" is used when referring to a 
  simple undirected graph, while the term "digraph" is used when 
  referring to a simple directed graph.
Sometimes the term "graph" is used as the generic term for the 
  incidence structure on vertices and edges.
Such uses should be clear from the context in which they occur.
<P>
There are five Magma  graph objects: the undirected simple graph
  of type <TT>GrphUnd</TT>, the directed simple graph of type <TT>GrphDir</TT>, the undirected multigraph of type <TT>GrphMultUnd</TT>,
  the directed multigraph of type <TT>GrphMultDir</TT>,
  and the network of type <TT>GrphNet</TT>.
The simple graphs are all of type <TT>Grph</TT>, while the multigraphs
  (including the network) are of type <TT>GrphMult</TT>.
There is a caveat here with respect to simple digraphs and loops: 
   for historical reasons,  Magma allows loops in digraphs.
<P>
<P>
Simple graphs and digraphs are covered in this chapter, while
  multigraphs, multidigraphs
  are covered in Chapter <A  HREF = "text1809.htm#20036">MULTIGRAPHS</A> and networks in Chapter <A  HREF = "text1824.htm#20271">NETWORKS</A>.
All types of graphs may have vertex 
  labellings and/or edge labellings.
In addition, assigning weights and/or capacities to graph edges
  is also possible, thus allowing to run shortest-paths and 
  flow-based algorithms over the graphs.
<P>
Importantly,  from the present version (V2.11) onwards,
  all the standard graph construction functions 
  (see Subsections <A  HREF = "text1788.htm#19753">Subgraphs and Quotient Graphs</A> and <A  HREF = "text1788.htm#19758">Incremental Construction of  Graphs</A>)
  respect the graph's
  support set and  vertex and edge decorations.
That is, the resulting graph will have a support set and 
  vertex and edge decorations compatible with the original 
  graph and the operation performed on that graph.
<P>
Magma employs two distinct data structures for representing
  graphs. 
A graph may be represented in the 
  form of an adjacency matrix (the dense representation) or in 
  the form of an adjacency list (the sparse representation).
The latter is better suited for sparse graphs and for 
  algorithms which have been designed with the adjacency list representation 
  in mind.
An advantage of the sparse representation is the 
  possibility of creating  much larger (sparse) graphs than
  would be possible using the dense representation, since 
  memory requirements for the adjacency list representation is 
  linear in the number of edges, while memory requirements for 
  the adjacency matrix representation is quadratic in the number
  of vertices (order) of the graph.
This is covered in detail in Section <A  HREF = "text1784.htm#19679">Bounds on the Graph Order</A>.
<P>
Further, multigraphs and multidigraphs (and networks) may only be 
  represented by an adjacency list since they may contain multiple
  edges.
Users have control over the choice of representation when 
  creating simple graphs or digraphs.
If no indication is given, simple graphs and digraphs 
  are <I>always</I> created with the dense representation.
At the time of the present release (V2.11), 
  a significant part of  Magma functions 
  are able to work directly with either of the representations.
However, wherever necessary, a graph will be converted internally
  to whichever representation is required by a given function.
We emphasize that this process is completely transparent to users
  and <I>requires no intervention on their part</I>.
<P>
For a concise and comprehensive overview on graph theory and algorithms,
  the reader is referred to <A  HREF = "text1781.htm#bib_even">[Eve79]</A>; in <A  HREF = "text1781.htm#bib_corleiri">[TCR90]</A>
  they'll find a clear exposure of some graph algorithms,
  and <A  HREF = "text1781.htm#bib_amo">[RAO93]</A> is the recommended reference for flow problems in graphs.


<PRE></PRE> <A  HREF = "text1784.htm">[Next]</A><A  HREF = "text1782.htm">[Prev]</A> <A  HREF = "text1784.htm">[Right]</A> [____] <A  HREF = "text1782.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>