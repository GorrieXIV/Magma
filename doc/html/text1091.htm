<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Constructing Root Data</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text1092.htm">[Next]</A><A  HREF = "text1090.htm">[Prev]</A> <A  HREF = "text1092.htm">[Right]</A> <A  HREF = "text1090.htm">[Left]</A> <A  HREF = "text1089.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "12124">Constructing Root Data</A></H3>

<P>
<P>
<P>
<P>
We first describe some optional parameters that are common to many 
functions described below.
<P>
<P>
var Isogeny: Any                        Default: "Ad"
The optional parameter <TT>Isogeny</TT> specifies the isomorphism class of the root
datum within the Cartan equivalence class (see Subsection <A  HREF = "text1090.htm#12122">Isogeny of Split Reduced Root  Data</A>). 
For irreducible  Cartan names, <TT>Isogeny</TT> can be one of the following:
<P>
<DL COMPACT class='compact'>
<DT>1. </DT><DD>A string:  <TT>"Ad"</TT> for adjoint or <TT>"SC"</TT> for simply connected.
<DT>2. </DT><DD>An integer giving the size of the isogeny subgroup within
the fundamental group.  The root datum must be absolutely irreducible.
This does not work in type D<sub>n</sub> with n even
and Isogeny=2, since in this case there are three distinct
isomorphism classes (see the example below to create these data).
<DT>3. </DT><DD>An injection of an abelian group into the fundamental group.
<P>
</DL>
For compound Cartan names, <TT>Isogeny</TT> can be a
string (<TT>"Ad"</TT> or <TT>"SC"</TT>);  an injection into
the fundamental group; or a list of strings, integers and injections (one
for each direct summand).
<P>
<P>
var Signs: Any                          Default: 1
Many of the constants associated with root data depend on the choice 
of the sign &epsilon;<sub>rs</sub>  for each 
extraspecial pair (r, s).  
This parameter allows the user to fix these signs for the root datum R by
giving a sequence s of length <TT>NumExtraspecialPairs(R)</TT> consisting of
integers 1 or -1.  
It is also possible to set <TT>Signs</TT> to 1 instead of a sequence of all 
1 and to -1 instead of a sequence of all -1.  
<P>
<P>
var Twist: Any                          Default: 1
This optional parameter defines a &Gamma;-action 
of an extended root datum and will accept the following values:
<P>
<DL COMPACT class='compact'>
<DT>1. </DT><DD>a homomorphism from &Gamma; into <TT>Sym(2*N)</TT>, where N is the
     number of positive roots, specifying the action of &Gamma; on the
     (co)roots. 
    (Only for semisimple root data).
<P>
<DT>2. </DT><DD>an integer i giving the order of &Gamma;, e.g.,  1, 2, 3, 6   for   ()<sup>1</sup>D<sub>4</sub>, ()<sup>2</sup>D<sub>4</sub>, 
    ()<sup>3</sup>D<sub>4</sub>, ()<sup>6</sup>D<sub>4</sub>
    (only if i = 1 or the root datum is irreducible).
<P>
<DT>3. </DT><DD>&lt; D, i &gt;, where
    D is a set of distinguished orbits as sets of integers and
    i (integer) is the order of the Dynkin diagram symmetry involved
    (only for irreducible root data).
<P>
<DT>4. </DT><DD>&lt; &Gamma;, ims &gt;, where
    &Gamma; is the acting group and
    ims define images either as permutations of the simple roots
    or as permutation of all roots
    (only for semisimple root data).
<P>
<DT>5. </DT><DD>&lt; &Gamma;, imsR, imsC &gt;, where
    &Gamma; is the acting group and
    imsR (imsC) is a sequence of matrices defining the action
    of &Gamma; on the root space (coroot space).
<P>
</DL>
var Nonreduced: SetEnum                 Default: 
The optional argument <TT>Nonreduced</TT> is used to give the set of indices of the
nonreduced simple roots.  
Note that a root datum cannot be both twisted and nonreduced.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text1091.htm#12138">Constructing Sparse Root Data</A>
</UL>
<H5><A NAME = "12125"></A><A NAME = "IntrRootDatum">RootDatum</A>(N) : MonStgElt -&gt; RootDtm</H5>

<PRE>    Isogeny: Any                        Default: "Ad"</PRE>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>
<BLOCKQUOTE>
A root datum with Cartan name given by the string N (see Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A>). 
In addition to the possible Cartan names described in Section <A  HREF = "text1074.htm#11954">Finite and Affine Coxeter  Groups</A>,
this function will also accept <TT>"Tn"</TT> as a component of the Cartan name,
which stands for an n-dimensional toral subdatum.
Note, however, that this addition is for input only and will not appear
in the string returned by <TT>CartanName</TT> when applied to the 
resulting root datum (see example below).
<P>
If the optional parameter <TT>Isogeny</TT> is a list, 
its length should be equal to the total number of components.
Entries of this list corresponding to toral components will be ignored.
<P>
If the corresponding Coxeter group is infinite affine, an error is flagged.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12126">Example <TT>RootDtm_CreatingRootData (H103E1)</TT></A></H3>
Examples of adjoint and simply connected irreducible
root data.
<P>
<P>
<PRE>
&gt; RootDatum("E6");
Adjoint root datum of type E6
&gt; RootDatum("E6" : Isogeny := "SC");
Simply connected root datum of type E6
</PRE>
With nonirreducible root data the isogeny can be given as a list.
<P>
<P>
<PRE>
&gt; R := RootDatum("A5 B3" : Isogeny := [* 3, "Ad" *]);
&gt; R : Maximal;
Root datum of type A5 B3 with simple roots
[1 0 0 0 0 0 0 0]
[0 1 0 0 0 0 0 0]
[0 0 1 0 0 0 0 0]
[0 0 0 1 0 0 0 0]
[1 2 0 1 3 0 0 0]
[0 0 0 0 0 1 0 0]
[0 0 0 0 0 0 1 0]
[0 0 0 0 0 0 0 1]
and simple coroots
[ 2 -1  0  0  0  0  0  0]
[-1  2 -1  0 -1  0  0  0]
[ 0 -1  2 -1  1  0  0  0]
[ 0  0 -1  2 -1  0  0  0]
[ 0  0  0 -1  1  0  0  0]
[ 0  0  0  0  0  2 -1  0]
[ 0  0  0  0  0 -1  2 -1]
[ 0  0  0  0  0  0 -2  2]
&gt;
&gt; RootDatum("E6 A3 B4" : Isogeny := "SC");
Simply connected root datum of type E6 A3 B4
</PRE>
Nonsemisimple root data can be constructed by specifying
a central torus.
<P>
<P>
<PRE>
&gt; R := RootDatum("B3 T2 A2" : Isogeny := [* "SC", 0, "Ad" *]);
&gt; R;
R: Root datum of type B3 A2
&gt; Dimension(R), Rank(R);
7 5
&gt; SimpleCoroots(R);
[ 1  0  0  0  0  0  0]
[ 0  1  0  0  0  0  0]
[ 0  0  1  0  0  0  0]
[ 0  0  0  0  0  2 -1]
[ 0  0  0  0  0 -1  2]
</PRE>
The following code creates the three root data of type D<sub>6</sub> with isogeny groups 
of size 2 using injections into the fundamental group.
<P>
<P>
<PRE>
&gt; G&lt; a, b &gt; := FundamentalGroup("D6");
&gt; G;
Abelian Group isomorphic to Z/2 + Z/2
Defined on 2 generators
Relations:
    2*a = 0
    2*b = 0
&gt; _, inj1 := sub&lt; G | a &gt;;
&gt; R1 := RootDatum("D6" : Isogeny := inj1);
&gt; _, inj2 := sub&lt; G | b &gt;;
&gt; R2 := RootDatum("D6" : Isogeny := inj2);
&gt; _, inj3 := sub&lt; G | a*b &gt;;
&gt; R3 := RootDatum("D6" : Isogeny := inj3);
</PRE>
<HR>
<H3><A NAME = "12127">Example <TT>RootDtm_CreatingExtendedRootData (H103E2)</TT></A></H3>
Examples of extended root data:
<P>
<P>
<PRE>
&gt; R := RootDatum("A5" : Twist := 2 ); R;
R: Twisted adjoint root datum of type 2A5,3
&gt; R eq RootDatum("A5" : Twist := &lt; Sym(2), [Sym(5)|(1,5)(2,4)] &gt; );
true
&gt; R eq RootDatum("A5" : Twist := &lt; {{1,5},{2,4},{3}}, 2 &gt; );
true
&gt; RootDatum("D4" : Twist := 1);
Adjoint root datum of type D4
&gt; RootDatum("D4" : Twist := 2);
Twisted adjoint root datum of type 2D4,3
&gt; RootDatum("D4" : Twist := 3);
Twisted adjoint root datum of type 3D4,2
&gt; RootDatum("D4" : Twist := 6);
Twisted adjoint root datum of type 6D4,2
&gt;
&gt; R := RootDatum("A2");
&gt; TwistedRootDatum(R : Twist := 2);
Twisted adjoint root datum of type 2A2,1
</PRE>
<HR>
<H5><A NAME = "12128">RootDatum(C) : AlgMatElt -&gt; RootDtm</A></H5>

<PRE>    Isogeny: Any                        Default: "Ad"</PRE>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>

<PRE>    Nonreduced: SetEnum                 Default: {}</PRE>
<BLOCKQUOTE>
A semisimple root datum with crystallographic Cartan matrix C.  
If the corresponding Coxeter group is infinite, an error is flagged.
</BLOCKQUOTE>
<H5><A NAME = "12129">RootDatum(D) : GrphDir -&gt; RootDtm</A></H5>

<PRE>    Isogeny: Any                        Default: "Ad"</PRE>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>

<PRE>    Nonreduced: SetEnum                 Default: {}</PRE>
<BLOCKQUOTE>
A semisimple root datum with Dynkin digraph D.  
If the corresponding Coxeter group is infinite, an error is flagged.
</BLOCKQUOTE>
<H5><A NAME = "12130">RootDatum(A, B) : Mtrx, Mtrx -&gt; RootDtm</A></H5>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>

<PRE>    Nonreduced: SetEnum                 Default: {}</PRE>
<BLOCKQUOTE>
The root datum with simple roots given by the rows of the matrix
A and simple coroots given by the rows of the matrix B.  The
matrices A and B must have the following properties:
<P>
<DL COMPACT class='compact'>
<DT>1. </DT><DD>A and B must be integral matrices with the same number of
rows and the same number of columns;
<DT>2. </DT><DD>the number of columns must be at least the number of rows;
and
<DT>3. </DT><DD>AB<sup>t</sup> must be the Cartan matrix of a finite Coxeter group.</DL>
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12131">Example <TT>RootDtm_G2RootSystem (H103E3)</TT></A></H3>
An example of a  nonsemisimple root system of type G<sub>2</sub>:
<P>
<P>
<PRE>
&gt; A := Matrix(2,3, [1,-1,0, -1,1,-1]);
&gt; B := Matrix(2,3, [1,-1,1, 0,1,-1]);
&gt; RootDatum(A, B);
Root datum of type G2
</PRE>
An example of a non-reduced root datum and usage of <TT>Nonreduced</TT> argument:
<P>
<P>
<PRE>
&gt; C := CoxeterMatrix("B2B2");
&gt; RootDatum(C);
Adjoint root datum of type B2 B2
&gt; RootDatum(C : Nonreduced:={2});
Adjoint root datum of type BC2 B2
&gt; RootDatum(C : Nonreduced:={4});
Adjoint root datum of type B2 BC2
&gt; RootDatum(C : Nonreduced:={2,4});
Adjoint root datum of type BC2 BC2
</PRE>
<HR>
<H5><A NAME = "12132">IrreducibleRootDatum(X, n) : MonStgElt, RngIntElt -&gt; RootDtm</A></H5>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>
<BLOCKQUOTE>
The irreducible root datum with Cartan name X<sub>n</sub>.
</BLOCKQUOTE>
<H5><A NAME = "12133"></A><A NAME = "IntrStandardRootDatum">StandardRootDatum</A>(X, n) : MonStgElt, RngIntElt -&gt; RootDtm</H5>

<PRE>    Signs: Any                          Default: 1</PRE>

<PRE>    Twist: Any                          Default: 1</PRE>
<BLOCKQUOTE>
The standard root datum with Cartan name X<sub>n</sub>,  
i.e. the root datum with the standard inner product equal to the Coxeter form 
up to a constant.
For technical reasons, this is only possible for the classical types, 
i.e. X must be <TT>"A"</TT>, <TT>"B"</TT>, <TT>"C"</TT>, or <TT>"D"</TT>.
Note that the standard root datum is not semisimple for type A<sub>n</sub>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12134">Example <TT>RootDtm_IrreducibleRootDatum (H103E4)</TT></A></H3>
These functions are useful in loops.
<P>
<P>
<PRE>
&gt; for X in ["A","B","G"] do
&gt;   print NumPosRoots(IrreducibleRootDatum(X, 2));
&gt; end for;
3
4
6
</PRE>
<HR>
<H5><A NAME = "12135">ToralRootDatum(n) : RngIntElt -&gt; RootDtm</A></H5>

<PRE>    Twist: Any                          Default: 1</PRE>
<BLOCKQUOTE>
The toral root datum of dimension n, i.e., the n-dimensional root datum with
no roots or coroots.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12136">Example <TT>RootDtm_ToralRootData (H103E5)</TT></A></H3>
Toral root datum of dimension 3 and a twisted version of it:
<P>
<P>
<PRE>
&gt; ToralRootDatum(3);
Toral root datum of dimension 3
&gt; M := Matrix(Rationals(),3,3,[0,1,0,1,0,0,0,0,1]);M;
[0 1 0]
[1 0 0]
[0 0 1]
&gt; ToralRootDatum(3 : Twist := &lt;Sym(2),[M],[M]&gt;);
Twisted toral root datum of dimension 3
</PRE>
<HR>
<H5><A NAME = "12137">TrivialRootDatum() : -&gt; RootDat</A></H5>
<BLOCKQUOTE>
The trivial root datum of dimension 0.
</BLOCKQUOTE>
<H4><A NAME = "12138">Constructing Sparse Root Data</A></H4>

<P>
<P>
<P>
<P>
Sparse root data differ from the usual root data 
only in the internal representation of the objects. 
The internal representation is 
less memory expensive and requires less time for creation. 
Sparse root data have type <TT>RootDtmSprs</TT>, which is a subcategory of
<TT>RootDtm</TT>.
<P>
There are some limitation on the root data which can have sparse representation.
First, sparse representation only makes sense for classical root data, that is of 
types A, B, C and D. 
At the moment only root data with a connected 
Coxeter diagram may have sparse representation and no twisted sparse root data 
can be constructed.
T


<H5><A NAME = "12139">SparseRootDatum(N) : MonStgElt -&gt; RootDtmSprs</A></H5>
<H5>SparseRootDatum(N) : MonStgElt -&gt; RootDtmSprs</H5>
<H5>SparseRootDatum(C) : AlgMatElt -&gt; RootDtmSprs</H5>
<H5>SparseRootDatum(D) : GrphDir -&gt; RootDtmSprs</H5>
<H5>SparseRootDatum(R) : RootSys -&gt; RootDtmSprs</H5>
<H5>SparseRootDatum(A, B) : Mtrx, Mtrx -&gt; RootDtmSprs</H5>
<H5>SparseIrreducibleRootDatum(X, n) : MonStgElt, RngIntElt -&gt; RootDtmSprs</H5>
<H5>SparseStandardRootDatum(X, n) : MonStgElt, RngIntElt -&gt; RootDtmSprs</H5>
<BLOCKQUOTE>
These functions have the same syntax as their counterparts without the "Sparse"
in the name (see Section <A  HREF = "text1091.htm#12124">Constructing Root Data</A>). The root datum returned has sparse representation.
See <A  HREF = "text1088.htm#bib_ComputUnipGrps">[CHM08]</A> for the algorithms used to construct sparse root data.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12140">Example <TT>RootDtm_SprsRD (H103E6)</TT></A></H3>
<P>
<P>
<PRE>
&gt; SparseRootDatum("A2");
Sparse adjoint root datum of dimension 2 of type A2
&gt; SparseStandardRootDatum("A", 2);
Sparse root datum of dimension 3 of type A2
&gt; SparseRootDatum("A2") eq RootDatum("A2");
true
</PRE>
<HR>
<H5><A NAME = "12141">SparseRootDatum(R) : RootDtm -&gt; RootDtmSprs</A></H5>
<BLOCKQUOTE>
Return a sparse root datum equal to the root datum R.
</BLOCKQUOTE>
<H5><A NAME = "12142">RootDatum(R) : RootDtmSprs -&gt; RootDtm</A></H5>
<BLOCKQUOTE>
Return a non-sparse root datum equal to the root datum R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "12143">Example <TT>RootDtm_SprsRDsumsub (H103E7)</TT></A></H3>
Due to the restrictions mentioned above, some operations
that create new root data, will return a non-sparse root datum even 
though the input was sparse.
<P>
<P>
<PRE>
&gt; R := SparseRootDatum("A2");
&gt; T := ToralRootDatum(3);
&gt; R+T;
Sparse root datum of dimension 5 of type A2
&gt; R+R;
Adjoint root datum of dimension 4 of type A2 A2
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text1092.htm">[Next]</A><A  HREF = "text1090.htm">[Prev]</A> <A  HREF = "text1092.htm">[Right]</A> <A  HREF = "text1090.htm">[Left]</A> <A  HREF = "text1089.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>