<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Element Operations</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text193.htm">[Next]</A><A  HREF = "text191.htm">[Prev]</A> <A  HREF = "text193.htm">[Right]</A> <A  HREF = "text191.htm">[Left]</A> <A  HREF = "text188.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "1637">Element Operations</A></H3>

<P>
<P>
See also Section <A  HREF = "text150.htm#1033">Generic Element Functions</A>.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text192.htm#1638">Arithmetic Operators</A>
<LI> <A  HREF = "text192.htm#1639">Equality and Membership</A>
<LI> <A  HREF = "text192.htm#1640">Parent and Category</A>
<LI> <A  HREF = "text192.htm#1641">Predicates on Ring Elements</A>
<LI> <A  HREF = "text192.htm#1647">Minimal and Characteristic Polynomial</A>
<LI> <A  HREF = "text192.htm#1652">Norm, Trace and Frobenius</A>
<LI> <A  HREF = "text192.htm#1666">Order and Roots</A>
</UL>
<H4><A NAME = "1638">Arithmetic Operators</A></H4>



<H5>+ a : FldFinElt -&gt; FldFinElt</H5>

<H5>- a : FldFinElt -&gt; FldFinElt</H5><P>

<H5>a + b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>

<H5>a - b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>

<H5>a * b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>

<H5>a / b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>


<H5>a ^ k : FldFinElt, RngIntElt -&gt; FldFinElt</H5><P>

<H5>a +:= b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>

<H5>a -:= b : FldFinElt, FldFinElt -&gt; FldFinElt</H5>

<H5>a *:= b : FldFinElt, FldFinElt -&gt; FldFinElt</H5><P>


<H4><A NAME = "1639">Equality and Membership</A></H4>



<H5>a eq b : FldFinElt, FldFinElt -&gt; BoolElt</H5>

<H5>a ne b : FldFinElt, FldFinElt -&gt; BoolElt</H5><P>

<H5>a in F : FldFinElt, Rng -&gt; BoolElt</H5>

<H5>a notin F : FldFinElt, Rng -&gt; BoolElt</H5><P>

<H4><A NAME = "1640">Parent and Category</A></H4>



<H5>Parent(a) : FldFinElt -&gt; FldFin</H5>

<H5>Category(a) : FldFinElt -&gt; Cat</H5><P>

<H4><A NAME = "1641">Predicates on Ring Elements</A></H4>



<H5>IsZero(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsOne(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsMinusOne(a) : FldFinElt -&gt; BoolElt</H5><P>

<H5>IsNilpotent(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsIdempotent(a) : FldFinElt -&gt; BoolElt</H5><P>

<H5>IsUnit(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsZeroDivisor(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsRegular(a) : FldFin -&gt; BoolElt</H5><P>

<H5>IsIrreducible(a) : FldFinElt -&gt; BoolElt</H5>

<H5>IsPrime(a) : FldFinElt -&gt; BoolElt</H5><P>



<H5><A NAME = "1642">IsPrimitive(a) : FldFinElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of F is a primitive element for F
(i.e., if and only if the multiplicative order of a is #F - 1).
</BLOCKQUOTE>
<H5><A NAME = "1643">IsPrimitive(f) : RngUPolElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a univariate polynomial f&isin;F[x], over a finite field F,
such that the degree of f is greater than or equal to 1,
this function returns <TT>true</TT> if and only if f defines a primitive extension
G=F[x]/f of F (that is, x is primitive in G).
</BLOCKQUOTE>
<H5><A NAME = "1644">IsNormal(a) : FldFinElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of F generates a normal basis
for the field over the ground field, that is, if and only if
a, a<sup>q</sup>, ..., a^(q<sup>n - 1</sup>)
form a basis for F over the ground field G=GF(q).
</BLOCKQUOTE>
<H5><A NAME = "1645">IsNormal(a, E) : FldFinElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if and only if the element a of the finite field F
with q<sup>n</sup> elements generates a normal basis
for F over its subfield
E, that is, if and only if a, a<sup>q</sup>, ..., a^(q<sup>n - 1</sup>)
form a basis for F over E for q=#E.
</BLOCKQUOTE>
<H5><A NAME = "1646">IsSquare(a) : FldFinElt -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Given a finite field element a&isin;F,
this function returns either <TT>true</TT> and an element b&isin;F such that b<sup>2</sup>=a,
or it returns <TT>false</TT> in the case that such an element does not exist.
</BLOCKQUOTE>
<H4><A NAME = "1647">Minimal and Characteristic Polynomial</A></H4>



<H5><A NAME = "1648">MinimalPolynomial(a) : FldFinElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
The minimal polynomial of the element a of the field 
F, relative to the ground field of F.
This is the unique minimal-degree monic polynomial with coefficients in
the ground field, having a as a root.
</BLOCKQUOTE>
<H5><A NAME = "1649">MinimalPolynomial(a, E) : FldFinElt, FldFin -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
The minimal polynomial of the element a of the field F,
relative to the subfield E of F.
This is the unique minimal-degree monic polynomial with coefficients in
E, having a as a root.
</BLOCKQUOTE>
<H5><A NAME = "1650">CharacteristicPolynomial(a) : FldFinElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given an element a of a finite field F, return the characteristic polynomial
of a with respect to the ground field of F. (This polynomial is the
characteristic polynomial of the companion matrix of a written as a polynomial
over the ground field, and is a power of the minimal polynomial.)
</BLOCKQUOTE>
<H5><A NAME = "1651">CharacteristicPolynomial(a, E) : FldFinElt, FldFin -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given an element a of a finite field F, return the characteristic polynomial
of a with respect to the subfield E of F. (This polynomial is the
characteristic polynomial of the companion matrix of a written as a polynomial
over E, and is a power of the minimal polynomial over E.)
</BLOCKQUOTE>
<H4><A NAME = "1652">Norm, Trace and Frobenius</A></H4>



<H5><A NAME = "1653">Norm(a) : FldFinElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The norm of the element a from the field F to the ground field of F.
</BLOCKQUOTE>
<H5><A NAME = "1654">Norm(a, E) : FldFinElt, FldFin -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The relative norm of the element a from the field F, 
with respect to the subfield E of F.
The result is an element of E.
</BLOCKQUOTE>
<H5><A NAME = "1655">AbsoluteNorm(a) : FldFinElt -&gt; FldFinElt</A></H5>
<H5>NormAbs(a) : FldFinElt -&gt; FldFinElt</H5>
<BLOCKQUOTE>
The absolute norm of the element a, that is, the norm
to the prime subfield of the parent field F of a.
</BLOCKQUOTE>
<H5><A NAME = "1656">Trace(a) : FldFinElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The trace of the element a from the field F to the ground field of F. 
</BLOCKQUOTE>
<H5><A NAME = "1657">Trace(a, E) : FldFinElt, FldFin -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The relative trace of the element a from field F, 
with respect to the subfield E of F.
The result is an element of E.
</BLOCKQUOTE>
<H5><A NAME = "1658">AbsoluteTrace(a) : FldFinElt -&gt; FldFinElt</A></H5>
<H5>TraceAbs(a) : FldFinElt -&gt; FldFinElt</H5>
<BLOCKQUOTE>
The trace of the element a, that is, the trace
to the prime subfield of the parent field F of a.
</BLOCKQUOTE>
<H5><A NAME = "1659">Frobenius(a) : FldFinElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The Frobenius image of a w.r.t. the ground field of K;
i.e., a<sup>#G</sup>, where G is the ground field of the parent of a.
</BLOCKQUOTE>
<H5><A NAME = "1660">Frobenius(a, r) : FldFinElt, RngIntElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The r-th Frobenius image of a w.r.t. the ground field of K;
i.e., a<sup>(#G)<sup>r</sup></sup>, where G is the ground field of the parent of a.
</BLOCKQUOTE>
<H5><A NAME = "1661">Frobenius(a, E) : FldFinElt, FldFin -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The Frobenius image of x w.r.t. E; i.e., x<sup>#E</sup>.
</BLOCKQUOTE>
<H5><A NAME = "1662">Frobenius(a, E, r) : FldFinElt, FldFin, RngIntElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The Frobenius image of x w.r.t. E; i.e., x<sup>(#E)<sup>r</sup></sup>.
</BLOCKQUOTE>
<H5><A NAME = "1663">NormEquation(K, y) : FldFin, FldFin -&gt; BoolElt, FldFinElt</A></H5>
<BLOCKQUOTE>
Given a finite field K and an element y of a subfield S of K,
return whether an element x&isin;K exists such that Norm(x, S) = y,
and, if so, such an element x (in K).
</BLOCKQUOTE>
<H5><A NAME = "1664">Hilbert90(a, q) : FldFinElt, RngIntElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
Given an element a of some  finite field k and a power q of the
characteristic of k, return a solution of the Hilbert 90 equation
x<sup>q</sup>x<sup> - 1</sup>=a.
Note that the solution may be in a finite-degree extension of k.
</BLOCKQUOTE>
<H5><A NAME = "1665">AdditiveHilbert90(a, q) : FldFinElt, RngIntElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
Given an element a of some finite field k and a power q of the
characteristic of k, return a solution of the additive Hilbert 90 equation
x<sup>q</sup> - x=a.
Note that the solution may be in a finite-degree extension of k.
</BLOCKQUOTE>
<H4><A NAME = "1666">Order and Roots</A></H4>



<H5><A NAME = "1667">Order(a) : FldFinElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The multiplicative order of the non-zero element a of the field F.
</BLOCKQUOTE>
<H5><A NAME = "1668">FactoredOrder(a) : FldFinElt -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The multiplicative order of the non-zero element a of the field F
as a factorization sequence.
</BLOCKQUOTE>
<H5><A NAME = "1669">SquareRoot(a) : FldFinElt -&gt; FldFinElt</A></H5>
<H5>Sqrt(a) : FldFinElt -&gt; FldFinElt</H5>
<BLOCKQUOTE>
The square root of the non-zero element a from the field 
F, i.e., an element y of F  such that y<sup>2</sup> = a.
An error results if a is not a square.
</BLOCKQUOTE>
<H5><A NAME = "1670">Root(a, n) : FldFinElt, RngIntElt -&gt; FldFinElt</A></H5>
<BLOCKQUOTE>
The n-th root of the non-zero element a from the field
F, i.e., an element y of F such that y<sup>n</sup> = a.
An error results if no such root exists.
</BLOCKQUOTE>
<H5><A NAME = "1671">IsPower(a, n) : FldFinElt, RngIntElt -&gt; BoolElt, FldFinElt</A></H5>
<BLOCKQUOTE>
Given a finite field element a&isin;F, and an integer n&gt;0,
this function returns either <TT>true</TT> and an element b&isin;F such that b<sup>n</sup>=a,
or it returns <TT>false</TT> in the case that such an element does not exist.
</BLOCKQUOTE>
<H5><A NAME = "1672">AllRoots(a, n) : FldFinElt, RngIntElt -&gt; SeqEnum</A></H5>
<BLOCKQUOTE>
Given a finite field element a&isin;F, and an integer n&gt;0,
return a sequence containing all of the n-th roots of a which lie in the
same field F.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "1673">Example <TT>FldFin_Functions (H21E4)</TT></A></H3>
Given the fields F and F49 defined above, we can use the following
functions:
<P>
<P>
<PRE>
&gt; F7 := FiniteField(7);
&gt; F49&lt;w&gt; := ext&lt; F7 | 2 &gt;;
&gt; F&lt;z&gt; := ext&lt; F49 | 2 &gt;;
&gt; Root(z^73, 7);
z^1039
&gt; Trace(z^73);
1
&gt; Trace(z^73, F49);
w^44
&gt; Norm(z^73);
3
&gt; Norm(z^73, F49);
w^37
&gt; Norm(w^37);
3
&gt; MinimalPolynomial(z^73);
x^2 + w^20*x + w^43
&gt; MinimalPolynomial(z^73, F7);
x^4 + 4*x^2 + 4*x + 3
</PRE>
We now demonstrate the <TT>NormEquation</TT> function.
<P>
<P>
<PRE>
&gt; Norm(z);
3
&gt; NormEquation(F, F7!3);
true z
&gt; Norm(z^30, F49);
w^30
&gt; Parent(z) eq F;
true
&gt; NormEquation(F, w^30);
true z^30
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text193.htm">[Next]</A><A  HREF = "text191.htm">[Prev]</A> <A  HREF = "text193.htm">[Right]</A> <A  HREF = "text191.htm">[Left]</A> <A  HREF = "text188.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>