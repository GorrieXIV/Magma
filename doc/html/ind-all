3<->statement-expressions :<->text3.htm<->statement-expressions :: STATEMENTS AND EXPRESSIONS
3<->introduction :<->text4.htm<->introduction :: Introduction (STATEMENTS AND EXPRESSIONS)
3<->startup-interrupt-quit :<->text5.htm<->startup-interrupt-quit :: Starting, Interrupting and Terminating (STATEMENTS AND EXPRESSIONS)
5<->control-C-key :<->text5.htm#5<->control-C-key :: &lt;Ctrl&gt;-C
5<->control-D-key :<->text5.htm#6<->control-D-key :: quit;
5<->quit;<->text5.htm#6<->quit;
5<->control-\-key :<->text5.htm#7<->control-\-key :: &lt;Ctrl&gt;-\
3<->startup-interrupt-quit :<->text5.htm<->startup-interrupt-quit :: Starting, Interrupting and Terminating (STATEMENTS AND EXPRESSIONS)
3<->identifier :<->text6.htm<->identifier :: Identifiers (STATEMENTS AND EXPRESSIONS)
3<->assignment :<->text7.htm<->assignment :: Assignment (STATEMENTS AND EXPRESSIONS)
3<->simple-assignment :<->text7.htm#10<->simple-assignment :: Simple Assignment (STATEMENTS AND EXPRESSIONS)
5<->x <->text7.htm#11<->x := expression;
4<->State_Identifiers (Example H1E1)<->text7.htm#12<->State_Identifiers (Example H1E1)
4<->Example-Identifiers :<->text7.htm#12<->Example-Identifiers :: State_Identifiers (Example H1E1)
5<->x1, x2, ..., xn <->text7.htm#13<->x<sub>1</sub>, x<sub>2</sub>, ..., x<sub>n</sub> := expression;
5<->_ <->text7.htm#14<->_ := expression;
5<->assigned  x <->text7.htm#15<->assigned  x : Var -&gt; BoolElt
4<->State_MultipleReturns (Example H1E2)<->text7.htm#16<->State_MultipleReturns (Example H1E2)
4<->Example-MultipleReturns :<->text7.htm#16<->Example-MultipleReturns :: State_MultipleReturns (Example H1E2)
3<->simple-assignment :<->text7.htm#10<->simple-assignment :: Simple Assignment (STATEMENTS AND EXPRESSIONS)
3<->indexed-assignment :<->text7.htm#17<->indexed-assignment :: Indexed Assignment (STATEMENTS AND EXPRESSIONS)
5<->x[\expr$_1$,\expr$_2$,...,\expr$_n$] := \expression; :: x[expr1][expr2]...[exprn] <->text7.htm#18<->x[\expr$_1$,\expr$_2$,...,\expr$_n$] := \expression; :: x[expr<sub>1</sub>][expr<sub>2</sub>]...[expr<sub>n</sub>] := expression;
5<->[] :: x[expr1][expr2]...[exprn] <->text7.htm#18<->[] :: x[expr<sub>1</sub>][expr<sub>2</sub>]...[expr<sub>n</sub>] := expression;
4<->State_Indexing (Example H1E3)<->text7.htm#19<->State_Indexing (Example H1E3)
4<->Example-Indexing :<->text7.htm#19<->Example-Indexing :: State_Indexing (Example H1E3)
3<->indexed-assignment :<->text7.htm#17<->indexed-assignment :: Indexed Assignment (STATEMENTS AND EXPRESSIONS)
3<->generator-assignment :<->text7.htm#20<->generator-assignment :: Generator Assignment (STATEMENTS AND EXPRESSIONS)
5<-> :: E<x1, x2, ...xn> <->text7.htm#21<-><> :: E&lt;x<sub>1</sub>, x<sub>2</sub>, ...x<sub>n</sub>&gt; := expression;
5<-> :: E<[x]> <->text7.htm#22<-><[]> :: E&lt;[x]&gt; := expression;
4<->State_GeneratorNamingSequence (Example H1E4)<->text7.htm#23<->State_GeneratorNamingSequence (Example H1E4)
4<->Example-GeneratorNamingSequence :<->text7.htm#23<->Example-GeneratorNamingSequence :: State_GeneratorNamingSequence (Example H1E4)
5<->AssignNames(~S, [s1, ... sn] ) <->text7.htm#24<->AssignNames(~S, [s<sub>1</sub>, ... s<sub>n</sub>] ) : Str, [ MonStgElt ] -&gt;
4<->State_GeneratorNaming (Example H1E5)<->text7.htm#25<->State_GeneratorNaming (Example H1E5)
4<->Example-GeneratorNaming :<->text7.htm#25<->Example-GeneratorNaming :: State_GeneratorNaming (Example H1E5)
3<->generator-assignment :<->text7.htm#20<->generator-assignment :: Generator Assignment (STATEMENTS AND EXPRESSIONS)
3<->mutation :<->text7.htm#26<->mutation :: Mutation Assignment (STATEMENTS AND EXPRESSIONS)
5<->operator:= :: x o<->text7.htm#27<->operator:= :: x o:= expression;
4<->State_MutationAssignment (Example H1E6)<->text7.htm#28<->State_MutationAssignment (Example H1E6)
4<->Example-MutationAssignment :<->text7.htm#28<->Example-MutationAssignment :: State_MutationAssignment (Example H1E6)
3<->mutation :<->text7.htm#26<->mutation :: Mutation Assignment (STATEMENTS AND EXPRESSIONS)
3<->deletion :<->text7.htm#29<->deletion :: Deletion of Values (STATEMENTS AND EXPRESSIONS)
5<->delete  x <->text7.htm#30<->delete  x : Var -&gt;
3<->deletion :<->text7.htm#29<->deletion :: Deletion of Values (STATEMENTS AND EXPRESSIONS)
3<->assignment :<->text7.htm<->assignment :: Assignment (STATEMENTS AND EXPRESSIONS)
3<->boolean :<->text8.htm<->boolean :: Boolean Values (STATEMENTS AND EXPRESSIONS)
3<->creation :<->text8.htm#32<->creation :: Creation of Booleans (STATEMENTS AND EXPRESSIONS)
5<->Booleans() <->text8.htm#33<->Booleans() : -&gt; Bool
5<-># B <->text8.htm#34<-># B : Bool -&gt; RngIntElt
5<->false :<->text8.htm#35<->false :: true
5<->true<->text8.htm#35<->true
5<->Random(B) <->text8.htm#36<->Random(B) : Bool -&gt; BoolElt
3<->creation :<->text8.htm#32<->creation :: Creation of Booleans (STATEMENTS AND EXPRESSIONS)
3<->operation-element :<->text8.htm#37<->operation-element :: Boolean Operators (STATEMENTS AND EXPRESSIONS)
5<->x and y <->text8.htm#38<->x and y : BoolElt, BoolElt -&gt; BoolElt
5<->x or y<->text8.htm#39<->x or y: BoolElt, BoolElt -&gt; BoolElt
5<->x xor y<->text8.htm#40<->x xor y: BoolElt, BoolElt -&gt; BoolElt
5<->not  x <->text8.htm#41<->not  x : BoolElt -&gt; BoolElt
3<->operation-element :<->text8.htm#37<->operation-element :: Boolean Operators (STATEMENTS AND EXPRESSIONS)
3<->equality-operators :<->text8.htm#42<->equality-operators :: Equality Operators (STATEMENTS AND EXPRESSIONS)
5<->x eq y <->text8.htm#43<->x eq y : Any, Any -&gt; BoolElt
5<->x ne y <->text8.htm#44<->x ne y : Any, Any -&gt; BoolElt
5<->x cmpeq y <->text8.htm#45<->x cmpeq y : Any, Any -&gt; BoolElt
5<->x cmpne y <->text8.htm#46<->x cmpne y : Any, Any -&gt; BoolElt
4<->State_Equality (Example H1E7)<->text8.htm#47<->State_Equality (Example H1E7)
4<->Example-Equality :<->text8.htm#47<->Example-Equality :: State_Equality (Example H1E7)
3<->equality-operators :<->text8.htm#42<->equality-operators :: Equality Operators (STATEMENTS AND EXPRESSIONS)
3<->iteration :<->text8.htm#48<->iteration :: Iteration (STATEMENTS AND EXPRESSIONS)
4<->State_Booleans (Example H1E8)<->text8.htm#49<->State_Booleans (Example H1E8)
4<->Example-Booleans :<->text8.htm#49<->Example-Booleans :: State_Booleans (Example H1E8)
3<->iteration :<->text8.htm#48<->iteration :: Iteration (STATEMENTS AND EXPRESSIONS)
3<->boolean :<->text8.htm<->boolean :: Boolean Values (STATEMENTS AND EXPRESSIONS)
3<->coercion :<->text9.htm<->coercion :: Coercion (STATEMENTS AND EXPRESSIONS)
5<->S ! x <->text9.htm#51<->S ! x : Str, Elt -&gt; Elt
5<->IsCoercible(S, x) <->text9.htm#52<->IsCoercible(S, x) : Str, Elt -&gt; Bool, Elt
3<->coercion :<->text9.htm<->coercion :: Coercion (STATEMENTS AND EXPRESSIONS)
3<->where-is :<->text10.htm<->where-is :: The <TT>where ... is</TT> Construction (STATEMENTS AND EXPRESSIONS)
5<->where-:= :<->text10.htm#54<->where-:= :: expression<sub>1</sub> where identifier is expression<sub>2</sub>
5<->where-is :<->text10.htm#54<->where-is :: expression<sub>1</sub> where identifier is expression<sub>2</sub>
4<->State_where (Example H1E9)<->text10.htm#55<->State_where (Example H1E9)
4<->Example-where :<->text10.htm#55<->Example-where :: State_where (Example H1E9)
3<->where-is :<->text10.htm<->where-is :: The <TT>where ... is</TT> Construction (STATEMENTS AND EXPRESSIONS)
3<->conditional :<->text11.htm<->conditional :: Conditional Statements and  Expressions (STATEMENTS AND EXPRESSIONS)
3<->conditional-statement :<->text11.htm#57<->conditional-statement :: The Simple Conditional Statement (STATEMENTS AND EXPRESSIONS)
5<->if \boolexpr$_1$ then \statements\ end if <->text11.htm#58<->if \boolexpr$_1$ then \statements\ end if : ->
5<->if boolexpr1 then statements1 else statements2 end if <->text11.htm#58<->if boolexpr<sub>1</sub> then statements<sub>1</sub> else statements<sub>2</sub> end if : -&gt;
5<->if boolexpr1 then statements1 elif boolexpr2 then statements2 else statements3 end if <->text11.htm#59<->if boolexpr<sub>1</sub> then statements<sub>1</sub> elif boolexpr<sub>2</sub> then statements<sub>2</sub> else statements<sub>3</sub> end if : -&gt;
4<->State_if (Example H1E10)<->text11.htm#60<->State_if (Example H1E10)
4<->Example-if :<->text11.htm#60<->Example-if :: State_if (Example H1E10)
3<->conditional-statement :<->text11.htm#57<->conditional-statement :: The Simple Conditional Statement (STATEMENTS AND EXPRESSIONS)
3<->conditional-expression :<->text11.htm#61<->conditional-expression :: The Simple Conditional Expression (STATEMENTS AND EXPRESSIONS)
4<->State_InLineConditional (Example H1E11)<->text11.htm#62<->State_InLineConditional (Example H1E11)
4<->Example-InLineConditional :<->text11.htm#62<->Example-InLineConditional :: State_InLineConditional (Example H1E11)
3<->conditional-expression :<->text11.htm#61<->conditional-expression :: The Simple Conditional Expression (STATEMENTS AND EXPRESSIONS)
3<->case-statement :<->text11.htm#63<->case-statement :: The Case Statement (STATEMENTS AND EXPRESSIONS)
5<->case expr : when expri : statements end case <->text11.htm#64<->case expr : when expr<sub>i</sub> : statements end case : -&gt;
4<->State_case (Example H1E12)<->text11.htm#65<->State_case (Example H1E12)
4<->Example-case :<->text11.htm#65<->Example-case :: State_case (Example H1E12)
3<->case-statement :<->text11.htm#63<->case-statement :: The Case Statement (STATEMENTS AND EXPRESSIONS)
3<->case-expression :<->text11.htm#66<->case-expression :: The Case Expression (STATEMENTS AND EXPRESSIONS)
5<->case< expr | exprleft, 1 : expr_((right), 1), ..., expr_((left), n) : expr_((right), n), default : exprdef> <->text11.htm#67<->case&lt; expr | expr<sub>left, 1</sub> : expr_((right), 1), ..., expr_((left), n) : expr_((right), n), default : expr<sub>def</sub>&gt; : -&gt;
3<->case-expression :<->text11.htm#66<->case-expression :: The Case Expression (STATEMENTS AND EXPRESSIONS)
3<->conditional :<->text11.htm<->conditional :: Conditional Statements and  Expressions (STATEMENTS AND EXPRESSIONS)
3<->error-handling :<->text12.htm<->error-handling :: Error Handling Statements (STATEMENTS AND EXPRESSIONS)
3<->Err :<->text12.htm#69<->Err :: The Error Objects (STATEMENTS AND EXPRESSIONS)
3<->error-object :<->text12.htm#69<->error-object :: The Error Objects (STATEMENTS AND EXPRESSIONS)
5<->Error(x) <->text12.htm#70<->Error(x) : Any -&gt; Err
5<->e`Position <->text12.htm#71<->e`Position : Err -&gt; MonStgElt
5<->e`Traceback <->text12.htm#72<->e`Traceback : Err -&gt; MonStgElt
5<->e`Object <->text12.htm#73<->e`Object : Err -&gt; Any
5<->e`Type <->text12.htm#74<->e`Type : Err -&gt; MonStgElt
3<->error-object :<->text12.htm#69<->error-object :: The Error Objects (STATEMENTS AND EXPRESSIONS)
3<->errors :<->text12.htm#75<->errors :: Error Checking and Assertions (STATEMENTS AND EXPRESSIONS)
5<->error expression, ..., expression;<->text12.htm#76<->error expression, ..., expression;
5<->error-if :<->text12.htm#77<->error-if :: error if boolexpr, expression, ..., expression;
5<->assert2 :<->text12.htm#78<->assert2 :: assert boolexpr;
5<->assert3 :<->text12.htm#78<->assert3 :: assert boolexpr;
5<->assert boolexpr;<->text12.htm#78<->assert boolexpr;
3<->errors :<->text12.htm#75<->errors :: Error Checking and Assertions (STATEMENTS AND EXPRESSIONS)
3<->error-catching :<->text12.htm#79<->error-catching :: Catching Errors (STATEMENTS AND EXPRESSIONS)
5<->try statements catch e statements end try <->text12.htm#80<->try statements catch e statements end try : -&gt;
4<->State_while (Example H1E13)<->text12.htm#81<->State_while (Example H1E13)
4<->Example-while :<->text12.htm#81<->Example-while :: State_while (Example H1E13)
3<->error-catching :<->text12.htm#79<->error-catching :: Catching Errors (STATEMENTS AND EXPRESSIONS)
3<->error-handling :<->text12.htm<->error-handling :: Error Handling Statements (STATEMENTS AND EXPRESSIONS)
3<->iteration :<->text13.htm<->iteration :: Iterative Statements (STATEMENTS AND EXPRESSIONS)
3<->for-statement :<->text13.htm#83<->for-statement :: Definite Iteration (STATEMENTS AND EXPRESSIONS)
5<->for i := expr1 to expr2 by expr3 do <->text13.htm#84<->for i := expr<sub>1</sub> to expr<sub>2</sub> by expr<sub>3</sub> do : -&gt;
5<->for x in S do <->text13.htm#85<->for x in S do : ->
5<->for i := expr1 to expr2 do <->text13.htm#85<->for i := expr<sub>1</sub> to expr<sub>2</sub> do : -&gt;
3<->for-statement :<->text13.htm#83<->for-statement :: Definite Iteration (STATEMENTS AND EXPRESSIONS)
3<->repeat-statement :<->text13.htm#86<->repeat-statement :: Indefinite Iteration (STATEMENTS AND EXPRESSIONS)
5<->while boolexpr do statements end while <->text13.htm#87<->while boolexpr do statements end while : -&gt;
4<->State_while (Example H1E14)<->text13.htm#88<->State_while (Example H1E14)
4<->Example-while :<->text13.htm#88<->Example-while :: State_while (Example H1E14)
5<->repeat statements until boolexpr <->text13.htm#89<->repeat statements until boolexpr : -&gt;
4<->State_repeat (Example H1E15)<->text13.htm#90<->State_repeat (Example H1E15)
4<->Example-repeat :<->text13.htm#90<->Example-repeat :: State_repeat (Example H1E15)
3<->repeat-statement :<->text13.htm#86<->repeat-statement :: Indefinite Iteration (STATEMENTS AND EXPRESSIONS)
3<->continue-break :<->text13.htm#91<->continue-break :: Early Exit from Iterative Statements (STATEMENTS AND EXPRESSIONS)
4<->State_break (Example H1E16)<->text13.htm#92<->State_break (Example H1E16)
4<->Example-break :<->text13.htm#92<->Example-break :: State_break (Example H1E16)
3<->continue-break :<->text13.htm#91<->continue-break :: Early Exit from Iterative Statements (STATEMENTS AND EXPRESSIONS)
3<->iteration :<->text13.htm<->iteration :: Iterative Statements (STATEMENTS AND EXPRESSIONS)
3<->eval-expression :: Runtime Evaluation<->text14.htm<->eval-expression :: Runtime Evaluation: the eval Expression (STATEMENTS AND EXPRESSIONS)
5<->eval expression<->text14.htm#94<->eval expression
4<->State_eval1 (Example H1E17)<->text14.htm#95<->State_eval1 (Example H1E17)
4<->Example-eval1 :<->text14.htm#95<->Example-eval1 :: State_eval1 (Example H1E17)
4<->State_eval2 (Example H1E18)<->text14.htm#96<->State_eval2 (Example H1E18)
4<->Example-eval2 :<->text14.htm#96<->Example-eval2 :: State_eval2 (Example H1E18)
3<->eval-expression :: Runtime Evaluation<->text14.htm<->eval-expression :: Runtime Evaluation: the eval Expression (STATEMENTS AND EXPRESSIONS)
3<->comment-continuation :<->text15.htm<->comment-continuation :: Comments and Continuation (STATEMENTS AND EXPRESSIONS)
5<->//<->text15.htm#98<->//
5<->/**/ :<->text15.htm#99<->/**/ :: /*  */
5<->\<->text15.htm#100<->\
4<->State_Various (Example H1E19)<->text15.htm#101<->State_Various (Example H1E19)
4<->Example-Various :<->text15.htm#101<->Example-Various :: State_Various (Example H1E19)
3<->comment-continuation :<->text15.htm<->comment-continuation :: Comments and Continuation (STATEMENTS AND EXPRESSIONS)
3<->timing :<->text16.htm<->timing :: Timing (STATEMENTS AND EXPRESSIONS)
5<->Cputime() <->text16.htm#103<->Cputime() : -&gt; FldReElt
5<->Cputime(t) <->text16.htm#104<->Cputime(t) : FldReElt -&gt; FldReElt
5<->Realtime() <->text16.htm#105<->Realtime() : -&gt; FldReElt
5<->Realtime(t) <->text16.htm#106<->Realtime(t) : FldReElt -&gt; FldReElt
5<->ClockCycles() <->text16.htm#107<->ClockCycles() : -&gt; RngIntElt
5<->time statement;<->text16.htm#108<->time statement;
5<->vtime \sl flag, $n$: {\sl statement}<->text16.htm#109<->vtime \sl flag, $n$: {\sl statement}:
5<->vtime flag<->text16.htm#109<->vtime flag: <I>statement</I>;
5<->SetShowRealTime(v) <->text16.htm#110<->SetShowRealTime(v) : BoolElt -&gt;
5<->GetShowRealTime() <->text16.htm#111<->GetShowRealTime() : -&gt; BoolElt
4<->State_Time (Example H1E20)<->text16.htm#112<->State_Time (Example H1E20)
4<->Example-Time :<->text16.htm#112<->Example-Time :: State_Time (Example H1E20)
3<->timing :<->text16.htm<->timing :: Timing (STATEMENTS AND EXPRESSIONS)
3<->type :<->text17.htm<->type :: Types, Category Names, and  Structures (STATEMENTS AND EXPRESSIONS)
5<->Category :: Type(x) <->text17.htm#114<->Category :: Type(x) : Elt -&gt; Cat
5<->Type(x) <->text17.htm#114<->Type(x) : Elt -&gt; Cat
5<->ExtendedCategory :: ExtendedType(x) <->text17.htm#115<->ExtendedCategory :: ExtendedType(x) : Elt -&gt; ECat
5<->ExtendedType(x) <->text17.htm#115<->ExtendedType(x) : Elt -&gt; ECat
5<->ISA(T, U) <->text17.htm#116<->ISA(T, U) : Cat, ECat -> BoolElt
5<->ISA(T, U) <->text17.htm#116<->ISA(T, U) : ECat, Cat -> BoolElt
5<->ISA(T, U) <->text17.htm#116<->ISA(T, U) : ECat, ECat -> BoolElt
5<->ISA(T, U) <->text17.htm#116<->ISA(T, U) : Cat, Cat -&gt; BoolElt
5<->MakeType(S) <->text17.htm#117<->MakeType(S) : MonStgElt -&gt; Cat
5<->ElementType(S) <->text17.htm#118<->ElementType(S) : Str -&gt; Cat
5<->CoveringStructure(S, T) <->text17.htm#119<->CoveringStructure(S, T) : Str, Str -&gt; Str
5<->ExistsCoveringStructure(S, T) <->text17.htm#120<->ExistsCoveringStructure(S, T) : Str, Str -&gt; BoolElt, Str
4<->State_TypeStructures (Example H1E21)<->text17.htm#121<->State_TypeStructures (Example H1E21)
4<->Example-TypeStructures :<->text17.htm#121<->Example-TypeStructures :: State_TypeStructures (Example H1E21)
3<->type :<->text17.htm<->type :: Types, Category Names, and  Structures (STATEMENTS AND EXPRESSIONS)
3<->random :<->text18.htm<->random :: Random Object Generation (STATEMENTS AND EXPRESSIONS)
5<->SetSeed(s) <->text18.htm#123<->SetSeed(s) : RngIntElt ->
5<->SetSeed(s, c) <->text18.htm#123<->SetSeed(s, c) : RngIntElt, RngIntElt -&gt;
5<->GetSeed() <->text18.htm#124<->GetSeed() : -&gt; RngIntElt, RngIntElt
5<->Random(S) <->text18.htm#125<->Random(S) : Str -&gt; Elt
5<->Random(a, b) <->text18.htm#126<->Random(a, b) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Random(b) <->text18.htm#127<->Random(b) : RngIntElt -&gt; RngIntElt
4<->State_IsIntrinsic (Example H1E22)<->text18.htm#128<->State_IsIntrinsic (Example H1E22)
4<->Example-IsIntrinsic :<->text18.htm#128<->Example-IsIntrinsic :: State_IsIntrinsic (Example H1E22)
3<->random :<->text18.htm<->random :: Random Object Generation (STATEMENTS AND EXPRESSIONS)
3<->misc :<->text19.htm<->misc :: Miscellaneous (STATEMENTS AND EXPRESSIONS)
5<->IsIntrinsic(S) <->text19.htm#130<->IsIntrinsic(S) : MonStgElt -&gt; Bool, Intrinsic
4<->State_IsIntrinsic (Example H1E23)<->text19.htm#131<->State_IsIntrinsic (Example H1E23)
4<->Example-IsIntrinsic :<->text19.htm#131<->Example-IsIntrinsic :: State_IsIntrinsic (Example H1E23)
3<->misc :<->text19.htm<->misc :: Miscellaneous (STATEMENTS AND EXPRESSIONS)
3<->statement-expressions :<->text3.htm<->statement-expressions :: STATEMENTS AND EXPRESSIONS
3<->function-procedure-package :<->text21.htm<->function-procedure-package :: FUNCTIONS, PROCEDURES AND PACKAGES
3<->introduction :<->text22.htm<->introduction :: Introduction (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->function-procedure :<->text23.htm<->function-procedure :: Functions and Procedures (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->function :<->text23.htm#136<->function :: Functions (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->function f(x$_1$, ..., x$_n$: \parameters) <->text23.htm#137<->function f(x$_1$, ..., x$_n$: \parameters) : ->
5<->f := function(x1, ..., xn: parameters) <->text23.htm#137<->f := function(x<sub>1</sub>, ..., x<sub>n</sub>: parameters) : -&gt;
5<->f := function(x1, ..., xn, ...: parameters) <->text23.htm#138<->f := function(x<sub>1</sub>, ..., x<sub>n</sub>, ...: parameters) : -&gt;
5<->function f(x1, ..., xn: parameters) <->text23.htm#139<->function f(x<sub>1</sub>, ..., x<sub>n</sub>: parameters) : -&gt;
5<->function f(x1, ..., xn, ...: parameters) <->text23.htm#140<->function f(x<sub>1</sub>, ..., x<sub>n</sub>, ...: parameters) : -&gt;
4<->Func_Recursion (Example H2E1)<->text23.htm#141<->Func_Recursion (Example H2E1)
4<->Example-Recursion :<->text23.htm#141<->Example-Recursion :: Func_Recursion (Example H2E1)
4<->Func_Parameters (Example H2E2)<->text23.htm#142<->Func_Parameters (Example H2E2)
4<->Example-Parameters :<->text23.htm#142<->Example-Parameters :: Func_Parameters (Example H2E2)
4<->Func_Underscore (Example H2E3)<->text23.htm#143<->Func_Underscore (Example H2E3)
4<->Example-Underscore :<->text23.htm#143<->Example-Underscore :: Func_Underscore (Example H2E3)
4<->Func_Variadic (Example H2E4)<->text23.htm#144<->Func_Variadic (Example H2E4)
4<->Example-Variadic :<->text23.htm#144<->Example-Variadic :: Func_Variadic (Example H2E4)
3<->function :<->text23.htm#136<->function :: Functions (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->procedure :<->text23.htm#145<->procedure :: Procedures (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->procedure p(x$_1$, ..., x$_n$: \parameters) \statements\ <->text23.htm#146<->procedure p(x$_1$, ..., x$_n$: \parameters) \statements\ : ->
5<->p := procedure(x1, ..., xn: parameters) statements <->text23.htm#146<->p := procedure(x<sub>1</sub>, ..., x<sub>n</sub>: parameters) statements : -&gt;
5<->procedure p(x$_1$, ..., x$_n$, ...: \parameters) \statements\ <->text23.htm#147<->procedure p(x$_1$, ..., x$_n$, ...: \parameters) \statements\ : ->
5<->p := procedure(x1, ..., xn, ...: parameters) statements <->text23.htm#147<->p := procedure(x<sub>1</sub>, ..., x<sub>n</sub>, ...: parameters) statements : -&gt;
5<->p := proc< x1, ..., xn<->text23.htm#148<->p := proc&lt; x<sub>1</sub>, ..., x<sub>n</sub>: parameters | expression &gt;;
5<->p := proc< x1, ..., xn, ...<->text23.htm#149<->p := proc&lt; x<sub>1</sub>, ..., x<sub>n</sub>, ...: parameters | expression &gt;;
4<->Func_Procedures (Example H2E5)<->text23.htm#150<->Func_Procedures (Example H2E5)
4<->Example-Procedures :<->text23.htm#150<->Example-Procedures :: Func_Procedures (Example H2E5)
3<->procedure :<->text23.htm#145<->procedure :: Procedures (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->The forward Declaration (FUNCTIONS, PROCEDURES AND PACKAGES)<->text23.htm#151<->The forward Declaration (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->forward  f; <->text23.htm#152<->forward  f; : identifier -&gt;
4<->Func_forward (Example H2E6)<->text23.htm#153<->Func_forward (Example H2E6)
4<->Example-forward :<->text23.htm#153<->Example-forward :: Func_forward (Example H2E6)
3<->The forward Declaration (FUNCTIONS, PROCEDURES AND PACKAGES)<->text23.htm#151<->The forward Declaration (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->function-procedure :<->text23.htm<->function-procedure :: Functions and Procedures (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->package :<->text24.htm<->package :: Packages (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->introduction :<->text24.htm#155<->introduction :: Introduction (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->intrinsic :<->text24.htm#156<->intrinsic :: Intrinsics (FUNCTIONS, PROCEDURES AND PACKAGES)
4<->Func_intrinsic (Example H2E7)<->text24.htm#157<->Func_intrinsic (Example H2E7)
4<->Example-intrinsic :<->text24.htm#157<->Example-intrinsic :: Func_intrinsic (Example H2E7)
3<->intrinsic :<->text24.htm#156<->intrinsic :: Intrinsics (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->intrinsic-lookup :<->text24.htm#158<->intrinsic-lookup :: Resolving Calls to Intrinsics (FUNCTIONS, PROCEDURES AND PACKAGES)
4<->Func_intrinsic-lookup (Example H2E8)<->text24.htm#159<->Func_intrinsic-lookup (Example H2E8)
4<->Example-intrinsic-lookup :<->text24.htm#159<->Example-intrinsic-lookup :: Func_intrinsic-lookup (Example H2E8)
3<->intrinsic-lookup :<->text24.htm#158<->intrinsic-lookup :: Resolving Calls to Intrinsics (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->attach-detach :<->text24.htm#160<->attach-detach :: Attaching and Detaching Package Files (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->Attach(F) <->text24.htm#161<->Attach(F) : MonStgElt -&gt;
5<->Detach(F) <->text24.htm#162<->Detach(F) : MonStgElt -&gt;
5<->freeze;<->text24.htm#163<->freeze;
3<->attach-detach :<->text24.htm#160<->attach-detach :: Attaching and Detaching Package Files (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->lock :<->text24.htm#164<->lock :: Related Files (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->import :<->text24.htm#165<->import :: Importing Constants (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->import "filename"<->text24.htm#166<->import "filename": ident_list;
4<->Func_import (Example H2E9)<->text24.htm#167<->Func_import (Example H2E9)
4<->Example-import :<->text24.htm#167<->Example-import :: Func_import (Example H2E9)
3<->import :<->text24.htm#165<->import :: Importing Constants (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->require :<->text24.htm#168<->require :: Argument Checking (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->require condition<->text24.htm#169<->require condition: <I>print_args</I>;
5<->requirerange v, L, U;<->text24.htm#170<->requirerange v, L, U;
5<->requirege v, L;<->text24.htm#171<->requirege v, L;
4<->Func_require (Example H2E10)<->text24.htm#172<->Func_require (Example H2E10)
4<->Example-require :<->text24.htm#172<->Example-require :: Func_require (Example H2E10)
3<->require :<->text24.htm#168<->require :: Argument Checking (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->spec :<->text24.htm#173<->spec :: Package Specification Files (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->AttachSpec(S) <->text24.htm#174<->AttachSpec(S) : MonStgElt -&gt;
5<->DetachSpec(S) <->text24.htm#175<->DetachSpec(S) : MonStgElt -&gt;
4<->Func_spec (Example H2E11)<->text24.htm#176<->Func_spec (Example H2E11)
4<->Example-spec :<->text24.htm#176<->Example-spec :: Func_spec (Example H2E11)
3<->spec :<->text24.htm#173<->spec :: Package Specification Files (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->startup-spec :<->text24.htm#177<->startup-spec :: User Startup Specification Files (FUNCTIONS, PROCEDURES AND PACKAGES)
4<->Func_startup-spec (Example H2E12)<->text24.htm#178<->Func_startup-spec (Example H2E12)
4<->Example-startup-spec :<->text24.htm#178<->Example-startup-spec :: Func_startup-spec (Example H2E12)
3<->startup-spec :<->text24.htm#177<->startup-spec :: User Startup Specification Files (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->package :<->text24.htm<->package :: Packages (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->attribute :<->text25.htm<->attribute :: Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->system :<->text25.htm#180<->system :: Predefined System Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->user :<->text25.htm#181<->user :: User-defined Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->AddAttribute(C, F) <->text25.htm#182<->AddAttribute(C, F) : Cat, MonStgElt -&gt; ;
5<->declareattributes :: declare attributes C<->text25.htm#183<->declareattributes :: declare attributes C: F<sub>1</sub>, ..., F<sub>n</sub>;
3<->user :<->text25.htm#181<->user :: User-defined Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->access :<->text25.htm#184<->access :: Accessing Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->" :: S`fieldname <->text25.htm#185<->" :: S`fieldname : Str, Fieldname -&gt; Elt
5<->S`fieldname <->text25.htm#185<->S`fieldname : Str, Fieldname -&gt; Elt
5<->assigned \ S``N <->text25.htm#186<->assigned \ S``N : Str, Str -> BoolElt
5<->assigned  S`fieldname <->text25.htm#186<->assigned  S`fieldname : Str, Fieldname -&gt; BoolElt
5<->" :: S`fieldname <->text25.htm#187<->" :: S`fieldname := expression;
5<->S`fieldname <->text25.htm#187<->S`fieldname := expression;
5<->delete \ S``N;<->text25.htm#188<->delete \ S``N;
5<->delete  S`fieldname;<->text25.htm#188<->delete  S`fieldname;
5<->GetAttributes(C) <->text25.htm#189<->GetAttributes(C) : Cat -&gt; [ MonStgElt ]
5<->ListAttributes(C) <->text25.htm#190<->ListAttributes(C) : Cat -&gt;
3<->access :<->text25.htm#184<->access :: Accessing Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->attribute :<->text25.htm<->attribute :: Attributes (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->verbose :<->text26.htm<->verbose :: User-defined Verbose Flags (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->declareverbose :<->text26.htm#192<->declareverbose :: declare verbose F, m;
3<->examples :<->text26.htm#193<->examples :: Examples (FUNCTIONS, PROCEDURES AND PACKAGES)
4<->Func_SystemAttributes (Example H2E13)<->text26.htm#194<->Func_SystemAttributes (Example H2E13)
4<->Example-SystemAttributes :<->text26.htm#194<->Example-SystemAttributes :: Func_SystemAttributes (Example H2E13)
4<->Func_InteractiveUserAttributes (Example H2E14)<->text26.htm#195<->Func_InteractiveUserAttributes (Example H2E14)
4<->Example-InteractiveUserAttributes :<->text26.htm#195<->Example-InteractiveUserAttributes :: Func_InteractiveUserAttributes (Example H2E14)
4<->Func_PackageUserAttributes (Example H2E15)<->text26.htm#196<->Func_PackageUserAttributes (Example H2E15)
4<->Example-PackageUserAttributes :<->text26.htm#196<->Example-PackageUserAttributes :: Func_PackageUserAttributes (Example H2E15)
3<->examples :<->text26.htm#193<->examples :: Examples (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->verbose :<->text26.htm<->verbose :: User-defined Verbose Flags (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->type :<->text27.htm<->type :: User-Defined Types (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->declaration :<->text27.htm#198<->declaration :: Declaring User-Defined Types (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->declaretype :<->text27.htm#199<->declaretype :: declare type T;
5<->declaretypeisa :: declare type T<->text27.htm#200<->declaretypeisa :: declare type T: P<sub>1</sub>, ..., P<sub>n</sub>;
5<->declaretype :<->text27.htm#201<->declaretype :: declare type T[E];
5<->declaretypeisa :: declare type T[E]<->text27.htm#202<->declaretypeisa :: declare type T[E]: P<sub>1</sub>, ..., P<sub>n</sub>;
3<->declaration :<->text27.htm#198<->declaration :: Declaring User-Defined Types (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->new :<->text27.htm#203<->new :: Creating an Object (FUNCTIONS, PROCEDURES AND PACKAGES)
5<->New(T) <->text27.htm#204<->New(T) : Type -&gt; T
3<->new :<->text27.htm#203<->new :: Creating an Object (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->intrinsics :<->text27.htm#205<->intrinsics :: Special Intrinsics Provided by the User (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->Examples (FUNCTIONS, PROCEDURES AND PACKAGES)<->text27.htm#206<->Examples (FUNCTIONS, PROCEDURES AND PACKAGES)
4<->Func_MyRat (Example H2E16)<->text27.htm#207<->Func_MyRat (Example H2E16)
4<->Example-MyRat :<->text27.htm#207<->Example-MyRat :: Func_MyRat (Example H2E16)
4<->Func_UserTypes2 (Example H2E17)<->text27.htm#208<->Func_UserTypes2 (Example H2E17)
4<->Example-UserTypes2 :<->text27.htm#208<->Example-UserTypes2 :: Func_UserTypes2 (Example H2E17)
3<->Examples (FUNCTIONS, PROCEDURES AND PACKAGES)<->text27.htm#206<->Examples (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->type :<->text27.htm<->type :: User-Defined Types (FUNCTIONS, PROCEDURES AND PACKAGES)
3<->function-procedure-package :<->text21.htm<->function-procedure-package :: FUNCTIONS, PROCEDURES AND PACKAGES
3<->IO :<->text29.htm<->IO :: INPUT AND OUTPUT
3<->intro :<->text30.htm<->intro :: Introduction (INPUT AND OUTPUT)
3<->string :<->text31.htm<->string :: Character Strings (INPUT AND OUTPUT)
3<->representation :<->text31.htm#213<->representation :: Representation of Strings (INPUT AND OUTPUT)
3<->creation :<->text31.htm#214<->creation :: Creation of Strings (INPUT AND OUTPUT)
5<->"" :: "abc" <->text31.htm#215<->"" :: "abc" : -&gt; MonStgElt
5<->BString :: BinaryString(s) <->text31.htm#216<->BString :: BinaryString(s) : MonStgElt -&gt; BStgElt
5<->BinaryString(s) <->text31.htm#216<->BinaryString(s) : MonStgElt -&gt; BStgElt
5<->s cat t <->text31.htm#217<->s cat t : BStgElt, BStgElt -> BStgElt
5<->* :: s cat t <->text31.htm#217<->* :: s cat t : MonStgElt, MonStgElt -&gt; MonStgElt
5<->s cat t <->text31.htm#217<->s cat t : MonStgElt, MonStgElt -&gt; MonStgElt
5<->s cat:= t <->text31.htm#218<->s cat:= t : BStgElt, BStgElt -> BStgElt
5<->*:= :: s cat:= t <->text31.htm#218<->*:= :: s cat:= t : MonStgElt, MonStgElt -&gt; MonStgElt
5<->s cat:= t <->text31.htm#218<->s cat:= t : MonStgElt, MonStgElt -&gt; MonStgElt
5<->\&cat s <->text31.htm#219<->\&cat s : [ BStgElt ] -> BStgElt
5<->&* :: &cat s <->text31.htm#219<->&amp;* :: &amp;cat s : [ MonStgElt ] -&gt; MonStgElt
5<->&cat :: &cat s <->text31.htm#219<->&cat :: &amp;cat s : [ MonStgElt ] -&gt; MonStgElt
5<->s ^ n <->text31.htm#220<->s ^ n : MonStgElt, RngIntElt -&gt; MonStgElt
5<->[] :: s[i] <->text31.htm#221<->[] :: s[i] : MonStgElt, RngIntElt -&gt; MonStgElt
5<->[] :: s[i] <->text31.htm#222<->[] :: s[i] : BStgElt, RngIntElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(s) <->text31.htm#223<->Eltseq :: ElementToSequence(s) : MonStgElt -&gt; [ MonStgElt ]
5<->ElementToSequence(s) <->text31.htm#223<->ElementToSequence(s) : MonStgElt -&gt; [ MonStgElt ]
5<->Eltseq :: ElementToSequence(s) <->text31.htm#224<->Eltseq :: ElementToSequence(s) : BStgElt -&gt; [ BStgElt ]
5<->ElementToSequence(s) <->text31.htm#224<->ElementToSequence(s) : BStgElt -&gt; [ BStgElt ]
5<->Substring(s, n, k) <->text31.htm#225<->Substring(s, n, k) : BStgElt, RngIntElt, RngIntElt -> BStgElt
5<->Substring(s, n, k) <->text31.htm#225<->Substring(s, n, k) : MonStgElt, RngIntElt, RngIntElt -&gt; MonStgElt
3<->creation :<->text31.htm#214<->creation :: Creation of Strings (INPUT AND OUTPUT)
3<->length-index :<->text31.htm#226<->length-index :: Integer-Valued Functions (INPUT AND OUTPUT)
5<->\# s <->text31.htm#227<->\# s : BStgElt -> RngIntElt
5<-># s <->text31.htm#227<-># s : MonStgElt -&gt; RngIntElt
5<->Position :: Index(s, t) <->text31.htm#228<->Position :: Index(s, t) : MonStgElt, MonStgElt -&gt; RngIntElt
5<->Index(s, t) <->text31.htm#228<->Index(s, t) : MonStgElt, MonStgElt -&gt; RngIntElt
3<->length-index :<->text31.htm#226<->length-index :: Integer-Valued Functions (INPUT AND OUTPUT)
3<->conversion :<->text31.htm#229<->conversion :: Character Conversion (INPUT AND OUTPUT)
5<->StringToCode(s) <->text31.htm#230<->StringToCode(s) : MonStgElt -&gt; RngIntElt
5<->CodeToString(n) <->text31.htm#231<->CodeToString(n) : RngIntElt -&gt; MonStgElt
5<->StringToInteger(s) <->text31.htm#232<->StringToInteger(s) : MonStgElt -&gt; RngIntElt
5<->StringToInteger(s, b) <->text31.htm#233<->StringToInteger(s, b) : MonStgElt, MonStgElt -&gt; RngIntElt
5<->StringToIntegerSequence(s) <->text31.htm#234<->StringToIntegerSequence(s) : MonStgElt -&gt; [ RngIntElt ]
5<->IntegerToString(n) <->text31.htm#235<->IntegerToString(n) : RngIntElt -&gt; MonStgElt
5<->IntegerToString(n, b) <->text31.htm#236<->IntegerToString(n, b) : RngIntElt, RngIntElt -&gt; MonStgElt
3<->conversion :<->text31.htm#229<->conversion :: Character Conversion (INPUT AND OUTPUT)
3<->Boolean Functions (INPUT AND OUTPUT)<->text31.htm#237<->Boolean Functions (INPUT AND OUTPUT)
5<->s eq t <->text31.htm#238<->s eq t : BStgElt, BStgElt -> BoolElt
5<->s eq t <->text31.htm#238<->s eq t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s ne t <->text31.htm#239<->s ne t : BStgElt, MonStgElt -> BoolElt
5<->s ne t <->text31.htm#239<->s ne t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s in t <->text31.htm#240<->s in t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s notin t <->text31.htm#241<->s notin t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s lt t <->text31.htm#242<->s lt t : BStgElt, BStgElt -> BoolElt
5<->s lt t <->text31.htm#242<->s lt t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s le t <->text31.htm#243<->s le t : BStgElt, BStgElt -> BoolElt
5<->s le t <->text31.htm#243<->s le t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s gt t <->text31.htm#244<->s gt t : BStgElt, BStgElt -> BoolElt
5<->s gt t <->text31.htm#244<->s gt t : MonStgElt, MonStgElt -&gt; BoolElt
5<->s ge t <->text31.htm#245<->s ge t : BStgElt, BStgElt -> BoolElt
5<->s ge t <->text31.htm#245<->s ge t : MonStgElt, MonStgElt -&gt; BoolElt
4<->IO_Strings (Example H3E1)<->text31.htm#246<->IO_Strings (Example H3E1)
4<->Example-Strings :<->text31.htm#246<->Example-Strings :: IO_Strings (Example H3E1)
3<->Boolean Functions (INPUT AND OUTPUT)<->text31.htm#237<->Boolean Functions (INPUT AND OUTPUT)
3<->parsing :<->text31.htm#247<->parsing :: Parsing Strings (INPUT AND OUTPUT)
5<->Split(S) <->text31.htm#248<->Split(S) : MonStgElt -> [ MonStgElt ]
5<->Split(S, D) <->text31.htm#248<->Split(S, D) : MonStgElt, MonStgElt -&gt; [ MonStgElt ]
4<->IO_Split (Example H3E2)<->text31.htm#249<->IO_Split (Example H3E2)
4<->Example-Split :<->text31.htm#249<->Example-Split :: IO_Split (Example H3E2)
5<->Regexp(R, S) <->text31.htm#250<->Regexp(R, S) : MonStgElt, MonStgElt -&gt; BoolElt, MonStgElt, [ MonStgElt ]
4<->IO_Regexp (Example H3E3)<->text31.htm#251<->IO_Regexp (Example H3E3)
4<->Example-Regexp :<->text31.htm#251<->Example-Regexp :: IO_Regexp (Example H3E3)
3<->parsing :<->text31.htm#247<->parsing :: Parsing Strings (INPUT AND OUTPUT)
3<->string :<->text31.htm<->string :: Character Strings (INPUT AND OUTPUT)
3<->print :<->text32.htm<->print :: Printing (INPUT AND OUTPUT)
3<->The print-Statement (INPUT AND OUTPUT)<->text32.htm#253<->The <TT>print</TT>-Statement (INPUT AND OUTPUT)
5<->print \expression, ..., \expression;<->text32.htm#254<->print \expression, ..., \expression;
5<->print \expression <->text32.htm#254<->print \expression : \parameters;
5<->print expression;<->text32.htm#254<->print expression;
3<->The print-Statement (INPUT AND OUTPUT)<->text32.htm#253<->The <TT>print</TT>-Statement (INPUT AND OUTPUT)
3<->The printf and fprintf Statements (INPUT AND OUTPUT)<->text32.htm#255<->The <TT>printf</TT> and <TT>fprintf</TT> Statements (INPUT AND OUTPUT)
5<->printf format, expression, ..., expression;<->text32.htm#256<->printf format, expression, ..., expression;
4<->IO_printf (Example H3E4)<->text32.htm#257<->IO_printf (Example H3E4)
4<->Example-printf :<->text32.htm#257<->Example-printf :: IO_printf (Example H3E4)
4<->IO_printf2 (Example H3E5)<->text32.htm#258<->IO_printf2 (Example H3E5)
4<->Example-printf2 :<->text32.htm#258<->Example-printf2 :: IO_printf2 (Example H3E5)
5<->fprintf file, format, expression, ..., expression;<->text32.htm#259<->fprintf file, format, expression, ..., expression;
4<->IO_printf (Example H3E6)<->text32.htm#260<->IO_printf (Example H3E6)
4<->Example-printf :<->text32.htm#260<->Example-printf :: IO_printf (Example H3E6)
3<->The printf and fprintf Statements (INPUT AND OUTPUT)<->text32.htm#255<->The <TT>printf</TT> and <TT>fprintf</TT> Statements (INPUT AND OUTPUT)
3<->Verbose Printing (vprint, vprintf) (INPUT AND OUTPUT)<->text32.htm#261<->Verbose Printing (<TT>vprint</TT>, <TT>vprintf</TT>) (INPUT AND OUTPUT)
5<->vprint \sl flag, $n$<->text32.htm#262<->vprint \sl flag, $n$: \expression, ..., \expression;
5<->vprint flag<->text32.htm#262<->vprint flag: expression, ..., expression;
5<->vprintf flag<->text32.htm#263<->vprintf flag: format, expression, ..., expression;
3<->Verbose Printing (vprint, vprintf) (INPUT AND OUTPUT)<->text32.htm#261<->Verbose Printing (<TT>vprint</TT>, <TT>vprintf</TT>) (INPUT AND OUTPUT)
3<->auto-print :<->text32.htm#264<->auto-print :: Automatic Printing (INPUT AND OUTPUT)
5<->ShowPrevious() <->text32.htm#265<->ShowPrevious() : -&gt;
5<->ShowPrevious(i) <->text32.htm#266<->ShowPrevious(i) : RngIntElt -&gt;
5<->ClearPrevious() <->text32.htm#267<->ClearPrevious() : -&gt;
5<->SetPreviousSize(n) <->text32.htm#268<->SetPreviousSize(n) : RngIntElt -&gt;
5<->GetPreviousSize() <->text32.htm#269<->GetPreviousSize() : -&gt; RngIntElt
4<->IO_auto-print (Example H3E7)<->text32.htm#270<->IO_auto-print (Example H3E7)
4<->Example-auto-print :<->text32.htm#270<->Example-auto-print :: IO_auto-print (Example H3E7)
3<->auto-print :<->text32.htm#264<->auto-print :: Automatic Printing (INPUT AND OUTPUT)
3<->indent :<->text32.htm#271<->indent :: Indentation (INPUT AND OUTPUT)
5<->IndentPush() <->text32.htm#272<->IndentPush() : -&gt;
5<->IndentPush(C) <->text32.htm#273<->IndentPush(C) : RngIntElt -&gt;
5<->IndentPop() <->text32.htm#274<->IndentPop() : -&gt;
5<->IndentPop(C) <->text32.htm#275<->IndentPop(C) : RngIntElt -&gt;
3<->indent :<->text32.htm#271<->indent :: Indentation (INPUT AND OUTPUT)
3<->printing-file :<->text32.htm#276<->printing-file :: Printing to a File (INPUT AND OUTPUT)
5<->Write :: PrintFile(F, x) <->text32.htm#277<->Write :: PrintFile(F, x) : MonStgElt, Any -&gt;
5<->PrintFile(F, x) <->text32.htm#277<->PrintFile(F, x) : MonStgElt, Any -&gt;
5<->WriteBinary(F, s) <->text32.htm#278<->WriteBinary(F, s) : MonStgElt, BStgElt -&gt;
5<->Write :: PrintFile(F, x, L) <->text32.htm#279<->Write :: PrintFile(F, x, L) : MonStgElt, Any, MonStgElt -&gt;
5<->PrintFile(F, x, L) <->text32.htm#279<->PrintFile(F, x, L) : MonStgElt, Any, MonStgElt -&gt;
5<->PrintFileMagma(F, x) <->text32.htm#280<->PrintFileMagma(F, x) : MonStgElt, Any -&gt;
3<->printing-file :<->text32.htm#276<->printing-file :: Printing to a File (INPUT AND OUTPUT)
3<->sprint :<->text32.htm#281<->sprint :: Printing to a String (INPUT AND OUTPUT)
5<->Sprint(x, L) <->text32.htm#282<->Sprint(x, L) : Elt, MonStgElt -> MonStgElt
5<->Sprint(x) <->text32.htm#282<->Sprint(x) : Elt -&gt; MonStgElt
5<->Sprintf(F, ...) <->text32.htm#283<->Sprintf(F, ...) : MonStgElt, ... -&gt; MonStgElt
4<->IO_Sprintf (Example H3E8)<->text32.htm#284<->IO_Sprintf (Example H3E8)
4<->Example-Sprintf :<->text32.htm#284<->Example-Sprintf :: IO_Sprintf (Example H3E8)
3<->sprint :<->text32.htm#281<->sprint :: Printing to a String (INPUT AND OUTPUT)
3<->redirecting-output :<->text32.htm#285<->redirecting-output :: Redirecting Output (INPUT AND OUTPUT)
5<->SetOutputFile(F) <->text32.htm#286<->SetOutputFile(F) : MonStgElt -&gt;
5<->UnsetOutputFile() <->text32.htm#287<->UnsetOutputFile() : -&gt;
5<->HasOutputFile() <->text32.htm#288<->HasOutputFile() : -&gt; BoolElt
3<->redirecting-output :<->text32.htm#285<->redirecting-output :: Redirecting Output (INPUT AND OUTPUT)
3<->print :<->text32.htm<->print :: Printing (INPUT AND OUTPUT)
3<->eof :<->text33.htm<->eof :: End of File Marker (INPUT AND OUTPUT)
5<->Eof() <->text33.htm#290<->Eof() : -&gt; MonStgElt
5<->IsEof(S) <->text33.htm#291<->IsEof(S) : MonStgElt -&gt; BoolElt
5<->AtEof(I) <->text33.htm#292<->AtEof(I) : IO -&gt; BoolElt
3<->eof :<->text33.htm<->eof :: End of File Marker (INPUT AND OUTPUT)
3<->file :<->text34.htm<->file :: External Files (INPUT AND OUTPUT)
3<->open-file :<->text34.htm#294<->open-file :: Opening Files (INPUT AND OUTPUT)
5<->Open(S, T) <->text34.htm#295<->Open(S, T) : MonStgElt, MonStgElt -&gt; File
3<->open-file :<->text34.htm#294<->open-file :: Opening Files (INPUT AND OUTPUT)
3<->operations :<->text34.htm#296<->operations :: Operations on File Objects (INPUT AND OUTPUT)
5<->Flush(F) <->text34.htm#297<->Flush(F) : File -&gt;
5<->Tell(F) <->text34.htm#298<->Tell(F) : File -&gt; RngIntElt
5<->Seek(F, o, p) <->text34.htm#299<->Seek(F, o, p) : File, RngIntElt, RngIntElt -&gt;
5<->Rewind(F) <->text34.htm#300<->Rewind(F) : File -&gt;
5<->Put(F, S) <->text34.htm#301<->Put(F, S) : File, MonStgElt -&gt;
5<->Puts(F, S) <->text34.htm#302<->Puts(F, S) : File, MonStgElt -&gt;
5<->Getc(F) <->text34.htm#303<->Getc(F) : File -&gt; MonStgElt
5<->Gets(F) <->text34.htm#304<->Gets(F) : File -&gt; MonStgElt
5<->Ungetc(F, c) <->text34.htm#305<->Ungetc(F, c) : MonStgElt, File -&gt; MonStgElt
4<->IO_LineCount (Example H3E9)<->text34.htm#306<->IO_LineCount (Example H3E9)
4<->Example-LineCount :<->text34.htm#306<->Example-LineCount :: IO_LineCount (Example H3E9)
3<->operations :<->text34.htm#296<->operations :: Operations on File Objects (INPUT AND OUTPUT)
3<->reading-file :<->text34.htm#307<->reading-file :: Reading a Complete File (INPUT AND OUTPUT)
5<->Read(F) <->text34.htm#308<->Read(F) : MonStgElt -&gt; MonStgElt
5<->ReadBinary(F) <->text34.htm#309<->ReadBinary(F) : MonStgElt -&gt; BStgElt
4<->IO_Read (Example H3E10)<->text34.htm#310<->IO_Read (Example H3E10)
4<->Example-Read :<->text34.htm#310<->Example-Read :: IO_Read (Example H3E10)
3<->reading-file :<->text34.htm#307<->reading-file :: Reading a Complete File (INPUT AND OUTPUT)
3<->file :<->text34.htm<->file :: External Files (INPUT AND OUTPUT)
3<->pipes :<->text35.htm<->pipes :: Pipes (INPUT AND OUTPUT)
3<->pipes-creation :<->text35.htm#312<->pipes-creation :: Pipe Creation (INPUT AND OUTPUT)
5<->POpen(C, T) <->text35.htm#313<->POpen(C, T) : MonStgElt, MonStgElt -&gt; File
5<->Pipe(C, S) <->text35.htm#314<->Pipe(C, S) : MonStgElt, MonStgElt -&gt; MonStgElt
4<->IO_GetTime (Example H3E11)<->text35.htm#315<->IO_GetTime (Example H3E11)
4<->Example-GetTime :<->text35.htm#315<->Example-GetTime :: IO_GetTime (Example H3E11)
3<->pipes-creation :<->text35.htm#312<->pipes-creation :: Pipe Creation (INPUT AND OUTPUT)
3<->pipes-operations :<->text35.htm#316<->pipes-operations :: Operations on Pipes (INPUT AND OUTPUT)
5<->Read(P : parameters) <->text35.htm#317<->Read(P : parameters) : IO -&gt; MonStgElt
5<->ReadBytes(P : parameters) <->text35.htm#318<->ReadBytes(P : parameters) : IO -&gt; SeqEnum
5<->ReadBytes(P, n) <->text35.htm#319<->ReadBytes(P, n) : IO, RngIntElt -&gt; SeqEnum
5<->Write(P, s) <->text35.htm#320<->Write(P, s) : IO, MonStgElt -&gt;
5<->WriteBytes(P, Q) <->text35.htm#321<->WriteBytes(P, Q) : IO, SeqEnum -&gt;
3<->pipes-operations :<->text35.htm#316<->pipes-operations :: Operations on Pipes (INPUT AND OUTPUT)
3<->pipes :<->text35.htm<->pipes :: Pipes (INPUT AND OUTPUT)
3<->sockets :<->text36.htm<->sockets :: Sockets (INPUT AND OUTPUT)
3<->sockets-creation :<->text36.htm#323<->sockets-creation :: Socket Creation (INPUT AND OUTPUT)
5<->Socket(H, P : parameters) <->text36.htm#324<->Socket(H, P : parameters) : MonStgElt, RngIntElt -&gt; IOSocket
5<->Socket( : parameters) <->text36.htm#325<->Socket( : parameters) : -&gt; IOSocket
5<->WaitForConnection(S) <->text36.htm#326<->WaitForConnection(S) : IO -&gt; IO
3<->sockets-creation :<->text36.htm#323<->sockets-creation :: Socket Creation (INPUT AND OUTPUT)
3<->sockets-properties :<->text36.htm#327<->sockets-properties :: Socket Properties (INPUT AND OUTPUT)
5<->SocketInformation(S) <->text36.htm#328<->SocketInformation(S) : IO -&gt; Tup, Tup
3<->sockets-properties :<->text36.htm#327<->sockets-properties :: Socket Properties (INPUT AND OUTPUT)
3<->sockets-predicates :<->text36.htm#329<->sockets-predicates :: Socket Predicates (INPUT AND OUTPUT)
5<->IsServerSocket(S) <->text36.htm#330<->IsServerSocket(S) : IO -&gt; BoolElt
3<->sockets-predicates :<->text36.htm#329<->sockets-predicates :: Socket Predicates (INPUT AND OUTPUT)
3<->sockets-io :<->text36.htm#331<->sockets-io :: Socket I/O (INPUT AND OUTPUT)
5<->Read(S : parameters) <->text36.htm#332<->Read(S : parameters) : IO -&gt; MonStgElt
5<->ReadBytes(S : parameters) <->text36.htm#333<->ReadBytes(S : parameters) : IO -&gt; SeqEnum
5<->ReadBytes(S, n) <->text36.htm#334<->ReadBytes(S, n) : IO, RngIntElt -&gt; SeqEnum
5<->Write(S, s) <->text36.htm#335<->Write(S, s) : IO, MonStgElt -&gt;
5<->WriteBytes(S, Q) <->text36.htm#336<->WriteBytes(S, Q) : IO, SeqEnum -&gt;
5<->WaitForIO(S : parameters) <->text36.htm#337<->WaitForIO(S : parameters) : SeqEnum -&gt; SeqEnum
4<->IO_Sockets (Example H3E12)<->text36.htm#338<->IO_Sockets (Example H3E12)
4<->Example-Sockets :<->text36.htm#338<->Example-Sockets :: IO_Sockets (Example H3E12)
3<->sockets-io :<->text36.htm#331<->sockets-io :: Socket I/O (INPUT AND OUTPUT)
3<->sockets :<->text36.htm<->sockets :: Sockets (INPUT AND OUTPUT)
3<->interactive-input :<->text37.htm<->interactive-input :: Interactive Input (INPUT AND OUTPUT)
5<->read \identifier, \prompt;<->text37.htm#340<->read \identifier, \prompt;
5<->read identifier;<->text37.htm#340<->read identifier;
5<->readi identifier;<->text37.htm#341<->readi identifier;
3<->interactive-input :<->text37.htm<->interactive-input :: Interactive Input (INPUT AND OUTPUT)
3<->load :<->text38.htm<->load :: Loading a Program File (INPUT AND OUTPUT)
5<->load "filename";<->text38.htm#343<->load "filename";
5<->iload "filename";<->text38.htm#344<->iload "filename";
3<->load :<->text38.htm<->load :: Loading a Program File (INPUT AND OUTPUT)
3<->workspace :<->text39.htm<->workspace :: Saving and Restoring Workspaces (INPUT AND OUTPUT)
5<->save "filename";<->text39.htm#346<->save "filename";
5<->restore "filename";<->text39.htm#347<->restore "filename";
3<->workspace :<->text39.htm<->workspace :: Saving and Restoring Workspaces (INPUT AND OUTPUT)
3<->logging :<->text40.htm<->logging :: Logging a Session (INPUT AND OUTPUT)
5<->SetLogFile(F) <->text40.htm#349<->SetLogFile(F) : MonStgElt -&gt;
5<->UnsetLogFile() <->text40.htm#350<->UnsetLogFile() : -&gt;
5<->SetEchoInput(b) <->text40.htm#351<->SetEchoInput(b) : BoolElt -&gt;
3<->logging :<->text40.htm<->logging :: Logging a Session (INPUT AND OUTPUT)
3<->system-calls :<->text41.htm<->system-calls :: Memory Usage (INPUT AND OUTPUT)
5<->GetMemoryUsage() <->text41.htm#353<->GetMemoryUsage() : -&gt; RngIntElt
5<->GetMaximumMemoryUsage() <->text41.htm#354<->GetMaximumMemoryUsage() : -&gt; RngIntElt
5<->ResetMaximumMemoryUsage() <->text41.htm#355<->ResetMaximumMemoryUsage() : -&gt;
3<->system-calls :<->text41.htm<->system-calls :: Memory Usage (INPUT AND OUTPUT)
3<->system-calls :<->text42.htm<->system-calls :: System Calls (INPUT AND OUTPUT)
5<->Alarm(s) <->text42.htm#357<->Alarm(s) : RngIntElt -&gt;
5<->ChangeDirectory(s) <->text42.htm#358<->ChangeDirectory(s) : MonStgElt -&gt;
5<->GetCurrentDirectory() <->text42.htm#359<->GetCurrentDirectory() : -&gt;
5<->Getpid() <->text42.htm#360<->Getpid() : -&gt;
5<->Getuid() <->text42.htm#361<->Getuid() : -&gt;
5<->System(C) <->text42.htm#362<->System(C) : MonStgElt -&gt; RngIntElt
5<->%! shell-command<->text42.htm#363<->%! shell-command
3<->system-calls :<->text42.htm<->system-calls :: System Calls (INPUT AND OUTPUT)
3<->create-name :<->text43.htm<->create-name :: Creating Names (INPUT AND OUTPUT)
5<->Tempname(P) <->text43.htm#365<->Tempname(P) : MonStgElt -&gt; MonStgElt
3<->create-name :<->text43.htm<->create-name :: Creating Names (INPUT AND OUTPUT)
3<->IO :<->text29.htm<->IO :: INPUT AND OUTPUT
3<->environment-options :<->text45.htm<->environment-options :: ENVIRONMENT AND OPTIONS
3<->introduction :<->text46.htm<->introduction :: Introduction (ENVIRONMENT AND OPTIONS)
3<->command-options :<->text47.htm<->command-options :: Command Line Options (ENVIRONMENT AND OPTIONS)
5<->magma -b<->text47.htm#370<->magma -b
5<->magma -c filename<->text47.htm#371<->magma -c filename
5<->magma -d<->text47.htm#372<->magma -d
5<->magma -n<->text47.htm#373<->magma -n
5<->magma -q name<->text47.htm#374<->magma -q name
5<->magma -r workspace<->text47.htm#375<->magma -r workspace
5<->magma -s filename<->text47.htm#376<->magma -s filename
5<->magma -S integer<->text47.htm#377<->magma -S integer
4<->Env_Startup (Example H4E1)<->text47.htm#378<->Env_Startup (Example H4E1)
4<->Example-Startup :<->text47.htm#378<->Example-Startup :: Env_Startup (Example H4E1)
3<->command-options :<->text47.htm<->command-options :: Command Line Options (ENVIRONMENT AND OPTIONS)
3<->environment-variable :<->text48.htm<->environment-variable :: Environment Variables (ENVIRONMENT AND OPTIONS)
5<->MAGMA_STARTUP_FILE<->text48.htm#380<->MAGMA_STARTUP_FILE
5<->MAGMA_PATH<->text48.htm#381<->MAGMA_PATH
5<->MAGMA_MEMORY_LIMIT<->text48.htm#382<->MAGMA_MEMORY_LIMIT
5<->MAGMA_LIBRARY_ROOT<->text48.htm#383<->MAGMA_LIBRARY_ROOT
5<->MAGMA_LIBRARIES<->text48.htm#384<->MAGMA_LIBRARIES
5<->MAGMA_SYSTEM_SPEC<->text48.htm#385<->MAGMA_SYSTEM_SPEC
5<->MAGMA_USER_SPEC<->text48.htm#386<->MAGMA_USER_SPEC
5<->MAGMA_HELP_DIR<->text48.htm#387<->MAGMA_HELP_DIR
5<->MAGMA_TEMP_DIR<->text48.htm#388<->MAGMA_TEMP_DIR
3<->environment-variable :<->text48.htm<->environment-variable :: Environment Variables (ENVIRONMENT AND OPTIONS)
3<->Set-Get :<->text49.htm<->Set-Get :: Set and Get (ENVIRONMENT AND OPTIONS)
5<->GetAssertions :: SetAssertions(b) <->text49.htm#390<->GetAssertions :: SetAssertions(b) : RngIntElt -&gt;
5<->SetAssertions(b) <->text49.htm#390<->SetAssertions(b) : RngIntElt -&gt;
5<->GetAutoColumns :: SetAutoColumns(b) <->text49.htm#391<->GetAutoColumns :: SetAutoColumns(b) : BoolElt -&gt;
5<->SetAutoColumns(b) <->text49.htm#391<->SetAutoColumns(b) : BoolElt -&gt;
5<->GetAutoCompact :: SetAutoCompact(b) <->text49.htm#392<->GetAutoCompact :: SetAutoCompact(b) : BoolElt -&gt;
5<->SetAutoCompact(b) <->text49.htm#392<->SetAutoCompact(b) : BoolElt -&gt;
5<->GetBeep :: SetBeep(b) <->text49.htm#393<->GetBeep :: SetBeep(b) : BoolElt -&gt;
5<->SetBeep(b) <->text49.htm#393<->SetBeep(b) : BoolElt -&gt;
5<->GetColumns :: SetColumns(n) <->text49.htm#394<->GetColumns :: SetColumns(n) : RngIntElt -&gt;
5<->SetColumns(n) <->text49.htm#394<->SetColumns(n) : RngIntElt -&gt;
5<->GetCurrentDirectory() <->text49.htm#395<->GetCurrentDirectory() : -&gt;
5<->GetEchoInput :: SetEchoInput(b) <->text49.htm#396<->GetEchoInput :: SetEchoInput(b) : BoolElt -&gt;
5<->SetEchoInput(b) <->text49.htm#396<->SetEchoInput(b) : BoolElt -&gt;
5<->GetEnvironmentValue(s) <->text49.htm#397<->GetEnvironmentValue(s) : MonStgElt -&gt; MonStgElt
5<->GetGPU :: SetGPU(b) <->text49.htm#398<->GetGPU :: SetGPU(b) : BoolElt -&gt;
5<->SetGPU(b) <->text49.htm#398<->SetGPU(b) : BoolElt -&gt;
5<->GetHistorySize :: SetHistorySize(n) <->text49.htm#399<->GetHistorySize :: SetHistorySize(n) : RngIntElt -&gt;
5<->SetHistorySize(n) <->text49.htm#399<->SetHistorySize(n) : RngIntElt -&gt;
5<->GetIgnorePrompt :: SetIgnorePrompt(b) <->text49.htm#400<->GetIgnorePrompt :: SetIgnorePrompt(b) : BoolElt -&gt;
5<->SetIgnorePrompt(b) <->text49.htm#400<->SetIgnorePrompt(b) : BoolElt -&gt;
5<->GetIgnoreSpaces :: SetIgnoreSpaces(b) <->text49.htm#401<->GetIgnoreSpaces :: SetIgnoreSpaces(b) : BoolElt -&gt;
5<->SetIgnoreSpaces(b) <->text49.htm#401<->SetIgnoreSpaces(b) : BoolElt -&gt;
5<->GetIndent :: SetIndent(n) <->text49.htm#402<->GetIndent :: SetIndent(n) : RngIntElt -&gt;
5<->SetIndent(n) <->text49.htm#402<->SetIndent(n) : RngIntElt -&gt;
5<->GetLibraries :: SetLibraries(s) <->text49.htm#403<->GetLibraries :: SetLibraries(s) : MonStgElt -&gt;
5<->SetLibraries(s) <->text49.htm#403<->SetLibraries(s) : MonStgElt -&gt;
5<->GetLibraryRoot :: SetLibraryRoot(s) <->text49.htm#404<->GetLibraryRoot :: SetLibraryRoot(s) : MonStgElt -&gt;
5<->SetLibraryRoot(s) <->text49.htm#404<->SetLibraryRoot(s) : MonStgElt -&gt;
5<->GetLineEditor :: SetLineEditor(b) <->text49.htm#405<->GetLineEditor :: SetLineEditor(b) : BoolElt -&gt;
5<->SetLineEditor(b) <->text49.htm#405<->SetLineEditor(b) : BoolElt -&gt;
5<->UnsetLogFile :: SetLogFile(F) <->text49.htm#406<->UnsetLogFile :: SetLogFile(F) : MonStgElt -&gt;
5<->SetLogFile(F) <->text49.htm#406<->SetLogFile(F) : MonStgElt -&gt;
5<->GetMemoryLimit :: SetMemoryLimit(n) <->text49.htm#407<->GetMemoryLimit :: SetMemoryLimit(n) : RngIntElt -&gt;
5<->SetMemoryLimit(n) <->text49.htm#407<->SetMemoryLimit(n) : RngIntElt -&gt;
5<->GetNthreads :: SetNthreads(n) <->text49.htm#408<->GetNthreads :: SetNthreads(n) : RngIntElt -&gt;
5<->SetNthreads(n) <->text49.htm#408<->SetNthreads(n) : RngIntElt -&gt;
5<->UnsetOutputFile :: SetOutputFile(F) <->text49.htm#409<->UnsetOutputFile :: SetOutputFile(F) : MonStgElt -&gt;
5<->SetOutputFile(F) <->text49.htm#409<->SetOutputFile(F) : MonStgElt -&gt;
5<->GetPath :: SetPath(s) <->text49.htm#410<->GetPath :: SetPath(s) : MonStgElt -&gt;
5<->SetPath(s) <->text49.htm#410<->SetPath(s) : MonStgElt -&gt;
5<->GetPrintLevel :: SetPrintLevel(l) <->text49.htm#411<->GetPrintLevel :: SetPrintLevel(l) : MonStgElt -&gt;
5<->SetPrintLevel(l) <->text49.htm#411<->SetPrintLevel(l) : MonStgElt -&gt;
5<->GetPrompt :: SetPrompt(s) <->text49.htm#412<->GetPrompt :: SetPrompt(s) : MonStgElt -&gt;
5<->SetPrompt(s) <->text49.htm#412<->SetPrompt(s) : MonStgElt -&gt;
5<->SetQuitOnError(b) <->text49.htm#413<->SetQuitOnError(b) : BoolElt -&gt;
5<->GetRows :: SetRows(n) <->text49.htm#414<->GetRows :: SetRows(n) : RngIntElt -&gt;
5<->SetRows(n) <->text49.htm#414<->SetRows(n) : RngIntElt -&gt;
5<->GetTempDir() <->text49.htm#415<->GetTempDir() : -&gt; MonStgElt
5<->GetTraceback :: SetTraceback(n) <->text49.htm#416<->GetTraceback :: SetTraceback(n) : BoolElt -&gt;
5<->SetTraceback(n) <->text49.htm#416<->SetTraceback(n) : BoolElt -&gt;
5<->GetSeed :: SetSeed(s, c) <->text49.htm#417<->GetSeed :: SetSeed(s, c) : RngIntElt -&gt;
5<->SetSeed(s, c) <->text49.htm#417<->SetSeed(s, c) : RngIntElt -&gt;
5<->GetVersion() <->text49.htm#418<->GetVersion() : -&gt; RngIntElt, RngIntElt, RngIntElt
5<->GetViMode :: SetViMode(b) <->text49.htm#419<->GetViMode :: SetViMode(b) : BoolElt -&gt;
5<->SetViMode(b) <->text49.htm#419<->SetViMode(b) : BoolElt -&gt;
3<->Set-Get :<->text49.htm<->Set-Get :: Set and Get (ENVIRONMENT AND OPTIONS)
3<->verbose :<->text50.htm<->verbose :: Verbose Levels (ENVIRONMENT AND OPTIONS)
5<->SetVerbose(s, b) <->text50.htm#421<->SetVerbose(s, b) : MonStgElt, BoolElt ->
5<->SetVerbose(s, i) <->text50.htm#421<->SetVerbose(s, i) : MonStgElt, RngIntElt -&gt;
5<->GetVerbose(s) <->text50.htm#422<->GetVerbose(s) : MonStgElt -&gt; RngIntElt
5<->IsVerbose(s) <->text50.htm#423<->IsVerbose(s) : MonStgElt -&gt; BoolElt
5<->IsVerbose(s, l) <->text50.htm#424<->IsVerbose(s, l) : MonStgElt, RngIntElt -&gt; BoolElt
5<->ListVerbose() <->text50.htm#425<->ListVerbose() : -&gt;
5<->ClearVerbose() <->text50.htm#426<->ClearVerbose() : -&gt;
3<->verbose :<->text50.htm<->verbose :: Verbose Levels (ENVIRONMENT AND OPTIONS)
3<->info :<->text51.htm<->info :: Other Information Procedures (ENVIRONMENT AND OPTIONS)
5<->ShowMemoryUsage() <->text51.htm#428<->ShowMemoryUsage() : -&gt;
5<->ShowIdentifiers() <->text51.htm#429<->ShowIdentifiers() : -&gt;
5<->ShowValues() <->text51.htm#430<->ShowValues() : -&gt;
5<->Traceback() <->text51.htm#431<->Traceback() : -&gt;
5<->ListSignatures(C) <->text51.htm#432<->ListSignatures(C) : Cat -&gt;
5<->ListSignatures(F, C) <->text51.htm#433<->ListSignatures(F, C) : Intrinsic, Cat -&gt;
5<->ListTypes :: ListCategories() <->text51.htm#434<->ListTypes :: ListCategories() : -&gt;
5<->ListCategories() <->text51.htm#434<->ListCategories() : -&gt;
3<->info :<->text51.htm<->info :: Other Information Procedures (ENVIRONMENT AND OPTIONS)
3<->history :<->text52.htm<->history :: History (ENVIRONMENT AND OPTIONS)
5<->%p<->text52.htm#436<->%p
5<->%pn<->text52.htm#437<->%pn
5<->%pn1 n2<->text52.htm#438<->%pn<sub>1</sub> n<sub>2</sub>
5<->%P<->text52.htm#439<->%P
5<->%Pn<->text52.htm#440<->%Pn
5<->%Pn1 n2<->text52.htm#441<->%Pn<sub>1</sub> n<sub>2</sub>
5<->%s<->text52.htm#442<->%s
5<->%sn<->text52.htm#443<->%sn
5<->%sn1 n2<->text52.htm#444<->%sn<sub>1</sub> n<sub>2</sub>
5<->%S<->text52.htm#445<->%S
5<->%Sn<->text52.htm#446<->%Sn
5<->%Sn1 n2<->text52.htm#447<->%Sn<sub>1</sub> n<sub>2</sub>
5<->%<->text52.htm#448<->%
5<->%n<->text52.htm#449<->%n
5<->%n1 n2<->text52.htm#450<->%n<sub>1</sub> n<sub>2</sub>
5<->%e<->text52.htm#451<->%e
5<->%en<->text52.htm#452<->%en
5<->%en1 n2<->text52.htm#453<->%en<sub>1</sub> n<sub>2</sub>
5<->%! shell-command<->text52.htm#454<->%! shell-command
3<->history :<->text52.htm<->history :: History (ENVIRONMENT AND OPTIONS)
3<->line-editor :<->text53.htm<->line-editor :: The Magma Line Editor (ENVIRONMENT AND OPTIONS)
3<->key-binding-Emacs-VI :<->text53.htm#456<->key-binding-Emacs-VI :: Key Bindings (Emacs and VI mode) (ENVIRONMENT AND OPTIONS)
5<->return-key :<->text53.htm#457<->return-key :: &lt;Return&gt;
5<->delete-key :<->text53.htm#458<->delete-key :: &lt;Backspace&gt;
5<->backspace-key :<->text53.htm#458<->backspace-key :: &lt;Backspace&gt;
5<->tab-key :<->text53.htm#459<->tab-key :: &lt;Tab&gt;
5<->control-A-key :<->text53.htm#460<->control-A-key :: &lt;Ctrl&gt;-A
5<->control-B-key :<->text53.htm#461<->control-B-key :: &lt;Ctrl&gt;-B
5<->control-C-key :<->text53.htm#462<->control-C-key :: &lt;Ctrl&gt;-C
5<->control-D-key :<->text53.htm#463<->control-D-key :: &lt;Ctrl&gt;-D
5<->control-E-key :<->text53.htm#464<->control-E-key :: &lt;Ctrl&gt;-E
5<->control-F-key :<->text53.htm#465<->control-F-key :: &lt;Ctrl&gt;-F
5<->control-H-key :<->text53.htm#466<->control-H-key :: &lt;Ctrl&gt;-H
5<->control-I-key :<->text53.htm#467<->control-I-key :: &lt;Ctrl&gt;-I
5<->control-J-key :<->text53.htm#468<->control-J-key :: &lt;Ctrl&gt;-J
5<->control-K-key :<->text53.htm#469<->control-K-key :: &lt;Ctrl&gt;-K
5<->control-L-key :<->text53.htm#470<->control-L-key :: &lt;Ctrl&gt;-L
5<->control-M-key :<->text53.htm#471<->control-M-key :: &lt;Ctrl&gt;-M
5<->control-N-key :<->text53.htm#472<->control-N-key :: &lt;Ctrl&gt;-N
5<->control-P-key :<->text53.htm#473<->control-P-key :: &lt;Ctrl&gt;-P
5<->control-U-key :<->text53.htm#474<->control-U-key :: &lt;Ctrl&gt;-U
5<->control-V-key :<->text53.htm#475<->control-V-key :: &lt;Ctrl&gt;-V&lt;char&gt;
5<->control-W-key :<->text53.htm#476<->control-W-key :: &lt;Ctrl&gt;-W
5<->control-X-key :<->text53.htm#477<->control-X-key :: &lt;Ctrl&gt;-X
5<->control-Y-key :<->text53.htm#478<->control-Y-key :: &lt;Ctrl&gt;-Y
5<->control-Z-key :<->text53.htm#479<->control-Z-key :: &lt;Ctrl&gt;-Z
5<->control-_-key :<->text53.htm#480<->control-_-key :: &lt;Ctrl&gt;-_
5<->control-\-key :<->text53.htm#481<->control-\-key :: &lt;Ctrl&gt;-\
3<->key-binding-Emacs-VI :<->text53.htm#456<->key-binding-Emacs-VI :: Key Bindings (Emacs and VI mode) (ENVIRONMENT AND OPTIONS)
3<->key-binding-Emacs :<->text53.htm#482<->key-binding-Emacs :: Key Bindings in Emacs mode only (ENVIRONMENT AND OPTIONS)
5<->Meta-B-key :<->text53.htm#483<->Meta-B-key :: &lt;Meta&gt;-b
5<->Meta-b-key :<->text53.htm#483<->Meta-b-key :: &lt;Meta&gt;-b
5<->Meta-F-key :<->text53.htm#484<->Meta-F-key :: &lt;Meta&gt;-f
5<->Meta-f-key :<->text53.htm#484<->Meta-f-key :: &lt;Meta&gt;-f
3<->key-binding-Emacs :<->text53.htm#482<->key-binding-Emacs :: Key Bindings in Emacs mode only (ENVIRONMENT AND OPTIONS)
3<->key-binding-VI :<->text53.htm#485<->key-binding-VI :: Key Bindings in VI mode only (ENVIRONMENT AND OPTIONS)
5<->0<->text53.htm#486<->0
5<->$-key :<->text53.htm#487<->$-key :: $
5<->control-space-key :<->text53.htm#488<->control-space-key :: &lt;Ctrl&gt;-space
5<->%-key :<->text53.htm#489<->%-key :: %
5<->;-key :<->text53.htm#490<->;-key :: ;
5<->,-key :<->text53.htm#491<->,-key :: ,
5<->B-key :<->text53.htm#492<->B-key :: B
5<->b-key :<->text53.htm#493<->b-key :: b
5<->E-key :<->text53.htm#494<->E-key :: E
5<->e-key :<->text53.htm#495<->e-key :: e
5<->F-key :<->text53.htm#496<->F-key :: F&lt;char&gt;
5<->f-key :<->text53.htm#497<->f-key :: f&lt;char&gt;
5<->H-key :<->text53.htm#498<->H-key :: h
5<->h-key :<->text53.htm#498<->h-key :: h
5<->L-key :<->text53.htm#499<->L-key :: l
5<->l-key :<->text53.htm#499<->l-key :: l
5<->T-key :<->text53.htm#500<->T-key :: T&lt;char&gt;
5<->t-key :<->text53.htm#501<->t-key :: t&lt;char&gt;
5<->w-key :<->text53.htm#502<->w-key :: w
5<->W-key :<->text53.htm#503<->W-key :: W
5<->A-key :<->text53.htm#504<->A-key :: A
5<->a-key :<->text53.htm#505<->a-key :: a
5<->C-key :<->text53.htm#506<->C-key :: C
5<->c-key :<->text53.htm#507<->c-key :: c range
5<->D-key :<->text53.htm#508<->D-key :: D
5<->d-key :<->text53.htm#509<->d-key :: d range
5<->I-key :<->text53.htm#510<->I-key :: I
5<->i-key :<->text53.htm#511<->i-key :: i
5<->j-key :<->text53.htm#512<->j-key :: j
5<->k-key :<->text53.htm#513<->k-key :: k
5<->P-key :<->text53.htm#514<->P-key :: P
5<->p-key :<->text53.htm#515<->p-key :: p
5<->R-key :<->text53.htm#516<->R-key :: R
5<->r-key :<->text53.htm#517<->r-key :: r&lt;char&gt;
5<->S-key :<->text53.htm#518<->S-key :: S
5<->s-key :<->text53.htm#519<->s-key :: s
5<->u-key :<->text53.htm#520<->u-key :: U
5<->U-key :<->text53.htm#520<->U-key :: U
5<->X-key :<->text53.htm#521<->X-key :: X
5<->x-key :<->text53.htm#522<->x-key :: x
5<->Y-key :<->text53.htm#523<->Y-key :: Y
5<->y-key :<->text53.htm#524<->y-key :: y range
3<->key-binding-VI :<->text53.htm#485<->key-binding-VI :: Key Bindings in VI mode only (ENVIRONMENT AND OPTIONS)
3<->line-editor :<->text53.htm<->line-editor :: The Magma Line Editor (ENVIRONMENT AND OPTIONS)
3<->help :<->text54.htm<->help :: The Magma Help System (ENVIRONMENT AND OPTIONS)
5<->SetHelpExternalBrowser(S) <->text54.htm#526<->SetHelpExternalBrowser(S) : MonStgElt ->
5<->SetHelpExternalBrowser(S, T) <->text54.htm#526<->SetHelpExternalBrowser(S, T) : MonStgElt, MonStgElt -&gt;
5<->SetHelpUseExternalBrowser(b) <->text54.htm#527<->SetHelpUseExternalBrowser(b) : BoolElt -&gt;
5<->SetHelpExternalSystem(s) <->text54.htm#528<->SetHelpExternalSystem(s) : MonStgElt -&gt;
5<->SetHelpUseExternalSystem(b) <->text54.htm#529<->SetHelpUseExternalSystem(b) : BoolElt -&gt;
5<->GetHelpExternalBrowser() <->text54.htm#530<->GetHelpExternalBrowser() : -&gt; MonStgElt, MonStgElt
5<->GetHelpExternalSystem() <->text54.htm#531<->GetHelpExternalSystem() : -&gt; MonStgElt
5<->GetHelpUseExternal() <->text54.htm#532<->GetHelpUseExternal() : -&gt; BoolElt, BoolElt
3<->internal-help-browser :<->text54.htm#533<->internal-help-browser :: Internal Help Browser (ENVIRONMENT AND OPTIONS)
3<->help :<->text54.htm<->help :: The Magma Help System (ENVIRONMENT AND OPTIONS)
3<->environment-options :<->text45.htm<->environment-options :: ENVIRONMENT AND OPTIONS
3<->semantics :<->text56.htm<->semantics :: MAGMA SEMANTICS
3<->introduction :<->text57.htm<->introduction :: Introduction (MAGMA SEMANTICS)
3<->definition :<->text58.htm<->definition :: Terminology (MAGMA SEMANTICS)
3<->assignment :<->text59.htm<->assignment :: Assignment (MAGMA SEMANTICS)
3<->uninitialized-identifier :<->text60.htm<->uninitialized-identifier :: Uninitialized Identifiers (MAGMA SEMANTICS)
3<->evaluation :<->text61.htm<->evaluation :: Evaluation in Magma (MAGMA SEMANTICS)
3<->call-by-value :<->text61.htm#541<->call-by-value :: Call by Value Evaluation (MAGMA SEMANTICS)
3<->algorithm :<->text61.htm#542<->algorithm :: Magma's Evaluation Process (MAGMA SEMANTICS)
3<->function-expression :<->text61.htm#543<->function-expression :: Function Expressions (MAGMA SEMANTICS)
3<->function-value-assignment :<->text61.htm#544<->function-value-assignment :: Function Values Assigned to Identifiers (MAGMA SEMANTICS)
3<->recursion-mutual :<->text61.htm#545<->recursion-mutual :: Recursion and Mutual Recursion (MAGMA SEMANTICS)
3<->function-application :<->text61.htm#546<->function-application :: Function Application (MAGMA SEMANTICS)
3<->initial-context :<->text61.htm#547<->initial-context :: The Initial Context (MAGMA SEMANTICS)
3<->evaluation :<->text61.htm<->evaluation :: Evaluation in Magma (MAGMA SEMANTICS)
3<->scope :<->text62.htm<->scope :: Scope (MAGMA SEMANTICS)
3<->local-declaration :<->text62.htm#549<->local-declaration :: Local Declarations (MAGMA SEMANTICS)
3<->first-use :<->text62.htm#550<->first-use :: The `first use' Rule (MAGMA SEMANTICS)
3<->identifier-class :<->text62.htm#551<->identifier-class :: Identifier Classes (MAGMA SEMANTICS)
3<->evaluation :<->text62.htm#552<->evaluation :: The Evaluation Process Revisited (MAGMA SEMANTICS)
3<->single-use :<->text62.htm#553<->single-use :: The `single use' Rule (MAGMA SEMANTICS)
3<->scope :<->text62.htm<->scope :: Scope (MAGMA SEMANTICS)
3<->procedure-expression :<->text63.htm<->procedure-expression :: Procedure Expressions (MAGMA SEMANTICS)
3<->reference-argument :<->text64.htm<->reference-argument :: Reference Arguments (MAGMA SEMANTICS)
3<->dynamic-typing :<->text65.htm<->dynamic-typing :: Dynamic Typing (MAGMA SEMANTICS)
3<->trap :<->text66.htm<->trap :: Traps for Young Players (MAGMA SEMANTICS)
3<->trap1 :<->text66.htm#558<->trap1 :: Trap 1 (MAGMA SEMANTICS)
3<->trap2 :<->text66.htm#559<->trap2 :: Trap 2 (MAGMA SEMANTICS)
3<->trap :<->text66.htm<->trap :: Traps for Young Players (MAGMA SEMANTICS)
3<->precedence :: Appendix A<->text67.htm<->precedence :: Appendix A: Precedence (MAGMA SEMANTICS)
3<->precedence :: Appendix B<->text68.htm<->precedence :: Appendix B: Reserved Words (MAGMA SEMANTICS)
3<->semantics :<->text56.htm<->semantics :: MAGMA SEMANTICS
3<->Profiler :<->text70.htm<->Profiler :: THE MAGMA PROFILER
3<->intro :<->text71.htm<->intro :: Introduction (THE MAGMA PROFILER)
3<->profiler-basics :<->text72.htm<->profiler-basics :: Profiler Basics (THE MAGMA PROFILER)
5<->SetProfile(b)<->text72.htm#566<->SetProfile(b): BoolElt -&gt;
5<->ProfileReset()<->text72.htm#567<->ProfileReset(): -&gt;
5<->ProfileGraph()<->text72.htm#568<->ProfileGraph(): -&gt; GrphDir
4<->Prof_basic-profiling (Example H6E1)<->text72.htm#569<->Prof_basic-profiling (Example H6E1)
4<->Example-basic-profiling :<->text72.htm#569<->Example-basic-profiling :: Prof_basic-profiling (Example H6E1)
3<->profiler-basics :<->text72.htm<->profiler-basics :: Profiler Basics (THE MAGMA PROFILER)
3<->call-graph :<->text73.htm<->call-graph :: Exploring the Call Graph (THE MAGMA PROFILER)
3<->internal-reports :<->text73.htm#571<->internal-reports :: Internal Reports (THE MAGMA PROFILER)
5<->ProfilePrintByTotalCount(G)<->text73.htm#572<->ProfilePrintByTotalCount(G): GrphDir -&gt;
5<->ProfilePrintByTotalTime(G)<->text73.htm#573<->ProfilePrintByTotalTime(G): GrphDir -&gt;
5<->ProfilePrintChildrenByCount(G, n)<->text73.htm#574<->ProfilePrintChildrenByCount(G, n): GrphDir, RngIntElt ->
5<->ProfilePrintChildrenByCount(G, n)<->text73.htm#574<->ProfilePrintChildrenByCount(G, n): GrphDir, GrphVert -&gt;
5<->ProfilePrintChildrenByTime(G, n)<->text73.htm#575<->ProfilePrintChildrenByTime(G, n): GrphDir, RngIntElt ->
5<->ProfilePrintChildrenByTime(G, n)<->text73.htm#575<->ProfilePrintChildrenByTime(G, n): GrphDir, GrphVert -&gt;
4<->Prof_profile-reports (Example H6E2)<->text73.htm#576<->Prof_profile-reports (Example H6E2)
4<->Example-profile-reports :<->text73.htm#576<->Example-profile-reports :: Prof_profile-reports (Example H6E2)
3<->internal-reports :<->text73.htm#571<->internal-reports :: Internal Reports (THE MAGMA PROFILER)
3<->html-reports :<->text73.htm#577<->html-reports :: HTML Reports (THE MAGMA PROFILER)
5<->ProfileHTMLOutput(G, prefix)<->text73.htm#578<->ProfileHTMLOutput(G, prefix): GrphDir, MonStgElt -&gt;
3<->html-reports :<->text73.htm#577<->html-reports :: HTML Reports (THE MAGMA PROFILER)
3<->call-graph :<->text73.htm<->call-graph :: Exploring the Call Graph (THE MAGMA PROFILER)
3<->recursion-profiler :<->text74.htm<->recursion-profiler :: Recursion and the Profiler (THE MAGMA PROFILER)
4<->Prof_profiler-recursion (Example H6E3)<->text74.htm#580<->Prof_profiler-recursion (Example H6E3)
4<->Example-profiler-recursion :<->text74.htm#580<->Example-profiler-recursion :: Prof_profiler-recursion (Example H6E3)
3<->recursion-profiler :<->text74.htm<->recursion-profiler :: Recursion and the Profiler (THE MAGMA PROFILER)
3<->Profiler :<->text70.htm<->Profiler :: THE MAGMA PROFILER
3<->debugger :<->text76.htm<->debugger :: DEBUGGING MAGMA CODE
3<->introduction :<->text77.htm<->introduction :: Introduction (DEBUGGING MAGMA CODE)
5<->SetDebugOnError(f) <->text77.htm#584<->SetDebugOnError(f) : BoolElt -&gt;
3<->introduction :<->text77.htm<->introduction :: Introduction (DEBUGGING MAGMA CODE)
3<->using-debugger :<->text78.htm<->using-debugger :: Using the Debugger (DEBUGGING MAGMA CODE)
4<->Debugger_debugger-example (Example H7E1)<->text78.htm#586<->Debugger_debugger-example (Example H7E1)
4<->Example-debugger-example :<->text78.htm#586<->Example-debugger-example :: Debugger_debugger-example (Example H7E1)
3<->using-debugger :<->text78.htm<->using-debugger :: Using the Debugger (DEBUGGING MAGMA CODE)
3<->debugger :<->text76.htm<->debugger :: DEBUGGING MAGMA CODE
3<->detail :<->text80.htm<->detail :: INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS]
3<->introduction :<->text81.htm<->introduction :: Introduction (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->restriction :<->text82.htm<->restriction :: Restrictions on Sets and  Sequences (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->universe :<->text82.htm#591<->universe :: Universe of a Set or Sequence (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->universe-modification :<->text82.htm#592<->universe-modification :: Modifying the Universe of a Set or Sequence (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->power-set-sequence :<->text82.htm#593<->power-set-sequence :: Parents of Sets and Sequences (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->restriction :<->text82.htm<->restriction :: Restrictions on Sets and  Sequences (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->nesting :<->text83.htm<->nesting :: Nested Aggregates (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->multi-indexing :<->text83.htm#595<->multi-indexing :: Multi-indexing (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->nesting :<->text83.htm<->nesting :: Nested Aggregates (INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS])
3<->detail :<->text80.htm<->detail :: INTRODUCTION TO AGGREGATES [SETS, SEQUENCES, AND MAPPINGS]
3<->detail :<->text85.htm<->detail :: SETS
3<->introduction :<->text86.htm<->introduction :: Introduction (SETS)
3<->enumerated :<->text86.htm#599<->enumerated :: Enumerated Sets (SETS)
3<->formal :<->text86.htm#600<->formal :: Formal Sets (SETS)
3<->indexed :<->text86.htm#601<->indexed :: Indexed Sets (SETS)
3<->indexed :<->text86.htm#602<->indexed :: Multisets (SETS)
3<->restriction :<->text86.htm#603<->restriction :: Compatibility (SETS)
3<->notation :<->text86.htm#604<->notation :: Notation (SETS)
3<->introduction :<->text86.htm<->introduction :: Introduction (SETS)
3<->creation :<->text87.htm<->creation :: Creating Sets (SETS)
3<->formal :<->text87.htm#606<->formal :: The Formal Set Constructor (SETS)
5<->{!!} :<->text87.htm#607<->{!!} :: {! x in F | P(x) !}
3<->formal :<->text87.htm#606<->formal :: The Formal Set Constructor (SETS)
3<->enumerated :<->text87.htm#608<->enumerated :: The Enumerated Set Constructor (SETS)
5<->{} :: { } <->text87.htm#609<->{} :: { } : Null -&gt; Set
5<->{} :: { U | } <->text87.htm#610<->{} :: { U | } : Str -&gt; Set
5<->{} :: { e1, e2, ..., en } <->text87.htm#611<->{} :: { e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> } : Elt, ..., Elt -&gt; Set
4<->Set_Universe (Example H9E1)<->text87.htm#612<->Set_Universe (Example H9E1)
4<->Example-Universe :<->text87.htm#612<->Example-Universe :: Set_Universe (Example H9E1)
5<->{} :: { U | e1, e2, ..., en } <->text87.htm#613<->{} :: { U | e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> } : Str, Elt, ..., Elt -&gt; Set
5<->{} :: { e(x) <->text87.htm#614<->{} :: { e(x) : x in E | P(x) }
5<->{} :: { U | e(x) <->text87.htm#615<->{} :: { U | e(x) : x in E | P(x) }
5<->{} :: { e(x1,...,xk) <->text87.htm#616<->{} :: { e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ..., x<sub>k</sub>in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
5<->{} :: { U | e(x1,...,xk) <->text87.htm#617<->{} :: { U | e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ...,x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
4<->Set_AlmostFermat (Example H9E2)<->text87.htm#618<->Set_AlmostFermat (Example H9E2)
4<->Example-AlmostFermat :<->text87.htm#618<->Example-AlmostFermat :: Set_AlmostFermat (Example H9E2)
3<->enumerated :<->text87.htm#608<->enumerated :: The Enumerated Set Constructor (SETS)
3<->indexed :<->text87.htm#619<->indexed :: The Indexed Set Constructor (SETS)
5<->{@@} :: {@ @} <->text87.htm#620<->{@@} :: {@ @} : Null -&gt; SetIndx
5<->{@@} :: {@ U | @} <->text87.htm#621<->{@@} :: {@ U | @} : Str -&gt; SetIndx
5<->{@@} :: {@ e1, e2, ..., en @} <->text87.htm#622<->{@@} :: {@ e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> @} : Elt, ..., Elt -&gt; SetIndx
5<->{@@} :: {@ U |  e1, e2, ..., em @} <->text87.htm#623<->{@@} :: {@ U |  e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>m</sub> @} : Str, Elt, ..., Elt -&gt; SetIndx
5<->{@@} :: {@ e(x) <->text87.htm#624<->{@@} :: {@ e(x) : x in E | P(x) @}
5<->{@@} :: {@ U |  e(x) <->text87.htm#625<->{@@} :: {@ U |  e(x) : x in E | P(x) @}
5<->{@@} :: {@ e(x1,...,xk) <->text87.htm#626<->{@@} :: {@ e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ..., x<sub>k</sub>in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) @}
5<->{@@} :: {@ U | e(x1,...,xk) <->text87.htm#627<->{@@} :: {@ U | e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ...,x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>)@}
4<->Set_AlmostFermatIndexed (Example H9E3)<->text87.htm#628<->Set_AlmostFermatIndexed (Example H9E3)
4<->Example-AlmostFermatIndexed :<->text87.htm#628<->Example-AlmostFermatIndexed :: Set_AlmostFermatIndexed (Example H9E3)
3<->indexed :<->text87.htm#619<->indexed :: The Indexed Set Constructor (SETS)
3<->multiset :<->text87.htm#629<->multiset :: The Multiset Constructor (SETS)
5<->bracestar\starbrace :: {*  *} <->text87.htm#630<->bracestar\starbrace :: {*  *} : Null -&gt; SetMulti
5<->bracestar\starbrace :: {*  U | *} <->text87.htm#631<->bracestar\starbrace :: {*  U | *} : Str -&gt; SetMulti
5<->bracestar\starbrace :: {*  e1, e2, ..., en *} <->text87.htm#632<->bracestar\starbrace :: {*  e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> *} : Elt, ..., Elt -&gt; SetMulti
5<->bracestar\starbrace :: {*  U |  e1, e2, ..., em *} <->text87.htm#633<->bracestar\starbrace :: {*  U |  e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>m</sub> *} : Str, Elt, ..., Elt -&gt; SetMulti
5<->bracestar\starbrace :: {*  e(x) <->text87.htm#634<->bracestar\starbrace :: {*  e(x) : x in E | P(x) *}
5<->bracestar\starbrace :: {*  U |  e(x) <->text87.htm#635<->bracestar\starbrace :: {*  U |  e(x) : x in E | P(x) *}
5<->bracestar\starbrace :: {*  e(x1,...,xk) <->text87.htm#636<->bracestar\starbrace :: {*  e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ..., x<sub>k</sub>in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) *}
5<->bracestar\starbrace :: {*  U | e(x1,...,xk) <->text87.htm#637<->bracestar\starbrace :: {*  U | e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ...,x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) *}
4<->Set_Multiset (Example H9E4)<->text87.htm#638<->Set_Multiset (Example H9E4)
4<->Example-Multiset :<->text87.htm#638<->Example-Multiset :: Set_Multiset (Example H9E4)
3<->multiset :<->text87.htm#629<->multiset :: The Multiset Constructor (SETS)
3<->arithmetic-progression :<->text87.htm#639<->arithmetic-progression :: The Arithmetic Progression Constructors (SETS)
5<->\lbrace\ U | i..j \rbrace <->text87.htm#640<->\lbrace\ U | i..j \rbrace : Str, RngIntElt, RngIntElt -> SetIndx
5<->{} :: { i..j } <->text87.htm#640<->{} :: { i..j } : RngIntElt, RngIntElt -&gt; Set
5<->\lbrace\ U | i .. j by k \rbrace <->text87.htm#641<->\lbrace\ U | i .. j by k \rbrace : Str, RngIntElt, RngIntElt, RngIntElt -> Set
5<->{} :: { i .. j by k } <->text87.htm#641<->{} :: { i .. j by k } : RngIntElt, RngIntElt, RngIntElt -&gt; Set
4<->Set_Progression (Example H9E5)<->text87.htm#642<->Set_Progression (Example H9E5)
4<->Example-Progression :<->text87.htm#642<->Example-Progression :: Set_Progression (Example H9E5)
3<->arithmetic-progression :<->text87.htm#639<->arithmetic-progression :: The Arithmetic Progression Constructors (SETS)
3<->creation :<->text87.htm<->creation :: Creating Sets (SETS)
3<->power-set :<->text88.htm<->power-set :: Power Sets (SETS)
5<->PowerSet(R) <->text88.htm#644<->PowerSet(R) : Str -&gt; PowSetEnum
5<->PowerIndexedSet(R) <->text88.htm#645<->PowerIndexedSet(R) : Str -&gt; PowSetIndx
5<->PowerMultiset(R) <->text88.htm#646<->PowerMultiset(R) : Str -&gt; PowSetMulti
5<->S in P <->text88.htm#647<->S in P : SetEnum, PowSetEnum -&gt; BoolElt
5<->PowerFormalSet(R) <->text88.htm#648<->PowerFormalSet(R) : Str -&gt; PowSetIndx
5<->S in P <->text88.htm#649<->S in P : SetIndx, PowSetIndx -&gt; BoolElt
5<->S in P <->text88.htm#650<->S in P : SetMulti, PowSetMulti -&gt; BoolElt
5<->P ! S <->text88.htm#651<->P ! S : PowSetEnum, SetEnum -&gt; SetEnum
5<->P ! S <->text88.htm#652<->P ! S : PowSetIndx, SetIndx -&gt; SetIndx
5<->P ! S <->text88.htm#653<->P ! S : PowSetMulti, SetMulti -&gt; SetMulti
4<->Set_PowerSet (Example H9E6)<->text88.htm#654<->Set_PowerSet (Example H9E6)
4<->Example-PowerSet :<->text88.htm#654<->Example-PowerSet :: Set_PowerSet (Example H9E6)
3<->Cartesian-product :<->text88.htm#655<->Cartesian-product :: The Cartesian Product Constructors (SETS)
3<->power-set :<->text88.htm<->power-set :: Power Sets (SETS)
3<->conversion :<->text89.htm<->conversion :: Sets from Structures (SETS)
5<->Set(M) <->text89.htm#657<->Set(M) : Str -&gt; SetEnum
5<->FormalSet(M) <->text89.htm#658<->FormalSet(M) : Str -&gt; SetFormal
3<->conversion :<->text89.htm<->conversion :: Sets from Structures (SETS)
3<->access-modification :<->text90.htm<->access-modification :: Accessing and Modifying Sets (SETS)
3<->access :<->text90.htm#660<->access :: Accessing Sets and their Associated Structures (SETS)
5<->\# R <->text90.htm#661<->\# R : SetEnum -> RngIntElt
5<->\# R <->text90.htm#661<->\# R : SetMulti -> RngIntElt
5<-># R <->text90.htm#661<-># R : SetIndx -&gt; RngIntElt
5<->Type :: Category(S) <->text90.htm#662<->Type :: Category(S) : Any -&gt; Cat
5<->Category(S) <->text90.htm#662<->Category(S) : Any -&gt; Cat
5<->Parent(R) <->text90.htm#663<->Parent(R) : Set -&gt; Str
5<->Universe(R) <->text90.htm#664<->Universe(R) : Set -&gt; Str
5<->Position :: Index(S, x) <->text90.htm#665<->Position :: Index(S, x) : SetIndx, Elt -&gt; RngIntElt
5<->Index(S, x) <->text90.htm#665<->Index(S, x) : SetIndx, Elt -&gt; RngIntElt
5<->[] :: S[i] <->text90.htm#666<->[] :: S[i] : SetIndx, RngIntElt -&gt; Elt
5<->[] :: S[I] <->text90.htm#667<->[] :: S[I] : SetIndx, [RngIntElt] -&gt; SetIndx
4<->Set_Miscellaneous (Example H9E7)<->text90.htm#668<->Set_Miscellaneous (Example H9E7)
4<->Example-Miscellaneous :<->text90.htm#668<->Example-Miscellaneous :: Set_Miscellaneous (Example H9E7)
3<->access :<->text90.htm#660<->access :: Accessing Sets and their Associated Structures (SETS)
3<->element :<->text90.htm#669<->element :: Selecting Elements of Sets (SETS)
5<->Random(R) <->text90.htm#670<->Random(R) : SetEnum -> Elt
5<->Random(R) <->text90.htm#670<->Random(R) : SetIndx -&gt; Elt
5<->random{ e(x) <->text90.htm#671<->random{ e(x) : x in E | P(x) }
5<->random{ e(x1, ..., xk) <->text90.htm#672<->random{ e(x<sub>1</sub>, ..., x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>,..., x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
4<->Set_Random (Example H9E8)<->text90.htm#673<->Set_Random (Example H9E8)
4<->Example-Random :<->text90.htm#673<->Example-Random :: Set_Random (Example H9E8)
5<->Representative(R) <->text90.htm#674<->Representative(R) : SetIndx -&gt; Elt
5<->Representative(R) <->text90.htm#674<->Representative(R) : SetEnum -> Elt
5<->Rep(R) <->text90.htm#674<->Rep(R) : SetEnum -> Elt
5<->Representative(R) <->text90.htm#674<->Representative(R) : SetIndx -&gt; Elt
5<->ExtractRep(~R, ~r) <->text90.htm#675<->ExtractRep(~R, ~r) : SetEnum, Elt -&gt;
5<->rep{ e(x) <->text90.htm#676<->rep{ e(x) : x in E | P(x) }
5<->rep{ e(x1, ..., xk) <->text90.htm#677<->rep{ e(x<sub>1</sub>, ..., x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ...,x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
4<->Set_ExtractRep (Example H9E9)<->text90.htm#678<->Set_ExtractRep (Example H9E9)
4<->Example-ExtractRep :<->text90.htm#678<->Example-ExtractRep :: Set_ExtractRep (Example H9E9)
5<->Minimum(S) <->text90.htm#679<->Minimum(S) : SetIndx -&gt; Elt, RngIntElt
5<->Minimum(S) <->text90.htm#679<->Minimum(S) : SetEnum -> Elt
5<->Min(S) <->text90.htm#679<->Min(S) : SetEnum -> Elt
5<->Minimum(S) <->text90.htm#679<->Minimum(S) : SetMulti -> Elt
5<->Min(S) <->text90.htm#679<->Min(S) : SetMulti -> Elt
5<->Minimum(S) <->text90.htm#679<->Minimum(S) : SetIndx -&gt; Elt, RngIntElt
5<->Maximum(S) <->text90.htm#680<->Maximum(S) : SetIndx -&gt; Elt, RngIntElt
5<->Maximum(S) <->text90.htm#680<->Maximum(S) : SetEnum -> Elt
5<->Max(S) <->text90.htm#680<->Max(S) : SetEnum -> Elt
5<->Maximum(S) <->text90.htm#680<->Maximum(S) : SetMulti -> Elt
5<->Max(S) <->text90.htm#680<->Max(S) : SetMulti -> Elt
5<->Maximum(S) <->text90.htm#680<->Maximum(S) : SetIndx -&gt; Elt, RngIntElt
5<->Hash(x) <->text90.htm#681<->Hash(x) : Elt -&gt; RngIntElt
3<->element :<->text90.htm#669<->element :: Selecting Elements of Sets (SETS)
3<->modification :<->text90.htm#682<->modification :: Modifying Sets (SETS)
5<->Include(S, x) <->text90.htm#683<->Include(S, x) : SetEnum, Elt ->  SetEnum
5<->Include($\sim$S, x) <->text90.htm#683<->Include($\sim$S, x) : SetIndx, Elt ->  
5<->Include(S, x) <->text90.htm#683<->Include(S, x) : SetIndx, Elt -> SetIndx
5<->Include($\sim$S, x) <->text90.htm#683<->Include($\sim$S, x) : SetMulti, Elt ->  
5<->Include(S, x) <->text90.htm#683<->Include(S, x) : SetMulti, Elt -> SetMulti
5<->Include(~S, x) <->text90.htm#683<->Include(~S, x) : SetEnum, Elt -&gt;
5<->Exclude(S, x) <->text90.htm#684<->Exclude(S, x) : SetEnum, Elt -> SetEnum
5<->Exclude($\sim$S, x) <->text90.htm#684<->Exclude($\sim$S, x) : SetMulti, Elt -> 
5<->Exclude(S, x) <->text90.htm#684<->Exclude(S, x) : SetMulti, Elt -> SetMulti
5<->Exclude(~S, x) <->text90.htm#684<->Exclude(~S, x) : SetEnum, Elt -&gt;
5<->ChangeUniverse(S, V) <->text90.htm#685<->ChangeUniverse(S, V) : SetEnum, Str -> SetEnum
5<->ChangeUniverse($\sim$S, V) <->text90.htm#685<->ChangeUniverse($\sim$S, V) : SetIndx, Str ->
5<->ChangeUniverse(S, V) <->text90.htm#685<->ChangeUniverse(S, V) : SetIndx, Str -> SetIndx
5<->ChangeUniverse($\sim$S, V) <->text90.htm#685<->ChangeUniverse($\sim$S, V) : SetMulti, Str ->
5<->ChangeUniverse(S, V) <->text90.htm#685<->ChangeUniverse(S, V) : SetMulti, Str -> SetMulti
5<->ChangeUniverse(~S, V) <->text90.htm#685<->ChangeUniverse(~S, V) : SetEnum, Str -&gt;
5<->CanChangeUniverse(S, V) <->text90.htm#686<->CanChangeUniverse(S, V) : SetIndx, Str -> Bool, SeqEnum
5<->CanChangeUniverse(S, V) <->text90.htm#686<->CanChangeUniverse(S, V) : SetMulti, Str -> Bool, SeqEnum
5<->CanChangeUniverse(S, V) <->text90.htm#686<->CanChangeUniverse(S, V) : SetEnum, Str -&gt; Bool, SeqEnum
4<->Set_Include (Example H9E10)<->text90.htm#687<->Set_Include (Example H9E10)
4<->Example-Include :<->text90.htm#687<->Example-Include :: Set_Include (Example H9E10)
5<->SetToIndexedSet(E) <->text90.htm#688<->SetToIndexedSet(E) : SetEnum -&gt; SetIndx
5<->Isetset :: IndexedSetToSet(S) <->text90.htm#689<->Isetset :: IndexedSetToSet(S) : SetIndx -&gt; SetEnum
5<->IndexedSetToSet(S) <->text90.htm#689<->IndexedSetToSet(S) : SetIndx -&gt; SetEnum
5<->Isetseq :: IndexedSetToSequence(S) <->text90.htm#690<->Isetseq :: IndexedSetToSequence(S) : SetIndx -&gt; SeqEnum
5<->IndexedSetToSequence(S) <->text90.htm#690<->IndexedSetToSequence(S) : SetIndx -&gt; SeqEnum
5<->MultisetToSet(S) <->text90.htm#691<->MultisetToSet(S) : SetMulti -&gt; SetEnum
5<->SetToMultiset(E) <->text90.htm#692<->SetToMultiset(E) : SetEnum -&gt; SetMulti
5<->SequenceToMultiset(Q) <->text90.htm#693<->SequenceToMultiset(Q) : SeqEnum -&gt; SetMulti
3<->modification :<->text90.htm#682<->modification :: Modifying Sets (SETS)
3<->access-modification :<->text90.htm<->access-modification :: Accessing and Modifying Sets (SETS)
3<->operation :<->text91.htm<->operation :: Operations on Sets (SETS)
3<->Boolean Functions and Operators (SETS)<->text91.htm#695<->Boolean Functions and Operators (SETS)
5<->IsNull(R) <->text91.htm#696<->IsNull(R) : SetIndx -> BoolElt
5<->IsNull(R) <->text91.htm#696<->IsNull(R) : SetMulti -> BoolElt
5<->IsNull(R) <->text91.htm#696<->IsNull(R) : SetEnum -&gt; BoolElt
5<->IsEmpty(R) <->text91.htm#697<->IsEmpty(R) : SetIndx -> BoolElt
5<->IsEmpty(R) <->text91.htm#697<->IsEmpty(R) : SetMulti -> BoolElt
5<->IsEmpty(R) <->text91.htm#697<->IsEmpty(R) : SetEnum -&gt; BoolElt
5<->x eq y <->text91.htm#698<->x eq y : Elt, Elt -&gt; BoolElt
5<->x ne y <->text91.htm#699<->x ne y : Elt, Elt -&gt; BoolElt
5<->x in R <->text91.htm#700<->x in R : Elt, Set -&gt; BoolElt
5<->x notin R <->text91.htm#701<->x notin R : Elt, Set -&gt; BoolElt
5<->R subset S <->text91.htm#702<->R subset S : SetIndx, Set -> BoolElt
5<->R subset S <->text91.htm#702<->R subset S : SetMulti, Set -> BoolElt
5<->R subset S <->text91.htm#702<->R subset S : SetEnum, Set -&gt; BoolElt
5<->R notsubset S <->text91.htm#703<->R notsubset S : SetIndx, Set -> BoolElt
5<->R notsubset S <->text91.htm#703<->R notsubset S : SetMulti, Set -> BoolElt
5<->R notsubset S <->text91.htm#703<->R notsubset S : SetEnum, Set -&gt; BoolElt
5<->R eq S <->text91.htm#704<->R eq S : Set, Set -&gt; BoolElt
5<->R ne S <->text91.htm#705<->R ne S : Set, Set -&gt; BoolElt
5<->IsDisjoint(R, S) <->text91.htm#706<->IsDisjoint(R, S) : SetIndx, SetIndx -> BoolElt
5<->IsDisjoint(R, S) <->text91.htm#706<->IsDisjoint(R, S) : SetMulti, SetMulti -> BoolElt
5<->IsDisjoint(R, S) <->text91.htm#706<->IsDisjoint(R, S) : SetEnum, SetEnum -&gt; BoolElt
3<->Boolean Functions and Operators (SETS)<->text91.htm#695<->Boolean Functions and Operators (SETS)
3<->binary :<->text91.htm#707<->binary :: Binary Set Operators (SETS)
5<->R join S <->text91.htm#708<->R join S : SetIndx, SetIndx -> SetIndx
5<->R join S <->text91.htm#708<->R join S : SetMulti, SetMulti -> SetMulti
5<->R join S <->text91.htm#708<->R join S : SetFormal, SetFormal -> SetFormal
5<->R join S <->text91.htm#708<->R join S : SetEnum, SetEnum -&gt; SetEnum
5<->R meet S <->text91.htm#709<->R meet S : SetIndx, SetIndx -> SetIndx
5<->R meet S <->text91.htm#709<->R meet S : SetMulti, SetMulti -> SetMulti
5<->R meet S <->text91.htm#709<->R meet S : SetFormal, SetFormal -> SetFormal
5<->R meet S <->text91.htm#709<->R meet S : SetEnum, SetEnum -&gt; SetEnum
5<->R diff S <->text91.htm#710<->R diff S : SetIndx, SetIndx -> SetIndx
5<->R diff S <->text91.htm#710<->R diff S : SetMulti, SetMulti -> SetMulti
5<->R diff S <->text91.htm#710<->R diff S : SetFormal, SetFormal -> SetFormal
5<->R diff S <->text91.htm#710<->R diff S : SetEnum, SetEnum -&gt; SetEnum
5<->R sdiff S <->text91.htm#711<->R sdiff S : SetIndx, SetIndx -> SetIndx
5<->R sdiff S <->text91.htm#711<->R sdiff S : SetMulti, SetMulti -> SetMulti
5<->R sdiff S <->text91.htm#711<->R sdiff S : SetFormal, SetFormal -> SetFormal
5<->R sdiff S <->text91.htm#711<->R sdiff S : SetEnum, SetEnum -&gt; SetEnum
4<->Set_Join (Example H9E11)<->text91.htm#712<->Set_Join (Example H9E11)
4<->Example-Join :<->text91.htm#712<->Example-Join :: Set_Join (Example H9E11)
3<->binary :<->text91.htm#707<->binary :: Binary Set Operators (SETS)
3<->other :<->text91.htm#713<->other :: Other Set Operations (SETS)
5<->Multiplicity(S, x) <->text91.htm#714<->Multiplicity(S, x) : SetMulti, Elt -&gt; RngIntElt
5<->Multiplicities(S) <->text91.htm#715<->Multiplicities(S) : SetMulti -&gt; SeqEnum
5<->Subsets(S) <->text91.htm#716<->Subsets(S) : SetEnum -&gt; SetEnum
5<->Subsets(S, k) <->text91.htm#717<->Subsets(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->RandomSubset(S, k) <->text91.htm#718<->RandomSubset(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Multisets(S, k) <->text91.htm#719<->Multisets(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Subsequences(S, k) <->text91.htm#720<->Subsequences(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Permutations(S) <->text91.htm#721<->Permutations(S) : SetEnum -&gt; SetEnum;
5<->Permutations(S, k) <->text91.htm#722<->Permutations(S, k) : SetEnum, RngIntElt -&gt; SetEnum;
3<->other :<->text91.htm#713<->other :: Other Set Operations (SETS)
3<->operation :<->text91.htm<->operation :: Operations on Sets (SETS)
3<->quantifier :<->text92.htm<->quantifier :: Quantifiers (SETS)
5<-> exists(t$_1$, ..., t$_r$)\lbrace\ e(x) <->text92.htm#724<-> exists(t$_1$, ..., t$_r$)\lbrace\ e(x) :x in E | P(x) \rbrace
5<->exists(t){ e(x)<->text92.htm#724<->exists(t){ e(x): x in E | P(x) }
5<-> exists(t$_1$, ..., t$_r$)\lbrace\ e(x$_1$, ..., x$_k$) <->text92.htm#725<-> exists(t$_1$, ..., t$_r$)\lbrace\ e(x$_1$, ..., x$_k$) :x$_1$ in E$_1$, ..., x$_k$ in E$_k$ | P \rbrace
5<->exists(t){ e(x1, ..., xk)<->text92.htm#725<->exists(t){ e(x<sub>1</sub>, ..., x<sub>k</sub>): x<sub>1</sub> in E<sub>1</sub>,..., x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
4<->Set_Exists (Example H9E12)<->text92.htm#726<->Set_Exists (Example H9E12)
4<->Example-Exists :<->text92.htm#726<->Example-Exists :: Set_Exists (Example H9E12)
5<-> forall(t$_1$, ..., t$_r$)\lbrace\ e(x) <->text92.htm#727<-> forall(t$_1$, ..., t$_r$)\lbrace\ e(x) :x in E | P(x) \rbrace
5<->forall(t){ e(x) <->text92.htm#727<->forall(t){ e(x) : x in E | P(x) }
5<-> forall(t$_1$, ..., t$_r$)\lbrace\ e(x$_1$, ..., x$_k$) <->text92.htm#728<-> forall(t$_1$, ..., t$_r$)\lbrace\ e(x$_1$, ..., x$_k$) :x$_1$ in E$_1$, ..., x$_k$ in E$_k$ | P \rbrace
5<->forall(t){ e(x1, ..., xk)<->text92.htm#728<->forall(t){ e(x<sub>1</sub>, ..., x<sub>k</sub>): x<sub>1</sub> in E<sub>1</sub>,..., x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) }
4<->Set_NestedExists (Example H9E13)<->text92.htm#729<->Set_NestedExists (Example H9E13)
4<->Example-NestedExists :<->text92.htm#729<->Example-NestedExists :: Set_NestedExists (Example H9E13)
3<->quantifier :<->text92.htm<->quantifier :: Quantifiers (SETS)
3<->reduction-iteration :<->text93.htm<->reduction-iteration :: Reduction and Iteration over Sets (SETS)
5<->x in S<->text93.htm#731<->x in S
5<->\& o S <->text93.htm#732<->\& o S : Op, SetEnum -> Elt
5<->& o S <->text93.htm#732<->&amp; o S : Op, SetIndx -&gt; Elt
4<->Set_Reduction (Example H9E14)<->text93.htm#733<->Set_Reduction (Example H9E14)
4<->Example-Reduction :<->text93.htm#733<->Example-Reduction :: Set_Reduction (Example H9E14)
3<->reduction-iteration :<->text93.htm<->reduction-iteration :: Reduction and Iteration over Sets (SETS)
3<->detail :<->text85.htm<->detail :: SETS
3<->detail :<->text96.htm<->detail :: SEQUENCES
3<->introduction :<->text97.htm<->introduction :: Introduction (SEQUENCES)
3<->enumerated :<->text97.htm#738<->enumerated :: Enumerated Sequences (SEQUENCES)
3<->formal :<->text97.htm#739<->formal :: Formal Sequences (SEQUENCES)
3<->restriction :<->text97.htm#740<->restriction :: Compatibility (SEQUENCES)
3<->introduction :<->text97.htm<->introduction :: Introduction (SEQUENCES)
3<->creation :<->text98.htm<->creation :: Creating Sequences (SEQUENCES)
3<->formal :<->text98.htm#742<->formal :: The Formal Sequence Constructor (SEQUENCES)
5<->[!!] :<->text98.htm#743<->[!!] :: [! x in F | P(x) !]
3<->formal :<->text98.htm#742<->formal :: The Formal Sequence Constructor (SEQUENCES)
3<->enumerated :<->text98.htm#744<->enumerated :: The Enumerated Sequence Constructor (SEQUENCES)
5<->[] :: [ ] <->text98.htm#745<->[] :: [ ] : Null -&gt; ESeqEnum
5<->[] :: [ U | ] <->text98.htm#746<->[] :: [ U | ] : Str -&gt; SeqEnum
5<->[] :: [ e1, e2, ..., en ] <->text98.htm#747<->[] :: [ e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> ] : Elt, ..., Elt -&gt; SeqEnum
5<->[] :: [ U |  e1, e2, ..., em ] <->text98.htm#748<->[] :: [ U |  e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>m</sub> ] : Str, Elt, ..., Elt -&gt; SeqEnum
5<->[] :: [ e(x) <->text98.htm#749<->[] :: [ e(x) : x in E | P(x) ]
5<->[] :: [ U |  e(x) <->text98.htm#750<->[] :: [ U |  e(x) : x in E | P(x) ]
5<->[] :: [ e(x1,...,xk) <->text98.htm#751<->[] :: [ e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ..., x<sub>k</sub>in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) ]
5<->[] :: [ U | e(x1,...,xk) <->text98.htm#752<->[] :: [ U | e(x<sub>1</sub>,...,x<sub>k</sub>) : x<sub>1</sub> in E<sub>1</sub>, ...,x<sub>k</sub> in E<sub>k</sub> | P(x<sub>1</sub>, ..., x<sub>k</sub>) ]
3<->enumerated :<->text98.htm#744<->enumerated :: The Enumerated Sequence Constructor (SEQUENCES)
3<->arithmetic-progression :<->text98.htm#753<->arithmetic-progression :: The Arithmetic Progression Constructors (SEQUENCES)
5<->[ U | i..j ] : Str, RngIntElt, RngIntElt -> SeqEnum :: [ i..j ] <->text98.htm#754<->[ U | i..j ] : Str, RngIntElt, RngIntElt -> SeqEnum :: [ i..j ] : RngIntElt, RngIntElt -&gt; SeqEnum
5<->[] :: [ i..j ] <->text98.htm#754<->[] :: [ i..j ] : RngIntElt, RngIntElt -&gt; SeqEnum
5<->[ U | i .. j by k ] : Str, RngIntElt, RngIntElt, RngIntElt -> SeqEnum :: [ i .. j by k ] <->text98.htm#755<->[ U | i .. j by k ] : Str, RngIntElt, RngIntElt, RngIntElt -> SeqEnum :: [ i .. j by k ] : RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->[] :: [ i .. j by k ] <->text98.htm#755<->[] :: [ i .. j by k ] : RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
4<->Seq_Progression (Example H10E1)<->text98.htm#756<->Seq_Progression (Example H10E1)
4<->Example-Progression :<->text98.htm#756<->Example-Progression :: Seq_Progression (Example H10E1)
3<->arithmetic-progression :<->text98.htm#753<->arithmetic-progression :: The Arithmetic Progression Constructors (SEQUENCES)
3<->literal :<->text98.htm#757<->literal :: Literal Sequences (SEQUENCES)
5<->\[] :: \[ m1, ..., mn ] <->text98.htm#758<->\[] :: \[ m<sub>1</sub>, ..., m<sub>n</sub> ] : RngIntElt, ..., RngIntElt -&gt; [ RngIntElt ]
3<->literal :<->text98.htm#757<->literal :: Literal Sequences (SEQUENCES)
3<->creation :<->text98.htm<->creation :: Creating Sequences (SEQUENCES)
3<->power-sequence :<->text99.htm<->power-sequence :: Power Sequences (SEQUENCES)
5<->PowerSequence(R) <->text99.htm#760<->PowerSequence(R) : Str -&gt; PowSeqEnum
5<->S in P <->text99.htm#761<->S in P : SeqEnum, PowSeqEnum -&gt; BoolElt
5<->P ! S <->text99.htm#762<->P ! S : PowSeqEnum, SeqEnum -&gt; SeqEnum
4<->Seq_PowerSequence (Example H10E2)<->text99.htm#763<->Seq_PowerSequence (Example H10E2)
4<->Example-PowerSequence :<->text99.htm#763<->Example-PowerSequence :: Seq_PowerSequence (Example H10E2)
3<->power-sequence :<->text99.htm<->power-sequence :: Power Sequences (SEQUENCES)
3<->operation :<->text100.htm<->operation :: Operators on Sequences (SEQUENCES)
3<->access :<->text100.htm#765<->access :: Access Functions (SEQUENCES)
5<-># S <->text100.htm#766<-># S : SeqEnum -&gt; RngIntElt
5<->Parent(S) <->text100.htm#767<->Parent(S) : SeqEnum -&gt; Str
5<->Universe(S) <->text100.htm#768<->Universe(S) : SeqEnum -&gt; Str
5<->[] :: S[i] <->text100.htm#769<->[] :: S[i] : SeqEnum, RngIntElt -&gt; Elt
3<->access :<->text100.htm#765<->access :: Access Functions (SEQUENCES)
3<->element :<->text100.htm#770<->element :: Selection Operators on Enumerated Sequences (SEQUENCES)
5<->[] :: S[I] <->text100.htm#771<->[] :: S[I] : SeqEnum, [RngIntElt] -&gt; SeqEnum
5<->Minimum(S) <->text100.htm#772<->Minimum(S) : SeqEnum -&gt; Elt, RngIntElt
5<->Maximum(S) <->text100.htm#773<->Maximum(S) : SeqEnum -&gt; Elt, RngIntElt
5<->Index(S, x, f) <->text100.htm#774<->Index(S, x, f) : SeqEnum, Elt, RngIntElt -> RngIntElt
5<->Position :: Index(S, x) <->text100.htm#774<->Position :: Index(S, x) : SeqEnum, Elt -&gt; RngIntElt
5<->Position(S, x, f) : SeqEnum, Elt, RngIntElt -> RngIntElt :: Index(S, x) <->text100.htm#774<->Position(S, x, f) : SeqEnum, Elt, RngIntElt -> RngIntElt :: Index(S, x) : SeqEnum, Elt -&gt; RngIntElt
5<->Index(S, x) <->text100.htm#774<->Index(S, x) : SeqEnum, Elt -&gt; RngIntElt
5<->Representative(R) <->text100.htm#775<->Representative(R) : SeqEnum -&gt; Elt
5<->Random(R) <->text100.htm#776<->Random(R) : SeqEnum -&gt; Elt
5<->Explode(R) <->text100.htm#777<->Explode(R) : SeqEnum -&gt; List
5<->Eltseq(R) <->text100.htm#778<->Eltseq(R) : SeqEnum -&gt; SeqEnum
3<->element :<->text100.htm#770<->element :: Selection Operators on Enumerated Sequences (SEQUENCES)
3<->modification :<->text100.htm#779<->modification :: Modifying Enumerated Sequences (SEQUENCES)
5<->Append(S, x) <->text100.htm#780<->Append(S, x) : SeqEnum, Elt -> SeqEnum
5<->Append(~S, x) <->text100.htm#780<->Append(~S, x) : SeqEnum, Elt -&gt;
5<->Exclude(S, x) <->text100.htm#781<->Exclude(S, x) : SeqEnum, Elt -> SeqEnum
5<->Exclude(~S, x) <->text100.htm#781<->Exclude(~S, x) : SeqEnum, Elt -&gt;
5<->Include(S, x) <->text100.htm#782<->Include(S, x) : SeqEnum, Elt ->  SeqEnum
5<->Include(~S, x) <->text100.htm#782<->Include(~S, x) : SeqEnum, Elt -&gt;
5<->Insert(S, i, x) <->text100.htm#783<->Insert(S, i, x) : SeqEnum, RngIntElt, Elt -> SeqEnum
5<->Insert(~S, i, x) <->text100.htm#783<->Insert(~S, i, x) : SeqEnum, RngIntElt, Elt -&gt;
5<->Insert(S, k, m, T) <->text100.htm#784<->Insert(S, k, m, T) : SeqEnum, RngIntElt, RngIntElt, SeqEnum -> SeqEnum
5<->Insert(~S, k, m, T) <->text100.htm#784<->Insert(~S, k, m, T) : SeqEnum, RngIntElt, RngIntElt, SeqEnum -&gt;
5<->Prune(S) <->text100.htm#785<->Prune(S) : SeqEnum -> SeqEnum
5<->Prune(~S) <->text100.htm#785<->Prune(~S) : SeqEnum -&gt;
5<->Remove(S, i) <->text100.htm#786<->Remove(S, i) : SeqEnum, RngIntElt -> SeqEnum
5<->Remove(~S, i) <->text100.htm#786<->Remove(~S, i) : SeqEnum, RngIntElt -&gt;
5<->Reverse(S) <->text100.htm#787<->Reverse(S) : SeqEnum -> SeqEnum
5<->Reverse(~S) <->text100.htm#787<->Reverse(~S) : SeqEnum -&gt;
5<->Rotate(S, p) <->text100.htm#788<->Rotate(S, p) : SeqEnum, RngIntElt -> SeqEnum
5<->Rotate(~S, p) <->text100.htm#788<->Rotate(~S, p) : SeqEnum, RngIntElt -&gt;
5<->Sort(S) <->text100.htm#789<->Sort(S) : SeqEnum -> SeqEnum
5<->Sort(~S) <->text100.htm#789<->Sort(~S) : SeqEnum -&gt;
5<->Sort($\sim$S, C, $\sim$p) <->text100.htm#790<->Sort($\sim$S, C, $\sim$p) : SeqEnum, UserProgram, GrpPermElt ->
5<->Sort(S, C) <->text100.htm#790<->Sort(S, C) : SeqEnum, UserProgram -> SeqEnum
5<->Sort(~S, C) <->text100.htm#790<->Sort(~S, C) : SeqEnum, UserProgram -&gt;
5<->ParallelSort(~S, ~T) <->text100.htm#791<->ParallelSort(~S, ~T) : SeqEnum, SeqEnum -&gt;
5<->Undefine(S, i) <->text100.htm#792<->Undefine(S, i) : SeqEnum, RngIntElt -> SeqEnum
5<->Undefine(~S, i) <->text100.htm#792<->Undefine(~S, i) : SeqEnum, RngIntElt -&gt;
5<->ChangeUniverse(S, V) <->text100.htm#793<->ChangeUniverse(S, V) : SeqEnum, Str -> SeqEnum
5<->ChangeUniverse(S, V) <->text100.htm#793<->ChangeUniverse(S, V) : SeqEnum, Str -&gt;
5<->CanChangeUniverse(S, V) <->text100.htm#794<->CanChangeUniverse(S, V) : SeqEnum, Str -&gt; Bool, SeqEnum
4<->Seq_Farey (Example H10E3)<->text100.htm#795<->Seq_Farey (Example H10E3)
4<->Example-Farey :<->text100.htm#795<->Example-Farey :: Seq_Farey (Example H10E3)
3<->modification :<->text100.htm#779<->modification :: Modifying Enumerated Sequences (SEQUENCES)
3<->other :<->text100.htm#796<->other :: Creating New Enumerated Sequences from Existing Ones (SEQUENCES)
5<->S cat T <->text100.htm#797<->S cat T : SeqEnum, SeqEnum -&gt; SeqEnum
5<->S cat:= T <->text100.htm#798<->S cat:= T : SeqEnum, SeqEnum -&gt;
5<->Partition(S, p) <->text100.htm#799<->Partition(S, p) : SeqEnum, RngIntElt -&gt; SeqEnum(SeqEnum)
5<->Partition(S, P) <->text100.htm#800<->Partition(S, P) : SeqEnum, [RngIntElt] -&gt; SeqEnum(SeqEnum)
5<->SetToSequence :: Setseq(S) <->text100.htm#801<->SetToSequence :: Setseq(S) : SetEnum -&gt; SeqEnum
5<->Setseq(S) <->text100.htm#801<->Setseq(S) : SetEnum -&gt; SeqEnum
5<->SequenceToSet :: Seqset(S) <->text100.htm#802<->SequenceToSet :: Seqset(S) : SeqEnum -&gt; SetEnum
5<->Seqset(S) <->text100.htm#802<->Seqset(S) : SeqEnum -&gt; SetEnum
4<->Seq_EgyptianFractions (Example H10E4)<->text100.htm#803<->Seq_EgyptianFractions (Example H10E4)
4<->Example-EgyptianFractions :<->text100.htm#803<->Example-EgyptianFractions :: Seq_EgyptianFractions (Example H10E4)
3<->boolean_seqs :<->text100.htm#804<->boolean_seqs :: Operations on Sequences of Booleans (SEQUENCES)
5<->And(\til S, T) <->text100.htm#805<->And(\til S, T) : [ BoolElt ], [ BoolElt ] ->
5<->And(S, T) <->text100.htm#805<->And(S, T) : [ BoolElt ], [ BoolElt ] -&gt; [BoolElt]
5<->Or(\til S, T) <->text100.htm#806<->Or(\til S, T) : [ BoolElt ], [ BoolElt ] ->
5<->Or(S, T) <->text100.htm#806<->Or(S, T) : [ BoolElt ], [ BoolElt ] -&gt; [ BoolElt ]
5<->Xor(\til S, T) <->text100.htm#807<->Xor(\til S, T) : [ BoolElt], [ BoolElt ] -> 
5<->Xor(S, T) <->text100.htm#807<->Xor(S, T) : [ BoolElt ], [ BoolElt ] -&gt; [ BoolElt ]
5<->Not(\til S) <->text100.htm#808<->Not(\til S) : [ BoolElt ] ->
5<->Not(S) <->text100.htm#808<->Not(S) : [ BoolElt ] -&gt; [ BoolElt ]
3<->boolean_seqs :<->text100.htm#804<->boolean_seqs :: Operations on Sequences of Booleans (SEQUENCES)
3<->other :<->text100.htm#796<->other :: Creating New Enumerated Sequences from Existing Ones (SEQUENCES)
3<->operation :<->text100.htm<->operation :: Operators on Sequences (SEQUENCES)
3<->Boolean :<->text101.htm<->Boolean :: Predicates on Sequences (SEQUENCES)
5<->IsComplete(S) <->text101.htm#810<->IsComplete(S) : SeqEnum -&gt; BoolElt
5<->IsDefined(S, i) <->text101.htm#811<->IsDefined(S, i) : SeqEnum, RngIntElt -&gt; BoolElt
5<->IsEmpty(S) <->text101.htm#812<->IsEmpty(S) : SeqEnum -&gt; BoolElt
5<->IsNull(S) <->text101.htm#813<->IsNull(S) : SeqEnum -&gt; BoolElt
3<->membership :<->text101.htm#814<->membership :: Membership Testing (SEQUENCES)
5<->x in S <->text101.htm#815<->x in S : Elt, SeqEnum -&gt; BoolElt
5<->x notin S <->text101.htm#816<->x notin S : Elt, SeqEnum -&gt; BoolElt
5<->IsSubsequence(S, T\col\ Kind \col= \option) <->text101.htm#817<->IsSubsequence(S, T\col\ Kind \col= \option) : SeqEnum, SeqEnum, MonStgElt -> BoolElt
5<->IsSubsequence(S, T) <->text101.htm#817<->IsSubsequence(S, T) : SeqEnum, SeqEnum -&gt; BoolElt
5<->S eq T <->text101.htm#818<->S eq T : SeqEnum, SeqEnum -&gt; BoolElt
5<->S ne T <->text101.htm#819<->S ne T : SeqEnum, SeqEnum -&gt; BoolElt
3<->membership :<->text101.htm#814<->membership :: Membership Testing (SEQUENCES)
3<->order :<->text101.htm#820<->order :: Testing Order Relations (SEQUENCES)
5<->S lt T <->text101.htm#821<->S lt T : SeqEnum, SeqEnum -&gt; BoolElt
5<->S le T <->text101.htm#822<->S le T : SeqEnum, SeqEnum -&gt; BoolElt
5<->S ge T <->text101.htm#823<->S ge T : SeqEnum, SeqEnum -&gt; BoolElt
5<->S gt T <->text101.htm#824<->S gt T : SeqEnum, SeqEnum -&gt; BoolElt
3<->order :<->text101.htm#820<->order :: Testing Order Relations (SEQUENCES)
3<->Boolean :<->text101.htm<->Boolean :: Predicates on Sequences (SEQUENCES)
3<->recursion-reduction-iteration :<->text102.htm<->recursion-reduction-iteration :: Recursion, Reduction, and Iteration (SEQUENCES)
3<->recursion :<->text102.htm#826<->recursion :: Recursion (SEQUENCES)
5<->Self() <->text102.htm#827<->Self() : -> SeqEnum
5<->Self(n) <->text102.htm#827<->Self(n) : RngIntElt -&gt; Elt
4<->Seq_Self (Example H10E5)<->text102.htm#828<->Seq_Self (Example H10E5)
4<->Example-Self :<->text102.htm#828<->Example-Self :: Seq_Self (Example H10E5)
3<->recursion :<->text102.htm#826<->recursion :: Recursion (SEQUENCES)
3<->reduction :<->text102.htm#829<->reduction :: Reduction (SEQUENCES)
5<->&  S <->text102.htm#830<->&amp; <IMG SRC="open.gif" ALT="" WIDTH=7 HEIGHT=7> S : Op, SeqEnum -&gt; Elt
3<->reduction :<->text102.htm#829<->reduction :: Reduction (SEQUENCES)
3<->recursion-reduction-iteration :<->text102.htm<->recursion-reduction-iteration :: Recursion, Reduction, and Iteration (SEQUENCES)
3<->iteration :<->text103.htm<->iteration :: Iteration (SEQUENCES)
5<->for x in S do statements; end for;<->text103.htm#832<->for x in S do statements; end for;
4<->Seq_NestedIteration (Example H10E6)<->text103.htm#833<->Seq_NestedIteration (Example H10E6)
4<->Example-NestedIteration :<->text103.htm#833<->Example-NestedIteration :: Seq_NestedIteration (Example H10E6)
3<->iteration :<->text103.htm<->iteration :: Iteration (SEQUENCES)
3<->detail :<->text96.htm<->detail :: SEQUENCES
3<->tuple-cartesian-product :<->text105.htm<->tuple-cartesian-product :: TUPLES AND CARTESIAN PRODUCTS
3<->introduction :<->text106.htm<->introduction :: Introduction (TUPLES AND CARTESIAN PRODUCTS)
3<->creation :<->text107.htm<->creation :: Cartesian Product Constructor  and Functions (TUPLES AND CARTESIAN PRODUCTS)
5<->car< R1, ..., Rk > <->text107.htm#838<->car&lt; R<sub>1</sub>, ..., R<sub>k</sub> &gt; : Str, ..., Str -&gt; SetCart
5<->CartesianProduct(R, S) <->text107.htm#839<->CartesianProduct(R, S) : Str, ..., Str -&gt; SetCart
5<->CartesianProduct(L) <->text107.htm#840<->CartesianProduct(L) : <Str> -> SetCart
5<->CartesianProduct(L) <->text107.htm#840<->CartesianProduct(L) : [Str] -&gt; SetCart
5<->CartesianPower(R, k) <->text107.htm#841<->CartesianPower(R, k) : Str, RngIntElt -&gt; SetCart
5<->Flat(C) <->text107.htm#842<->Flat(C) : SetCart -&gt; SetCart
5<->NumberOfComponents(C) <->text107.htm#843<->NumberOfComponents(C) : SetCart -&gt; RngIntElt
5<->[] :: Component(C, i) <->text107.htm#844<->[] :: Component(C, i) : SetCart, RngIntElt -&gt; Str
5<->Component(C, i) <->text107.htm#844<->Component(C, i) : SetCart, RngIntElt -&gt; Str
5<-># C <->text107.htm#845<-># C : SetCart -&gt; RngIntElt
5<->Rep(C) <->text107.htm#846<->Rep(C) : SetCart -&gt; Elt
5<->Random(C) <->text107.htm#847<->Random(C) : SetCart -&gt; Elt
4<->Tuple_CartesianProduct (Example H11E1)<->text107.htm#848<->Tuple_CartesianProduct (Example H11E1)
4<->Example-CartesianProduct :<->text107.htm#848<->Example-CartesianProduct :: Tuple_CartesianProduct (Example H11E1)
3<->creation :<->text107.htm<->creation :: Cartesian Product Constructor  and Functions (TUPLES AND CARTESIAN PRODUCTS)
3<->tuple :<->text108.htm<->tuple :: Creating and Modifying Tuples (TUPLES AND CARTESIAN PRODUCTS)
5<->! :: elt< C | a1, a2, ..., ak > <->text108.htm#850<->! :: elt&lt; C | a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : SetCart, Elt, ..., Elt -&gt; Tup
5<->elt< C | a1, a2, ..., ak > <->text108.htm#850<->elt&lt; C | a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : SetCart, Elt, ..., Elt -&gt; Tup
5<-> :: < a1, a2, ..., ak > <->text108.htm#851<-><> :: &lt; a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub> &gt; : Elt, ..., Elt -&gt; Tup
5<->Append(T, x) <->text108.htm#852<->Append(T, x) : Tup, Elt -&gt; Tup
5<->Append(~T, x) <->text108.htm#853<->Append(~T, x) : Tup, Elt -&gt;
5<->Prune(T) <->text108.htm#854<->Prune(T) : Tup -&gt; Tup
5<->Prune(~T) <->text108.htm#855<->Prune(~T) : Tup -&gt;
5<->Flat(T) <->text108.htm#856<->Flat(T) : Tup -&gt; Tup
4<->Tuple_Tuple (Example H11E2)<->text108.htm#857<->Tuple_Tuple (Example H11E2)
4<->Example-Tuple :<->text108.htm#857<->Example-Tuple :: Tuple_Tuple (Example H11E2)
3<->tuple :<->text108.htm<->tuple :: Creating and Modifying Tuples (TUPLES AND CARTESIAN PRODUCTS)
3<->tuple-access :<->text109.htm<->tuple-access :: Tuple Access Functions (TUPLES AND CARTESIAN PRODUCTS)
5<->Parent(T) <->text109.htm#859<->Parent(T) : Tup -&gt; SetCart
5<-># T <->text109.htm#860<-># T : Tup -&gt; RngIntElt
5<->[] :: T[i] <->text109.htm#861<->[] :: T[i] : Tup -&gt; Elt
5<->Explode(T) <->text109.htm#862<->Explode(T) : Tup -&gt; t1, t2, ...
5<->Tuplist :: TupleToList(T) <->text109.htm#863<->Tuplist :: TupleToList(T) : Tup -&gt; List
5<->TupleToList(T) <->text109.htm#863<->TupleToList(T) : Tup -&gt; List
4<->Tuple_TupleAccess (Example H11E3)<->text109.htm#864<->Tuple_TupleAccess (Example H11E3)
4<->Example-TupleAccess :<->text109.htm#864<->Example-TupleAccess :: Tuple_TupleAccess (Example H11E3)
3<->tuple-access :<->text109.htm<->tuple-access :: Tuple Access Functions (TUPLES AND CARTESIAN PRODUCTS)
3<->Boolean :<->text110.htm<->Boolean :: Equality (TUPLES AND CARTESIAN PRODUCTS)
5<->T eq U <->text110.htm#866<->T eq U : Tup, Tup -&gt; BoolElt
5<->T ne U <->text110.htm#867<->T ne U : Tup, Tup -&gt; BoolElt
3<->Boolean :<->text110.htm<->Boolean :: Equality (TUPLES AND CARTESIAN PRODUCTS)
3<->Other Operations (TUPLES AND CARTESIAN PRODUCTS)<->text111.htm<->Other Operations (TUPLES AND CARTESIAN PRODUCTS)
5<->&* :: &* T <->text111.htm#869<->&* :: &amp;* T : Tup -&gt; Any
3<->Other Operations (TUPLES AND CARTESIAN PRODUCTS)<->text111.htm<->Other Operations (TUPLES AND CARTESIAN PRODUCTS)
3<->tuple-cartesian-product :<->text105.htm<->tuple-cartesian-product :: TUPLES AND CARTESIAN PRODUCTS
3<->list :<->text113.htm<->list :: LISTS
3<->introduction :<->text114.htm<->introduction :: Introduction (LISTS)
3<->constructor :<->text115.htm<->constructor :: Construction of Lists (LISTS)
5<->[**] :: [*  *] <->text115.htm#874<->[**] :: [*  *] : -&gt; List
5<->[**] :: [*  e1, e2, ..., en *] <->text115.htm#875<->[**] :: [*  e<sub>1</sub>, e<sub>2</sub>, ..., e<sub>n</sub> *] : Elt,.., Elt -&gt; List
3<->constructor :<->text115.htm<->constructor :: Construction of Lists (LISTS)
3<->creation :<->text116.htm<->creation :: Creation of New Lists (LISTS)
5<->S cat T <->text116.htm#877<->S cat T : List, List -&gt; List
5<->S cat:= T <->text116.htm#878<->S cat:= T : List, List -&gt;
5<->Append(S, x) <->text116.htm#879<->Append(S, x) : List, Elt -&gt; List
5<->Append(~S, x) <->text116.htm#880<->Append(~S, x) : List, Elt -&gt;
5<->Insert(S, i, x) <->text116.htm#881<->Insert(S, i, x) : List, RngIntElt, Any -> List
5<->Insert(~S, i, x) <->text116.htm#881<->Insert(~S, i, x) : List, RngIntElt, Any -&gt;
5<->Prune(S) <->text116.htm#882<->Prune(S) : List -&gt; List
5<->Prune(~S) <->text116.htm#883<->Prune(~S) : List -&gt;
5<->Seqlist :: SequenceToList(Q) <->text116.htm#884<->Seqlist :: SequenceToList(Q) : SeqEnum -&gt; List
5<->SequenceToList(Q) <->text116.htm#884<->SequenceToList(Q) : SeqEnum -&gt; List
5<->Tuplist :: TupleToList(T) <->text116.htm#885<->Tuplist :: TupleToList(T) : Tup -&gt; List
5<->TupleToList(T) <->text116.htm#885<->TupleToList(T) : Tup -&gt; List
5<->Reverse(L) <->text116.htm#886<->Reverse(L) : List -&gt; List
3<->creation :<->text116.htm<->creation :: Creation of New Lists (LISTS)
3<->access :<->text117.htm<->access :: Access Functions (LISTS)
5<-># S <->text117.htm#888<-># S : List -&gt; RngIntElt
5<->IsEmpty(S) <->text117.htm#889<->IsEmpty(S) : List -&gt; BoolElt
5<->[] :: S[i] <->text117.htm#890<->[] :: S[i] : List, RngIntElt -&gt; Elt
5<->[] :: S[I] <->text117.htm#891<->[] :: S[I] : List, [RngIntElt] -&gt; List
5<->IsDefined(L, i) <->text117.htm#892<->IsDefined(L, i) : List, RngIntElt -&gt; Elt
3<->access :<->text117.htm<->access :: Access Functions (LISTS)
3<->assignment :<->text118.htm<->assignment :: Assignment Operator (LISTS)
5<->[] :: S[i] := x <->text118.htm#894<->[] :: S[i] := x : List, RngIntElt, Elt -&gt;
3<->assignment :<->text118.htm<->assignment :: Assignment Operator (LISTS)
3<->list :<->text113.htm<->list :: LISTS
3<->list :<->text120.htm<->list :: ASSOCIATIVE ARRAYS
3<->introduction :<->text121.htm<->introduction :: Introduction (ASSOCIATIVE ARRAYS)
3<->operations :<->text122.htm<->operations :: Operations (ASSOCIATIVE ARRAYS)
5<->AssociativeArray()<->text122.htm#899<->AssociativeArray(): -&gt; Assoc
5<->AssociativeArray(I)<->text122.htm#900<->AssociativeArray(I): Str -&gt; Assoc
5<->[] :: A[x] := y <->text122.htm#901<->[] :: A[x] := y : Assoc, Elt, Elt -&gt;
5<->[] :: A[x] <->text122.htm#902<->[] :: A[x] : Assoc, Elt -&gt; Elt
5<->IsDefined(A, x) <->text122.htm#903<->IsDefined(A, x) : Assoc, Elt -&gt; Bool, Elt
5<->Remove(~A, x) <->text122.htm#904<->Remove(~A, x) : Assoc, Elt -&gt;
5<->Universe(A)<->text122.htm#905<->Universe(A): Assoc -&gt; Str
5<->Keys(A)<->text122.htm#906<->Keys(A): Assoc -&gt; SetEnum
4<->Assoc_InvarField1 (Example H13E1)<->text122.htm#907<->Assoc_InvarField1 (Example H13E1)
4<->Example-InvarField1 :<->text122.htm#907<->Example-InvarField1 :: Assoc_InvarField1 (Example H13E1)
3<->operations :<->text122.htm<->operations :: Operations (ASSOCIATIVE ARRAYS)
3<->list :<->text120.htm<->list :: ASSOCIATIVE ARRAYS
3<->coproduct :<->text124.htm<->coproduct :: COPRODUCTS
3<->introduction :<->text125.htm<->introduction :: Introduction (COPRODUCTS)
3<->creation :<->text126.htm<->creation :: Creation Functions (COPRODUCTS)
3<->structure :<->text126.htm#912<->structure :: Creation of Coproducts (COPRODUCTS)
5<->cop <->text126.htm#913<->cop< [ S$_1$, S$_2$, ..., S$_k$ ] > : [ Str, Str, ... ] -> Cop, [ Map ]
5<->cop< S1, S2, ..., Sk > <->text126.htm#913<->cop&lt; S<sub>1</sub>, S<sub>2</sub>, ..., S<sub>k</sub> &gt; : Str, Str, ... -&gt; Cop, [ Map ]
3<->structure :<->text126.htm#912<->structure :: Creation of Coproducts (COPRODUCTS)
3<->element :<->text126.htm#914<->element :: Creation of Coproduct Elements (COPRODUCTS)
5<->() :: m(e) <->text126.htm#915<->() :: m(e) : Map, Elt -&gt; CopElt
5<->C ! e <->text126.htm#916<->C ! e : Cop, Elt -&gt; CopElt
3<->element :<->text126.htm#914<->element :: Creation of Coproduct Elements (COPRODUCTS)
3<->creation :<->text126.htm<->creation :: Creation Functions (COPRODUCTS)
3<->access :<->text127.htm<->access :: Accessing Functions (COPRODUCTS)
5<->Injections(C) <->text127.htm#918<->Injections(C) : Cop -&gt; [ Map ]
5<-># C <->text127.htm#919<-># C : Cop -&gt; RngIntElt
5<->Constituent(C, i) <->text127.htm#920<->Constituent(C, i) : Cop, RngIntElt -&gt; Str
5<->Index(x) <->text127.htm#921<->Index(x) : CopElt -&gt; RngIntElt
3<->access :<->text127.htm<->access :: Accessing Functions (COPRODUCTS)
3<->retrieve :<->text128.htm<->retrieve :: Retrieve (COPRODUCTS)
5<->Retrieve(x) <->text128.htm#923<->Retrieve(x) : CopElt -&gt; Elt
4<->Cop_cop (Example H14E1)<->text128.htm#924<->Cop_cop (Example H14E1)
4<->Example-cop :<->text128.htm#924<->Example-cop :: Cop_cop (Example H14E1)
3<->retrieve :<->text128.htm<->retrieve :: Retrieve (COPRODUCTS)
3<->flat :<->text129.htm<->flat :: Flattening (COPRODUCTS)
5<->Flat(C) <->text129.htm#926<->Flat(C) : Cop -&gt; Cop
3<->flat :<->text129.htm<->flat :: Flattening (COPRODUCTS)
3<->universal :<->text130.htm<->universal :: Universal Map (COPRODUCTS)
5<->UniversalMap(C, S, [ n1, ..., nm ]) <->text130.htm#928<->UniversalMap(C, S, [ n<sub>1</sub>, ..., n<sub>m</sub> ]) : Cop, Str, [ Map ] -&gt; Map
3<->universal :<->text130.htm<->universal :: Universal Map (COPRODUCTS)
3<->coproduct :<->text124.htm<->coproduct :: COPRODUCTS
3<->record-format :<->text132.htm<->record-format :: RECORDS
3<->introduction :<->text133.htm<->introduction :: Introduction (RECORDS)
3<->creation-format :<->text134.htm<->creation-format :: The Record Format Constructor (RECORDS)
5<->recformat< L > <->text134.htm#933<->recformat&lt; L &gt; : FieldnameList -&gt; RecFormat
4<->Rec_RecordFormat (Example H15E1)<->text134.htm#934<->Rec_RecordFormat (Example H15E1)
4<->Example-RecordFormat :<->text134.htm#934<->Example-RecordFormat :: Rec_RecordFormat (Example H15E1)
3<->creation-format :<->text134.htm<->creation-format :: The Record Format Constructor (RECORDS)
3<->creation-record :<->text135.htm<->creation-record :: Creating a Record (RECORDS)
5<->rec< F | L > <->text135.htm#936<->rec&lt; F | L &gt; : RecFormat, FieldAssignmentList -&gt; Rec
4<->Rec_Record (Example H15E2)<->text135.htm#937<->Rec_Record (Example H15E2)
4<->Example-Record :<->text135.htm#937<->Example-Record :: Rec_Record (Example H15E2)
3<->creation-record :<->text135.htm<->creation-record :: Creating a Record (RECORDS)
3<->access-modification :<->text136.htm<->access-modification :: Access and Modification  Functions (RECORDS)
5<->Format(r) <->text136.htm#939<->Format(r) : Rec -&gt; RecFormat
5<->Names(F) <->text136.htm#940<->Names(F) : RecFrmt -&gt; [ MonStgElt ]
5<->Names(r) <->text136.htm#941<->Names(r) : Rec -&gt; [ MonStgElt ]
5<->r`fieldname <->text136.htm#942<->r`fieldname : Rec, Fieldname -&gt; Elt
5<->r`fieldname <->text136.htm#943<->r`fieldname := expression;
5<->delete  r`fieldname <->text136.htm#944<->delete  r`fieldname : Rec, Fieldname -&gt; Nil
5<->assigned  r`fieldname <->text136.htm#945<->assigned  r`fieldname : Rec, Fieldname -&gt; BoolElt
5<->r``s <->text136.htm#946<->r``s : Rec, String -&gt; Elt
4<->Rec_RecordAccess (Example H15E3)<->text136.htm#947<->Rec_RecordAccess (Example H15E3)
4<->Example-RecordAccess :<->text136.htm#947<->Example-RecordAccess :: Rec_RecordAccess (Example H15E3)
3<->access-modification :<->text136.htm<->access-modification :: Access and Modification  Functions (RECORDS)
3<->record-format :<->text132.htm<->record-format :: RECORDS
3<->detail :<->text138.htm<->detail :: MAPPINGS
3<->introduction :<->text139.htm<->introduction :: Introduction (MAPPINGS)
3<->constructor :<->text139.htm#951<->constructor :: The Map Constructors (MAPPINGS)
3<->subgraph-graph :<->text139.htm#952<->subgraph-graph :: The Graph of a Map (MAPPINGS)
3<->rule :<->text139.htm#953<->rule :: Rules for Maps (MAPPINGS)
3<->homomorphism :<->text139.htm#954<->homomorphism :: Homomorphisms (MAPPINGS)
3<->checking :<->text139.htm#955<->checking :: Checking of Maps (MAPPINGS)
3<->introduction :<->text139.htm<->introduction :: Introduction (MAPPINGS)
3<->creation :<->text140.htm<->creation :: Creation Functions (MAPPINGS)
3<->mapping :<->text140.htm#957<->mapping :: Creation of Maps (MAPPINGS)
5<->map< A -> B | G > <->text140.htm#958<->map&lt; A -&gt; B | G &gt; : Str, Str -&gt; Map
5<->map< A -> B | x : -> e(x) > <->text140.htm#959<->map&lt; A -&gt; B | x : -&gt; e(x) &gt; : Str, Str -&gt; Map
5<->map< A -> B | x : -> e(x), y : -> i(y) > <->text140.htm#960<->map&lt; A -&gt; B | x : -&gt; e(x), y : -&gt; i(y) &gt; : Str, Str -&gt; Map
3<->mapping :<->text140.htm#957<->mapping :: Creation of Maps (MAPPINGS)
3<->partial-mapping :<->text140.htm#961<->partial-mapping :: Creation of Partial Maps (MAPPINGS)
5<->pmap< A -> B | G > <->text140.htm#962<->pmap&lt; A -&gt; B | G &gt; : Str, Str -&gt; Map
5<->pmap< A -> B | x : -> e(x) > <->text140.htm#963<->pmap&lt; A -&gt; B | x : -&gt; e(x) &gt; : Str, Str -&gt; Map
5<->pmap< A -> B | x : -> e(x), y : -> i(y) > <->text140.htm#964<->pmap&lt; A -&gt; B | x : -&gt; e(x), y : -&gt; i(y) &gt; : Str, Str -&gt; Map
3<->partial-mapping :<->text140.htm#961<->partial-mapping :: Creation of Partial Maps (MAPPINGS)
3<->homomorphism :<->text140.htm#965<->homomorphism :: Creation of Homomorphisms (MAPPINGS)
5<->hom< A -> B | G > <->text140.htm#966<->hom&lt; A -&gt; B | G &gt; : Str, Str -&gt; Map
5<->hom <->text140.htm#967<->hom< A \ar B | x$_1$ \ar y$_1$, ..., x$_n$ \ar y$_n$ > : Str, Str -> Map
5<->hom< A -> B | y1, ..., yn > <->text140.htm#967<->hom&lt; A -&gt; B | y<sub>1</sub>, ..., y<sub>n</sub> &gt; : Str, Str -&gt; Map
5<->hom< A -> B | x : -> e(x) > <->text140.htm#968<->hom&lt; A -&gt; B | x : -&gt; e(x) &gt; : Str, Str -&gt; Map
5<->hom< A -> B | x : -> e(x), y : -> i(y) > <->text140.htm#969<->hom&lt; A -&gt; B | x : -&gt; e(x), y : -&gt; i(y) &gt; : Str, Str -&gt; Map
3<->homomorphism :<->text140.htm#965<->homomorphism :: Creation of Homomorphisms (MAPPINGS)
3<->coercion :<->text140.htm#970<->coercion :: Coercion Maps (MAPPINGS)
5<->Bang :: Coercion(D, C) <->text140.htm#971<->Bang :: Coercion(D, C) : Str, Str -&gt; Map
5<->Coercion(D, C) <->text140.htm#971<->Coercion(D, C) : Str, Str -&gt; Map
3<->coercion :<->text140.htm#970<->coercion :: Coercion Maps (MAPPINGS)
3<->creation :<->text140.htm<->creation :: Creation Functions (MAPPINGS)
3<->operation :<->text141.htm<->operation :: Operations on Mappings (MAPPINGS)
3<->composition :<->text141.htm#973<->composition :: Composition (MAPPINGS)
5<->f * g <->text141.htm#974<->f * g : Map, Map -&gt; Map
5<->Components(f) <->text141.htm#975<->Components(f) : Map -&gt; [ Map ]
3<->composition :<->text141.htm#973<->composition :: Composition (MAPPINGS)
3<->domain-kernel :<->text141.htm#976<->domain-kernel :: (Co)Domain and (Co)Kernel (MAPPINGS)
5<->Domain(f) <->text141.htm#977<->Domain(f) : Map -&gt; Str
5<->Codomain(f) <->text141.htm#978<->Codomain(f) : Map -&gt; Str
5<->Image(f) <->text141.htm#979<->Image(f) : Map -&gt; Elt
5<->Kernel(f) <->text141.htm#980<->Kernel(f) : Map -&gt; Str
3<->domain-kernel :<->text141.htm#976<->domain-kernel :: (Co)Domain and (Co)Kernel (MAPPINGS)
3<->inverse :<->text141.htm#981<->inverse :: Inverse (MAPPINGS)
5<->Inverse(m) <->text141.htm#982<->Inverse(m) : Map -&gt; Map
3<->inverse :<->text141.htm#981<->inverse :: Inverse (MAPPINGS)
3<->function :<->text141.htm#983<->function :: Function (MAPPINGS)
5<->Function(f) <->text141.htm#984<->Function(f) : Map -&gt; UserProgram
3<->function :<->text141.htm#983<->function :: Function (MAPPINGS)
3<->operation :<->text141.htm<->operation :: Operations on Mappings (MAPPINGS)
3<->image-preimage :<->text142.htm<->image-preimage :: Images and Preimages (MAPPINGS)
5<->() :: a @ f <->text142.htm#986<->() :: a @ f : Elt, Map -&gt; Elt
5<->a @ f <->text142.htm#986<->a @ f : Elt, Map -&gt; Elt
5<->S @ f <->text142.htm#987<->S @ f : SetIndx, Map -> SetIndx
5<->S @ f <->text142.htm#987<->S @ f : SeqEnum, Map -> Seq
5<->() :: S @ f <->text142.htm#987<->() :: S @ f : SetEnum, Map -&gt; SetEnum
5<->f(S) : SetIndx, Map -> SetIndx :: S @ f <->text142.htm#987<->f(S) : SetIndx, Map -> SetIndx :: S @ f : SetEnum, Map -&gt; SetEnum
5<->f(S) : SeqEnum, Map -> Seq :: S @ f <->text142.htm#987<->f(S) : SeqEnum, Map -> Seq :: S @ f : SetEnum, Map -&gt; SetEnum
5<->S @ f <->text142.htm#987<->S @ f : SetEnum, Map -&gt; SetEnum
5<->() :: C @ f <->text142.htm#988<->() :: C @ f : Str, Map -&gt; Str
5<->C @ f <->text142.htm#988<->C @ f : Str, Map -&gt; Str
5<->y @@ f <->text142.htm#989<->y @@ f : Elt, Map -&gt; Elt
5<->R @@ f <->text142.htm#990<->R @@ f : SetIndx, Map -> SetIndx
5<->R @@ f <->text142.htm#990<->R @@ f : SeqEnum, Map -> Seq
5<->R @@ f <->text142.htm#990<->R @@ f : SetEnum, Map -&gt; SetEnum
5<->D @@ f <->text142.htm#991<->D @@ f : Str, Map -&gt; Str
5<->HasPreimage(x, f) <->text142.htm#992<->HasPreimage(x, f) : Any, Map -&gt; BoolElt, Any
3<->image-preimage :<->text142.htm<->image-preimage :: Images and Preimages (MAPPINGS)
3<->parents :<->text143.htm<->parents :: Parents of Maps (MAPPINGS)
5<->Parent(m) <->text143.htm#994<->Parent(m) : Map -&gt; PowMap
5<->Codomain :: Domain(P) <->text143.htm#995<->Codomain :: Domain(P) : PowMap -&gt; Str
5<->Domain(P) <->text143.htm#995<->Domain(P) : PowMap -&gt; Str
5<->Iso :: Maps(D, C) <->text143.htm#996<->Iso :: Maps(D, C) : Str, Str -&gt; PowMap
5<->Maps(D, C) <->text143.htm#996<->Maps(D, C) : Str, Str -&gt; PowMap
5<->Aut(S) <->text143.htm#997<->Aut(S) : Str -&gt; PowMapAut
3<->parents :<->text143.htm<->parents :: Parents of Maps (MAPPINGS)
3<->detail :<->text138.htm<->detail :: MAPPINGS
3<->detail :<->text145.htm<->detail :: INTRODUCTION TO RINGS [BASIC RINGS]
3<->overview :<->text146.htm<->overview :: Overview (INTRODUCTION TO RINGS [BASIC RINGS])
3<->world :<->text147.htm<->world :: The World of Rings (INTRODUCTION TO RINGS [BASIC RINGS])
3<->creation :<->text147.htm#1002<->creation :: New Rings from Existing Ones (INTRODUCTION TO RINGS [BASIC RINGS])
3<->world :<->text147.htm<->world :: The World of Rings (INTRODUCTION TO RINGS [BASIC RINGS])
3<->coercion :<->text148.htm<->coercion :: Coercion (INTRODUCTION TO RINGS [BASIC RINGS])
3<->automatic :<->text148.htm#1004<->automatic :: Automatic Coercion (INTRODUCTION TO RINGS [BASIC RINGS])
3<->forced :<->text148.htm#1005<->forced :: Forced Coercion (INTRODUCTION TO RINGS [BASIC RINGS])
3<->coercion :<->text148.htm<->coercion :: Coercion (INTRODUCTION TO RINGS [BASIC RINGS])
3<->generic :<->text149.htm<->generic :: Generic Ring Functions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->related :<->text149.htm#1007<->related :: Related Structures (INTRODUCTION TO RINGS [BASIC RINGS])
5<->Parent(R) <->text149.htm#1008<->Parent(R) : Rng -&gt; Pow
5<->Type :: Category(R) <->text149.htm#1009<->Type :: Category(R) : Rng -&gt; Cat
5<->Category(R) <->text149.htm#1009<->Category(R) : Rng -&gt; Cat
5<->PrimeField(F) <->text149.htm#1010<->PrimeField(F) : Fld -&gt; Fld
5<->PrimeRing(R) <->text149.htm#1011<->PrimeRing(R) : Rng -&gt; Rng
5<->Center :: Centre(R) <->text149.htm#1012<->Center :: Centre(R) : Rng -&gt; Rng
5<->Centre(R) <->text149.htm#1012<->Centre(R) : Rng -&gt; Rng
3<->related :<->text149.htm#1007<->related :: Related Structures (INTRODUCTION TO RINGS [BASIC RINGS])
3<->invariant :<->text149.htm#1013<->invariant :: Numerical Invariants (INTRODUCTION TO RINGS [BASIC RINGS])
5<->Characteristic(R) <->text149.htm#1014<->Characteristic(R) : Rng -&gt; RngIntElt
5<-># R <->text149.htm#1015<-># R : Rng -&gt; RngIntElt
3<->invariant :<->text149.htm#1013<->invariant :: Numerical Invariants (INTRODUCTION TO RINGS [BASIC RINGS])
3<->predicate :<->text149.htm#1016<->predicate :: Predicates and Boolean Operations (INTRODUCTION TO RINGS [BASIC RINGS])
5<->IsCommutative(R) <->text149.htm#1017<->IsCommutative(R) : Rng -&gt; BoolElt
5<->IsUnitary(R) <->text149.htm#1018<->IsUnitary(R) : Rng -&gt; BoolElt
5<->IsFinite(R) <->text149.htm#1019<->IsFinite(R) : Rng -&gt; BoolElt
5<->IsOrdered(R) <->text149.htm#1020<->IsOrdered(R) : Rng -&gt; BoolElt
5<->IsField(R) <->text149.htm#1021<->IsField(R) : Rng -&gt; BoolElt
5<->IsDivisionRing(R) <->text149.htm#1022<->IsDivisionRing(R) : Rng -&gt; BoolElt
5<->IsEuclideanDomain(R) <->text149.htm#1023<->IsEuclideanDomain(R) : Rng -&gt; BoolElt
5<->IsEuclideanRing(R) <->text149.htm#1024<->IsEuclideanRing(R) : Rng -&gt; BoolElt
5<->IsMagmaEuclideanRing(R) <->text149.htm#1025<->IsMagmaEuclideanRing(R) : Rng -&gt; BoolElt
5<->IsPrincipalIdealDomain :: IsPID(R) <->text149.htm#1026<->IsPrincipalIdealDomain :: IsPID(R) : Rng -&gt; BoolElt
5<->IsPID(R) <->text149.htm#1026<->IsPID(R) : Rng -&gt; BoolElt
5<->IsPrincipalIdealRing :: IsPIR(R) <->text149.htm#1027<->IsPrincipalIdealRing :: IsPIR(R) : Rng -&gt; BoolElt
5<->IsPIR(R) <->text149.htm#1027<->IsPIR(R) : Rng -&gt; BoolElt
5<->IsUniqueFactorizationDomain :: IsUFD(R) <->text149.htm#1028<->IsUniqueFactorizationDomain :: IsUFD(R) : Rng -&gt; BoolElt
5<->IsUFD(R) <->text149.htm#1028<->IsUFD(R) : Rng -&gt; BoolElt
5<->IsIntegralDomain :: IsDomain(R) <->text149.htm#1029<->IsIntegralDomain :: IsDomain(R) : Rng -&gt; BoolElt
5<->IsDomain(R) <->text149.htm#1029<->IsDomain(R) : Rng -&gt; BoolElt
5<->HasGCD(R) <->text149.htm#1030<->HasGCD(R) : Rng -&gt; BoolElt
5<->R eq S <->text149.htm#1031<->R eq S : Rng, Rng -&gt; Rng
5<->R ne S <->text149.htm#1032<->R ne S : Rng, Rng -&gt; Rng
3<->predicate :<->text149.htm#1016<->predicate :: Predicates and Boolean Operations (INTRODUCTION TO RINGS [BASIC RINGS])
3<->generic :<->text149.htm<->generic :: Generic Ring Functions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->element :<->text150.htm<->element :: Generic Element Functions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->parent-type :<->text150.htm#1034<->parent-type :: Parent and Category (INTRODUCTION TO RINGS [BASIC RINGS])
5<->Parent(r) <->text150.htm#1035<->Parent(r) : RngElt -&gt; Rng
5<->Type :: Category(r) <->text150.htm#1036<->Type :: Category(r) : RngElt -&gt; Cat
5<->Category(r) <->text150.htm#1036<->Category(r) : RngElt -&gt; Cat
3<->parent-type :<->text150.htm#1034<->parent-type :: Parent and Category (INTRODUCTION TO RINGS [BASIC RINGS])
3<->creation-element :<->text150.htm#1037<->creation-element :: Creation of Elements (INTRODUCTION TO RINGS [BASIC RINGS])
5<->Zero(R) <->text150.htm#1038<->Zero(R) : Rng -&gt; RngElt
5<->Id :: One(R) <->text150.htm#1039<->Id :: One(R) : Rng  -&gt; RngElt
5<->One(R) <->text150.htm#1039<->One(R) : Rng  -&gt; RngElt
5<->R ! a <->text150.htm#1040<->R ! a : Rng, RngElt -&gt; RngElt
5<->Random(R) <->text150.htm#1041<->Random(R) : Rng -&gt; RngElt
5<->Representative(R) <->text150.htm#1042<->Representative(R) : Rng -&gt; RngElt
3<->creation-element :<->text150.htm#1037<->creation-element :: Creation of Elements (INTRODUCTION TO RINGS [BASIC RINGS])
3<->arithmetic :<->text150.htm#1043<->arithmetic :: Arithmetic Operations (INTRODUCTION TO RINGS [BASIC RINGS])
5<->+ a <->text150.htm#1044<->+ a : RngElt -&gt; RngElt
5<->- a <->text150.htm#1045<->- a : RngElt -&gt; RngElt
5<->a + b <->text150.htm#1046<->a + b : RngElt, RngElt -&gt; RngElt
5<->a - b <->text150.htm#1047<->a - b : RngElt, RngElt -&gt; RngElt
5<->a * b <->text150.htm#1048<->a * b : RngElt, RngElt -&gt; RngElt
5<->a ^ k <->text150.htm#1049<->a ^ k : RngElt, RngIntElt -&gt; RngElt
5<->a ^ -k <->text150.htm#1050<->a ^ -k : RngElt, RngIntElt -&gt; RngElt
5<->a / b <->text150.htm#1051<->a / b : RngElt, RngElt -&gt; RngElt
5<->a +:= b <->text150.htm#1052<->a +:= b : RngElt, RngElt -&gt; RngElt
5<->a -:= b <->text150.htm#1053<->a -:= b : RngElt, RngElt -&gt; RngElt
5<->a *:= b <->text150.htm#1054<->a *:= b : RngElt, RngElt -&gt; RngElt
5<->a /:= b <->text150.htm#1055<->a /:= b : RngElt, RngElt -&gt; RngElt
5<->a ^:= k <->text150.htm#1056<->a ^:= k : RngElt, RngIntElt -&gt; RngElt
3<->arithmetic :<->text150.htm#1043<->arithmetic :: Arithmetic Operations (INTRODUCTION TO RINGS [BASIC RINGS])
3<->Boolean :<->text150.htm#1057<->Boolean :: Equality and Membership (INTRODUCTION TO RINGS [BASIC RINGS])
5<->a eq b <->text150.htm#1058<->a eq b : RngElt, RngElt -&gt; BoolElt
5<->a ne b <->text150.htm#1059<->a ne b : RngElt, RngElt -&gt; BoolElt
5<->R eq S <->text150.htm#1060<->R eq S : Rng, Rng -&gt; BoolElt
5<->R ne S <->text150.htm#1061<->R ne S : Rng, Rng -&gt; BoolElt
5<->a in R <->text150.htm#1062<->a in R : RngElt, Rng -&gt; BoolElt
5<->a notin R <->text150.htm#1063<->a notin R : RngElt, Rng -&gt; BoolElt
3<->Boolean :<->text150.htm#1057<->Boolean :: Equality and Membership (INTRODUCTION TO RINGS [BASIC RINGS])
3<->element-Boolean :<->text150.htm#1064<->element-Boolean :: Predicates on Ring Elements (INTRODUCTION TO RINGS [BASIC RINGS])
5<->IsZero(a) <->text150.htm#1065<->IsZero(a) : RngElt -&gt; BoolElt
5<->IsOne(a) <->text150.htm#1066<->IsOne(a) : RngElt -&gt; BoolElt
5<->IsMinusOne(a) <->text150.htm#1067<->IsMinusOne(a) : RngElt -&gt; BoolElt
5<->IsUnit(a) <->text150.htm#1068<->IsUnit(a) : RngElt -&gt; BoolElt
5<->IsIdempotent(x) <->text150.htm#1069<->IsIdempotent(x) : RngElt -&gt; BoolElt
5<->IsNilpotent(x) <->text150.htm#1070<->IsNilpotent(x) : RngElt -&gt; BoolElt
5<->IsZeroDivisor(x) <->text150.htm#1071<->IsZeroDivisor(x) : RngElt -&gt; BoolElt
5<->IsIrreducible(x) <->text150.htm#1072<->IsIrreducible(x) : RngElt -&gt; BoolElt
5<->IsPrime(x) <->text150.htm#1073<->IsPrime(x) : RngElt -&gt; BoolElt
3<->element-Boolean :<->text150.htm#1064<->element-Boolean :: Predicates on Ring Elements (INTRODUCTION TO RINGS [BASIC RINGS])
3<->comparison :<->text150.htm#1074<->comparison :: Comparison of Ring Elements (INTRODUCTION TO RINGS [BASIC RINGS])
5<->a gt b <->text150.htm#1075<->a gt b : RngElt, RngElt -&gt; BoolElt
5<->a ge b <->text150.htm#1076<->a ge b : RngElt, RngElt -&gt; BoolElt
5<->a lt b <->text150.htm#1077<->a lt b : RngElt, RngElt -&gt; BoolElt
5<->a le b <->text150.htm#1078<->a le b : RngElt, RngElt -&gt; BoolElt
5<->Maximum(a, b) <->text150.htm#1079<->Maximum(a, b) : RngElt, RngElt -&gt; RngElt
5<->Maximum(Q) <->text150.htm#1080<->Maximum(Q) : [RngIntElt] -&gt; RngElt
5<->Minimum(a, b) <->text150.htm#1081<->Minimum(a, b) : RngElt, RngElt -&gt; RngElt
5<->Minimum(Q) <->text150.htm#1082<->Minimum(Q) : [RngIntElt] -&gt; RngElt
3<->comparison :<->text150.htm#1074<->comparison :: Comparison of Ring Elements (INTRODUCTION TO RINGS [BASIC RINGS])
3<->element :<->text150.htm<->element :: Generic Element Functions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->ideal-quotient :<->text151.htm<->ideal-quotient :: Ideals and Quotient Rings (INTRODUCTION TO RINGS [BASIC RINGS])
3<->creation :<->text151.htm#1084<->creation :: Defining Ideals and Quotient Rings (INTRODUCTION TO RINGS [BASIC RINGS])
5<->ideal< R | a1, ..., ar > <->text151.htm#1085<->ideal&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : Rng, RngElt, ..., RngElt -&gt; RngIdl
5<->quo< R | ar, ..., ar > <->text151.htm#1086<->quo&lt; R | a<sub>r</sub>, ..., a<sub>r</sub> &gt; : Rng, RngElt, ..., RngElt -&gt; Rng
5<->R / I <->text151.htm#1087<->R / I : Rng, RngIdl -&gt; Rng
5<->PowerIdeal(R) <->text151.htm#1088<->PowerIdeal(R) : Rng -&gt; PowIdl
3<->creation :<->text151.htm#1084<->creation :: Defining Ideals and Quotient Rings (INTRODUCTION TO RINGS [BASIC RINGS])
3<->arithmetic :<->text151.htm#1089<->arithmetic :: Arithmetic Operations on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])
5<->I + J <->text151.htm#1090<->I + J : RngIdl, RngIdl -&gt; RngIdl
5<->I * J <->text151.htm#1091<->I * J : RngIdl, RngIdl -&gt; RngIdl
5<->I meet J <->text151.htm#1092<->I meet J : RngIdl, RngIdl -&gt; RngIdl
3<->arithmetic :<->text151.htm#1089<->arithmetic :: Arithmetic Operations on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])
3<->Boolean Operators on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])<->text151.htm#1093<->Boolean Operators on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])
5<->a in I <->text151.htm#1094<->a in I : RngElt, RngIdl -&gt; BoolElt
5<->a notin I <->text151.htm#1095<->a notin I : RngElt, RngIdl -&gt; BoolElt
5<->I eq J <->text151.htm#1096<->I eq J : RngIdl, RngIdl -&gt; BoolElt
5<->I ne J <->text151.htm#1097<->I ne J : RngIdl, RngIdl -&gt; BoolElt
5<->I subset J <->text151.htm#1098<->I subset J : RngIdl, RngIdl -&gt; BoolElt
5<->I notsubset J <->text151.htm#1099<->I notsubset J : RngIdl, RngIdl -&gt; BoolElt
3<->Boolean Operators on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])<->text151.htm#1093<->Boolean Operators on Ideals (INTRODUCTION TO RINGS [BASIC RINGS])
3<->ideal-quotient :<->text151.htm<->ideal-quotient :: Ideals and Quotient Rings (INTRODUCTION TO RINGS [BASIC RINGS])
3<->creation-other :<->text152.htm<->creation-other :: Other Ring Constructions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->residue-field :<->text152.htm#1101<->residue-field :: Residue Class Fields (INTRODUCTION TO RINGS [BASIC RINGS])
5<->ResidueClassField(I) <->text152.htm#1102<->ResidueClassField(I) : Rng -&gt; Fld, Map
3<->residue-field :<->text152.htm#1101<->residue-field :: Residue Class Fields (INTRODUCTION TO RINGS [BASIC RINGS])
3<->localization :<->text152.htm#1103<->localization :: Localization (INTRODUCTION TO RINGS [BASIC RINGS])
5<->loc< R | a1, ..., ar > <->text152.htm#1104<->loc&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : Rng, RngElt, ..., RngElt -&gt; Rng, Map
5<->Localization(R, P) <->text152.htm#1105<->Localization(R, P) : Rng, Rng -&gt; Rng, Map
3<->localization :<->text152.htm#1103<->localization :: Localization (INTRODUCTION TO RINGS [BASIC RINGS])
3<->completion :<->text152.htm#1106<->completion :: Completion (INTRODUCTION TO RINGS [BASIC RINGS])
5<->comp< R | a1, ..., ar > <->text152.htm#1107<->comp&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : Rng, RngElt, ..., RngElt -&gt; Rng, Map
5<->Completion(R, P) <->text152.htm#1108<->Completion(R, P) : Rng, Rng -&gt; Rng, Map
3<->completion :<->text152.htm#1106<->completion :: Completion (INTRODUCTION TO RINGS [BASIC RINGS])
3<->transcendental-extension :<->text152.htm#1109<->transcendental-extension :: Transcendental Extension (INTRODUCTION TO RINGS [BASIC RINGS])
5<->ext< R | > <->text152.htm#1110<->ext&lt; R | &gt; : Rng -&gt; RngUPol
5<->ext< R, n | > <->text152.htm#1111<->ext&lt; R, n | &gt; : Rng, RngIntElt -&gt; RngMPol
3<->transcendental-extension :<->text152.htm#1109<->transcendental-extension :: Transcendental Extension (INTRODUCTION TO RINGS [BASIC RINGS])
3<->creation-other :<->text152.htm<->creation-other :: Other Ring Constructions (INTRODUCTION TO RINGS [BASIC RINGS])
3<->detail :<->text145.htm<->detail :: INTRODUCTION TO RINGS [BASIC RINGS]
3<->integer :<->text155.htm<->integer :: RING OF INTEGERS
3<->introduction :<->text156.htm<->introduction :: Introduction (RING OF INTEGERS)
3<->representation :<->text156.htm#1116<->representation :: Representation (RING OF INTEGERS)
3<->coercion :<->text156.htm#1117<->coercion :: Coercion (RING OF INTEGERS)
3<->homomorphism :<->text156.htm#1118<->homomorphism :: Homomorphisms (RING OF INTEGERS)
5<->hom< Z -> R | > <->text156.htm#1119<->hom&lt; Z -&gt; R | &gt; : RngInt, Rng -&gt; Map
4<->RngInt_hom (Example H18E1)<->text156.htm#1120<->RngInt_hom (Example H18E1)
4<->Example-hom :<->text156.htm#1120<->Example-hom :: RngInt_hom (Example H18E1)
3<->homomorphism :<->text156.htm#1118<->homomorphism :: Homomorphisms (RING OF INTEGERS)
3<->introduction :<->text156.htm<->introduction :: Introduction (RING OF INTEGERS)
3<->creation :<->text157.htm<->creation :: Creation Functions (RING OF INTEGERS)
3<->structure :<->text157.htm#1122<->structure :: Creation of Structures (RING OF INTEGERS)
5<->Integers :: IntegerRing() <->text157.htm#1123<->Integers :: IntegerRing() : -&gt; RngInt
5<->RingOfIntegers :: IntegerRing() <->text157.htm#1123<->RingOfIntegers :: IntegerRing() : -&gt; RngInt
5<->IntegerRing(Q) <->text157.htm#1123<->IntegerRing(Q) : FldRat -> RngInt
5<->Integers(Q) : FldRat -> RngInt :: IntegerRing() <->text157.htm#1123<->Integers(Q) : FldRat -> RngInt :: IntegerRing() : -&gt; RngInt
5<->RingOfIntegers(Q) : FldRat -> RngInt :: IntegerRing() <->text157.htm#1123<->RingOfIntegers(Q) : FldRat -> RngInt :: IntegerRing() : -&gt; RngInt
5<->IntegerRing() <->text157.htm#1123<->IntegerRing() : -&gt; RngInt
3<->structure :<->text157.htm#1122<->structure :: Creation of Structures (RING OF INTEGERS)
3<->element :<->text157.htm#1124<->element :: Creation of Elements (RING OF INTEGERS)
5<->integer-literal :<->text157.htm#1125<->integer-literal :: a<sub>1</sub>a<sub>2</sub>...a<sub>r</sub>
5<->integer-literal-hexadecimal :<->text157.htm#1126<->integer-literal-hexadecimal :: 0xa<sub>1</sub>a<sub>2</sub>...a<sub>r</sub>
5<->elt< Z | a1a2...ar > <->text157.htm#1127<->elt&lt; Z | a<sub>1</sub>a<sub>2</sub>...a<sub>r</sub> &gt; : RngInt, RngIntElt -&gt; RngIntElt
5<->elt< Z | 0xa1a2...ar > <->text157.htm#1128<->elt&lt; Z | 0xa<sub>1</sub>a<sub>2</sub>...a<sub>r</sub> &gt; : RngInt, RngIntElt -&gt; RngIntElt
5<->Z ! [a] <->text157.htm#1129<->Z ! [a] : RngInt, [RngElt] -> RngIntElt
5<->Z ! a <->text157.htm#1129<->Z ! a : RngInt, RngElt -&gt; RngIntElt
4<->RngInt_Integers (Example H18E2)<->text157.htm#1130<->RngInt_Integers (Example H18E2)
4<->Example-Integers :<->text157.htm#1130<->Example-Integers :: RngInt_Integers (Example H18E2)
3<->element :<->text157.htm#1124<->element :: Creation of Elements (RING OF INTEGERS)
3<->printing :<->text157.htm#1131<->printing :: Printing of Elements (RING OF INTEGERS)
4<->RngInt_Printing (Example H18E3)<->text157.htm#1132<->RngInt_Printing (Example H18E3)
4<->Example-Printing :<->text157.htm#1132<->Example-Printing :: RngInt_Printing (Example H18E3)
3<->printing :<->text157.htm#1131<->printing :: Printing of Elements (RING OF INTEGERS)
3<->conversion :<->text157.htm#1133<->conversion :: Element Conversions (RING OF INTEGERS)
5<->FactorisationToInteger :: FactorizationToInteger(s) <->text157.htm#1134<->FactorisationToInteger :: FactorizationToInteger(s) : [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; RngIntElt
5<->Facint :: FactorizationToInteger(s) <->text157.htm#1134<->Facint :: FactorizationToInteger(s) : [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; RngIntElt
5<->FactorizationToInteger(s) <->text157.htm#1134<->FactorizationToInteger(s) : [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; RngIntElt
5<->Intseq :: IntegerToSequence(n, b) <->text157.htm#1135<->Intseq :: IntegerToSequence(n, b) : RngIntElt, RngIntElt -&gt; [RngIntElt]
5<->IntegerToSequence(n, b) <->text157.htm#1135<->IntegerToSequence(n, b) : RngIntElt, RngIntElt -&gt; [RngIntElt]
5<->Seqint :: SequenceToInteger(s, b) <->text157.htm#1136<->Seqint :: SequenceToInteger(s, b) : [RngIntElt], RngIntElt -&gt; RngIntElt
5<->SequenceToInteger(s, b) <->text157.htm#1136<->SequenceToInteger(s, b) : [RngIntElt], RngIntElt -&gt; RngIntElt
5<->IntegerToString(n) <->text157.htm#1137<->IntegerToString(n) : RngIntElt -&gt; ModStgElt
5<->IntegerToString(n, b) <->text157.htm#1138<->IntegerToString(n, b) : RngIntElt, RngIntElt -&gt; ModStgElt
5<->Eltseq(n) <->text157.htm#1139<->Eltseq(n) : RngIntElt -&gt; [RngIntElt]
5<->Denominator(n) <->text157.htm#1140<->Denominator(n) : RngIntElt -&gt; RngIntElt
3<->conversion :<->text157.htm#1133<->conversion :: Element Conversions (RING OF INTEGERS)
3<->creation :<->text157.htm<->creation :: Creation Functions (RING OF INTEGERS)
3<->operation :<->text158.htm<->operation :: Structure Operations (RING OF INTEGERS)
3<->related :<->text158.htm#1142<->related :: Related Structures (RING OF INTEGERS)
5<->AdditiveGroup(Z) <->text158.htm#1143<->AdditiveGroup(Z) : RngInt -&gt; GrpAb, Map
5<->UnitGroup :: MultiplicativeGroup(Z) <->text158.htm#1144<->UnitGroup :: MultiplicativeGroup(Z) : RngInt -&gt; GrpAb, Map
5<->MultiplicativeGroup(Z) <->text158.htm#1144<->MultiplicativeGroup(Z) : RngInt -&gt; GrpAb, Map
5<->ClassGroup(Z) <->text158.htm#1145<->ClassGroup(Z) : RngInt -&gt; GrpAb, Map
5<->FieldOfFractions(Z) <->text158.htm#1146<->FieldOfFractions(Z) : RngInt -&gt; FldRat
5<->sub< Z | n > <->text158.htm#1147<->sub&lt; Z | n &gt; : RngInt, RngIntElt -&gt; RngInt
3<->related :<->text158.htm#1142<->related :: Related Structures (RING OF INTEGERS)
3<->invariant :<->text158.htm#1148<->invariant :: Numerical Invariants (RING OF INTEGERS)
5<->Signature(Z) <->text158.htm#1149<->Signature(Z) : RngInt -&gt; RngIntElt, RngIntElt
3<->invariant :<->text158.htm#1148<->invariant :: Numerical Invariants (RING OF INTEGERS)
3<->Ring Predicates and Booleans (RING OF INTEGERS)<->text158.htm#1150<->Ring Predicates and Booleans (RING OF INTEGERS)
3<->operation :<->text158.htm<->operation :: Structure Operations (RING OF INTEGERS)
3<->operation-element :<->text159.htm<->operation-element :: Element Operations (RING OF INTEGERS)
3<->arithmetic :<->text159.htm#1152<->arithmetic :: Arithmetic Operations (RING OF INTEGERS)
5<->n div m <->text159.htm#1153<->n div m : RngIntElt, RngIntElt -&gt; RngIntElt
5<->n mod m <->text159.htm#1154<->n mod m : RngIntElt, RngIntElt -&gt; RngIntElt
5<->ExactQuotient(n, d) <->text159.htm#1155<->ExactQuotient(n, d) : RngIntElt, RngIntElt -&gt; RngIntElt
3<->arithmetic :<->text159.htm#1152<->arithmetic :: Arithmetic Operations (RING OF INTEGERS)
3<->bit :<->text159.htm#1156<->bit :: Bit Operations (RING OF INTEGERS)
5<->ShiftLeft(n, b) <->text159.htm#1157<->ShiftLeft(n, b) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->ShiftRight(n, b) <->text159.htm#1158<->ShiftRight(n, b) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->ModByPowerOf2(n, b) <->text159.htm#1159<->ModByPowerOf2(n, b) : RngIntElt, RngIntElt -&gt; RngIntElt
3<->bit :<->text159.htm#1156<->bit :: Bit Operations (RING OF INTEGERS)
3<->bitwise :<->text159.htm#1160<->bitwise :: Bitwise Operations (RING OF INTEGERS)
5<->BitwiseNot(x) <->text159.htm#1161<->BitwiseNot(x) : RngIntElt -&gt; RngIntElt
5<->BitwiseAnd(x, y) <->text159.htm#1162<->BitwiseAnd(x, y) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->BitwiseOr(x, y) <->text159.htm#1163<->BitwiseOr(x, y) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->BitwiseXor(x, y) <->text159.htm#1164<->BitwiseXor(x, y) : RngIntElt, RngIntElt -&gt; RngIntElt
3<->bitwise :<->text159.htm#1160<->bitwise :: Bitwise Operations (RING OF INTEGERS)
3<->Boolean :<->text159.htm#1165<->Boolean :: Equality and Membership (RING OF INTEGERS)
3<->generic :<->text159.htm#1166<->generic :: Parent and Category (RING OF INTEGERS)
3<->element-Boolean :<->text159.htm#1167<->element-Boolean :: Predicates on Ring Elements (RING OF INTEGERS)
5<->IsEven(n) <->text159.htm#1168<->IsEven(n) : RngIntElt -&gt; BoolElt
5<->IsOdd(n) <->text159.htm#1169<->IsOdd(n) : RngIntElt -&gt; BoolElt
5<->IsDivisibleBy(n, d) <->text159.htm#1170<->IsDivisibleBy(n, d) : RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->IsSquare(n) <->text159.htm#1171<->IsSquare(n) : RngIntElt -&gt; BoolElt, RngIntElt
5<->IsSquarefree(n) <->text159.htm#1172<->IsSquarefree(n) : RngIntElt -&gt; BoolElt
5<->IsPower(n) <->text159.htm#1173<->IsPower(n) : RngIntElt -&gt; BoolElt
5<->IsPower(n, k) <->text159.htm#1174<->IsPower(n, k) : RngIntElt, RngIntElt -&gt; BoolElt
5<->IsPrime(n) <->text159.htm#1175<->IsPrime(n) : RngIntElt -&gt; BoolElt
4<->RngInt_IsPrime (Example H18E4)<->text159.htm#1176<->RngInt_IsPrime (Example H18E4)
4<->Example-IsPrime :<->text159.htm#1176<->Example-IsPrime :: RngInt_IsPrime (Example H18E4)
5<->IsIntegral(n) <->text159.htm#1177<->IsIntegral(n) : RngIntElt -&gt; BoolElt
5<->IsSinglePrecision(n) <->text159.htm#1178<->IsSinglePrecision(n) : RngIntElt -&gt; BoolElt
3<->element-Boolean :<->text159.htm#1167<->element-Boolean :: Predicates on Ring Elements (RING OF INTEGERS)
3<->comparison :<->text159.htm#1179<->comparison :: Comparison of Ring Elements (RING OF INTEGERS)
3<->conjugate-norm-trace :<->text159.htm#1180<->conjugate-norm-trace :: Conjugates, Norm and Trace (RING OF INTEGERS)
5<->ComplexConjugate(n) <->text159.htm#1181<->ComplexConjugate(n) : RngIntElt -&gt; RngIntElt
5<->Conjugate(n) <->text159.htm#1182<->Conjugate(n) : RngIntElt -&gt; RngIntElt
5<->Norm(n) <->text159.htm#1183<->Norm(n) : RngIntElt -&gt; RngIntElt
5<->EuclideanNorm(n) <->text159.htm#1184<->EuclideanNorm(n) : RngIntElt -&gt; RngIntElt
5<->Trace(n) <->text159.htm#1185<->Trace(n) : RngIntElt -&gt; RngIntElt
5<->MinimalPolynomial(n) <->text159.htm#1186<->MinimalPolynomial(n) : RngIntElt -&gt; RngUPolElt
3<->conjugate-norm-trace :<->text159.htm#1180<->conjugate-norm-trace :: Conjugates, Norm and Trace (RING OF INTEGERS)
3<->simple :<->text159.htm#1187<->simple :: Other Elementary Functions (RING OF INTEGERS)
5<->AbsoluteValue(n) <->text159.htm#1188<->AbsoluteValue(n) : RngIntElt -&gt; RngIntElt
5<->Ilog2(n) <->text159.htm#1189<->Ilog2(n) : RngIntElt -&gt; RngIntElt
5<->Ilog(b, n) <->text159.htm#1190<->Ilog(b, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Quotrem(m, n) <->text159.htm#1191<->Quotrem(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->Valuation(x, p) <->text159.htm#1192<->Valuation(x, p) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->Iroot(a, n) <->text159.htm#1193<->Iroot(a, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Sign(n) <->text159.htm#1194<->Sign(n) : RngIntElt -&gt; RngIntElt
5<->Ceiling(n) <->text159.htm#1195<->Ceiling(n) : RngIntElt -&gt; RngIntElt
5<->Floor(n) <->text159.htm#1196<->Floor(n) : RngIntElt -&gt; RngIntElt
5<->Round(n) <->text159.htm#1197<->Round(n) : RngIntElt -&gt; RngIntElt
5<->Truncate(n) <->text159.htm#1198<->Truncate(n) : RngIntElt -&gt; RngIntElt
5<->SquarefreeFactorization(n) <->text159.htm#1199<->SquarefreeFactorization(n) : RngIntElt -&gt; RngIntElt, RngIntElt
5<->Isqrt(n) <->text159.htm#1200<->Isqrt(n) : RngIntElt -&gt; RngIntElt
3<->simple :<->text159.htm#1187<->simple :: Other Elementary Functions (RING OF INTEGERS)
3<->operation-element :<->text159.htm<->operation-element :: Element Operations (RING OF INTEGERS)
3<->random :<->text160.htm<->random :: Random Numbers (RING OF INTEGERS)
5<->Random(a, b) <->text160.htm#1202<->Random(a, b) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Random(b) <->text160.htm#1203<->Random(b) : RngIntElt -&gt; RngIntElt
5<->RandomBits(n) <->text160.htm#1204<->RandomBits(n) : RngIntElt -&gt; RngIntElt
5<->RandomPrime(n: parameter) <->text160.htm#1205<->RandomPrime(n: parameter) : RngIntElt -&gt; RngIntElt
5<->RandomPrime(n, a, b, x: parameter) <->text160.htm#1206<->RandomPrime(n, a, b, x: parameter) :RngIntElt, RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->RandomConsecutiveBits(n, a, b) <->text160.htm#1207<->RandomConsecutiveBits(n, a, b) : RngIntElt, RngIntElt -&gt; RngIntElt
3<->random :<->text160.htm<->random :: Random Numbers (RING OF INTEGERS)
3<->gcd-lcm :<->text161.htm<->gcd-lcm :: GCD and LCM (RING OF INTEGERS)
5<->Gcd :: GreatestCommonDivisor(m, n) <->text161.htm#1209<->Gcd :: GreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->GCD :: GreatestCommonDivisor(m, n) <->text161.htm#1209<->GCD :: GreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->GreatestCommonDivisor(m, n) <->text161.htm#1209<->GreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Gcd :: GreatestCommonDivisor(s) <->text161.htm#1210<->Gcd :: GreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt
5<->GCD :: GreatestCommonDivisor(s) <->text161.htm#1210<->GCD :: GreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt
5<->GreatestCommonDivisor(s) <->text161.htm#1210<->GreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt
5<->Xgcd :: ExtendedGreatestCommonDivisor(m, n) <->text161.htm#1211<->Xgcd :: ExtendedGreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt
5<->XGCD :: ExtendedGreatestCommonDivisor(m, n) <->text161.htm#1211<->XGCD :: ExtendedGreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt
5<->ExtendedGreatestCommonDivisor(m, n) <->text161.htm#1211<->ExtendedGreatestCommonDivisor(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt, RngIntElt
5<->Xgcd :: ExtendedGreatestCommonDivisor(s) <->text161.htm#1212<->Xgcd :: ExtendedGreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]
5<->XGCD :: ExtendedGreatestCommonDivisor(s) <->text161.htm#1212<->XGCD :: ExtendedGreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]
5<->ExtendedGreatestCommonDivisor(s) <->text161.htm#1212<->ExtendedGreatestCommonDivisor(s) : [RngIntElt] -&gt; RngIntElt, [RngIntElt]
5<->Lcm :: LeastCommonMultiple(m, n) <->text161.htm#1213<->Lcm :: LeastCommonMultiple(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->LCM :: LeastCommonMultiple(m, n) <->text161.htm#1213<->LCM :: LeastCommonMultiple(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->LeastCommonMultiple(m, n) <->text161.htm#1213<->LeastCommonMultiple(m, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Lcm :: LeastCommonMultiple(s) <->text161.htm#1214<->Lcm :: LeastCommonMultiple(s) : [RngIntElt] -&gt; RngIntElt
5<->LCM :: LeastCommonMultiple(s) <->text161.htm#1214<->LCM :: LeastCommonMultiple(s) : [RngIntElt] -&gt; RngIntElt
5<->LeastCommonMultiple(s) <->text161.htm#1214<->LeastCommonMultiple(s) : [RngIntElt] -&gt; RngIntElt
3<->gcd-lcm :<->text161.htm<->gcd-lcm :: GCD and LCM (RING OF INTEGERS)
3<->arithmetic-function :<->text162.htm<->arithmetic-function :: Arithmetic Functions (RING OF INTEGERS)
5<->CarmichaelLambda(Q) <->text162.htm#1216<->CarmichaelLambda(Q) : RngIntEltFact -> RngIntElt
5<->CarmichaelLambda(Q) <->text162.htm#1216<->CarmichaelLambda(Q) : [Tup] -> RngIntElt
5<->CarmichaelLambda(n) <->text162.htm#1216<->CarmichaelLambda(n) : RngIntElt -&gt; RngIntElt
5<->DickmanRho(u) <->text162.htm#1217<->DickmanRho(u) : FldReElt -&gt; FldReElt
5<->FactoredCarmichaelLambda(Q) <->text162.htm#1218<->FactoredCarmichaelLambda(Q) : RngIntEltFact -> RngIntEltFact
5<->FactoredCarmichaelLambda(Q) <->text162.htm#1218<->FactoredCarmichaelLambda(Q) : [Tup] -> RngIntEltFact
5<->FactoredCarmichaelLambda(n) <->text162.htm#1218<->FactoredCarmichaelLambda(n) : RngIntElt -&gt; RngIntEltFact
5<->DivisorSigma(i, Q) <->text162.htm#1219<->DivisorSigma(i, Q) : RngIntElt, RngIntEltFact -> RngIntElt
5<->DivisorSigma(i, n) <->text162.htm#1219<->DivisorSigma(i, n) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->NumberOfDivisors(Q) <->text162.htm#1220<->NumberOfDivisors(Q) : RngIntEltFact -> RngIntElt
5<->NumberOfDivisors(n) <->text162.htm#1220<->NumberOfDivisors(n) : RngIntElt -&gt; RngIntElt
5<->SumOfDivisors(Q) <->text162.htm#1221<->SumOfDivisors(Q) : RngIntEltFact -> RngIntElt
5<->SumOfDivisors(n) <->text162.htm#1221<->SumOfDivisors(n) : RngIntElt -&gt; RngIntElt
5<->EulerPhi(Q) <->text162.htm#1222<->EulerPhi(Q) : RngIntEltFact -> RngIntElt
5<->EulerPhi(Q) <->text162.htm#1222<->EulerPhi(Q) : [Tup] -> RngIntElt
5<->EulerPhi(n) <->text162.htm#1222<->EulerPhi(n) : RngIntElt -&gt; RngIntElt
5<->FactoredEulerPhi(Q) <->text162.htm#1223<->FactoredEulerPhi(Q) : RngIntEltFact -> RngIntEltFact
5<->FactoredEulerPhi(Q) <->text162.htm#1223<->FactoredEulerPhi(Q) : [Tup] -> RngIntEltFact
5<->FactoredEulerPhi(n) <->text162.htm#1223<->FactoredEulerPhi(n) : RngIntElt -&gt; RngIntEltFact
5<->EulerPhiInverse(Q) <->text162.htm#1224<->EulerPhiInverse(Q) : RngIntEltFact -> RngIntElt
5<->EulerPhiInverse(m) <->text162.htm#1224<->EulerPhiInverse(m) : RngIntElt -&gt; RngIntElt
5<->FactoredEulerPhiInverse(Q) <->text162.htm#1225<->FactoredEulerPhiInverse(Q) : RngIntEltFact -> RngIntEltFact
5<->FactoredEulerPhiInverse(n) <->text162.htm#1225<->FactoredEulerPhiInverse(n) : RngIntElt -&gt; RngIntEltFact
5<->LegendreSymbol(n, m) <->text162.htm#1226<->LegendreSymbol(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->JacobiSymbol(n, m) <->text162.htm#1227<->JacobiSymbol(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->KroneckerSymbol(n, m) <->text162.htm#1228<->KroneckerSymbol(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->MoebiusMu(Q) <->text162.htm#1229<->MoebiusMu(Q) : RngIntEltFact -> RngIntElt
5<->MoebiusMu(n) <->text162.htm#1229<->MoebiusMu(n) : RngIntElt -&gt; RngIntElt
4<->RngInt_Amicable (Example H18E5)<->text162.htm#1230<->RngInt_Amicable (Example H18E5)
4<->Example-Amicable :<->text162.htm#1230<->Example-Amicable :: RngInt_Amicable (Example H18E5)
3<->arithmetic-function :<->text162.htm<->arithmetic-function :: Arithmetic Functions (RING OF INTEGERS)
3<->combinatorics :<->text163.htm<->combinatorics :: Combinatorial Functions (RING OF INTEGERS)
5<->Binomial(n, r) <->text163.htm#1232<->Binomial(n, r) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Multinomial(n, [r1, ... rn]) <->text163.htm#1233<->Multinomial(n, [r<sub>1</sub>, ... r<sub>n</sub>]) : RngIntElt, [RngIntElt] -&gt; RngIntElt
5<->Factorial(n) <->text163.htm#1234<->Factorial(n) : RngIntElt -&gt; RngIntElt
5<->IsFactorial(n) <->text163.htm#1235<->IsFactorial(n) : RngIntElt -&gt; BoolElt, RngIntElt
5<->Partitions(n) <->text163.htm#1236<->Partitions(n) : RngIntElt -&gt; [ [ RngIntElt ] ]
5<->NumberOfPartitions(n) <->text163.htm#1237<->NumberOfPartitions(n) : RngIntElt -&gt; RngIntElt
5<->RestrictedPartitions(n, Q) <->text163.htm#1238<->RestrictedPartitions(n, Q) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]
5<->RestrictedPartitions(n, k, M) <->text163.htm#1239<->RestrictedPartitions(n, k, M) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]
5<->StirlingFirst(n, k) <->text163.htm#1240<->StirlingFirst(n, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->StirlingSecond(n, k) <->text163.htm#1241<->StirlingSecond(n, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Bell(n) <->text163.htm#1242<->Bell(n) : RngIntElt -&gt; RngIntElt
5<->Fibonacci(n) <->text163.htm#1243<->Fibonacci(n) : RngIntElt -&gt; RngIntElt
5<->Lucas(n) <->text163.htm#1244<->Lucas(n) : RngIntElt -&gt; RngIntElt
5<->GeneralizedFibonacciNumber(g0, g1, n) <->text163.htm#1245<->GeneralizedFibonacciNumber(g0, g1, n) : RngIntElt, RngIntElt, RngIntElt							-&gt; RngIntElt
3<->combinatorics :<->text163.htm<->combinatorics :: Combinatorial Functions (RING OF INTEGERS)
3<->prime :<->text164.htm<->prime :: Primes and Primality Testing (RING OF INTEGERS)
3<->primality :<->text164.htm#1247<->primality :: Primality (RING OF INTEGERS)
5<->IsPrime(n\col\ \parameter) <->text164.htm#1248<->IsPrime(n\col\ \parameter) : RngIntElt -> BoolElt
5<->IsPrime(n) <->text164.htm#1248<->IsPrime(n) : RngIntElt -&gt; BoolElt
5<->SetVerbose("ECPP", v) <->text164.htm#1249<->SetVerbose("ECPP", v) : MonStgElt, Elt -&gt;
5<->IsPrimeCertificate :: PrimalityCertificate(n) <->text164.htm#1250<->IsPrimeCertificate :: PrimalityCertificate(n) : RngIntElt -&gt; List
5<->PrimalityCertificate(n) <->text164.htm#1250<->PrimalityCertificate(n) : RngIntElt -&gt; List
5<->IsProbablyPrime :: IsProbablePrime(n: parameter) <->text164.htm#1251<->IsProbablyPrime :: IsProbablePrime(n: parameter) : RngIntElt -&gt; BoolElt
5<->IsProbablePrime(n: parameter) <->text164.htm#1251<->IsProbablePrime(n: parameter) : RngIntElt -&gt; BoolElt
5<->IsPrimePower(n) <->text164.htm#1252<->IsPrimePower(n) : RngIntElt -&gt; BoolElt, RngIntElt, RngIntElt
4<->RngInt_RepUnits (Example H18E6)<->text164.htm#1253<->RngInt_RepUnits (Example H18E6)
4<->Example-RepUnits :<->text164.htm#1253<->Example-RepUnits :: RngInt_RepUnits (Example H18E6)
3<->primality :<->text164.htm#1247<->primality :: Primality (RING OF INTEGERS)
3<->next-previous :<->text164.htm#1254<->next-previous :: Other Functions Relating to  Primes (RING OF INTEGERS)
5<->NextPrime(n\col\ \parameter) <->text164.htm#1255<->NextPrime(n\col\ \parameter) : RngIntElt -> RngIntElt
5<->NextPrime(n) <->text164.htm#1255<->NextPrime(n) : RngIntElt -&gt; RngIntElt
5<->PreviousPrime(n\col\ \parameter)  <->text164.htm#1256<->PreviousPrime(n\col\ \parameter)  : RngIntElt -> RngIntElt
5<->PreviousPrime(n) <->text164.htm#1256<->PreviousPrime(n) : RngIntElt -&gt; RngIntElt
5<->PrimesUpTo(B) <->text164.htm#1257<->PrimesUpTo(B) : RngIntElt -&gt; [RngIntElt]
5<->PrimesInInterval(b, e) <->text164.htm#1258<->PrimesInInterval(b, e) : RngIntElt, RngIntElt -&gt; [RngIntElt]
5<->NthPrime(n) <->text164.htm#1259<->NthPrime(n) : RngIntElt -&gt; RngIntElt
5<->RandomPrime(n: parameter) <->text164.htm#1260<->RandomPrime(n: parameter) : RngIntElt -&gt; RngIntElt
5<->RandomPrime(n, a, b, x: parameter) <->text164.htm#1261<->RandomPrime(n, a, b, x: parameter) :RngIntElt, RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->PrimeDivisors :: PrimeBasis(n) <->text164.htm#1262<->PrimeDivisors :: PrimeBasis(n) : RngIntElt -&gt; [RngIntElt]
5<->PrimeBasis(n) <->text164.htm#1262<->PrimeBasis(n) : RngIntElt -&gt; [RngIntElt]
3<->next-previous :<->text164.htm#1254<->next-previous :: Other Functions Relating to  Primes (RING OF INTEGERS)
3<->prime :<->text164.htm<->prime :: Primes and Primality Testing (RING OF INTEGERS)
3<->factor :<->text165.htm<->factor :: Factorization (RING OF INTEGERS)
3<->factorization-general :<->text165.htm#1264<->factorization-general :: General Factorization (RING OF INTEGERS)
5<->SetVerbose("Factorization", v) <->text165.htm#1265<->SetVerbose("Factorization", v) : MonStgElt, RngIntElt -&gt;
5<->Factorisation :: Factorization(n) <->text165.htm#1266<->Factorisation :: Factorization(n) : RngIntElt -&gt; RngIntEltFact, RngIntElt, SeqEnum
5<->Factorization(n\col\ \parameters) <->text165.htm#1266<->Factorization(n\col\ \parameters) : RngIntElt -> RngIntEltFact, RngIntElt, SeqEnum
5<->Factorisation(n\col\ \parameters) : RngIntElt -> RngIntEltFact, RngIntElt, SeqEnum :: Factorization(n) <->text165.htm#1266<->Factorisation(n\col\ \parameters) : RngIntElt -> RngIntEltFact, RngIntElt, SeqEnum :: Factorization(n) : RngIntElt -&gt; RngIntEltFact, RngIntElt, SeqEnum
5<->Factorization(n) <->text165.htm#1266<->Factorization(n) : RngIntElt -&gt; RngIntEltFact, RngIntElt, SeqEnum
3<->factorization-general :<->text165.htm#1264<->factorization-general :: General Factorization (RING OF INTEGERS)
3<->store :<->text165.htm#1267<->store :: Storing Potential Factors (RING OF INTEGERS)
5<->StoreFactor(S) <->text165.htm#1268<->StoreFactor(S) : [ RngIntElt ] -> 
5<->StoreFactor(n) <->text165.htm#1268<->StoreFactor(n) : RngIntElt -&gt;
5<->GetStoredFactors() <->text165.htm#1269<->GetStoredFactors() : -&gt; [ RngIntElt ]
5<->ClearStoredFactors() <->text165.htm#1270<->ClearStoredFactors() : -&gt;
3<->store :<->text165.htm#1267<->store :: Storing Potential Factors (RING OF INTEGERS)
3<->factorization-specific :<->text165.htm#1271<->factorization-specific :: Specific Factorization Algorithms (RING OF INTEGERS)
5<->SetVerbose("ECM", b) <->text165.htm#1272<->SetVerbose("ECM", b) : MonStgElt, Elt -> 
5<->SetVerbose("MPQS", b) <->text165.htm#1272<->SetVerbose("MPQS", b) : MonStgElt, Elt -> 
5<->SetVerbose("Cunningham", b) <->text165.htm#1272<->SetVerbose("Cunningham", b) : MonStgElt, BoolElt -&gt;
5<->Cunningham(b, k, c) <->text165.htm#1273<->Cunningham(b, k, c) : RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->AssertAttribute(RngInt, "CunninghamStorageLimit", l) <->text165.htm#1274<->AssertAttribute(RngInt, "CunninghamStorageLimit", l) : Cat, MonStgElt, RngIntElt -&gt;
5<->TrialDivision(n, B) <->text165.htm#1275<->TrialDivision(n, B) : RngIntElt, RngIntElt -> RngIntEltFact, [ RngIntElt ]
5<->TrialDivision(n) <->text165.htm#1275<->TrialDivision(n) : RngIntElt -&gt; RngIntEltFact, [ RngIntElt ]
5<->PollardRho(n, c, s, k) <->text165.htm#1276<->PollardRho(n, c, s, k) : RngIntElt, RngIntElt, RngIntElt, RngIntElt -> RngIntEltFact, [ RngIntElt ]
5<->PollardRho(n) <->text165.htm#1276<->PollardRho(n) : RngIntElt -&gt; RngIntEltFact, [ RngIntElt ]
5<->pMinus1(n, B1) <->text165.htm#1277<->pMinus1(n, B1) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->pPlus1(n, B1) <->text165.htm#1278<->pPlus1(n, B1) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->SQUFOF(n, k) <->text165.htm#1279<->SQUFOF(n, k) : RngIntElt, RngIntElt -> RngIntEltFact, [ RngIntElt ]
5<->SQUFOF(n) <->text165.htm#1279<->SQUFOF(n) : RngIntElt -&gt; RngIntEltFact, [ RngIntElt ]
5<->ECM(n, B1) <->text165.htm#1280<->ECM(n, B1) : RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->ECMSteps(n, L, U) <->text165.htm#1281<->ECMSteps(n, L, U) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->MPQS(n, D) <->text165.htm#1282<->MPQS(n, D) : RngIntElt, MonStgElt -> SeqEnum, RngIntElt
5<->MPQS(n) <->text165.htm#1282<->MPQS(n) : RngIntElt -&gt; RngIntEltFact, [ RngIntElt ]
3<->factorization-specific :<->text165.htm#1271<->factorization-specific :: Specific Factorization Algorithms (RING OF INTEGERS)
3<->factorization-related :<->text165.htm#1283<->factorization-related :: Factorization Related Functions (RING OF INTEGERS)
5<->ECMFactoredOrder :: ECMOrder(p, s) <->text165.htm#1284<->ECMFactoredOrder :: ECMOrder(p, s) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->ECMOrder(p, s) <->text165.htm#1284<->ECMOrder(p, s) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->PrimeDivisors :: PrimeBasis(n) <->text165.htm#1285<->PrimeDivisors :: PrimeBasis(n) : RngIntElt -&gt; [RngIntElt]
5<->PrimeBasis(n) <->text165.htm#1285<->PrimeBasis(n) : RngIntElt -&gt; [RngIntElt]
5<->Divisors(f) <->text165.htm#1286<->Divisors(f) : RngIntEltFact -> [ RngIntElt ]
5<->Divisors(n) <->text165.htm#1286<->Divisors(n) : RngIntElt -&gt; [ RngIntElt ]
5<->CoprimeBasis(S) <->text165.htm#1287<->CoprimeBasis(S) : \lbrace RngIntElt \rbrace -> [ RngIntElt ]
5<->CoprimeBasis(S) <->text165.htm#1287<->CoprimeBasis(S) : [ RngIntElt ] -&gt; [ RngIntElt ]
4<->RngInt_Perfect (Example H18E7)<->text165.htm#1288<->RngInt_Perfect (Example H18E7)
4<->Example-Perfect :<->text165.htm#1288<->Example-Perfect :: RngInt_Perfect (Example H18E7)
5<->PartialFactorization(S) <->text165.htm#1289<->PartialFactorization(S) : [ RngIntElt ] -&gt; [ RngIntEltFact ]
4<->RngInt_PartialFact (Example H18E8)<->text165.htm#1290<->RngInt_PartialFact (Example H18E8)
4<->Example-PartialFact :<->text165.htm#1290<->Example-PartialFact :: RngInt_PartialFact (Example H18E8)
3<->factorization-related :<->text165.htm#1283<->factorization-related :: Factorization Related Functions (RING OF INTEGERS)
3<->factor :<->text165.htm<->factor :: Factorization (RING OF INTEGERS)
3<->factorization-sequence :<->text166.htm<->factorization-sequence :: Factorization Sequences (RING OF INTEGERS)
3<->conversion :<->text166.htm#1292<->conversion :: Creation and Conversion (RING OF INTEGERS)
5<->FactorizationToInteger :: Facint(f) <->text166.htm#1293<->FactorizationToInteger :: Facint(f) : RngIntEltFact -&gt; RngIntElt
5<->Facint(f) <->text166.htm#1293<->Facint(f) : RngIntEltFact -&gt; RngIntElt
5<->SequenceToFactorization :: SeqFact(s) <->text166.htm#1294<->SequenceToFactorization :: SeqFact(s) : SeqEnum -&gt; RngIntEltFact
5<->SeqFact(s) <->text166.htm#1294<->SeqFact(s) : SeqEnum -&gt; RngIntEltFact
5<->ElementToSequence :: Eltseq(f) <->text166.htm#1295<->ElementToSequence :: Eltseq(f) : RngIntEltFact -&gt; SeqEnum
5<->Eltseq(f) <->text166.htm#1295<->Eltseq(f) : RngIntEltFact -&gt; SeqEnum
3<->conversion :<->text166.htm#1292<->conversion :: Creation and Conversion (RING OF INTEGERS)
3<->arithmetic :<->text166.htm#1296<->arithmetic :: Arithmetic (RING OF INTEGERS)
3<->divisor :<->text166.htm#1297<->divisor :: Divisors (RING OF INTEGERS)
3<->predicate :<->text166.htm#1298<->predicate :: Predicates (RING OF INTEGERS)
3<->factorization-sequence :<->text166.htm<->factorization-sequence :: Factorization Sequences (RING OF INTEGERS)
3<->modular :<->text167.htm<->modular :: Modular Arithmetic (RING OF INTEGERS)
3<->modular-arithmetic :<->text167.htm#1300<->modular-arithmetic :: Arithmetic Operations (RING OF INTEGERS)
5<->Modexp(n, k, m) <->text167.htm#1301<->Modexp(n, k, m) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->n mod m <->text167.htm#1302<->n mod m : RngIntElt, RngIntElt -&gt; RngIntElt
5<->InverseMod :: Modinv(n, m) <->text167.htm#1303<->InverseMod :: Modinv(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Modinv(n, m) <->text167.htm#1303<->Modinv(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Modsqrt(n, m) <->text167.htm#1304<->Modsqrt(n, m) : RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->Modorder(n, m) <->text167.htm#1305<->Modorder(n, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsPrimitive(n, m) <->text167.htm#1306<->IsPrimitive(n, m) : RngIntElt, RngIntElt -&gt; BoolElt
5<->PrimitiveRoot(m) <->text167.htm#1307<->PrimitiveRoot(m) : RngIntElt -&gt; RngIntElt
3<->modular-arithmetic :<->text167.htm#1300<->modular-arithmetic :: Arithmetic Operations (RING OF INTEGERS)
3<->equation :<->text167.htm#1308<->equation :: The Solution of Modular Equations (RING OF INTEGERS)
5<->Solution(a, b, m) <->text167.htm#1309<->Solution(a, b, m) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->CRT :: ChineseRemainderTheorem(X, N) <->text167.htm#1310<->CRT :: ChineseRemainderTheorem(X, N) : [RngIntElt], [RngIntElt] -&gt; RngIntElt
5<->ChineseRemainderTheorem(X, N) <->text167.htm#1310<->ChineseRemainderTheorem(X, N) : [RngIntElt], [RngIntElt] -&gt; RngIntElt
5<->Solution(A, B, N) <->text167.htm#1311<->Solution(A, B, N) : [RngIntElt], [RngIntElt],[RngIntElt] -&gt; RngIntElt
5<->NormEquation(d, m\col\  \parameters)) <->text167.htm#1312<->NormEquation(d, m\col\  \parameters)) : RngIntElt, RngIntElt -> BoolElt, RngIntElt, RngIntElt
5<->NormEquation(d, m) <->text167.htm#1312<->NormEquation(d, m) : RngIntElt, RngIntElt -&gt; BoolElt, RngIntElt, RngIntElt
4<->RngInt_norm-equation (Example H18E9)<->text167.htm#1313<->RngInt_norm-equation (Example H18E9)
4<->Example-norm-equation :<->text167.htm#1313<->Example-norm-equation :: RngInt_norm-equation (Example H18E9)
3<->equation :<->text167.htm#1308<->equation :: The Solution of Modular Equations (RING OF INTEGERS)
3<->modular :<->text167.htm<->modular :: Modular Arithmetic (RING OF INTEGERS)
3<->infinity :<->text168.htm<->infinity :: Infinities (RING OF INTEGERS)
3<->creation :<->text168.htm#1315<->creation :: Creation (RING OF INTEGERS)
5<->Infinity() <->text168.htm#1316<->Infinity() : -&gt; Infty
5<->MinusInfinity() <->text168.htm#1317<->MinusInfinity() : -&gt; Infty
3<->creation :<->text168.htm#1315<->creation :: Creation (RING OF INTEGERS)
3<->arithmetic :<->text168.htm#1318<->arithmetic :: Arithmetic (RING OF INTEGERS)
3<->comparison :<->text168.htm#1319<->comparison :: Comparison (RING OF INTEGERS)
3<->misc :<->text168.htm#1320<->misc :: Miscellaneous (RING OF INTEGERS)
5<->Sign(x) <->text168.htm#1321<->Sign(x) : Infty -&gt; RngIntElt
5<->AbsoluteValue :: Abs(x) <->text168.htm#1322<->AbsoluteValue :: Abs(x) : Infty -&gt; Infty
5<->Abs(x) <->text168.htm#1322<->Abs(x) : Infty -&gt; Infty
5<->Floor :: Round(x) <->text168.htm#1323<->Floor :: Round(x) : Infty -&gt; Infty
5<->Ceiling :: Round(x) <->text168.htm#1323<->Ceiling :: Round(x) : Infty -&gt; Infty
5<->Round(x) <->text168.htm#1323<->Round(x) : Infty -&gt; Infty
5<->IsFinite(x) <->text168.htm#1324<->IsFinite(x) : RngIntElt -> BoolElt
5<->IsFinite(x) <->text168.htm#1324<->IsFinite(x) : Infty -&gt; BoolElt
3<->misc :<->text168.htm#1320<->misc :: Miscellaneous (RING OF INTEGERS)
3<->infinity :<->text168.htm<->infinity :: Infinities (RING OF INTEGERS)
3<->nfs :: Advanced Factorization  Techniques<->text169.htm<->nfs :: Advanced Factorization  Techniques: The Number Field Sieve (RING OF INTEGERS)
3<->nfs-implementation :<->text169.htm#1326<->nfs-implementation :: The Magma Number Field Sieve Implementation (RING OF INTEGERS)
5<->SetVerbose("NFS", v) <->text169.htm#1327<->SetVerbose("NFS", v) : MonStgElt, RngIntElt -&gt;
3<->nfs-implementation :<->text169.htm#1326<->nfs-implementation :: The Magma Number Field Sieve Implementation (RING OF INTEGERS)
3<->nfs-naive :<->text169.htm#1328<->nfs-naive :: Naive NFS (RING OF INTEGERS)
5<->NFS :: NumberFieldSieve(n, F, m1, m2) <->text169.htm#1329<->NFS :: NumberFieldSieve(n, F, m1, m2) : RngIntElt, RngMPolElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->NumberFieldSieve(n, F, m1, m2) <->text169.htm#1329<->NumberFieldSieve(n, F, m1, m2) : RngIntElt, RngMPolElt, RngIntElt, RngIntElt -&gt; RngIntElt
3<->nfs-naive :<->text169.htm#1328<->nfs-naive :: Naive NFS (RING OF INTEGERS)
3<->nfs-process :<->text169.htm#1330<->nfs-process :: Factoring with NFS Processes (RING OF INTEGERS)
5<->NFSProcess(n, F, m1, m2) <->text169.htm#1331<->NFSProcess(n, F, m1, m2) : RngIntElt, RngMPolElt, RngIntElt, RngIntElt -&gt; NFSProc
4<->RngInt_nfsprocessparameters (Example H18E10)<->text169.htm#1332<->RngInt_nfsprocessparameters (Example H18E10)
4<->Example-nfsprocessparameters :<->text169.htm#1332<->Example-nfsprocessparameters :: RngInt_nfsprocessparameters (Example H18E10)
3<->nfs-parameter-selection :<->text169.htm#1333<->nfs-parameter-selection :: Attribute Selection (RING OF INTEGERS)
4<->RngInt_70digitnfs (Example H18E11)<->text169.htm#1334<->RngInt_70digitnfs (Example H18E11)
4<->Example-70digitnfs :<->text169.htm#1334<->Example-70digitnfs :: RngInt_70digitnfs (Example H18E11)
4<->RngInt_80digitnfs (Example H18E12)<->text169.htm#1335<->RngInt_80digitnfs (Example H18E12)
4<->Example-80digitnfs :<->text169.htm#1335<->Example-80digitnfs :: RngInt_80digitnfs (Example H18E12)
4<->RngInt_87digitnfs (Example H18E13)<->text169.htm#1336<->RngInt_87digitnfs (Example H18E13)
4<->Example-87digitnfs :<->text169.htm#1336<->Example-87digitnfs :: RngInt_87digitnfs (Example H18E13)
3<->nfs-parameter-selection :<->text169.htm#1333<->nfs-parameter-selection :: Attribute Selection (RING OF INTEGERS)
3<->nfs-sieving-stage :<->text169.htm#1337<->nfs-sieving-stage :: The Sieving Stage (RING OF INTEGERS)
5<->NumberOfRelationsRequired(P) <->text169.htm#1338<->NumberOfRelationsRequired(P) : NFSProc -&gt; RngIntElt
5<->FindRelations(P) <->text169.htm#1339<->FindRelations(P) : NFSProc -&gt; RngIntElt
3<->nfs-sieving-stage :<->text169.htm#1337<->nfs-sieving-stage :: The Sieving Stage (RING OF INTEGERS)
3<->nfs-auxiliary-data-stage :<->text169.htm#1340<->nfs-auxiliary-data-stage :: The Auxiliary Data Stage (RING OF INTEGERS)
5<->CreateCycleFile(P) <->text169.htm#1341<->CreateCycleFile(P) : NFSProc -&gt; .
5<->CycleCount(P) <->text169.htm#1342<->CycleCount(P) : NFSProc -&gt; RngIntElt
5<->CycleCount(fn) <->text169.htm#1343<->CycleCount(fn) : MonStgElt -&gt; RngIntElt
5<->CreateCharacterFile(P) <->text169.htm#1344<->CreateCharacterFile(P) : NFSProc -&gt; .
5<->CreateCharacterFile(P, cc) <->text169.htm#1345<->CreateCharacterFile(P, cc) : NFSProc, RngIntElt -&gt; .
3<->nfs-auxiliary-data-stage :<->text169.htm#1340<->nfs-auxiliary-data-stage :: The Auxiliary Data Stage (RING OF INTEGERS)
3<->nfs-dependency-stage :: Finding Dependencies<->text169.htm#1346<->nfs-dependency-stage :: Finding Dependencies: the Linear Algebra Stage (RING OF INTEGERS)
5<->FindDependencies(P) <->text169.htm#1347<->FindDependencies(P) : NFSProc -&gt; .
3<->nfs-dependency-stage :: Finding Dependencies<->text169.htm#1346<->nfs-dependency-stage :: Finding Dependencies: the Linear Algebra Stage (RING OF INTEGERS)
3<->nfs-factorization-stage :<->text169.htm#1348<->nfs-factorization-stage :: The Factorization Stage (RING OF INTEGERS)
5<->Factor(P) <->text169.htm#1349<->Factor(P) : NFSProc -&gt; RngIntElt
5<->Factor(P,k) <->text169.htm#1350<->Factor(P,k) : NFSProc, RngIntElt -&gt; RngIntElt
3<->nfs-factorization-stage :<->text169.htm#1348<->nfs-factorization-stage :: The Factorization Stage (RING OF INTEGERS)
3<->nfs-process :<->text169.htm#1330<->nfs-process :: Factoring with NFS Processes (RING OF INTEGERS)
3<->nfs-data-files-formats :<->text169.htm#1351<->nfs-data-files-formats :: Data Files (RING OF INTEGERS)
5<->RemoveFiles(P) <->text169.htm#1352<->RemoveFiles(P) : NFSProc -&gt; .
5<->MergeFiles(S, fn) <->text169.htm#1353<->MergeFiles(S, fn) : [MonStgElt], MonStgElt -&gt; RngIntElt, RngIntElt
3<->nfs-magma-native :<->text169.htm#1354<->nfs-magma-native :: Magma Native NFS Data Files (RING OF INTEGERS)
3<->nfs-data-files-formats :<->text169.htm#1351<->nfs-data-files-formats :: Data Files (RING OF INTEGERS)
3<->nfs-distributed :<->text169.htm#1355<->nfs-distributed :: Distributing NFS Factorizations (RING OF INTEGERS)
4<->RngInt_distributed (Example H18E14)<->text169.htm#1356<->RngInt_distributed (Example H18E14)
4<->Example-distributed :<->text169.htm#1356<->Example-distributed :: RngInt_distributed (Example H18E14)
3<->nfs-distributed :<->text169.htm#1355<->nfs-distributed :: Distributing NFS Factorizations (RING OF INTEGERS)
3<->nfs-cwi-tools :<->text169.htm#1357<->nfs-cwi-tools :: Magma and CWI NFS Interoperability (RING OF INTEGERS)
5<->FindRelationsInCWIFormat(P) <->text169.htm#1358<->FindRelationsInCWIFormat(P) : NFSProc -&gt; RngIntElt
5<->ConvertToCWIFormat(P, pb) <->text169.htm#1359<->ConvertToCWIFormat(P, pb) : NFSProc, RngIntElt -&gt; .;
3<->nfs-cwi-tools :<->text169.htm#1357<->nfs-cwi-tools :: Magma and CWI NFS Interoperability (RING OF INTEGERS)
3<->nfspoly :<->text169.htm#1360<->nfspoly :: Tools for Finding a Suitable Polynomial (RING OF INTEGERS)
5<->BaseMPolynomial(n, m, d) <->text169.htm#1361<->BaseMPolynomial(n, m, d) : RngIntElt, RngIntElt, RngIntElt -&gt; RngMPolElt
5<->MurphyAlphaApproximation(F, b) <->text169.htm#1362<->MurphyAlphaApproximation(F, b) : RngMPolElt, RngIntElt -&gt; FldReElt
5<->OptimalSkewness(F) <->text169.htm#1363<->OptimalSkewness(F) : RngMPolElt -&gt; FldReElt, FldReElt
4<->RngInt_GetPoly (Example H18E15)<->text169.htm#1364<->RngInt_GetPoly (Example H18E15)
4<->Example-GetPoly :<->text169.htm#1364<->Example-GetPoly :: RngInt_GetPoly (Example H18E15)
5<->BestTranslation(F, m, a) <->text169.htm#1365<->BestTranslation(F, m, a) : RngMPolElt, RngIntElt, FldReElt, FldReElt -&gt; RngMPolElt, RngIntElt, FldReElt, FldReElt
5<->PolynomialSieve(F, m, J0, J1,MaxAlpha) <->text169.htm#1366<->PolynomialSieve(F, m, J0, J1,MaxAlpha) : RngMPolElt, RngIntElt, RngIntElt, RngIntElt, FldReElt -&gt; List
3<->nfspoly :<->text169.htm#1360<->nfspoly :: Tools for Finding a Suitable Polynomial (RING OF INTEGERS)
3<->nfs :: Advanced Factorization  Techniques<->text169.htm<->nfs :: Advanced Factorization  Techniques: The Number Field Sieve (RING OF INTEGERS)
3<->integer :<->text155.htm<->integer :: RING OF INTEGERS
3<->integer-residue :<->text171.htm<->integer-residue :: INTEGER RESIDUE CLASS RINGS
3<->introduction :<->text172.htm<->introduction :: Introduction (INTEGER RESIDUE CLASS RINGS)
3<->integer-ideals :<->text173.htm<->integer-ideals :: Ideals of Z (INTEGER RESIDUE CLASS RINGS)
5<->ideal< R | a > <->text173.htm#1371<->ideal&lt; R | a &gt; : RngInt, RngIntElt -&gt; RngIntRes
4<->RngIntRes_residue-ring (Example H19E1)<->text173.htm#1372<->RngIntRes_residue-ring (Example H19E1)
4<->Example-residue-ring :<->text173.htm#1372<->Example-residue-ring :: RngIntRes_residue-ring (Example H19E1)
3<->integer-ideals :<->text173.htm<->integer-ideals :: Ideals of Z (INTEGER RESIDUE CLASS RINGS)
3<->number-field-like :<->text174.htm<->number-field-like :: Z as a Number Field Order (INTEGER RESIDUE CLASS RINGS)
5<->Decomposition(R, p) <->text174.htm#1374<->Decomposition(R, p) : RngInt, RngIntElt -&gt; SeqEnum
5<->Generator(I) <->text174.htm#1375<->Generator(I) : RngInt -&gt; RngIntElt
5<->RamificationIndex(I) <->text174.htm#1376<->RamificationIndex(I) : RngInt -> RngIntElt
5<->RamificationIndex(I, p) <->text174.htm#1376<->RamificationIndex(I, p) : RngInt, RngIntElt -&gt; RngIntElt
5<->Degree(I) <->text174.htm#1377<->Degree(I) : RngInt -&gt; RngIntElt
5<->TwoElementNormal(I) <->text174.htm#1378<->TwoElementNormal(I) : RngInt -&gt; RngIntElt, RngIntElt
5<->ChineseRemainderTheorem(I, J, a, b) <->text174.htm#1379<->ChineseRemainderTheorem(I, J, a, b) : RngInt, RngInt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Valuation(x, I) <->text174.htm#1380<->Valuation(x, I) : RngIntElt, RngInt -&gt; RngIntElt
5<->ClassRepresentative(I) <->text174.htm#1381<->ClassRepresentative(I) : RngInt -&gt; RngInt
3<->number-field-like :<->text174.htm<->number-field-like :: Z as a Number Field Order (INTEGER RESIDUE CLASS RINGS)
3<->residue class rings :<->text175.htm<->residue class rings :: Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->finite fields :<->text175.htm<->finite fields :: Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->residue-class-rings :<->text175.htm<->residue-class-rings :: Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->creation :<->text175.htm#1383<->creation :: Creation (INTEGER RESIDUE CLASS RINGS)
5<->quo<Z | I> <->text175.htm#1384<->quo&lt;Z | I&gt; : RngInt, RngInt -&gt; RngIntRes
5<->quo<Z | m> <->text175.htm#1385<->quo&lt;Z | m&gt; : RngInt, RngIntElt -&gt; RngIntRes
5<->IntegerRing :: ResidueClassRing(m) <->text175.htm#1386<->IntegerRing :: ResidueClassRing(m) : RngIntElt -&gt; RngIntRes, Map
5<->Integers :: ResidueClassRing(m) <->text175.htm#1386<->Integers :: ResidueClassRing(m) : RngIntElt -&gt; RngIntRes, Map
5<->RingOfIntegers :: ResidueClassRing(m) <->text175.htm#1386<->RingOfIntegers :: ResidueClassRing(m) : RngIntElt -&gt; RngIntRes, Map
5<->ResidueClassRing(m) <->text175.htm#1386<->ResidueClassRing(m) : RngIntElt -&gt; RngIntRes, Map
5<->ResidueClassField(p) <->text175.htm#1387<->ResidueClassField(p) : RngIntElt -&gt; FldFin, Map
5<->IntegerRing :: ResidueClassRing(Q) <->text175.htm#1388<->IntegerRing :: ResidueClassRing(Q) : RngIntEltFact -&gt; RngIntRes
5<->Integers :: ResidueClassRing(Q) <->text175.htm#1388<->Integers :: ResidueClassRing(Q) : RngIntEltFact -&gt; RngIntRes
5<->ResidueClassRing(Q) <->text175.htm#1388<->ResidueClassRing(Q) : RngIntEltFact -&gt; RngIntRes
4<->RngIntRes_residue-ring (Example H19E2)<->text175.htm#1389<->RngIntRes_residue-ring (Example H19E2)
4<->Example-residue-ring :<->text175.htm#1389<->Example-residue-ring :: RngIntRes_residue-ring (Example H19E2)
3<->creation :<->text175.htm#1383<->creation :: Creation (INTEGER RESIDUE CLASS RINGS)
3<->coercion, residue classes :<->text175.htm#1390<->coercion, residue classes :: Coercion (INTEGER RESIDUE CLASS RINGS)
3<->coercion :<->text175.htm#1390<->coercion :: Coercion (INTEGER RESIDUE CLASS RINGS)
4<->RngIntRes_Coercion (Example H19E3)<->text175.htm#1391<->RngIntRes_Coercion (Example H19E3)
4<->Example-Coercion :<->text175.htm#1391<->Example-Coercion :: RngIntRes_Coercion (Example H19E3)
3<->coercion :<->text175.htm#1390<->coercion :: Coercion (INTEGER RESIDUE CLASS RINGS)
3<->invariant :<->text175.htm#1392<->invariant :: Elementary Invariants (INTEGER RESIDUE CLASS RINGS)
5<->Modulus(R) <->text175.htm#1393<->Modulus(R) : RngIntRes -&gt; RngInt
5<->FactoredModulus(R) <->text175.htm#1394<->FactoredModulus(R) : RngIntRes -&gt; RngIntEltFact
3<->invariant :<->text175.htm#1392<->invariant :: Elementary Invariants (INTEGER RESIDUE CLASS RINGS)
3<->operation :<->text175.htm#1395<->operation :: Structure Operations (INTEGER RESIDUE CLASS RINGS)
5<->AdditiveGroup(R) <->text175.htm#1396<->AdditiveGroup(R) : RngIntRes -&gt; GrpAb, Map
5<->UnitGroup :: MultiplicativeGroup(R) <->text175.htm#1397<->UnitGroup :: MultiplicativeGroup(R) : RngIntRes -&gt; GrpAb, Map
5<->MultiplicativeGroup(R) <->text175.htm#1397<->MultiplicativeGroup(R) : RngIntRes -&gt; GrpAb, Map
5<->sub< R | n > <->text175.htm#1398<->sub&lt; R | n &gt; : RngIntRes, RngIntResElt -&gt; RngIntRes
5<->Set(R) <->text175.htm#1399<->Set(R) : RngIntRes -&gt; SetEnum
3<->operation :<->text175.htm#1395<->operation :: Structure Operations (INTEGER RESIDUE CLASS RINGS)
3<->predicate :<->text175.htm#1400<->predicate :: Ring Predicates and Booleans (INTEGER RESIDUE CLASS RINGS)
3<->homomorphism :<->text175.htm#1401<->homomorphism :: Homomorphisms (INTEGER RESIDUE CLASS RINGS)
5<->hom< R -> S |  > <->text175.htm#1402<->hom&lt; R -&gt; S |  &gt; : RngIntRes, Rng -&gt; Map
3<->homomorphism :<->text175.htm#1401<->homomorphism :: Homomorphisms (INTEGER RESIDUE CLASS RINGS)
3<->residue-class-rings :<->text175.htm<->residue-class-rings :: Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->elements :<->text176.htm<->elements :: Elements of Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->creation-elements :<->text176.htm#1404<->creation-elements :: Creation (INTEGER RESIDUE CLASS RINGS)
5<->elt< R | k > <->text176.htm#1405<->elt&lt; R | k &gt; : RngIntRes, RngIntElt -&gt; RngIntResElt
5<->R ! k <->text176.htm#1406<->R ! k : RngIntRes, RngIntElt -&gt; RngIntResElt
5<->Random(R) <->text176.htm#1407<->Random(R) : RngIntRes -&gt; RngIntResElt
3<->creation-elements :<->text176.htm#1404<->creation-elements :: Creation (INTEGER RESIDUE CLASS RINGS)
3<->arithmetic :<->text176.htm#1408<->arithmetic :: Arithmetic Operators (INTEGER RESIDUE CLASS RINGS)
3<->Boolean :<->text176.htm#1409<->Boolean :: Equality and Membership (INTEGER RESIDUE CLASS RINGS)
3<->generic :<->text176.htm#1410<->generic :: Parent and Category (INTEGER RESIDUE CLASS RINGS)
3<->element-Boolean :<->text176.htm#1411<->element-Boolean :: Predicates on Ring Elements (INTEGER RESIDUE CLASS RINGS)
3<->equation :<->text176.htm#1412<->equation :: Solving Equations over Z/mZ (INTEGER RESIDUE CLASS RINGS)
5<->Solution(a, b) <->text176.htm#1413<->Solution(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->IsSquare(n) <->text176.htm#1414<->IsSquare(n) : RngIntResElt -&gt; BoolElt, RngIntResElt
5<->SquareRoot :: Sqrt(a) <->text176.htm#1415<->SquareRoot :: Sqrt(a) : RngIntResElt -&gt; RngIntResElt
5<->Sqrt(a) <->text176.htm#1415<->Sqrt(a) : RngIntResElt -&gt; RngIntResElt
5<->AllSqrts :: AllSquareRoots(a) <->text176.htm#1416<->AllSqrts :: AllSquareRoots(a) : RngIntResElt -&gt; [ RngIntResElt ]
5<->AllSquareRoots(a) <->text176.htm#1416<->AllSquareRoots(a) : RngIntResElt -&gt; [ RngIntResElt ]
4<->RngIntRes_element-ops (Example H19E4)<->text176.htm#1417<->RngIntRes_element-ops (Example H19E4)
4<->Example-element-ops :<->text176.htm#1417<->Example-element-ops :: RngIntRes_element-ops (Example H19E4)
3<->equation :<->text176.htm#1412<->equation :: Solving Equations over Z/mZ (INTEGER RESIDUE CLASS RINGS)
3<->elements :<->text176.htm<->elements :: Elements of Residue Class Rings (INTEGER RESIDUE CLASS RINGS)
3<->ideal-ops :<->text177.htm<->ideal-ops :: Ideal Operations (INTEGER RESIDUE CLASS RINGS)
5<->ideal< R | a1, ..., ar > <->text177.htm#1419<->ideal&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngIntRes, RngIntResElt, ..., RngIntResElt -&gt; RngIntRes
5<->Gcd :: GreatestCommonDivisor(a, b) <->text177.htm#1420<->Gcd :: GreatestCommonDivisor(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->GCD :: GreatestCommonDivisor(a, b) <->text177.htm#1420<->GCD :: GreatestCommonDivisor(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->GreatestCommonDivisor(a, b) <->text177.htm#1420<->GreatestCommonDivisor(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->Gcd :: GreatestCommonDivisor(Q) <->text177.htm#1421<->Gcd :: GreatestCommonDivisor(Q) : [RngIntResElt] -&gt; RngIntResElt
5<->GCD :: GreatestCommonDivisor(Q) <->text177.htm#1421<->GCD :: GreatestCommonDivisor(Q) : [RngIntResElt] -&gt; RngIntResElt
5<->GreatestCommonDivisor(Q) <->text177.htm#1421<->GreatestCommonDivisor(Q) : [RngIntResElt] -&gt; RngIntResElt
5<->Lcm :: LeastCommonMultiple(a, b) <->text177.htm#1422<->Lcm :: LeastCommonMultiple(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->LCM :: LeastCommonMultiple(a, b) <->text177.htm#1422<->LCM :: LeastCommonMultiple(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->LeastCommonMultiple(a, b) <->text177.htm#1422<->LeastCommonMultiple(a, b) : RngIntResElt, RngIntResElt -&gt; RngIntResElt
5<->Lcm :: LeastCommonMultiple(Q) <->text177.htm#1423<->Lcm :: LeastCommonMultiple(Q) : [RngIntResElt] -&gt; RngIntResElt
5<->LCM :: LeastCommonMultiple(Q) <->text177.htm#1423<->LCM :: LeastCommonMultiple(Q) : [RngIntResElt] -&gt; RngIntResElt
5<->LeastCommonMultiple(Q) <->text177.htm#1423<->LeastCommonMultiple(Q) : [RngIntResElt] -&gt; RngIntResElt
3<->ideal-ops :<->text177.htm<->ideal-ops :: Ideal Operations (INTEGER RESIDUE CLASS RINGS)
3<->unit-group :<->text178.htm<->unit-group :: The Unit Group (INTEGER RESIDUE CLASS RINGS)
5<->UnitGroup(R) <->text178.htm#1425<->UnitGroup(R) : RngIntRes -&gt; GrpAb, Map
5<->IsPrimitive(n) <->text178.htm#1426<->IsPrimitive(n) : RngIntResElt -&gt; BoolElt
5<->PrimitiveRoot :: PrimitiveElement(R) <->text178.htm#1427<->PrimitiveRoot :: PrimitiveElement(R) : RngIntRes -&gt; RngIntResElt
5<->PrimitiveElement(R) <->text178.htm#1427<->PrimitiveElement(R) : RngIntRes -&gt; RngIntResElt
5<->Order(a) <->text178.htm#1428<->Order(a) : RngIntResElt -&gt; RngIntElt
5<->Normalise :: Normalize(x) <->text178.htm#1429<->Normalise :: Normalize(x) : RngIntRes -&gt; RngIntResElt, RngIntResElt
5<->Normalize(x) <->text178.htm#1429<->Normalize(x) : RngIntRes -&gt; RngIntResElt, RngIntResElt
4<->RngIntRes_unit-group (Example H19E5)<->text178.htm#1430<->RngIntRes_unit-group (Example H19E5)
4<->Example-unit-group :<->text178.htm#1430<->Example-unit-group :: RngIntRes_unit-group (Example H19E5)
4<->RngIntRes_cyclic-unit-group (Example H19E6)<->text178.htm#1431<->RngIntRes_cyclic-unit-group (Example H19E6)
4<->Example-cyclic-unit-group :<->text178.htm#1431<->Example-cyclic-unit-group :: RngIntRes_cyclic-unit-group (Example H19E6)
3<->unit-group :<->text178.htm<->unit-group :: The Unit Group (INTEGER RESIDUE CLASS RINGS)
3<->dirichlet-characters :<->text179.htm<->dirichlet-characters :: Dirichlet Characters (INTEGER RESIDUE CLASS RINGS)
3<->creation :<->text179.htm#1433<->creation :: Creation (INTEGER RESIDUE CLASS RINGS)
5<->DirichletGroup(N) <->text179.htm#1434<->DirichletGroup(N) : RngIntElt -&gt; GrpDrch
5<->FullDirichletGroup(N) <->text179.htm#1435<->FullDirichletGroup(N) : RngIntElt -&gt; GrpDrch
5<->DirichletGroup(N,R) <->text179.htm#1436<->DirichletGroup(N,R) : RngIntElt, Rng -&gt; GrpDrch
5<->DirichletGroup(N,R,z,r) <->text179.htm#1437<->DirichletGroup(N,R,z,r) : RngIntElt, Rng, RngElt, RngIntElt -&gt; GrpDrch
5<->BaseExtend(G, R, z) <->text179.htm#1438<->BaseExtend(G, R, z) : GrpDrch, Rng, RngElt -> GrpDrch
5<->BaseExtend(G, R) <->text179.htm#1438<->BaseExtend(G, R) : GrpDrch, Rng -&gt; GrpDrch
5<->AssignNames(~G, S) <->text179.htm#1439<->AssignNames(~G, S) : GrpDrch, [MonStgElt] -&gt;
3<->creation :<->text179.htm#1433<->creation :: Creation (INTEGER RESIDUE CLASS RINGS)
3<->element-creation :<->text179.htm#1440<->element-creation :: Element Creation (INTEGER RESIDUE CLASS RINGS)
5<->Elements(G) <->text179.htm#1441<->Elements(G) : GrpDrch -&gt; [GrpDrchElt]
5<->Random(G) <->text179.htm#1442<->Random(G) : GrpDrch -&gt; GrpDrchElt
5<->G . i <->text179.htm#1443<->G . i : GrpDrch, RngIntElt -&gt; GrpDrchElt
5<->G ! x <->text179.htm#1444<->G ! x : GrpDrch, Any -&gt; GrpDrchElt
5<->KroneckerCharacter(D, R) <->text179.htm#1445<->KroneckerCharacter(D, R) : RngIntElt, Rng -> GrpDrchElt
5<->KroneckerCharacter(D) <->text179.htm#1445<->KroneckerCharacter(D) : RngIntElt -&gt; GrpDrchElt
3<->element-creation :<->text179.htm#1440<->element-creation :: Element Creation (INTEGER RESIDUE CLASS RINGS)
3<->properties-dirichlet-groups :<->text179.htm#1446<->properties-dirichlet-groups :: Attributes of Dirichlet Groups (INTEGER RESIDUE CLASS RINGS)
5<->BaseRing(G) <->text179.htm#1447<->BaseRing(G) : GrpDrch -&gt; Rng
5<->Modulus(G) <->text179.htm#1448<->Modulus(G) : GrpDrch -&gt; RngIntElt
5<->Order(G) <->text179.htm#1449<->Order(G) : GrpDrch -&gt; RngIntElt
5<->Exponent(G) <->text179.htm#1450<->Exponent(G) : GrpDrch -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text179.htm#1451<->NumberOfGenerators(G) : GrpDrch -&gt; RngIntElt
5<->Generators(G) <->text179.htm#1452<->Generators(G) : GrpDrch -&gt; [GrpDrchElt]
5<->UnitGenerators(G) <->text179.htm#1453<->UnitGenerators(G) : GrpDrch -&gt; [RngIntElt]
5<->GaloisConjugacyRepresentatives(seq) <->text179.htm#1454<->GaloisConjugacyRepresentatives(seq) : [GrpDrchElt] -> [GrpDrchElt]
5<->GaloisConjugacyRepresentatives(G) <->text179.htm#1454<->GaloisConjugacyRepresentatives(G) : GrpDrch -&gt; [GrpDrchElt]
5<->AbelianGroup(G) <->text179.htm#1455<->AbelianGroup(G) : GrpDrch -&gt; GrpAb, Map
3<->properties-dirichlet-groups :<->text179.htm#1446<->properties-dirichlet-groups :: Attributes of Dirichlet Groups (INTEGER RESIDUE CLASS RINGS)
3<->properties-elements :<->text179.htm#1456<->properties-elements :: Attributes of Elements (INTEGER RESIDUE CLASS RINGS)
5<->BaseRing(chi) <->text179.htm#1457<->BaseRing(chi) : GrpDrchElt -&gt; Rng
5<->Modulus(chi) <->text179.htm#1458<->Modulus(chi) : GrpDrchElt -&gt; RngIntElt
5<->Conductor(chi) <->text179.htm#1459<->Conductor(chi) : GrpDrchElt -&gt; RngIntElt
5<->ElementToSequence(chi) <->text179.htm#1460<->ElementToSequence(chi) : GrpDrchElt -&gt; SeqEnum
5<->x eq y <->text179.htm#1461<->x eq y : GrpDrchElt, GrpDrchElt -&gt; BoolElt
5<->Order(chi) <->text179.htm#1462<->Order(chi) : GrpDrchElt -&gt; RngIntElt
5<->IsTrivial(chi) <->text179.htm#1463<->IsTrivial(chi) : GrpDrchElt -&gt; BoolElt
5<->IsPrimitive(chi) <->text179.htm#1464<->IsPrimitive(chi) : GrpDrchElt -&gt; BoolElt
5<->AssociatedPrimitiveCharacter(chi) <->text179.htm#1465<->AssociatedPrimitiveCharacter(chi) : GrpDrchElt -&gt; GrpDrchElt
5<->IsEven(chi) <->text179.htm#1466<->IsEven(chi) : GrpDrchElt -&gt; BoolElt
5<->IsOdd(chi) <->text179.htm#1467<->IsOdd(chi) : GrpDrchElt -&gt; BoolElt
5<->IsTotallyEven(chi) <->text179.htm#1468<->IsTotallyEven(chi) : GrpDrchElt -&gt; BoolElt
5<->Decomposition(chi) <->text179.htm#1469<->Decomposition(chi) : GrpDrchElt -&gt; List
5<->MinimalBaseRingCharacter(chi) <->text179.htm#1470<->MinimalBaseRingCharacter(chi) : GrpDrchElt -&gt; GrpDrchElt
3<->properties-elements :<->text179.htm#1456<->properties-elements :: Attributes of Elements (INTEGER RESIDUE CLASS RINGS)
3<->evaluation :<->text179.htm#1471<->evaluation :: Evaluation (INTEGER RESIDUE CLASS RINGS)
5<->Evaluate(chi,n) <->text179.htm#1472<->Evaluate(chi,n) : GrpDrchElt, RngIntElt -&gt; RngElt
5<->ValueList(chi) <->text179.htm#1473<->ValueList(chi) : GrpDrchElt -&gt; [RngElt]
5<->ValuesOnUnitGenerators(chi) <->text179.htm#1474<->ValuesOnUnitGenerators(chi) : GrpDrchElt -&gt; [RngElt]
5<->OrderOfRootOfUnity(r, n) <->text179.htm#1475<->OrderOfRootOfUnity(r, n) : RngElt, RngIntElt -&gt; RngIntElt
3<->evaluation :<->text179.htm#1471<->evaluation :: Evaluation (INTEGER RESIDUE CLASS RINGS)
3<->arithmetic :<->text179.htm#1476<->arithmetic :: Arithmetic (INTEGER RESIDUE CLASS RINGS)
5<->/ :: x * y <->text179.htm#1477<->/ :: x * y : GrpDrchElt, GrpDrchElt -&gt; GrpDrchElt
5<->x * y <->text179.htm#1477<->x * y : GrpDrchElt, GrpDrchElt -&gt; GrpDrchElt
5<->x ^ n <->text179.htm#1478<->x ^ n : GrpDrchElt, RngIntElt -&gt; GrpDrchElt
5<->x ^ phi <->text179.htm#1479<->x ^ phi : GrpDrchElt, Map -&gt; GrpDrchElt
5<->Sqrt(x) <->text179.htm#1480<->Sqrt(x) : GrpDrchElt -&gt; GrpDrchElt
3<->arithmetic :<->text179.htm#1476<->arithmetic :: Arithmetic (INTEGER RESIDUE CLASS RINGS)
3<->example :<->text179.htm#1481<->example :: Example (INTEGER RESIDUE CLASS RINGS)
4<->RngIntRes_Dirichlet (Example H19E7)<->text179.htm#1482<->RngIntRes_Dirichlet (Example H19E7)
4<->Example-Dirichlet :<->text179.htm#1482<->Example-Dirichlet :: RngIntRes_Dirichlet (Example H19E7)
3<->example :<->text179.htm#1481<->example :: Example (INTEGER RESIDUE CLASS RINGS)
3<->dirichlet-characters :<->text179.htm<->dirichlet-characters :: Dirichlet Characters (INTEGER RESIDUE CLASS RINGS)
3<->integer-residue :<->text171.htm<->integer-residue :: INTEGER RESIDUE CLASS RINGS
3<->rational :<->text181.htm<->rational :: RATIONAL FIELD
3<->introduction :<->text182.htm<->introduction :: Introduction (RATIONAL FIELD)
3<->representation :<->text182.htm#1486<->representation :: Representation (RATIONAL FIELD)
3<->coercion :<->text182.htm#1487<->coercion :: Coercion (RATIONAL FIELD)
4<->FldRat_Coercion (Example H20E1)<->text182.htm#1488<->FldRat_Coercion (Example H20E1)
4<->Example-Coercion :<->text182.htm#1488<->Example-Coercion :: FldRat_Coercion (Example H20E1)
3<->coercion :<->text182.htm#1487<->coercion :: Coercion (RATIONAL FIELD)
3<->homomorphism :<->text182.htm#1489<->homomorphism :: Homomorphisms (RATIONAL FIELD)
4<->FldRat_homomorphism (Example H20E2)<->text182.htm#1490<->FldRat_homomorphism (Example H20E2)
4<->Example-homomorphism :<->text182.htm#1490<->Example-homomorphism :: FldRat_homomorphism (Example H20E2)
3<->homomorphism :<->text182.htm#1489<->homomorphism :: Homomorphisms (RATIONAL FIELD)
3<->introduction :<->text182.htm<->introduction :: Introduction (RATIONAL FIELD)
3<->creation :<->text183.htm<->creation :: Creation Functions (RATIONAL FIELD)
3<->magma :<->text183.htm#1492<->magma :: Creation of Structures (RATIONAL FIELD)
5<->RationalField :: Rationals() <->text183.htm#1493<->RationalField :: Rationals() : -&gt; FldRat
5<->Rationals() <->text183.htm#1493<->Rationals() : -&gt; FldRat
5<->IntegerRing :: MaximalOrder(Q) <->text183.htm#1494<->IntegerRing :: MaximalOrder(Q) : FldRat -&gt; RngInt
5<->IntegerRing() : -> RngInt :: MaximalOrder(Q) <->text183.htm#1494<->IntegerRing() : -> RngInt :: MaximalOrder(Q) : FldRat -&gt; RngInt
5<->Integers :: MaximalOrder(Q) <->text183.htm#1494<->Integers :: MaximalOrder(Q) : FldRat -&gt; RngInt
5<->RingOfIntegers :: MaximalOrder(Q) <->text183.htm#1494<->RingOfIntegers :: MaximalOrder(Q) : FldRat -&gt; RngInt
5<->MaximalOrder(Q) <->text183.htm#1494<->MaximalOrder(Q) : FldRat -&gt; RngInt
5<->FieldOfFractions(Z) <->text183.htm#1495<->FieldOfFractions(Z) : RngInt -> FldRat
5<->FieldOfFractions(Q) <->text183.htm#1495<->FieldOfFractions(Q) : FldRat -&gt; FldRat
5<->Completion(Q, P) <->text183.htm#1496<->Completion(Q, P) : FldRat, RngInt -&gt; FldLoc, Map
3<->magma :<->text183.htm#1492<->magma :: Creation of Structures (RATIONAL FIELD)
3<->element :<->text183.htm#1497<->element :: Creation of Elements (RATIONAL FIELD)
5<->a / b <->text183.htm#1498<->a / b : RngIntElt, RngIntElt -&gt; FldRatElt
5<->Q ! [a] <->text183.htm#1499<->Q ! [a] : FldRat, RngElt -&gt; FldRatElt
5<->elt :: Q ! [a, b] <->text183.htm#1500<->elt :: Q ! [a, b] : FldRat, RngIntElt, RngIntElt -&gt; FldRatElt
5<->Q ! [a, b] <->text183.htm#1500<->Q ! [a, b] : FldRat, RngIntElt, RngIntElt -&gt; FldRatElt
5<->Q ! a <->text183.htm#1501<->Q ! a : FldRat, RngIntElt -&gt; FldRatElt
5<->RootOfUnity(n, Q) <->text183.htm#1502<->RootOfUnity(n, Q) : RngIntElt, FldRat -&gt; FldRatElt
5<->Random(Q, m) <->text183.htm#1503<->Random(Q, m) : FldRat, RngIntElt -&gt; FldRatElt
3<->element :<->text183.htm#1497<->element :: Creation of Elements (RATIONAL FIELD)
3<->creation :<->text183.htm<->creation :: Creation Functions (RATIONAL FIELD)
3<->operation :<->text184.htm<->operation :: Structure Operations (RATIONAL FIELD)
3<->generic :<->text184.htm#1505<->generic :: Related Structures (RATIONAL FIELD)
5<->IntegralBasis(Q) <->text184.htm#1506<->IntegralBasis(Q) : FldRat -&gt; [ FldRatElt ]
5<->MinimalField(q) <->text184.htm#1507<->MinimalField(q) : FldRatElt -&gt; FldRat
5<->MinimalField(S) <->text184.htm#1508<->MinimalField(S) : SetEnum -&gt; FldRat
5<->BaseField(Q) <->text184.htm#1509<->BaseField(Q) : FldRat -&gt; FldRat
5<->AbsoluteBasis :: Basis(Q) <->text184.htm#1510<->AbsoluteBasis :: Basis(Q) : FldRat -&gt; [FldRatElt]
5<->Basis(Q) <->text184.htm#1510<->Basis(Q) : FldRat -&gt; [FldRatElt]
5<->UnitGroup(Q) <->text184.htm#1511<->UnitGroup(Q) : FldRat -&gt; GrpAb, Map
5<->ClassGroup(Q) <->text184.htm#1512<->ClassGroup(Q) : FldRat -&gt; GrpAb, Map
5<->AutomorphismGroup(Q, Q) <->text184.htm#1513<->AutomorphismGroup(Q, Q) : FldRat, FldRat -> GrpPerm, PowMapAut, Map
5<->AutomorphismGroup(Q) <->text184.htm#1513<->AutomorphismGroup(Q) : FldRat -&gt; GrpPerm, PowMapAut, Map
5<->Algebra(Q, Q) <->text184.htm#1514<->Algebra(Q, Q) : FldRat, Fld -&gt; AlgAss, Map
5<->VectorSpace(Q, Q) <->text184.htm#1515<->VectorSpace(Q, Q) : FldRat, Fld -&gt; ModTupFld, Map
5<->Decomposition(Q, p) <->text184.htm#1516<->Decomposition(Q, p) : FldRat, Infty -> []
5<->Decomposition(Q, p) <->text184.htm#1516<->Decomposition(Q, p) : FldRat, RngIntElt -&gt; []
3<->generic :<->text184.htm#1505<->generic :: Related Structures (RATIONAL FIELD)
3<->invariant :<->text184.htm#1517<->invariant :: Numerical Invariants (RATIONAL FIELD)
5<->Conductor(Q) <->text184.htm#1518<->Conductor(Q) : FldRat -&gt; RngIntElt
5<->AbsoluteDegree :: Degree(Q) <->text184.htm#1519<->AbsoluteDegree :: Degree(Q) : FldRat -&gt; RngIntElt
5<->Degree(Q) <->text184.htm#1519<->Degree(Q) : FldRat -&gt; RngIntElt
5<->AbsoluteDiscriminant :: Discriminant(Q) <->text184.htm#1520<->AbsoluteDiscriminant :: Discriminant(Q) : FldRat -&gt; RngIntElt
5<->Discriminant(Q) <->text184.htm#1520<->Discriminant(Q) : FldRat -&gt; RngIntElt
5<->DefiningPolynomial(Q) <->text184.htm#1521<->DefiningPolynomial(Q) : FldRat -&gt; RngUPolElt
5<->Signature(Q) <->text184.htm#1522<->Signature(Q) : FldRat -&gt; RngIntElt, RngIntElt
3<->invariant :<->text184.htm#1517<->invariant :: Numerical Invariants (RATIONAL FIELD)
3<->Ring Predicates and Booleans (RATIONAL FIELD)<->text184.htm#1523<->Ring Predicates and Booleans (RATIONAL FIELD)
3<->operation :<->text184.htm<->operation :: Structure Operations (RATIONAL FIELD)
3<->element :<->text185.htm<->element :: Element Operations (RATIONAL FIELD)
3<->generic :<->text185.htm#1525<->generic :: Parent and Category (RATIONAL FIELD)
3<->arithmetic :<->text185.htm#1526<->arithmetic :: Arithmetic Operators (RATIONAL FIELD)
3<->numerator-denominator :<->text185.htm#1527<->numerator-denominator :: Numerator and Denominator (RATIONAL FIELD)
5<->Numerator(q) <->text185.htm#1528<->Numerator(q) : FldRatElt -&gt; RngIntElt
5<->Denominator(q) <->text185.htm#1529<->Denominator(q) : FldRatElt -&gt; RngIntElt
4<->FldRat_numerator (Example H20E3)<->text185.htm#1530<->FldRat_numerator (Example H20E3)
4<->Example-numerator :<->text185.htm#1530<->Example-numerator :: FldRat_numerator (Example H20E3)
3<->numerator-denominator :<->text185.htm#1527<->numerator-denominator :: Numerator and Denominator (RATIONAL FIELD)
3<->Boolean :<->text185.htm#1531<->Boolean :: Equality and Membership (RATIONAL FIELD)
3<->element-Boolean :<->text185.htm#1532<->element-Boolean :: Predicates on Ring Elements (RATIONAL FIELD)
5<->IsIntegral(q) <->text185.htm#1533<->IsIntegral(q) : FldRatElt -&gt; BoolElt
3<->element-Boolean :<->text185.htm#1532<->element-Boolean :: Predicates on Ring Elements (RATIONAL FIELD)
3<->comparison :<->text185.htm#1534<->comparison :: Comparison (RATIONAL FIELD)
3<->conjugate-norm-trace :<->text185.htm#1535<->conjugate-norm-trace :: Conjugates, Norm and Trace (RATIONAL FIELD)
5<->ComplexConjugate(q) <->text185.htm#1536<->ComplexConjugate(q) : FldRatElt -&gt; FldRatElt
5<->Conjugate(q) <->text185.htm#1537<->Conjugate(q) : FldRatElt -&gt; FldRatElt
5<->Norm(q) <->text185.htm#1538<->Norm(q) : FldRatElt -> FldRatElt
5<->Norm(q) <->text185.htm#1538<->Norm(q) : FldRatElt -&gt; FldRatElt
5<->Trace(q) <->text185.htm#1539<->Trace(q) : FldRatElt -&gt; FldRatElt
5<->MinimalPolynomial(q) <->text185.htm#1540<->MinimalPolynomial(q) : FldRatElt -&gt; RngUPolElt
3<->conjugate-norm-trace :<->text185.htm#1535<->conjugate-norm-trace :: Conjugates, Norm and Trace (RATIONAL FIELD)
3<->abs-and-sign :<->text185.htm#1541<->abs-and-sign :: Absolute Value and Sign (RATIONAL FIELD)
5<->AbsoluteValue(q) <->text185.htm#1542<->AbsoluteValue(q) : FldRatElt -&gt; FldRatElt
5<->Sign(q) <->text185.htm#1543<->Sign(q) : FldRatElt -&gt; RngIntElt
5<->Height(q) <->text185.htm#1544<->Height(q) : FldRatElt -&gt; RngIntElt
3<->abs-and-sign :<->text185.htm#1541<->abs-and-sign :: Absolute Value and Sign (RATIONAL FIELD)
3<->round :<->text185.htm#1545<->round :: Rounding and  Truncating (RATIONAL FIELD)
5<->Ceiling(q) <->text185.htm#1546<->Ceiling(q) : FldRatElt -&gt; RngIntElt
5<->Floor(q) <->text185.htm#1547<->Floor(q) : FldRatElt -&gt; RngIntElt
5<->Round(q) <->text185.htm#1548<->Round(q) : FldRatElt -&gt; RngIntElt
5<->Truncate(q) <->text185.htm#1549<->Truncate(q) : FldRatElt -&gt; RngIntElt
5<->Qround(q, M) <->text185.htm#1550<->Qround(q, M) : FldRatElt, RngIntElt -&gt; FldRatElt
3<->round :<->text185.htm#1545<->round :: Rounding and  Truncating (RATIONAL FIELD)
3<->reconstruction :<->text185.htm#1551<->reconstruction :: Rational Reconstruction (RATIONAL FIELD)
5<->RationalReconstruction(s) <->text185.htm#1552<->RationalReconstruction(s) : FldFinElt -> BoolElt, FldRatElt
5<->RationalReconstruction(s) <->text185.htm#1552<->RationalReconstruction(s) : RngIntResElt -&gt; BoolElt, FldRatElt
3<->reconstruction :<->text185.htm#1551<->reconstruction :: Rational Reconstruction (RATIONAL FIELD)
3<->valuation :<->text185.htm#1553<->valuation :: Valuation (RATIONAL FIELD)
5<->Valuation(x, I) <->text185.htm#1554<->Valuation(x, I) : FldRatElt, RngIntElt -> RngIntElt, FldRatElt
5<->Valuation(x, p) <->text185.htm#1554<->Valuation(x, p) : FldRatElt, RngIntElt -&gt; RngIntElt, FldRatElt
3<->valuation :<->text185.htm#1553<->valuation :: Valuation (RATIONAL FIELD)
3<->sequence :<->text185.htm#1555<->sequence :: Sequence Conversions (RATIONAL FIELD)
5<->Eltseq :: ElementToSequence(a) <->text185.htm#1556<->Eltseq :: ElementToSequence(a) : FldRatElt -&gt; [FldRatElt]
5<->ElementToSequence(a) <->text185.htm#1556<->ElementToSequence(a) : FldRatElt -&gt; [FldRatElt]
3<->sequence :<->text185.htm#1555<->sequence :: Sequence Conversions (RATIONAL FIELD)
3<->element :<->text185.htm<->element :: Element Operations (RATIONAL FIELD)
3<->rational :<->text181.htm<->rational :: RATIONAL FIELD
3<->finite-Galois-field :<->text188.htm<->finite-Galois-field :: FINITE FIELDS
3<->introduction :<->text189.htm<->introduction :: Introduction (FINITE FIELDS)
3<->representation :<->text189.htm#1561<->representation :: Representation of Finite Fields (FINITE FIELDS)
3<->conway :<->text189.htm#1562<->conway :: Conway Polynomials (FINITE FIELDS)
3<->extension :<->text189.htm#1563<->extension :: Ground Field and Relationships (FINITE FIELDS)
3<->introduction :<->text189.htm<->introduction :: Introduction (FINITE FIELDS)
3<->creation :<->text190.htm<->creation :: Creation Functions (FINITE FIELDS)
3<->structure :<->text190.htm#1565<->structure :: Creation of Structures (FINITE FIELDS)
5<->GaloisField :: FiniteField(q) <->text190.htm#1566<->GaloisField :: FiniteField(q) : RngIntElt -&gt; FldFin
5<->GF :: FiniteField(q) <->text190.htm#1566<->GF :: FiniteField(q) : RngIntElt -&gt; FldFin
5<->FiniteField(q) <->text190.htm#1566<->FiniteField(q) : RngIntElt -&gt; FldFin
5<->GaloisField :: FiniteField(p, n) <->text190.htm#1567<->GaloisField :: FiniteField(p, n) : RngIntElt, RngIntElt -&gt; FldFin
5<->GF :: FiniteField(p, n) <->text190.htm#1567<->GF :: FiniteField(p, n) : RngIntElt, RngIntElt -&gt; FldFin
5<->FiniteField(p, n) <->text190.htm#1567<->FiniteField(p, n) : RngIntElt, RngIntElt -&gt; FldFin
5<->ext<F | n> <->text190.htm#1568<->ext&lt;F | n&gt; : FldFin, RngIntElt -&gt; FldFin, Map
5<->ext<F | P> <->text190.htm#1569<->ext&lt;F | P&gt; : FldFin, RngUPolElt[FldFin] -&gt; FldFin, Map
5<->ExtensionField<F, x | P> <->text190.htm#1570<->ExtensionField&lt;F, x | P&gt; : FldFin, ... -&gt; FldFin, Map
5<->RandomExtension(F, n) <->text190.htm#1571<->RandomExtension(F, n) : FldFin, RngIntElt -&gt; FldFin
5<->SplittingField(P) <->text190.htm#1572<->SplittingField(P) : RngUPolElt[FldFin] -&gt; FldFin
5<->SplittingField(S) <->text190.htm#1573<->SplittingField(S) : RngUPolElt[FldFin]  -&gt; FldFin
5<->sub<F | d> <->text190.htm#1574<->sub&lt;F | d&gt; : FldFin, RngIntElt -&gt; FldFin, Map
5<->sub<F | f> <->text190.htm#1575<->sub&lt;F | f&gt; : FldFin, RngUPolElt[FldFin] -&gt; FldFin, Map
5<->BaseField :: GroundField(F) <->text190.htm#1576<->BaseField :: GroundField(F) : FldFin -&gt; FldFin
5<->GroundField(F) <->text190.htm#1576<->GroundField(F) : FldFin -&gt; FldFin
5<->PrimeField(F) <->text190.htm#1577<->PrimeField(F) : FldFin -&gt; FldFin
5<->IsPrimeField(F) <->text190.htm#1578<->IsPrimeField(F) : Fld -&gt; BoolElt
5<->F meet G <->text190.htm#1579<->F meet G : FldFin, FldFin -&gt; FldFin
5<->CommonOverfield(K, L) <->text190.htm#1580<->CommonOverfield(K, L) : FldFin, FldFin -&gt; FldFin
4<->FldFin_Extensions (Example H21E1)<->text190.htm#1581<->FldFin_Extensions (Example H21E1)
4<->Example-Extensions :<->text190.htm#1581<->Example-Extensions :: FldFin_Extensions (Example H21E1)
3<->structure :<->text190.htm#1565<->structure :: Creation of Structures (FINITE FIELDS)
3<->embedding :<->text190.htm#1582<->embedding :: Creating Relations (FINITE FIELDS)
5<->Embed(E, F) <->text190.htm#1583<->Embed(E, F) : FldFin, FldFin -&gt;
5<->Embed(E, F, x) <->text190.htm#1584<->Embed(E, F, x) : FldFin, FldFin -&gt;
3<->embedding :<->text190.htm#1582<->embedding :: Creating Relations (FINITE FIELDS)
3<->option :<->text190.htm#1585<->option :: Special Options (FINITE FIELDS)
5<->AssertAttribute(FldFin, "PowerPrinting", l) <->text190.htm#1586<->AssertAttribute(FldFin, "PowerPrinting", l) : Cat, MonStgElt, BoolElt -&gt;
5<->AssertAttribute :: SetPowerPrinting(F, l) <->text190.htm#1587<->AssertAttribute :: SetPowerPrinting(F, l) : FldFin, BoolElt -&gt;
5<->SetPowerPrinting(F, l) <->text190.htm#1587<->SetPowerPrinting(F, l) : FldFin, BoolElt -&gt;
5<->HasAttribute(FldFin, "PowerPrinting", l) <->text190.htm#1588<->HasAttribute(FldFin, "PowerPrinting", l) : Cat, MonStgElt, BoolElt -&gt;
5<->HasAttribute(F, "PowerPrinting") <->text190.htm#1589<->HasAttribute(F, "PowerPrinting") : FldFin, MonStgElt -&gt; BoolElt, BoolElt
5<->AssignNames(~F, [f]) <->text190.htm#1590<->AssignNames(~F, [f]) : FldFin, [ MonStgElt ]) -&gt;
5<->Name(F, 1) <->text190.htm#1591<->Name(F, 1) : FldFin, RngIntElt -&gt; FldFinElt
3<->option :<->text190.htm#1585<->option :: Special Options (FINITE FIELDS)
3<->homomorphism :<->text190.htm#1592<->homomorphism :: Homomorphisms (FINITE FIELDS)
5<->hom< F -> G | x > <->text190.htm#1593<->hom&lt; F -&gt; G | x &gt; : FldFin, Rng -&gt; Map
3<->homomorphism :<->text190.htm#1592<->homomorphism :: Homomorphisms (FINITE FIELDS)
3<->creation :<->text190.htm#1594<->creation :: Creation of Elements (FINITE FIELDS)
5<->F . 1 <->text190.htm#1595<->F . 1 : FldFin -&gt; FldFinElt
5<->! :: elt<F | a> <->text190.htm#1596<->! :: elt&lt;F | a&gt; : FldFin, RngElt -&gt; FldFinElt
5<->elt<F | a> <->text190.htm#1596<->elt&lt;F | a&gt; : FldFin, RngElt -&gt; FldFinElt
5<->elt<F | a0, ..., an - 1> <->text190.htm#1597<->elt&lt;F | a<sub>0</sub>, ..., a<sub>n</sub> - 1&gt; : FldFin, [FldFinElt] -&gt; FldFinElt
5<->Random(F) <->text190.htm#1598<->Random(F) : FldFin -&gt; FldFinElt
3<->creation :<->text190.htm#1594<->creation :: Creation of Elements (FINITE FIELDS)
3<->generator-primitive-normal :<->text190.htm#1599<->generator-primitive-normal :: Special Elements (FINITE FIELDS)
5<->Generator :: F . 1 <->text190.htm#1600<->Generator :: F . 1 : FldFin, RngIntElt -&gt; FldFinElt
5<->F . 1 <->text190.htm#1600<->F . 1 : FldFin, RngIntElt -&gt; FldFinElt
5<->Generator(F, E) <->text190.htm#1601<->Generator(F, E) : FldFin, FldFin -&gt; FldFinElt
5<->PrimitiveElement(F) <->text190.htm#1602<->PrimitiveElement(F) : FldFin -&gt; FldFinElt
5<->SetPrimitiveElement(F, x) <->text190.htm#1603<->SetPrimitiveElement(F, x) : FldFin, FldFinElt -&gt;
5<->NormalElement(F) <->text190.htm#1604<->NormalElement(F) : FldFin -&gt; FldFinElt
5<->NormalElement(F, E) <->text190.htm#1605<->NormalElement(F, E) : FldFin, FldFin -&gt; FldFinElt
3<->generator-primitive-normal :<->text190.htm#1599<->generator-primitive-normal :: Special Elements (FINITE FIELDS)
3<->sequence :<->text190.htm#1606<->sequence :: Sequence Conversions (FINITE FIELDS)
5<->Seqelt :: SequenceToElement(s, F) <->text190.htm#1607<->Seqelt :: SequenceToElement(s, F) : [ FldFinElt ] -&gt; FldFinElt
5<->SequenceToElement(s, F) <->text190.htm#1607<->SequenceToElement(s, F) : [ FldFinElt ] -&gt; FldFinElt
5<->Eltseq :: ElementToSequence(a) <->text190.htm#1608<->Eltseq :: ElementToSequence(a) : FldFinElt -&gt; [ FldFinElt ]
5<->ElementToSequence(a) <->text190.htm#1608<->ElementToSequence(a) : FldFinElt -&gt; [ FldFinElt ]
5<->Eltseq :: ElementToSequence(a, E) <->text190.htm#1609<->Eltseq :: ElementToSequence(a, E) : FldFinElt, FldFin -&gt; [ FldFinElt ]
5<->ElementToSequence(a, E) <->text190.htm#1609<->ElementToSequence(a, E) : FldFinElt, FldFin -&gt; [ FldFinElt ]
3<->sequence :<->text190.htm#1606<->sequence :: Sequence Conversions (FINITE FIELDS)
3<->creation :<->text190.htm<->creation :: Creation Functions (FINITE FIELDS)
3<->operation :<->text191.htm<->operation :: Structure Operations (FINITE FIELDS)
3<->related :<->text191.htm#1611<->related :: Related Structures (FINITE FIELDS)
5<->AdditiveGroup(F) <->text191.htm#1612<->AdditiveGroup(F) : FldFin -&gt; GrpAb, Map
5<->UnitGroup :: MultiplicativeGroup(F) <->text191.htm#1613<->UnitGroup :: MultiplicativeGroup(F) : FldFin -&gt; GrpAb, Map
5<->MultiplicativeGroup(F) <->text191.htm#1613<->MultiplicativeGroup(F) : FldFin -&gt; GrpAb, Map
5<->Set(F) <->text191.htm#1614<->Set(F) : FldFin -&gt; SetEnum
5<->VectorSpace(F, E) <->text191.htm#1615<->VectorSpace(F, E) : FldFin, FldFin -&gt; ModTupFld, Map
5<->VectorSpace(F, E, B) <->text191.htm#1616<->VectorSpace(F, E, B) : FldFin, FldFin, [ FldFinElt ] -&gt; ModTupFld, Map
5<->MatrixAlgebra(F, E) <->text191.htm#1617<->MatrixAlgebra(F, E) : FldFin, FldFin -&gt; AlgMat, Map
5<->MatrixAlgebra(A, E) <->text191.htm#1618<->MatrixAlgebra(A, E) : AlgMat, FldFin -&gt; AlgMat, Map
4<->FldFin_VectorSpace (Example H21E2)<->text191.htm#1619<->FldFin_VectorSpace (Example H21E2)
4<->Example-VectorSpace :<->text191.htm#1619<->Example-VectorSpace :: FldFin_VectorSpace (Example H21E2)
5<->GaloisGroup(K, k) <->text191.htm#1620<->GaloisGroup(K, k) : FldFin, FldFin -&gt; GrpPerm, [FldFinElt]
5<->AutomorphismGroup(K, k) <->text191.htm#1621<->AutomorphismGroup(K, k) : FldFin, FldFin -&gt; GrpPerm, [Map], Map
3<->related :<->text191.htm#1611<->related :: Related Structures (FINITE FIELDS)
3<->invariant :<->text191.htm#1622<->invariant :: Numerical Invariants (FINITE FIELDS)
5<->Degree(F) <->text191.htm#1623<->Degree(F) : FldFin -&gt; RngIntElt
5<->Degree(F, E) <->text191.htm#1624<->Degree(F, E) : FldFin, FldFin -&gt; RngIntElt
3<->invariant :<->text191.htm#1622<->invariant :: Numerical Invariants (FINITE FIELDS)
3<->defining-polynomial :<->text191.htm#1625<->defining-polynomial :: Defining Polynomial (FINITE FIELDS)
5<->DefiningPolynomial(F) <->text191.htm#1626<->DefiningPolynomial(F) : FldFin -&gt; RngUPolElt
5<->DefiningPolynomial(F, E) <->text191.htm#1627<->DefiningPolynomial(F, E) : FldFin -&gt; RngUPolElt
3<->defining-polynomial :<->text191.htm#1625<->defining-polynomial :: Defining Polynomial (FINITE FIELDS)
3<->predicate :<->text191.htm#1628<->predicate :: Ring Predicates and Booleans (FINITE FIELDS)
5<->IsConway(F) <->text191.htm#1629<->IsConway(F) : FldFin -&gt; BoolElt
5<->IsDefault(F) <->text191.htm#1630<->IsDefault(F) : FldFin -&gt; BoolElt
3<->predicate :<->text191.htm#1628<->predicate :: Ring Predicates and Booleans (FINITE FIELDS)
3<->root :<->text191.htm#1631<->root :: Roots (FINITE FIELDS)
5<->Roots(f) <->text191.htm#1632<->Roots(f) : RngUPolElt -&gt; [ &lt; FldFinElt, RngIntElt&gt; ]
5<->RootsInSplittingField(f) <->text191.htm#1633<->RootsInSplittingField(f) : RngUPolElt[FldFin] -&gt; [&lt;RngUPolElt, RngIntElt&gt;], FldFin
5<->FactorisationOverSplittingField :: FactorizationOverSplittingField(f) <->text191.htm#1634<->FactorisationOverSplittingField :: FactorizationOverSplittingField(f) : RngUPolElt[FldFin] -&gt; [&lt;RngUPolElt, RngIntElt&gt;], FldFin
5<->FactorizationOverSplittingField(f) <->text191.htm#1634<->FactorizationOverSplittingField(f) : RngUPolElt[FldFin] -&gt; [&lt;RngUPolElt, RngIntElt&gt;], FldFin
5<->RootOfUnity(n, K) <->text191.htm#1635<->RootOfUnity(n, K) : RngIntElt, FldFin -&gt; FldFinElt
4<->FldFin_Functions (Example H21E3)<->text191.htm#1636<->FldFin_Functions (Example H21E3)
4<->Example-Functions :<->text191.htm#1636<->Example-Functions :: FldFin_Functions (Example H21E3)
3<->root :<->text191.htm#1631<->root :: Roots (FINITE FIELDS)
3<->operation :<->text191.htm<->operation :: Structure Operations (FINITE FIELDS)
3<->operation-element :<->text192.htm<->operation-element :: Element Operations (FINITE FIELDS)
3<->arithmetic :<->text192.htm#1638<->arithmetic :: Arithmetic Operators (FINITE FIELDS)
3<->Boolean :<->text192.htm#1639<->Boolean :: Equality and Membership (FINITE FIELDS)
3<->generic :<->text192.htm#1640<->generic :: Parent and Category (FINITE FIELDS)
3<->element-Boolean :<->text192.htm#1641<->element-Boolean :: Predicates on Ring Elements (FINITE FIELDS)
5<->IsPrimitive(a) <->text192.htm#1642<->IsPrimitive(a) : FldFinElt -&gt; BoolElt
5<->IsPrimitive(f) <->text192.htm#1643<->IsPrimitive(f) : RngUPolElt -&gt; BoolElt
5<->IsNormal(a) <->text192.htm#1644<->IsNormal(a) : FldFinElt -&gt; BoolElt
5<->IsNormal(a, E) <->text192.htm#1645<->IsNormal(a, E) : FldFinElt -&gt; BoolElt
5<->IsSquare(a) <->text192.htm#1646<->IsSquare(a) : FldFinElt -&gt; BoolElt
3<->element-Boolean :<->text192.htm#1641<->element-Boolean :: Predicates on Ring Elements (FINITE FIELDS)
3<->minimal-characteristic-polynomial :<->text192.htm#1647<->minimal-characteristic-polynomial :: Minimal and Characteristic Polynomial (FINITE FIELDS)
5<->MinimalPolynomial(a) <->text192.htm#1648<->MinimalPolynomial(a) : FldFinElt -&gt; RngUPolElt
5<->MinimalPolynomial(a, E) <->text192.htm#1649<->MinimalPolynomial(a, E) : FldFinElt, FldFin -&gt; RngUPolElt
5<->CharacteristicPolynomial(a) <->text192.htm#1650<->CharacteristicPolynomial(a) : FldFinElt -&gt; RngUPolElt
5<->CharacteristicPolynomial(a, E) <->text192.htm#1651<->CharacteristicPolynomial(a, E) : FldFinElt, FldFin -&gt; RngUPolElt
3<->minimal-characteristic-polynomial :<->text192.htm#1647<->minimal-characteristic-polynomial :: Minimal and Characteristic Polynomial (FINITE FIELDS)
3<->norm-trace :<->text192.htm#1652<->norm-trace :: Norm, Trace and Frobenius (FINITE FIELDS)
5<->Norm(a) <->text192.htm#1653<->Norm(a) : FldFinElt -&gt; FldFinElt
5<->Norm(a, E) <->text192.htm#1654<->Norm(a, E) : FldFinElt, FldFin -&gt; FldFinElt
5<->NormAbs :: AbsoluteNorm(a) <->text192.htm#1655<->NormAbs :: AbsoluteNorm(a) : FldFinElt -&gt; FldFinElt
5<->AbsoluteNorm(a) <->text192.htm#1655<->AbsoluteNorm(a) : FldFinElt -&gt; FldFinElt
5<->Trace(a) <->text192.htm#1656<->Trace(a) : FldFinElt -&gt; FldFinElt
5<->Trace(a, E) <->text192.htm#1657<->Trace(a, E) : FldFinElt, FldFin -&gt; FldFinElt
5<->TraceAbs :: AbsoluteTrace(a) <->text192.htm#1658<->TraceAbs :: AbsoluteTrace(a) : FldFinElt -&gt; FldFinElt
5<->AbsoluteTrace(a) <->text192.htm#1658<->AbsoluteTrace(a) : FldFinElt -&gt; FldFinElt
5<->Frobenius(a) <->text192.htm#1659<->Frobenius(a) : FldFinElt -&gt; FldFinElt
5<->Frobenius(a, r) <->text192.htm#1660<->Frobenius(a, r) : FldFinElt, RngIntElt -&gt; FldFinElt
5<->Frobenius(a, E) <->text192.htm#1661<->Frobenius(a, E) : FldFinElt, FldFin -&gt; FldFinElt
5<->Frobenius(a, E, r) <->text192.htm#1662<->Frobenius(a, E, r) : FldFinElt, FldFin, RngIntElt -&gt; FldFinElt
5<->NormEquation(K, y) <->text192.htm#1663<->NormEquation(K, y) : FldFin, FldFin -&gt; BoolElt, FldFinElt
5<->Hilbert90(a, q) <->text192.htm#1664<->Hilbert90(a, q) : FldFinElt, RngIntElt -&gt; FldFinElt
5<->AdditiveHilbert90(a, q) <->text192.htm#1665<->AdditiveHilbert90(a, q) : FldFinElt, RngIntElt -&gt; FldFinElt
3<->norm-trace :<->text192.htm#1652<->norm-trace :: Norm, Trace and Frobenius (FINITE FIELDS)
3<->order-root :<->text192.htm#1666<->order-root :: Order and Roots (FINITE FIELDS)
5<->Order(a) <->text192.htm#1667<->Order(a) : FldFinElt -&gt; RngIntElt
5<->FactoredOrder(a) <->text192.htm#1668<->FactoredOrder(a) : FldFinElt -&gt; RngIntElt
5<->Sqrt :: SquareRoot(a) <->text192.htm#1669<->Sqrt :: SquareRoot(a) : FldFinElt -&gt; FldFinElt
5<->SquareRoot(a) <->text192.htm#1669<->SquareRoot(a) : FldFinElt -&gt; FldFinElt
5<->Root(a, n) <->text192.htm#1670<->Root(a, n) : FldFinElt, RngIntElt -&gt; FldFinElt
5<->IsPower(a, n) <->text192.htm#1671<->IsPower(a, n) : FldFinElt, RngIntElt -&gt; BoolElt, FldFinElt
5<->AllRoots(a, n) <->text192.htm#1672<->AllRoots(a, n) : FldFinElt, RngIntElt -&gt; SeqEnum
4<->FldFin_Functions (Example H21E4)<->text192.htm#1673<->FldFin_Functions (Example H21E4)
4<->Example-Functions :<->text192.htm#1673<->Example-Functions :: FldFin_Functions (Example H21E4)
3<->order-root :<->text192.htm#1666<->order-root :: Order and Roots (FINITE FIELDS)
3<->operation-element :<->text192.htm<->operation-element :: Element Operations (FINITE FIELDS)
3<->polynomial :<->text193.htm<->polynomial :: Polynomials for Finite Fields (FINITE FIELDS)
5<->IrreduciblePolynomial(F, n) <->text193.htm#1675<->IrreduciblePolynomial(F, n) : FldFin, RngIntElt -&gt; RngUPolElt
5<->RandomIrreduciblePolynomial(F, n) <->text193.htm#1676<->RandomIrreduciblePolynomial(F, n) : FldFin, RngIntElt -&gt; RngUPolElt
5<->IrreducibleLowTermGF2Polynomial(n) <->text193.htm#1677<->IrreducibleLowTermGF2Polynomial(n) : RngIntElt -&gt; RngUPolElt
5<->IrreducibleSparseGF2Polynomial(n) <->text193.htm#1678<->IrreducibleSparseGF2Polynomial(n) : RngIntElt -&gt; RngUPolElt
5<->PrimitivePolynomial(F, m) <->text193.htm#1679<->PrimitivePolynomial(F, m) : FldFin, RngIntElt -&gt; RngUPolElt
5<->AllIrreduciblePolynomials(F, m) <->text193.htm#1680<->AllIrreduciblePolynomials(F, m) : FldFin, RngIntElt -&gt; { RngUPolElt }
5<->ConwayPolynomial(p, n) <->text193.htm#1681<->ConwayPolynomial(p, n) : RngIntElt, RngIntElt -&gt; RngUPolElt
5<->ExistsConwayPolynomial(p, n) <->text193.htm#1682<->ExistsConwayPolynomial(p, n) : RngIntElt, RngIntElt -&gt; BoolElt, RngUPolElt
3<->polynomial :<->text193.htm<->polynomial :: Polynomials for Finite Fields (FINITE FIELDS)
3<->log :<->text194.htm<->log :: Discrete Logarithms (FINITE FIELDS)
5<->Log(x) <->text194.htm#1684<->Log(x) : FldFinElt -&gt; RngIntElt
5<->Log(b, x) <->text194.htm#1685<->Log(b, x) : FldFinElt, FldFinElt -&gt; RngIntElt
5<->ZechLog(K, n) <->text194.htm#1686<->ZechLog(K, n) : FldFin, RngIntElt -&gt; RngIntElt
5<->Sieve(K) <->text194.htm#1687<->Sieve(K) : FldFin -&gt;
5<->SetVerbose("FFLog", v) <->text194.htm#1688<->SetVerbose("FFLog", v) : MonStgElt, RngIntElt -&gt;
4<->FldFin_Log (Example H21E5)<->text194.htm#1689<->FldFin_Log (Example H21E5)
4<->Example-Log :<->text194.htm#1689<->Example-Log :: FldFin_Log (Example H21E5)
3<->log :<->text194.htm<->log :: Discrete Logarithms (FINITE FIELDS)
3<->permutation-polynomials :<->text195.htm<->permutation-polynomials :: Permutation Polynomials (FINITE FIELDS)
5<->DicksonFirst(n, a) <->text195.htm#1691<->DicksonFirst(n, a) : RngIntElt, RngElt -&gt; RngUPolElt
5<->DicksonSecond(n, a) <->text195.htm#1692<->DicksonSecond(n, a) : RngIntElt, RngElt -&gt; RngUPolElt
5<->IsProbablyPermutationPolynomial(p) <->text195.htm#1693<->IsProbablyPermutationPolynomial(p) : RngUPolElt -&gt; BoolElt
4<->FldFin_Dickson (Example H21E6)<->text195.htm#1694<->FldFin_Dickson (Example H21E6)
4<->Example-Dickson :<->text195.htm#1694<->Example-Dickson :: FldFin_Dickson (Example H21E6)
3<->permutation-polynomials :<->text195.htm<->permutation-polynomials :: Permutation Polynomials (FINITE FIELDS)
3<->finite-Galois-field :<->text188.htm<->finite-Galois-field :: FINITE FIELDS
3<->field_near :<->text198.htm<->field_near :: NEARFIELDS
3<->Introduction (NEARFIELDS)<->text199.htm<->Introduction (NEARFIELDS)
3<->nearfield-properties :<->text200.htm<->nearfield-properties :: Nearfield Properties (NEARFIELDS)
3<->twotrans :<->text200.htm#1700<->twotrans :: Sharply Doubly Transitive Groups (NEARFIELDS)
3<->nearfield-properties :<->text200.htm<->nearfield-properties :: Nearfield Properties (NEARFIELDS)
3<->nearfield-code :<->text201.htm<->nearfield-code :: Constructing Nearfields (NEARFIELDS)
3<->dickson :<->text201.htm#1702<->dickson :: Dickson Nearfields (NEARFIELDS)
5<->DicksonPairs(p, hlo, hhi, vlo, vhi ) <->text201.htm#1703<->DicksonPairs(p, hlo, hhi, vlo, vhi ) : RngIntElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt) -&gt; SeqEnum
5<->DicksonPairs(p, h1, v1) <->text201.htm#1704<->DicksonPairs(p, h1, v1) : RngIntElt, RngIntElt, RngIntElt) -&gt; SeqEnum
5<->DicksonTriples(p, hb, vb) <->text201.htm#1705<->DicksonTriples(p, hb, vb) : RngIntElt, RngIntElt, RngIntElt) -&gt; SeqEnum
4<->FldNear_dicksonpairs (Example H22E1)<->text201.htm#1706<->FldNear_dicksonpairs (Example H22E1)
4<->Example-dicksonpairs :<->text201.htm#1706<->Example-dicksonpairs :: FldNear_dicksonpairs (Example H22E1)
5<->NumberOfVariants(q, v) <->text201.htm#1707<->NumberOfVariants(q, v) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->NumberOfVariants(N) <->text201.htm#1708<->NumberOfVariants(N) : NfdDck -&gt; RngIntElt
5<->VariantRepresentatives(q, v) <->text201.htm#1709<->VariantRepresentatives(q, v) : RngIntElt, RngIntElt -&gt; SeqEnum
4<->FldNear_variants (Example H22E2)<->text201.htm#1710<->FldNear_variants (Example H22E2)
4<->Example-variants :<->text201.htm#1710<->Example-variants :: FldNear_variants (Example H22E2)
5<->DicksonNearfield(q, v : parameters) <->text201.htm#1711<->DicksonNearfield(q, v : parameters) : RngIntElt, RngIntElt -&gt; NfdDck
4<->FldNear_dickson (Example H22E3)<->text201.htm#1712<->FldNear_dickson (Example H22E3)
4<->Example-dickson :<->text201.htm#1712<->Example-dickson :: FldNear_dickson (Example H22E3)
3<->dickson :<->text201.htm#1702<->dickson :: Dickson Nearfields (NEARFIELDS)
3<->irreg :<->text201.htm#1713<->irreg :: Zassenhaus Nearfields (NEARFIELDS)
5<->ZassenhausNearfield(n) <->text201.htm#1714<->ZassenhausNearfield(n) : RngIntElt -&gt; NfdZss
4<->FldNear_zassenhaus (Example H22E4)<->text201.htm#1715<->FldNear_zassenhaus (Example H22E4)
4<->Example-zassenhaus :<->text201.htm#1715<->Example-zassenhaus :: FldNear_zassenhaus (Example H22E4)
3<->irreg :<->text201.htm#1713<->irreg :: Zassenhaus Nearfields (NEARFIELDS)
3<->nearfield-code :<->text201.htm<->nearfield-code :: Constructing Nearfields (NEARFIELDS)
3<->nearfield-eltops :<->text202.htm<->nearfield-eltops :: Operations on Elements (NEARFIELDS)
3<->arithmetic :<->text202.htm#1717<->arithmetic :: Nearfield Arithmetic (NEARFIELDS)
5<->Inverse(a) <->text202.htm#1718<->Inverse(a) : NfdElt -&gt; NfdElt
3<->arithmetic :<->text202.htm#1717<->arithmetic :: Nearfield Arithmetic (NEARFIELDS)
3<->Boolean :<->text202.htm#1719<->Boolean :: Equality and Membership (NEARFIELDS)
3<->generic :<->text202.htm#1720<->generic :: Parent and Category (NEARFIELDS)
5<->Element :: N ! x <->text202.htm#1721<->Element :: N ! x : Nfd, FldFinElt -&gt; NfdElt
5<->N ! x <->text202.htm#1721<->N ! x : Nfd, FldFinElt -&gt; NfdElt
5<->ElementToSequence(x) <->text202.htm#1722<->ElementToSequence(x) : NfdElt) -&gt; SeqEnum
3<->generic :<->text202.htm#1720<->generic :: Parent and Category (NEARFIELDS)
3<->element-Boolean :<->text202.htm#1723<->element-Boolean :: Predicates on Nearfield Elements (NEARFIELDS)
4<->FldNear_simplearith (Example H22E5)<->text202.htm#1724<->FldNear_simplearith (Example H22E5)
4<->Example-simplearith :<->text202.htm#1724<->Example-simplearith :: FldNear_simplearith (Example H22E5)
4<->FldNear_leftdist (Example H22E6)<->text202.htm#1725<->FldNear_leftdist (Example H22E6)
4<->Example-leftdist :<->text202.htm#1725<->Example-leftdist :: FldNear_leftdist (Example H22E6)
3<->element-Boolean :<->text202.htm#1723<->element-Boolean :: Predicates on Nearfield Elements (NEARFIELDS)
3<->nearfield-eltops :<->text202.htm<->nearfield-eltops :: Operations on Elements (NEARFIELDS)
3<->nearfield-ops :<->text203.htm<->nearfield-ops :: Operations on Nearfields (NEARFIELDS)
5<->Cardinality(N) <->text203.htm#1727<->Cardinality(N) : Nfd -&gt; RngIntElt
5<->Random(N) <->text203.htm#1728<->Random(N) : Nfd -&gt; NfdElt
5<->Identity(N) <->text203.htm#1729<->Identity(N) : Nfd -&gt; NfdElt
5<->Zero(N) <->text203.htm#1730<->Zero(N) : Nfd -&gt; NfdElt
5<->PrimeField(N) <->text203.htm#1731<->PrimeField(N) : Nfd -&gt; FldFin
5<->Kernel(N) <->text203.htm#1732<->Kernel(N) : Nfd -&gt; FldFin
3<->nearfield-ops :<->text203.htm<->nearfield-ops :: Operations on Nearfields (NEARFIELDS)
3<->nearfield-units :<->text204.htm<->nearfield-units :: The Group of Units (NEARFIELDS)
5<->UnitGroup(GrpPerm, N) <->text204.htm#1734<->UnitGroup(GrpPerm, N) : Nfd -> GrpPerm
5<->UnitGroup(GrpPC, N) <->text204.htm#1734<->UnitGroup(GrpPC, N) : NfdDck -> GrpPC
5<->UnitGroup(GrpPC, N) <->text204.htm#1734<->UnitGroup(GrpPC, N) : NfdZss -> GrpPC
5<->UnitGroup(N) <->text204.htm#1734<->UnitGroup(N) : Nfd -&gt; GrpMat, Map
4<->FldNear_unitgrp (Example H22E7)<->text204.htm#1735<->FldNear_unitgrp (Example H22E7)
4<->Example-unitgrp :<->text204.htm#1735<->Example-unitgrp :: FldNear_unitgrp (Example H22E7)
5<->Order(x) <->text204.htm#1736<->Order(x) : NfdElt -&gt; RngIntElt
5<->AffineGroup(GrpPerm, N) <->text204.htm#1737<->AffineGroup(GrpPerm, N) : Nfd -> GrpPerm
5<->AffineGroup(GrpPC, N) <->text204.htm#1737<->AffineGroup(GrpPC, N) : NfdDck -> GrpPC
5<->AffineGroup(GrpPC, N) <->text204.htm#1737<->AffineGroup(GrpPC, N) : NfdZss -> GrpPC
5<->AffineGroup(N) <->text204.htm#1737<->AffineGroup(N) : Nfd -&gt; GrpMat
5<->ExtendedUnitGroup(D) <->text204.htm#1738<->ExtendedUnitGroup(D) : NfdDck -&gt; GrpMat
3<->nearfield-units :<->text204.htm<->nearfield-units :: The Group of Units (NEARFIELDS)
3<->nearfield-iso :<->text205.htm<->nearfield-iso :: Automorphisms (NEARFIELDS)
5<->IsIsomorphic(N1, N2) <->text205.htm#1740<->IsIsomorphic(N1, N2) : NfdDck, NfdDck -&gt; BoolElt, Map
5<->AutomorphismGroup(N) <->text205.htm#1741<->AutomorphismGroup(N) : NfdZss -> GrpPerm
5<->AutomorphismGroup(N) <->text205.htm#1741<->AutomorphismGroup(N) : NfdDck -&gt; GrpPerm, Map
3<->nearfield-iso :<->text205.htm<->nearfield-iso :: Automorphisms (NEARFIELDS)
3<->nearfield-planes :<->text206.htm<->nearfield-planes :: Nearfield Planes (NEARFIELDS)
5<->ProjectivePlane( N : parameters) <->text206.htm#1743<->ProjectivePlane( N : parameters) : Nfd -&gt; PlaneProj, PlanePtSet, PlaneLnSet
4<->FldNear_projplane (Example H22E8)<->text206.htm#1744<->FldNear_projplane (Example H22E8)
4<->Example-projplane :<->text206.htm#1744<->Example-projplane :: FldNear_projplane (Example H22E8)
3<->Hughes Planes (NEARFIELDS)<->text206.htm#1745<->Hughes Planes (NEARFIELDS)
5<->HughesPlane(N : parameters) <->text206.htm#1746<->HughesPlane(N : parameters) : Nfd -&gt; PlaneProj, PlanePtSet, PlaneLnSet
4<->FldNear_hughes (Example H22E9)<->text206.htm#1747<->FldNear_hughes (Example H22E9)
4<->Example-hughes :<->text206.htm#1747<->Example-hughes :: FldNear_hughes (Example H22E9)
3<->Hughes Planes (NEARFIELDS)<->text206.htm#1745<->Hughes Planes (NEARFIELDS)
3<->nearfield-planes :<->text206.htm<->nearfield-planes :: Nearfield Planes (NEARFIELDS)
3<->field_near :<->text198.htm<->field_near :: NEARFIELDS
3<->univariate-polynomial :<->text209.htm<->univariate-polynomial :: UNIVARIATE POLYNOMIAL RINGS
3<->introduction :<->text210.htm<->introduction :: Introduction (UNIVARIATE POLYNOMIAL RINGS)
3<->vector-sparse-representation :<->text210.htm#1752<->vector-sparse-representation :: Representation (UNIVARIATE POLYNOMIAL RINGS)
3<->introduction :<->text210.htm<->introduction :: Introduction (UNIVARIATE POLYNOMIAL RINGS)
3<->creation :<->text211.htm<->creation :: Creation Functions (UNIVARIATE POLYNOMIAL RINGS)
3<->magma :<->text211.htm#1754<->magma :: Creation of Structures (UNIVARIATE POLYNOMIAL RINGS)
5<->PolynomialRing :: PolynomialAlgebra(R) <->text211.htm#1755<->PolynomialRing :: PolynomialAlgebra(R) : Rng -&gt; RngUPol
5<->PolynomialAlgebra(R) <->text211.htm#1755<->PolynomialAlgebra(R) : Rng -&gt; RngUPol
4<->RngPol_Creation (Example H23E1)<->text211.htm#1756<->RngPol_Creation (Example H23E1)
4<->Example-Creation :<->text211.htm#1756<->Example-Creation :: RngPol_Creation (Example H23E1)
3<->magma :<->text211.htm#1754<->magma :: Creation of Structures (UNIVARIATE POLYNOMIAL RINGS)
3<->option :<->text211.htm#1757<->option :: Print Options (UNIVARIATE POLYNOMIAL RINGS)
5<->AssignNames(~P, s) <->text211.htm#1758<->AssignNames(~P, s) : RngUPol, [ MonStgElt ]) -&gt;
5<->Name(P, i) <->text211.htm#1759<->Name(P, i) : RngUPol, RngIntElt -&gt; RngUPolElt
3<->option :<->text211.htm#1757<->option :: Print Options (UNIVARIATE POLYNOMIAL RINGS)
3<->element :<->text211.htm#1760<->element :: Creation of Elements (UNIVARIATE POLYNOMIAL RINGS)
5<->P . 1 <->text211.htm#1761<->P . 1 : RngUPol, RngInt -&gt; RngPolElt
5<->elt< P | a0, ..., ad  > <->text211.htm#1762<->elt&lt; P | a<sub>0</sub>, ..., a<sub>d</sub>  &gt; : RngUPol, RngElt, ..., RngElt -&gt; RngUPolElt
5<->P ! s <->text211.htm#1763<->P ! s : RngUPol, [ RngElt ] -> RngPolElt
5<->elt :: P ! s <->text211.htm#1763<->elt :: P ! s : RngUPol, RngElt -&gt; RngPolElt
5<->P ! s <->text211.htm#1763<->P ! s : RngUPol, RngElt -&gt; RngPolElt
5<->Polynomial(Q) <->text211.htm#1764<->Polynomial(Q) : [ RngElt ] -&gt; RngUPolElt
5<->Polynomial(R, Q) <->text211.htm#1765<->Polynomial(R, Q) : Rng, [ RngElt] -&gt; RngUPolElt
5<->Polynomial(R, f) <->text211.htm#1766<->Polynomial(R, f) : Rng, RngUPolElt -&gt; RngUPolElt
4<->RngPol_Polynomials (Example H23E2)<->text211.htm#1767<->RngPol_Polynomials (Example H23E2)
4<->Example-Polynomials :<->text211.htm#1767<->Example-Polynomials :: RngPol_Polynomials (Example H23E2)
3<->element :<->text211.htm#1760<->element :: Creation of Elements (UNIVARIATE POLYNOMIAL RINGS)
3<->creation :<->text211.htm<->creation :: Creation Functions (UNIVARIATE POLYNOMIAL RINGS)
3<->operation :<->text212.htm<->operation :: Structure Operations (UNIVARIATE POLYNOMIAL RINGS)
3<->generic :<->text212.htm#1769<->generic :: Related Structures (UNIVARIATE POLYNOMIAL RINGS)
5<->CoefficientRing :: BaseRing(P) <->text212.htm#1770<->CoefficientRing :: BaseRing(P) : RngUPol -&gt; Rng
5<->CoefficientRing(f) : RngUPolElt -> Rng :: BaseRing(P) <->text212.htm#1770<->CoefficientRing(f) : RngUPolElt -> Rng :: BaseRing(P) : RngUPol -&gt; Rng
5<->BaseRing(P) <->text212.htm#1770<->BaseRing(P) : RngUPol -&gt; Rng
3<->generic :<->text212.htm#1769<->generic :: Related Structures (UNIVARIATE POLYNOMIAL RINGS)
3<->change-ring :<->text212.htm#1771<->change-ring :: Changing Rings (UNIVARIATE POLYNOMIAL RINGS)
5<->ChangeRing(P, S) <->text212.htm#1772<->ChangeRing(P, S) : RngUPol, Rng -&gt; RngUPol, Map
5<->ChangeRing(P, S, f) <->text212.htm#1773<->ChangeRing(P, S, f) : RngUPol, Rng, Map -&gt; RngUPol, Map
4<->RngPol_ChangeRing (Example H23E3)<->text212.htm#1774<->RngPol_ChangeRing (Example H23E3)
4<->Example-ChangeRing :<->text212.htm#1774<->Example-ChangeRing :: RngPol_ChangeRing (Example H23E3)
3<->change-ring :<->text212.htm#1771<->change-ring :: Changing Rings (UNIVARIATE POLYNOMIAL RINGS)
3<->invariant :<->text212.htm#1775<->invariant :: Numerical Invariants (UNIVARIATE POLYNOMIAL RINGS)
5<->Rank(P) <->text212.htm#1776<->Rank(P) : RngUPol -&gt; RngIntElt
5<-># P <->text212.htm#1777<-># P : RngUPolRes -&gt; RngIntElt
3<->invariant :<->text212.htm#1775<->invariant :: Numerical Invariants (UNIVARIATE POLYNOMIAL RINGS)
3<->boolean :<->text212.htm#1778<->boolean :: Ring Predicates and Booleans (UNIVARIATE POLYNOMIAL RINGS)
3<->homomorphism :<->text212.htm#1779<->homomorphism :: Homomorphisms (UNIVARIATE POLYNOMIAL RINGS)
5<->hom <->text212.htm#1780<->hom< P \ar S | y > : RngPol, Rng, RngElt -> Map
5<->hom< P -> S | f, y > <->text212.htm#1780<->hom&lt; P -&gt; S | f, y &gt; : RngUPol, Rng, Map, RngElt -&gt; Map
4<->RngPol_Homomorphism (Example H23E4)<->text212.htm#1781<->RngPol_Homomorphism (Example H23E4)
4<->Example-Homomorphism :<->text212.htm#1781<->Example-Homomorphism :: RngPol_Homomorphism (Example H23E4)
3<->homomorphism :<->text212.htm#1779<->homomorphism :: Homomorphisms (UNIVARIATE POLYNOMIAL RINGS)
3<->operation :<->text212.htm<->operation :: Structure Operations (UNIVARIATE POLYNOMIAL RINGS)
3<->operation-element :<->text213.htm<->operation-element :: Element Operations (UNIVARIATE POLYNOMIAL RINGS)
3<->parent-category :<->text213.htm#1783<->parent-category :: Parent and Category (UNIVARIATE POLYNOMIAL RINGS)
3<->arithmetic :<->text213.htm#1784<->arithmetic :: Arithmetic Operators (UNIVARIATE POLYNOMIAL RINGS)
3<->equality-membership :<->text213.htm#1785<->equality-membership :: Equality and Membership (UNIVARIATE POLYNOMIAL RINGS)
3<->element-Boolean :<->text213.htm#1786<->element-Boolean :: Predicates on Ring Elements (UNIVARIATE POLYNOMIAL RINGS)
3<->coefficient-term :<->text213.htm#1787<->coefficient-term :: Coefficients and Terms (UNIVARIATE POLYNOMIAL RINGS)
5<->ElementToSequence :: Coefficients(p) <->text213.htm#1788<->ElementToSequence :: Coefficients(p) : RngUPolElt -&gt; [ RngElt ]
5<->Eltseq :: Coefficients(p) <->text213.htm#1788<->Eltseq :: Coefficients(p) : RngUPolElt -&gt; [ RngElt ]
5<->Coefficients(p) <->text213.htm#1788<->Coefficients(p) : RngUPolElt -&gt; [ RngElt ]
5<->Coefficient(p, i) <->text213.htm#1789<->Coefficient(p, i) : RngUPolElt, RngIntElt -&gt; RngElt
5<->MonomialCoefficient(p, m) <->text213.htm#1790<->MonomialCoefficient(p, m) : RngUPolElt, RngUPolElt -&gt; RngElt
5<->LeadingCoefficient(p) <->text213.htm#1791<->LeadingCoefficient(p) : RngUPolElt -&gt; RngElt
5<->TrailingCoefficient(p) <->text213.htm#1792<->TrailingCoefficient(p) : RngUPolElt -&gt; RngElt
5<->ConstantCoefficient(p) <->text213.htm#1793<->ConstantCoefficient(p) : RngUPolElt -&gt; RngElt
5<->Terms(p) <->text213.htm#1794<->Terms(p) : RngUPolElt -&gt; [ RngUPolElt ]
5<->LeadingTerm(p) <->text213.htm#1795<->LeadingTerm(p) : RngUPolElt -&gt; RngUPolElt
5<->TrailingTerm(p) <->text213.htm#1796<->TrailingTerm(p) : RngUPolElt -&gt; RngUPolElt
5<->Monomials(p) <->text213.htm#1797<->Monomials(p) : RngUPolElt -&gt; SeqEnum
5<->Support(p) <->text213.htm#1798<->Support(p) : RngUPolElt -&gt; [RngIntElt], [RngElt]
5<->Round(p) <->text213.htm#1799<->Round(p) : RngUPolElt -&gt; RngUPolElt
5<->Valuation(p) <->text213.htm#1800<->Valuation(p) : RngUPolElt -&gt; RngIntElt
3<->coefficient-term :<->text213.htm#1787<->coefficient-term :: Coefficients and Terms (UNIVARIATE POLYNOMIAL RINGS)
3<->degree :<->text213.htm#1801<->degree :: Degree (UNIVARIATE POLYNOMIAL RINGS)
5<->Degree(p) <->text213.htm#1802<->Degree(p) : RngUPolElt -&gt; RngIntElt
3<->degree :<->text213.htm#1801<->degree :: Degree (UNIVARIATE POLYNOMIAL RINGS)
3<->root :<->text213.htm#1803<->root :: Roots (UNIVARIATE POLYNOMIAL RINGS)
5<->Roots(p) <->text213.htm#1804<->Roots(p) : RngUPolElt -&gt; [ &lt; RngElt, RngIntElt&gt; ]
5<->Roots(p, S) <->text213.htm#1805<->Roots(p, S) : RngUPolElt -&gt; [ &lt; RngElt, RngIntElt&gt; ]
5<->HasRoot(p) <->text213.htm#1806<->HasRoot(p) : RngUPolElt -&gt; BoolElt, RngElt
5<->HasRoot(p, S) <->text213.htm#1807<->HasRoot(p, S) : RngUPolElt, Rng -&gt; BoolElt, RngElt
5<->SmallRoots(p, N, X) <->text213.htm#1808<->SmallRoots(p, N, X) : RngUPolElt, RngElt, RngElt -&gt; [RngElt]
4<->RngPol_SmallRootsUsage (Example H23E5)<->text213.htm#1809<->RngPol_SmallRootsUsage (Example H23E5)
4<->Example-SmallRootsUsage :<->text213.htm#1809<->Example-SmallRootsUsage :: RngPol_SmallRootsUsage (Example H23E5)
5<->SetVerbose("SmallRoots", v) <->text213.htm#1810<->SetVerbose("SmallRoots", v) : MonStgElt, RngIntElt -&gt;
3<->root :<->text213.htm#1803<->root :: Roots (UNIVARIATE POLYNOMIAL RINGS)
3<->derivative-integral :<->text213.htm#1811<->derivative-integral :: Derivative, Integral (UNIVARIATE POLYNOMIAL RINGS)
5<->Derivative(p) <->text213.htm#1812<->Derivative(p) : RngUPolElt -&gt; RngUPolElt
5<->Derivative(p, n) <->text213.htm#1813<->Derivative(p, n) : RngUPolElt, RngIntElt -&gt; RngUPolElt
5<->Integral(p) <->text213.htm#1814<->Integral(p) : RngUPolElt -&gt; RngUPolElt
3<->derivative-integral :<->text213.htm#1811<->derivative-integral :: Derivative, Integral (UNIVARIATE POLYNOMIAL RINGS)
3<->interpolation-evaluation :<->text213.htm#1815<->interpolation-evaluation :: Evaluation, Interpolation (UNIVARIATE POLYNOMIAL RINGS)
5<->Evaluate(p, r) <->text213.htm#1816<->Evaluate(p, r) : RngUPolElt, RngElt -&gt; RngElt
5<->Interpolation(I, V) <->text213.htm#1817<->Interpolation(I, V) : [ RngElt ], [ RngElt ] -&gt; RngUPolElt
3<->interpolation-evaluation :<->text213.htm#1815<->interpolation-evaluation :: Evaluation, Interpolation (UNIVARIATE POLYNOMIAL RINGS)
3<->division :<->text213.htm#1818<->division :: Quotient and Remainder (UNIVARIATE POLYNOMIAL RINGS)
5<->Quotrem(f, g) <->text213.htm#1819<->Quotrem(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt, RngUPolElt
5<->f div g <->text213.htm#1820<->f div g : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->IsDivisibleBy(a, b) <->text213.htm#1821<->IsDivisibleBy(a, b) : RngUPolElt, RngUPolElt -&gt; BoolElt, RngUPolElt
5<->ExactQuotient(f, g) <->text213.htm#1822<->ExactQuotient(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->f mod g <->text213.htm#1823<->f mod g : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->Valuation(f, g) <->text213.htm#1824<->Valuation(f, g) : RngUPolElt, RngUPolElt -&gt; RngIntElt
5<->Reductum(f) <->text213.htm#1825<->Reductum(f) : RngUPolElt -&gt; RngUPolElt
5<->PseudoRemainder(f, g) <->text213.htm#1826<->PseudoRemainder(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->EuclideanNorm(p) <->text213.htm#1827<->EuclideanNorm(p) : RngUPol -&gt; RngIntElt
3<->division :<->text213.htm#1818<->division :: Quotient and Remainder (UNIVARIATE POLYNOMIAL RINGS)
3<->modular :<->text213.htm#1828<->modular :: Modular Arithmetic (UNIVARIATE POLYNOMIAL RINGS)
5<->Modexp(f, n, g) <->text213.htm#1829<->Modexp(f, n, g) : RngUPolElt, RngIntElt, RngUPolElt -&gt; RngUPolElt
5<->CRT :: ChineseRemainderTheorem(X, M) <->text213.htm#1830<->CRT :: ChineseRemainderTheorem(X, M) : [RngUPolElt], [RngUPolElt] -&gt; RngUPolElt
5<->ChineseRemainderTheorem(X, M) <->text213.htm#1830<->ChineseRemainderTheorem(X, M) : [RngUPolElt], [RngUPolElt] -&gt; RngUPolElt
3<->modular :<->text213.htm#1828<->modular :: Modular Arithmetic (UNIVARIATE POLYNOMIAL RINGS)
3<->other-operations :<->text213.htm#1831<->other-operations :: Other Operations (UNIVARIATE POLYNOMIAL RINGS)
5<->ReciprocalPolynomial(f) <->text213.htm#1832<->ReciprocalPolynomial(f) : RngUPolElt -&gt; RngUPolElt
5<->PowerPolynomial(f,n) <->text213.htm#1833<->PowerPolynomial(f,n) : RngUPolElt, RngIntElt -&gt; RngUPolElt
5<->f ^ M <->text213.htm#1834<->f ^ M : RngUPolElt, Mtrx -&gt; RngUPolElt
3<->other-operations :<->text213.htm#1831<->other-operations :: Other Operations (UNIVARIATE POLYNOMIAL RINGS)
3<->operation-element :<->text213.htm<->operation-element :: Element Operations (UNIVARIATE POLYNOMIAL RINGS)
3<->common :<->text214.htm<->common :: Common Divisors and Common Multiples (UNIVARIATE POLYNOMIAL RINGS)
3<->gcd-lcm :<->text214.htm#1836<->gcd-lcm :: Common Divisors and Common Multiples (UNIVARIATE POLYNOMIAL RINGS)
5<->Gcd :: GreatestCommonDivisor(f, g) <->text214.htm#1837<->Gcd :: GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->GCD :: GreatestCommonDivisor(f, g) <->text214.htm#1837<->GCD :: GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->GreatestCommonDivisor(f, g) <->text214.htm#1837<->GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->Xgcd :: ExtendedGreatestCommonDivisor(f, g) <->text214.htm#1838<->Xgcd :: ExtendedGreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt, RngUPolElt, RngUPolElt
5<->XGCD :: ExtendedGreatestCommonDivisor(f, g) <->text214.htm#1838<->XGCD :: ExtendedGreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt, RngUPolElt, RngUPolElt
5<->ExtendedGreatestCommonDivisor(f, g) <->text214.htm#1838<->ExtendedGreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt, RngUPolElt, RngUPolElt
5<->Lcm :: LeastCommonMultiple(f, g) <->text214.htm#1839<->Lcm :: LeastCommonMultiple(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->LCM :: LeastCommonMultiple(f, g) <->text214.htm#1839<->LCM :: LeastCommonMultiple(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->LeastCommonMultiple(f, g) <->text214.htm#1839<->LeastCommonMultiple(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->Normalize(f) <->text214.htm#1840<->Normalize(f) : RngUPolElt -&gt; RngUPolElt
3<->gcd-lcm :<->text214.htm#1836<->gcd-lcm :: Common Divisors and Common Multiples (UNIVARIATE POLYNOMIAL RINGS)
3<->content :<->text214.htm#1841<->content :: Content and Primitive Part (UNIVARIATE POLYNOMIAL RINGS)
5<->Content(p) <->text214.htm#1842<->Content(p) : RngUPolElt -&gt; RngIntElt
5<->PrimitivePart(p) <->text214.htm#1843<->PrimitivePart(p) : RngUPolElt -&gt; RngUPolElt
5<->Contpp :: ContentAndPrimitivePart(p) <->text214.htm#1844<->Contpp :: ContentAndPrimitivePart(p) : RngUPolElt -&gt; RngIntElt, RngUPolElt
5<->ContentAndPrimitivePart(p) <->text214.htm#1844<->ContentAndPrimitivePart(p) : RngUPolElt -&gt; RngIntElt, RngUPolElt
3<->content :<->text214.htm#1841<->content :: Content and Primitive Part (UNIVARIATE POLYNOMIAL RINGS)
3<->common :<->text214.htm<->common :: Common Divisors and Common Multiples (UNIVARIATE POLYNOMIAL RINGS)
3<->integer :<->text215.htm<->integer :: Polynomials over the Integers (UNIVARIATE POLYNOMIAL RINGS)
5<->Sign(p) <->text215.htm#1846<->Sign(p) : RngUPolElt -&gt; RngIntElt
5<->AbsoluteValue(p) <->text215.htm#1847<->AbsoluteValue(p) : RngUPolElt -&gt; RngUPolElt
5<->MaxNorm(p) <->text215.htm#1848<->MaxNorm(p) : RngUPolElt -&gt; RngIntElt
5<->SumNorm(p) <->text215.htm#1849<->SumNorm(p) : RngUPolElt -&gt; RngIntElt
5<->DedekindTest(p, m) <->text215.htm#1850<->DedekindTest(p, m) : RngUPolElt, RngIntElt -&gt; Boolelt
3<->integer :<->text215.htm<->integer :: Polynomials over the Integers (UNIVARIATE POLYNOMIAL RINGS)
3<->finitefields :<->text216.htm<->finitefields :: Polynomials over Finite Fields (UNIVARIATE POLYNOMIAL RINGS)
5<->PrimePolynomials(R, d, n) <->text216.htm#1852<->PrimePolynomials(R, d, n) : RngUPol, RngIntElt, RngIntElt -> SeqEnum[ RngUPolElt ]
5<->PrimePolynomials(R, d) <->text216.htm#1852<->PrimePolynomials(R, d) : RngUPol, RngIntElt -&gt; SeqEnum[ RngUPolElt ]
5<->RandomPrimePolynomial(R, d) <->text216.htm#1853<->RandomPrimePolynomial(R, d) : RngUPol, RngIntElt -&gt; RngUPolElt
5<->NumberOfPrimePolynomials(K, d) <->text216.htm#1854<->NumberOfPrimePolynomials(K, d) : FldFin, RngIntElt -> RngIntElt
5<->NumberOfPrimePolynomials(R, d) <->text216.htm#1854<->NumberOfPrimePolynomials(R, d) : RngUPol, RngIntElt -> RngIntElt
5<->NumberOfPrimePolynomials(q, d) <->text216.htm#1854<->NumberOfPrimePolynomials(q, d) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->JacobiSymbol(a,b) <->text216.htm#1855<->JacobiSymbol(a,b) : RngUPol, RngUPol -&gt; RngIntElt
3<->finitefields :<->text216.htm<->finitefields :: Polynomials over Finite Fields (UNIVARIATE POLYNOMIAL RINGS)
3<->factorization :<->text217.htm<->factorization :: Factorization (UNIVARIATE POLYNOMIAL RINGS)
3<->factorization-irreducibility :<->text217.htm#1857<->factorization-irreducibility :: Factorization and Irreducibility (UNIVARIATE POLYNOMIAL RINGS)
5<->Factorisation :: Factorization(f) <->text217.htm#1858<->Factorisation :: Factorization(f) : RngUPolElt -&gt; [ &lt; RngUPolElt, RngIntElt &gt;], RngElt
5<->Factorization(f) <->text217.htm#1858<->Factorization(f) : RngUPolElt -&gt; [ &lt; RngUPolElt, RngIntElt &gt;], RngElt
5<->HasPolynomialFactorization(R) <->text217.htm#1859<->HasPolynomialFactorization(R) : Rng -&gt; BoolElt
5<->SetVerbose("PolyFact", v) <->text217.htm#1860<->SetVerbose("PolyFact", v) : MonStgElt, RngIntElt -&gt;
5<->Facpol :: FactorisationToPolynomial(f) <->text217.htm#1861<->Facpol :: FactorisationToPolynomial(f) : [Tup] -&gt; BoolElt
5<->FactorisationToPolynomial(f) <->text217.htm#1861<->FactorisationToPolynomial(f) : [Tup] -&gt; BoolElt
4<->RngPol_SwinnertonDyerPolynomial (Example H23E6)<->text217.htm#1862<->RngPol_SwinnertonDyerPolynomial (Example H23E6)
4<->Example-SwinnertonDyerPolynomial :<->text217.htm#1862<->Example-SwinnertonDyerPolynomial :: RngPol_SwinnertonDyerPolynomial (Example H23E6)
5<->SquarefreeFactorization(f) <->text217.htm#1863<->SquarefreeFactorization(f) : RngUPolElt -&gt; [ &lt;RngUPolElt, RngIntElt&gt; ]
5<->DistinctDegreeFactorization(f) <->text217.htm#1864<->DistinctDegreeFactorization(f) : RngUPolElt -&gt; [ &lt;RngIntElt, RngUPolElt&gt; ]
5<->EqualDegreeFactorization(f, d, g) <->text217.htm#1865<->EqualDegreeFactorization(f, d, g) : RngUPolElt, RngIntElt, RngUPolElt -&gt; [ RngUPolElt ]
5<->IsIrreducible(f) <->text217.htm#1866<->IsIrreducible(f) : RngUPolElt -&gt; BoolElt
5<->IsSeparable(f) <->text217.htm#1867<->IsSeparable(f) : RngUPolElt -&gt; BoolElt
5<->QMatrix(f) <->text217.htm#1868<->QMatrix(f) : RngUPolElt -&gt; AlgMatElt
3<->factorization-irreducibility :<->text217.htm#1857<->factorization-irreducibility :: Factorization and Irreducibility (UNIVARIATE POLYNOMIAL RINGS)
3<->resultant-discriminant :<->text217.htm#1869<->resultant-discriminant :: Resultant and Discriminant (UNIVARIATE POLYNOMIAL RINGS)
5<->Discriminant(f) <->text217.htm#1870<->Discriminant(f) : RngUPolElt -&gt; RngIntElt
5<->Resultant(f, g) <->text217.htm#1871<->Resultant(f, g) : RngUPolElt, RngUPolElt -&gt; RngElt
5<->CompanionMatrix(f) <->text217.htm#1872<->CompanionMatrix(f) : RngUPolElt -&gt; AlgMatElt
3<->resultant-discriminant :<->text217.htm#1869<->resultant-discriminant :: Resultant and Discriminant (UNIVARIATE POLYNOMIAL RINGS)
3<->hensel :<->text217.htm#1873<->hensel :: Hensel Lifting (UNIVARIATE POLYNOMIAL RINGS)
5<->HenselLift(f, s, P) <->text217.htm#1874<->HenselLift(f, s, P) : RngUPolElt, [ RngUPolElt ], RngUPol -&gt; [ RngUPolElt ]
4<->RngPol_Hensel (Example H23E7)<->text217.htm#1875<->RngPol_Hensel (Example H23E7)
4<->Example-Hensel :<->text217.htm#1875<->Example-Hensel :: RngPol_Hensel (Example H23E7)
3<->hensel :<->text217.htm#1873<->hensel :: Hensel Lifting (UNIVARIATE POLYNOMIAL RINGS)
3<->factorization :<->text217.htm<->factorization :: Factorization (UNIVARIATE POLYNOMIAL RINGS)
3<->ideal-quotient :<->text218.htm<->ideal-quotient :: Ideals and Quotient Rings (UNIVARIATE POLYNOMIAL RINGS)
3<->creation :<->text218.htm#1877<->creation :: Creation of Ideals and Quotients (UNIVARIATE POLYNOMIAL RINGS)
5<->ideal< R | a1, ..., ar > <->text218.htm#1878<->ideal&lt; R | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngUPol, RngUPolElt, ..., RngUPolElt -&gt; RngUPol
5<->quo <->text218.htm#1879<->quo< R | a$_1$, ..., a$_r$ > : RngUPol, RngUPolElt, ..., RngUPolElt -> RngUPolRes, Map
5<->quo< R | I > <->text218.htm#1879<->quo&lt; R | I &gt; : RngUPol, RngUPol -&gt; RngUPolRes
3<->creation :<->text218.htm#1877<->creation :: Creation of Ideals and Quotients (UNIVARIATE POLYNOMIAL RINGS)
3<->arithmetic :<->text218.htm#1880<->arithmetic :: Ideal Arithmetic (UNIVARIATE POLYNOMIAL RINGS)
5<->I + J <->text218.htm#1881<->I + J : RngUPol, RngUPol -&gt; RngUPol
5<->I * J <->text218.htm#1882<->I * J : RngUPol, RngUPol -&gt; RngUPol
5<->I meet J <->text218.htm#1883<->I meet J : RngUPol, RngUPol -&gt; RngUPol
5<->a in I <->text218.htm#1884<->a in I : RngUPolElt, RngUPol -&gt; BoolElt
5<->a notin I <->text218.htm#1885<->a notin I : RngUPolElt, RngUPol -&gt; BoolElt
5<->I eq J <->text218.htm#1886<->I eq J : RngUPol, RngUPol -&gt; BoolElt
5<->I ne J <->text218.htm#1887<->I ne J : RngUPol, RngUPol -&gt; BoolElt
5<->I subset J <->text218.htm#1888<->I subset J : RngUPol, RngUPol -&gt; BoolElt
5<->I notsubset J <->text218.htm#1889<->I notsubset J : RngUPol, RngUPol -&gt; BoolElt
3<->arithmetic :<->text218.htm#1880<->arithmetic :: Ideal Arithmetic (UNIVARIATE POLYNOMIAL RINGS)
3<->other-ideal :<->text218.htm#1890<->other-ideal :: Other Functions on Ideals (UNIVARIATE POLYNOMIAL RINGS)
5<->I . 1 <->text218.htm#1891<->I . 1 : RngUPol -&gt; RngUPolElt
3<->other-ideal :<->text218.htm#1890<->other-ideal :: Other Functions on Ideals (UNIVARIATE POLYNOMIAL RINGS)
3<->other-quotient :<->text218.htm#1892<->other-quotient :: Other Functions on Quotients (UNIVARIATE POLYNOMIAL RINGS)
5<->Modulus(Q) <->text218.htm#1893<->Modulus(Q) : RngUPolRes -&gt; RngUPolElt
5<->PreimageRing(Q) <->text218.htm#1894<->PreimageRing(Q) : RngUPolRes -&gt; RngUPol
3<->other-quotient :<->text218.htm#1892<->other-quotient :: Other Functions on Quotients (UNIVARIATE POLYNOMIAL RINGS)
3<->ideal-quotient :<->text218.htm<->ideal-quotient :: Ideals and Quotient Rings (UNIVARIATE POLYNOMIAL RINGS)
3<->families-polynomials :<->text219.htm<->families-polynomials :: Special Families of Polynomials (UNIVARIATE POLYNOMIAL RINGS)
3<->orthogonal-polynomials :<->text219.htm#1896<->orthogonal-polynomials :: Orthogonal Polynomials (UNIVARIATE POLYNOMIAL RINGS)
5<->ChebyshevT :: ChebyshevFirst(n) <->text219.htm#1897<->ChebyshevT :: ChebyshevFirst(n) : RngIntElt -&gt; RngUPolElt
5<->ChebyshevFirst(n) <->text219.htm#1897<->ChebyshevFirst(n) : RngIntElt -&gt; RngUPolElt
5<->ChebyshevU :: ChebyshevSecond(n) <->text219.htm#1898<->ChebyshevU :: ChebyshevSecond(n) : RngIntElt -&gt; RngUPolElt
5<->ChebyshevSecond(n) <->text219.htm#1898<->ChebyshevSecond(n) : RngIntElt -&gt; RngUPolElt
5<->LegendrePolynomial(n) <->text219.htm#1899<->LegendrePolynomial(n) : RngIntElt -&gt; RngUPolElt
5<->LaguerrePolynomial(n, m) <->text219.htm#1900<->LaguerrePolynomial(n, m) : RngIntElt, RngElt -> RngUPolElt
5<->LaguerrePolynomial(n) <->text219.htm#1900<->LaguerrePolynomial(n) : RngIntElt -&gt; RngUPolElt
5<->HermitePolynomial(n) <->text219.htm#1901<->HermitePolynomial(n) : RngIntElt -&gt; RngUPolElt
5<->GegenbauerPolynomial(n, m) <->text219.htm#1902<->GegenbauerPolynomial(n, m) : RngIntElt, RngElt -&gt;RngUPolElt
3<->orthogonal-polynomials :<->text219.htm#1896<->orthogonal-polynomials :: Orthogonal Polynomials (UNIVARIATE POLYNOMIAL RINGS)
3<->permutation-polynomials :<->text219.htm#1903<->permutation-polynomials :: Permutation Polynomials (UNIVARIATE POLYNOMIAL RINGS)
5<->DicksonFirst(n, a) <->text219.htm#1904<->DicksonFirst(n, a) : RngIntElt, RngElt -&gt; RngUPolElt
5<->DicksonSecond(n, a) <->text219.htm#1905<->DicksonSecond(n, a) : RngIntElt, RngElt -&gt; RngUPolElt
3<->permutation-polynomials :<->text219.htm#1903<->permutation-polynomials :: Permutation Polynomials (UNIVARIATE POLYNOMIAL RINGS)
3<->bernoulli-polynomial :<->text219.htm#1906<->bernoulli-polynomial :: The Bernoulli Polynomial (UNIVARIATE POLYNOMIAL RINGS)
5<->BernoulliPolynomial(n) <->text219.htm#1907<->BernoulliPolynomial(n) : RngIntElt -&gt; RngUPolElt
3<->bernoulli-polynomial :<->text219.htm#1906<->bernoulli-polynomial :: The Bernoulli Polynomial (UNIVARIATE POLYNOMIAL RINGS)
3<->swinnerton-dyer :<->text219.htm#1908<->swinnerton-dyer :: Swinnerton-Dyer Polynomials (UNIVARIATE POLYNOMIAL RINGS)
5<->SwinnertonDyerPolynomial(n) <->text219.htm#1909<->SwinnertonDyerPolynomial(n) : RngIntElt -&gt; RngUPolElt
3<->swinnerton-dyer :<->text219.htm#1908<->swinnerton-dyer :: Swinnerton-Dyer Polynomials (UNIVARIATE POLYNOMIAL RINGS)
3<->families-polynomials :<->text219.htm<->families-polynomials :: Special Families of Polynomials (UNIVARIATE POLYNOMIAL RINGS)
3<->univariate-polynomial :<->text209.htm<->univariate-polynomial :: UNIVARIATE POLYNOMIAL RINGS
3<->distributive-multivariate-polynomial :<->text222.htm<->distributive-multivariate-polynomial :: MULTIVARIATE POLYNOMIAL RINGS
3<->introduction :<->text223.htm<->introduction :: Introduction (MULTIVARIATE POLYNOMIAL RINGS)
3<->representation :<->text223.htm#1914<->representation :: Representation (MULTIVARIATE POLYNOMIAL RINGS)
3<->introduction :<->text223.htm<->introduction :: Introduction (MULTIVARIATE POLYNOMIAL RINGS)
3<->rings :<->text224.htm<->rings :: Polynomial Rings and Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
3<->creation :<->text224.htm#1916<->creation :: Creation of Polynomial Rings (MULTIVARIATE POLYNOMIAL RINGS)
5<->PolynomialAlgebra :: PolynomialRing(R, n) <->text224.htm#1917<->PolynomialAlgebra :: PolynomialRing(R, n) : Rng, RngIntElt -&gt; RngMPol
5<->PolynomialRing(R, n) <->text224.htm#1917<->PolynomialRing(R, n) : Rng, RngIntElt -&gt; RngMPol
5<->PolynomialAlgebra :: PolynomialRing(R, n, order) <->text224.htm#1918<->PolynomialAlgebra :: PolynomialRing(R, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPol
5<->PolynomialRing(R, n, order) <->text224.htm#1918<->PolynomialRing(R, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPol
4<->RngMPol_AssignNames (Example H24E1)<->text224.htm#1919<->RngMPol_AssignNames (Example H24E1)
4<->Example-AssignNames :<->text224.htm#1919<->Example-AssignNames :: RngMPol_AssignNames (Example H24E1)
4<->RngMPol_Global (Example H24E2)<->text224.htm#1920<->RngMPol_Global (Example H24E2)
4<->Example-Global :<->text224.htm#1920<->Example-Global :: RngMPol_Global (Example H24E2)
3<->creation :<->text224.htm#1916<->creation :: Creation of Polynomial Rings (MULTIVARIATE POLYNOMIAL RINGS)
3<->print :<->text224.htm#1921<->print :: Print Names (MULTIVARIATE POLYNOMIAL RINGS)
5<->AssignNames(~P, s) <->text224.htm#1922<->AssignNames(~P, s) : RngMPol, [ MonStgElt ]) -&gt;
5<->Name(P, i) <->text224.htm#1923<->Name(P, i) : RngMPol, RngIntElt -&gt; RngMPolElt
3<->print :<->text224.htm#1921<->print :: Print Names (MULTIVARIATE POLYNOMIAL RINGS)
3<->graded-weight :<->text224.htm#1924<->graded-weight :: Graded Polynomial Rings (MULTIVARIATE POLYNOMIAL RINGS)
3<->element :<->text224.htm#1925<->element :: Creation of Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
5<->P . i <->text224.htm#1926<->P . i : RngMPol, RngInt -&gt; RngMPolElt
5<->! :: elt< R | a  > <->text224.htm#1927<->! :: elt&lt; R | a  &gt; : RngMPol, RngElt -&gt; RngMPolElt
5<->R ! s : RngMPol, [ RngElt ] -> RngMPolElt :: elt< R | a  > <->text224.htm#1927<->R ! s : RngMPol, [ RngElt ] -> RngMPolElt :: elt&lt; R | a  &gt; : RngMPol, RngElt -&gt; RngMPolElt
5<->elt <->text224.htm#1927<->elt< R | s > : RngMPol, [ RngElt ] -> RngMPolElt
5<->elt< R | a  > <->text224.htm#1927<->elt&lt; R | a  &gt; : RngMPol, RngElt -&gt; RngMPolElt
5<->MultivariatePolynomial(P, f, v) <->text224.htm#1928<->MultivariatePolynomial(P, f, v) : RngMPol, RngUPolElt, RngMPolElt -> RngMPolElt
5<->MultivariatePolynomial(P, f, i) <->text224.htm#1928<->MultivariatePolynomial(P, f, i) : RngMPol, RngUPolElt, RngIntElt -&gt; RngMPolElt
3<->element :<->text224.htm#1925<->element :: Creation of Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
3<->rings :<->text224.htm<->rings :: Polynomial Rings and Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
3<->operation :<->text225.htm<->operation :: Structure Operations (MULTIVARIATE POLYNOMIAL RINGS)
3<->generic :<->text225.htm#1930<->generic :: Related Structures (MULTIVARIATE POLYNOMIAL RINGS)
5<->CoefficientRing :: BaseRing(P) <->text225.htm#1931<->CoefficientRing :: BaseRing(P) : RngMPol -&gt; Rng
5<->BaseRing(P) <->text225.htm#1931<->BaseRing(P) : RngMPol -&gt; Rng
3<->generic :<->text225.htm#1930<->generic :: Related Structures (MULTIVARIATE POLYNOMIAL RINGS)
3<->invariant :<->text225.htm#1932<->invariant :: Numerical Invariants (MULTIVARIATE POLYNOMIAL RINGS)
5<->Rank(P) <->text225.htm#1933<->Rank(P) : RngMPol -&gt; RngIntElt
3<->invariant :<->text225.htm#1932<->invariant :: Numerical Invariants (MULTIVARIATE POLYNOMIAL RINGS)
3<->boolean :<->text225.htm#1934<->boolean :: Ring Predicates and Booleans (MULTIVARIATE POLYNOMIAL RINGS)
3<->change-ring :<->text225.htm#1935<->change-ring :: Changing Coefficient Ring (MULTIVARIATE POLYNOMIAL RINGS)
5<->ChangeRing(P, S) <->text225.htm#1936<->ChangeRing(P, S) : RngMPol, Rng -&gt; RngMPol
3<->change-ring :<->text225.htm#1935<->change-ring :: Changing Coefficient Ring (MULTIVARIATE POLYNOMIAL RINGS)
3<->homomorphism :<->text225.htm#1937<->homomorphism :: Homomorphisms (MULTIVARIATE POLYNOMIAL RINGS)
5<->hom <->text225.htm#1938<->hom< P \ar S | y$_1$, ..., y$_n$ > : RngMPol, Rng -> Map
5<->hom< P -> S | f, y1, ..., yn > <->text225.htm#1938<->hom&lt; P -&gt; S | f, y<sub>1</sub>, ..., y<sub>n</sub> &gt; : RngMPol, Rng -&gt; Map
4<->RngMPol_Homomorphism (Example H24E3)<->text225.htm#1939<->RngMPol_Homomorphism (Example H24E3)
4<->Example-Homomorphism :<->text225.htm#1939<->Example-Homomorphism :: RngMPol_Homomorphism (Example H24E3)
3<->homomorphism :<->text225.htm#1937<->homomorphism :: Homomorphisms (MULTIVARIATE POLYNOMIAL RINGS)
3<->operation :<->text225.htm<->operation :: Structure Operations (MULTIVARIATE POLYNOMIAL RINGS)
3<->operation-element :<->text226.htm<->operation-element :: Element Operations (MULTIVARIATE POLYNOMIAL RINGS)
3<->arithmetic :<->text226.htm#1941<->arithmetic :: Arithmetic Operators (MULTIVARIATE POLYNOMIAL RINGS)
3<->equality-membership :<->text226.htm#1942<->equality-membership :: Equality and Membership (MULTIVARIATE POLYNOMIAL RINGS)
3<->element-Boolean :<->text226.htm#1943<->element-Boolean :: Predicates on Ring Elements (MULTIVARIATE POLYNOMIAL RINGS)
5<->IsDivisibleBy(a, b) <->text226.htm#1944<->IsDivisibleBy(a, b) : RngMPolElt, RngMPolElt -&gt; BoolElt, RngMPolElt
5<->IsAlgebraicallyDependent(S) <->text226.htm#1945<->IsAlgebraicallyDependent(S) : RngMPolElt -&gt; BoolElt
3<->element-Boolean :<->text226.htm#1943<->element-Boolean :: Predicates on Ring Elements (MULTIVARIATE POLYNOMIAL RINGS)
3<->coefficient-monomial-term :<->text226.htm#1946<->coefficient-monomial-term :: Coefficients, Monomials and Terms (MULTIVARIATE POLYNOMIAL RINGS)
5<->Coefficients(f) <->text226.htm#1947<->Coefficients(f) : RngMPolElt -&gt; [ RngElt ]
5<->Coefficients(f, v) <->text226.htm#1948<->Coefficients(f, v) : RngMPolElt, RngMPolElt -> [ RngElt ]
5<->Coefficients(f, i) <->text226.htm#1948<->Coefficients(f, i) : RngMPolElt, RngIntElt -&gt; [ RngElt ]
5<->Coefficient(f, v, k) <->text226.htm#1949<->Coefficient(f, v, k) : RngMPolElt, RngMPolElt, RngIntElt -> RngElt
5<->Coefficient(f, i, k) <->text226.htm#1949<->Coefficient(f, i, k) : RngMPolElt, RngIntElt, RngIntElt -&gt; RngElt
5<->LeadingCoefficient(f) <->text226.htm#1950<->LeadingCoefficient(f) : RngMPolElt -&gt; RngElt
5<->LeadingCoefficient(f, v) <->text226.htm#1951<->LeadingCoefficient(f, v) : RngMPolElt, RngMPolElt -> RngElt
5<->LeadingCoefficient(f, i) <->text226.htm#1951<->LeadingCoefficient(f, i) : RngMPolElt, RngIntElt -&gt; RngElt
5<->Length(f) <->text226.htm#1952<->Length(f) : RngMPolElt -&gt; RngIntElt
5<->TrailingCoefficient(f) <->text226.htm#1953<->TrailingCoefficient(f) : RngMPolElt -&gt; RngElt
5<->TrailingCoefficient(f, v) <->text226.htm#1954<->TrailingCoefficient(f, v) : RngMPolElt, RngMPolElt -> RngElt
5<->TrailingCoefficient(f, i) <->text226.htm#1954<->TrailingCoefficient(f, i) : RngMPolElt, RngIntElt -&gt; RngElt
5<->CoefficientNumerator :: CoefficientDenominator(f) <->text226.htm#1955<->CoefficientNumerator :: CoefficientDenominator(f) : RngMPolElt -&gt; RngElt
5<->CoefficientDenominator(f) <->text226.htm#1955<->CoefficientDenominator(f) : RngMPolElt -&gt; RngElt
5<->MonomialCoefficient(f, m) <->text226.htm#1956<->MonomialCoefficient(f, m) : RngMPolElt, RngMPolElt -&gt; RngElt
5<->Monomials(f) <->text226.htm#1957<->Monomials(f) : RngMPolElt -&gt; [ RngMPolElt ]
5<->CoefficientsAndMonomials(f) <->text226.htm#1958<->CoefficientsAndMonomials(f) : RngMPolElt -&gt; [ RngElt ], [ RngMPolElt ]
5<->LeadingMonomial(f) <->text226.htm#1959<->LeadingMonomial(f) : RngMPolElt -&gt; RngMPolElt
5<->Terms(f) <->text226.htm#1960<->Terms(f) : RngMPolElt -&gt; [ RngMPolElt ]
5<->Terms(f, v) <->text226.htm#1961<->Terms(f, v) : RngMPolElt, RngMPolElt -> [ RngMPolElt ]
5<->Terms(f, i) <->text226.htm#1961<->Terms(f, i) : RngMPolElt, RngIntElt -&gt; [ RngMPolElt ]
5<->Term(f, v, k) <->text226.htm#1962<->Term(f, v, k) : RngMPolElt, RngMPolElt, RngIntElt -> RngMPolElt
5<->Term(f, i, k) <->text226.htm#1962<->Term(f, i, k) : RngMPolElt, RngIntElt, RngIntElt -&gt; RngMPolElt
5<->LeadingTerm(f) <->text226.htm#1963<->LeadingTerm(f) : RngMPolElt -&gt; RngMPolElt
5<->LeadingTerm(f, v) <->text226.htm#1964<->LeadingTerm(f, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->LeadingTerm(f, i) <->text226.htm#1964<->LeadingTerm(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->TrailingTerm(f) <->text226.htm#1965<->TrailingTerm(f) : RngMPolElt -&gt; RngElt
5<->TrailingTerm(f, v) <->text226.htm#1966<->TrailingTerm(f, v) : RngMPolElt, RngMPolElt -> RngElt
5<->TrailingTerm(f, i) <->text226.htm#1966<->TrailingTerm(f, i) : RngMPolElt, RngIntElt -&gt; RngElt
5<->Exponents(f) <->text226.htm#1967<->Exponents(f) : RngMPolElt -&gt; [ RngIntElt ]
5<->Monomial(P, E) <->text226.htm#1968<->Monomial(P, E) : RngMPol, [ RngIntElt ] -&gt; RngMPolElt
5<->Polynomial(C, M) <->text226.htm#1969<->Polynomial(C, M) : [RngElt], [RngMPolElt] -&gt; RngMPolElt
4<->RngMPol_Coefficients (Example H24E4)<->text226.htm#1970<->RngMPol_Coefficients (Example H24E4)
4<->Example-Coefficients :<->text226.htm#1970<->Example-Coefficients :: RngMPol_Coefficients (Example H24E4)
3<->coefficient-monomial-term :<->text226.htm#1946<->coefficient-monomial-term :: Coefficients, Monomials and Terms (MULTIVARIATE POLYNOMIAL RINGS)
3<->degree :<->text226.htm#1971<->degree :: Degrees (MULTIVARIATE POLYNOMIAL RINGS)
5<->Degree(f, v) <->text226.htm#1972<->Degree(f, v) : RngMPolElt, RngMPolElt -> RngIntElt
5<->Degree(f, i) <->text226.htm#1972<->Degree(f, i) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->TotalDegree(f) <->text226.htm#1973<->TotalDegree(f) : RngMPolElt -&gt; RngIntElt
5<->LeadingTotalDegree(f) <->text226.htm#1974<->LeadingTotalDegree(f) : RngMPolElt -&gt; RngIntElt
3<->degree :<->text226.htm#1971<->degree :: Degrees (MULTIVARIATE POLYNOMIAL RINGS)
3<->univariate :<->text226.htm#1975<->univariate :: Univariate Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
5<->IsUnivariate(f) <->text226.htm#1976<->IsUnivariate(f) : RngMPolElt -&gt; BoolElt, RngUPolElt, RngIntElt
5<->IsUnivariate(f, v) <->text226.htm#1977<->IsUnivariate(f, v) : RngMPolElt, RngMPolElt -> BoolElt, RngUPolElt
5<->IsUnivariate(f, i) <->text226.htm#1977<->IsUnivariate(f, i) : RngMPolElt, RngIntElt -&gt; BoolElt, RngUPolElt
5<->UnivariatePolynomial(f) <->text226.htm#1978<->UnivariatePolynomial(f) : RngMPolElt -&gt; RngUPolElt
4<->RngMPol_UnivariatePolynomial (Example H24E5)<->text226.htm#1979<->RngMPol_UnivariatePolynomial (Example H24E5)
4<->Example-UnivariatePolynomial :<->text226.htm#1979<->Example-UnivariatePolynomial :: RngMPol_UnivariatePolynomial (Example H24E5)
3<->univariate :<->text226.htm#1975<->univariate :: Univariate Polynomials (MULTIVARIATE POLYNOMIAL RINGS)
3<->derivative-integral :<->text226.htm#1980<->derivative-integral :: Derivative, Integral (MULTIVARIATE POLYNOMIAL RINGS)
5<->Derivative(f, v) <->text226.htm#1981<->Derivative(f, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->Derivative(f, i) <->text226.htm#1981<->Derivative(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->Derivative(f, k, v) <->text226.htm#1982<->Derivative(f, k, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->Derivative(f, k, i) <->text226.htm#1982<->Derivative(f, k, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->Integral(f, v) <->text226.htm#1983<->Integral(f, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->Integral(f, i) <->text226.htm#1983<->Integral(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->JacobianMatrix( [ f ] ) <->text226.htm#1984<->JacobianMatrix( [ f ] ) : [ RngMPolElt ] -&gt; RngMPol
3<->derivative-integral :<->text226.htm#1980<->derivative-integral :: Derivative, Integral (MULTIVARIATE POLYNOMIAL RINGS)
3<->evaluation-interpolation :<->text226.htm#1985<->evaluation-interpolation :: Evaluation, Interpolation (MULTIVARIATE POLYNOMIAL RINGS)
5<->Evaluate(f, s) <->text226.htm#1986<->Evaluate(f, s) : RngMPolElt, < RngElt, \ldots, RngElt > -> RngElt
5<->Evaluate(f, s) <->text226.htm#1986<->Evaluate(f, s) : RngMPolElt, [ RngElt ] -&gt; RngElt
5<->Evaluate(f, v, r) <->text226.htm#1987<->Evaluate(f, v, r) : RngMPolElt, RngMPolElt, RngElt -> RngMPolElt
5<->Evaluate(f, i, r) <->text226.htm#1987<->Evaluate(f, i, r) : RngMPolElt, RngMPolElt, RngElt -&gt; RngMPolElt
5<->Interpolation(I, V, v) <->text226.htm#1988<->Interpolation(I, V, v) : [ RngElt ], [ RngMPolElt ], RngIntElt -> RngMPolElt
5<->Interpolation(I, V, i) <->text226.htm#1988<->Interpolation(I, V, i) : [ RngElt ], [ RngMPolElt ], RngIntElt -&gt; RngMPolElt
4<->RngMPol_Interpolate (Example H24E6)<->text226.htm#1989<->RngMPol_Interpolate (Example H24E6)
4<->Example-Interpolate :<->text226.htm#1989<->Example-Interpolate :: RngMPol_Interpolate (Example H24E6)
3<->evaluation-interpolation :<->text226.htm#1985<->evaluation-interpolation :: Evaluation, Interpolation (MULTIVARIATE POLYNOMIAL RINGS)
3<->division :<->text226.htm#1990<->division :: Quotient and Reductum (MULTIVARIATE POLYNOMIAL RINGS)
5<->ExactQuotient :: f div g <->text226.htm#1991<->ExactQuotient :: f div g : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->f div g <->text226.htm#1991<->f div g : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->Reductum(f) <->text226.htm#1992<->Reductum(f) : RngMPolElt -&gt; RngMPolElt
5<->Reductum(f, v) <->text226.htm#1993<->Reductum(f, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->Reductum(f, i) <->text226.htm#1993<->Reductum(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
3<->division :<->text226.htm#1990<->division :: Quotient and Reductum (MULTIVARIATE POLYNOMIAL RINGS)
3<->diagonalizing :<->text226.htm#1994<->diagonalizing :: Diagonalizing a Polynomial of Degree 2 (MULTIVARIATE POLYNOMIAL RINGS)
5<->SymmetricBilinearForm(f) <->text226.htm#1995<->SymmetricBilinearForm(f) : RngMPolElt -&gt; ModMatRngElt
5<->DiagonalForm(f) <->text226.htm#1996<->DiagonalForm(f) : RngMPolElt -&gt; RngMPolElt, ModMatRngElt
4<->RngMPol_Sym_Bi_Linear (Example H24E7)<->text226.htm#1997<->RngMPol_Sym_Bi_Linear (Example H24E7)
4<->Example-Sym_Bi_Linear :<->text226.htm#1997<->Example-Sym_Bi_Linear :: RngMPol_Sym_Bi_Linear (Example H24E7)
3<->diagonalizing :<->text226.htm#1994<->diagonalizing :: Diagonalizing a Polynomial of Degree 2 (MULTIVARIATE POLYNOMIAL RINGS)
3<->operation-element :<->text226.htm<->operation-element :: Element Operations (MULTIVARIATE POLYNOMIAL RINGS)
3<->common :<->text227.htm<->common :: Greatest Common Divisors (MULTIVARIATE POLYNOMIAL RINGS)
3<->gcd-lcm :<->text227.htm#1999<->gcd-lcm :: Common Divisors and Common Multiples (MULTIVARIATE POLYNOMIAL RINGS)
5<->Gcd :: GreatestCommonDivisor(f, g) <->text227.htm#2000<->Gcd :: GreatestCommonDivisor(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->GCD :: GreatestCommonDivisor(f, g) <->text227.htm#2000<->GCD :: GreatestCommonDivisor(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->GreatestCommonDivisor(f, g) <->text227.htm#2000<->GreatestCommonDivisor(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->GCD(Q) <->text227.htm#2001<->GCD(Q) : [ RngMPolElt ] -&gt; RngMPolElt
5<->Lcm :: LeastCommonMultiple(f, g) <->text227.htm#2002<->Lcm :: LeastCommonMultiple(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->LCM :: LeastCommonMultiple(f, g) <->text227.htm#2002<->LCM :: LeastCommonMultiple(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->LeastCommonMultiple(f, g) <->text227.htm#2002<->LeastCommonMultiple(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->LCM(Q) <->text227.htm#2003<->LCM(Q) : [ RngMPolElt ] -&gt; RngMPolElt
5<->Normalize(f) <->text227.htm#2004<->Normalize(f) : RngMPolElt -&gt; RngMPolElt
5<->ClearDenominators(Q) <->text227.htm#2005<->ClearDenominators(Q) : [ RngMPolElt ] -> [ RngMPolElt ]
5<->ClearDenominators(f) <->text227.htm#2005<->ClearDenominators(f) : RngMPolElt -&gt; RngMPolElt
3<->gcd-lcm :<->text227.htm#1999<->gcd-lcm :: Common Divisors and Common Multiples (MULTIVARIATE POLYNOMIAL RINGS)
3<->content-primitive :<->text227.htm#2006<->content-primitive :: Content and Primitive Part (MULTIVARIATE POLYNOMIAL RINGS)
5<->Content(f) <->text227.htm#2007<->Content(f) : RngMPolElt -&gt; RngIntElt
5<->PrimitivePart(f) <->text227.htm#2008<->PrimitivePart(f) : RngMPolElt -&gt; RngMPolElt
5<->Contpp :: ContentAndPrimitivePart(f) <->text227.htm#2009<->Contpp :: ContentAndPrimitivePart(f) : RngMPolElt -&gt; RngIntElt, RngMPolElt
5<->ContentAndPrimitivePart(f) <->text227.htm#2009<->ContentAndPrimitivePart(f) : RngMPolElt -&gt; RngIntElt, RngMPolElt
3<->content-primitive :<->text227.htm#2006<->content-primitive :: Content and Primitive Part (MULTIVARIATE POLYNOMIAL RINGS)
3<->common :<->text227.htm<->common :: Greatest Common Divisors (MULTIVARIATE POLYNOMIAL RINGS)
3<->factorization-irreducibility :<->text228.htm<->factorization-irreducibility :: Factorization and Irreducibility (MULTIVARIATE POLYNOMIAL RINGS)
5<->Factorization(f) <->text228.htm#2011<->Factorization(f) : RngMPolElt -&gt; [ &lt; RngMPolElt, RngIntElt &gt;], RngElt
5<->SquarefreeFactorization(f) <->text228.htm#2012<->SquarefreeFactorization(f) : RngMPolElt -&gt; [ &lt;RngMPolElt, RngIntElt&gt; ]
5<->SquarefreePart(f) <->text228.htm#2013<->SquarefreePart(f) : RngMPolElt -&gt; RngMPolElt
5<->IsIrreducible(f) <->text228.htm#2014<->IsIrreducible(f) : RngMPolElt -&gt; BoolElt
5<->SetVerbose("PolyFact", v) <->text228.htm#2015<->SetVerbose("PolyFact", v) : MonStgElt, RngIntElt -&gt;
4<->RngMPol_Trinomials (Example H24E8)<->text228.htm#2016<->RngMPol_Trinomials (Example H24E8)
4<->Example-Trinomials :<->text228.htm#2016<->Example-Trinomials :: RngMPol_Trinomials (Example H24E8)
4<->RngMPol_Vandermonde (Example H24E9)<->text228.htm#2017<->RngMPol_Vandermonde (Example H24E9)
4<->Example-Vandermonde :<->text228.htm#2017<->Example-Vandermonde :: RngMPol_Vandermonde (Example H24E9)
4<->RngMPol_Heron (Example H24E10)<->text228.htm#2018<->RngMPol_Heron (Example H24E10)
4<->Example-Heron :<->text228.htm#2018<->Example-Heron :: RngMPol_Heron (Example H24E10)
4<->RngMPol_FiniteFieldFactorization (Example H24E11)<->text228.htm#2019<->RngMPol_FiniteFieldFactorization (Example H24E11)
4<->Example-FiniteFieldFactorization :<->text228.htm#2019<->Example-FiniteFieldFactorization :: RngMPol_FiniteFieldFactorization (Example H24E11)
3<->factorization-irreducibility :<->text228.htm<->factorization-irreducibility :: Factorization and Irreducibility (MULTIVARIATE POLYNOMIAL RINGS)
3<->resultant-discriminant :<->text229.htm<->resultant-discriminant :: Resultants and Discriminants (MULTIVARIATE POLYNOMIAL RINGS)
5<->Resultant(f, g, v) <->text229.htm#2021<->Resultant(f, g, v) : RngMPolElt, RngMPolElt, RngMPolElt -> RngMPolElt
5<->Resultant(f, g, i) <->text229.htm#2021<->Resultant(f, g, i) : RngMPolElt, RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->Discriminant(f, v) <->text229.htm#2022<->Discriminant(f, v) : RngMPolElt, RngMPolElt -> RngMPolElt
5<->Discriminant(f, i) <->text229.htm#2022<->Discriminant(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
3<->resultant-discriminant :<->text229.htm<->resultant-discriminant :: Resultants and Discriminants (MULTIVARIATE POLYNOMIAL RINGS)
3<->integer :<->text230.htm<->integer :: Polynomials over the Integers (MULTIVARIATE POLYNOMIAL RINGS)
5<->Sign(f) <->text230.htm#2024<->Sign(f) : RngMPolElt -&gt; RngIntElt
5<->AbsoluteValue(f) <->text230.htm#2025<->AbsoluteValue(f) : RngMPolElt -&gt; RngMPolElt
5<->MaxNorm(f) <->text230.htm#2026<->MaxNorm(f) : RngMPolElt -&gt; RngIntElt
5<->SumNorm(f) <->text230.htm#2027<->SumNorm(f) : RngMPolElt -&gt; RngIntElt
3<->integer :<->text230.htm<->integer :: Polynomials over the Integers (MULTIVARIATE POLYNOMIAL RINGS)
3<->distributive-multivariate-polynomial :<->text222.htm<->distributive-multivariate-polynomial :: MULTIVARIATE POLYNOMIAL RINGS
3<->real-complex :<->text233.htm<->real-complex :: REAL AND COMPLEX FIELDS
3<->FldRe :<->text234.htm<->FldRe :: Introduction (REAL AND COMPLEX FIELDS)
3<->FldCom :<->text234.htm<->FldCom :: Introduction (REAL AND COMPLEX FIELDS)
3<->FldReElt :<->text234.htm<->FldReElt :: Introduction (REAL AND COMPLEX FIELDS)
3<->FldComElt :<->text234.htm<->FldComElt :: Introduction (REAL AND COMPLEX FIELDS)
3<->real numbers :<->text234.htm<->real numbers :: Introduction (REAL AND COMPLEX FIELDS)
3<->complex numbers :<->text234.htm<->complex numbers :: Introduction (REAL AND COMPLEX FIELDS)
3<->approximations :<->text234.htm<->approximations :: Introduction (REAL AND COMPLEX FIELDS)
3<->real field :<->text234.htm<->real field :: Introduction (REAL AND COMPLEX FIELDS)
3<->complex field :<->text234.htm<->complex field :: Introduction (REAL AND COMPLEX FIELDS)
3<->introduction :<->text234.htm<->introduction :: Introduction (REAL AND COMPLEX FIELDS)
3<->overview-reals :<->text234.htm#2032<->overview-reals :: Overview of Real Numbers in Magma (REAL AND COMPLEX FIELDS)
4<->FldRe_RealIntro (Example H25E1)<->text234.htm#2033<->FldRe_RealIntro (Example H25E1)
4<->Example-RealIntro :<->text234.htm#2033<->Example-RealIntro :: FldRe_RealIntro (Example H25E1)
3<->overview-reals :<->text234.htm#2032<->overview-reals :: Overview of Real Numbers in Magma (REAL AND COMPLEX FIELDS)
3<->coercion, integers to reals :<->text234.htm#2034<->coercion, integers to reals :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, rationals to reals :<->text234.htm#2034<->coercion, rationals to reals :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, reals to reals :<->text234.htm#2034<->coercion, reals to reals :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, integers to complexes :<->text234.htm#2034<->coercion, integers to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, rationals to complexes :<->text234.htm#2034<->coercion, rationals to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, reals to complexes :<->text234.htm#2034<->coercion, reals to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, complexes to complexes :<->text234.htm#2034<->coercion, complexes to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, quadratics to reals :<->text234.htm#2034<->coercion, quadratics to reals :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, cyclotomics to reals :<->text234.htm#2034<->coercion, cyclotomics to reals :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, quadratics to complexes :<->text234.htm#2034<->coercion, quadratics to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion, cyclotomics to complexes :<->text234.htm#2034<->coercion, cyclotomics to complexes :: Coercion (REAL AND COMPLEX FIELDS)
3<->coercion :<->text234.htm#2034<->coercion :: Coercion (REAL AND COMPLEX FIELDS)
3<->homomorphisms, real :<->text234.htm#2035<->homomorphisms, real :: Homomorphisms (REAL AND COMPLEX FIELDS)
3<->homomorphism :<->text234.htm#2035<->homomorphism :: Homomorphisms (REAL AND COMPLEX FIELDS)
4<->FldRe_Homomorphisms (Example H25E2)<->text234.htm#2036<->FldRe_Homomorphisms (Example H25E2)
4<->Example-Homomorphisms :<->text234.htm#2036<->Example-Homomorphisms :: FldRe_Homomorphisms (Example H25E2)
3<->homomorphism :<->text234.htm#2035<->homomorphism :: Homomorphisms (REAL AND COMPLEX FIELDS)
3<->special :<->text234.htm#2037<->special :: Special Options (REAL AND COMPLEX FIELDS)
5<->SetDefaultRealField(R) <->text234.htm#2038<->SetDefaultRealField(R) : FldRe -&gt;
5<->GetDefaultRealField() <->text234.htm#2039<->GetDefaultRealField() : -&gt; FldRe
5<->AssignNames(~C, [s]) <->text234.htm#2040<->AssignNames(~C, [s]) : FldCom, [ MonStgElt ]) -&gt;
5<->Name(C, 1) <->text234.htm#2041<->Name(C, 1) : FldCom, RngIntElt -&gt; FldComElt
3<->special :<->text234.htm#2037<->special :: Special Options (REAL AND COMPLEX FIELDS)
3<->versions :<->text234.htm#2042<->versions :: Version Functions (REAL AND COMPLEX FIELDS)
5<->GetMPFRVersion :: GetGMPVersion() <->text234.htm#2043<->GetMPFRVersion :: GetGMPVersion() : -&gt;
5<->GetMPCVersion :: GetGMPVersion() <->text234.htm#2043<->GetMPCVersion :: GetGMPVersion() : -&gt;
5<->GetGMPVersion() <->text234.htm#2043<->GetGMPVersion() : -&gt;
3<->versions :<->text234.htm#2042<->versions :: Version Functions (REAL AND COMPLEX FIELDS)
3<->introduction :<->text234.htm<->introduction :: Introduction (REAL AND COMPLEX FIELDS)
3<->creation :<->text235.htm<->creation :: Creation Functions (REAL AND COMPLEX FIELDS)
3<->real field, construction :<->text235.htm#2045<->real field, construction :: Creation of Structures (REAL AND COMPLEX FIELDS)
3<->complex field, construction :<->text235.htm#2045<->complex field, construction :: Creation of Structures (REAL AND COMPLEX FIELDS)
3<->precision, default :<->text235.htm#2045<->precision, default :: Creation of Structures (REAL AND COMPLEX FIELDS)
3<->magma :<->text235.htm#2045<->magma :: Creation of Structures (REAL AND COMPLEX FIELDS)
5<->RealField(p) <->text235.htm#2046<->RealField(p) : RngIntElt -&gt; FldRe
5<->RealField() <->text235.htm#2047<->RealField() : -&gt; FldRe
5<->ComplexField(p) <->text235.htm#2048<->ComplexField(p) : RngIntElt -&gt; FldCom
5<->ComplexField() <->text235.htm#2049<->ComplexField() : -&gt; FldCom
5<->ComplexField(R) <->text235.htm#2050<->ComplexField(R) : FldRe -&gt; FldCom
4<->FldRe_CreateComplexField (Example H25E3)<->text235.htm#2051<->FldRe_CreateComplexField (Example H25E3)
4<->Example-CreateComplexField :<->text235.htm#2051<->Example-CreateComplexField :: FldRe_CreateComplexField (Example H25E3)
3<->magma :<->text235.htm#2045<->magma :: Creation of Structures (REAL AND COMPLEX FIELDS)
3<->real numbers, construction :<->text235.htm#2052<->real numbers, construction :: Creation of Elements (REAL AND COMPLEX FIELDS)
3<->complex numbers, construction :<->text235.htm#2052<->complex numbers, construction :: Creation of Elements (REAL AND COMPLEX FIELDS)
3<->real numbers, representation :<->text235.htm#2052<->real numbers, representation :: Creation of Elements (REAL AND COMPLEX FIELDS)
3<->complex numbers, representation :<->text235.htm#2052<->complex numbers, representation :: Creation of Elements (REAL AND COMPLEX FIELDS)
3<->element :<->text235.htm#2052<->element :: Creation of Elements (REAL AND COMPLEX FIELDS)
5<->$d$ . $e$E$f$P$g$ <->text235.htm#2053<->$d$ . $e$E$f$P$g$ : RngIntElt, RngIntElt, RngIntElt -> FldReElt
5<->P :: d . eefpg <->text235.htm#2053<->P :: d . eefpg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt
5<->d . eefpg <->text235.htm#2053<->d . eefpg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt
5<->elt<R | m, n> <->text235.htm#2054<->elt&lt;R | m, n&gt; : FldRe, FldReElt, RngIntElt -&gt; FldReElt
5<->! :: elt<C | x, y> <->text235.htm#2055<->! :: elt&lt;C | x, y&gt; : FldCom, FldReElt, FldReElt -&gt; FldComElt
5<->elt<C | x, y> <->text235.htm#2055<->elt&lt;C | x, y&gt; : FldCom, FldReElt, FldReElt -&gt; FldComElt
5<->R ! a <->text235.htm#2056<->R ! a : FldRe, RngElt -&gt; FldReElt
5<->C ! a <->text235.htm#2057<->C ! a : FldCom, RngElt -&gt; FldComElt
4<->FldRe_CreateElements (Example H25E4)<->text235.htm#2058<->FldRe_CreateElements (Example H25E4)
4<->Example-CreateElements :<->text235.htm#2058<->Example-CreateElements :: FldRe_CreateElements (Example H25E4)
3<->element :<->text235.htm#2052<->element :: Creation of Elements (REAL AND COMPLEX FIELDS)
3<->creation :<->text235.htm<->creation :: Creation Functions (REAL AND COMPLEX FIELDS)
3<->operation-structure :<->text236.htm<->operation-structure :: Structure Operations (REAL AND COMPLEX FIELDS)
3<->related :<->text236.htm#2060<->related :: Related Structures (REAL AND COMPLEX FIELDS)
3<->invariant :<->text236.htm#2061<->invariant :: Numerical Invariants (REAL AND COMPLEX FIELDS)
3<->Ring Predicates and Booleans (REAL AND COMPLEX FIELDS)<->text236.htm#2062<->Ring Predicates and Booleans (REAL AND COMPLEX FIELDS)
3<->other :<->text236.htm#2063<->other :: Other Structure Functions (REAL AND COMPLEX FIELDS)
5<->Precision(R) <->text236.htm#2064<->Precision(R) : FldRe -> RngIntElt
5<->Precision(R) <->text236.htm#2064<->Precision(R) : FldCom -&gt; RngIntElt
5<->BitPrecision(R) <->text236.htm#2065<->BitPrecision(R) : FldRe -> RngIntElt
5<->BitPrecision(R) <->text236.htm#2065<->BitPrecision(R) : FldCom -&gt; RngIntElt
3<->other :<->text236.htm#2063<->other :: Other Structure Functions (REAL AND COMPLEX FIELDS)
3<->operation-structure :<->text236.htm<->operation-structure :: Structure Operations (REAL AND COMPLEX FIELDS)
3<->operation-element :<->text237.htm<->operation-element :: Element Operations (REAL AND COMPLEX FIELDS)
3<->generic :<->text237.htm#2067<->generic :: Generic Element Functions and Predicates (REAL AND COMPLEX FIELDS)
3<->comparison :<->text237.htm#2068<->comparison :: Comparison of and Membership (REAL AND COMPLEX FIELDS)
3<->other :<->text237.htm#2069<->other :: Other Predicates (REAL AND COMPLEX FIELDS)
5<->IsIntegral(c) <->text237.htm#2070<->IsIntegral(c) : FldComElt -> BoolElt
5<->IsIntegral(c) <->text237.htm#2070<->IsIntegral(c) : FldReElt -&gt; BoolElt
5<->IsReal(c) <->text237.htm#2071<->IsReal(c) : FldComElt -&gt; BoolElt
3<->other :<->text237.htm#2069<->other :: Other Predicates (REAL AND COMPLEX FIELDS)
3<->arithmetic :<->text237.htm#2072<->arithmetic :: Arithmetic (REAL AND COMPLEX FIELDS)
3<->conversion :<->text237.htm#2073<->conversion :: Conversions (REAL AND COMPLEX FIELDS)
5<->MantissaExponent(r) <->text237.htm#2074<->MantissaExponent(r) : FldReElt -&gt; RngIntElt, RngIntElt
5<->ComplexToPolar(c) <->text237.htm#2075<->ComplexToPolar(c) : FldComElt -&gt; FldReElt, FldReElt
5<->PolarToComplex(m, a) <->text237.htm#2076<->PolarToComplex(m, a) : FldReElt, FldReElt -&gt; FldComElt
5<->Argument(c) <->text237.htm#2077<->Argument(c) : FldComElt -&gt; FldReElt
5<->Modulus(c) <->text237.htm#2078<->Modulus(c) : FldComElt -&gt; FldReElt
5<->Real(c) <->text237.htm#2079<->Real(c) : FldComElt -&gt; FldReElt
5<->Imaginary(c) <->text237.htm#2080<->Imaginary(c) : FldComElt -&gt; FldReElt
3<->conversion :<->text237.htm#2073<->conversion :: Conversions (REAL AND COMPLEX FIELDS)
3<->rounding :<->text237.htm#2081<->rounding :: Rounding (REAL AND COMPLEX FIELDS)
5<->Round(r) <->text237.htm#2082<->Round(r) : FldComElt  -> RngQuadElt
5<->Round(r) <->text237.htm#2082<->Round(r) : FldReElt  -&gt; FldReElt
5<->Truncate(r) <->text237.htm#2083<->Truncate(r) : FldReElt -&gt; RngIntElt
5<->Ceiling(r) <->text237.htm#2084<->Ceiling(r) : FldReElt  -> RngIntElt
5<->Ceiling(r) <->text237.htm#2084<->Ceiling(r) : Infty -&gt; Infty
5<->Floor(r) <->text237.htm#2085<->Floor(r) : FldReElt  -> RngIntElt
5<->Floor(r) <->text237.htm#2085<->Floor(r) : Infty  -&gt; Infty
3<->rounding :<->text237.htm#2081<->rounding :: Rounding (REAL AND COMPLEX FIELDS)
3<->precision :<->text237.htm#2086<->precision :: Precision (REAL AND COMPLEX FIELDS)
5<->Precision(c) <->text237.htm#2087<->Precision(c) : FldComElt -> RngIntElt
5<->Precision(r) <->text237.htm#2087<->Precision(r) : FldReElt  -&gt; RngIntElt
5<->BitPrecision(c) <->text237.htm#2088<->BitPrecision(c) : FldComElt -> RngIntElt
5<->BitPrecision(r) <->text237.htm#2088<->BitPrecision(r) : FldReElt  -&gt; RngIntElt
5<->Precision(L) <->text237.htm#2089<->Precision(L) : [FldComElt] -> RngIntElt
5<->Precision(L) <->text237.htm#2089<->Precision(L) : [FldReElt] -&gt; RngIntElt
5<->ChangePrecision(c, n) <->text237.htm#2090<->ChangePrecision(c, n) : FldComElt, RngIntElt -> FldComElt
5<->ChangePrecision(r, n) <->text237.htm#2090<->ChangePrecision(r, n) : FldReElt, RngIntElt -&gt; FldReElt
3<->precision :<->text237.htm#2086<->precision :: Precision (REAL AND COMPLEX FIELDS)
3<->constant :<->text237.htm#2091<->constant :: Constants (REAL AND COMPLEX FIELDS)
5<->Catalan(R) <->text237.htm#2092<->Catalan(R) : FldCom -> FldComElt
5<->Catalan(R) <->text237.htm#2092<->Catalan(R) : FldRe -&gt; FldReElt
5<->EulerGamma(R) <->text237.htm#2093<->EulerGamma(R) : FldCom -> FldComElt
5<->EulerGamma(R) <->text237.htm#2093<->EulerGamma(R) : FldRe -&gt; FldReElt
5<->Pi(R) <->text237.htm#2094<->Pi(R) :  FldCom -> FldComElt
5<->Pi(R) <->text237.htm#2094<->Pi(R) : FldRe -&gt; FldReElt
3<->constant :<->text237.htm#2091<->constant :: Constants (REAL AND COMPLEX FIELDS)
3<->simple :<->text237.htm#2095<->simple :: Simple Element Functions (REAL AND COMPLEX FIELDS)
5<->AbsoluteValue(r) <->text237.htm#2096<->AbsoluteValue(r) : FldComElt-> FldReElt
5<->AbsoluteValue(r) <->text237.htm#2096<->AbsoluteValue(r) : FldReElt-&gt; FldReElt
5<->Abs(r) <->text237.htm#2096<->Abs(r) : FldComElt-> FldReElt
5<->AbsoluteValue(r) <->text237.htm#2096<->AbsoluteValue(r) : FldReElt-&gt; FldReElt
5<->Sign(r) <->text237.htm#2097<->Sign(r) : FldReElt  -&gt; RngIntElt
5<->ComplexConjugate(c) <->text237.htm#2098<->ComplexConjugate(c) : FldComElt -> FldComElt
5<->ComplexConjugate(r) <->text237.htm#2098<->ComplexConjugate(r) : FldReElt -&gt; FldReElt
5<->Norm(r) <->text237.htm#2099<->Norm(r) : FldReElt -> FldReElt
5<->Norm(c) <->text237.htm#2099<->Norm(c) : FldComElt -&gt; FldReElt
5<->Root(r, n) <->text237.htm#2100<->Root(r, n) : FldComElt, RngIntElt -> FldComElt
5<->Root(r, n) <->text237.htm#2100<->Root(r, n) : FldReElt, RngIntElt -&gt; FldReElt
5<->Sqrt :: SquareRoot(c) <->text237.htm#2101<->Sqrt :: SquareRoot(c) : FldComElt -&gt; FldComElt
5<->SquareRoot(r) <->text237.htm#2101<->SquareRoot(r) : FldReElt -> FldReElt
5<->Sqrt(r) : FldReElt -> FldReElt :: SquareRoot(c) <->text237.htm#2101<->Sqrt(r) : FldReElt -> FldReElt :: SquareRoot(c) : FldComElt -&gt; FldComElt
5<->SquareRoot(c) <->text237.htm#2101<->SquareRoot(c) : FldComElt -&gt; FldComElt
5<->Distance(x, L) <->text237.htm#2102<->Distance(x, L) : FldReElt, [FldComElt] -> FldReElt, RngIntElt
5<->Distance(x, L) <->text237.htm#2102<->Distance(x, L) : FldComElt, [FldReElt] -> FldReElt, RngIntElt
5<->Distance(x, L) <->text237.htm#2102<->Distance(x, L) : FldComElt, [FldComElt] -> FldReElt, RngIntElt
5<->Distance(x, L) <->text237.htm#2102<->Distance(x, L) : FldReElt, [FldReElt] -&gt; FldReElt, RngIntElt
5<->Diameter(L) <->text237.htm#2103<->Diameter(L) : [FldComElt] -> FldReElt
5<->Diameter(L) <->text237.htm#2103<->Diameter(L) : [FldReElt] -&gt; FldReElt
3<->simple :<->text237.htm#2095<->simple :: Simple Element Functions (REAL AND COMPLEX FIELDS)
3<->roots :<->text237.htm#2104<->roots :: Roots (REAL AND COMPLEX FIELDS)
5<->Roots(p) <->text237.htm#2105<->Roots(p) : RngUPolElt -&gt; [ &lt;FldComElt, RngIntElt&gt; ]
4<->FldRe_Roots (Example H25E5)<->text237.htm#2106<->FldRe_Roots (Example H25E5)
4<->Example-Roots :<->text237.htm#2106<->Example-Roots :: FldRe_Roots (Example H25E5)
5<->RootsNonExact(p) <->text237.htm#2107<->RootsNonExact(p) : RngUPolElt[FldCom] -> [ FldComElt ], [ FldComElt ]
5<->RootsNonExact(p) <->text237.htm#2107<->RootsNonExact(p) : RngUPolElt[FldRe] -&gt; [ FldComElt ], [ FldComElt ]
4<->FldRe_RootsNonExact (Example H25E6)<->text237.htm#2108<->FldRe_RootsNonExact (Example H25E6)
4<->Example-RootsNonExact :<->text237.htm#2108<->Example-RootsNonExact :: FldRe_RootsNonExact (Example H25E6)
5<->HenselLift(f, R, k) <->text237.htm#2109<->HenselLift(f, R, k) : RngUPolElt, FldComElt, RngIntElt -> FldComElt
5<->HenselLift(f, R, k) <->text237.htm#2109<->HenselLift(f, R, k) : RngUPolElt, FldReElt, RngIntElt -&gt; FldReElt
3<->roots :<->text237.htm#2104<->roots :: Roots (REAL AND COMPLEX FIELDS)
3<->continued-fraction :<->text237.htm#2110<->continued-fraction :: Continued Fractions (REAL AND COMPLEX FIELDS)
5<->ContinuedFraction(r) <->text237.htm#2111<->ContinuedFraction(r) : FldReElt -> [ RngIntElt ]
5<->ContinuedFraction(r) <->text237.htm#2111<->ContinuedFraction(r) : FldRatElt -&gt; [ RngIntElt ]
5<->BestApproximation(r, n) <->text237.htm#2112<->BestApproximation(r, n) : FldReElt, RngIntElt -&gt; FldReElt
5<->Convergents(s) <->text237.htm#2113<->Convergents(s) : [ RngIntElt ] -&gt; ModMatRngElt
3<->continued-fraction :<->text237.htm#2110<->continued-fraction :: Continued Fractions (REAL AND COMPLEX FIELDS)
3<->dependency :<->text237.htm#2114<->dependency :: Linear and Algebraic Dependencies (REAL AND COMPLEX FIELDS)
5<->LinearRelation(v\col\ \parameters) <->text237.htm#2115<->LinearRelation(v\col\ \parameters) : ModTupRngElt -> ModTupRngElt
5<->LinearRelation(q: parameters) <->text237.htm#2115<->LinearRelation(q: parameters) : [ FldComElt ] -&gt; [ RngIntElt ]
5<->AllLinearRelations(q,p)<->text237.htm#2116<->AllLinearRelations(q,p): SeqEnum, RngIntElt -&gt; Lat
5<->IntegerRelation(q,N)<->text237.htm#2117<->IntegerRelation(q,N): SeqEnum, RngIntElt -> SeqEnum,FldReElt
5<->IntegerRelation(q)<->text237.htm#2117<->IntegerRelation(q): SeqEnum -&gt; SeqEnum, FldReElt
5<->PowerRelation(r, k\col\ \parameters) <->text237.htm#2118<->PowerRelation(r, k\col\ \parameters) : FldComElt, RngIntElt -> RngUPolElt
5<->PowerRelation(r, k: parameters) <->text237.htm#2118<->PowerRelation(r, k: parameters) : FldReElt, RngIntElt -&gt; RngUPolElt
5<->MinimalPolynomial(r,d,N) <->text237.htm#2119<->MinimalPolynomial(r,d,N) : FldComElt, RngIntElt, RngIntElt -> RngUPolElt, FldReElt
5<->MinimalPolynomial(r,d) <->text237.htm#2119<->MinimalPolynomial(r,d) : FldReElt, RngIntElt -> RngUPolElt -> FldReElt
5<->MinimalPolynomial(r,d) <->text237.htm#2119<->MinimalPolynomial(r,d) : FldComElt, RngIntElt -> RngUPolElt -> FldReElt
5<->MinimalPolynomial(r,d,N) <->text237.htm#2119<->MinimalPolynomial(r,d,N) : FldReElt, RngIntElt, RngIntElt -&gt; RngUPolElt, FldReElt
4<->FldRe_LLLPolFact (Example H25E7)<->text237.htm#2120<->FldRe_LLLPolFact (Example H25E7)
4<->Example-LLLPolFact :<->text237.htm#2120<->Example-LLLPolFact :: FldRe_LLLPolFact (Example H25E7)
3<->dependency :<->text237.htm#2114<->dependency :: Linear and Algebraic Dependencies (REAL AND COMPLEX FIELDS)
3<->operation-element :<->text237.htm<->operation-element :: Element Operations (REAL AND COMPLEX FIELDS)
3<->transcendental :<->text238.htm<->transcendental :: Transcendental Functions (REAL AND COMPLEX FIELDS)
3<->logarithm-exponential :<->text238.htm#2122<->logarithm-exponential :: Exponential, Logarithmic and Polylogarithmic Functions (REAL AND COMPLEX FIELDS)
5<->Exp(f) <->text238.htm#2123<->Exp(f) : RngSerElt -&gt; RngSerElt
5<->Exp(r) <->text238.htm#2124<->Exp(r) : FldReElt -> FldReElt
5<->Exp(c) <->text238.htm#2124<->Exp(c) : FldComElt -&gt; FldComElt
5<->Log(f) <->text238.htm#2125<->Log(f) : RngSerElt -&gt; RngSerElt
5<->Log(c) <->text238.htm#2126<->Log(c) : FldComElt -> FldComElt
5<->Log(r) <->text238.htm#2126<->Log(r) : FldReElt -&gt; FldReElt
5<->Log(b, r) <->text238.htm#2127<->Log(b, r) : FldReElt -&gt; FldReElt
5<->Dilog(s) <->text238.htm#2128<->Dilog(s) : FldReElt -> FldReElt
5<->Dilog(s) <->text238.htm#2128<->Dilog(s) : FldComElt -&gt; FldComElt
5<->Polylog(m, f) <->text238.htm#2129<->Polylog(m, f) : RngIntElt, RngSerElt -&gt; RngSerElt
5<->Polylog(m, s) <->text238.htm#2130<->Polylog(m, s) : RngIntElt, FldComElt -&gt; FldComElt
5<->PolylogDold :: PolylogD(m, s) <->text238.htm#2131<->PolylogDold :: PolylogD(m, s) : RngIntElt, FldComElt -&gt; FldComElt
5<->PolylogP :: PolylogD(m, s) <->text238.htm#2131<->PolylogP :: PolylogD(m, s) : RngIntElt, FldComElt -&gt; FldComElt
5<->PolylogD(m, s) <->text238.htm#2131<->PolylogD(m, s) : RngIntElt, FldComElt -&gt; FldComElt
3<->logarithm-exponential :<->text238.htm#2122<->logarithm-exponential :: Exponential, Logarithmic and Polylogarithmic Functions (REAL AND COMPLEX FIELDS)
3<->trigonometric :<->text238.htm#2132<->trigonometric :: Trigonometric Functions (REAL AND COMPLEX FIELDS)
5<->Sin(f) <->text238.htm#2133<->Sin(f) : RngSerElt -&gt; RngSerElt
5<->Sin(r) <->text238.htm#2134<->Sin(r) : FldReElt -> FldReElt
5<->Sin(c) <->text238.htm#2134<->Sin(c) : FldComElt -&gt; FldComElt
5<->Cos(f) <->text238.htm#2135<->Cos(f) : RngSerElt -&gt; RngSerElt
5<->Cos(r) <->text238.htm#2136<->Cos(r) : FldReElt -> FldReElt
5<->Cos(c) <->text238.htm#2136<->Cos(c) : FldComElt -&gt; FldComElt
5<->Sincos(f) <->text238.htm#2137<->Sincos(f) : RngSerElt -&gt; RngSerElt
5<->Sincos(s) <->text238.htm#2138<->Sincos(s) : FldComElt -> FldComElt, FldComElt
5<->Sincos(s) <->text238.htm#2138<->Sincos(s) : FldReElt -&gt; FldReElt, FldReElt
5<->Tan(f) <->text238.htm#2139<->Tan(f) : RngSerElt -&gt; RngSerElt
5<->Tan(r) <->text238.htm#2140<->Tan(r) : FldReElt -> FldReElt
5<->Tan(c) <->text238.htm#2140<->Tan(c) : FldComElt -&gt; FldComElt
5<->Cot(f) <->text238.htm#2141<->Cot(f) : RngSerElt -&gt; RngSerElt
5<->Cot(r) <->text238.htm#2142<->Cot(r) : FldReElt -> FldReElt
5<->Cot(c) <->text238.htm#2142<->Cot(c) : FldComElt -&gt; FldComElt
5<->Sec(f) <->text238.htm#2143<->Sec(f) : RngSerElt -&gt; RngSerElt
5<->Sec(r) <->text238.htm#2144<->Sec(r) : FldReElt -> FldReElt
5<->Sec(c) <->text238.htm#2144<->Sec(c) : FldComElt -&gt; FldComElt
5<->Cosec(f) <->text238.htm#2145<->Cosec(f) : RngSerElt -&gt; RngSerElt
5<->Cosec(r) <->text238.htm#2146<->Cosec(r) : FldReElt -> FldReElt
5<->Cosec(c) <->text238.htm#2146<->Cosec(c) : FldComElt -&gt; FldComElt
3<->trigonometric :<->text238.htm#2132<->trigonometric :: Trigonometric Functions (REAL AND COMPLEX FIELDS)
3<->inverse-trigonometric :<->text238.htm#2147<->inverse-trigonometric :: Inverse Trigonometric Functions (REAL AND COMPLEX FIELDS)
5<->Arcsin(f) <->text238.htm#2148<->Arcsin(f) : RngSerElt -&gt; RngSerElt
5<->Arcsin(r) <->text238.htm#2149<->Arcsin(r) : FldComElt -> FldComElt
5<->Arcsin(r) <->text238.htm#2149<->Arcsin(r) : FldReElt -&gt; FldReElt
5<->Arccos(f) <->text238.htm#2150<->Arccos(f) : RngSerElt -&gt; RngSerElt
5<->Arccos(r) <->text238.htm#2151<->Arccos(r) : FldComElt -> FldComElt
5<->Arccos(r) <->text238.htm#2151<->Arccos(r) : FldReElt -&gt; FldReElt
5<->Arctan(f) <->text238.htm#2152<->Arctan(f) : RngSerElt -&gt; RngSerElt
5<->Arctan(r) <->text238.htm#2153<->Arctan(r) : FldComElt -> FldComElt
5<->Arctan(r) <->text238.htm#2153<->Arctan(r) : FldReElt -&gt; FldReElt
5<->Arctan2 :: Arctan(x, y) <->text238.htm#2154<->Arctan2 :: Arctan(x, y) : FldReElt, FldReElt -&gt; FldReElt
5<->Arctan(x, y) <->text238.htm#2154<->Arctan(x, y) : FldReElt, FldReElt -&gt; FldReElt
5<->Arccot(r) <->text238.htm#2155<->Arccot(r) : FldComElt -> FldComElt
5<->Arccot(r) <->text238.htm#2155<->Arccot(r) : FldReElt -&gt; FldReElt
5<->Arcsec(r) <->text238.htm#2156<->Arcsec(r) : FldComElt -> FldComElt
5<->Arcsec(r) <->text238.htm#2156<->Arcsec(r) : FldReElt -&gt; FldReElt
5<->Arccosec(r) <->text238.htm#2157<->Arccosec(r) : FldComElt -> FldComElt
5<->Arccosec(r) <->text238.htm#2157<->Arccosec(r) : FldReElt -&gt; FldReElt
3<->inverse-trigonometric :<->text238.htm#2147<->inverse-trigonometric :: Inverse Trigonometric Functions (REAL AND COMPLEX FIELDS)
3<->hyperbolic :<->text238.htm#2158<->hyperbolic :: Hyperbolic Functions (REAL AND COMPLEX FIELDS)
5<->Sinh(f) <->text238.htm#2159<->Sinh(f) : RngSerElt -&gt; RngSerElt
5<->Sinh(r) <->text238.htm#2160<->Sinh(r) : FldReElt -> FldReElt
5<->Sinh(s) <->text238.htm#2160<->Sinh(s) : FldComElt -&gt; FldComElt
5<->Cosh(f) <->text238.htm#2161<->Cosh(f) : RngSerElt -&gt; RngSerElt
5<->Cosh(r) <->text238.htm#2162<->Cosh(r) : FldComElt -> FldComElt
5<->Cosh(r) <->text238.htm#2162<->Cosh(r) : FldReElt -&gt; FldReElt
5<->Tanh(f) <->text238.htm#2163<->Tanh(f) : RngSerElt -&gt; RngSerElt
5<->Tanh(r) <->text238.htm#2164<->Tanh(r) : FldComElt -> FldComElt
5<->Tanh(r) <->text238.htm#2164<->Tanh(r) : FldReElt -&gt; FldReElt
5<->Coth(r) <->text238.htm#2165<->Coth(r) : FldComElt -> FldComElt
5<->Coth(r) <->text238.htm#2165<->Coth(r) : FldReElt -&gt; FldReElt
5<->Sech(r) <->text238.htm#2166<->Sech(r) : FldComElt -> FldComElt
5<->Sech(r) <->text238.htm#2166<->Sech(r) : FldReElt -&gt; FldReElt
5<->Cosech(r) <->text238.htm#2167<->Cosech(r) : FldComElt -> FldComElt
5<->Cosech(r) <->text238.htm#2167<->Cosech(r) : FldReElt -&gt; FldReElt
3<->hyperbolic :<->text238.htm#2158<->hyperbolic :: Hyperbolic Functions (REAL AND COMPLEX FIELDS)
3<->inverse-hyperbolic :<->text238.htm#2168<->inverse-hyperbolic :: Inverse Hyperbolic Functions (REAL AND COMPLEX FIELDS)
5<->Argsinh(f) <->text238.htm#2169<->Argsinh(f) : RngSerElt -&gt; RngSerElt
5<->Argsinh(r) <->text238.htm#2170<->Argsinh(r) : FldComElt -> FldComElt
5<->Argsinh(r) <->text238.htm#2170<->Argsinh(r) : FldReElt -&gt; FldReElt
5<->Argcosh(f) <->text238.htm#2171<->Argcosh(f) : RngSerElt -&gt; RngSerElt
5<->Argcosh(r) <->text238.htm#2172<->Argcosh(r) : FldComElt -> FldComElt
5<->Argcosh(r) <->text238.htm#2172<->Argcosh(r) : FldReElt -&gt; FldReElt
5<->Argtanh(f) <->text238.htm#2173<->Argtanh(f) : RngSerElt -&gt; RngSerElt
5<->Argtanh(r) <->text238.htm#2174<->Argtanh(r) : FldComElt -> FldComElt
5<->Argtanh(s) <->text238.htm#2174<->Argtanh(s) : FldReElt -&gt; FldReElt
5<->Argsech(r) <->text238.htm#2175<->Argsech(r) : FldComElt -> FldComElt
5<->Argsech(s) <->text238.htm#2175<->Argsech(s) : FldReElt -&gt; FldReElt
5<->Argcosech(r) <->text238.htm#2176<->Argcosech(r) : FldComElt -> FldComElt
5<->Argcosech(s) <->text238.htm#2176<->Argcosech(s) : FldReElt -&gt; FldReElt
5<->Argcoth(r) <->text238.htm#2177<->Argcoth(r) : FldComElt -> FldComElt
5<->Argcoth(s) <->text238.htm#2177<->Argcoth(s) : FldReElt -&gt; FldReElt
3<->inverse-hyperbolic :<->text238.htm#2168<->inverse-hyperbolic :: Inverse Hyperbolic Functions (REAL AND COMPLEX FIELDS)
3<->transcendental :<->text238.htm<->transcendental :: Transcendental Functions (REAL AND COMPLEX FIELDS)
3<->elliptic-modular :<->text239.htm<->elliptic-modular :: Elliptic and Modular Functions (REAL AND COMPLEX FIELDS)
3<->eisenstein :<->text239.htm#2179<->eisenstein :: Eisenstein Series (REAL AND COMPLEX FIELDS)
5<->Eisenstein(k, z) <->text239.htm#2180<->Eisenstein(k, z) : RngIntElt, RngSerElt -&gt; RngSerElt
5<->Eisenstein(k, t) <->text239.htm#2181<->Eisenstein(k, t) : RngIntElt, FldComElt -&gt; FldComElt
5<->Eisenstein(k, L) <->text239.htm#2182<->Eisenstein(k, L) : RngIntElt, SeqEnum -&gt; FldComElt
5<->Eisenstein(k, F) <->text239.htm#2183<->Eisenstein(k, F) : RngIntElt, QuadBinElt -&gt; RngSerElt
4<->FldRe_Eisenstein (Example H25E8)<->text239.htm#2184<->FldRe_Eisenstein (Example H25E8)
4<->Example-Eisenstein :<->text239.htm#2184<->Example-Eisenstein :: FldRe_Eisenstein (Example H25E8)
3<->eisenstein :<->text239.htm#2179<->eisenstein :: Eisenstein Series (REAL AND COMPLEX FIELDS)
3<->weierstrass :<->text239.htm#2185<->weierstrass :: Weierstrass Series (REAL AND COMPLEX FIELDS)
5<->WeierstrassSeries(z, q) <->text239.htm#2186<->WeierstrassSeries(z, q) : RngSerElt, RngSerElt -&gt; RngSerElt
5<->WeierstrassSeries(z, t) <->text239.htm#2187<->WeierstrassSeries(z, t) : RngSerElt, FldComElt -&gt; RngSerElt
5<->WeierstrassSeries(z, L) <->text239.htm#2188<->WeierstrassSeries(z, L) : RngSerElt, SeqEnum -&gt; RngSerElt
5<->WeierstrassSeries(z, F) <->text239.htm#2189<->WeierstrassSeries(z, F) : RngSerElt, QuadBinElt -&gt; RngSerElt
3<->weierstrass :<->text239.htm#2185<->weierstrass :: Weierstrass Series (REAL AND COMPLEX FIELDS)
3<->jacobi-dedekind :<->text239.htm#2190<->jacobi-dedekind :: The Jacobi &theta; and Dedekind &eta;- functions (REAL AND COMPLEX FIELDS)
5<->JacobiTheta(q, z) <->text239.htm#2191<->JacobiTheta(q, z) : FldComElt, RngSerElt[FldCom] -> RngSerElt
5<->JacobiTheta(q, z) <->text239.htm#2191<->JacobiTheta(q, z) : FldReElt, RngSerElt[FldRe] -&gt; RngSerElt
5<->JacobiTheta(q, z) <->text239.htm#2192<->JacobiTheta(q, z) : FldComElt, FldComElt -> FldComElt
5<->JacobiTheta(q, z) <->text239.htm#2192<->JacobiTheta(q, z) : FldReElt, FldReElt -&gt; FldReElt
5<->JacobiThetaNullK(q, k) <->text239.htm#2193<->JacobiThetaNullK(q, k) : FldReElt, RngIntElt -&gt; FldReElt
5<->DedekindEta(z) <->text239.htm#2194<->DedekindEta(z) : RngSerElt -&gt; RngSerElt
5<->DedekindEta(s) <->text239.htm#2195<->DedekindEta(s) : FldComElt -&gt; FldComElt
3<->jacobi-dedekind :<->text239.htm#2190<->jacobi-dedekind :: The Jacobi &theta; and Dedekind &eta;- functions (REAL AND COMPLEX FIELDS)
3<->jinvariant-modular :<->text239.htm#2196<->jinvariant-modular :: The j-Invariant and the Discriminant (REAL AND COMPLEX FIELDS)
5<->jInvariant(q) <->text239.htm#2197<->jInvariant(q) : RngSerElt -&gt; RngSerElt
5<->jInvariant(s) <->text239.htm#2198<->jInvariant(s) : FldComElt -&gt; FldComElt
5<->jInvariant(L) <->text239.htm#2199<->jInvariant(L) : SeqEnum -&gt; FldComElt
5<->jInvariant(F) <->text239.htm#2200<->jInvariant(F) : QuadBinElt -&gt; FldComElt
5<->Delta(z) <->text239.htm#2201<->Delta(z) : RngSerElt -&gt; RngSerElt
5<->Delta(t) <->text239.htm#2202<->Delta(t) : FldComElt -&gt; FldComElt
5<->Delta(L) <->text239.htm#2203<->Delta(L) : SeqEnum -&gt; FldComElt
3<->jinvariant-modular :<->text239.htm#2196<->jinvariant-modular :: The j-Invariant and the Discriminant (REAL AND COMPLEX FIELDS)
3<->weber :<->text239.htm#2204<->weber :: Weber's Functions (REAL AND COMPLEX FIELDS)
5<->WeberF(s) <->text239.htm#2205<->WeberF(s) : FldComElt -&gt; FldComElt
5<->WeberF2(g) <->text239.htm#2206<->WeberF2(g) : RngSerElt -&gt; RngSerElt
5<->WeberF2 :: WeberF1(s) <->text239.htm#2207<->WeberF2 :: WeberF1(s) : FldComElt -&gt; FldComElt
5<->WeberF1(s) <->text239.htm#2207<->WeberF1(s) : FldComElt -&gt; FldComElt
4<->FldRe_Eisenstein (Example H25E9)<->text239.htm#2208<->FldRe_Eisenstein (Example H25E9)
4<->Example-Eisenstein :<->text239.htm#2208<->Example-Eisenstein :: FldRe_Eisenstein (Example H25E9)
3<->weber :<->text239.htm#2204<->weber :: Weber's Functions (REAL AND COMPLEX FIELDS)
3<->elliptic-modular :<->text239.htm<->elliptic-modular :: Elliptic and Modular Functions (REAL AND COMPLEX FIELDS)
3<->theta :<->text240.htm<->theta :: Theta Functions (REAL AND COMPLEX FIELDS)
5<->Theta(char, z, tau) <->text240.htm#2210<->Theta(char, z, tau) : Mtrx, Mtrx, Mtrx -&gt; FldComElt
5<->Theta(char, z, A) <->text240.htm#2211<->Theta(char, z, A) : Mtrx, Mtrx, AnHcJac -&gt; FldComElt
3<->theta :<->text240.htm<->theta :: Theta Functions (REAL AND COMPLEX FIELDS)
3<->gamma-bessel :<->text241.htm<->gamma-bessel :: Gamma, Bessel and Associated  Functions (REAL AND COMPLEX FIELDS)
5<->Gamma(f) <->text241.htm#2213<->Gamma(f) : RngSerElt -&gt; RngSerElt
5<->Gamma(r) <->text241.htm#2214<->Gamma(r) : FldComElt -> FldComElt
5<->Gamma(r) <->text241.htm#2214<->Gamma(r) : FldReElt -&gt; FldReElt
5<->Gamma(r, s) <->text241.htm#2215<->Gamma(r, s) : FldReElt, FldReElt -&gt; FldReElt
5<->GammaD(s) <->text241.htm#2216<->GammaD(s) : FldReElt -&gt; FldReElt
5<->LogGamma(f) <->text241.htm#2217<->LogGamma(f) : RngSerElt -&gt; RngSerElt
5<->LogGamma(r) <->text241.htm#2218<->LogGamma(r) : FldComElt -> FldComElt
5<->LogGamma(r) <->text241.htm#2218<->LogGamma(r) : FldReElt -&gt; FldReElt
5<->LogDerivative(s) <->text241.htm#2219<->LogDerivative(s) : FldComElt -> FldComElt
5<->Psi :: LogDerivative(s) <->text241.htm#2219<->Psi :: LogDerivative(s) : FldReElt -&gt; FldReElt
5<->Psi(s) : FldComElt -> FldComElt :: LogDerivative(s) <->text241.htm#2219<->Psi(s) : FldComElt -> FldComElt :: LogDerivative(s) : FldReElt -&gt; FldReElt
5<->LogDerivative(s) <->text241.htm#2219<->LogDerivative(s) : FldReElt -&gt; FldReElt
5<->BesselFunction(n, r) <->text241.htm#2220<->BesselFunction(n, r) : RngIntElt, FldReElt -&gt; FldReElt
5<->BesselFunctionSecondKind(n, r) <->text241.htm#2221<->BesselFunctionSecondKind(n, r) : RngIntElt, FldReElt -&gt; FldReElt
5<->JBessel(n, s) <->text241.htm#2222<->JBessel(n, s) : FldReElt, FldReElt -> FldReElt
5<->JBessel(n, s) <->text241.htm#2222<->JBessel(n, s) : RngIntElt, FldReElt -&gt; FldReElt
5<->KBessel(n, s) <->text241.htm#2223<->KBessel(n, s) : FldComElt, FldReElt -> FldComElt
5<->KBessel2 :: KBessel(n, s) <->text241.htm#2223<->KBessel2 :: KBessel(n, s) : FldReElt, FldReElt -&gt; FldReElt
5<->KBessel2(n, s) : FldComElt, FldReElt -> FldComElt :: KBessel(n, s) <->text241.htm#2223<->KBessel2(n, s) : FldComElt, FldReElt -> FldComElt :: KBessel(n, s) : FldReElt, FldReElt -&gt; FldReElt
5<->KBessel(n, s) <->text241.htm#2223<->KBessel(n, s) : FldReElt, FldReElt -&gt; FldReElt
3<->gamma-bessel :<->text241.htm<->gamma-bessel :: Gamma, Bessel and Associated  Functions (REAL AND COMPLEX FIELDS)
3<->hypergeometric :<->text242.htm<->hypergeometric :: The Hypergeometric Function (REAL AND COMPLEX FIELDS)
5<->HypergeometricSeries(a,b,c, z) <->text242.htm#2225<->HypergeometricSeries(a,b,c, z) : RngElt, RngElt, RngElt, RngElt -&gt; RngElt
5<->HypergeometricU(a, b, s) <->text242.htm#2226<->HypergeometricU(a, b, s) : FldReElt, FldReElt, FldReElt -&gt; FldReElt
3<->hypergeometric :<->text242.htm<->hypergeometric :: The Hypergeometric Function (REAL AND COMPLEX FIELDS)
3<->special :<->text243.htm<->special :: Other Special Functions (REAL AND COMPLEX FIELDS)
5<->AGM :: ArithmeticGeometricMean(x, y) <->text243.htm#2228<->AGM :: ArithmeticGeometricMean(x, y) : RngSerElt, RngSerElt -&gt; RngSerElt
5<->ArithmeticGeometricMean(x, y) <->text243.htm#2228<->ArithmeticGeometricMean(x, y) : RngSerElt, RngSerElt -&gt; RngSerElt
5<->AGM :: ArithmeticGeometricMean(x, y) <->text243.htm#2229<->AGM :: ArithmeticGeometricMean(x, y) : FldReElt, FldReElt -&gt; FldReElt
5<->ArithmeticGeometricMean(x, y) <->text243.htm#2229<->ArithmeticGeometricMean(x, y) : FldReElt, FldReElt -&gt; FldReElt
5<->BernoulliNumber(n) <->text243.htm#2230<->BernoulliNumber(n) : RngIntElt -&gt; FldRatElt
5<->BernoulliApproximation(n) <->text243.htm#2231<->BernoulliApproximation(n) : RngIntElt -&gt; FldReElt
5<->DawsonIntegral(r) <->text243.htm#2232<->DawsonIntegral(r) : FldReElt -&gt; FldReElt
5<->Erf :: ErrorFunction(r) <->text243.htm#2233<->Erf :: ErrorFunction(r) : FldReElt -&gt; FldReElt
5<->ErrorFunction(r) <->text243.htm#2233<->ErrorFunction(r) : FldReElt -&gt; FldReElt
5<->Erfc :: ComplementaryErrorFunction(r) <->text243.htm#2234<->Erfc :: ComplementaryErrorFunction(r) : FldReElt -&gt; FldReElt
5<->ComplementaryErrorFunction(r) <->text243.htm#2234<->ComplementaryErrorFunction(r) : FldReElt -&gt; FldReElt
5<->ExponentialIntegral(r) <->text243.htm#2235<->ExponentialIntegral(r) : FldReElt -&gt; FldReElt
5<->ExponentialIntegralE1(r) <->text243.htm#2236<->ExponentialIntegralE1(r) : FldReElt -&gt; FldReElt
5<->LogIntegral(r) <->text243.htm#2237<->LogIntegral(r) : FldReElt -&gt; FldReElt
5<->ZetaFunction(R, n) <->text243.htm#2238<->ZetaFunction(R, n) : FldRe, RngIntElt -> FldReElt
5<->ZetaFunction(s) <->text243.htm#2238<->ZetaFunction(s) : FldReElt -&gt; FldReElt
3<->special :<->text243.htm<->special :: Other Special Functions (REAL AND COMPLEX FIELDS)
3<->numerical :<->text244.htm<->numerical :: Numerical Functions (REAL AND COMPLEX FIELDS)
3<->infinite-summation :<->text244.htm#2240<->infinite-summation :: Summation of Infinite Series (REAL AND COMPLEX FIELDS)
5<->InfiniteSum(m, i) <->text244.htm#2241<->InfiniteSum(m, i) : Map, RngIntElt -&gt; FldReElt
5<->PositiveSum(m, i) <->text244.htm#2242<->PositiveSum(m, i) : Map, RngIntElt -&gt; FldReElt
5<->AlternatingSum(m, i) <->text244.htm#2243<->AlternatingSum(m, i) : Map, RngIntElt -&gt; FldReElt
3<->infinite-summation :<->text244.htm#2240<->infinite-summation :: Summation of Infinite Series (REAL AND COMPLEX FIELDS)
3<->integration :<->text244.htm#2244<->integration :: Integration (REAL AND COMPLEX FIELDS)
5<->Interpolation(P, V, x) <->text244.htm#2245<->Interpolation(P, V, x) : [FldReElt], [FldReElt], FldReElt -&gt; FldReElt, FldReElt
5<->RombergQuadrature(f, a, b: parameters) <->text244.htm#2246<->RombergQuadrature(f, a, b: parameters) : Program, FldReElt, FldReElt -&gt; FldReElt
5<->SimpsonQuadrature(f, a, b, n) <->text244.htm#2247<->SimpsonQuadrature(f, a, b, n) : Program, FldReElt, FldReElt, RngIntElt -&gt; FldReElt
5<->TrapezoidalQuadrature(f, a, b, n) <->text244.htm#2248<->TrapezoidalQuadrature(f, a, b, n) : Program, FldReElt, FldReElt, RngIntElt -&gt; FldReElt
3<->integration :<->text244.htm#2244<->integration :: Integration (REAL AND COMPLEX FIELDS)
3<->differentiation :<->text244.htm#2249<->differentiation :: Numerical Derivatives (REAL AND COMPLEX FIELDS)
5<->NumericalDerivative(f, n, z) <->text244.htm#2250<->NumericalDerivative(f, n, z) : UserProgram, RngIntElt, FldComElt -&gt; FldComElt
4<->FldRe_NumericalDerivative (Example H25E10)<->text244.htm#2251<->FldRe_NumericalDerivative (Example H25E10)
4<->Example-NumericalDerivative :<->text244.htm#2251<->Example-NumericalDerivative :: FldRe_NumericalDerivative (Example H25E10)
3<->differentiation :<->text244.htm#2249<->differentiation :: Numerical Derivatives (REAL AND COMPLEX FIELDS)
3<->numerical :<->text244.htm<->numerical :: Numerical Functions (REAL AND COMPLEX FIELDS)
3<->real-complex :<->text233.htm<->real-complex :: REAL AND COMPLEX FIELDS
3<->mat :<->text247.htm<->mat :: MATRICES
3<->introduction :<->text248.htm<->introduction :: Introduction (MATRICES)
3<->creation :<->text249.htm<->creation :: Creation of Matrices (MATRICES)
3<->matrix :<->text249.htm#2257<->matrix :: General Matrix Construction (MATRICES)
5<->Matrix(R, m, n, Q) <->text249.htm#2258<->Matrix(R, m, n, Q) : Rng, RngIntElt, RngIntElt, [ <RngIntElt, RngIntElt, RngElt> ] -> Mtrx
5<->Matrix(R, m, n, Q) <->text249.htm#2258<->Matrix(R, m, n, Q) : Rng, RngIntElt, RngIntElt, [ [ RngElt ] ] -> Mtrx
5<->Matrix(R, m, n, Q) <->text249.htm#2258<->Matrix(R, m, n, Q) : Rng, RngIntElt, RngIntElt, [ RngElt ] -&gt; Mtrx
4<->Mat_Create (Example H26E1)<->text249.htm#2259<->Mat_Create (Example H26E1)
4<->Example-Create :<->text249.htm#2259<->Example-Create :: Mat_Create (Example H26E1)
3<->matrix :<->text249.htm#2257<->matrix :: General Matrix Construction (MATRICES)
3<->shortcuts :<->text249.htm#2260<->shortcuts :: Shortcuts (MATRICES)
5<->Matrix(m, n, Q) <->text249.htm#2261<->Matrix(m, n, Q) : RngIntElt, RngIntElt, [ RngElt ] -&gt; Mtrx
5<->Matrix(m, n, Q) <->text249.htm#2262<->Matrix(m, n, Q) : RngIntElt, RngIntElt, [ [ RngElt ] ] -&gt; Mtrx
5<->Matrix(Q) <->text249.htm#2263<->Matrix(Q) : [ Mtrx ] -&gt; Mtrx
5<->Matrix(R, n, Q) <->text249.htm#2264<->Matrix(R, n, Q) : Rng, RngIntElt, [ RngElt ] -&gt; Mtrx
5<->Matrix(n, Q) <->text249.htm#2265<->Matrix(n, Q) : RngIntElt, [ RngElt ] -&gt; Mtrx
5<->Matrix(Q) <->text249.htm#2266<->Matrix(Q) : [ [ RngElt ] ] -&gt; Mtrx
5<->Matrix(R, Q) <->text249.htm#2267<->Matrix(R, Q) : Rng, [ [ RngElt ] ] -&gt; Mtrx
4<->Mat_ShortCuts (Example H26E2)<->text249.htm#2268<->Mat_ShortCuts (Example H26E2)
4<->Example-ShortCuts :<->text249.htm#2268<->Example-ShortCuts :: Mat_ShortCuts (Example H26E2)
3<->shortcuts :<->text249.htm#2260<->shortcuts :: Shortcuts (MATRICES)
3<->special :<->text249.htm#2269<->special :: Construction of Structured Matrices (MATRICES)
5<->ZeroMatrix(R, m, n) <->text249.htm#2270<->ZeroMatrix(R, m, n) : Rng, RngIntElt, RngIntElt -&gt; Mtrx
5<->ScalarMatrix(n, s) <->text249.htm#2271<->ScalarMatrix(n, s) : RngIntElt, RngElt -&gt; Mtrx
5<->ScalarMatrix(R, n, s) <->text249.htm#2272<->ScalarMatrix(R, n, s) : Rng, RngIntElt, RngElt -&gt; Mtrx
5<->DiagonalMatrix(R, n, Q) <->text249.htm#2273<->DiagonalMatrix(R, n, Q) : Rng, RngIntElt, [ RngElt ] -&gt; Mtrx
5<->DiagonalMatrix(R, Q) <->text249.htm#2274<->DiagonalMatrix(R, Q) : Rng, [ RngElt ] -&gt; Mtrx
5<->DiagonalMatrix(Q) <->text249.htm#2275<->DiagonalMatrix(Q) : [ RngElt ] -&gt; Mtrx
5<->Matrix(A) <->text249.htm#2276<->Matrix(A) : Mtrx -&gt; Mtrx
5<->LowerTriangularMatrix(Q) <->text249.htm#2277<->LowerTriangularMatrix(Q) : [ RngElt ] -&gt; Mtrx
5<->LowerTriangularMatrix(R, Q) <->text249.htm#2278<->LowerTriangularMatrix(R, Q) : Rng, [ RngElt ] -&gt; Mtrx
5<->UpperTriangularMatrix(Q) <->text249.htm#2279<->UpperTriangularMatrix(Q) : [ RngElt ] -&gt; Mtrx
5<->UpperTriangularMatrix(R, Q) <->text249.htm#2280<->UpperTriangularMatrix(R, Q) : Rng, [ RngElt ] -&gt; Mtrx
5<->SymmetricMatrix(Q) <->text249.htm#2281<->SymmetricMatrix(Q) : [ RngElt ] -&gt; Mtrx
5<->SymmetricMatrix(R, Q) <->text249.htm#2282<->SymmetricMatrix(R, Q) : Rng, [ RngElt ] -&gt; Mtrx
5<->AntisymmetricMatrix(Q) <->text249.htm#2283<->AntisymmetricMatrix(Q) : [ RngElt ] -&gt; Mtrx
5<->AntisymmetricMatrix(R, Q) <->text249.htm#2284<->AntisymmetricMatrix(R, Q) : Rng, [ RngElt ] -&gt; Mtrx
5<->PermutationMatrix(R, Q) <->text249.htm#2285<->PermutationMatrix(R, Q) : Rng, [ RngIntElt ] -&gt; Mtrx
5<->PermutationMatrix(R, x) <->text249.htm#2286<->PermutationMatrix(R, x) : Rng, GrpPermElt -&gt; Mtrx
4<->Mat_Shortcuts (Example H26E3)<->text249.htm#2287<->Mat_Shortcuts (Example H26E3)
4<->Example-Shortcuts :<->text249.htm#2287<->Example-Shortcuts :: Mat_Shortcuts (Example H26E3)
3<->special :<->text249.htm#2269<->special :: Construction of Structured Matrices (MATRICES)
3<->special :<->text249.htm#2288<->special :: Construction of Random Matrices (MATRICES)
5<->RandomMatrix(R, m, n) <->text249.htm#2289<->RandomMatrix(R, m, n) : Rng, RngIntElt, RngIntElt -&gt; Mtrx
5<->RandomUnimodularMatrix(M, n) <->text249.htm#2290<->RandomUnimodularMatrix(M, n) : RngIntElt, RngIntElt -&gt; Mtrx
5<->RandomSLnZ(n, k, l) <->text249.htm#2291<->RandomSLnZ(n, k, l) : RngIntElt, RngIntElt, RngIntElt -&gt; AlgMatElt
5<->RandomGLnZ(n, k, l) <->text249.htm#2292<->RandomGLnZ(n, k, l) : RngIntElt, RngIntElt, RngIntElt -&gt; AlgMatElt
5<->RandomSymplecticMatrix(g, m) <->text249.htm#2293<->RandomSymplecticMatrix(g, m) : RngIntElt, RngIntElt -&gt; Mtrx
3<->special :<->text249.htm#2288<->special :: Construction of Random Matrices (MATRICES)
3<->Creating Vectors (MATRICES)<->text249.htm#2294<->Creating Vectors (MATRICES)
5<->Vector(n, Q) <->text249.htm#2295<->Vector(n, Q) : RngIntElt, [ RngElt ] -&gt; ModTupRngElt
5<->Vector(Q) <->text249.htm#2296<->Vector(Q) : [ RngElt ] -&gt; ModTupRngElt
5<->Vector(R, n, Q) <->text249.htm#2297<->Vector(R, n, Q) : Rng, RngIntElt, [ RngElt ] -&gt; ModTupRngElt
5<->Vector(R, Q) <->text249.htm#2298<->Vector(R, Q) : Rng, [ RngElt ] -&gt; ModTupRngElt
3<->Creating Vectors (MATRICES)<->text249.htm#2294<->Creating Vectors (MATRICES)
3<->creation :<->text249.htm<->creation :: Creation of Matrices (MATRICES)
3<->access :<->text250.htm<->access :: Elementary Properties (MATRICES)
5<->Nrows :: NumberOfRows(A) <->text250.htm#2300<->Nrows :: NumberOfRows(A) : Mtrx -&gt; RngIntElt
5<->NumberOfRows(A) <->text250.htm#2300<->NumberOfRows(A) : Mtrx -&gt; RngIntElt
5<->Ncols :: NumberOfColumns(A) <->text250.htm#2301<->Ncols :: NumberOfColumns(A) : Mtrx -&gt; RngIntElt
5<->NumberOfColumns(A) <->text250.htm#2301<->NumberOfColumns(A) : Mtrx -&gt; RngIntElt
5<->NNZEntries :: NumberOfNonZeroEntries(A) <->text250.htm#2302<->NNZEntries :: NumberOfNonZeroEntries(A) : Mtrx -&gt; RngIntElt
5<->NumberOfNonZeroEntries(A) <->text250.htm#2302<->NumberOfNonZeroEntries(A) : Mtrx -&gt; RngIntElt
5<->Density(A) <->text250.htm#2303<->Density(A) : Mtrx -&gt; FldRe
5<->CoefficientRing :: BaseRing(A) <->text250.htm#2304<->CoefficientRing :: BaseRing(A) : Mtrx -&gt; Rng
5<->BaseRing(A) <->text250.htm#2304<->BaseRing(A) : Mtrx -&gt; Rng
5<->Eltseq :: ElementToSequence(A) <->text250.htm#2305<->Eltseq :: ElementToSequence(A) : Mtrx -&gt; [ RngElt ]
5<->ElementToSequence(A) <->text250.htm#2305<->ElementToSequence(A) : Mtrx -&gt; [ RngElt ]
5<->RowSequence(A) <->text250.htm#2306<->RowSequence(A) : Mtrx -&gt; [ [RngElt] ]
3<->access :<->text250.htm<->access :: Elementary Properties (MATRICES)
3<->entries :<->text251.htm<->entries :: Accessing or Modifying Entries (MATRICES)
3<->index :<->text251.htm#2308<->index :: Indexing (MATRICES)
5<->A[i] <->text251.htm#2309<->A[i] : Mtrx, RngIntElt -&gt; ModTupRngElt
5<->A[i, j] <->text251.htm#2310<->A[i, j] : Mtrx, RngIntElt, RngIntElt -&gt; RngElt
5<->A[i .. j] <->text251.htm#2311<->A[i .. j] : Mtrx, RngIntElt, RngIntElt -> RngElt
5<->A[Q] <->text251.htm#2311<->A[Q] : Mtrx, [ RngIntElt ] -&gt; RngElt
5<->[] :: A[i] := v <->text251.htm#2312<->[] :: A[i] := v : Mtrx, RngIntElt, Mtrx -&gt;
5<->[] :: A[i, j] := x <->text251.htm#2313<->[] :: A[i, j] := x : Mtrx, RngIntElt, RngIntElt, RngElt -&gt;
4<->Mat_Indexing (Example H26E4)<->text251.htm#2314<->Mat_Indexing (Example H26E4)
4<->Example-Indexing :<->text251.htm#2314<->Example-Indexing :: Mat_Indexing (Example H26E4)
3<->index :<->text251.htm#2308<->index :: Indexing (MATRICES)
3<->index :<->text251.htm#2315<->index :: Extracting and Inserting Blocks (MATRICES)
5<->ExtractBlock :: Submatrix(A, i, j, p, q) <->text251.htm#2316<->ExtractBlock :: Submatrix(A, i, j, p, q) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->Submatrix(A, i, j, p, q) <->text251.htm#2316<->Submatrix(A, i, j, p, q) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->ExtractBlockRange :: SubmatrixRange(A, i, j, r, s) <->text251.htm#2317<->ExtractBlockRange :: SubmatrixRange(A, i, j, r, s) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->SubmatrixRange(A, i, j, r, s) <->text251.htm#2317<->SubmatrixRange(A, i, j, r, s) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->Submatrix(A, I, J) <->text251.htm#2318<->Submatrix(A, I, J) : Mtrx, [RngIntElt], [RngIntElt] -&gt; Mtrx
5<->InsertBlock($\sim$A, B, i, j) <->text251.htm#2319<->InsertBlock($\sim$A, B, i, j) : Mtrx, Mtrx, RngIntElt, RngIntElt -> Mtrx 
5<->InsertBlock(A, B, i, j) <->text251.htm#2319<->InsertBlock(A, B, i, j) : Mtrx, Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->RowSubmatrix(A, i, k) <->text251.htm#2320<->RowSubmatrix(A, i, k) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->RowSubmatrix(A, i) <->text251.htm#2321<->RowSubmatrix(A, i) : Mtrx, RngIntElt -&gt; Mtrx
5<->RowSubmatrixRange(A, i, j) <->text251.htm#2322<->RowSubmatrixRange(A, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->ColumnSubmatrix(A, i, k) <->text251.htm#2323<->ColumnSubmatrix(A, i, k) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->ColumnSubmatrix(A, i) <->text251.htm#2324<->ColumnSubmatrix(A, i) : Mtrx, RngIntElt -&gt; Mtrx
5<->ColumnSubmatrixRange(A, i, j) <->text251.htm#2325<->ColumnSubmatrixRange(A, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
4<->Mat_Submatrix (Example H26E5)<->text251.htm#2326<->Mat_Submatrix (Example H26E5)
4<->Example-Submatrix :<->text251.htm#2326<->Example-Submatrix :: Mat_Submatrix (Example H26E5)
3<->index :<->text251.htm#2315<->index :: Extracting and Inserting Blocks (MATRICES)
3<->row-column :<->text251.htm#2327<->row-column :: Row and Column Operations (MATRICES)
5<->SwapRows($\sim$A, i, j) <->text251.htm#2328<->SwapRows($\sim$A, i, j) : Mtrx, RngIntElt, RngIntElt -> 
5<->SwapRows(A, i, j) <->text251.htm#2328<->SwapRows(A, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->SwapColumns($\sim$A, i, j) <->text251.htm#2329<->SwapColumns($\sim$A, i, j) : Mtrx, RngIntElt, RngIntElt -> 
5<->SwapColumns(A, i, j) <->text251.htm#2329<->SwapColumns(A, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
5<->ReverseRows($\sim$A) <->text251.htm#2330<->ReverseRows($\sim$A) : Mtrx -> 
5<->ReverseRows(A) <->text251.htm#2330<->ReverseRows(A) : Mtrx -&gt; Mtrx
5<->ReverseColumns($\sim$A) <->text251.htm#2331<->ReverseColumns($\sim$A) : Mtrx -> 
5<->ReverseColumns(A) <->text251.htm#2331<->ReverseColumns(A) : Mtrx -&gt; Mtrx
5<->AddRow($\sim$A, c, i, j) <->text251.htm#2332<->AddRow($\sim$A, c, i, j) : Mtrx, RngElt, RngIntElt, RngIntElt -> 
5<->AddRow(A, c, i, j) <->text251.htm#2332<->AddRow(A, c, i, j) : Mtrx, RngElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->AddColumn($\sim$A, c, i, j) <->text251.htm#2333<->AddColumn($\sim$A, c, i, j) : Mtrx, RngElt, RngIntElt, RngIntElt -> 
5<->AddColumn(A, c, i, j) <->text251.htm#2333<->AddColumn(A, c, i, j) : Mtrx, RngElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->MultiplyRow($\sim$A, c, i) <->text251.htm#2334<->MultiplyRow($\sim$A, c, i) : Mtrx, RngElt, RngIntElt -> 
5<->MultiplyRow(A, c, i) <->text251.htm#2334<->MultiplyRow(A, c, i) : Mtrx, RngElt, RngIntElt -&gt; Mtrx
5<->MultiplyColumn($\sim$A, c, i) <->text251.htm#2335<->MultiplyColumn($\sim$A, c, i) : Mtrx, RngElt, RngIntElt -> 
5<->MultiplyColumn(A, c, i) <->text251.htm#2335<->MultiplyColumn(A, c, i) : Mtrx, RngElt, RngIntElt -&gt; Mtrx
5<->RemoveRow($\sim$A, i) <->text251.htm#2336<->RemoveRow($\sim$A, i) : Mtrx, RngIntElt -> 
5<->RemoveRow(A, i) <->text251.htm#2336<->RemoveRow(A, i) : Mtrx, RngIntElt -&gt; Mtrx
5<->RemoveColumn($\sim$A, j) <->text251.htm#2337<->RemoveColumn($\sim$A, j) : Mtrx, RngIntElt -> 
5<->RemoveColumn(A, j) <->text251.htm#2337<->RemoveColumn(A, j) : Mtrx, RngIntElt -&gt; Mtrx
5<->RemoveRowColumn($\sim$A, i, j) <->text251.htm#2338<->RemoveRowColumn($\sim$A, i, j) : Mtrx, RngIntElt -> 
5<->RemoveRowColumn(A, i, j) <->text251.htm#2338<->RemoveRowColumn(A, i, j) : Mtrx, RngIntElt -&gt; Mtrx
5<->RemoveZeroRows($\sim$A) <->text251.htm#2339<->RemoveZeroRows($\sim$A) : Mtrx -> 
5<->RemoveZeroRows(A) <->text251.htm#2339<->RemoveZeroRows(A) : Mtrx -&gt; Mtrx
4<->Mat_RowColumnOps (Example H26E6)<->text251.htm#2340<->Mat_RowColumnOps (Example H26E6)
4<->Example-RowColumnOps :<->text251.htm#2340<->Example-RowColumnOps :: Mat_RowColumnOps (Example H26E6)
3<->row-column :<->text251.htm#2327<->row-column :: Row and Column Operations (MATRICES)
3<->entries :<->text251.htm<->entries :: Accessing or Modifying Entries (MATRICES)
3<->join :<->text252.htm<->join :: Building Block Matrices (MATRICES)
5<->BlockMatrix(m, n, blocks) <->text252.htm#2342<->BlockMatrix(m, n, blocks) : RngIntElt, RngIntElt, [ Mtrx ] -&gt; Mtrx
5<->BlockMatrix(rows) <->text252.htm#2343<->BlockMatrix(rows) : [ [ Mtrx ] ] -> Mtrx
5<->BlockMatrix(m, n, rows) <->text252.htm#2343<->BlockMatrix(m, n, rows) : RngIntElt, RngIntElt, [ [ Mtrx ] ] -&gt; Mtrx
5<->HorizontalJoin(X, Y) <->text252.htm#2344<->HorizontalJoin(X, Y) : Mtrx, Mtrx -&gt; Mtrx
5<->HorizontalJoin(T) <->text252.htm#2345<->HorizontalJoin(T) : < Mtrx > -> Mtrx
5<->HorizontalJoin(Q) <->text252.htm#2345<->HorizontalJoin(Q) : [ Mtrx ] -&gt; Mtrx
5<->VerticalJoin(X, Y) <->text252.htm#2346<->VerticalJoin(X, Y) : Mtrx, Mtrx -&gt; Mtrx
5<->VerticalJoin(T) <->text252.htm#2347<->VerticalJoin(T) : < Mtrx > -> Mtrx
5<->VerticalJoin(Q) <->text252.htm#2347<->VerticalJoin(Q) : [ Mtrx ] -&gt; Mtrx<P>
5<->DiagonalJoin(X, Y) <->text252.htm#2348<->DiagonalJoin(X, Y) : Mtrx, Mtrx -&gt; Mtrx
5<->DiagonalJoin(T) <->text252.htm#2349<->DiagonalJoin(T) : < Mtrx > -> Mtrx
5<->DiagonalJoin(Q) <->text252.htm#2349<->DiagonalJoin(Q) : [ Mtrx ] -&gt; Mtrx
5<->KroneckerProduct(A, B) <->text252.htm#2350<->KroneckerProduct(A, B) : Mtrx, Mtrx -&gt; Mtrx
3<->join :<->text252.htm<->join :: Building Block Matrices (MATRICES)
3<->change-ring :<->text253.htm<->change-ring :: Changing Ring (MATRICES)
5<->Matrix :: ChangeRing(A, R) <->text253.htm#2352<->Matrix :: ChangeRing(A, R) : Mtrx, Rng -&gt; Mtrx
5<->ChangeRing(A, R) <->text253.htm#2352<->ChangeRing(A, R) : Mtrx, Rng -&gt; Mtrx
5<->ChangeRing(A, f) <->text253.htm#2353<->ChangeRing(A, f) : Mtrx, Map -> Mtrx
5<->ChangeRing(A, R, f) <->text253.htm#2353<->ChangeRing(A, R, f) : Mtrx, Rng, Map -&gt; Mtrx
5<->CanChangeRing(A, R) <->text253.htm#2354<->CanChangeRing(A, R) : Mtrx, Rng -&gt; BoolElt, Mtrx
3<->change-ring :<->text253.htm<->change-ring :: Changing Ring (MATRICES)
3<->arithmetic :<->text254.htm<->arithmetic :: Elementary Arithmetic (MATRICES)
5<->A + B <->text254.htm#2356<->A + B : Mtrx, Mtrx -&gt; Mtrx
5<->A - B <->text254.htm#2357<->A - B : Mtrx, Mtrx -&gt; Mtrx
5<->A * B <->text254.htm#2358<->A * B : Mtrx, Mtrx -&gt; Mtrx
5<->A * x <->text254.htm#2359<->A * x : Mtrx, RngElt -> Mtrx
5<->x * A <->text254.htm#2359<->x * A : RngElt, Mtrx -&gt; Mtrx
5<->- A <->text254.htm#2360<->- A : Mtrx -&gt; Mtrx
5<->A ^ -1 <->text254.htm#2361<->A ^ -1 : Mtrx, RngIntElt -&gt; Mtrx
5<->A ^ n <->text254.htm#2362<->A ^ n : Mtrx, RngIntElt -&gt; Mtrx
5<->Transpose(A) <->text254.htm#2363<->Transpose(A) : Mtrx -&gt; Mtrx
5<->AddScaledMatrix(A, s, B) <->text254.htm#2364<->AddScaledMatrix(A, s, B) : Mtrx, RngElt, Mtrx -&gt; Mtrx
5<->AddScaledMatrix(~A, s, B) <->text254.htm#2365<->AddScaledMatrix(~A, s, B) : Mtrx, RngElt, Mtrx -&gt;
3<->arithmetic :<->text254.htm<->arithmetic :: Elementary Arithmetic (MATRICES)
3<->solution-equation :<->text255.htm<->solution-equation :: Nullspaces and Solutions of Systems (MATRICES)
5<->Kernel :: Nullspace(A) <->text255.htm#2367<->Kernel :: Nullspace(A) : Mtrx -&gt; ModTupRng
5<->Nullspace(A) <->text255.htm#2367<->Nullspace(A) : Mtrx -&gt; ModTupRng
5<->KernelMatrix :: NullspaceMatrix(A) <->text255.htm#2368<->KernelMatrix :: NullspaceMatrix(A) : Mtrx -&gt; ModTupRng
5<->NullspaceMatrix(A) <->text255.htm#2368<->NullspaceMatrix(A) : Mtrx -&gt; ModTupRng
5<->NullspaceOfTranspose(A) <->text255.htm#2369<->NullspaceOfTranspose(A) : Mtrx -&gt; ModTupRng
5<->IsConsistent(A, W) <->text255.htm#2370<->IsConsistent(A, W) : Mtrx, Mtrx -&gt; BoolElt, Mtrx, ModTupRng
5<->IsConsistent(A, Q) <->text255.htm#2371<->IsConsistent(A, Q) : Mtrx, [ ModTupRng ] -&gt; BoolElt, [ ModTupRngElt ], ModTupRng
5<->Solution(A, W) <->text255.htm#2372<->Solution(A, W) : ModMatRngElt, ModTupRng -&gt; ModTupRngElt, ModTupRng
5<->Solution(A, Q) <->text255.htm#2373<->Solution(A, Q) : ModMatRngElt, [ ModTupRng ] -&gt; [ ModTupRngElt ], ModTupRng
4<->Mat_Nullspace (Example H26E7)<->text255.htm#2374<->Mat_Nullspace (Example H26E7)
4<->Example-Nullspace :<->text255.htm#2374<->Example-Nullspace :: Mat_Nullspace (Example H26E7)
4<->Mat_Solution (Example H26E8)<->text255.htm#2375<->Mat_Solution (Example H26E8)
4<->Example-Solution :<->text255.htm#2375<->Example-Solution :: Mat_Solution (Example H26E8)
3<->solution-equation :<->text255.htm<->solution-equation :: Nullspaces and Solutions of Systems (MATRICES)
3<->predicates :<->text256.htm<->predicates :: Predicates (MATRICES)
5<->IsZero(A) <->text256.htm#2377<->IsZero(A) : Mtrx -&gt; BoolElt
5<->IsOne(A) <->text256.htm#2378<->IsOne(A) : Mtrx -&gt; BoolElt
5<->IsMinusOne(A) <->text256.htm#2379<->IsMinusOne(A) : Mtrx -&gt; BoolElt
5<->IsScalar(A) <->text256.htm#2380<->IsScalar(A) : Mtrx -&gt; BoolElt
5<->IsDiagonal(A) <->text256.htm#2381<->IsDiagonal(A) : Mtrx -&gt; BoolElt
5<->IsSymmetric(A) <->text256.htm#2382<->IsSymmetric(A) : Mtrx -&gt; BoolElt
5<->IsUpperTriangular(A) <->text256.htm#2383<->IsUpperTriangular(A) : Mtrx -&gt; BoolElt
5<->IsLowerTriangular(A) <->text256.htm#2384<->IsLowerTriangular(A) : Mtrx -&gt; BoolElt
5<->IsUnit(A) <->text256.htm#2385<->IsUnit(A) : Mtrx -&gt; BoolElt
5<->IsSingular(A) <->text256.htm#2386<->IsSingular(A) : Mtrx -&gt; BoolElt
5<->IsSymplecticMatrix(A) <->text256.htm#2387<->IsSymplecticMatrix(A) : Mtrx -&gt; BoolElt
3<->predicates :<->text256.htm<->predicates :: Predicates (MATRICES)
3<->properties :<->text257.htm<->properties :: Determinant and Other Properties (MATRICES)
5<->Determinant(A: parameters) <->text257.htm#2389<->Determinant(A: parameters) : Mtrx -&gt; RngElt
5<->Trace(A) <->text257.htm#2390<->Trace(A) : Mtrx -&gt; RngElt
5<->TraceOfProduct(A, B) <->text257.htm#2391<->TraceOfProduct(A, B) : Mtrx, Mtrx -&gt; RngElt
5<->Rank(A) <->text257.htm#2392<->Rank(A) : Mtrx -&gt; RngIntElt
5<->Minor(M, i, j) <->text257.htm#2393<->Minor(M, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; RngElt
5<->Minor(M, I, J) <->text257.htm#2394<->Minor(M, I, J) : Mtrx, [RngIntElt], [RngIntElt] -&gt; RngElt
5<->Minors(M, r) <->text257.htm#2395<->Minors(M, r) : Mtrx, RngIntElt -&gt; SeqEnum
5<->Cofactor(M, i, j) <->text257.htm#2396<->Cofactor(M, i, j) : Mtrx, RngIntElt, RngIntElt -&gt; RngElt
5<->Cofactors(M) <->text257.htm#2397<->Cofactors(M) : Mtrx -&gt; SeqEnum
5<->Cofactors(M, r) <->text257.htm#2398<->Cofactors(M, r) : Mtrx, RngIntElt -&gt; SeqEnum
5<->Pfaffian(M, I, J) <->text257.htm#2399<->Pfaffian(M, I, J) : Mtrx, [RngIntElt], [RngIntElt] -> RngElt
5<->Pfaffians :: Pfaffian(M) <->text257.htm#2399<->Pfaffians :: Pfaffian(M) : Mtrx -&gt; RngElt
5<->Pfaffian(M) <->text257.htm#2399<->Pfaffian(M) : Mtrx -&gt; RngElt
3<->properties :<->text257.htm<->properties :: Determinant and Other Properties (MATRICES)
3<->properties :<->text258.htm<->properties :: Minimal and Characteristic  Polynomials and Eigenvalues (MATRICES)
5<->MinimalPolynomial(A: parameters) <->text258.htm#2401<->MinimalPolynomial(A: parameters) : Mtrx -&gt; RngUPolElt
5<->CharacteristicPolynomial(A: parameters) <->text258.htm#2402<->CharacteristicPolynomial(A: parameters) : Mtrx -&gt; RngUPolElt
5<->MCPolynomials :: MinimalAndCharacteristicPolynomials(A: parameters) <->text258.htm#2403<->MCPolynomials :: MinimalAndCharacteristicPolynomials(A: parameters) : Mtrx -&gt; RngUPolElt, RngUPolElt
5<->MinimalAndCharacteristicPolynomials(A: parameters) <->text258.htm#2403<->MinimalAndCharacteristicPolynomials(A: parameters) : Mtrx -&gt; RngUPolElt, RngUPolElt
5<->FactoredMinimalPolynomial(A: parameters) <->text258.htm#2404<->FactoredMinimalPolynomial(A: parameters) : Mtrx -&gt; [ &lt;RngUPolElt, RngIntElt&gt;]
5<->FactoredCharacteristicPolynomial(A: parameters) <->text258.htm#2405<->FactoredCharacteristicPolynomial(A: parameters) : Mtrx -&gt; [ &lt;RngUPolElt, RngIntElt&gt;]
5<->FactoredMCPolynomials :: FactoredMinimalAndCharacteristicPolynomials(A: parameters) <->text258.htm#2406<->FactoredMCPolynomials :: FactoredMinimalAndCharacteristicPolynomials(A: parameters) : Mtrx -&gt; [&lt;RngUPolElt, RngIntElt&gt;], [&lt;RngUPolElt, RngIntElt&gt;]
5<->FactoredMinimalAndCharacteristicPolynomials(A: parameters) <->text258.htm#2406<->FactoredMinimalAndCharacteristicPolynomials(A: parameters) : Mtrx -&gt; [&lt;RngUPolElt, RngIntElt&gt;], [&lt;RngUPolElt, RngIntElt&gt;]
5<->Eigenvalues(A) <->text258.htm#2407<->Eigenvalues(A) : Mtrx -&gt; { &lt;FldElt, RngIntElt&gt; }
5<->Eigenspace(A, e) <->text258.htm#2408<->Eigenspace(A, e) : AlgMatElt, FldElt -&gt; ModTup
3<->properties :<->text258.htm<->properties :: Minimal and Characteristic  Polynomials and Eigenvalues (MATRICES)
3<->canonical :<->text259.htm<->canonical :: Canonical Forms (MATRICES)
3<->canonical :<->text259.htm#2410<->canonical :: Canonical Forms over General  Rings (MATRICES)
5<->EchelonForm(A) <->text259.htm#2411<->EchelonForm(A) : Mtrx -&gt; Mtrx, AlgMatElt
5<->Adjoint(A) <->text259.htm#2412<->Adjoint(A) : Mtrx -&gt; AlgMatElt
3<->canonical :<->text259.htm#2410<->canonical :: Canonical Forms over General  Rings (MATRICES)
3<->canonical-field :<->text259.htm#2413<->canonical-field :: Canonical Forms over Fields (MATRICES)
5<->PrimaryRationalForm(A) <->text259.htm#2414<->PrimaryRationalForm(A) : Mtrx -&gt; AlgMatElt, AlgMatElt, [ &lt;RngUPolElt, RngIntElt ]
5<->JordanForm(A) <->text259.htm#2415<->JordanForm(A) : Mtrx -&gt; Mtrx, AlgMatElt, [ &lt;RngUPolElt, RngIntElt&gt; ]
5<->RationalForm(A) <->text259.htm#2416<->RationalForm(A) : Mtrx -&gt; Mtrx, AlgMatElt, [ RngUPolElt ]
5<->PrimaryInvariantFactors(A) <->text259.htm#2417<->PrimaryInvariantFactors(A) : Mtrx -&gt; [ &lt;RngUPolElt, RngIntElt&gt; ]
5<->InvariantFactors(A) <->text259.htm#2418<->InvariantFactors(A) : Mtrx -&gt; [ RngUPolElt ]
5<->IsSimilar(A, B) <->text259.htm#2419<->IsSimilar(A, B) : AlgMatElt, AlgMatElt -&gt; BoolElt, AlgMatElt
5<->HessenbergForm(A) <->text259.htm#2420<->HessenbergForm(A) : Mtrx -&gt; AlgMatElt
5<->FrobeniusFormAlternating(A) <->text259.htm#2421<->FrobeniusFormAlternating(A) : AlgMatElt -&gt; SeqEnum
4<->Mat_CanonicalForms (Example H26E9)<->text259.htm#2422<->Mat_CanonicalForms (Example H26E9)
4<->Example-CanonicalForms :<->text259.htm#2422<->Example-CanonicalForms :: Mat_CanonicalForms (Example H26E9)
3<->canonical-field :<->text259.htm#2413<->canonical-field :: Canonical Forms over Fields (MATRICES)
3<->canonical-euclidean :<->text259.htm#2423<->canonical-euclidean :: Canonical Forms over Euclidean Domains (MATRICES)
5<->HermiteForm(A) <->text259.htm#2424<->HermiteForm(A) : Mtrx -&gt; Mtrx, ModMatRngElt
5<->SmithForm(A) <->text259.htm#2425<->SmithForm(A) : ModMatRngElt -&gt; ModMatRngElt, ModMatRngElt, ModMatRngElt
5<->ElementaryDivisors(A) <->text259.htm#2426<->ElementaryDivisors(A) : Mtrx -&gt; [RngElt]
5<->Saturation(A) <->text259.htm#2427<->Saturation(A) : Mtrx -&gt; Mtrx
4<->Mat_Forms1 (Example H26E10)<->text259.htm#2428<->Mat_Forms1 (Example H26E10)
4<->Example-Forms1 :<->text259.htm#2428<->Example-Forms1 :: Mat_Forms1 (Example H26E10)
3<->canonical-euclidean :<->text259.htm#2423<->canonical-euclidean :: Canonical Forms over Euclidean Domains (MATRICES)
3<->canonical :<->text259.htm<->canonical :: Canonical Forms (MATRICES)
3<->order :<->text260.htm<->order :: Orders of Invertible Matrices (MATRICES)
5<->HasFiniteOrder(A) <->text260.htm#2430<->HasFiniteOrder(A) : Mtrx -&gt; BoolElt
5<->Order(A) <->text260.htm#2431<->Order(A) : AlgMatElt -&gt; RngIntElt
5<->FactoredOrder(A) <->text260.htm#2432<->FactoredOrder(A) : AlgMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->ProjectiveOrder(A) <->text260.htm#2433<->ProjectiveOrder(A) : AlgMatElt -&gt; RngIntElt, RngElt
5<->FactoredProjectiveOrder(A) <->text260.htm#2434<->FactoredProjectiveOrder(A) : AlgMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ], RngElt
3<->order :<->text260.htm<->order :: Orders of Invertible Matrices (MATRICES)
3<->numerical-linalg :<->text261.htm<->numerical-linalg :: Numerical Linear Algebra (MATRICES)
5<->RQDecomposition(M) <->text261.htm#2436<->RQDecomposition(M) : Mtrx[RngReCom] -&gt; Mtrx, AlgMatElt
5<->QLDecomposition(M) <->text261.htm#2437<->QLDecomposition(M) : Mtrx[RngReCom] -&gt; AlgMatElt, Mtrx
5<->NumericalInverse(M) <->text261.htm#2438<->NumericalInverse(M) : Mtrx[RngReCom] -&gt; AlgMatElt
4<->Mat_numerlinalg-examples (Example H26E11)<->text261.htm#2439<->Mat_numerlinalg-examples (Example H26E11)
4<->Example-numerlinalg-examples :<->text261.htm#2439<->Example-numerlinalg-examples :: Mat_numerlinalg-examples (Example H26E11)
3<->rank-kernel-solution :<->text261.htm#2440<->rank-kernel-solution :: Rank, Kernel, Solution, and Pseudoinverse (MATRICES)
5<->NumericalRank(M) <->text261.htm#2441<->NumericalRank(M) : Mtrx[RngReCom] -&gt; RngIntElt
5<->NumericalKernel(M) <->text261.htm#2442<->NumericalKernel(M) : Mtrx[RngReCom] -&gt; Mtrx
5<->NumericalImage(M) <->text261.htm#2443<->NumericalImage(M) : Mtrx[RngReCom] -&gt; Mtrx
5<->NumericalSolution(M,w) <->text261.htm#2444<->NumericalSolution(M,w) : Mtrx[RngReCom], Mtrx[RngReCom] -&gt; Mtrx, Mtrx
5<->NumericalIsConsistent(M,w) <->text261.htm#2445<->NumericalIsConsistent(M,w) : Mtrx[RngReCom], Mtrx[RngReCom] -&gt; BoolElt, Mtrx, Mtrx
5<->NumericalPseudoinverse(M) <->text261.htm#2446<->NumericalPseudoinverse(M) : Mtrx[RngReCom] -&gt; Mtrx
4<->Mat_numerlinalg-examples2 (Example H26E12)<->text261.htm#2447<->Mat_numerlinalg-examples2 (Example H26E12)
4<->Example-numerlinalg-examples2 :<->text261.htm#2447<->Example-numerlinalg-examples2 :: Mat_numerlinalg-examples2 (Example H26E12)
3<->rank-kernel-solution :<->text261.htm#2440<->rank-kernel-solution :: Rank, Kernel, Solution, and Pseudoinverse (MATRICES)
3<->matnumer-eigenvalues :<->text261.htm#2448<->matnumer-eigenvalues :: Eigenvalues and the Singular Value Decomposition (MATRICES)
5<->NumericalHessenbergForm(M) <->text261.htm#2449<->NumericalHessenbergForm(M) : Mtrx[RngReCom] -&gt; Mtrx, Mtrx
5<->NumericalSchurForm(M) <->text261.htm#2450<->NumericalSchurForm(M) : Mtrx[RngReCom] -&gt; Mtrx, Mtrx
5<->NumericalEigenvalues(M) <->text261.htm#2451<->NumericalEigenvalues(M) : Mtrx[RngReCom] -&gt; SeqEnum
5<->NumericalEigenvectors(M, e) <->text261.htm#2452<->NumericalEigenvectors(M, e) : Mtrx, FldComElt -&gt; SeqEnum
5<->NumericalBidiagonalForm(M) <->text261.htm#2453<->NumericalBidiagonalForm(M) : Mtrx[RngReCom] -&gt; Mtrx, Mtrx, Mtrx
5<->NumericalSingularValueDecomposition(M) <->text261.htm#2454<->NumericalSingularValueDecomposition(M) : Mtrx[RngReCom] -&gt; Mtrx, Mtrx, Mtrx
4<->Mat_numerlinalg-examples3 (Example H26E13)<->text261.htm#2455<->Mat_numerlinalg-examples3 (Example H26E13)
4<->Example-numerlinalg-examples3 :<->text261.htm#2455<->Example-numerlinalg-examples3 :: Mat_numerlinalg-examples3 (Example H26E13)
4<->Mat_numerlinalg-examples4 (Example H26E14)<->text261.htm#2456<->Mat_numerlinalg-examples4 (Example H26E14)
4<->Example-numerlinalg-examples4 :<->text261.htm#2456<->Example-numerlinalg-examples4 :: Mat_numerlinalg-examples4 (Example H26E14)
3<->matnumer-eigenvalues :<->text261.htm#2448<->matnumer-eigenvalues :: Eigenvalues and the Singular Value Decomposition (MATRICES)
3<->numerical-linalg :<->text261.htm<->numerical-linalg :: Numerical Linear Algebra (MATRICES)
3<->misc :<->text262.htm<->misc :: Miscellaneous Operations on  Matrices (MATRICES)
5<->FrobeniusImage(A, e) <->text262.htm#2458<->FrobeniusImage(A, e) : Mtrx, RngIntElt -&gt; Mtrx
3<->misc :<->text262.htm<->misc :: Miscellaneous Operations on  Matrices (MATRICES)
3<->mat :<->text247.htm<->mat :: MATRICES
3<->smat :<->text265.htm<->smat :: SPARSE MATRICES
3<->introduction :<->text266.htm<->introduction :: Introduction (SPARSE MATRICES)
3<->creation :<->text267.htm<->creation :: Creation of Sparse Matrices (SPARSE MATRICES)
3<->matrix :<->text267.htm#2464<->matrix :: Construction of Initialized Sparse  Matrices (SPARSE MATRICES)
5<->SparseMatrix(m, n, Q) <->text267.htm#2465<->SparseMatrix(m, n, Q) : RngIntElt, RngIntElt, [ <RngIntElt, RngIntElt, RngElt> ] -> MtrxSprs
5<->SparseMatrix(R, m, n, Q) <->text267.htm#2465<->SparseMatrix(R, m, n, Q) : Rng, RngIntElt, RngIntElt, [ &lt;RngIntElt, RngIntElt, RngElt&gt; ] -&gt; MtrxSprs
5<->SparseMatrix(R, m, n) <->text267.htm#2466<->SparseMatrix(R, m, n) : Rng, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->SparseMatrix(m, n) <->text267.htm#2467<->SparseMatrix(m, n) : RngIntElt, RngIntElt -&gt; MtrxSprs
3<->matrix :<->text267.htm#2464<->matrix :: Construction of Initialized Sparse  Matrices (SPARSE MATRICES)
3<->matrix :<->text267.htm#2468<->matrix :: Construction of Trivial Sparse Matrices (SPARSE MATRICES)
5<->SparseMatrix() <->text267.htm#2469<->SparseMatrix() : -> MtrxSprs
5<->SparseMatrix(R) <->text267.htm#2469<->SparseMatrix(R) : Rng -&gt; MtrxSprs
4<->SMat_Create (Example H27E1)<->text267.htm#2470<->SMat_Create (Example H27E1)
4<->Example-Create :<->text267.htm#2470<->Example-Create :: SMat_Create (Example H27E1)
3<->matrix :<->text267.htm#2468<->matrix :: Construction of Trivial Sparse Matrices (SPARSE MATRICES)
3<->special :<->text267.htm#2471<->special :: Construction of Structured Matrices (SPARSE MATRICES)
5<->IdentitySparseMatrix(R, n) <->text267.htm#2472<->IdentitySparseMatrix(R, n) : Rng, RngElt -&gt; MtrxSprs
5<->ScalarSparseMatrix(n, s) <->text267.htm#2473<->ScalarSparseMatrix(n, s) : RngIntElt, RngElt -&gt; MtrxSprs
5<->ScalarSparseMatrix(R, n, s) <->text267.htm#2474<->ScalarSparseMatrix(R, n, s) : Rng, RngIntElt, RngElt -&gt; MtrxSprs
5<->DiagonalSparseMatrix(R, n, Q) <->text267.htm#2475<->DiagonalSparseMatrix(R, n, Q) : Rng, RngIntElt, [ RngElt ] -&gt; MtrxSprs
5<->DiagonalSparseMatrix(R, Q) <->text267.htm#2476<->DiagonalSparseMatrix(R, Q) : Rng, [ RngElt ] -&gt; MtrxSprs
5<->DiagonalSparseMatrix(Q) <->text267.htm#2477<->DiagonalSparseMatrix(Q) : [ RngElt ] -&gt; MtrxSprs
3<->special :<->text267.htm#2471<->special :: Construction of Structured Matrices (SPARSE MATRICES)
3<->parent :<->text267.htm#2478<->parent :: Parents of Sparse Matrices (SPARSE MATRICES)
5<->SparseMatrixStructure(R) <->text267.htm#2479<->SparseMatrixStructure(R) : [ Rng ] -&gt; MtrxSprsStr
3<->parent :<->text267.htm#2478<->parent :: Parents of Sparse Matrices (SPARSE MATRICES)
3<->creation :<->text267.htm<->creation :: Creation of Sparse Matrices (SPARSE MATRICES)
3<->access :<->text268.htm<->access :: Accessing Sparse Matrices (SPARSE MATRICES)
3<->invariants :<->text268.htm#2481<->invariants :: Elementary Properties (SPARSE MATRICES)
5<->CoefficientRing :: BaseRing(A) <->text268.htm#2482<->CoefficientRing :: BaseRing(A) : MtrxSprs -&gt; Rng
5<->BaseRing(A) <->text268.htm#2482<->BaseRing(A) : MtrxSprs -&gt; Rng
5<->Nrows :: NumberOfRows(A) <->text268.htm#2483<->Nrows :: NumberOfRows(A) : MtrxSprs -&gt; RngIntElt
5<->NumberOfRows(A) <->text268.htm#2483<->NumberOfRows(A) : MtrxSprs -&gt; RngIntElt
5<->Ncols :: NumberOfColumns(A) <->text268.htm#2484<->Ncols :: NumberOfColumns(A) : MtrxSprs -&gt; RngIntElt
5<->NumberOfColumns(A) <->text268.htm#2484<->NumberOfColumns(A) : MtrxSprs -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(A) <->text268.htm#2485<->Eltseq :: ElementToSequence(A) : Mtrx -&gt; [ &lt;RngIntElt, RngIntElt, RngElt&gt; ]
5<->ElementToSequence(A) <->text268.htm#2485<->ElementToSequence(A) : Mtrx -&gt; [ &lt;RngIntElt, RngIntElt, RngElt&gt; ]
5<->NNZEntries :: NumberOfNonZeroEntries(A) <->text268.htm#2486<->NNZEntries :: NumberOfNonZeroEntries(A) : MtrxSprs -&gt; RngIntElt
5<->NumberOfNonZeroEntries(A) <->text268.htm#2486<->NumberOfNonZeroEntries(A) : MtrxSprs -&gt; RngIntElt
5<->Density(A) <->text268.htm#2487<->Density(A) : MtrxSprs -&gt; FldRe
5<->Support(A, i) <->text268.htm#2488<->Support(A, i) : MtrxSprs, RngIntElt -&gt; [RngIntElt]
5<->Support(A) <->text268.htm#2489<->Support(A) : MtrxSprs -&gt; [ &lt;RngIntElt, RngIntElt, RngElt&gt; ]
3<->invariants :<->text268.htm#2481<->invariants :: Elementary Properties (SPARSE MATRICES)
3<->weights :<->text268.htm#2490<->weights :: Weights (SPARSE MATRICES)
5<->RowWeight(A, i) <->text268.htm#2491<->RowWeight(A, i) : MtrxSprs, RngIntElt -&gt; RngIntElt
5<->RowWeights(A) <->text268.htm#2492<->RowWeights(A) : MtrxSprs -&gt; [RngIntElt]
5<->ColumnWeight(A, j) <->text268.htm#2493<->ColumnWeight(A, j) : MtrxSprs, RngIntElt -&gt; RngIntElt
5<->ColumnWeights(A) <->text268.htm#2494<->ColumnWeights(A) : MtrxSprs -&gt; [RngIntElt]
3<->weights :<->text268.htm#2490<->weights :: Weights (SPARSE MATRICES)
3<->access :<->text268.htm<->access :: Accessing Sparse Matrices (SPARSE MATRICES)
3<->entries :<->text269.htm<->entries :: Accessing or Modifying Entries (SPARSE MATRICES)
5<->A[i] <->text269.htm#2496<->A[i] : MtrxSprs, RngIntElt -&gt; ModTupRngElt
5<->A[i, j] <->text269.htm#2497<->A[i, j] : MtrxSprs, RngIntElt, RngIntElt -&gt; RngElt
5<->[] :: A[i, j] := x <->text269.htm#2498<->[] :: A[i, j] := x : MtrxSprs, RngIntElt, RngIntElt, RngElt -&gt;
5<->SetEntry(~A, i, j, x) <->text269.htm#2499<->SetEntry(~A, i, j, x) : MtrxSprs, RngIntElt, RngIntElt, RngElt -&gt;
4<->SMat_Indexing (Example H27E2)<->text269.htm#2500<->SMat_Indexing (Example H27E2)
4<->Example-Indexing :<->text269.htm#2500<->Example-Indexing :: SMat_Indexing (Example H27E2)
3<->index :<->text269.htm#2501<->index :: Extracting and Inserting Blocks (SPARSE MATRICES)
5<->ExtractBlock :: Submatrix(A, i, j, p, q) <->text269.htm#2502<->ExtractBlock :: Submatrix(A, i, j, p, q) : MtrxSprs, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->Submatrix(A, i, j, p, q) <->text269.htm#2502<->Submatrix(A, i, j, p, q) : MtrxSprs, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->ExtractBlockRange :: SubmatrixRange(A, i, j, r, s) <->text269.htm#2503<->ExtractBlockRange :: SubmatrixRange(A, i, j, r, s) : MtrxSprs, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->SubmatrixRange(A, i, j, r, s) <->text269.htm#2503<->SubmatrixRange(A, i, j, r, s) : MtrxSprs, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->Submatrix(A, I, J) <->text269.htm#2504<->Submatrix(A, I, J) : MtrxSprs, [RngIntElt], [RngIntElt] -&gt; MtrxSprs
5<->InsertBlock($\sim$A, B, i, j) <->text269.htm#2505<->InsertBlock($\sim$A, B, i, j) : MtrxSprs, MtrxSprs, RngIntElt, RngIntElt -> MtrxSprs 
5<->InsertBlock(A, B, i, j) <->text269.htm#2505<->InsertBlock(A, B, i, j) : MtrxSprs, MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->RowSubmatrix(A, i, k) <->text269.htm#2506<->RowSubmatrix(A, i, k) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->RowSubmatrix(A, i) <->text269.htm#2507<->RowSubmatrix(A, i) : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->RowSubmatrixRange(A, i, j) <->text269.htm#2508<->RowSubmatrixRange(A, i, j) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->ColumnSubmatrix(A, i, k) <->text269.htm#2509<->ColumnSubmatrix(A, i, k) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->ColumnSubmatrix(A, i) <->text269.htm#2510<->ColumnSubmatrix(A, i) : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->ColumnSubmatrixRange(A, i, j) <->text269.htm#2511<->ColumnSubmatrixRange(A, i, j) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
3<->index :<->text269.htm#2501<->index :: Extracting and Inserting Blocks (SPARSE MATRICES)
3<->row-column :<->text269.htm#2512<->row-column :: Row and Column Operations (SPARSE MATRICES)
5<->SwapRows($\sim$A, i, j) <->text269.htm#2513<->SwapRows($\sim$A, i, j) : MtrxSprs, RngIntElt, RngIntElt -> 
5<->SwapRows(A, i, j) <->text269.htm#2513<->SwapRows(A, i, j) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->SwapColumns($\sim$A, i, j) <->text269.htm#2514<->SwapColumns($\sim$A, i, j) : MtrxSprs, RngIntElt, RngIntElt -> 
5<->SwapColumns(A, i, j) <->text269.htm#2514<->SwapColumns(A, i, j) : MtrxSprs, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->ReverseRows($\sim$A) <->text269.htm#2515<->ReverseRows($\sim$A) : MtrxSprs -> 
5<->ReverseRows(A) <->text269.htm#2515<->ReverseRows(A) : MtrxSprs -&gt; MtrxSprs
5<->ReverseColumns($\sim$A) <->text269.htm#2516<->ReverseColumns($\sim$A) : MtrxSprs -> 
5<->ReverseColumns(A) <->text269.htm#2516<->ReverseColumns(A) : MtrxSprs -&gt; MtrxSprs
5<->AddRow($\sim$A, c, i, j) <->text269.htm#2517<->AddRow($\sim$A, c, i, j) : MtrxSprs, RngElt, RngIntElt, RngIntElt -> 
5<->AddRow(A, c, i, j) <->text269.htm#2517<->AddRow(A, c, i, j) : MtrxSprs, RngElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->AddColumn($\sim$A, c, i, j) <->text269.htm#2518<->AddColumn($\sim$A, c, i, j) : MtrxSprs, RngElt, RngIntElt, RngIntElt -> 
5<->AddColumn(A, c, i, j) <->text269.htm#2518<->AddColumn(A, c, i, j) : MtrxSprs, RngElt, RngIntElt, RngIntElt -&gt; MtrxSprs
5<->MultiplyRow($\sim$A, c, i) <->text269.htm#2519<->MultiplyRow($\sim$A, c, i) : MtrxSprs, RngElt, RngIntElt -> 
5<->MultiplyRow(A, c, i) <->text269.htm#2519<->MultiplyRow(A, c, i) : MtrxSprs, RngElt, RngIntElt -&gt; MtrxSprs
5<->MultiplyColumn($\sim$A, c, i) <->text269.htm#2520<->MultiplyColumn($\sim$A, c, i) : MtrxSprs, RngElt, RngIntElt -> 
5<->MultiplyColumn(A, c, i) <->text269.htm#2520<->MultiplyColumn(A, c, i) : MtrxSprs, RngElt, RngIntElt -&gt; MtrxSprs
5<->RemoveRow($\sim$A, i) <->text269.htm#2521<->RemoveRow($\sim$A, i) : MtrxSprs, RngIntElt -> 
5<->RemoveRow(A, i) <->text269.htm#2521<->RemoveRow(A, i) : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->RemoveColumn($\sim$A, j) <->text269.htm#2522<->RemoveColumn($\sim$A, j) : MtrxSprs, RngIntElt -> 
5<->RemoveColumn(A, j) <->text269.htm#2522<->RemoveColumn(A, j) : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->RemoveRowColumn($\sim$A, i, j) <->text269.htm#2523<->RemoveRowColumn($\sim$A, i, j) : MtrxSprs, RngIntElt -> 
5<->RemoveRowColumn(A, i, j) <->text269.htm#2523<->RemoveRowColumn(A, i, j) : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->RemoveZeroRows($\sim$A) <->text269.htm#2524<->RemoveZeroRows($\sim$A) : MtrxSprs ->
5<->RemoveZeroRows(A) <->text269.htm#2524<->RemoveZeroRows(A) : MtrxSprs -&gt; MtrxSprs
3<->row-column :<->text269.htm#2512<->row-column :: Row and Column Operations (SPARSE MATRICES)
3<->entries :<->text269.htm<->entries :: Accessing or Modifying Entries (SPARSE MATRICES)
3<->join :<->text270.htm<->join :: Building Block Matrices (SPARSE MATRICES)
5<->HorizontalJoin(A, B) <->text270.htm#2526<->HorizontalJoin(A, B) : MtrxSprs, MtrxSprs -&gt; MtrxSprs
5<->VerticalJoin(A, B) <->text270.htm#2527<->VerticalJoin(A, B) : MtrxSprs, MtrxSprs -&gt; MtrxSprs
5<->DiagonalJoin(A, B) <->text270.htm#2528<->DiagonalJoin(A, B) : MtrxSprs, MtrxSprs -&gt; MtrxSprs
3<->join :<->text270.htm<->join :: Building Block Matrices (SPARSE MATRICES)
3<->conversion :<->text271.htm<->conversion :: Conversion to and from Dense  Matrices (SPARSE MATRICES)
5<->Matrix(A) <->text271.htm#2530<->Matrix(A) : MtrxSprs -&gt; Mtrx
5<->SparseMatrix(A) <->text271.htm#2531<->SparseMatrix(A) : Mtrx -&gt; MtrxSprs
3<->conversion :<->text271.htm<->conversion :: Conversion to and from Dense  Matrices (SPARSE MATRICES)
3<->change-ring :<->text272.htm<->change-ring :: Changing Ring (SPARSE MATRICES)
5<->SparseMatrix :: ChangeRing(A, R) <->text272.htm#2533<->SparseMatrix :: ChangeRing(A, R) : MtrxSprs, Rng -&gt; MtrxSprs
5<->ChangeRing(A, R) <->text272.htm#2533<->ChangeRing(A, R) : MtrxSprs, Rng -&gt; MtrxSprs
3<->change-ring :<->text272.htm<->change-ring :: Changing Ring (SPARSE MATRICES)
3<->predicates :<->text273.htm<->predicates :: Predicates (SPARSE MATRICES)
5<->A eq B <->text273.htm#2535<->A eq B : MtrxSprs, MtrxSprs -&gt; BoolElt
5<->IsZero(A) <->text273.htm#2536<->IsZero(A) : MtrxSprs -&gt; BoolElt
5<->IsOne(A) <->text273.htm#2537<->IsOne(A) : MtrxSprs -&gt; BoolElt
5<->IsMinusOne(A) <->text273.htm#2538<->IsMinusOne(A) : MtrxSprs -&gt; BoolElt
5<->IsScalar(A) <->text273.htm#2539<->IsScalar(A) : MtrxSprs -&gt; BoolElt
5<->IsDiagonal(A) <->text273.htm#2540<->IsDiagonal(A) : MtrxSprs -&gt; BoolElt
5<->IsSymmetric(A) <->text273.htm#2541<->IsSymmetric(A) : MtrxSprs -&gt; BoolElt
5<->IsUpperTriangular(A) <->text273.htm#2542<->IsUpperTriangular(A) : MtrxSprs -&gt; BoolElt
5<->IsLowerTriangular(A) <->text273.htm#2543<->IsLowerTriangular(A) : MtrxSprs -&gt; BoolElt
3<->predicates :<->text273.htm<->predicates :: Predicates (SPARSE MATRICES)
3<->arithmetic :<->text274.htm<->arithmetic :: Elementary Arithmetic (SPARSE MATRICES)
5<->A + B <->text274.htm#2545<->A + B : MtrxSprs, MtrxSprs -&gt; MtrxSprs
5<->A - B <->text274.htm#2546<->A - B : MtrxSprs, MtrxSprs -&gt; MtrxSprs
5<->A * B <->text274.htm#2547<->A * B : MtrxSprs, MtrxSprs -&gt; MtrxSprs
5<->A * x <->text274.htm#2548<->A * x : MtrxSprs, RngElt -> MtrxSprs
5<->x * A <->text274.htm#2548<->x * A : RngElt, MtrxSprs -&gt; MtrxSprs
5<->-A <->text274.htm#2549<->-A : MtrxSprs -&gt; MtrxSprs
5<->A ^-1 <->text274.htm#2550<->A ^-1 : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->A ^ n <->text274.htm#2551<->A ^ n : MtrxSprs, RngIntElt -&gt; MtrxSprs
5<->Transpose(A) <->text274.htm#2552<->Transpose(A) : MtrxSprs -&gt; MtrxSprs
3<->arithmetic :<->text274.htm<->arithmetic :: Elementary Arithmetic (SPARSE MATRICES)
3<->multiply :<->text275.htm<->multiply :: Multiplying Vectors or Matrices by Sparse Matrices (SPARSE MATRICES)
5<->V * A <->text275.htm#2554<->V * A : Mtrx, MtrxSprs -> Mtrx
5<->v * A <->text275.htm#2554<->v * A : ModTupRng, MtrxSprs -&gt; ModTupRng
5<->MultiplyByTranspose(V, A) <->text275.htm#2555<->MultiplyByTranspose(V, A) : Mtrx, MtrxSprs -> Mtrx
5<->MultiplyByTranspose(v, A) <->text275.htm#2555<->MultiplyByTranspose(v, A) : ModTupRng, MtrxSprs -&gt; ModTupRng
3<->multiply :<->text275.htm<->multiply :: Multiplying Vectors or Matrices by Sparse Matrices (SPARSE MATRICES)
3<->non-trivial :<->text276.htm<->non-trivial :: Non-trivial Properties (SPARSE MATRICES)
3<->solution-equation :<->text276.htm#2557<->solution-equation :: Nullspace and Rowspace (SPARSE MATRICES)
5<->Kernel :: Nullspace(A) <->text276.htm#2558<->Kernel :: Nullspace(A) : MtrxSprs -&gt; ModTupRng
5<->Nullspace(A) <->text276.htm#2558<->Nullspace(A) : MtrxSprs -&gt; ModTupRng
5<->KernelMatrix :: NullspaceMatrix(A) <->text276.htm#2559<->KernelMatrix :: NullspaceMatrix(A) : MtrxSprs -&gt; Mtrx
5<->NullspaceMatrix(A) <->text276.htm#2559<->NullspaceMatrix(A) : MtrxSprs -&gt; Mtrx
5<->NullspaceOfTranspose(A) <->text276.htm#2560<->NullspaceOfTranspose(A) : MtrxSprs -&gt; ModTupRng
5<->Rowspace(A) <->text276.htm#2561<->Rowspace(A) : MtrxSprs -&gt; ModTupRng
3<->solution-equation :<->text276.htm#2557<->solution-equation :: Nullspace and Rowspace (SPARSE MATRICES)
3<->rank :<->text276.htm#2562<->rank :: Rank (SPARSE MATRICES)
5<->Rank(A) <->text276.htm#2563<->Rank(A) : MtrxSprs -&gt; RngIntElt
3<->rank :<->text276.htm#2562<->rank :: Rank (SPARSE MATRICES)
3<->non-trivial :<->text276.htm<->non-trivial :: Non-trivial Properties (SPARSE MATRICES)
3<->determinant :<->text277.htm<->determinant :: Determinant and Other Properties (SPARSE MATRICES)
5<->Determinant(A: parameters) <->text277.htm#2565<->Determinant(A: parameters) : MtrxSprs -&gt; RngElt
3<->elementary-divisors :<->text277.htm#2566<->elementary-divisors :: Elementary Divisors (Smith Form) (SPARSE MATRICES)
5<->ElementaryDivisors(A) <->text277.htm#2567<->ElementaryDivisors(A) : MtrxSprs -&gt; [RngElt]
3<->elementary-divisors :<->text277.htm#2566<->elementary-divisors :: Elementary Divisors (Smith Form) (SPARSE MATRICES)
3<->verbosity :<->text277.htm#2568<->verbosity :: Verbosity (SPARSE MATRICES)
5<->SetVerbose("SparseMatrix", v) <->text277.htm#2569<->SetVerbose("SparseMatrix", v) : MonStgElt, RngIntElt -&gt;
3<->verbosity :<->text277.htm#2568<->verbosity :: Verbosity (SPARSE MATRICES)
3<->determinant :<->text277.htm<->determinant :: Determinant and Other Properties (SPARSE MATRICES)
3<->solution :<->text278.htm<->solution :: Linear Systems (Structured  Gaussian Elimination) (SPARSE MATRICES)
5<->ModularSolution(A, L) <->text278.htm#2571<->ModularSolution(A, L) : MtrxSprs, RngIntEltFact -> ModTupRng
5<->ModularSolution(A, M) <->text278.htm#2571<->ModularSolution(A, M) : MtrxSprs, RngIntElt -&gt; ModTupRng
4<->SMat_DiscreteLog (Example H27E3)<->text278.htm#2572<->SMat_DiscreteLog (Example H27E3)
4<->Example-DiscreteLog :<->text278.htm#2572<->Example-DiscreteLog :: SMat_DiscreteLog (Example H27E3)
3<->solution :<->text278.htm<->solution :: Linear Systems (Structured  Gaussian Elimination) (SPARSE MATRICES)
3<->smat :<->text265.htm<->smat :: SPARSE MATRICES
3<->vector-space-linear-transformation :<->text280.htm<->vector-space-linear-transformation :: VECTOR SPACES
3<->introduction :<->text281.htm<->introduction :: Introduction (VECTOR SPACES)
3<->category :<->text281.htm#2576<->category :: Vector Space Categories (VECTOR SPACES)
3<->creation :<->text281.htm#2577<->creation :: The Construction of a Vector Space (VECTOR SPACES)
3<->introduction :<->text281.htm<->introduction :: Introduction (VECTOR SPACES)
3<->creation-arithmetic :<->text282.htm<->creation-arithmetic :: Creation of Vector Spaces and  Arithmetic with Vectors (VECTOR SPACES)
3<->creation-magma :<->text282.htm#2579<->creation-magma :: Construction of a Vector Space (VECTOR SPACES)
5<->KSpace :: VectorSpace(K, n) <->text282.htm#2580<->KSpace :: VectorSpace(K, n) : Fld, RngIntElt -&gt; ModTupFld
5<->VectorSpace(K, n) <->text282.htm#2580<->VectorSpace(K, n) : Fld, RngIntElt -&gt; ModTupFld
5<->KModule(K, n) <->text282.htm#2581<->KModule(K, n) : Fld, RngIntElt -&gt; ModFld
5<->KMatrixSpace(K, m, n) <->text282.htm#2582<->KMatrixSpace(K, m, n) : Fld, RngIntElt, RngIntElt -&gt; ModMatFld
5<->Hom(V, W) <->text282.htm#2583<->Hom(V, W) : ModTupFld, ModTupFld -&gt; ModMatFld
4<->ModFld_CreateQ6 (Example H28E1)<->text282.htm#2584<->ModFld_CreateQ6 (Example H28E1)
4<->Example-CreateQ6 :<->text282.htm#2584<->Example-CreateQ6 :: ModFld_CreateQ6 (Example H28E1)
4<->ModFld_CreateK35 (Example H28E2)<->text282.htm#2585<->ModFld_CreateK35 (Example H28E2)
4<->Example-CreateK35 :<->text282.htm#2585<->Example-CreateK35 :: ModFld_CreateK35 (Example H28E2)
3<->creation-magma :<->text282.htm#2579<->creation-magma :: Construction of a Vector Space (VECTOR SPACES)
3<->creation-inner-product :<->text282.htm#2586<->creation-inner-product :: Construction of a Vector Space with Inner Product Matrix (VECTOR SPACES)
5<->KSpace :: VectorSpace(K, n, F) <->text282.htm#2587<->KSpace :: VectorSpace(K, n, F) : Fld, RngIntElt, Mtrx -&gt; ModTupFld
5<->VectorSpace(K, n, F) <->text282.htm#2587<->VectorSpace(K, n, F) : Fld, RngIntElt, Mtrx -&gt; ModTupFld
3<->creation-inner-product :<->text282.htm#2586<->creation-inner-product :: Construction of a Vector Space with Inner Product Matrix (VECTOR SPACES)
3<->creation-element :<->text282.htm#2588<->creation-element :: Construction of a Vector (VECTOR SPACES)
5<->elt<V | L> <->text282.htm#2589<->elt&lt;V | L&gt; : ModTupFld, List -&gt; ModTupFldElt
5<->V ! Q <->text282.htm#2590<->V ! Q : ModTupFld, [RngElt] -&gt; ModTupFldElt
5<->CharacteristicVector(V, S) <->text282.htm#2591<->CharacteristicVector(V, S) : ModTupFld, { RngElt } -&gt; ModTupFldElt
5<->Zero :: V ! 0 <->text282.htm#2592<->Zero :: V ! 0 : ModTupFld, RngIntElt -&gt; ModTupFldElt
5<->V ! 0 <->text282.htm#2592<->V ! 0 : ModTupFld, RngIntElt -&gt; ModTupFldElt
5<->Random(V) <->text282.htm#2593<->Random(V) : ModTupFld -&gt; ModTupFldElt
4<->ModFld_Vectors (Example H28E3)<->text282.htm#2594<->ModFld_Vectors (Example H28E3)
4<->Example-Vectors :<->text282.htm#2594<->Example-Vectors :: ModFld_Vectors (Example H28E3)
4<->ModFld_Matrices (Example H28E4)<->text282.htm#2595<->ModFld_Matrices (Example H28E4)
4<->Example-Matrices :<->text282.htm#2595<->Example-Matrices :: ModFld_Matrices (Example H28E4)
3<->creation-element :<->text282.htm#2588<->creation-element :: Construction of a Vector (VECTOR SPACES)
3<->deconstruction :<->text282.htm#2596<->deconstruction :: Deconstruction of a Vector (VECTOR SPACES)
5<->Eltseq :: ElementToSequence(u) <->text282.htm#2597<->Eltseq :: ElementToSequence(u) : ModTupFldElt -&gt; [RngElt]
5<->ElementToSequence(u) <->text282.htm#2597<->ElementToSequence(u) : ModTupFldElt -&gt; [RngElt]
3<->deconstruction :<->text282.htm#2596<->deconstruction :: Deconstruction of a Vector (VECTOR SPACES)
3<->arithmetic :<->text282.htm#2598<->arithmetic :: Arithmetic with Vectors (VECTOR SPACES)
5<->u + v <->text282.htm#2599<->u + v : ModTupFldElt, ModTupFldElt -&gt; ModTupFldElt
5<->- u <->text282.htm#2600<->- u : ModTupFldElt -&gt; ModTupFldElt
5<->u - v <->text282.htm#2601<->u - v : ModTupFldElt, ModTupFldElt -&gt; ModTupFldElt
5<->u * x <->text282.htm#2602<->u * x : ModTupFldElt, FldElt -> ModTupFldElt                        
5<->x * u <->text282.htm#2602<->x * u : FldElt, ModTupFldElt -&gt; ModTupFldElt
5<->u / x <->text282.htm#2603<->u / x : ModTupFldElt, FldElt -&gt; ModTupFldElt
5<->Ncols :: NumberOfColumns(u) <->text282.htm#2604<->Ncols :: NumberOfColumns(u) : ModTupFldElt -&gt; RngIntElt
5<->NumberOfColumns(u) <->text282.htm#2604<->NumberOfColumns(u) : ModTupFldElt -&gt; RngIntElt
5<->Depth(u) <->text282.htm#2605<->Depth(u) : ModTupRngElt -&gt; RngIntElt
5<->InnerProduct :: (u, v) <->text282.htm#2606<->InnerProduct :: (u, v) : ModTupFldElt, ModTupFldElt -&gt; FldElt
5<->(,) :: (u, v) <->text282.htm#2606<->(,) :: (u, v) : ModTupFldElt, ModTupFldElt -&gt; FldElt
5<->IsZero(u) <->text282.htm#2607<->IsZero(u) : ModElt -&gt; BoolElt
5<->Norm(u) <->text282.htm#2608<->Norm(u) : ModTupFldElt -&gt; FldElt
5<->Normalize :: Normalise(u) <->text282.htm#2609<->Normalize :: Normalise(u) : ModTupFldElt -&gt; ModTupFldElt
5<->Normalise(u) <->text282.htm#2609<->Normalise(u) : ModTupFldElt -&gt; ModTupFldElt
5<->Rotate(u, k) <->text282.htm#2610<->Rotate(u, k) : ModTupFldElt, RngIntElt -&gt; ModTupFldElt
5<->Rotate(~u, k) <->text282.htm#2611<->Rotate(~u, k) : ModTupFldElt, RngIntElt -&gt;
5<->Nrows :: NumberOfRows(u) <->text282.htm#2612<->Nrows :: NumberOfRows(u) : ModTupFldElt -&gt; RngIntElt
5<->NumberOfRows(u) <->text282.htm#2612<->NumberOfRows(u) : ModTupFldElt -&gt; RngIntElt
5<->Support(u) <->text282.htm#2613<->Support(u) : ModTupFldElt -&gt; { RngElt }
5<->TensorProduct(u, v) <->text282.htm#2614<->TensorProduct(u, v) : ModTupFldElt, ModTupFldElt -&gt; FldElt
5<->Trace(u) <->text282.htm#2615<->Trace(u) : ModTupFldElt -> ModTupFldElt
5<->Trace(u, F) <->text282.htm#2615<->Trace(u, F) : ModTupFldElt, Fld -&gt; ModTupFldElt
5<->Weight(u) <->text282.htm#2616<->Weight(u) : ModTupFldElt -&gt; RngIntElt
4<->ModFld_Arithmetic (Example H28E5)<->text282.htm#2617<->ModFld_Arithmetic (Example H28E5)
4<->Example-Arithmetic :<->text282.htm#2617<->Example-Arithmetic :: ModFld_Arithmetic (Example H28E5)
4<->ModFld_InnerProduct (Example H28E6)<->text282.htm#2618<->ModFld_InnerProduct (Example H28E6)
4<->Example-InnerProduct :<->text282.htm#2618<->Example-InnerProduct :: ModFld_InnerProduct (Example H28E6)
3<->arithmetic :<->text282.htm#2598<->arithmetic :: Arithmetic with Vectors (VECTOR SPACES)
3<->index :<->text282.htm#2619<->index :: Indexing Vectors and Matrices (VECTOR SPACES)
5<->u[i] <->text282.htm#2620<->u[i] : ModTupFldElt, RngIntElt -&gt; RngElt
5<->u[i, j] <->text282.htm#2620<->u[i, j] : ModTupFldElt, RngIntElt, RngIntElt -> ModTupFldElt
5<->[] :: u[i] <->text282.htm#2620<->[] :: u[i] : ModTupFldElt, RngIntElt -&gt; RngElt
5<->u[i] \col = x : ModTupFldElt, RngIntElt, ModTupFldElt ->  ModTupFldElt :: u[i] : = x <->text282.htm#2621<->u[i] \col = x : ModTupFldElt, RngIntElt, ModTupFldElt ->  ModTupFldElt :: u[i] : = x : ModTupFldElt, RngIntElt, RngElt -&gt;  ModTupFldElt
5<->u[i, j] \col = x : ModTupFldElt, RngIntElt, RngIntElt, ModTupFldElt ->  ModTupFldElt :: u[i] : = x <->text282.htm#2621<->u[i, j] \col = x : ModTupFldElt, RngIntElt, RngIntElt, ModTupFldElt ->  ModTupFldElt :: u[i] : = x : ModTupFldElt, RngIntElt, RngElt -&gt;  ModTupFldElt
5<->[] :: u[i] : = x <->text282.htm#2621<->[] :: u[i] : = x : ModTupFldElt, RngIntElt, RngElt -&gt;  ModTupFldElt
4<->ModFld_Indexing (Example H28E7)<->text282.htm#2622<->ModFld_Indexing (Example H28E7)
4<->Example-Indexing :<->text282.htm#2622<->Example-Indexing :: ModFld_Indexing (Example H28E7)
3<->index :<->text282.htm#2619<->index :: Indexing Vectors and Matrices (VECTOR SPACES)
3<->creation-arithmetic :<->text282.htm<->creation-arithmetic :: Creation of Vector Spaces and  Arithmetic with Vectors (VECTOR SPACES)
3<->subspace-quotient-homomorphism :<->text283.htm<->subspace-quotient-homomorphism :: Subspaces, Quotient Spaces and Homomorphisms (VECTOR SPACES)
3<->subspace :<->text283.htm#2624<->subspace :: Construction of Subspaces (VECTOR SPACES)
5<->sub<V | L> <->text283.htm#2625<->sub&lt;V | L&gt; : ModTupFld, List -&gt; ModTupFld
5<->Morphism(U, V) <->text283.htm#2626<->Morphism(U, V) : ModTupFld, ModTupFld -&gt; RModMatElt
4<->ModFld_Subspace1 (Example H28E8)<->text283.htm#2627<->ModFld_Subspace1 (Example H28E8)
4<->Example-Subspace1 :<->text283.htm#2627<->Example-Subspace1 :: ModFld_Subspace1 (Example H28E8)
4<->ModFld_Subspace2 (Example H28E9)<->text283.htm#2628<->ModFld_Subspace2 (Example H28E9)
4<->Example-Subspace2 :<->text283.htm#2628<->Example-Subspace2 :: ModFld_Subspace2 (Example H28E9)
3<->subspace :<->text283.htm#2624<->subspace :: Construction of Subspaces (VECTOR SPACES)
3<->quotient :<->text283.htm#2629<->quotient :: Construction of Quotient Vector  Spaces (VECTOR SPACES)
5<->quo<V | L> <->text283.htm#2630<->quo&lt;V | L&gt; : ModTupFld, List -&gt; ModTupFld, Map
5<->V / U <->text283.htm#2631<->V / U : ModTupFld, ModTupFld -&gt; ModTupFld, Map
4<->ModFld_Quotients1 (Example H28E10)<->text283.htm#2632<->ModFld_Quotients1 (Example H28E10)
4<->Example-Quotients1 :<->text283.htm#2632<->Example-Quotients1 :: ModFld_Quotients1 (Example H28E10)
4<->ModFld_Quotients2 (Example H28E11)<->text283.htm#2633<->ModFld_Quotients2 (Example H28E11)
4<->Example-Quotients2 :<->text283.htm#2633<->Example-Quotients2 :: ModFld_Quotients2 (Example H28E11)
4<->ModFld_Quotients3 (Example H28E12)<->text283.htm#2634<->ModFld_Quotients3 (Example H28E12)
4<->Example-Quotients3 :<->text283.htm#2634<->Example-Quotients3 :: ModFld_Quotients3 (Example H28E12)
3<->quotient :<->text283.htm#2629<->quotient :: Construction of Quotient Vector  Spaces (VECTOR SPACES)
3<->subspace-quotient-homomorphism :<->text283.htm<->subspace-quotient-homomorphism :: Subspaces, Quotient Spaces and Homomorphisms (VECTOR SPACES)
3<->modification-coefficient-field :<->text284.htm<->modification-coefficient-field :: Changing the Coefficient Field (VECTOR SPACES)
5<->ExtendField(V, L) <->text284.htm#2636<->ExtendField(V, L) : ModTupFld, Fld -&gt; ModTupFld, MapHom
5<->RestrictField(V, L) <->text284.htm#2637<->RestrictField(V, L) : ModTupFld, Fld -&gt; ModTupFld, MapHom
5<->KSpace :: VectorSpace(V, F) <->text284.htm#2638<->KSpace :: VectorSpace(V, F) : ModTupFld, Fld -&gt; ModTupFld, Map
5<->KMatrixSpace :: VectorSpace(V, F) <->text284.htm#2638<->KMatrixSpace :: VectorSpace(V, F) : ModTupFld, Fld -&gt; ModTupFld, Map
5<->KModule :: VectorSpace(V, F) <->text284.htm#2638<->KModule :: VectorSpace(V, F) : ModTupFld, Fld -&gt; ModTupFld, Map
5<->VectorSpace(V, F) <->text284.htm#2638<->VectorSpace(V, F) : ModTupFld, Fld -&gt; ModTupFld, Map
3<->modification-coefficient-field :<->text284.htm<->modification-coefficient-field :: Changing the Coefficient Field (VECTOR SPACES)
3<->operation :<->text285.htm<->operation :: Basic Operations (VECTOR SPACES)
3<->access :<->text285.htm#2640<->access :: Accessing Vector Space Invariants (VECTOR SPACES)
5<->V . i <->text285.htm#2641<->V . i : ModTupFld, RngIntElt -&gt; ModTupFldElt
5<->BaseField :: CoefficientField(V) <->text285.htm#2642<->BaseField :: CoefficientField(V) : ModTupFld -&gt; Fld
5<->CoefficientField(V) <->text285.htm#2642<->CoefficientField(V) : ModTupFld -&gt; Fld
5<->Degree(V) <->text285.htm#2643<->Degree(V) : ModTupFld -&gt; RngIntElt
5<->Degree(u) <->text285.htm#2644<->Degree(u) : ModTupFldElt -&gt; RngIntElt
5<->Dimension(V) <->text285.htm#2645<->Dimension(V) : ModTupFld -&gt; RngIntElt
5<->Generators(V) <->text285.htm#2646<->Generators(V) : ModTupFld -&gt; { ModElt }
5<->Ngens :: NumberOfGenerators(M) <->text285.htm#2647<->Ngens :: NumberOfGenerators(M) : ModTupFld -&gt; RngIntElt
5<->NumberOfGenerators(M) <->text285.htm#2647<->NumberOfGenerators(M) : ModTupFld -&gt; RngIntElt
5<->OverDimension(V) <->text285.htm#2648<->OverDimension(V) : ModTupFld -&gt; RngIntElt
5<->OverDimension(u) <->text285.htm#2649<->OverDimension(u) : ModTupFldElt -&gt; RngIntElt
5<->Generic(V) <->text285.htm#2650<->Generic(V) : ModFld -&gt; ModFld
5<->Parent(V) <->text285.htm#2651<->Parent(V) : ModFld -&gt; SetPow
3<->access :<->text285.htm#2640<->access :: Accessing Vector Space Invariants (VECTOR SPACES)
3<->Boolean :<->text285.htm#2652<->Boolean :: Membership and Equality (VECTOR SPACES)
5<->v in V <->text285.htm#2653<->v in V : ModTupFldElt, ModTupFld -&gt; BoolElt
5<->v notin V <->text285.htm#2654<->v notin V : ModTupFldElt, ModTupFld -&gt; BoolElt
5<->U subset V <->text285.htm#2655<->U subset V : ModTupFld, ModTupFld -&gt; BoolElt
5<->U notsubset V <->text285.htm#2656<->U notsubset V : ModTupFld, ModTupFld -&gt; BoolElt
5<->U eq V <->text285.htm#2657<->U eq V : ModTupFld, ModTupFld -&gt; BoolElt
5<->U ne V <->text285.htm#2658<->U ne V : ModTupFld, ModTupFld -&gt; BoolElt
3<->Boolean :<->text285.htm#2652<->Boolean :: Membership and Equality (VECTOR SPACES)
3<->operation-subspace :<->text285.htm#2659<->operation-subspace :: Operations on Subspaces (VECTOR SPACES)
5<->U + V <->text285.htm#2660<->U + V : ModTupFld, ModTupFld -&gt; ModTupFld
5<->U meet V <->text285.htm#2661<->U meet V : ModTupFld, ModTupFld -&gt; ModTupFld
5<->U meet:= V <->text285.htm#2662<->U meet:= V : ModTupFld, ModTupFld -&gt; ModTupFld
5<->&meet :: &meet S <->text285.htm#2663<->&meet :: &amp;meet S : [ ModTupFld ] -&gt; ModTupFld
5<->TensorProduct(U, V) <->text285.htm#2664<->TensorProduct(U, V) : ModTupFld, ModTupFld -&gt; FldElt
5<->Complement(V, U) <->text285.htm#2665<->Complement(V, U) : ModTupFld, ModTupFld  -&gt; ModTupFld
5<->Transversal(V, U)<->text285.htm#2666<->Transversal(V, U): ModTupFld, ModTupFld -&gt; { ModTupFldELt }
3<->operation-subspace :<->text285.htm#2659<->operation-subspace :: Operations on Subspaces (VECTOR SPACES)
3<->operation :<->text285.htm<->operation :: Basic Operations (VECTOR SPACES)
3<->reducing-vectors :<->text286.htm<->reducing-vectors :: Reducing Vectors Relative to a Subspace (VECTOR SPACES)
5<->ReduceVector(W, v) <->text286.htm#2668<->ReduceVector(W, v) : ModTupRng, ModTupRngElt -&gt; ModTupRngElt
5<->ReduceVector(W, ~v) <->text286.htm#2669<->ReduceVector(W, ~v) : ModTupRng, ModTupRngElt -&gt;
5<->DecomposeVector(U, v) <->text286.htm#2670<->DecomposeVector(U, v) : ModTupRng, ModTupRngElt -&gt; ModTupRngElt, ModTupRngElt
3<->reducing-vectors :<->text286.htm<->reducing-vectors :: Reducing Vectors Relative to a Subspace (VECTOR SPACES)
3<->basis :<->text287.htm<->basis :: Bases (VECTOR SPACES)
5<->VectorSpaceWithBasis(a) <->text287.htm#2672<->VectorSpaceWithBasis(a) : AlgMatElt -> ModTupFld
5<->VectorSpaceWithBasis(a) <->text287.htm#2672<->VectorSpaceWithBasis(a) : ModMatFldElt -> ModTupFld
5<->KSpaceWithBasis :: VectorSpaceWithBasis(Q) <->text287.htm#2672<->KSpaceWithBasis :: VectorSpaceWithBasis(Q) : [ModTupFldElt] -&gt; ModTupFld
5<->KSpaceWithBasis(a) : AlgMatElt -> ModTupFld :: VectorSpaceWithBasis(Q) <->text287.htm#2672<->KSpaceWithBasis(a) : AlgMatElt -> ModTupFld :: VectorSpaceWithBasis(Q) : [ModTupFldElt] -&gt; ModTupFld
5<->KSpaceWithBasis(a) : ModMatFldElt -> ModTupFld :: VectorSpaceWithBasis(Q) <->text287.htm#2672<->KSpaceWithBasis(a) : ModMatFldElt -> ModTupFld :: VectorSpaceWithBasis(Q) : [ModTupFldElt] -&gt; ModTupFld
5<->KModuleWithBasis :: VectorSpaceWithBasis(Q) <->text287.htm#2672<->KModuleWithBasis :: VectorSpaceWithBasis(Q) : [ModTupFldElt] -&gt; ModTupFld
5<->VectorSpaceWithBasis(Q) <->text287.htm#2672<->VectorSpaceWithBasis(Q) : [ModTupFldElt] -&gt; ModTupFld
5<->Basis(V) <->text287.htm#2673<->Basis(V) : ModTupFld -&gt; [ModTupFldElt]
5<->BasisElement(V, i) <->text287.htm#2674<->BasisElement(V, i) : ModTupFld, RngIntElt -&gt; ModTupFldElt
5<->BasisMatrix(V) <->text287.htm#2675<->BasisMatrix(V) : ModTupFld -&gt; ModMatElt
5<->Coordinates(V, v) <->text287.htm#2676<->Coordinates(V, v) : ModTupFld, ModTupFldElt -&gt; [FldElt]
5<->Dimension(V) <->text287.htm#2677<->Dimension(V) : ModTupFld -&gt; RngIntElt
5<->ExtendBasis(Q, U) <->text287.htm#2678<->ExtendBasis(Q, U) : [ModTupFldElt], ModTupFld -&gt; [ModTupFldElt]
5<->ExtendBasis(U, V) <->text287.htm#2679<->ExtendBasis(U, V) : ModTupFld, ModTupFld -&gt; [ModTupFldElt]
5<->IsIndependent(S) <->text287.htm#2680<->IsIndependent(S) : { ModTupFldElt }  -&gt; BoolElt
5<->IsIndependent(Q) <->text287.htm#2681<->IsIndependent(Q) : [ ModTupFldElt ]  -&gt; BoolElt
4<->ModFld_Basis (Example H28E13)<->text287.htm#2682<->ModFld_Basis (Example H28E13)
4<->Example-Basis :<->text287.htm#2682<->Example-Basis :: ModFld_Basis (Example H28E13)
3<->basis :<->text287.htm<->basis :: Bases (VECTOR SPACES)
3<->linear-transformation :<->text288.htm<->linear-transformation :: Operations with Linear Transformations (VECTOR SPACES)
5<->() :: v * a <->text288.htm#2684<->() :: v * a : ModTupFldElt, ModMatFldElt -&gt; ModTupFldElt
5<->v * a <->text288.htm#2684<->v * a : ModTupFldElt, ModMatFldElt -&gt; ModTupFldElt
5<->a * b <->text288.htm#2685<->a * b : ModMatRngElt, ModMatRngElt -&gt; ModMatRngElt
5<->Domain(a) <->text288.htm#2686<->Domain(a) : ModMatRngElt -&gt; ModTupRng
5<->Codomain(a) <->text288.htm#2687<->Codomain(a) : ModMatRngElt -&gt; ModTupRng
5<->Image(a) <->text288.htm#2688<->Image(a) : ModMatRngElt -&gt; ModTupRng, Map, Map
5<->Rank(a) <->text288.htm#2689<->Rank(a) : ModMatRngElt -&gt; RngIntElt
5<->NullSpace :: Kernel(a) <->text288.htm#2690<->NullSpace :: Kernel(a) : ModMatRngElt -&gt; ModTupFld, Map
5<->Kernel(a) <->text288.htm#2690<->Kernel(a) : ModMatRngElt -&gt; ModTupFld, Map
5<->Cokernel(a) <->text288.htm#2691<->Cokernel(a) : ModMatRngElt -&gt; ModTupFld, Map
4<->ModFld_LinearTrans (Example H28E14)<->text288.htm#2692<->ModFld_LinearTrans (Example H28E14)
4<->Example-LinearTrans :<->text288.htm#2692<->Example-LinearTrans :: ModFld_LinearTrans (Example H28E14)
3<->linear-transformation :<->text288.htm<->linear-transformation :: Operations with Linear Transformations (VECTOR SPACES)
3<->vector-space-linear-transformation :<->text280.htm<->vector-space-linear-transformation :: VECTOR SPACES
3<->field_forms :<->text291.htm<->field_forms :: POLAR SPACES
3<->quadratic form :<->text292.htm<->quadratic form :: Introduction (POLAR SPACES)
3<->bilinear form :<->text292.htm<->bilinear form :: Introduction (POLAR SPACES)
3<->sesquilinear form :<->text292.htm<->sesquilinear form :: Introduction (POLAR SPACES)
3<->Introduction (POLAR SPACES)<->text292.htm<->Introduction (POLAR SPACES)
3<->reflexive form :<->text293.htm<->reflexive form :: Reflexive Forms (POLAR SPACES)
3<->alternating form :<->text293.htm<->alternating form :: Reflexive Forms (POLAR SPACES)
3<->symmetric form :<->text293.htm<->symmetric form :: Reflexive Forms (POLAR SPACES)
3<->hermitian form :<->text293.htm<->hermitian form :: Reflexive Forms (POLAR SPACES)
3<->polar space :<->text293.htm<->polar space :: Reflexive Forms (POLAR SPACES)
3<->skew-hermitian form :<->text293.htm<->skew-hermitian form :: Reflexive Forms (POLAR SPACES)
3<->pseudo-alternating form :<->text293.htm<->pseudo-alternating form :: Reflexive Forms (POLAR SPACES)
3<->reflexive-forms :<->text293.htm<->reflexive-forms :: Reflexive Forms (POLAR SPACES)
3<->quadratic form :<->text293.htm#2698<->quadratic form :: Quadratic Forms (POLAR SPACES)
3<->quadratic :<->text293.htm#2698<->quadratic :: Quadratic Forms (POLAR SPACES)
3<->reflexive-forms :<->text293.htm<->reflexive-forms :: Reflexive Forms (POLAR SPACES)
3<->innerprod :<->text294.htm<->innerprod :: Inner Products (POLAR SPACES)
4<->FldForms_generalform (Example H29E1)<->text294.htm#2700<->FldForms_generalform (Example H29E1)
4<->Example-generalform :<->text294.htm#2700<->Example-generalform :: FldForms_generalform (Example H29E1)
5<->DotProduct(u, v) <->text294.htm#2701<->DotProduct(u, v) : ModTupFldElt, ModTupFldElt -&gt; FldElt
5<->DotProductMatrix(W) <->text294.htm#2702<->DotProductMatrix(W) : SeqEnum[ModTupFldElt] -&gt; AlgMatElt
5<->GramMatrix(V) <->text294.htm#2703<->GramMatrix(V) : ModTupRng -&gt; AlgMatElt
5<->InnerProductMatrix(V) <->text294.htm#2704<->InnerProductMatrix(V) : ModTupRng -&gt; AlgMatElt
4<->FldForms_grammatrix (Example H29E2)<->text294.htm#2705<->FldForms_grammatrix (Example H29E2)
4<->Example-grammatrix :<->text294.htm#2705<->Example-grammatrix :: FldForms_grammatrix (Example H29E2)
4<->FldForms_innerprod (Example H29E3)<->text294.htm#2706<->FldForms_innerprod (Example H29E3)
4<->Example-innerprod :<->text294.htm#2706<->Example-innerprod :: FldForms_innerprod (Example H29E3)
3<->orthog :<->text294.htm#2707<->orthog :: Orthogonality (POLAR SPACES)
5<->OrthogonalComplement(V, X : parameters) <->text294.htm#2708<->OrthogonalComplement(V, X : parameters) : ModTupFld, ModTupFld -&gt; ModTupFld
5<->Radical(V : parameters) <->text294.htm#2709<->Radical(V : parameters) : ModTupFld -&gt; ModTupFld
5<->IsNondegenerate(V) <->text294.htm#2710<->IsNondegenerate(V) : ModTupFld -&gt; BoolElt
5<->SingularRadical(V) <->text294.htm#2711<->SingularRadical(V) : ModTupFld -&gt; ModTupFld
5<->IsNonsingular(V) <->text294.htm#2712<->IsNonsingular(V) : ModTupFld -&gt; BoolElt
3<->orthog :<->text294.htm#2707<->orthog :: Orthogonality (POLAR SPACES)
3<->innerprod :<->text294.htm<->innerprod :: Inner Products (POLAR SPACES)
3<->isotropic vector :<->text295.htm<->isotropic vector :: Isotropic and Singular Vectors and Subspaces (POLAR SPACES)
3<->singular vector :<->text295.htm<->singular vector :: Isotropic and Singular Vectors and Subspaces (POLAR SPACES)
3<->structure :<->text295.htm<->structure :: Isotropic and Singular Vectors and Subspaces (POLAR SPACES)
5<->HasIsotropicVector(V) <->text295.htm#2714<->HasIsotropicVector(V) : ModTupFld -&gt; BoolElt, ModTupFldElt
5<->HasSingularVector(V) <->text295.htm#2715<->HasSingularVector(V) : ModTupFld -&gt; BoolElt, ModTupFldElt
5<->HyperbolicPair(V, u) <->text295.htm#2716<->HyperbolicPair(V, u) : ModTupFld, ModTupFldElt -&gt; ModTupFldElt
4<->FldForms_pseudoalt (Example H29E4)<->text295.htm#2717<->FldForms_pseudoalt (Example H29E4)
4<->Example-pseudoalt :<->text295.htm#2717<->Example-pseudoalt :: FldForms_pseudoalt (Example H29E4)
5<->HyperbolicSplitting(V) <->text295.htm#2718<->HyperbolicSplitting(V) : ModTupFld -&gt; SeqEnum, SeqEnum
4<->FldForms_hypsplit (Example H29E5)<->text295.htm#2719<->FldForms_hypsplit (Example H29E5)
4<->Example-hypsplit :<->text295.htm#2719<->Example-hypsplit :: FldForms_hypsplit (Example H29E5)
4<->FldForms_extradical (Example H29E6)<->text295.htm#2720<->FldForms_extradical (Example H29E6)
4<->Example-extradical :<->text295.htm#2720<->Example-extradical :: FldForms_extradical (Example H29E6)
5<->SymplecticBasis(V,U,W) <->text295.htm#2721<->SymplecticBasis(V,U,W) : ModTupFld, ModTupFld, ModTupFld -&gt; [ModTupFldElt]
5<->IsTotallyIsotropic(V) <->text295.htm#2722<->IsTotallyIsotropic(V) : ModTupFld -&gt; BoolElt
5<->IsTotallySingular(V) <->text295.htm#2723<->IsTotallySingular(V) : ModTupFld -&gt; BoolElt
5<->WittDecomposition(V) <->text295.htm#2724<->WittDecomposition(V) : ModTupFld -&gt; SeqEnum[ModTupFld]
5<->WittIndex(V) <->text295.htm#2725<->WittIndex(V) : ModTupFld -&gt; RngIntElt
5<->MaximalTotallyIsotropicSubspace(V) <->text295.htm#2726<->MaximalTotallyIsotropicSubspace(V) : ModTupFld -&gt; ModTupFld
5<->MaximalTotallySingularSubspace(V) <->text295.htm#2727<->MaximalTotallySingularSubspace(V) : ModTupFld -&gt; ModTupFld
5<->MetabolicSpace(V) <->text295.htm#2728<->MetabolicSpace(V) : ModTupFld -&gt; ModTupFld
3<->structure :<->text295.htm<->structure :: Isotropic and Singular Vectors and Subspaces (POLAR SPACES)
3<->standard :<->text296.htm<->standard :: The Standard Forms (POLAR SPACES)
5<->StandardAlternatingForm(n,q) <->text296.htm#2730<->StandardAlternatingForm(n,q) : RngIntElt, RngIntElt -> AlgMatElt
5<->StandardAlternatingForm(n,R) <->text296.htm#2730<->StandardAlternatingForm(n,R) : RngIntElt, Rng -&gt; AlgMatElt
4<->FldForms_alternatingform (Example H29E7)<->text296.htm#2731<->FldForms_alternatingform (Example H29E7)
4<->Example-alternatingform :<->text296.htm#2731<->Example-alternatingform :: FldForms_alternatingform (Example H29E7)
5<->StandardPseudoAlternatingForm(n,q) <->text296.htm#2732<->StandardPseudoAlternatingForm(n,q) : RngIntElt, RngIntElt -> AlgMatElt
5<->StandardPseudoAlternatingForm(n,K) <->text296.htm#2732<->StandardPseudoAlternatingForm(n,K) : RngIntElt, Fld -&gt; AlgMatElt
5<->StandardHermitianForm(n,q) <->text296.htm#2733<->StandardHermitianForm(n,q) : RngIntElt, RngIntElt -> AlgMatElt, Map
5<->StandardHermitianForm(n,K) <->text296.htm#2733<->StandardHermitianForm(n,K) : RngIntElt, Fld -&gt; AlgMatElt, Map
5<->StandardQuadraticForm(n, q $\colon$ \parameters) <->text296.htm#2734<->StandardQuadraticForm(n, q $\colon$ \parameters) : RngIntElt, RngIntElt -> AlgMatElt
5<->StandardQuadraticForm(n, K : parameters) <->text296.htm#2734<->StandardQuadraticForm(n, K : parameters) : RngIntElt, Fld -&gt; AlgMatElt
4<->FldForms_minusform (Example H29E8)<->text296.htm#2735<->FldForms_minusform (Example H29E8)
4<->Example-minusform :<->text296.htm#2735<->Example-minusform :: FldForms_minusform (Example H29E8)
4<->FldForms_revisedminus (Example H29E9)<->text296.htm#2736<->FldForms_revisedminus (Example H29E9)
4<->Example-revisedminus :<->text296.htm#2736<->Example-revisedminus :: FldForms_revisedminus (Example H29E9)
5<->StandardSymmetricForm(n, q $\colon$ \parameters) <->text296.htm#2737<->StandardSymmetricForm(n, q $\colon$ \parameters) : RngIntElt, RngIntElt -> AlgMatElt
5<->StandardSymmetricForm(n, K) <->text296.htm#2737<->StandardSymmetricForm(n, K) : RngIntElt, Fld -&gt; AlgMatElt
3<->standard :<->text296.htm<->standard :: The Standard Forms (POLAR SPACES)
3<->constructions :<->text297.htm<->constructions :: Constructing Polar Spaces (POLAR SPACES)
5<->IsPolarSpace(V) <->text297.htm#2739<->IsPolarSpace(V) : ModTupFld -&gt; BoolElt
5<->PolarSpaceType(V) <->text297.htm#2740<->PolarSpaceType(V) : ModTupFld -&gt; MonStgElt
4<->FldForms_polarspace (Example H29E10)<->text297.htm#2741<->FldForms_polarspace (Example H29E10)
4<->Example-polarspace :<->text297.htm#2741<->Example-polarspace :: FldForms_polarspace (Example H29E10)
3<->sympspace :<->text297.htm#2742<->sympspace :: Symplectic Spaces (POLAR SPACES)
5<->SymplecticSpace(J) <->text297.htm#2743<->SymplecticSpace(J) : AlgMatElt -&gt; ModTupRng
5<->IsSymplecticSpace(W) <->text297.htm#2744<->IsSymplecticSpace(W) : ModTupFld -&gt; BoolElt
5<->IsPseudoSymplecticSpace(W) <->text297.htm#2745<->IsPseudoSymplecticSpace(W) : ModTupFld -&gt; BoolElt
5<->DirectSum(V,W) <->text297.htm#2746<->DirectSum(V,W) : ModTupRng, ModTupRng -&gt; ModTupRng, Map, Map
3<->sympspace :<->text297.htm#2742<->sympspace :: Symplectic Spaces (POLAR SPACES)
3<->unitaryspace :<->text297.htm#2747<->unitaryspace :: Unitary Spaces (POLAR SPACES)
5<->UnitarySpace(J, sigma) <->text297.htm#2748<->UnitarySpace(J, sigma) : AlgMatElt, Map -&gt; ModTupFld
5<->IsUnitarySpace(W) <->text297.htm#2749<->IsUnitarySpace(W) : ModTupFld -&gt; BoolElt, RngIntElt
4<->FldForms_unitaryform (Example H29E11)<->text297.htm#2750<->FldForms_unitaryform (Example H29E11)
4<->Example-unitaryform :<->text297.htm#2750<->Example-unitaryform :: FldForms_unitaryform (Example H29E11)
5<->ConjugateTranspose(M, sigma) <->text297.htm#2751<->ConjugateTranspose(M, sigma) : Mtrx, Map -&gt; Mtrx
3<->unitaryspace :<->text297.htm#2747<->unitaryspace :: Unitary Spaces (POLAR SPACES)
3<->quadratic space :<->text297.htm#2752<->quadratic space :: Quadratic Spaces (POLAR SPACES)
3<->quadspace :<->text297.htm#2752<->quadspace :: Quadratic Spaces (POLAR SPACES)
5<->QuadraticSpace(Q) <->text297.htm#2753<->QuadraticSpace(Q) : AlgMatElt -&gt; ModTupRng
5<->QuadraticSpace(f) <->text297.htm#2754<->QuadraticSpace(f) : RngMPolElt -&gt; ModTupRng
5<->SymmetricToQuadraticForm(J) <->text297.htm#2755<->SymmetricToQuadraticForm(J) : AlgMatElt -&gt; AlgMatElt
5<->QuadraticFormMatrix(V) <->text297.htm#2756<->QuadraticFormMatrix(V) : ModTupRng -&gt; ModAlgElt
5<->QuadraticNorm(v) <->text297.htm#2757<->QuadraticNorm(v) : ModTupFldElt -&gt; FldElt
5<->QuadraticFormPolynomial(V) <->text297.htm#2758<->QuadraticFormPolynomial(V) : ModTupRng -&gt; RngPolElt
5<->QuadraticFormPolynomial(Q) <->text297.htm#2759<->QuadraticFormPolynomial(Q) : AlgMatElt -&gt; RngPolElt
4<->FldForms_polyquad (Example H29E12)<->text297.htm#2760<->FldForms_polyquad (Example H29E12)
4<->Example-polyquad :<->text297.htm#2760<->Example-polyquad :: FldForms_polyquad (Example H29E12)
5<->OrthogonalSum(V, W) <->text297.htm#2761<->OrthogonalSum(V, W) : ModTupFld, ModTupFld -&gt; ModTupFld, Map, Map
5<->OrthogonalTensorProduct(V, W) <->text297.htm#2762<->OrthogonalTensorProduct(V, W) : ModTupFld, ModTupFld -&gt; ModTupFld
5<->TotallySingularComplement(V, U, W) <->text297.htm#2763<->TotallySingularComplement(V, U, W) : ModTupFld, ModTupFld, ModTupFld -&gt; ModTupFld
5<->Discriminant(V) <->text297.htm#2764<->Discriminant(V) : ModTupFld -&gt; RngIntElt
5<->ArfInvariant(V) <->text297.htm#2765<->ArfInvariant(V) : ModTupFld -&gt; RngIntElt
5<->DicksonInvariant(V, f) <->text297.htm#2766<->DicksonInvariant(V, f) : ModTupFld, Mtrx -&gt; RngIntElt
5<->SpinorNorm(V, f) <->text297.htm#2767<->SpinorNorm(V, f) : ModTupFld, Mtrx -&gt; RngIntElt
5<->HyperbolicBasis(U, B, W) <->text297.htm#2768<->HyperbolicBasis(U, B, W) : ModTupFld, SeqEnum, ModTupFld -&gt; SeqEnum
5<->OrthogonalReflection(a) <->text297.htm#2769<->OrthogonalReflection(a) : ModTupFldElt -&gt; AlgMatElt
5<->RootSequence(V, f) <->text297.htm#2770<->RootSequence(V, f) : ModTupFld, Mtrx -&gt; SeqEnum
5<->ReflectionFactors(V, f) <->text297.htm#2771<->ReflectionFactors(V, f) : ModTupFld, Mtrx -&gt; SeqEnum
5<->SiegelTransformation(u, v) <->text297.htm#2772<->SiegelTransformation(u, v) : ModTupFldElt, ModTupFldElt -&gt; AlgMatElt
4<->FldForms_siegel (Example H29E13)<->text297.htm#2773<->FldForms_siegel (Example H29E13)
4<->Example-siegel :<->text297.htm#2773<->Example-siegel :: FldForms_siegel (Example H29E13)
3<->quadspace :<->text297.htm#2752<->quadspace :: Quadratic Spaces (POLAR SPACES)
3<->constructions :<->text297.htm<->constructions :: Constructing Polar Spaces (POLAR SPACES)
3<->isom-sim :<->text298.htm<->isom-sim :: Isometries and Similarities (POLAR SPACES)
3<->isometry :<->text298.htm#2775<->isometry :: Isometries (POLAR SPACES)
5<->IsIsometry(U, V, f) <->text298.htm#2776<->IsIsometry(U, V, f) : ModTupFld, ModTupFld, Map -&gt; BoolElt
5<->IsIsometry(f) <->text298.htm#2777<->IsIsometry(f) : Map -&gt; BoolElt
5<->IsIsometry(V, g) <->text298.htm#2778<->IsIsometry(V, g) : ModTupFld, Mtrx -&gt; BoolElt
5<->IsIsometric(V, W) <->text298.htm#2779<->IsIsometric(V, W) : ModTupFld, ModTupFld -&gt; BoolElt, Map
4<->FldForms_isometric (Example H29E14)<->text298.htm#2780<->FldForms_isometric (Example H29E14)
4<->Example-isometric :<->text298.htm#2780<->Example-isometric :: FldForms_isometric (Example H29E14)
4<->FldForms_transform (Example H29E15)<->text298.htm#2781<->FldForms_transform (Example H29E15)
4<->Example-transform :<->text298.htm#2781<->Example-transform :: FldForms_transform (Example H29E15)
4<->FldForms_transformalt (Example H29E16)<->text298.htm#2782<->FldForms_transformalt (Example H29E16)
4<->Example-transformalt :<->text298.htm#2782<->Example-transformalt :: FldForms_transformalt (Example H29E16)
5<->CommonComplement(V, U, W) <->text298.htm#2783<->CommonComplement(V, U, W) : ModTupFld, ModTupFld, ModTupFld -&gt; ModTupFld
5<->ExtendIsometry(V, U, f) <->text298.htm#2784<->ExtendIsometry(V, U, f) : ModTupFld, ModTupFld, Map -&gt; Map
5<->IsometryGroup(V) <->text298.htm#2785<->IsometryGroup(V) : ModTupFld -&gt; GrpMat
4<->FldForms_isometrygroup (Example H29E17)<->text298.htm#2786<->FldForms_isometrygroup (Example H29E17)
4<->Example-isometrygroup :<->text298.htm#2786<->Example-isometrygroup :: FldForms_isometrygroup (Example H29E17)
4<->FldForms_conjisom (Example H29E18)<->text298.htm#2787<->FldForms_conjisom (Example H29E18)
4<->Example-conjisom :<->text298.htm#2787<->Example-conjisom :: FldForms_conjisom (Example H29E18)
3<->isometry :<->text298.htm#2775<->isometry :: Isometries (POLAR SPACES)
3<->similarity :<->text298.htm#2788<->similarity :: Similarities (POLAR SPACES)
5<->IsSimilarity(U, V, f) <->text298.htm#2789<->IsSimilarity(U, V, f) : ModTupFld, ModTupFld, Map -&gt; BoolElt, FldElt
5<->IsSimilarity(f) <->text298.htm#2790<->IsSimilarity(f) : Map -&gt; BoolElt, FldElt
5<->IsSimilarity(V, g) <->text298.htm#2791<->IsSimilarity(V, g) : ModTupFld, Mtrx -&gt; BoolElt, FldElt
5<->IsSimilar(V, W) <->text298.htm#2792<->IsSimilar(V, W) : ModTupFld, ModTupFld -&gt; BoolElt, Map
4<->FldForms_simherm (Example H29E19)<->text298.htm#2793<->FldForms_simherm (Example H29E19)
4<->Example-simherm :<->text298.htm#2793<->Example-simherm :: FldForms_simherm (Example H29E19)
5<->SimilarityGroup(V) <->text298.htm#2794<->SimilarityGroup(V) : ModTupFld -&gt; GrpMat
3<->similarity :<->text298.htm#2788<->similarity :: Similarities (POLAR SPACES)
3<->isom-sim :<->text298.htm<->isom-sim :: Isometries and Similarities (POLAR SPACES)
3<->classical :<->text299.htm<->classical :: Classical Groups (POLAR SPACES)
4<->FldForms_fixaltform (Example H29E20)<->text299.htm#2796<->FldForms_fixaltform (Example H29E20)
4<->Example-fixaltform :<->text299.htm#2796<->Example-fixaltform :: FldForms_fixaltform (Example H29E20)
4<->FldForms_fixhermform (Example H29E21)<->text299.htm#2797<->FldForms_fixhermform (Example H29E21)
4<->Example-fixhermform :<->text299.htm#2797<->Example-fixhermform :: FldForms_fixhermform (Example H29E21)
3<->classical :<->text299.htm<->classical :: Classical Groups (POLAR SPACES)
3<->liealg :<->text300.htm<->liealg :: Lie Algebras and Bilinear Forms (POLAR SPACES)
5<->DerivationAlgebra(J) <->text300.htm#2799<->DerivationAlgebra(J) : AlgMatElt -&gt; AlgLie
4<->FldForms_lieC3 (Example H29E22)<->text300.htm#2800<->FldForms_lieC3 (Example H29E22)
4<->Example-lieC3 :<->text300.htm#2800<->Example-lieC3 :: FldForms_lieC3 (Example H29E22)
4<->FldForms_lieG2 (Example H29E23)<->text300.htm#2801<->FldForms_lieG2 (Example H29E23)
4<->Example-lieG2 :<->text300.htm#2801<->Example-lieG2 :: FldForms_lieG2 (Example H29E23)
5<->HeisenbergAlgebra(J) <->text300.htm#2802<->HeisenbergAlgebra(J) : AlgMatElt -&gt; AlgLie
4<->FldForms_heisenberg (Example H29E24)<->text300.htm#2803<->FldForms_heisenberg (Example H29E24)
4<->Example-heisenberg :<->text300.htm#2803<->Example-heisenberg :: FldForms_heisenberg (Example H29E24)
3<->liealg :<->text300.htm<->liealg :: Lie Algebras and Bilinear Forms (POLAR SPACES)
3<->wallform :<->text301.htm<->wallform :: Wall Forms (POLAR SPACES)
5<->WallForm(V, f) <->text301.htm#2805<->WallForm(V, f) : ModTupFld, Mtrx -&gt; ModTupFld, Map
5<->WallIsometry(V, I, mu) <->text301.htm#2806<->WallIsometry(V, I, mu) : ModTupFld, ModTupFld, Map -&gt; Mtrx
5<->WallDecomposition(V, f) <->text301.htm#2807<->WallDecomposition(V, f) : ModTupFld, Mtrx -&gt; Mtrx, Mtrx
5<->SemiOrthogonalBasis(V) <->text301.htm#2808<->SemiOrthogonalBasis(V) : ModTupFld -&gt; SeqEnum
5<->GeneralisedWallForm(V, f) <->text301.htm#2809<->GeneralisedWallForm(V, f) : ModTupFld, Mtrx -&gt; ModTupFld, Map
3<->wallform :<->text301.htm<->wallform :: Wall Forms (POLAR SPACES)
3<->invform :<->text302.htm<->invform :: Invariant Forms (POLAR SPACES)
5<->InvariantBilinearForms(G) <->text302.htm#2811<->InvariantBilinearForms(G) : GrpMat -&gt; SeqEnum[AlgMatElt], SeqEnum[AlgMatElt]
4<->FldForms_reducible (Example H29E25)<->text302.htm#2812<->FldForms_reducible (Example H29E25)
4<->Example-reducible :<->text302.htm#2812<->Example-reducible :: FldForms_reducible (Example H29E25)
4<->FldForms_nonabs (Example H29E26)<->text302.htm#2813<->FldForms_nonabs (Example H29E26)
4<->Example-nonabs :<->text302.htm#2813<->Example-nonabs :: FldForms_nonabs (Example H29E26)
5<->InvariantQuadraticForms(G) <->text302.htm#2814<->InvariantQuadraticForms(G) : GrpMat -&gt; SeqEnum[AlgMatElt]
4<->FldForms_invquadform (Example H29E27)<->text302.htm#2815<->FldForms_invquadform (Example H29E27)
4<->Example-invquadform :<->text302.htm#2815<->Example-invquadform :: FldForms_invquadform (Example H29E27)
5<->SemilinearDual(M, mu) <->text302.htm#2816<->SemilinearDual(M, mu) : ModGrp,Map -&gt; ModGrp
5<->InvariantSesquilinearForms(G) <->text302.htm#2817<->InvariantSesquilinearForms(G) : GrpMat -&gt; SeqEnum[AlgMatElt]
4<->FldForms_sesquiforms (Example H29E28)<->text302.htm#2818<->FldForms_sesquiforms (Example H29E28)
4<->Example-sesquiforms :<->text302.htm#2818<->Example-sesquiforms :: FldForms_sesquiforms (Example H29E28)
4<->FldForms_hermandalt (Example H29E29)<->text302.htm#2819<->FldForms_hermandalt (Example H29E29)
4<->Example-hermandalt :<->text302.htm#2819<->Example-hermandalt :: FldForms_hermandalt (Example H29E29)
5<->InvariantFormBases(G) <->text302.htm#2820<->InvariantFormBases(G) : GrpMat -&gt; SeqEnum[AlgMatElt], SeqEnum[AlgMatElt], SeqEnum[AlgMatElt], SeqEnum[AlgMatElt]
3<->semiinvform :<->text302.htm#2821<->semiinvform :: Semi-invariant Forms (POLAR SPACES)
5<->TwistedDual(M, lambda) <->text302.htm#2822<->TwistedDual(M, lambda) : ModGrp, Map -&gt; ModGrp
5<->SemiInvariantBilinearForms(G) <->text302.htm#2823<->SemiInvariantBilinearForms(G) : GrpMat -&gt; SeqEnum
5<->SemiInvariantQuadraticForms(G) <->text302.htm#2824<->SemiInvariantQuadraticForms(G) : GrpMat -&gt; SeqEnum
5<->TwistedSemilinearDual(M, lambda, mu) <->text302.htm#2825<->TwistedSemilinearDual(M, lambda, mu) : ModGrp, Map, Map -&gt; ModGrp
5<->SemiInvariantSesquilinearForms(G) <->text302.htm#2826<->SemiInvariantSesquilinearForms(G) : GrpMat -&gt; SeqEnum
4<->FldForms_semiinv (Example H29E30)<->text302.htm#2827<->FldForms_semiinv (Example H29E30)
4<->Example-semiinv :<->text302.htm#2827<->Example-semiinv :: FldForms_semiinv (Example H29E30)
3<->semiinvform :<->text302.htm#2821<->semiinvform :: Semi-invariant Forms (POLAR SPACES)
3<->invform :<->text302.htm<->invform :: Invariant Forms (POLAR SPACES)
3<->field_forms :<->text291.htm<->field_forms :: POLAR SPACES
3<->lattice :<->text305.htm<->lattice :: LATTICES
3<->introduction :<->text306.htm<->introduction :: Introduction (LATTICES)
3<->Lat :<->text307.htm<->Lat :: Presentation of Lattices (LATTICES)
3<->creation :<->text307.htm<->creation :: Presentation of Lattices (LATTICES)
3<->creation :<->text308.htm<->creation :: Creation of Lattices (LATTICES)
3<->creation :<->text308.htm#2834<->creation :: Elementary Creation of Lattices (LATTICES)
5<->Lattice(n, Q, M) <->text308.htm#2835<->Lattice(n, Q, M) : RngIntElt, [ RngElt ], AlgMatElt -> Lat
5<->Lattice(S, M) <->text308.htm#2835<->Lattice(S, M) : ModTupRng, AlgMatElt -> Lat
5<->Lattice(X, M) <->text308.htm#2835<->Lattice(X, M) : ModMatRngElt, AlgMatElt -&gt; Lat
5<->Lattice(n, Q) <->text308.htm#2836<->Lattice(n, Q) : RngIntElt, [ RngElt ] -> Lat
5<->Lattice(S) <->text308.htm#2836<->Lattice(S) : ModTupRng -> Lat
5<->Lattice(X) <->text308.htm#2836<->Lattice(X) : ModMatRngElt -&gt; Lat
5<->LatticeWithBasis(n, Q, M) <->text308.htm#2837<->LatticeWithBasis(n, Q, M) : RngIntElt, [ RngElt ], AlgMatElt -> Lat
5<->LatticeWithBasis(S, M) <->text308.htm#2837<->LatticeWithBasis(S, M) : ModTupRng, AlgMatElt -> Lat
5<->LatticeWithBasis(B, M) <->text308.htm#2837<->LatticeWithBasis(B, M) : ModMatRngElt, AlgMatElt -&gt; Lat
5<->LatticeWithBasis(n, Q) <->text308.htm#2838<->LatticeWithBasis(n, Q) : RngIntElt, [ RngElt ] -> Lat
5<->LatticeWithBasis(S) <->text308.htm#2838<->LatticeWithBasis(S) : ModTupRng -> Lat
5<->LatticeWithBasis(B) <->text308.htm#2838<->LatticeWithBasis(B) : ModMatRngElt -&gt; Lat
5<->LatticeWithGram(n, Q) <->text308.htm#2839<->LatticeWithGram(n, Q) : RngIntElt, [RngElt] -> Lat
5<->LatticeWithGram(F) <->text308.htm#2839<->LatticeWithGram(F) : AlgMatElt -&gt; Lat
5<->StandardLattice(n) <->text308.htm#2840<->StandardLattice(n) : RngIntElt -&gt; Lat
5<->CoordinateLattice(L) <->text308.htm#2841<->CoordinateLattice(L) : Lat -&gt; Lat
5<->ScaledLattice(L,n) <->text308.htm#2842<->ScaledLattice(L,n) : Lat, FldRatElt -> Lat
5<->ScaledLattice(L,n) <->text308.htm#2842<->ScaledLattice(L,n) : Lat, RngIntElt -&gt; Lat
4<->Lat_LatticeCreate (Example H30E1)<->text308.htm#2843<->Lat_LatticeCreate (Example H30E1)
4<->Example-LatticeCreate :<->text308.htm#2843<->Example-LatticeCreate :: Lat_LatticeCreate (Example H30E1)
3<->creation :<->text308.htm#2834<->creation :: Elementary Creation of Lattices (LATTICES)
3<->code :<->text308.htm#2844<->code :: Lattices from Linear Codes (LATTICES)
5<->Lattice(C, "A") <->text308.htm#2845<->Lattice(C, "A") : Code -&gt; Lat
5<->Lattice(C, "B") <->text308.htm#2846<->Lattice(C, "B") : Code -&gt; Lat
4<->Lat_Code (Example H30E2)<->text308.htm#2847<->Lat_Code (Example H30E2)
4<->Example-Code :<->text308.htm#2847<->Example-Code :: Lat_Code (Example H30E2)
3<->code :<->text308.htm#2844<->code :: Lattices from Linear Codes (LATTICES)
3<->anf :<->text308.htm#2848<->anf :: Lattices from Algebraic Number  Fields (LATTICES)
5<->MinkowskiLattice(O) <->text308.htm#2849<->MinkowskiLattice(O) : RngOrd -&gt; Lat, Map
5<->MinkowskiLattice(I) <->text308.htm#2850<->MinkowskiLattice(I) : RngOrdIdl -&gt; Lat, Map
5<->MinkowskiSpace(K) <->text308.htm#2851<->MinkowskiSpace(K) : FldNum -&gt; KModTup, Map
4<->Lat_OrderLattice (Example H30E3)<->text308.htm#2852<->Lat_OrderLattice (Example H30E3)
4<->Example-OrderLattice :<->text308.htm#2852<->Example-OrderLattice :: Lat_OrderLattice (Example H30E3)
3<->anf :<->text308.htm#2848<->anf :: Lattices from Algebraic Number  Fields (LATTICES)
3<->special-lattices :<->text308.htm#2853<->special-lattices :: Special Lattices (LATTICES)
5<->Lattice(X, n) <->text308.htm#2854<->Lattice(X, n) : MonStgElt, RngIntElt -&gt; Lat
3<->special-lattices :<->text308.htm#2853<->special-lattices :: Special Lattices (LATTICES)
3<->creation :<->text308.htm<->creation :: Creation of Lattices (LATTICES)
3<->element :<->text309.htm<->element :: Lattice Elements (LATTICES)
3<->creation :<->text309.htm#2856<->creation :: Creation of Lattice Elements (LATTICES)
5<->L . i <->text309.htm#2857<->L . i : Lat, RngIntElt -&gt; LatElt
5<->elt :: L ! Q <->text309.htm#2858<->elt :: L ! Q : Lat, [ RngElt ] -&gt; LatElt
5<->L ! Q <->text309.htm#2858<->L ! Q : Lat, [ RngElt ] -&gt; LatElt
5<->Coordelt :: CoordinatesToElement(L, C) <->text309.htm#2859<->Coordelt :: CoordinatesToElement(L, C) : Lat, [ RngIntElt ] -&gt; LatElt
5<->CoordinatesToElement(L, C) <->text309.htm#2859<->CoordinatesToElement(L, C) : Lat, Mtrx -> LatElt
5<->Coordelt(L, C) : Lat, Mtrx -> LatElt :: CoordinatesToElement(L, C) <->text309.htm#2859<->Coordelt(L, C) : Lat, Mtrx -> LatElt :: CoordinatesToElement(L, C) : Lat, [ RngIntElt ] -&gt; LatElt
5<->CoordinatesToElement(L, C) <->text309.htm#2859<->CoordinatesToElement(L, C) : Lat, [ RngIntElt ] -&gt; LatElt
5<->Zero :: L ! 0 <->text309.htm#2860<->Zero :: L ! 0 : Lat, RngIntElt -&gt; LatElt
5<->L ! 0 <->text309.htm#2860<->L ! 0 : Lat, RngIntElt -&gt; LatElt
3<->creation :<->text309.htm#2856<->creation :: Creation of Lattice Elements (LATTICES)
3<->operation :<->text309.htm#2861<->operation :: Operations on Lattice Elements (LATTICES)
5<->- v <->text309.htm#2862<->- v : LatElt -&gt; LatElt
5<->v + w <->text309.htm#2863<->v + w : LatElt, LatElt -&gt; LatElt
5<->v - w <->text309.htm#2864<->v - w : LatElt, LatElt -&gt; LatElt
5<->s * v <->text309.htm#2865<->s * v : RngIntElt, LatElt -> .
5<->v * s <->text309.htm#2865<->v * s : LatElt, RngIntElt -&gt; .
5<->v / s <->text309.htm#2866<->v / s : LatElt, RngIntElt -&gt; .
5<->v div d <->text309.htm#2867<->v div d : LatElt, RngIntElt -&gt; LatElt
5<->v +:= w <->text309.htm#2868<->v +:= w : LatElt, LatElt -&gt;
5<->v -:= w <->text309.htm#2869<->v -:= w : LatElt, LatElt -&gt;
5<->v *:= n <->text309.htm#2870<->v *:= n : LatElt, RngIntElt -&gt;
5<->v * T <->text309.htm#2871<->v * T : LatElt, ModMatRngElt -> LatElt
5<->v * T <->text309.htm#2871<->v * T : LatElt, GrpMatElt -> LatElt
5<->v * T <->text309.htm#2871<->v * T : LatElt, AlgMatElt -&gt; LatElt
5<->() :: InnerProduct(v, w) <->text309.htm#2872<->() :: InnerProduct(v, w) : LatElt, LatElt -&gt; RngElt
5<->InnerProduct(v, w) <->text309.htm#2872<->InnerProduct(v, w) : LatElt, LatElt -&gt; RngElt
5<->Norm(v) <->text309.htm#2873<->Norm(v) : LatElt -&gt; RngElt
5<->Length(v) <->text309.htm#2874<->Length(v) : LatElt -> FldReElt
5<->Length(v, K) <->text309.htm#2874<->Length(v, K) : LatElt, Fld -&gt; FldReElt
5<->Support(v) <->text309.htm#2875<->Support(v) : LatElt -&gt; SetEnum
3<->operation :<->text309.htm#2861<->operation :: Operations on Lattice Elements (LATTICES)
3<->operation :<->text309.htm#2876<->operation :: Predicates and Boolean Operations (LATTICES)
5<->v in L <->text309.htm#2877<->v in L : LatElt, Lat -&gt; BoolElt
5<->v eq w <->text309.htm#2878<->v eq w : LatElt, LatElt -&gt; BoolElt
5<->v ne w <->text309.htm#2879<->v ne w : LatElt, LatElt -&gt; BoolElt
5<->IsZero(v) <->text309.htm#2880<->IsZero(v) : LatElt -&gt; BoolElt
3<->operation :<->text309.htm#2876<->operation :: Predicates and Boolean Operations (LATTICES)
3<->access :<->text309.htm#2881<->access :: Access Operations (LATTICES)
5<->Eltseq :: ElementToSequence(v) <->text309.htm#2882<->Eltseq :: ElementToSequence(v) : LatElt -&gt; [ RngElt ]
5<->ElementToSequence(v) <->text309.htm#2882<->ElementToSequence(v) : LatElt -&gt; [ RngElt ]
5<->Coordinates(v) <->text309.htm#2883<->Coordinates(v) : LatElt -&gt; [ RngIntElt ]
5<->Coordinates(L, v) <->text309.htm#2884<->Coordinates(L, v) : Lat, LatElt -&gt; [ RngIntElt ]
5<->CoordinateVector(v) <->text309.htm#2885<->CoordinateVector(v) : LatElt -&gt; LatElt
5<->CoordinateVector(L, v) <->text309.htm#2886<->CoordinateVector(L, v) : Lat, LatElt -&gt; LatElt
4<->Lat_LatticeFunctions (Example H30E4)<->text309.htm#2887<->Lat_LatticeFunctions (Example H30E4)
4<->Example-LatticeFunctions :<->text309.htm#2887<->Example-LatticeFunctions :: Lat_LatticeFunctions (Example H30E4)
3<->access :<->text309.htm#2881<->access :: Access Operations (LATTICES)
3<->element :<->text309.htm<->element :: Lattice Elements (LATTICES)
3<->lattice-properties :<->text310.htm<->lattice-properties :: Properties of Lattices (LATTICES)
3<->associated-structures :<->text310.htm#2889<->associated-structures :: Associated Structures (LATTICES)
5<->AmbientSpace(L) <->text310.htm#2890<->AmbientSpace(L) : Lat -&gt; ModTupFld, Map
5<->CoordinateSpace(L) <->text310.htm#2891<->CoordinateSpace(L) : Lat -&gt; ModTupFld, Map
5<->Type :: Category(L) <->text310.htm#2892<->Type :: Category(L) : Lat -&gt; Cat
5<->Category(L) <->text310.htm#2892<->Category(L) : Lat -&gt; Cat
3<->associated-structures :<->text310.htm#2889<->associated-structures :: Associated Structures (LATTICES)
3<->lattice-attributes :<->text310.htm#2893<->lattice-attributes :: Attributes of Lattices (LATTICES)
5<->Rank :: Dimension(L) <->text310.htm#2894<->Rank :: Dimension(L) : Lat -&gt; RngIntElt
5<->Dimension(L) <->text310.htm#2894<->Dimension(L) : Lat -&gt; RngIntElt
5<->Degree(L) <->text310.htm#2895<->Degree(L) : Lat -&gt; RngIntElt
5<->Degree(v) <->text310.htm#2896<->Degree(v) : LatElt -&gt; RngIntElt
5<->Content(L) <->text310.htm#2897<->Content(L) : Lat -&gt; RngElt
5<->Level(L) <->text310.htm#2898<->Level(L) : Lat -&gt; RngElt
5<->Determinant(L) <->text310.htm#2899<->Determinant(L) : Lat -&gt; RngElt
5<->GramMatrix(L) <->text310.htm#2900<->GramMatrix(L) : Lat -&gt; AlgMatElt
5<->GramMatrix(X) : ModMatRngElt <->text310.htm#2901<->GramMatrix(X) : ModMatRngElt : -&gt; AlgMatElt
5<->InnerProductMatrix(L) <->text310.htm#2902<->InnerProductMatrix(L) : Lat -&gt; AlgMatElt
5<->Basis(L) <->text310.htm#2903<->Basis(L) : Lat -> [ FldRatElt ]
5<->Basis(L) <->text310.htm#2903<->Basis(L) : Lat -> [ RngIntElt ]
5<->Basis(L) <->text310.htm#2903<->Basis(L) : Lat -&gt; [ FldReElt ]
5<->BasisMatrix(L) <->text310.htm#2904<->BasisMatrix(L) : Lat -&gt; ModMatRngElt
5<->BasisDenominator(L) <->text310.htm#2905<->BasisDenominator(L) : Lat -&gt; RngIntElt
5<->QuadraticForm(L) <->text310.htm#2906<->QuadraticForm(L) : Lat -&gt; RngMPolElt
3<->lattice-attributes :<->text310.htm#2893<->lattice-attributes :: Attributes of Lattices (LATTICES)
3<->lattice-predicates :<->text310.htm#2907<->lattice-predicates :: Predicates and Booleans on Lattices (LATTICES)
5<->L eq M <->text310.htm#2908<->L eq M : Lat, Lat -&gt; BoolElt
5<->L ne M <->text310.htm#2909<->L ne M : Lat, Lat -&gt; BoolElt
5<->L subset M<->text310.htm#2910<->L subset M: Lat, Lat -&gt; BoolElt
5<->IsExact(L) <->text310.htm#2911<->IsExact(L) : Lat -&gt; BoolElt
5<->IsIntegral(L) <->text310.htm#2912<->IsIntegral(L) : Lat -&gt; BoolElt
5<->IsEven(L) <->text310.htm#2913<->IsEven(L) : Lat -&gt; BoolElt
3<->lattice-predicates :<->text310.htm#2907<->lattice-predicates :: Predicates and Booleans on Lattices (LATTICES)
3<->base-ring :<->text310.htm#2914<->base-ring :: Base Ring and Base Change (LATTICES)
5<->CoefficientRing :: BaseRing(L) <->text310.htm#2915<->CoefficientRing :: BaseRing(L) : Lat -&gt; Rng
5<->BaseRing(L) <->text310.htm#2915<->BaseRing(L) : Lat -&gt; Rng
5<->CoordinateRing(L) <->text310.htm#2916<->CoordinateRing(L) : Lat -&gt; RngInt
5<->BaseChange :: ChangeRing(L, S) <->text310.htm#2917<->BaseChange :: ChangeRing(L, S) : Lat, Rng -&gt; Lat, Map
5<->BaseExtend :: ChangeRing(L, S) <->text310.htm#2917<->BaseExtend :: ChangeRing(L, S) : Lat, Rng -&gt; Lat, Map
5<->ChangeRing(L, S) <->text310.htm#2917<->ChangeRing(L, S) : Lat, Rng -&gt; Lat, Map
3<->base-ring :<->text310.htm#2914<->base-ring :: Base Ring and Base Change (LATTICES)
3<->lattice-properties :<->text310.htm<->lattice-properties :: Properties of Lattices (LATTICES)
3<->new-construction :<->text311.htm<->new-construction :: Construction of New Lattices (LATTICES)
3<->sub-super-quo :<->text311.htm#2919<->sub-super-quo :: Sub- and Superlattices and Quotients (LATTICES)
5<->sub<L | S> <->text311.htm#2920<->sub&lt;L | S&gt; : Lat, List -&gt; Lat
5<->ext< L | S > <->text311.htm#2921<->ext&lt; L | S &gt; : Lat, List -&gt; Lat
5<->T * L <->text311.htm#2922<->T * L : ModMatRng, Lat -> Lat
5<->T * L <->text311.htm#2922<->T * L : AlgMatElt, Lat -&gt; Lat
5<->L * s <->text311.htm#2923<->L * s : Lat, RngElt -> Lat
5<->s * L <->text311.htm#2923<->s * L : RngElt, Lat -&gt; Lat
5<->L / s <->text311.htm#2924<->L / s : Lat, RngElt -&gt; Lat
5<->quo< L | S > <->text311.htm#2925<->quo&lt; L | S &gt; : Lat, List -&gt; GrpAb, Map
5<->L / S <->text311.htm#2926<->L / S : Lat, Lat -&gt; GrpAb, Map
5<->Index(L, S)<->text311.htm#2927<->Index(L, S): Lat, Lat -&gt; RngInt
4<->Lat_SubSuperQuo (Example H30E5)<->text311.htm#2928<->Lat_SubSuperQuo (Example H30E5)
4<->Example-SubSuperQuo :<->text311.htm#2928<->Example-SubSuperQuo :: Lat_SubSuperQuo (Example H30E5)
3<->sub-super-quo :<->text311.htm#2919<->sub-super-quo :: Sub- and Superlattices and Quotients (LATTICES)
3<->construction :<->text311.htm#2929<->construction :: Standard Constructions of New Lattices (LATTICES)
5<->Dual(L) <->text311.htm#2930<->Dual(L) : Lat -&gt; Lat
5<->PartialDual(L, n) <->text311.htm#2931<->PartialDual(L, n) : Lat, RngIntElt -&gt; Lat
5<->DualBasisLattice(L) <->text311.htm#2932<->DualBasisLattice(L) : Lat -&gt; Lat
5<->DualQuotient(L) <->text311.htm#2933<->DualQuotient(L) : Lat -&gt; GrpAb, Lat, Map
5<->EvenSublattice(L) <->text311.htm#2934<->EvenSublattice(L) : Lat -&gt; Lat, Map
4<->Lat_dual (Example H30E6)<->text311.htm#2935<->Lat_dual (Example H30E6)
4<->Example-dual :<->text311.htm#2935<->Example-dual :: Lat_dual (Example H30E6)
5<->L + M <->text311.htm#2936<->L + M : Lat, Lat -&gt; Lat
5<->L meet M <->text311.htm#2937<->L meet M : Lat, Lat -&gt; Lat
5<->OrthogonalSum :: DirectSum(L, M) <->text311.htm#2938<->OrthogonalSum :: DirectSum(L, M) : Lat, Lat -&gt; Lat
5<->DirectSum(L, M) <->text311.htm#2938<->DirectSum(L, M) : Lat, Lat -&gt; Lat
5<->OrthogonalDecomposition(L, F) <->text311.htm#2939<->OrthogonalDecomposition(L, F) : Lat, [Mtrx] -> [Lat]
5<->OrthogonalDecomposition(L) <->text311.htm#2939<->OrthogonalDecomposition(L) : Lat -&gt; [Lat]
5<->OrthogonalDecomposition(F) <->text311.htm#2940<->OrthogonalDecomposition(F) : [Mtrx] -&gt; [* Mtrx *], [* [Mtrx] *]
5<->TensorProduct(L, M) <->text311.htm#2941<->TensorProduct(L, M) : Lat, Lat -&gt; Lat
5<->ExteriorSquare(L) <->text311.htm#2942<->ExteriorSquare(L) : Lat -&gt; Lat
5<->SymmetricSquare(L) <->text311.htm#2943<->SymmetricSquare(L) : Lat -&gt; Lat
5<->PureLattice(L) <->text311.htm#2944<->PureLattice(L) : Lat -&gt; Lat
5<->IntegralBasisLattice(L) <->text311.htm#2945<->IntegralBasisLattice(L) : Lat -&gt; Lat, RngIntElt
3<->construction :<->text311.htm#2929<->construction :: Standard Constructions of New Lattices (LATTICES)
3<->new-construction :<->text311.htm<->new-construction :: Construction of New Lattices (LATTICES)
3<->reduction :<->text312.htm<->reduction :: Reduction of Matrices and Lattices (LATTICES)
3<->LLL Reduction (LATTICES)<->text312.htm#2947<->LLL Reduction (LATTICES)
4<->Lat_LLLUsage (Example H30E7)<->text312.htm#2948<->Lat_LLLUsage (Example H30E7)
4<->Example-LLLUsage :<->text312.htm#2948<->Example-LLLUsage :: Lat_LLLUsage (Example H30E7)
5<->LLL(X) <->text312.htm#2949<->LLL(X) : AlgMatElt -> AlgMatElt, AlgMatElt, RngIntElt
5<->LLL(X) <->text312.htm#2949<->LLL(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt, RngIntElt
5<->BasisReduction(X) <->text312.htm#2950<->BasisReduction(X) : AlgMatElt -> AlgMatElt, AlgMatElt, RngIntElt
5<->BasisReduction(X) <->text312.htm#2950<->BasisReduction(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt, RngIntElt
5<->LLLGram(F) <->text312.htm#2951<->LLLGram(F) : AlgMatElt -> AlgMatElt, AlgMatElt, RngIntElt
5<->LLLGram(F) <->text312.htm#2951<->LLLGram(F) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt, RngIntElt
5<->LLLBasisMatrix(L) <->text312.htm#2952<->LLLBasisMatrix(L) : Lat -&gt; ModMatElt, AlgMatElt
5<->LLLGramMatrix(L) <->text312.htm#2953<->LLLGramMatrix(L) : Lat -&gt; AlgMatElt, AlgMatElt
5<->LLL(L) <->text312.htm#2954<->LLL(L) : Lat -&gt; Lat, AlgMatElt
5<->BasisReduction(L) <->text312.htm#2955<->BasisReduction(L) : Lat -&gt; Lat, AlgMatElt
5<->SetVerbose("LLL", v) <->text312.htm#2956<->SetVerbose("LLL", v) : MonStgElt, RngIntElt -&gt;
4<->Lat_LLLXGCD (Example H30E8)<->text312.htm#2957<->Lat_LLLXGCD (Example H30E8)
4<->Example-LLLXGCD :<->text312.htm#2957<->Example-LLLXGCD :: Lat_LLLXGCD (Example H30E8)
3<->LLL Reduction (LATTICES)<->text312.htm#2947<->LLL Reduction (LATTICES)
3<->pair-reduce :<->text312.htm#2958<->pair-reduce :: Pair Reduction (LATTICES)
5<->PairReduce(X) <->text312.htm#2959<->PairReduce(X) : AlgMatElt -> AlgMatElt, AlgMatElt
5<->PairReduce(X) <->text312.htm#2959<->PairReduce(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
5<->PairReduceGram(F) <->text312.htm#2960<->PairReduceGram(F) : AlgMatElt -> AlgMatElt, AlgMatElt, RngIntElt
5<->PairReduceGram(F) <->text312.htm#2960<->PairReduceGram(F) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt, RngIntElt
5<->PairReduce(L) <->text312.htm#2961<->PairReduce(L) : Lat -&gt; Lat, AlgMatElt
3<->pair-reduce :<->text312.htm#2958<->pair-reduce :: Pair Reduction (LATTICES)
3<->seysen :<->text312.htm#2962<->seysen :: Seysen Reduction (LATTICES)
5<->Seysen(X) <->text312.htm#2963<->Seysen(X) : AlgMatElt -> AlgMatElt, AlgMatElt
5<->Seysen(X) <->text312.htm#2963<->Seysen(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
5<->SeysenGram(F) <->text312.htm#2964<->SeysenGram(F) : AlgMatElt -> AlgMatElt, AlgMatElt, RngIntElt
5<->SeysenGram(F) <->text312.htm#2964<->SeysenGram(F) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt, RngIntElt
5<->Seysen(L) <->text312.htm#2965<->Seysen(L) : Lat -&gt; Lat, AlgMatElt
4<->Lat_Seysen (Example H30E9)<->text312.htm#2966<->Lat_Seysen (Example H30E9)
4<->Example-Seysen :<->text312.htm#2966<->Example-Seysen :: Lat_Seysen (Example H30E9)
3<->seysen :<->text312.htm#2962<->seysen :: Seysen Reduction (LATTICES)
3<->hkz :<->text312.htm#2967<->hkz :: HKZ Reduction (LATTICES)
5<->HKZ(X) <->text312.htm#2968<->HKZ(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
5<->HKZGram(F) <->text312.htm#2969<->HKZGram(F) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
5<->HKZ(L) <->text312.htm#2970<->HKZ(L) : Lat -&gt; Lat, AlgMatElt
5<->SetVerbose("HKZ", v) <->text312.htm#2971<->SetVerbose("HKZ", v) : MonStgElt, RngIntElt -&gt;
5<->GaussReduceGram :: GaussReduce(X) <->text312.htm#2972<->GaussReduceGram :: GaussReduce(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
5<->GaussReduce(L) <->text312.htm#2972<->GaussReduce(L) : Lat -> Lat, AlgMatElt
5<->GaussReduce(X) <->text312.htm#2972<->GaussReduce(X) : ModMatRngElt -&gt; ModMatRngElt, AlgMatElt
4<->Lat_HKZ (Example H30E10)<->text312.htm#2973<->Lat_HKZ (Example H30E10)
4<->Example-HKZ :<->text312.htm#2973<->Example-HKZ :: Lat_HKZ (Example H30E10)
3<->hkz :<->text312.htm#2967<->hkz :: HKZ Reduction (LATTICES)
3<->bkz :<->text312.htm#2974<->bkz :: BKZ Reduction (LATTICES)
5<->BKZ(M,n) <->text312.htm#2975<->BKZ(M,n) : Mtrx, RngIntElt -&gt; Mtrx, AlgMatElt,RngIntElt
5<->BKZ(L,n) <->text312.htm#2976<->BKZ(L,n) : Lat, RngIntElt -&gt; Lat, AlgMatElt
4<->Lat_bkz-example (Example H30E11)<->text312.htm#2977<->Lat_bkz-example (Example H30E11)
4<->Example-bkz-example :<->text312.htm#2977<->Example-bkz-example :: Lat_bkz-example (Example H30E11)
3<->bkz :<->text312.htm#2974<->bkz :: BKZ Reduction (LATTICES)
3<->reconstruct :<->text312.htm#2978<->reconstruct :: Recovering a Short Basis from Short Lattice Vectors (LATTICES)
5<->ReconstructLatticeBasis(S, B) <->text312.htm#2979<->ReconstructLatticeBasis(S, B) : ModMatRngElt, ModMatRngElt -&gt; ModMatRngEltLat
3<->reconstruct :<->text312.htm#2978<->reconstruct :: Recovering a Short Basis from Short Lattice Vectors (LATTICES)
3<->reduction :<->text312.htm<->reduction :: Reduction of Matrices and Lattices (LATTICES)
3<->enumeration :<->text313.htm<->enumeration :: Minima and Element Enumeration (LATTICES)
3<->minimum :<->text313.htm#2981<->minimum :: Minimum, Density and Kissing Number (LATTICES)
5<->Minimum(L) <->text313.htm#2982<->Minimum(L) : Lat -&gt; RngElt
5<->PackingRadius(L) <->text313.htm#2983<->PackingRadius(L) : Lat -&gt; FldReElt
5<->HermiteConstant(n) <->text313.htm#2984<->HermiteConstant(n) : RngIntElt -&gt; RngElt
5<->HermiteNumber(L) <->text313.htm#2985<->HermiteNumber(L) : Lat -&gt; FldReElt
5<->CenterDensity :: CentreDensity(L) <->text313.htm#2986<->CenterDensity :: CentreDensity(L) : Lat -&gt; FldReElt
5<->CentreDensity(L, K) <->text313.htm#2986<->CentreDensity(L, K) : Lat, Fld -> FldElt
5<->CenterDensity(L, K) : Lat, Fld -> FldElt :: CentreDensity(L) <->text313.htm#2986<->CenterDensity(L, K) : Lat, Fld -> FldElt :: CentreDensity(L) : Lat -&gt; FldReElt
5<->CentreDensity(L) <->text313.htm#2986<->CentreDensity(L) : Lat -&gt; FldReElt
5<->Density(L, K) <->text313.htm#2987<->Density(L, K) : Lat, Fld -> FldReElt
5<->Density(L) <->text313.htm#2987<->Density(L) : Lat -&gt; FldReElt
5<->KissingNumber(L) <->text313.htm#2988<->KissingNumber(L) : Lat -&gt; RngElt
4<->Lat_Leech (Example H30E12)<->text313.htm#2989<->Lat_Leech (Example H30E12)
4<->Example-Leech :<->text313.htm#2989<->Example-Leech :: Lat_Leech (Example H30E12)
3<->minimum :<->text313.htm#2981<->minimum :: Minimum, Density and Kissing Number (LATTICES)
3<->shortest-closest :<->text313.htm#2990<->shortest-closest :: Shortest and Closest Vectors (LATTICES)
5<->ShortestVectors(L) <->text313.htm#2991<->ShortestVectors(L) : Lat -&gt; [ LatElt ]
5<->ShortestVectorsMatrix(L) <->text313.htm#2992<->ShortestVectorsMatrix(L) : Lat -&gt; ModMatRngElt
5<->ClosestVectors(L, w) <->text313.htm#2993<->ClosestVectors(L, w) : Lat, LatElt -> [ LatElt ], RngElt
5<->ClosestVectors(L, w) <->text313.htm#2993<->ClosestVectors(L, w) : Lat, ModTupRngElt -&gt; [ LatElt ], RngElt
5<->ClosestVectorsMatrix(L, w) <->text313.htm#2994<->ClosestVectorsMatrix(L, w) : Lat, LatElt -> ModMatRngElt, RngElt
5<->ClosestVectorsMatrix(L, w) <->text313.htm#2994<->ClosestVectorsMatrix(L, w) : Lat, ModTupRngElt -&gt; ModMatRngElt, RngElt
4<->Lat_Closest (Example H30E13)<->text313.htm#2995<->Lat_Closest (Example H30E13)
4<->Example-Closest :<->text313.htm#2995<->Example-Closest :: Lat_Closest (Example H30E13)
3<->shortest-closest :<->text313.htm#2990<->shortest-closest :: Shortest and Closest Vectors (LATTICES)
3<->short-close :<->text313.htm#2996<->short-close :: Short and Close Vectors (LATTICES)
5<->ShortVectors(L, l, u) <->text313.htm#2997<->ShortVectors(L, l, u) : Lat, RngElt, RngElt -> [ <LatElt, RngElt> ]
5<->ShortVectors(L, u) <->text313.htm#2997<->ShortVectors(L, u) : Lat, RngElt -&gt; [ &lt;LatElt, RngElt&gt; ]
5<->ShortVectorsMatrix(L, l, u) <->text313.htm#2998<->ShortVectorsMatrix(L, l, u) : Lat, RngElt, RngElt -> ModMatRngElt
5<->ShortVectorsMatrix(L, u) <->text313.htm#2998<->ShortVectorsMatrix(L, u) : Lat, RngElt -&gt; ModMatRngElt
5<->CloseVectors(L, w, l, u) <->text313.htm#2999<->CloseVectors(L, w, l, u) : Lat, ModTupRngElt, RngElt, RngElt -> [ <LatElt, RngElt> ]
5<->CloseVectors(L, w, u) <->text313.htm#2999<->CloseVectors(L, w, u) : Lat, LatElt, RngElt -> [ <LatElt, RngElt> ]
5<->CloseVectors(L, w, l, u) <->text313.htm#2999<->CloseVectors(L, w, l, u) : Lat, LatElt, RngElt, RngElt -> [ <LatElt, RngElt> ]
5<->CloseVectors(L, w, u) <->text313.htm#2999<->CloseVectors(L, w, u) : Lat, ModTupRngElt, RngElt -&gt; [ &lt;LatElt, RngElt&gt; ]
5<->CloseVectorsMatrix(L, w, l, u) <->text313.htm#3000<->CloseVectorsMatrix(L, w, l, u) : Lat, ModTupRngElt, RngElt, RngElt -> ModMatRngElt
5<->CloseVectorsMatrix(L, w, u) <->text313.htm#3000<->CloseVectorsMatrix(L, w, u) : Lat, LatElt, RngElt -> ModMatRngElt
5<->CloseVectorsMatrix(L, l, u) <->text313.htm#3000<->CloseVectorsMatrix(L, l, u) : Lat, LatElt, RngElt, RngElt -> ModMatRngElt
5<->CloseVectorsMatrix(L, w, u) <->text313.htm#3000<->CloseVectorsMatrix(L, w, u) : Lat, ModTupRngElt, RngElt -&gt; ModMatRngElt
4<->Lat_Knapsack (Example H30E14)<->text313.htm#3001<->Lat_Knapsack (Example H30E14)
4<->Example-Knapsack :<->text313.htm#3001<->Example-Knapsack :: Lat_Knapsack (Example H30E14)
4<->Lat_SingularElements (Example H30E15)<->text313.htm#3002<->Lat_SingularElements (Example H30E15)
4<->Example-SingularElements :<->text313.htm#3002<->Example-SingularElements :: Lat_SingularElements (Example H30E15)
3<->short-close :<->text313.htm#2996<->short-close :: Short and Close Vectors (LATTICES)
3<->process :<->text313.htm#3003<->process :: Short and Close Vector Processes (LATTICES)
5<->ShortVectorsProcess(L, l, u) <->text313.htm#3004<->ShortVectorsProcess(L, l, u) : Lat, RngElt, RngElt -> LatEnumProc
5<->ShortVectorsProcess(L, u) <->text313.htm#3004<->ShortVectorsProcess(L, u) : Lat, RngElt -&gt; LatEnumProc
5<->CloseVectorsProcess(L, w, l, u) <->text313.htm#3005<->CloseVectorsProcess(L, w, l, u) : Lat, ModTupRngElt, RngElt, RngElt -> LatEnumProc
5<->CloseVectorsProcess(L, w, u) <->text313.htm#3005<->CloseVectorsProcess(L, w, u) : Lat, LatElt, RngElt -> LatEnumProc
5<->CloseVectorsProcess(L, w, l, u) <->text313.htm#3005<->CloseVectorsProcess(L, w, l, u) : Lat, LatElt, RngElt, RngElt -> LatEnumProc
5<->CloseVectorsProcess(L, w, u) <->text313.htm#3005<->CloseVectorsProcess(L, w, u) : Lat, ModTupRngElt, RngElt -&gt; LatEnumProc
5<->NextVector(P) <->text313.htm#3006<->NextVector(P) : LatEnumProc -&gt; LatElt, RngElt
5<->IsEmpty(P) <->text313.htm#3007<->IsEmpty(P) : LatEnumProc -&gt; BoolElt
3<->process :<->text313.htm#3003<->process :: Short and Close Vector Processes (LATTICES)
3<->minima-theta :<->text313.htm#3008<->minima-theta :: Successive Minima and Theta Series (LATTICES)
5<->SuccessiveMinima(L, k) <->text313.htm#3009<->SuccessiveMinima(L, k) : Lat, RngIntElt -> [ RngIntElt ], [ LatElt ]
5<->SuccessiveMinima(L) <->text313.htm#3009<->SuccessiveMinima(L) : Lat -&gt; [ RngIntElt ], [ LatElt ]
5<->ThetaSeries(L, n) <->text313.htm#3010<->ThetaSeries(L, n) : Lat, RngIntElt -&gt; RngSerElt
4<->Lat_ThetaSeries (Example H30E16)<->text313.htm#3011<->Lat_ThetaSeries (Example H30E16)
4<->Example-ThetaSeries :<->text313.htm#3011<->Example-ThetaSeries :: Lat_ThetaSeries (Example H30E16)
5<->ThetaSeriesIntegral(L, n) <->text313.htm#3012<->ThetaSeriesIntegral(L, n) : Lat, RngIntElt -&gt; RngSerElt
3<->minima-theta :<->text313.htm#3008<->minima-theta :: Successive Minima and Theta Series (LATTICES)
3<->enum-utils :<->text313.htm#3013<->enum-utils :: Lattice Enumeration Utilities (LATTICES)
5<->SetVerbose("Enum", v) <->text313.htm#3014<->SetVerbose("Enum", v) : MonStgElt, RngIntElt -&gt;
5<->EnumerationCost(L, u) <->text313.htm#3015<->EnumerationCost(L, u) : Lat, FldReElt ->  FldReElt
5<->EnumerationCost(L) <->text313.htm#3015<->EnumerationCost(L) : Lat -&gt;  FldReElt
5<->EnumerationCostArray(L, u) <->text313.htm#3016<->EnumerationCostArray(L, u) : Lat, FldReElt ->  ModTupFldElt
5<->EnumerationCostArray(L) <->text313.htm#3016<->EnumerationCostArray(L) : Lat -&gt;  ModTupFldElt
4<->Lat_EnumerationCost (Example H30E17)<->text313.htm#3017<->Lat_EnumerationCost (Example H30E17)
4<->Example-EnumerationCost :<->text313.htm#3017<->Example-EnumerationCost :: Lat_EnumerationCost (Example H30E17)
3<->enum-utils :<->text313.htm#3013<->enum-utils :: Lattice Enumeration Utilities (LATTICES)
3<->enumeration :<->text313.htm<->enumeration :: Minima and Element Enumeration (LATTICES)
3<->theta_modfrm :<->text314.htm<->theta_modfrm :: Theta Series as Modular Forms (LATTICES)
5<->ThetaSeriesModularFormSpace(L) <->text314.htm#3019<->ThetaSeriesModularFormSpace(L) : Lat -&gt; ModFrm
5<->ThetaSeriesModularForm(L) <->text314.htm#3020<->ThetaSeriesModularForm(L) : Lat -&gt; ModFrmElt
3<->theta_modfrm :<->text314.htm<->theta_modfrm :: Theta Series as Modular Forms (LATTICES)
3<->voronoi :<->text315.htm<->voronoi :: Voronoi Cells, Holes and Covering Radius (LATTICES)
5<->VoronoiCell(L) <->text315.htm#3022<->VoronoiCell(L) : Lat -&gt; [ ModTupFldElt ],  SetEnum , [ ModTupFldElt ]
5<->VoronoiGraph(L) <->text315.htm#3023<->VoronoiGraph(L) : Lat -&gt; GrphUnd
5<->Holes(L) <->text315.htm#3024<->Holes(L) : Lat -&gt; [ ModTupFldElt ]
5<->DeepHoles(L) <->text315.htm#3025<->DeepHoles(L) : Lat -&gt; [ ModTupFldElt ]
5<->CoveringRadius(L) <->text315.htm#3026<->CoveringRadius(L) : Lat -&gt; FldRatElt
5<->VoronoiRelevantVectors(L) <->text315.htm#3027<->VoronoiRelevantVectors(L) : Lat -&gt; [ ModTupFldElt ]
4<->Lat_Voronoi (Example H30E18)<->text315.htm#3028<->Lat_Voronoi (Example H30E18)
4<->Example-Voronoi :<->text315.htm#3028<->Example-Voronoi :: Lat_Voronoi (Example H30E18)
3<->voronoi :<->text315.htm<->voronoi :: Voronoi Cells, Holes and Covering Radius (LATTICES)
3<->ortho :<->text316.htm<->ortho :: Orthogonalization (LATTICES)
5<->Orthogonalize(M) <->text316.htm#3030<->Orthogonalize(M) : MtrxSpcElt -&gt; MtrxSpcElt, AlgMatElt, RngIntElt
5<->OrthogonalizeGram :: Diagonalization(F) <->text316.htm#3031<->OrthogonalizeGram :: Diagonalization(F) : MtrxSpcElt -&gt; MtrxSpcElt, AlgMatElt, RngIntElt
5<->Diagonalization(F) <->text316.htm#3031<->Diagonalization(F) : MtrxSpcElt -&gt; MtrxSpcElt, AlgMatElt, RngIntElt
5<->Orthogonalize(L) <->text316.htm#3032<->Orthogonalize(L) : Lat -&gt; Lat, AlgMatElt
5<->Cholesky :: Orthonormalize(M, K) <->text316.htm#3033<->Cholesky :: Orthonormalize(M, K) : MtrxSpcElt, Fld -&gt; AlgMatElt
5<->Orthonormalize(M) <->text316.htm#3033<->Orthonormalize(M) : MtrxSpcElt -> AlgMatElt
5<->Cholesky(M) : MtrxSpcElt -> AlgMatElt :: Orthonormalize(M, K) <->text316.htm#3033<->Cholesky(M) : MtrxSpcElt -> AlgMatElt :: Orthonormalize(M, K) : MtrxSpcElt, Fld -&gt; AlgMatElt
5<->Orthonormalize(M, K) <->text316.htm#3033<->Orthonormalize(M, K) : MtrxSpcElt, Fld -&gt; AlgMatElt
5<->Cholesky :: Orthonormalize(L, K) <->text316.htm#3034<->Cholesky :: Orthonormalize(L, K) : Lat, FldRe -&gt; AlgMatElt
5<->Orthonormalize(L) <->text316.htm#3034<->Orthonormalize(L) : Lat -> AlgMatElt
5<->Cholesky(L) : Lat -> AlgMatElt :: Orthonormalize(L, K) <->text316.htm#3034<->Cholesky(L) : Lat -> AlgMatElt :: Orthonormalize(L, K) : Lat, FldRe -&gt; AlgMatElt
5<->Orthonormalize(L, K) <->text316.htm#3034<->Orthonormalize(L, K) : Lat, FldRe -&gt; AlgMatElt
4<->Lat_Orthogonalize (Example H30E19)<->text316.htm#3035<->Lat_Orthogonalize (Example H30E19)
4<->Example-Orthogonalize :<->text316.htm#3035<->Example-Orthogonalize :: Lat_Orthogonalize (Example H30E19)
3<->ortho :<->text316.htm<->ortho :: Orthogonalization (LATTICES)
3<->definite :<->text317.htm<->definite :: Testing Matrices for Definiteness (LATTICES)
5<->IsPositiveDefinite(F) <->text317.htm#3037<->IsPositiveDefinite(F) : Mtrx -&gt; BoolElt
5<->IsPositiveSemiDefinite(F) <->text317.htm#3038<->IsPositiveSemiDefinite(F) : Mtrx -&gt; BoolElt
5<->IsNegativeDefinite(F) <->text317.htm#3039<->IsNegativeDefinite(F) : Mtrx -&gt; BoolElt
5<->IsNegativeSemiDefinite(F) <->text317.htm#3040<->IsNegativeSemiDefinite(F) : Mtrx -&gt; BoolElt
5<->NumericalSignature(M) <->text317.htm#3041<->NumericalSignature(M) : Mtrx -&gt; RngIntElt, RngIntElt
3<->definite :<->text317.htm<->definite :: Testing Matrices for Definiteness (LATTICES)
3<->genus :<->text318.htm<->genus :: Genera and Spinor Genera (LATTICES)
3<->genus_symbols :<->text318.htm#3043<->genus_symbols :: Genus Constructions (LATTICES)
5<->Genus(G) <->text318.htm#3044<->Genus(G) : SymGen -> SymGen
5<->Genus(L) <->text318.htm#3044<->Genus(L) : Lat -&gt; SymGen
5<->SpinorGenus(L) <->text318.htm#3045<->SpinorGenus(L) : Lat -&gt; SymGen
5<->SpinorGenera(G) <->text318.htm#3046<->SpinorGenera(G) : SymGen -&gt; [ SymGen ]
3<->genus_symbols :<->text318.htm#3043<->genus_symbols :: Genus Constructions (LATTICES)
3<->genus_invariants :<->text318.htm#3047<->genus_invariants :: Invariants of Genera and Spinor  Genera (LATTICES)
5<->Representative(G) <->text318.htm#3048<->Representative(G) : SymGen -&gt; Lat
5<->IsSpinorGenus(G) <->text318.htm#3049<->IsSpinorGenus(G) : SymGen -&gt; BoolElt
5<->IsGenus(G) <->text318.htm#3050<->IsGenus(G) : SymGen -&gt; BoolElt
5<->Determinant(G) <->text318.htm#3051<->Determinant(G) : SymGen -&gt; Lat
5<->LocalGenera(G) <->text318.htm#3052<->LocalGenera(G) : SymGen -&gt; Lat
5<->Representative(G) <->text318.htm#3053<->Representative(G) : SymGen -&gt; Lat
5<->G1 eq G2 <->text318.htm#3054<->G1 eq G2 : SymGen, SymGen -&gt; BoolElt
5<-># G <->text318.htm#3055<-># G : SymGen -&gt; RngIntElt
5<->SpinorCharacters(G) <->text318.htm#3056<->SpinorCharacters(G) : SymGen -&gt; [ GrpDrchElt ]
5<->SpinorGenerators(G) <->text318.htm#3057<->SpinorGenerators(G) : SymGen -&gt; [ RngIntElt ]
5<->AutomorphousClasses(G,p) <->text318.htm#3058<->AutomorphousClasses(G,p) : SymGen, RngIntElt ->  RngIntElt 
5<->AutomorphousClasses(L,p) <->text318.htm#3058<->AutomorphousClasses(L,p) : Lat, RngIntElt -&gt;  RngIntElt
5<->IsSpinorNorm(G,p) <->text318.htm#3059<->IsSpinorNorm(G,p) : SymGen, RngIntElt -&gt;  RngIntElt
3<->genus_invariants :<->text318.htm#3047<->genus_invariants :: Invariants of Genera and Spinor  Genera (LATTICES)
3<->local_genus_invariants :<->text318.htm#3060<->local_genus_invariants :: Invariants of p-adic Genera (LATTICES)
5<->Prime(G) <->text318.htm#3061<->Prime(G) : SymGenLoc -&gt; RngIntElt
5<->Representative(G) <->text318.htm#3062<->Representative(G) : SymGenLoc -&gt; Lat
5<->Determinant(G) <->text318.htm#3063<->Determinant(G) : SymGenLoc -&gt; RngIntElt
5<->Dimension(G) <->text318.htm#3064<->Dimension(G) : SymGenLoc -&gt; RngIntElt
5<->G1 eq G2 <->text318.htm#3065<->G1 eq G2 : SymGenLoc, SymGenLoc -&gt; BoolElt
3<->local_genus_invariants :<->text318.htm#3060<->local_genus_invariants :: Invariants of p-adic Genera (LATTICES)
3<->neighbours :<->text318.htm#3066<->neighbours :: Neighbour Relations and Graphs (LATTICES)
5<->Neighbor :: Neighbour(L, v, p) <->text318.htm#3067<->Neighbor :: Neighbour(L, v, p) : Lat, LatElt, RngIntElt -&gt; Lat
5<->Neighbour(L, v, p) <->text318.htm#3067<->Neighbour(L, v, p) : Lat, LatElt, RngIntElt -&gt; Lat
5<->Neighbors :: Neighbours(L, p) <->text318.htm#3068<->Neighbors :: Neighbours(L, p) : Lat, RngIntElt -&gt; Lat
5<->Neighbours(L, p) <->text318.htm#3068<->Neighbours(L, p) : Lat, RngIntElt -&gt; Lat
5<->NeighborClosure :: NeighbourClosure(L, p) <->text318.htm#3069<->NeighborClosure :: NeighbourClosure(L, p) : Lat, RngIntElt -&gt; Lat
5<->NeighbourClosure(L, p) <->text318.htm#3069<->NeighbourClosure(L, p) : Lat, RngIntElt -&gt; Lat
5<->SpinorRepresentatives :: GenusRepresentatives(L) <->text318.htm#3070<->SpinorRepresentatives :: GenusRepresentatives(L) : Lat -&gt; [ Lat ]
5<->GenusRepresentatives(L) <->text318.htm#3070<->GenusRepresentatives(L) : Lat -&gt; [ Lat ]
5<->AdjacencyMatrix(G,p) <->text318.htm#3071<->AdjacencyMatrix(G,p) : SymGen, RngIntElt -&gt; AlgMatElt
4<->Lat_Neighbour (Example H30E20)<->text318.htm#3072<->Lat_Neighbour (Example H30E20)
4<->Example-Neighbour :<->text318.htm#3072<->Example-Neighbour :: Lat_Neighbour (Example H30E20)
4<->Lat_Genus (Example H30E21)<->text318.htm#3073<->Lat_Genus (Example H30E21)
4<->Example-Genus :<->text318.htm#3073<->Example-Genus :: Lat_Genus (Example H30E21)
3<->neighbours :<->text318.htm#3066<->neighbours :: Neighbour Relations and Graphs (LATTICES)
3<->genus :<->text318.htm<->genus :: Genera and Spinor Genera (LATTICES)
3<->attributes :<->text319.htm<->attributes :: Attributes of Lattices (LATTICES)
5<->L`Minimum <->text319.htm#3075<->L`Minimum : Lat -&gt; RngElt
5<->L`MinimumBound <->text319.htm#3076<->L`MinimumBound : Lat -&gt; RngElt
3<->attributes :<->text319.htm<->attributes :: Attributes of Lattices (LATTICES)
3<->latdb :<->text320.htm<->latdb :: Database of Lattices (LATTICES)
3<->creation :<->text320.htm#3078<->creation :: Creating the Database (LATTICES)
5<->LatticeDatabase() <->text320.htm#3079<->LatticeDatabase() : -&gt; DB
3<->creation :<->text320.htm#3078<->creation :: Creating the Database (LATTICES)
3<->information :<->text320.htm#3080<->information :: Database Information (LATTICES)
5<->NumberOfLattices :: # D<->text320.htm#3081<->NumberOfLattices :: # D: DB -&gt; RngIntElt
5<-># D<->text320.htm#3081<-># D: DB -&gt; RngIntElt
5<->LargestDimension(D)<->text320.htm#3082<->LargestDimension(D): DB -&gt; RngIntElt
5<->NumberOfLattices(D, d)<->text320.htm#3083<->NumberOfLattices(D, d): DB, RngIntElt -&gt; RngIntElt
5<->NumberOfLattices(D, N)<->text320.htm#3084<->NumberOfLattices(D, N): DB, MonStgElt -&gt; RngIntElt
5<->LatticeName(D, i)<->text320.htm#3085<->LatticeName(D, i): DB, RngIntElt -&gt; MonStgElt, RngIntElt
5<->LatticeName(D, d, i)<->text320.htm#3086<->LatticeName(D, d, i): DB, RngIntElt, RngIntElt -&gt; RecMonStgElt, RngIntElt
5<->LatticeName(D, N)<->text320.htm#3087<->LatticeName(D, N): DB, MonStgElt -&gt; RecMonStgElt, RngIntElt
5<->LatticeName(D, N, i)<->text320.htm#3088<->LatticeName(D, N, i): DB, MonStgElt, RngIntElt -&gt; RecMonStgElt, RngIntElt
4<->Lat_latdb-names (Example H30E22)<->text320.htm#3089<->Lat_latdb-names (Example H30E22)
4<->Example-latdb-names :<->text320.htm#3089<->Example-latdb-names :: Lat_latdb-names (Example H30E22)
3<->information :<->text320.htm#3080<->information :: Database Information (LATTICES)
3<->access :<->text320.htm#3090<->access :: Accessing the Database (LATTICES)
5<->Lattice(D, d, i\col\ \parameters)<->text320.htm#3091<->Lattice(D, d, i\col\ \parameters): DB, RngIntElt, RngIntElt -> Lattice
5<->Lattice(D, N\col\ \parameters)<->text320.htm#3091<->Lattice(D, N\col\ \parameters): DB, MonStgElt -> Lattice
5<->Lattice(D, N, i\col\ \parameters)<->text320.htm#3091<->Lattice(D, N, i\col\ \parameters): DB, MonStgElt, RngIntElt -> Lattice
5<->Lattice(D, i: parameters)<->text320.htm#3091<->Lattice(D, i: parameters): DB, RngIntElt -&gt; Lattice
5<->LatticeData(D, d, i)<->text320.htm#3092<->LatticeData(D, d, i): DB, RngIntElt, RngIntElt -> Rec
5<->LatticeData(D, N)<->text320.htm#3092<->LatticeData(D, N): DB, MonStgElt -> Rec
5<->LatticeData(D, N, i)<->text320.htm#3092<->LatticeData(D, N, i): DB, MonStgElt, RngIntElt -> Rec
5<->LatticeData(D, i)<->text320.htm#3092<->LatticeData(D, i): DB, RngIntElt -&gt; Rec
4<->Lat_latdb (Example H30E23)<->text320.htm#3093<->Lat_latdb (Example H30E23)
4<->Example-latdb :<->text320.htm#3093<->Example-latdb :: Lat_latdb (Example H30E23)
3<->access :<->text320.htm#3090<->access :: Accessing the Database (LATTICES)
3<->hermitian :<->text320.htm#3094<->hermitian :: Hermitian Lattices (LATTICES)
5<->QuaternionicTranspose :: HermitianTranspose(M) <->text320.htm#3095<->QuaternionicTranspose :: HermitianTranspose(M) : Mtrx -&gt; Mtrx
5<->HermitianTranspose(M) <->text320.htm#3095<->HermitianTranspose(M) : Mtrx -&gt; Mtrx
5<->QuaternionicBasis :: ExpandBasis(M) <->text320.htm#3096<->QuaternionicBasis :: ExpandBasis(M) : Mtrx -&gt; Mtrx
5<->ExpandBasis(M) <->text320.htm#3096<->ExpandBasis(M) : Mtrx -&gt; Mtrx
5<->QuaternionicAutomorphismGroup :: HermitianAutomorphismGroup(M) <->text320.htm#3097<->QuaternionicAutomorphismGroup :: HermitianAutomorphismGroup(M) : Mtrx -&gt; GrpMat
5<->HermitianAutomorphismGroup(M) <->text320.htm#3097<->HermitianAutomorphismGroup(M) : Mtrx -&gt; GrpMat
5<->InvariantForms(G) <->text320.htm#3098<->InvariantForms(G) : GrpMat -&gt; SeqEnum
5<->QuaternionicGModule(M, I, J) <->text320.htm#3099<->QuaternionicGModule(M, I, J) : ModGrp, AlgMatElt, AlgMatElt -&gt; ModGrp
5<->MooreDeterminant(M) <->text320.htm#3100<->MooreDeterminant(M) : Mtrx -&gt; Mtrx
4<->Lat_coxeter-todd (Example H30E24)<->text320.htm#3101<->Lat_coxeter-todd (Example H30E24)
4<->Example-coxeter-todd :<->text320.htm#3101<->Example-coxeter-todd :: Lat_coxeter-todd (Example H30E24)
4<->Lat_quaternionic-auto-group (Example H30E25)<->text320.htm#3102<->Lat_quaternionic-auto-group (Example H30E25)
4<->Example-quaternionic-auto-group :<->text320.htm#3102<->Example-quaternionic-auto-group :: Lat_quaternionic-auto-group (Example H30E25)
3<->hermitian :<->text320.htm#3094<->hermitian :: Hermitian Lattices (LATTICES)
3<->latdb :<->text320.htm<->latdb :: Database of Lattices (LATTICES)
3<->lattice :<->text305.htm<->lattice :: LATTICES
3<->lattice-nf :<->text323.htm<->lattice-nf :: LATTICES OVER NUMBER FIELDS
3<->LatNF :<->text324.htm<->LatNF :: Introduction (LATTICES OVER NUMBER FIELDS)
3<->LatNFElt :<->text324.htm<->LatNFElt :: Introduction (LATTICES OVER NUMBER FIELDS)
3<->introduction :<->text324.htm<->introduction :: Introduction (LATTICES OVER NUMBER FIELDS)
3<->numberfieldlattices :<->text325.htm<->numberfieldlattices :: Number Field Lattices (LATTICES OVER NUMBER FIELDS)
3<->creation :<->text325.htm#3108<->creation :: Creation of Number Field Lattices (LATTICES OVER NUMBER FIELDS)
5<->NumberFieldLattice(K, d) <->text325.htm#3109<->NumberFieldLattice(K, d) : FldNum, RngIntElt -&gt; LatNF
5<->NumberFieldLattice(S) <->text325.htm#3110<->NumberFieldLattice(S) : [ModTupFldElt] -&gt; LatNF
5<->NumberFieldLattice(D) <->text325.htm#3111<->NumberFieldLattice(D) : ModDed -&gt; LatNF
5<->Module(L) <->text325.htm#3112<->Module(L) : LatNF -&gt; ModDed
5<->sub<L | E> <->text325.htm#3113<->sub&lt;L | E&gt; : LatNF, SeqEnum -&gt; LatNF
5<->A + B <->text325.htm#3114<->A + B : LatNF, LatNF -&gt; LatNF
5<->A meet B <->text325.htm#3115<->A meet B : LatNF, LatNF -&gt; LatNF
5<->L * r <->text325.htm#3116<->L * r : Lat NF, LatNF -> LatNF
5<->/ :: r * L <->text325.htm#3116<->/ :: r * L : RngElt, LatNF -&gt; LatNF
5<->BasisScaling :: r * L <->text325.htm#3116<->BasisScaling :: r * L : RngElt, LatNF -&gt; LatNF
5<->r * L <->text325.htm#3116<->r * L : RngElt, LatNF -&gt; LatNF
5<->InnerProductScaling(L, r) <->text325.htm#3117<->InnerProductScaling(L, r) : LatNF, RngElt -&gt; LatNF
5<->L * J<->text325.htm#3118<->L * J: LatNF, RngOrdFracIdl -> LatNF
5<->/ :: J * L <->text325.htm#3118<->/ :: J * L : RngOrdFracIdl, LatNF -&gt; LatNF
5<->J * L <->text325.htm#3118<->J * L : RngOrdFracIdl, LatNF -&gt; LatNF
5<->T * L <->text325.htm#3119<->T * L : Mtrx, LatNF -&gt; LatNF
5<->TJ * L <->text325.htm#3120<->TJ * L : PMat, LatNF -&gt; LatNF
5<->L * T <->text325.htm#3121<->L * T : LatNF, Mtrx -&gt; LatNF
5<->DirectSum(A, B) <->text325.htm#3122<->DirectSum(A, B) : LatNF, LatNF -&gt; LatNF
5<->OrthogonalComplement(L, S) <->text325.htm#3123<->OrthogonalComplement(L, S) : LatNF, LatNF -> LatNF
5<->OrthogonalComplement(L, v) <->text325.htm#3123<->OrthogonalComplement(L, v) : LatNF, LatNFElt -&gt; LatNF
5<->Dual(L) <->text325.htm#3124<->Dual(L) : LatNF -&gt; LatNF
5<->SimpleLattice(L) <->text325.htm#3125<->SimpleLattice(L) : LatNF -&gt; LatNF
4<->LatNF_creation-examples (Example H31E1)<->text325.htm#3126<->LatNF_creation-examples (Example H31E1)
4<->Example-creation-examples :<->text325.htm#3126<->Example-creation-examples :: LatNF_creation-examples (Example H31E1)
3<->creation :<->text325.htm#3108<->creation :: Creation of Number Field Lattices (LATTICES OVER NUMBER FIELDS)
3<->attributes :<->text325.htm#3127<->attributes :: Attributes of Number Field Lattices (LATTICES OVER NUMBER FIELDS)
5<->BasisMatrix :: Basis(L) <->text325.htm#3128<->BasisMatrix :: Basis(L) : LatNF -&gt; [ModTupFldElt]
5<->Basis(L) <->text325.htm#3128<->Basis(L) : LatNF -&gt; [ModTupFldElt]
5<->PseudoBasisMatrix :: PseudoBasis(L) <->text325.htm#3129<->PseudoBasisMatrix :: PseudoBasis(L) : LatNF -&gt; [ModTupFldElt]
5<->PseudoBasis(L) <->text325.htm#3129<->PseudoBasis(L) : LatNF -&gt; [ModTupFldElt]
5<->PseudoMatrix(L) <->text325.htm#3130<->PseudoMatrix(L) : LatNF -&gt; PMat
5<->CoefficientIdeals(L) <->text325.htm#3131<->CoefficientIdeals(L) : LatNF -&gt; SeqEnum
5<->GeneratorMatrix :: Generators(L) <->text325.htm#3132<->GeneratorMatrix :: Generators(L) : LatNF -&gt; SeqEnum
5<->Generators(L) <->text325.htm#3132<->Generators(L) : LatNF -&gt; SeqEnum
5<->InnerProductMatrix(L) <->text325.htm#3133<->InnerProductMatrix(L) : LatNF -&gt; Mtrx
5<->MakeAmbientInnerProduct(~L, IP) <->text325.htm#3134<->MakeAmbientInnerProduct(~L, IP) : LatNF -&gt;
5<->GramMatrix(L) <->text325.htm#3135<->GramMatrix(L) : LatNF -&gt; Mtrx
5<->PseudoGramMatrix(L) <->text325.htm#3136<->PseudoGramMatrix(L) : LatNF -&gt; Mtrx
5<->Dimension :: Rank(L) <->text325.htm#3137<->Dimension :: Rank(L) : LatNF -&gt; RngIntElt
5<->Rank(L) <->text325.htm#3137<->Rank(L) : LatNF -&gt; RngIntElt
5<->Degree(L) <->text325.htm#3138<->Degree(L) : LatNF -&gt; RngIntElt
5<->BaseRing(L) <->text325.htm#3139<->BaseRing(L) : LatNF -&gt; FldNum
5<->Determinant(L) <->text325.htm#3140<->Determinant(L) : LatNF -&gt; FldNumElt
5<->Volume :: Discriminant(L) <->text325.htm#3141<->Volume :: Discriminant(L) : LatNF -&gt; RngOrdFracIdl
5<->Discriminant(L) <->text325.htm#3141<->Discriminant(L) : LatNF -&gt; RngOrdFracIdl
5<->Norm(L) <->text325.htm#3142<->Norm(L) : LatNF -&gt; RngOrdFracIdl
5<->Scale(L) <->text325.htm#3143<->Scale(L) : LatNF -&gt; RngOrdFracIdl
4<->LatNF_attr-examples (Example H31E2)<->text325.htm#3144<->LatNF_attr-examples (Example H31E2)
4<->Example-attr-examples :<->text325.htm#3144<->Example-attr-examples :: LatNF_attr-examples (Example H31E2)
3<->attributes :<->text325.htm#3127<->attributes :: Attributes of Number Field Lattices (LATTICES OVER NUMBER FIELDS)
3<->attributes :<->text325.htm#3145<->attributes :: Predicates on Number Field Lattices (LATTICES OVER NUMBER FIELDS)
5<->IsSimple(L) <->text325.htm#3146<->IsSimple(L) : LatNF -&gt; BoolElt
5<->IsFree(L) <->text325.htm#3147<->IsFree(L) : LatNF -&gt; BoolElt
5<->IsTotallyPositiveDefinite(L) <->text325.htm#3148<->IsTotallyPositiveDefinite(L) : LatNF -&gt; BoolElt
5<->ne :: A eq B <->text325.htm#3149<->ne :: A eq B : LatNF, LatNF -&gt; BoolElt
5<->A eq B <->text325.htm#3149<->A eq B : LatNF, LatNF -&gt; BoolElt
5<->IsIdentical(A, B) <->text325.htm#3150<->IsIdentical(A, B) : LatNF, LatNF -&gt; BoolElt
5<->subset :: IsSublattice(S, L) <->text325.htm#3151<->subset :: IsSublattice(S, L) : LatNF, LatNF -&gt; BoolElt, Mtrx
5<->IsSublattice(S, L) <->text325.htm#3151<->IsSublattice(S, L) : LatNF, LatNF -&gt; BoolElt, Mtrx
5<->IsModular(L) <->text325.htm#3152<->IsModular(L) : LatNF -&gt; BoolElt, RngOrdFracIdl
3<->attributes :<->text325.htm#3145<->attributes :: Predicates on Number Field Lattices (LATTICES OVER NUMBER FIELDS)
3<->nf-tpd :<->text325.htm#3153<->nf-tpd :: Totally Positive Definite Lattices (LATTICES OVER NUMBER FIELDS)
5<->AutomorphismGroup(L) <->text325.htm#3154<->AutomorphismGroup(L) : LatNF -&gt; GrpMat
5<->IsIsometric(A, B) <->text325.htm#3155<->IsIsometric(A, B) : LatNF, LatNF -&gt; BoolElt, Mtrx
5<->Sphere(L, x) <->text325.htm#3156<->Sphere(L, x) : LatNF, RngElt -&gt; Setq
3<->nf-tpd :<->text325.htm#3153<->nf-tpd :: Totally Positive Definite Lattices (LATTICES OVER NUMBER FIELDS)
3<->numberfieldlattices :<->text325.htm<->numberfieldlattices :: Number Field Lattices (LATTICES OVER NUMBER FIELDS)
3<->numberfieldlatticeelements :<->text326.htm<->numberfieldlatticeelements :: Number Field Lattice Elements (LATTICES OVER NUMBER FIELDS)
3<->nf-elt-create :<->text326.htm#3158<->nf-elt-create :: Creation (LATTICES OVER NUMBER FIELDS)
5<->Zero(L) <->text326.htm#3159<->Zero(L) : LatNF -&gt; LatNFElt
5<->L ! e <->text326.htm#3160<->L ! e : LatNF, Any -&gt; LatNFElt
5<->L . i <->text326.htm#3161<->L . i : LatNF, RngIntElt -&gt; LatNFElt
5<->CoordinatesToLattice(L, v) <->text326.htm#3162<->CoordinatesToLattice(L, v) : LatNF, ModTupFldElt -> LatNFElt
5<->CoordinatesToLattice(L, S) <->text326.htm#3162<->CoordinatesToLattice(L, S) : LatNF, SeqEnum -&gt; LatNFElt
3<->nf-elt-create :<->text326.htm#3158<->nf-elt-create :: Creation (LATTICES OVER NUMBER FIELDS)
3<->nf-elt-parent :<->text326.htm#3163<->nf-elt-parent :: Parent and Element Relations (LATTICES OVER NUMBER FIELDS)
5<->v in L <->text326.htm#3164<->v in L : LatNFElt, LatNF -> BoolElt, ModTupFldElt
5<->v in L <->text326.htm#3164<->v in L : ModTupRngElt, LatNF -&gt; BoolElt, ModTupFldElt
5<->Parent(v) <->text326.htm#3165<->Parent(v) : LatNFElt -&gt; LatNF
3<->nf-elt-parent :<->text326.htm#3163<->nf-elt-parent :: Parent and Element Relations (LATTICES OVER NUMBER FIELDS)
3<->nf-elt-arith :<->text326.htm#3166<->nf-elt-arith :: Arithmetic (LATTICES OVER NUMBER FIELDS)
5<->v + w <->text326.htm#3167<->v + w : LatNFElt, LatNFElt -&gt; LatNFElt
5<->- v <->text326.htm#3167<->- v : LatNFElt -> LatNFElt
5<->eq :: v + w <->text326.htm#3167<->eq :: v + w : LatNFElt, LatNFElt -&gt; LatNFElt
5<->ne :: v + w <->text326.htm#3167<->ne :: v + w : LatNFElt, LatNFElt -&gt; LatNFElt
5<->IsZero :: v + w <->text326.htm#3167<->IsZero :: v + w : LatNFElt, LatNFElt -&gt; LatNFElt
5<->v + w <->text326.htm#3167<->v + w : LatNFElt, LatNFElt -&gt; LatNFElt
5<->v * s <->text326.htm#3168<->v * s : LatNFElt, RngElt -> LatNFElt
5<->/ :: s * v <->text326.htm#3168<->/ :: s * v : RngElt, LatNFElt -&gt; LatNFElt
5<->s * v <->text326.htm#3168<->s * v : RngElt, LatNFElt -&gt; LatNFElt
5<->T * v <->text326.htm#3169<->T * v : Mtrx, LatNFElt -&gt; LatNFElt
5<->v * T <->text326.htm#3170<->v * T : LatNFElt, Mtrx -&gt; LatNFElt
5<->v ^ M <->text326.htm#3171<->v ^ M : LatNFElt, Mtrx -&gt; LatNFElt
5<->Orbit :: v ^ G <->text326.htm#3172<->Orbit :: v ^ G : LatNFElt, GrpMat -&gt; Setq[LatNFElt]
5<->v ^ G <->text326.htm#3172<->v ^ G : LatNFElt, GrpMat -&gt; Setq[LatNFElt]
5<->Stabilizer(G, v) <->text326.htm#3173<->Stabilizer(G, v) : GrpMat, LatNFElt -&gt; GrpMat
5<->Norm(v) <->text326.htm#3174<->Norm(v) : LatNFElt -&gt; FldNumElt
5<->InnerProduct(v, w) <->text326.htm#3175<->InnerProduct(v, w) : LatNFElt, LatNFElt -&gt; FldNumElt
4<->LatNF_nflatelt-ex (Example H31E3)<->text326.htm#3176<->LatNF_nflatelt-ex (Example H31E3)
4<->Example-nflatelt-ex :<->text326.htm#3176<->Example-nflatelt-ex :: LatNF_nflatelt-ex (Example H31E3)
3<->nf-elt-arith :<->text326.htm#3166<->nf-elt-arith :: Arithmetic (LATTICES OVER NUMBER FIELDS)
3<->nf-elt-access :<->text326.htm#3177<->nf-elt-access :: Access Functions (LATTICES OVER NUMBER FIELDS)
5<->Vector(v) <->text326.htm#3178<->Vector(v) : LatNFElt -&gt; ModTupFldElt
5<->Eltseq(v) <->text326.htm#3179<->Eltseq(v) : LatNFElt -&gt; SeqEnum
5<->Coordinates(v) <->text326.htm#3180<->Coordinates(v) : LatNFElt -&gt; ModTupFldElt
3<->nf-elt-access :<->text326.htm#3177<->nf-elt-access :: Access Functions (LATTICES OVER NUMBER FIELDS)
3<->numberfieldlatticeelements :<->text326.htm<->numberfieldlatticeelements :: Number Field Lattice Elements (LATTICES OVER NUMBER FIELDS)
3<->examples :<->text327.htm<->examples :: Examples (LATTICES OVER NUMBER FIELDS)
4<->LatNF_simple-nflat-example (Example H31E4)<->text327.htm#3182<->LatNF_simple-nflat-example (Example H31E4)
4<->Example-simple-nflat-example :<->text327.htm#3182<->Example-simple-nflat-example :: LatNF_simple-nflat-example (Example H31E4)
4<->LatNF_nf-second-ex (Example H31E5)<->text327.htm#3183<->LatNF_nf-second-ex (Example H31E5)
4<->Example-nf-second-ex :<->text327.htm#3183<->Example-nf-second-ex :: LatNF_nf-second-ex (Example H31E5)
4<->LatNF_nf-lat-sqrt5 (Example H31E6)<->text327.htm#3184<->LatNF_nf-lat-sqrt5 (Example H31E6)
4<->Example-nf-lat-sqrt5 :<->text327.htm#3184<->Example-nf-lat-sqrt5 :: LatNF_nf-lat-sqrt5 (Example H31E6)
4<->LatNF_nflat-notsimple (Example H31E7)<->text327.htm#3185<->LatNF_nflat-notsimple (Example H31E7)
4<->Example-nflat-notsimple :<->text327.htm#3185<->Example-nflat-notsimple :: LatNF_nflat-notsimple (Example H31E7)
4<->LatNF_nflat-maass (Example H31E8)<->text327.htm#3186<->LatNF_nflat-maass (Example H31E8)
4<->Example-nflat-maass :<->text327.htm#3186<->Example-nflat-maass :: LatNF_nflat-maass (Example H31E8)
3<->examples :<->text327.htm<->examples :: Examples (LATTICES OVER NUMBER FIELDS)
3<->lorentzian-lattices :<->text328.htm<->lorentzian-lattices :: Lorentzian Lattices (LATTICES OVER NUMBER FIELDS)
3<->functions :<->text328.htm#3188<->functions :: Special Intrinsics (LATTICES OVER NUMBER FIELDS)
5<->IsLorentzian(L) <->text328.htm#3189<->IsLorentzian(L) : LatNF -&gt; BoolElt, ModTupFldElt, RngIntElt
5<->IsSpacelike :: IsTimelike(v)<->text328.htm#3190<->IsSpacelike :: IsTimelike(v): LatNFElt -&gt; BoolElt
5<->IsTimelike(v)<->text328.htm#3190<->IsTimelike(v): LatNFElt -&gt; BoolElt
5<->AutomorphismGroup(L, v) <->text328.htm#3191<->AutomorphismGroup(L, v) : LatNF, LatNFElt -&gt; GrpMat, GrpMat
5<->IsIsometric(L, v, w) <->text328.htm#3192<->IsIsometric(L, v, w) : LatNF, LatNFElt, LatNFElt -&gt; BoolElt, Mtrx
4<->LatNF_simple-lorentz-lat-ex (Example H31E9)<->text328.htm#3193<->LatNF_simple-lorentz-lat-ex (Example H31E9)
4<->Example-simple-lorentz-lat-ex :<->text328.htm#3193<->Example-simple-lorentz-lat-ex :: LatNF_simple-lorentz-lat-ex (Example H31E9)
3<->functions :<->text328.htm#3188<->functions :: Special Intrinsics (LATTICES OVER NUMBER FIELDS)
3<->lorentzian-lattices :<->text328.htm<->lorentzian-lattices :: Lorentzian Lattices (LATTICES OVER NUMBER FIELDS)
3<->lattice-nf :<->text323.htm<->lattice-nf :: LATTICES OVER NUMBER FIELDS
3<->glattice :<->text331.htm<->glattice :: LATTICES WITH GROUP ACTION
3<->introduction :<->text332.htm<->introduction :: Introduction (LATTICES WITH GROUP ACTION)
3<->auto-isom :<->text333.htm<->auto-isom :: Automorphism Group and  Isometry Testing (LATTICES WITH GROUP ACTION)
5<->AutomorphismGroup(L) <->text333.htm#3199<->AutomorphismGroup(L) : Lat -&gt; GrpMat
5<->AutomorphismGroup(L, F) <->text333.htm#3200<->AutomorphismGroup(L, F) : Lat,  AlgMatElt  -> GrpMat
5<->AutomorphismGroup(L, F) <->text333.htm#3200<->AutomorphismGroup(L, F) : Lat, [ AlgMatElt ] -&gt; GrpMat
5<->AutomorphismGroup(F) <->text333.htm#3201<->AutomorphismGroup(F) : [ AlgMatElt ] -&gt; GrpMat
4<->GLat_AutoAction (Example H32E1)<->text333.htm#3202<->GLat_AutoAction (Example H32E1)
4<->Example-AutoAction :<->text333.htm#3202<->Example-AutoAction :: GLat_AutoAction (Example H32E1)
4<->GLat_AutoL19 (Example H32E2)<->text333.htm#3203<->GLat_AutoL19 (Example H32E2)
4<->Example-AutoL19 :<->text333.htm#3203<->Example-AutoL19 :: GLat_AutoL19 (Example H32E2)
5<->IsIsomorphic :: IsIsometric(L, M) <->text333.htm#3204<->IsIsomorphic :: IsIsometric(L, M) : Lat, Lat -&gt; BoolElt, AlgMatElt
5<->IsIsometric(L, M) <->text333.htm#3204<->IsIsometric(L, M) : Lat, Lat -&gt; BoolElt, AlgMatElt
5<->IsIsomorphic :: IsIsometric(L, F1, M, F()2) <->text333.htm#3205<->IsIsomorphic :: IsIsometric(L, F<sub>1</sub>, M, F()<sub>2</sub>) : Lat, [ AlgMatElt ], Lat, [ AlgMatElt ] -&gt; BoolElt, AlgMatElt
5<->IsIsometric(L, M) <->text333.htm#3205<->IsIsometric(L, M) : Lat, Lat -> BoolElt, AlgMatElt
5<->IsIsomorphic(L, M) : Lat, Lat -> BoolElt, AlgMatElt :: IsIsometric(L, F1, M, F()2) <->text333.htm#3205<->IsIsomorphic(L, M) : Lat, Lat -> BoolElt, AlgMatElt :: IsIsometric(L, F<sub>1</sub>, M, F()<sub>2</sub>) : Lat, [ AlgMatElt ], Lat, [ AlgMatElt ] -&gt; BoolElt, AlgMatElt
5<->IsIsometric(L, F1, M, F()2) <->text333.htm#3205<->IsIsometric(L, F<sub>1</sub>, M, F()<sub>2</sub>) : Lat, [ AlgMatElt ], Lat, [ AlgMatElt ] -&gt; BoolElt, AlgMatElt
5<->IsIsomorphic :: IsIsometric(F1, F()2) <->text333.htm#3206<->IsIsomorphic :: IsIsometric(F<sub>1</sub>, F()<sub>2</sub>) : [ AlgMatElt ], [ AlgMatElt ] -&gt; BoolElt, AlgMatElt
5<->IsIsometric(F1, F()2) <->text333.htm#3206<->IsIsometric(F<sub>1</sub>, F()<sub>2</sub>) : [ AlgMatElt ], [ AlgMatElt ] -&gt; BoolElt, AlgMatElt
4<->GLat_Isom (Example H32E3)<->text333.htm#3207<->GLat_Isom (Example H32E3)
4<->Example-Isom :<->text333.htm#3207<->Example-Isom :: GLat_Isom (Example H32E3)
3<->auto-isom-fqt :<->text333.htm#3208<->auto-isom-fqt :: Automorphism Group and  Isometry Testing over F<sub>q</sub>[t] (LATTICES WITH GROUP ACTION)
5<->DominantDiagonalForm(X) <->text333.htm#3209<->DominantDiagonalForm(X) : Mtrx[RngUPol] -&gt; Mtrx, Mtrx, GrpMat, FldFin
4<->GLat_DDF-fqt (Example H32E4)<->text333.htm#3210<->GLat_DDF-fqt (Example H32E4)
4<->Example-DDF-fqt :<->text333.htm#3210<->Example-DDF-fqt :: GLat_DDF-fqt (Example H32E4)
5<->AutomorphismGroup(G) <->text333.htm#3211<->AutomorphismGroup(G) : Mtrx[RngUPol] -&gt; GrpMat, FldFin
5<->IsIsometric(G1, G2) <->text333.htm#3212<->IsIsometric(G1, G2) : Mtrx[RngUPol], Mtrx[RngUPol] -&gt; BoolElt, Mtrx, FldFin
5<->ShortestVectors(G) <->text333.htm#3213<->ShortestVectors(G) : Mtrx[RngUPol] -&gt; SeqEnum
5<->ShortVectors(G, B) <->text333.htm#3214<->ShortVectors(G, B) : Mtrx[RngUPol], RngIntElt -&gt; SeqEnum
3<->auto-isom-fqt :<->text333.htm#3208<->auto-isom-fqt :: Automorphism Group and  Isometry Testing over F<sub>q</sub>[t] (LATTICES WITH GROUP ACTION)
3<->auto-isom :<->text333.htm<->auto-isom :: Automorphism Group and  Isometry Testing (LATTICES WITH GROUP ACTION)
3<->G-lattices :<->text334.htm<->G-lattices :: Lattices from Matrix Groups (LATTICES WITH GROUP ACTION)
3<->create :<->text334.htm#3216<->create :: Creation of G-Lattices (LATTICES WITH GROUP ACTION)
5<->Lattice(G) <->text334.htm#3217<->Lattice(G) : GrpMat -&gt; Lat
5<->LatticeWithBasis(G, B) <->text334.htm#3218<->LatticeWithBasis(G, B) : GrpMat, ModMatRngElt -&gt; Lat
5<->LatticeWithBasis(G, B, M) <->text334.htm#3219<->LatticeWithBasis(G, B, M) : GrpMat, ModMatRngElt, AlgMatElt -&gt; Lat
5<->LatticeWithGram(G, F) <->text334.htm#3220<->LatticeWithGram(G, F) : GrpMat, AlgMatElt -&gt; Lat
3<->create :<->text334.htm#3216<->create :: Creation of G-Lattices (LATTICES WITH GROUP ACTION)
3<->operation :<->text334.htm#3221<->operation :: Operations on G-Lattices (LATTICES WITH GROUP ACTION)
5<->IsGLattice(L) <->text334.htm#3222<->IsGLattice(L) : Lat -&gt; GrpMat
5<->Group(L) <->text334.htm#3223<->Group(L) : Lat -&gt; GrpMat
5<->Nagens :: NumberOfActionGenerators(L) <->text334.htm#3224<->Nagens :: NumberOfActionGenerators(L) : Lat -&gt; RngIntElt
5<->NumberOfActionGenerators(L) <->text334.htm#3224<->NumberOfActionGenerators(L) : Lat -&gt; RngIntElt
5<->ActionGenerator(L, i) <->text334.htm#3225<->ActionGenerator(L, i) : Lat, RngIntElt -&gt; GrpMat
5<->NaturalGroup(L) <->text334.htm#3226<->NaturalGroup(L) : Lat -&gt; GrpMat
5<->NaturalActionGenerator(L, i) <->text334.htm#3227<->NaturalActionGenerator(L, i) : Lat, RngIntElt -&gt; GrpMat
3<->operation :<->text334.htm#3221<->operation :: Operations on G-Lattices (LATTICES WITH GROUP ACTION)
3<->forms :<->text334.htm#3228<->forms :: Invariant Forms (LATTICES WITH GROUP ACTION)
5<->InvariantForms(L) <->text334.htm#3229<->InvariantForms(L) : Lat -&gt; [ AlgMatElt ]
5<->InvariantForms(L, n) <->text334.htm#3230<->InvariantForms(L, n) : Lat, RngIntElt -&gt; [ AlgMatElt ]
5<->SymmetricForms(L) <->text334.htm#3231<->SymmetricForms(L) : Lat -&gt; [ AlgMatElt ]
5<->SymmetricForms(L, n) <->text334.htm#3232<->SymmetricForms(L, n) : Lat, RngIntElt -&gt; [ AlgMatElt ]
5<->AntisymmetricForms(L) <->text334.htm#3233<->AntisymmetricForms(L) : Lat -&gt; [ AlgMatElt ]
5<->AntisymmetricForms(L, n) <->text334.htm#3234<->AntisymmetricForms(L, n) : Lat, RngIntElt -&gt; [ AlgMatElt ]
5<->NumberOfInvariantForms(L) <->text334.htm#3235<->NumberOfInvariantForms(L) : Lat -&gt; RngIntElt, RngIntElt
5<->NumberOfSymmetricForms(L) <->text334.htm#3236<->NumberOfSymmetricForms(L) : Lat -&gt; RngIntElt
5<->NumberOfAntisymmetricForms(L) <->text334.htm#3237<->NumberOfAntisymmetricForms(L) : Lat -&gt; RngIntElt
5<->PositiveDefiniteForm(L) <->text334.htm#3238<->PositiveDefiniteForm(L) : Lat -&gt; AlgMatElt
3<->forms :<->text334.htm#3228<->forms :: Invariant Forms (LATTICES WITH GROUP ACTION)
3<->endo-hom :<->text334.htm#3239<->endo-hom :: Endomorphisms (LATTICES WITH GROUP ACTION)
5<->EndomorphismRing(L) <->text334.htm#3240<->EndomorphismRing(L) : Lat -&gt; AlgMat
5<->Endomorphisms(L, n) <->text334.htm#3241<->Endomorphisms(L, n) : Lat, RngIntElt -&gt; [ AlgMatElt ]
5<->DimensionOfEndomorphismRing(L) <->text334.htm#3242<->DimensionOfEndomorphismRing(L) : Lat -&gt; RngIntElt
5<->CentreOfEndomorphismRing(L) <->text334.htm#3243<->CentreOfEndomorphismRing(L) : Lat -&gt; AlgMat
5<->CentralEndomorphisms(L, n) <->text334.htm#3244<->CentralEndomorphisms(L, n) : Lat, RngIntElt -&gt; [ AlgMatElt ]
5<->DimensionOfCentreOfEndomorphismRing(L) <->text334.htm#3245<->DimensionOfCentreOfEndomorphismRing(L) : Lat -&gt; RngIntElt
3<->endo-hom :<->text334.htm#3239<->endo-hom :: Endomorphisms (LATTICES WITH GROUP ACTION)
3<->sublattice :<->text334.htm#3246<->sublattice :: G-invariant Sublattices (LATTICES WITH GROUP ACTION)
5<->Sublattices(G, Q) <->text334.htm#3247<->Sublattices(G, Q) : [ Mtrx ], [ RngIntElt ] -> [ Lat ], BoolElt
5<->Sublattices(L, Q) <->text334.htm#3247<->Sublattices(L, Q) : Lat, [ RngIntElt ] -> [ Lat ], BoolElt
5<->Sublattices(G, Q) <->text334.htm#3247<->Sublattices(G, Q) : GrpMat, [ RngIntElt ] -&gt; [ Lat ], BoolElt
5<->Sublattices(L, p) <->text334.htm#3248<->Sublattices(L, p) : Lat, RngIntElt -> [ Lat ], BoolElt
5<->Sublattices(G, p) <->text334.htm#3248<->Sublattices(G, p) : GrpMat, RngIntElt -&gt; [ Lat ], BoolElt
5<->Sublattices(L) <->text334.htm#3249<->Sublattices(L) : Lat -> [ Lat ], BoolElt
5<->Sublattices(G) <->text334.htm#3249<->Sublattices(G) : GrpMat -&gt; [ Lat ], BoolElt
5<->SublatticeClasses(G) <->text334.htm#3250<->SublatticeClasses(G) : GrpMat -&gt; [ Lat ]
4<->GLat_Sublattices (Example H32E5)<->text334.htm#3251<->GLat_Sublattices (Example H32E5)
4<->Example-Sublattices :<->text334.htm#3251<->Example-Sublattices :: GLat_Sublattices (Example H32E5)
4<->GLat_Sublattices2 (Example H32E6)<->text334.htm#3252<->GLat_Sublattices2 (Example H32E6)
4<->Example-Sublattices2 :<->text334.htm#3252<->Example-Sublattices2 :: GLat_Sublattices2 (Example H32E6)
3<->sublattice :<->text334.htm#3246<->sublattice :: G-invariant Sublattices (LATTICES WITH GROUP ACTION)
3<->sublattice-lattice :<->text334.htm#3253<->sublattice-lattice :: Lattice of Sublattices (LATTICES WITH GROUP ACTION)
3<->sublattice-lattice-create :<->text334.htm#3254<->sublattice-lattice-create :: Creating the Lattice of Sublattices (LATTICES WITH GROUP ACTION)
5<->SublatticeLattice(G, Q) <->text334.htm#3255<->SublatticeLattice(G, Q) : [ Mtrx ], [ RngIntElt ] -> LatLat, BoolElt
5<->SublatticeLattice(G, Q) <->text334.htm#3255<->SublatticeLattice(G, Q) : GrpMat, [ RngIntElt ] -&gt; LatLat, BoolElt
5<->SublatticeLattice(G, p) <->text334.htm#3256<->SublatticeLattice(G, p) : [ Mtrx ], RngIntElt -> LatLat, BoolElt
5<->SublatticeLattice(G, p) <->text334.htm#3256<->SublatticeLattice(G, p) : GrpMat, RngIntElt -&gt; LatLat, BoolElt
5<->SublatticeLattice(G) <->text334.htm#3257<->SublatticeLattice(G) : GrpMat -&gt; LatLat, BoolElt
4<->GLat_SublatticeLatticeCreate (Example H32E7)<->text334.htm#3258<->GLat_SublatticeLatticeCreate (Example H32E7)
4<->Example-SublatticeLatticeCreate :<->text334.htm#3258<->Example-SublatticeLatticeCreate :: GLat_SublatticeLatticeCreate (Example H32E7)
3<->sublattice-lattice-create :<->text334.htm#3254<->sublattice-lattice-create :: Creating the Lattice of Sublattices (LATTICES WITH GROUP ACTION)
3<->sublattice-lattice-op :<->text334.htm#3259<->sublattice-lattice-op :: Operations on the Lattice of Sublattices (LATTICES WITH GROUP ACTION)
5<-># V <->text334.htm#3260<-># V : LatLat -&gt; RngIntElt
5<->V ! i<->text334.htm#3261<->V ! i: LatLat, RngIntElt -&gt; LatLatElt
5<->V ! M<->text334.htm#3262<->V ! M: LatLat, Mtrx -> LatLatElt
5<->V ! M<->text334.htm#3262<->V ! M: LatLat, Lat -&gt; LatLatElt
5<->NumberOfLevels( V ) <->text334.htm#3263<->NumberOfLevels( V ) : LatLat -&gt; RngIntElt
5<->Level(V, i) <->text334.htm#3264<->Level(V, i) : LatLat, RngIntElt -&gt; [ LatLatElt ]
5<->Levels(v) <->text334.htm#3265<->Levels(v) : LatLat -&gt; [ [LatLatElt] ]
5<->Primes(V) <->text334.htm#3266<->Primes(V) : LatLat -&gt; [ RngIntElt ]
5<->Constituents(V) <->text334.htm#3267<->Constituents(V) : LatLat -&gt; SeqEnum
5<->IntegerRing() ! e <->text334.htm#3268<->IntegerRing() ! e : RngInt, LatLatElt -&gt; RngIntElt
5<->e + f <->text334.htm#3269<->e + f : LatLatElt, LatLatElt -&gt; LatLatElt
5<->e meet f <->text334.htm#3270<->e meet f : LatLatElt, LatLatElt -&gt; LatLatElt
5<->e eq f <->text334.htm#3271<->e eq f : LatLatElt, LatLatElt -&gt; BoolElt
5<->MaximalSublattices(e) <->text334.htm#3272<->MaximalSublattices(e) : LatLatElt -&gt; [ LatLatElt ], [ RngIntElt ]
5<->MinimalSuperlattices(e) <->text334.htm#3273<->MinimalSuperlattices(e) : LatLatElt -&gt; [ LatLatElt ] , [ RngIntElt ]
5<->Lattice(e) <->text334.htm#3274<->Lattice(e) : SubModLatElt -&gt; Lat
5<->Morphism :: BasisMatrix(e) <->text334.htm#3275<->Morphism :: BasisMatrix(e) : SubModLatElt -&gt; Mtrx
5<->BasisMatrix(e) <->text334.htm#3275<->BasisMatrix(e) : SubModLatElt -&gt; Mtrx
4<->GLat_SublatticeLattice (Example H32E8)<->text334.htm#3276<->GLat_SublatticeLattice (Example H32E8)
4<->Example-SublatticeLattice :<->text334.htm#3276<->Example-SublatticeLattice :: GLat_SublatticeLattice (Example H32E8)
4<->GLat_SublatticeLattice2 (Example H32E9)<->text334.htm#3277<->GLat_SublatticeLattice2 (Example H32E9)
4<->Example-SublatticeLattice2 :<->text334.htm#3277<->Example-SublatticeLattice2 :: GLat_SublatticeLattice2 (Example H32E9)
3<->sublattice-lattice-op :<->text334.htm#3259<->sublattice-lattice-op :: Operations on the Lattice of Sublattices (LATTICES WITH GROUP ACTION)
3<->sublattice-lattice :<->text334.htm#3253<->sublattice-lattice :: Lattice of Sublattices (LATTICES WITH GROUP ACTION)
3<->G-lattices :<->text334.htm<->G-lattices :: Lattices from Matrix Groups (LATTICES WITH GROUP ACTION)
3<->glattice :<->text331.htm<->glattice :: LATTICES WITH GROUP ACTION
3<->quadratic-forms :<->text337.htm<->quadratic-forms :: QUADRATIC FORMS
3<->introduction :<->text338.htm<->introduction :: Introduction (QUADRATIC FORMS)
3<->constructions-conversions :<->text339.htm<->constructions-conversions :: Constructions and Conversions (QUADRATIC FORMS)
5<->SymmetricMatrix(f) <->text339.htm#3283<->SymmetricMatrix(f) : RngMPolElt -&gt; Mtrx
5<->GramMatrix(L) <->text339.htm#3284<->GramMatrix(L) : Lat -&gt; Mtrx
5<->QuadraticForm(L) <->text339.htm#3285<->QuadraticForm(L) : Lat -&gt; RngMPolElt
5<->QuadraticForm(M) <->text339.htm#3286<->QuadraticForm(M) : Mtrx -&gt; RngMPolElt
3<->constructions-conversions :<->text339.htm<->constructions-conversions :: Constructions and Conversions (QUADRATIC FORMS)
3<->local-invariants :<->text340.htm<->local-invariants :: Local Invariants (QUADRATIC FORMS)
5<->pSignature(M,p) <->text340.htm#3288<->pSignature(M,p) : Mtrx, RngIntElt -> RngIntElt
5<->pSignature(L,p) <->text340.htm#3288<->pSignature(L,p) : Lat, RngIntElt -> RngIntElt
5<->pSignature(f,p) <->text340.htm#3288<->pSignature(f,p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->Oddity(L) <->text340.htm#3289<->Oddity(L) : Lat -> RngIntElt
5<->Oddity(M) <->text340.htm#3289<->Oddity(M) : Mtrx -> RngIntElt
5<->Oddity(f) <->text340.htm#3289<->Oddity(f) : RngMPolElt -&gt; RngIntElt
5<->pExcess(M, p) <->text340.htm#3290<->pExcess(M, p) : Mtrx, RngIntElt -> RngIntElt
5<->pExcess(L, p) <->text340.htm#3290<->pExcess(L, p) : Lat, RngIntElt -> RngIntElt
5<->pExcess(f, p) <->text340.htm#3290<->pExcess(f, p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->WittInvariant(M, p) <->text340.htm#3291<->WittInvariant(M, p) : Mtrx, RngIntElt -> RngIntElt
5<->WittInvariant(L, p) <->text340.htm#3291<->WittInvariant(L, p) : Lat, RngIntElt -> RngIntElt
5<->HasseMinkowskiInvariant :: WittInvariant(f, p) <->text340.htm#3291<->HasseMinkowskiInvariant :: WittInvariant(f, p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->HasseMinkowskiInvariant(M, p) : Mtrx, RngIntElt -> RngIntElt :: WittInvariant(f, p) <->text340.htm#3291<->HasseMinkowskiInvariant(M, p) : Mtrx, RngIntElt -> RngIntElt :: WittInvariant(f, p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->HasseMinkowskiInvariant(L, p) : Lat, RngIntElt -> RngIntElt :: WittInvariant(f, p) <->text340.htm#3291<->HasseMinkowskiInvariant(L, p) : Lat, RngIntElt -> RngIntElt :: WittInvariant(f, p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->WittInvariant(f, p) <->text340.htm#3291<->WittInvariant(f, p) : RngMPolElt, RngIntElt -&gt; RngIntElt
5<->WittInvariants(M) <->text340.htm#3292<->WittInvariants(M) : Mtrx -> SeqEnum
5<->WittInvariants(L) <->text340.htm#3292<->WittInvariants(L) : Lat -> SeqEnum
5<->HasseMinkowskiInvariants :: WittInvariants(f) <->text340.htm#3292<->HasseMinkowskiInvariants :: WittInvariants(f) : RngMPolElt -&gt; SeqEnum
5<->HasseMinkowskiInvariants(M) : Mtrx -> SeqEnum :: WittInvariants(f) <->text340.htm#3292<->HasseMinkowskiInvariants(M) : Mtrx -> SeqEnum :: WittInvariants(f) : RngMPolElt -&gt; SeqEnum
5<->HasseMinkowskiInvariants(L) : Lat -> SeqEnum :: WittInvariants(f) <->text340.htm#3292<->HasseMinkowskiInvariants(L) : Lat -> SeqEnum :: WittInvariants(f) : RngMPolElt -&gt; SeqEnum
5<->WittInvariants(f) <->text340.htm#3292<->WittInvariants(f) : RngMPolElt -&gt; SeqEnum
3<->local-invariants :<->text340.htm<->local-invariants :: Local Invariants (QUADRATIC FORMS)
3<->isotropic :<->text341.htm<->isotropic :: Isotropic Subspaces (QUADRATIC FORMS)
5<->IsotropicSubspace(M) <->text341.htm#3294<->IsotropicSubspace(M) : Mtrx -> ModTupRng
5<->IsotropicSubspace(f) <->text341.htm#3294<->IsotropicSubspace(f) : RngMPolElt -&gt; ModTupRng
4<->QuadForm_isotropy-and-witt (Example H33E1)<->text341.htm#3295<->QuadForm_isotropy-and-witt (Example H33E1)
4<->Example-isotropy-and-witt :<->text341.htm#3295<->Example-isotropy-and-witt :: QuadForm_isotropy-and-witt (Example H33E1)
4<->QuadForm_second-example-Witt (Example H33E2)<->text341.htm#3296<->QuadForm_second-example-Witt (Example H33E2)
4<->Example-second-example-Witt :<->text341.htm#3296<->Example-second-example-Witt :: QuadForm_second-example-Witt (Example H33E2)
3<->isotropic :<->text341.htm<->isotropic :: Isotropic Subspaces (QUADRATIC FORMS)
3<->quadratic-forms :<->text337.htm<->quadratic-forms :: QUADRATIC FORMS
3<->quadratic :<->text344.htm<->quadratic :: BINARY QUADRATIC FORMS
3<->introduction :<->text345.htm<->introduction :: Introduction (BINARY QUADRATIC FORMS)
3<->creation :<->text346.htm<->creation :: Creation Functions (BINARY QUADRATIC FORMS)
3<->structure :<->text346.htm#3302<->structure :: Creation of Structures (BINARY QUADRATIC FORMS)
5<->BinaryQuadraticForms(D) <->text346.htm#3303<->BinaryQuadraticForms(D) : RngIntElt -&gt; QuadBin
3<->structure :<->text346.htm#3302<->structure :: Creation of Structures (BINARY QUADRATIC FORMS)
3<->creation :<->text346.htm#3304<->creation :: Creation of Forms (BINARY QUADRATIC FORMS)
5<->! :: Identity(Q) <->text346.htm#3305<->! :: Identity(Q) : QuadBin -&gt; QuadBinElt
5<->Identity(Q) <->text346.htm#3305<->Identity(Q) : QuadBin -&gt; QuadBinElt
5<->elt :: Q ! [a, b, c] <->text346.htm#3306<->elt :: Q ! [a, b, c] : QuadBin, RngIntElt, RngIntElt, RngIntElt -&gt; QuadBinElt
5<->elt : QuadBin, RngIntElt, RngIntElt -> QuadBinElt :: Q ! [a, b, c] <->text346.htm#3306<->elt< Q | a, b> : QuadBin, RngIntElt, RngIntElt -> QuadBinElt :: Q ! [a, b, c] : QuadBin, RngIntElt, RngIntElt, RngIntElt -&gt; QuadBinElt
5<->Q ! [a, b, c] <->text346.htm#3306<->Q ! [a, b, c] : QuadBin, RngIntElt, RngIntElt, RngIntElt -&gt; QuadBinElt
5<->PrimeForm(Q, p) <->text346.htm#3307<->PrimeForm(Q, p) : QuadBin, RngIntElt -&gt; QuadBinElt
3<->creation :<->text346.htm#3304<->creation :: Creation of Forms (BINARY QUADRATIC FORMS)
3<->creation :<->text346.htm<->creation :: Creation Functions (BINARY QUADRATIC FORMS)
3<->invariants :<->text347.htm<->invariants :: Basic Invariants (BINARY QUADRATIC FORMS)
5<->Discriminant(f) <->text347.htm#3309<->Discriminant(f) : QuadBinElt -&gt; RngIntElt
5<->Discriminant(Q) <->text347.htm#3310<->Discriminant(Q) : QuadBin -&gt; RngIntElt
5<->IsDiscriminant(D) <->text347.htm#3311<->IsDiscriminant(D) : RngIntElt -&gt; BoolElt
5<->IsFundamentalDiscriminant :: IsFundamental(D) <->text347.htm#3312<->IsFundamentalDiscriminant :: IsFundamental(D) : RngIntElt -&gt; BoolElt
5<->IsFundamental(D) <->text347.htm#3312<->IsFundamental(D) : RngIntElt -&gt; BoolElt
5<->FundamentalDiscriminant(D) <->text347.htm#3313<->FundamentalDiscriminant(D) : RngIntElt -&gt; RngIntElt
5<->Conductor(Q) <->text347.htm#3314<->Conductor(Q) : QuadBin -&gt; RngIntElt
3<->invariants :<->text347.htm<->invariants :: Basic Invariants (BINARY QUADRATIC FORMS)
3<->form-operations :<->text348.htm<->form-operations :: Operations on Forms (BINARY QUADRATIC FORMS)
3<->arithmetic :<->text348.htm#3316<->arithmetic :: Arithmetic (BINARY QUADRATIC FORMS)
5<->Conjugate(f) <->text348.htm#3317<->Conjugate(f) : QuadBinElt -&gt; QuadBinElt
5<->Composition :: f * g <->text348.htm#3318<->Composition :: f * g : QuadBinElt, QuadBinElt -&gt; QuadBinElt
5<->f * g <->text348.htm#3318<->f * g : QuadBinElt, QuadBinElt -&gt; QuadBinElt
5<->Power :: f ^ n <->text348.htm#3319<->Power :: f ^ n : QuadBinElt, RngIntElt -&gt; QuadBinElt
5<->f ^ n <->text348.htm#3319<->f ^ n : QuadBinElt, RngIntElt -&gt; QuadBinElt
3<->arithmetic :<->text348.htm#3316<->arithmetic :: Arithmetic (BINARY QUADRATIC FORMS)
3<->form-action-matrix :<->text348.htm#3320<->form-action-matrix :: Matrix Action (BINARY QUADRATIC FORMS)
5<->f * M <->text348.htm#3321<->f * M : QuadBinElt, GrpMatElt -&gt; QuadBinElt
3<->form-action-matrix :<->text348.htm#3320<->form-action-matrix :: Matrix Action (BINARY QUADRATIC FORMS)
3<->form-action-matrix :<->text348.htm#3322<->form-action-matrix :: Reduction (BINARY QUADRATIC FORMS)
5<->ReducedForm :: Reduction(f) <->text348.htm#3323<->ReducedForm :: Reduction(f) : QuadBinElt -&gt; QuadBinElt, Mtrx
5<->Reduction(f) <->text348.htm#3323<->Reduction(f) : QuadBinElt -&gt; QuadBinElt, Mtrx
5<->ReductionStep(f) <->text348.htm#3324<->ReductionStep(f) : QuadBinElt -&gt; QuadBinElt
5<->ReductionOrbit(f) <->text348.htm#3325<->ReductionOrbit(f) : QuadBinElt -&gt; {@ QuadBinElt @}
5<->Order(f) <->text348.htm#3326<->Order(f) : QuadBinElt -&gt; RngIntElt
3<->form-action-matrix :<->text348.htm#3322<->form-action-matrix :: Reduction (BINARY QUADRATIC FORMS)
3<->attribute :<->text348.htm#3327<->attribute :: Attribute Access (BINARY QUADRATIC FORMS)
5<->f[i] <->text348.htm#3328<->f[i] : QuadBinElt, RngIntElt -&gt; RngIntElt
5<->ElementToSequence :: Eltseq(f) <->text348.htm#3329<->ElementToSequence :: Eltseq(f) : QuadBinElt -&gt; SeqEnum[RngIntElt]
5<->Eltseq(f) <->text348.htm#3329<->Eltseq(f) : QuadBinElt -&gt; SeqEnum[RngIntElt]
3<->attribute :<->text348.htm#3327<->attribute :: Attribute Access (BINARY QUADRATIC FORMS)
3<->boolean-operations :<->text348.htm#3330<->boolean-operations :: Boolean Operations (BINARY QUADRATIC FORMS)
5<->f in Q <->text348.htm#3331<->f in Q : QuadBinElt, QuadBin -&gt; BoolElt
5<->f eq g <->text348.htm#3332<->f eq g : QuadBinElt, QuadBinElt -&gt; BoolElt
5<->IsIdentity(f) <->text348.htm#3333<->IsIdentity(f) : QuadBinElt -&gt; BoolElt
5<->IsReduced(f) <->text348.htm#3334<->IsReduced(f) : QuadBinElt -&gt; BoolElt
5<->IsEquivalent(f, g) <->text348.htm#3335<->IsEquivalent(f, g) : QuadBinElt, QuadBinElt -&gt; BoolElt, AlgMatElt
3<->boolean-operations :<->text348.htm#3330<->boolean-operations :: Boolean Operations (BINARY QUADRATIC FORMS)
3<->maps :<->text348.htm#3336<->maps :: Maps of Forms (BINARY QUADRATIC FORMS)
5<->FundamentalQuotient(Q) <->text348.htm#3337<->FundamentalQuotient(Q) : QuadBin -&gt; Map
5<->QuotientMap(Q1, Q2) <->text348.htm#3338<->QuotientMap(Q1, Q2) : QuadBin, QuadBin -&gt; Map
5<->Q ! f <->text348.htm#3339<->Q ! f : QuadBin, QuadBinElt -&gt; QuadBinElt
3<->maps :<->text348.htm#3336<->maps :: Maps of Forms (BINARY QUADRATIC FORMS)
3<->related :<->text348.htm#3340<->related :: Related Structures (BINARY QUADRATIC FORMS)
5<->QuadraticOrder(Q) <->text348.htm#3341<->QuadraticOrder(Q) : QuadBin -&gt; RngQuad
5<->Ideal(f) <->text348.htm#3342<->Ideal(f) : QuadBinElt -&gt; RngQuadIdl
3<->related :<->text348.htm#3340<->related :: Related Structures (BINARY QUADRATIC FORMS)
3<->form-operations :<->text348.htm<->form-operations :: Operations on Forms (BINARY QUADRATIC FORMS)
3<->reduced-forms :<->text349.htm<->reduced-forms :: Reduced Forms (BINARY QUADRATIC FORMS)
5<->ReducedForms(D) <->text349.htm#3344<->ReducedForms(D) : RngIntElt -> [ QuadBinElt ]
5<->ReducedForms(Q) <->text349.htm#3344<->ReducedForms(Q) : QuadBin -&gt; [ QuadBinElt ]
5<->ReducedOrbits(Q) <->text349.htm#3345<->ReducedOrbits(Q) : QuadBin -&gt; [ {@ QuadBinElt @} ]
3<->reduced-forms :<->text349.htm<->reduced-forms :: Reduced Forms (BINARY QUADRATIC FORMS)
3<->class-group :<->text350.htm<->class-group :: Class Groups (BINARY QUADRATIC FORMS)
5<->ClassNumber(D\col\ \parameters) <->text350.htm#3347<->ClassNumber(D\col\ \parameters) : RngIntElt -> RngIntElt
5<->ClassNumber(Q: parameters) <->text350.htm#3347<->ClassNumber(Q: parameters) : QuadBin -&gt; RngIntElt
5<->ClassGroup(Q: parameters) <->text350.htm#3348<->ClassGroup(Q: parameters) : QuadBin -&gt; GrpAb, Map
5<->ClassGroupStructure(Q: parameters) <->text350.htm#3349<->ClassGroupStructure(Q: parameters) : QuadBin -&gt; [ RngIntElt ]
5<->AmbiguousForms(Q) <->text350.htm#3350<->AmbiguousForms(Q) : QuadBin -&gt; SeqEnum
5<->TwoTorsionSubgroup(Q) <->text350.htm#3351<->TwoTorsionSubgroup(Q) : QuadBin -&gt; GrpAb, Map
4<->QuadBin_Forms (Example H34E1)<->text350.htm#3352<->QuadBin_Forms (Example H34E1)
4<->Example-Forms :<->text350.htm#3352<->Example-Forms :: QuadBin_Forms (Example H34E1)
3<->class-group :<->text350.htm<->class-group :: Class Groups (BINARY QUADRATIC FORMS)
3<->log :<->text351.htm<->log :: Discrete Logarithms (BINARY QUADRATIC FORMS)
5<->Log(b, x)<->text351.htm#3354<->Log(b, x): QuadBinElt, QuadBinElt -&gt; RngIntElt
5<->Log(b, x, t)<->text351.htm#3355<->Log(b, x, t): QuadBinElt, QuadBinElt, RngIntElt -&gt; RngIntElt
3<->log :<->text351.htm<->log :: Discrete Logarithms (BINARY QUADRATIC FORMS)
3<->invar :<->text352.htm<->invar :: Elliptic and Modular Invariants (BINARY QUADRATIC FORMS)
5<->Lattice(f) <->text352.htm#3357<->Lattice(f) : QuadBinElt -&gt; Lat
5<->GramMatrix(f) <->text352.htm#3358<->GramMatrix(f) : QuadBinElt -&gt; AlgMatElt
5<->ThetaSeries(f, n) <->text352.htm#3359<->ThetaSeries(f, n) : QuadBinElt, RngIntElt -&gt; RngSerElt
5<->RepresentationNumber(f, n) <->text352.htm#3360<->RepresentationNumber(f, n) : QuadBinElt, RngIntElt -&gt; RngIntElt
5<->jInvariant(f) <->text352.htm#3361<->jInvariant(f) : QuadBinElt -&gt; RngSerElt
5<->Eisenstein(k, f) <->text352.htm#3362<->Eisenstein(k, f) : RngIntElt, QuadBinElt -&gt; RngSerElt
5<->WeierstrassSeries(z, f) <->text352.htm#3363<->WeierstrassSeries(z, f) : RngSerElt, QuadBinElt -&gt; RngSerElt
4<->QuadBin_ell_mod (Example H34E2)<->text352.htm#3364<->QuadBin_ell_mod (Example H34E2)
4<->Example-ell_mod :<->text352.htm#3364<->Example-ell_mod :: QuadBin_ell_mod (Example H34E2)
3<->invar :<->text352.htm<->invar :: Elliptic and Modular Invariants (BINARY QUADRATIC FORMS)
3<->invar :<->text353.htm<->invar :: Class Invariants (BINARY QUADRATIC FORMS)
3<->quadratic :<->text344.htm<->quadratic :: BINARY QUADRATIC FORMS
3<->algebraic-field :<->text356.htm<->algebraic-field :: NUMBER FIELDS
3<->introduction :<->text357.htm<->introduction :: Introduction (NUMBER FIELDS)
3<->acknowledgement :<->text358.htm<->acknowledgement :: Acknowledgement (NUMBER FIELDS)
3<->creation :<->text359.htm<->creation :: Creation Functions (NUMBER FIELDS)
3<->magma :<->text359.htm#3372<->magma :: Creation of Number Fields (NUMBER FIELDS)
5<->NumberField(f) <->text359.htm#3373<->NumberField(f) : RngUPolElt -&gt; FldNum
5<->QNF :: RationalsAsNumberField() <->text359.htm#3374<->QNF :: RationalsAsNumberField() : -&gt; FldNum
5<->RationalsAsNumberField() <->text359.htm#3374<->RationalsAsNumberField() : -&gt; FldNum
5<->NumberField(s) <->text359.htm#3375<->NumberField(s) : [ RngUPolElt ] -&gt; FldNum
5<->ext <->text359.htm#3376<->ext<F | s> : FldNum, [RngUPolElt] -> FldNum
5<->ext <->text359.htm#3376<->ext< Q | s1, ..., sn > : FldRat, RngUPolElt, ..., RngUPolElt -> FldNum
5<->ext <->text359.htm#3376<->ext< Q | s > : FldRat, [RngUPolElt] -> FldNum
5<->ext< F | s1, ..., sn > <->text359.htm#3376<->ext&lt; F | s1, ..., sn &gt; : FldNum, RngUPolElt, ..., RngUPolElt -&gt; FldNum
4<->FldNum_Creation (Example H35E1)<->text359.htm#3377<->FldNum_Creation (Example H35E1)
4<->Example-Creation :<->text359.htm#3377<->Example-Creation :: FldNum_Creation (Example H35E1)
5<->RadicalExtension(F, d, a) <->text359.htm#3378<->RadicalExtension(F, d, a) : Rng, RngIntElt, RngElt -&gt; FldNum
5<->NormalClosure :: SplittingField(F) <->text359.htm#3379<->NormalClosure :: SplittingField(F) : FldNum -&gt; FldNum, SeqEnum
5<->SplittingField(F) <->text359.htm#3379<->SplittingField(F) : FldNum -&gt; FldNum, SeqEnum
5<->SplittingField(f) <->text359.htm#3380<->SplittingField(f) : RngUPolElt -&gt; FldNum
5<->SplittingField(L) <->text359.htm#3381<->SplittingField(L) : [RngUPolElt] -&gt; FldNum, [FldNumElt]
5<->sub <->text359.htm#3382<->sub< F | S > : FldAlg, SeqEnum -> FldAlg, Map
5<->sub< F | e1, ..., en > <->text359.htm#3382<->sub&lt; F | e<sub>1</sub>, ..., e<sub>n</sub> &gt; : FldAlg, FldAlgElt, ..., FldAlgElt -&gt; FldAlg, Map
5<->CompositeFields :: MergeFields(F, L) <->text359.htm#3383<->CompositeFields :: MergeFields(F, L) : FldNum, FldNum -&gt; SeqEnum
5<->MergeFields(F, L) <->text359.htm#3383<->MergeFields(F, L) : FldNum, FldNum -&gt; SeqEnum
5<->Compositum(K, L) <->text359.htm#3384<->Compositum(K, L) : FldNum, FldNum -&gt; FldNum
5<->quo< FldNum : R | f > <->text359.htm#3385<->quo&lt; FldNum : R | f &gt; : RngUPol, RngUPolElt -&gt; FldNum
4<->FldNum_CompositeFields (Example H35E2)<->text359.htm#3386<->FldNum_CompositeFields (Example H35E2)
4<->Example-CompositeFields :<->text359.htm#3386<->Example-CompositeFields :: FldNum_CompositeFields (Example H35E2)
5<->OptimisedRepresentation :: OptimizedRepresentation(F) <->text359.htm#3387<->OptimisedRepresentation :: OptimizedRepresentation(F) : FldNum -&gt; FldNum, map
5<->OptimizedRepresentation(F) <->text359.htm#3387<->OptimizedRepresentation(F) : FldNum -&gt; FldNum, map
4<->FldNum_opt-rep (Example H35E3)<->text359.htm#3388<->FldNum_opt-rep (Example H35E3)
4<->Example-opt-rep :<->text359.htm#3388<->Example-opt-rep :: FldNum_opt-rep (Example H35E3)
3<->magma :<->text359.htm#3372<->magma :: Creation of Number Fields (NUMBER FIELDS)
3<->maximal_orders :<->text359.htm#3389<->maximal_orders :: Maximal Orders (NUMBER FIELDS)
5<->IntegerRing :: MaximalOrder(F) <->text359.htm#3390<->IntegerRing :: MaximalOrder(F) : FldNum -&gt; RngOrd
5<->Integers :: MaximalOrder(F) <->text359.htm#3390<->Integers :: MaximalOrder(F) : FldNum -&gt; RngOrd
5<->RingOfIntegers :: MaximalOrder(F) <->text359.htm#3390<->RingOfIntegers :: MaximalOrder(F) : FldNum -&gt; RngOrd
5<->MaximalOrder(F) <->text359.htm#3390<->MaximalOrder(F) : FldNum -&gt; RngOrd
3<->maximal_orders :<->text359.htm#3389<->maximal_orders :: Maximal Orders (NUMBER FIELDS)
3<->element :<->text359.htm#3391<->element :: Creation of Elements (NUMBER FIELDS)
5<->elt :: F ! a <->text359.htm#3392<->elt :: F ! a : FldNum, RngElt -&gt; FldNumElt
5<->F ! a <->text359.htm#3392<->F ! a : FldNum, RngElt -&gt; FldNumElt
5<->elt :: F ! [a0, a1, ..., am - 1] <->text359.htm#3393<->elt :: F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldNum, [RngElt] -&gt; FldNumElt
5<->elt : FldNum, RngElt , ..., RngElt -> FldNumElt :: F ! [a0, a1, ..., am - 1] <->text359.htm#3393<->elt< F | a$_0$, a$_1$, ..., a$_{m-1}$> : FldNum, RngElt , ..., RngElt -> FldNumElt :: F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldNum, [RngElt] -&gt; FldNumElt
5<->F ! [a0, a1, ..., am - 1] <->text359.htm#3393<->F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldNum, [RngElt] -&gt; FldNumElt
5<->Random(F, m) <->text359.htm#3394<->Random(F, m) : FldNum, RngIntElt -&gt; FldNumElt
4<->FldNum_Elements (Example H35E4)<->text359.htm#3395<->FldNum_Elements (Example H35E4)
4<->Example-Elements :<->text359.htm#3395<->Example-Elements :: FldNum_Elements (Example H35E4)
3<->element :<->text359.htm#3391<->element :: Creation of Elements (NUMBER FIELDS)
3<->homomorphism :<->text359.htm#3396<->homomorphism :: Creation of Homomorphisms (NUMBER FIELDS)
5<->hom <->text359.htm#3397<->hom< F \ar R | h, r > : FldNum, Rng, Map, RngElt -> Map
5<->hom <->text359.htm#3397<->hom< F \ar R | r > : FldNum, Rng, [RngElt] -> Map
5<->hom <->text359.htm#3397<->hom< F \ar R | h, r > : FldNum, Rng, Map, [RngElt] -> Map
5<->hom< F -> R | r > <->text359.htm#3397<->hom&lt; F -&gt; R | r &gt; : FldNum, Rng, RngElt -&gt; Map
4<->FldNum_Homomorphisms (Example H35E5)<->text359.htm#3398<->FldNum_Homomorphisms (Example H35E5)
4<->Example-Homomorphisms :<->text359.htm#3398<->Example-Homomorphisms :: FldNum_Homomorphisms (Example H35E5)
3<->homomorphism :<->text359.htm#3396<->homomorphism :: Creation of Homomorphisms (NUMBER FIELDS)
3<->creation :<->text359.htm<->creation :: Creation Functions (NUMBER FIELDS)
3<->operation :<->text360.htm<->operation :: Structure Operations (NUMBER FIELDS)
3<->general :<->text360.htm#3400<->general :: General Functions (NUMBER FIELDS)
5<->AssignNames(~K, s) <->text360.htm#3401<->AssignNames(~K, s) : FldNum, [ MonStgElt ] -&gt;
5<->. :: Name(K, i) <->text360.htm#3402<->. :: Name(K, i) : FldNum, RngIntElt -&gt; FldNumElt
5<->Name(K, i) <->text360.htm#3402<->Name(K, i) : FldNum, RngIntElt -&gt; FldNumElt
3<->general :<->text360.htm#3400<->general :: General Functions (NUMBER FIELDS)
3<->related :<->text360.htm#3403<->related :: Related Structures (NUMBER FIELDS)
5<->BaseField :: GroundField(F) <->text360.htm#3404<->BaseField :: GroundField(F) : FldNum -&gt; Fld
5<->CoefficientField :: GroundField(F) <->text360.htm#3404<->CoefficientField :: GroundField(F) : FldNum -&gt; Fld
5<->CoefficientRing :: GroundField(F) <->text360.htm#3404<->CoefficientRing :: GroundField(F) : FldNum -&gt; Fld
5<->GroundField(F) <->text360.htm#3404<->GroundField(F) : FldNum -&gt; Fld
5<->AbsoluteField(F) <->text360.htm#3405<->AbsoluteField(F) : FldNum -&gt; FldNum
5<->SimpleExtension(F) <->text360.htm#3406<->SimpleExtension(F) : FldNum -&gt; FldNum
5<->RelativeField(Q, L) <->text360.htm#3407<->RelativeField(Q, L) : FldRat, FldNum -> FldNum
5<->RelativeField(F, L) <->text360.htm#3407<->RelativeField(F, L) : FldNum, FldNum -&gt; FldNum
5<->Components(F) <->text360.htm#3408<->Components(F) : FldNum -&gt; [FldNum]
4<->FldNum_Compositum (Example H35E6)<->text360.htm#3409<->FldNum_Compositum (Example H35E6)
4<->Example-Compositum :<->text360.htm#3409<->Example-Compositum :: FldNum_Compositum (Example H35E6)
5<->Embed(F, L, a) <->text360.htm#3410<->Embed(F, L, a) : FldNum, FldNum, FldNumElt -&gt;
5<->Embed(F, L, a) <->text360.htm#3411<->Embed(F, L, a) : FldNum, FldNum, [FldNumElt] -&gt;
5<->EmbeddingMap(F, L)<->text360.htm#3412<->EmbeddingMap(F, L): FldNum, FldNum -&gt; Map
4<->FldNum_em (Example H35E7)<->text360.htm#3413<->FldNum_em (Example H35E7)
4<->Example-em :<->text360.htm#3413<->Example-em :: FldNum_em (Example H35E7)
5<->MinkowskiSpace(F) <->text360.htm#3414<->MinkowskiSpace(F) : FldNum -&gt; Lat, Map
5<->comp :: Completion(K, P) <->text360.htm#3415<->comp :: Completion(K, P) : FldNum, RngOrdIdl -&gt; FldLoc, Map
5<->Completion(K, P) <->text360.htm#3415<->Completion(K, P) : FldNum, RngOrdIdl -&gt; FldLoc, Map
5<->Completion(K, P) <->text360.htm#3416<->Completion(K, P) : FldNum, PlcNumElt -&gt; FldLoc, Map
3<->related :<->text360.htm#3403<->related :: Related Structures (NUMBER FIELDS)
3<->vector_spaces :<->text360.htm#3417<->vector_spaces :: Representing Fields as Vector Spaces (NUMBER FIELDS)
5<->Algebra(K, J, S) <->text360.htm#3418<->Algebra(K, J, S) : FldNum, Fld, [FldNumElt] -> AlgAss, Map
5<->Algebra(K, J) <->text360.htm#3418<->Algebra(K, J) : FldNum, Fld -&gt; AlgAss, Map
5<->KSpace :: VectorSpace(K, J) <->text360.htm#3419<->KSpace :: VectorSpace(K, J) : FldNum, Fld -&gt; ModTupFld, Map
5<->VectorSpace(K, J, S) <->text360.htm#3419<->VectorSpace(K, J, S) : FldNum, Fld, [FldNumElt] -> ModTupFld, Map
5<->KSpace(K, J, S) : FldNum, Fld, [FldNumElt] -> ModTupFld, Map :: VectorSpace(K, J) <->text360.htm#3419<->KSpace(K, J, S) : FldNum, Fld, [FldNumElt] -> ModTupFld, Map :: VectorSpace(K, J) : FldNum, Fld -&gt; ModTupFld, Map
5<->VectorSpace(K, J) <->text360.htm#3419<->VectorSpace(K, J) : FldNum, Fld -&gt; ModTupFld, Map
4<->FldNum_vector_space_eg (Example H35E8)<->text360.htm#3420<->FldNum_vector_space_eg (Example H35E8)
4<->Example-vector_space_eg :<->text360.htm#3420<->Example-vector_space_eg :: FldNum_vector_space_eg (Example H35E8)
3<->vector_spaces :<->text360.htm#3417<->vector_spaces :: Representing Fields as Vector Spaces (NUMBER FIELDS)
3<->invariant :<->text360.htm#3421<->invariant :: Invariants (NUMBER FIELDS)
5<->Degree(F) <->text360.htm#3422<->Degree(F) : FldNum -&gt; RngIntElt
5<->AbsoluteDegree(F) <->text360.htm#3423<->AbsoluteDegree(F) : FldNum -&gt; RngIntElt
5<->Discriminant(F) <->text360.htm#3424<->Discriminant(F) : FldNum -> RngOrdIdl
5<->Discriminant(F) <->text360.htm#3424<->Discriminant(F) : FldNum  -&gt; RngIntElt
5<->AbsoluteDiscriminant(K) <->text360.htm#3425<->AbsoluteDiscriminant(K) : FldNum -&gt; FldRatElt
5<->Regulator(K) <->text360.htm#3426<->Regulator(K) : FldNum -&gt; FldComElt
5<->RegulatorLowerBound(K) <->text360.htm#3427<->RegulatorLowerBound(K) : FldNum -&gt; FldComElt
5<->Signature(F) <->text360.htm#3428<->Signature(F) : FldAlg -&gt; RngIntElt, RngIntElt
5<->UnitRank(K) <->text360.htm#3429<->UnitRank(K) : FldNum -&gt; RngIntElt
5<->DefiningPolynomial(F) <->text360.htm#3430<->DefiningPolynomial(F) : FldNum -> [RngUPolElt]
5<->DefiningPolynomial(F) <->text360.htm#3430<->DefiningPolynomial(F) : FldNum -&gt; RngUPolElt
5<->Zeroes(F, n) <->text360.htm#3431<->Zeroes(F, n) : FldNum, RngIntElt -&gt; [ FldComElt ]
4<->FldNum_zero (Example H35E9)<->text360.htm#3432<->FldNum_zero (Example H35E9)
4<->Example-zero :<->text360.htm#3432<->Example-zero :: FldNum_zero (Example H35E9)
3<->invariant :<->text360.htm#3421<->invariant :: Invariants (NUMBER FIELDS)
3<->basis :<->text360.htm#3433<->basis :: Basis Representation (NUMBER FIELDS)
5<->Basis(F, R) <->text360.htm#3434<->Basis(F, R) : FldNum, Rng -> [ RngElt ]
5<->Basis(F) <->text360.htm#3434<->Basis(F) : FldNum -&gt; [ FldNumElt ]
5<->IntegralBasis(F, R) <->text360.htm#3435<->IntegralBasis(F, R) : FldNum, Rng -> [ RngElt ]
5<->IntegralBasis(F) <->text360.htm#3435<->IntegralBasis(F) : FldNum -&gt; [ FldNumElt ]
4<->FldNum_basis-ring (Example H35E10)<->text360.htm#3436<->FldNum_basis-ring (Example H35E10)
4<->Example-basis-ring :<->text360.htm#3436<->Example-basis-ring :: FldNum_basis-ring (Example H35E10)
5<->AbsoluteBasis(K) <->text360.htm#3437<->AbsoluteBasis(K) : FldNum -&gt; [FldNumElt]
4<->FldNum_Bases (Example H35E11)<->text360.htm#3438<->FldNum_Bases (Example H35E11)
4<->Example-Bases :<->text360.htm#3438<->Example-Bases :: FldNum_Bases (Example H35E11)
3<->basis :<->text360.htm#3433<->basis :: Basis Representation (NUMBER FIELDS)
3<->Boolean :<->text360.htm#3439<->Boolean :: Ring Predicates (NUMBER FIELDS)
5<->F eq L <->text360.htm#3440<->F eq L : FldRat, FldNum -> BoolElt
5<->F eq L <->text360.htm#3440<->F eq L : FldNum, FldRat -> BoolElt
5<->F eq L <->text360.htm#3440<->F eq L : FldNum, FldNum -&gt; BoolElt
5<->IsEuclideanDomain(F) <->text360.htm#3441<->IsEuclideanDomain(F) : FldNum -&gt; BoolElt
5<->IsSimple(F) <->text360.htm#3442<->IsSimple(F) : FldNum -&gt; BoolElt
5<->IsPrincipalIdealRing(F) <->text360.htm#3443<->IsPrincipalIdealRing(F) : FldNum -&gt; BoolElt
5<->HasComplexConjugate(K) <->text360.htm#3444<->HasComplexConjugate(K) : FldNum -&gt; BoolElt, Map
5<->ComplexConjugate(x) <->text360.htm#3445<->ComplexConjugate(x) : FldNumElt -&gt; FldNumElt
3<->Boolean :<->text360.htm#3439<->Boolean :: Ring Predicates (NUMBER FIELDS)
3<->Boolean :<->text360.htm#3446<->Boolean :: Field Predicates (NUMBER FIELDS)
5<->IsIsomorphic(F, L) <->text360.htm#3447<->IsIsomorphic(F, L) : FldNum, FldNum -&gt; BoolElt, Map
5<->IsSubfield(F, L) <->text360.htm#3448<->IsSubfield(F, L) : FldRat, FldNum  -> BoolElt, Map
5<->IsSubfield(F, L) <->text360.htm#3448<->IsSubfield(F, L) : FldNum, FldNum  -&gt; BoolElt, Map
5<->IsNormal(F) <->text360.htm#3449<->IsNormal(F) : FldNum -&gt; BoolElt
5<->IsAbelian(F) <->text360.htm#3450<->IsAbelian(F) : FldNum -&gt; BoolElt
5<->IsCyclic(F) <->text360.htm#3451<->IsCyclic(F) : FldNum -&gt; BoolElt
5<->IsAbsoluteField(K) <->text360.htm#3452<->IsAbsoluteField(K) : FldNum -&gt; BoolElt
3<->Boolean :<->text360.htm#3446<->Boolean :: Field Predicates (NUMBER FIELDS)
3<->operation :<->text360.htm<->operation :: Structure Operations (NUMBER FIELDS)
3<->operation-element :<->text361.htm<->operation-element :: Element Operations (NUMBER FIELDS)
3<->parent-category :<->text361.htm#3454<->parent-category :: Parent and Category (NUMBER FIELDS)
3<->field-element :<->text361.htm#3455<->field-element :: Arithmetic (NUMBER FIELDS)
5<->SquareRoot :: Sqrt(a) <->text361.htm#3456<->SquareRoot :: Sqrt(a) : FldNumElt -&gt; FldNumElt
5<->Sqrt(a) <->text361.htm#3456<->Sqrt(a) : FldNumElt -&gt; FldNumElt
5<->Root(a, n) <->text361.htm#3457<->Root(a, n) : FldNumElt, RngIntElt -&gt; FldNumElt
5<->IsSquare :: IsPower(a, k) <->text361.htm#3458<->IsSquare :: IsPower(a, k) : FldNumElt, RngIntElt -&gt; BoolElt, FldNumElt
5<->IsPower(a, k) <->text361.htm#3458<->IsPower(a, k) : FldNumElt, RngIntElt -&gt; BoolElt, FldNumElt
5<->Denominator(a) <->text361.htm#3459<->Denominator(a) : FldNumElt -&gt; RngIntElt
5<->Numerator(a) <->text361.htm#3460<->Numerator(a) : FldNumElt -&gt; RngIntElt
5<->Qround(E, M)<->text361.htm#3461<->Qround(E, M): FldNumElt, RngIntElt -&gt; FldNumElt
3<->field-element :<->text361.htm#3455<->field-element :: Arithmetic (NUMBER FIELDS)
3<->equality-membership :<->text361.htm#3462<->equality-membership :: Equality and Membership (NUMBER FIELDS)
3<->boolean :<->text361.htm#3463<->boolean :: Predicates on Elements (NUMBER FIELDS)
5<->IsIntegral(a) <->text361.htm#3464<->IsIntegral(a) : FldNumElt -&gt; BoolElt, RngIntElt
5<->IsPrimitive(a) <->text361.htm#3465<->IsPrimitive(a) : FldNumElt -&gt; BoolElt
5<->IsTotallyPositive(a) <->text361.htm#3466<->IsTotallyPositive(a) : FldNumElt -&gt; BoolElt
3<->boolean :<->text361.htm#3463<->boolean :: Predicates on Elements (NUMBER FIELDS)
3<->generator-primitive :<->text361.htm#3467<->generator-primitive :: Field Generators (NUMBER FIELDS)
5<->K . 1 <->text361.htm#3468<->K . 1 : FldNum -&gt; FldNumElt
5<->PrimitiveElement(K) <->text361.htm#3469<->PrimitiveElement(K) : FldNum -&gt; FldNumElt
5<->Generators(K)<->text361.htm#3470<->Generators(K): FldNum -&gt; FldNumElt
5<->GeneratorsOverBaseRing(K) <->text361.htm#3471<->GeneratorsOverBaseRing(K) : FldNum -&gt; FldNumElt
5<->GeneratorsSequence(K)<->text361.htm#3472<->GeneratorsSequence(K): FldNum -&gt; [FldNumElt]
5<->GeneratorsSequenceOverBaseRing(K) <->text361.htm#3473<->GeneratorsSequenceOverBaseRing(K) : FldNum -&gt; [FldNumElt]
5<->Generators(K, Q) <->text361.htm#3474<->Generators(K, Q) : FldAlg, FldRat -> [FldAlgElt]
5<->Generators(K, k) <->text361.htm#3474<->Generators(K, k) : FldAlg, FldAlg -&gt; [FldAlgElt]
3<->generator-primitive :<->text361.htm#3467<->generator-primitive :: Field Generators (NUMBER FIELDS)
3<->real-complex :<->text361.htm#3475<->real-complex :: Real and Complex Embeddings (NUMBER FIELDS)
3<->heights :<->text361.htm#3476<->heights :: Heights (NUMBER FIELDS)
3<->norm-trace :<->text361.htm#3477<->norm-trace :: Norm, Trace, and Minimal Polynomial (NUMBER FIELDS)
5<->Norm(a, R) <->text361.htm#3478<->Norm(a, R) : FldNumElt, Rng -> RngElt
5<->Norm(a) <->text361.htm#3478<->Norm(a) : FldNumElt -&gt; FldNumElt
5<->NormAbs :: AbsoluteNorm(a) <->text361.htm#3479<->NormAbs :: AbsoluteNorm(a) : FldNumElt -&gt; FldRatElt
5<->AbsoluteNorm(a) <->text361.htm#3479<->AbsoluteNorm(a) : FldNumElt -&gt; FldRatElt
5<->Trace(a) <->text361.htm#3480<->Trace(a) : FldNumElt -> FldRatElt
5<->Trace(a, R) <->text361.htm#3480<->Trace(a, R) : FldNumElt, Rng -> RngElt
5<->Trace(a) <->text361.htm#3480<->Trace(a) : FldNumElt -&gt; FldNumElt
5<->TraceAbs :: AbsoluteTrace(a) <->text361.htm#3481<->TraceAbs :: AbsoluteTrace(a) : FldNumElt -&gt; FldRatElt
5<->AbsoluteTrace(a) <->text361.htm#3481<->AbsoluteTrace(a) : FldNumElt -&gt; FldRatElt
5<->CharacteristicPolynomial(a, R) <->text361.htm#3482<->CharacteristicPolynomial(a, R) : FldNumElt, Rng -> RngUPolElt
5<->CharacteristicPolynomial(a) <->text361.htm#3482<->CharacteristicPolynomial(a) : FldNumElt -&gt; RngUPolElt
5<->AbsoluteCharacteristicPolynomial(a) <->text361.htm#3483<->AbsoluteCharacteristicPolynomial(a) : FldNumElt -&gt; RngUPolElt
5<->MinimalPolynomial(a, R) <->text361.htm#3484<->MinimalPolynomial(a, R) : FldNumElt, Rng -> RngUPolElt
5<->MinimalPolynomial(a) <->text361.htm#3484<->MinimalPolynomial(a) : FldNumElt -&gt; RngUPolElt
5<->AbsoluteMinimalPolynomial(a) <->text361.htm#3485<->AbsoluteMinimalPolynomial(a) : FldNumElt -&gt; RngUPolElt
5<->RepresentationMatrix(a, R) <->text361.htm#3486<->RepresentationMatrix(a, R) : FldNumElt, Rng -> NumMatElt
5<->RepresentationMatrix(a) <->text361.htm#3486<->RepresentationMatrix(a) : FldNumElt -&gt; NumMatElt
5<->AbsoluteRepresentationMatrix(a) <->text361.htm#3487<->AbsoluteRepresentationMatrix(a) : FldNumElt -&gt; NumMatElt
4<->FldNum_NormsEtc (Example H35E12)<->text361.htm#3488<->FldNum_NormsEtc (Example H35E12)
4<->Example-NormsEtc :<->text361.htm#3488<->Example-NormsEtc :: FldNum_NormsEtc (Example H35E12)
3<->norm-trace :<->text361.htm#3477<->norm-trace :: Norm, Trace, and Minimal Polynomial (NUMBER FIELDS)
3<->other :<->text361.htm#3489<->other :: Other Functions (NUMBER FIELDS)
5<->Eltseq :: ElementToSequence(a) <->text361.htm#3490<->Eltseq :: ElementToSequence(a) : FldNumElt -&gt; [ FldNumElt ]
5<->ElementToSequence(a) <->text361.htm#3490<->ElementToSequence(a) : FldNumElt -&gt; [ FldNumElt ]
5<->Eltseq(E, k) <->text361.htm#3491<->Eltseq(E, k) : FldNumElt, Rng -> [RngElt]
5<->Eltseq(E, k) <->text361.htm#3491<->Eltseq(E, k) : FldNumElt, FldNum -&gt; [RngElt]
5<->Flat(e) <->text361.htm#3492<->Flat(e) : FldNumElt -&gt; [ FldRatElt]
5<->a[i] : FldNumElt, RngIntElt -> FldNumElt :: a[i] <->text361.htm#3493<->a[i] : FldNumElt, RngIntElt -> FldNumElt :: a[i] : FldNumElt, RngIntElt -&gt; FldRatElt
5<->[] :: a[i] <->text361.htm#3493<->[] :: a[i] : FldNumElt, RngIntElt -&gt; FldRatElt
5<->ProductRepresentation(a) <->text361.htm#3494<->ProductRepresentation(a) : FldNumElt -&gt; [ FldNumElt ], [ RngIntElt ]
5<->PowerProduct :: ProductRepresentation(P, E) <->text361.htm#3495<->PowerProduct :: ProductRepresentation(P, E) : [ FldNumElt ], [ RngIntElt ] -&gt; FldNumElt
5<->ProductRepresentation(P, E) <->text361.htm#3495<->ProductRepresentation(P, E) : [ FldNumElt ], [ RngIntElt ] -&gt; FldNumElt
3<->other :<->text361.htm#3489<->other :: Other Functions (NUMBER FIELDS)
3<->operation-element :<->text361.htm<->operation-element :: Element Operations (NUMBER FIELDS)
3<->class-unit-group :<->text362.htm<->class-unit-group :: Class Group and Unit Group (NUMBER FIELDS)
4<->FldNum_ClassGroupUnitGroup (Example H35E13)<->text362.htm#3497<->FldNum_ClassGroupUnitGroup (Example H35E13)
4<->Example-ClassGroupUnitGroup :<->text362.htm#3497<->Example-ClassGroupUnitGroup :: FldNum_ClassGroupUnitGroup (Example H35E13)
3<->class-unit-group :<->text362.htm<->class-unit-group :: Class Group and Unit Group (NUMBER FIELDS)
3<->galois-theory :<->text363.htm<->galois-theory :: Galois Theory (NUMBER FIELDS)
5<->Subfields :: GaloisGroup(K) <->text363.htm#3499<->Subfields :: GaloisGroup(K) : FldNum -&gt; GrpPerm, [RngElt], GaloisData
5<->AutomorphismGroup :: GaloisGroup(K) <->text363.htm#3499<->AutomorphismGroup :: GaloisGroup(K) : FldNum -&gt; GrpPerm, [RngElt], GaloisData
5<->GaloisGroup(K) <->text363.htm#3499<->GaloisGroup(K) : FldNum -&gt; GrpPerm, [RngElt], GaloisData
3<->galois-theory :<->text363.htm<->galois-theory :: Galois Theory (NUMBER FIELDS)
3<->norm-equation :<->text364.htm<->norm-equation :: Solving Norm Equations (NUMBER FIELDS)
4<->FldNum_norm-equation (Example H35E14)<->text364.htm#3501<->FldNum_norm-equation (Example H35E14)
4<->Example-norm-equation :<->text364.htm#3501<->Example-norm-equation :: FldNum_norm-equation (Example H35E14)
3<->norm-equation :<->text364.htm<->norm-equation :: Solving Norm Equations (NUMBER FIELDS)
3<->PlcNumElt :<->text365.htm<->PlcNumElt :: Places and Divisors (NUMBER FIELDS)
3<->DivNumElt :<->text365.htm<->DivNumElt :: Places and Divisors (NUMBER FIELDS)
3<->PlcNum :<->text365.htm<->PlcNum :: Places and Divisors (NUMBER FIELDS)
3<->DivNum :<->text365.htm<->DivNum :: Places and Divisors (NUMBER FIELDS)
3<->divisors :<->text365.htm<->divisors :: Places and Divisors (NUMBER FIELDS)
3<->div-create-s :<->text365.htm#3503<->div-create-s :: Creation of Structures (NUMBER FIELDS)
5<->DivisorGroup :: Places(K) <->text365.htm#3504<->DivisorGroup :: Places(K) : FldNum -&gt; PlcNum
5<->Places(K) <->text365.htm#3504<->Places(K) : FldNum -&gt; PlcNum
3<->div-create-s :<->text365.htm#3503<->div-create-s :: Creation of Structures (NUMBER FIELDS)
3<->div-op-s :<->text365.htm#3505<->div-op-s :: Operations on Structures (NUMBER FIELDS)
5<->NumberField(D) <->text365.htm#3506<->NumberField(D) : DivNum -> FldNum
5<->NumberField(P) <->text365.htm#3506<->NumberField(P) : PlcNum -&gt; FldNum
3<->div-op-s :<->text365.htm#3505<->div-op-s :: Operations on Structures (NUMBER FIELDS)
3<->div-create-e :<->text365.htm#3507<->div-create-e :: Creation of Elements (NUMBER FIELDS)
5<->Place(I) <->text365.htm#3508<->Place(I) : RngOrdIdl -&gt; PlcNumElt
5<->Decomposition(K, I) <->text365.htm#3509<->Decomposition(K, I) : FldNum, Infty -> SeqEnum
5<->Decomposition(K, p) <->text365.htm#3509<->Decomposition(K, p) : FldNum, RngIntElt -&gt; SeqEnum
5<->Decomposition(K, p) <->text365.htm#3510<->Decomposition(K, p) : FldNum, PlcNumElt -&gt; SeqEnum
5<->Decomposition(m, p) <->text365.htm#3511<->Decomposition(m, p) : Map[FldNum, FldNum], PlcNumElt -> SeqEnum[<PlcNumElt, RngIntElt>]
5<->Decomposition(m, p) <->text365.htm#3511<->Decomposition(m, p) : Map[FldRat, FldNum], RngIntElt -&gt; SeqEnum[&lt;PlcNumElt, RngIntElt&gt;]
5<->InfinitePlaces(K) <->text365.htm#3512<->InfinitePlaces(K) : FldRat -> SeqEnum
5<->InfinitePlaces(K) <->text365.htm#3512<->InfinitePlaces(K) : RngInt -> SeqEnum
5<->InfinitePlaces(K) <->text365.htm#3512<->InfinitePlaces(K) : FldNum -&gt; SeqEnum
5<->Divisor(pl) <->text365.htm#3513<->Divisor(pl) : PlcNumElt -&gt; DivNumElt
5<->Divisor(I) <->text365.htm#3514<->Divisor(I) : RngOrdFracIdl -&gt; DivNumElt
5<->Divisor(x) <->text365.htm#3515<->Divisor(x) : FldNumElt -&gt; DivNumElt
5<->RealPlaces(K) <->text365.htm#3516<->RealPlaces(K) : FldNum -> [PlcNumElt]
5<->RealPlaces(K) <->text365.htm#3516<->RealPlaces(K) : FldRat -&gt; [PlcNumElt]
3<->div-create-e :<->text365.htm#3507<->div-create-e :: Creation of Elements (NUMBER FIELDS)
3<->div-arith :<->text365.htm#3517<->div-arith :: Arithmetic with Places and Divisors (NUMBER FIELDS)
3<->div-other :<->text365.htm#3518<->div-other :: Other Functions for Places and Divisors (NUMBER FIELDS)
5<->Valuation(a, p) <->text365.htm#3519<->Valuation(a, p) : RngElt, PlcNumElt -> RngElt
5<->Valuation(a, p) <->text365.htm#3519<->Valuation(a, p) : FldNumElt, PlcNumElt -&gt; RngElt
5<->Valuation(I, p) <->text365.htm#3520<->Valuation(I, p) : RngOrdFracIdl , PlcNumElt -&gt; RngElt
5<->Support(D) <->text365.htm#3521<->Support(D) : DivNumElt -&gt; SeqEnum, SeqEnum
5<->Ideal(D) <->text365.htm#3522<->Ideal(D) : PlcNumElt -> RngOrdIdl
5<->Ideal(D) <->text365.htm#3522<->Ideal(D) : DivNumElt -&gt; RngOrdIdl
5<->Evaluate(x, p) <->text365.htm#3523<->Evaluate(x, p) : FldRatElt, PlcNumElt -> RngElt
5<->Evaluate(x, p) <->text365.htm#3523<->Evaluate(x, p) : RngIntElt, Infty -> RngElt
5<->Evaluate(x, p) <->text365.htm#3523<->Evaluate(x, p) : FldNumElt, PlcNumElt -&gt; RngElt
5<->RealEmbeddings(a) <->text365.htm#3524<->RealEmbeddings(a) : FldNumElt -&gt; []
5<->RealSigns(a) <->text365.htm#3525<->RealSigns(a) : FldNumElt -&gt; []
5<->IsReal(p) <->text365.htm#3526<->IsReal(p) : PlcNumElt -&gt; BoolElt
5<->IsComplex(p) <->text365.htm#3527<->IsComplex(p) : PlcNumElt -&gt; BoolElt
5<->IsFinite(p) <->text365.htm#3528<->IsFinite(p) : PlcNumElt -&gt; BoolElt
5<->IsInfinite(p) <->text365.htm#3529<->IsInfinite(p) : PlcNumElt -&gt; BoolElt, RngIntElt
5<->Extends(P, p) <->text365.htm#3530<->Extends(P, p) : PlcNumElt, PlcNumElt -&gt; BoolElt
5<->InertiaDegree(P) <->text365.htm#3531<->InertiaDegree(P) : PlcNumElt -&gt; RngIntElt
5<->Degree(D) <->text365.htm#3532<->Degree(D) : DivNumElt -&gt; RngElt
5<->NumberField(D) <->text365.htm#3533<->NumberField(D) : DivNumElt -> FldNum
5<->NumberField(P) <->text365.htm#3533<->NumberField(P) : PlcNumElt -&gt; FldNum
5<->ResidueClassField(P) <->text365.htm#3534<->ResidueClassField(P) : PlcNumElt -&gt; Fld
5<->UniformizingElement(P) <->text365.htm#3535<->UniformizingElement(P) : PlcNumElt -&gt; FldNumElt
5<->LocalDegree(P) <->text365.htm#3536<->LocalDegree(P) : PlcNumElt -&gt; RngIntElt
5<->RamificationIndex(P) <->text365.htm#3537<->RamificationIndex(P) : PlcNumElt -&gt; RngIntElt
5<->DecompositionGroup(P) <->text365.htm#3538<->DecompositionGroup(P) : PlcNumElt -&gt; GrpPerm
3<->div-other :<->text365.htm#3518<->div-other :: Other Functions for Places and Divisors (NUMBER FIELDS)
3<->divisors :<->text365.htm<->divisors :: Places and Divisors (NUMBER FIELDS)
3<->database :<->text366.htm<->database :: Number Field Database (NUMBER FIELDS)
3<->database-creation :<->text366.htm#3540<->database-creation :: Creation (NUMBER FIELDS)
5<->NumberFieldDatabase(d) <->text366.htm#3541<->NumberFieldDatabase(d) : RngIntElt -&gt; DB
5<->sub <->text366.htm#3542<->sub< D | dabs \col\ \parameters> : DB, RngIntElt -> DB
5<->sub <->text366.htm#3542<->sub< D | \col\ \parameters> : DB-> DB
5<->sub< D | dmin, dmax : parameters> <->text366.htm#3542<->sub&lt; D | dmin, dmax : parameters&gt; : DB, RngIntElt, RngIntElt -&gt; DB
3<->database-creation :<->text366.htm#3540<->database-creation :: Creation (NUMBER FIELDS)
3<->database-access :<->text366.htm#3543<->database-access :: Access (NUMBER FIELDS)
5<->Degree(D) <->text366.htm#3544<->Degree(D) : DB -&gt; RngIntElt
5<->DiscriminantRange(D) <->text366.htm#3545<->DiscriminantRange(D) : DB -&gt; RngIntElt, RngIntElt
5<->NumberOfFields :: # D <->text366.htm#3546<->NumberOfFields :: # D : DB -&gt; RngIntElt
5<-># D <->text366.htm#3546<-># D : DB -&gt; RngIntElt
5<->NumberOfFields(D, d) <->text366.htm#3547<->NumberOfFields(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->NumberFields(D) <->text366.htm#3548<->NumberFields(D) : DB -&gt; [ FldNum ]
5<->NumberFields(D, d) <->text366.htm#3549<->NumberFields(D, d) : DB, RngIntElt -&gt; [ FldNum ]
4<->FldNum_anfdb-basic1 (Example H35E15)<->text366.htm#3550<->FldNum_anfdb-basic1 (Example H35E15)
4<->Example-anfdb-basic1 :<->text366.htm#3550<->Example-anfdb-basic1 :: FldNum_anfdb-basic1 (Example H35E15)
4<->FldNum_anfdb-basic2 (Example H35E16)<->text366.htm#3551<->FldNum_anfdb-basic2 (Example H35E16)
4<->Example-anfdb-basic2 :<->text366.htm#3551<->Example-anfdb-basic2 :: FldNum_anfdb-basic2 (Example H35E16)
3<->database-access :<->text366.htm#3543<->database-access :: Access (NUMBER FIELDS)
3<->database :<->text366.htm<->database :: Number Field Database (NUMBER FIELDS)
3<->algebraic-field :<->text356.htm<->algebraic-field :: NUMBER FIELDS
3<->quadratic :<->text369.htm<->quadratic :: QUADRATIC FIELDS
3<->introduction :<->text370.htm<->introduction :: Introduction (QUADRATIC FIELDS)
3<->representation :<->text370.htm#3556<->representation :: Representation (QUADRATIC FIELDS)
3<->introduction :<->text370.htm<->introduction :: Introduction (QUADRATIC FIELDS)
3<->creation :<->text371.htm<->creation :: Creation of Structures (QUADRATIC FIELDS)
5<->QuadraticField(m) <->text371.htm#3558<->QuadraticField(m) : RngIntElt -&gt; FldQuad
5<->EquationOrder(F) <->text371.htm#3559<->EquationOrder(F) : FldQuad -&gt; RngQuad
5<->IntegerRing :: MaximalOrder(F) <->text371.htm#3560<->IntegerRing :: MaximalOrder(F) : FldQuad -&gt; RngQuad
5<->RingOfIntegers :: MaximalOrder(F) <->text371.htm#3560<->RingOfIntegers :: MaximalOrder(F) : FldQuad -&gt; RngQuad
5<->MaximalOrder(F) <->text371.htm#3560<->MaximalOrder(F) : FldQuad -&gt; RngQuad
5<->NumberField(O) <->text371.htm#3561<->NumberField(O) : RngQuad -&gt; FldQuad
5<->sub< O | f > <->text371.htm#3562<->sub&lt; O | f &gt; : RngQuad, RngIntElt -&gt;
5<->IsQuadratic(O) <->text371.htm#3563<->IsQuadratic(O) : RngOrd -> BoolElt, RngQuad
5<->IsQuadratic(K) <->text371.htm#3563<->IsQuadratic(K) : FldNum -&gt; BoolElt, FldQuad
4<->FldQuad_creation (Example H36E1)<->text371.htm#3564<->FldQuad_creation (Example H36E1)
4<->Example-creation :<->text371.htm#3564<->Example-creation :: FldQuad_creation (Example H36E1)
4<->FldQuad_hom (Example H36E2)<->text371.htm#3565<->FldQuad_hom (Example H36E2)
4<->Example-hom :<->text371.htm#3565<->Example-hom :: FldQuad_hom (Example H36E2)
3<->creation :<->text371.htm<->creation :: Creation of Structures (QUADRATIC FIELDS)
3<->structure_ops :<->text372.htm<->structure_ops :: Operations on Structures (QUADRATIC FIELDS)
5<->AssignNames(\til O, [s]) <->text372.htm#3567<->AssignNames(\til O, [s]) : RngQuad, [ MonStgElt ]) ->
5<->AssignNames(~F, [s]) <->text372.htm#3567<->AssignNames(~F, [s]) : FldQuad, [ MonStgElt ]) -&gt;
5<->Name(O, 1) <->text372.htm#3568<->Name(O, 1) : RngQuad, RngIntElt -> RngQuadElt
5<->Name(F, 1) <->text372.htm#3568<->Name(F, 1) : FldQuad, RngIntElt -&gt; FldQuadElt
5<->FundamentalUnit(O) <->text372.htm#3569<->FundamentalUnit(O) : RngQuad -> RngQuadElt
5<->FundamentalUnit(K) <->text372.htm#3569<->FundamentalUnit(K) : FldQuad -&gt; FldQuadElt
5<->Discriminant(K) <->text372.htm#3570<->Discriminant(K) : FldQuad -&gt; RngIntElt
5<->Conductor(K) <->text372.htm#3571<->Conductor(K) : FldQuad -&gt; RngIntElt, [RngIntElt]
5<->Conductor(O) <->text372.htm#3572<->Conductor(O) : RngQuad -&gt; RngIntElt
3<->Class group :<->text372.htm#3573<->Class group :: Ideal Class Group (QUADRATIC FIELDS)
3<->class-group :<->text372.htm#3573<->class-group :: Ideal Class Group (QUADRATIC FIELDS)
5<->ClassGroup(O) <->text372.htm#3574<->ClassGroup(O) : RngQuad -> GrpAb, Map
5<->ClassGroup(K) <->text372.htm#3574<->ClassGroup(K) : FldQuad -&gt; GrpAb, Map
5<->ClassNumber(O) <->text372.htm#3575<->ClassNumber(O) : RngQuad -> RngIntElt
5<->ClassNumber(K) <->text372.htm#3575<->ClassNumber(K) : FldQuad -&gt; RngIntElt
5<->PicardNumber :: PicardGroup(O) <->text372.htm#3576<->PicardNumber :: PicardGroup(O) : RngQuad -&gt; GrpAb, Map
5<->PicardGroup(O) <->text372.htm#3576<->PicardGroup(O) : RngQuad -&gt; GrpAb, Map
4<->FldQuad_quad_sieve (Example H36E3)<->text372.htm#3577<->FldQuad_quad_sieve (Example H36E3)
4<->Example-quad_sieve :<->text372.htm#3577<->Example-quad_sieve :: FldQuad_quad_sieve (Example H36E3)
5<->QuadraticClassGroupTwoPart(O) <->text372.htm#3578<->QuadraticClassGroupTwoPart(O) : RngQuad -> GrpAb, Map
5<->QuadraticClassGroupTwoPart(d) <->text372.htm#3578<->QuadraticClassGroupTwoPart(d) : RngIntElt -> GrpAb, Map
5<->QuadraticClassGroupTwoPart(K) <->text372.htm#3578<->QuadraticClassGroupTwoPart(K) : FldQuad -&gt; GrpAb, Map
4<->FldQuad_qcgtp (Example H36E4)<->text372.htm#3579<->FldQuad_qcgtp (Example H36E4)
4<->Example-qcgtp :<->text372.htm#3579<->Example-qcgtp :: FldQuad_qcgtp (Example H36E4)
3<->class-group :<->text372.htm#3573<->class-group :: Ideal Class Group (QUADRATIC FIELDS)
3<->norm_equation :<->text372.htm#3580<->norm_equation :: Norm Equations (QUADRATIC FIELDS)
5<->NormEquation(F, m\col\ \parameters) <->text372.htm#3581<->NormEquation(F, m\col\ \parameters) : FldQuad, RngIntElt -> BoolElt, SeqEnum
5<->NormEquation(O, m) <->text372.htm#3581<->NormEquation(O, m) : RngQuad, RngIntElt -> BoolElt, SeqEnum
5<->NormEquation(O, m\col\ \parameters) <->text372.htm#3581<->NormEquation(O, m\col\ \parameters) : RngQuad, RngIntElt -> BoolElt, SeqEnum
5<->NormEquation(F, m) <->text372.htm#3581<->NormEquation(F, m) : FldQuad, RngIntElt -&gt; BoolElt, SeqEnum
4<->FldQuad_norm-equation (Example H36E5)<->text372.htm#3582<->FldQuad_norm-equation (Example H36E5)
4<->Example-norm-equation :<->text372.htm#3582<->Example-norm-equation :: FldQuad_norm-equation (Example H36E5)
3<->norm_equation :<->text372.htm#3580<->norm_equation :: Norm Equations (QUADRATIC FIELDS)
3<->structure_ops :<->text372.htm<->structure_ops :: Operations on Structures (QUADRATIC FIELDS)
3<->elements :<->text373.htm<->elements :: Special Element Operations (QUADRATIC FIELDS)
3<->quad-euclidean-algorithm :<->text373.htm#3584<->quad-euclidean-algorithm :: Division Algorithm (QUADRATIC FIELDS)
5<->a div b <->text373.htm#3585<->a div b : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->a mod b <->text373.htm#3586<->a mod b : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->Gcd :: GreatestCommonDivisor(a, b) <->text373.htm#3587<->Gcd :: GreatestCommonDivisor(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->GCD :: GreatestCommonDivisor(a, b) <->text373.htm#3587<->GCD :: GreatestCommonDivisor(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->GreatestCommonDivisor(a, b) <->text373.htm#3587<->GreatestCommonDivisor(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->Lcm :: LeastCommonMultiple(a, b) <->text373.htm#3588<->Lcm :: LeastCommonMultiple(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->LCM :: LeastCommonMultiple(a, b) <->text373.htm#3588<->LCM :: LeastCommonMultiple(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->LeastCommonMultiple(a, b) <->text373.htm#3588<->LeastCommonMultiple(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->Modexp(a, e, n) <->text373.htm#3589<->Modexp(a, e, n) : RngQuadElt, RngInt, RngQuadElt -&gt; RngQuadElt
3<->quad-euclidean-algorithm :<->text373.htm#3584<->quad-euclidean-algorithm :: Division Algorithm (QUADRATIC FIELDS)
3<->factorization :<->text373.htm#3590<->factorization :: Factorization (QUADRATIC FIELDS)
5<->Factorisation :: Factorization(n) <->text373.htm#3591<->Factorisation :: Factorization(n) : RngQuadElt -&gt; SeqEnum, Tup
5<->Factorization(n) <->text373.htm#3591<->Factorization(n) : RngQuadElt -&gt; SeqEnum, Tup
5<->TrialDivision(n, B) <->text373.htm#3592<->TrialDivision(n, B) : RngQuadElt, RngIntElt -&gt; SeqEnum, SeqEnum, Tup
3<->factorization :<->text373.htm#3590<->factorization :: Factorization (QUADRATIC FIELDS)
3<->conjugates :<->text373.htm#3593<->conjugates :: Conjugates (QUADRATIC FIELDS)
5<->ComplexConjugate(a) <->text373.htm#3594<->ComplexConjugate(a) : RngQuadElt -> RngQuadElt
5<->ComplexConjugate(a) <->text373.htm#3594<->ComplexConjugate(a) : FldQuadElt -&gt; FldQuadElt
5<->Conjugate(a) <->text373.htm#3595<->Conjugate(a) : RngQuadElt -> RngQuadElt
5<->Conjugate(a) <->text373.htm#3595<->Conjugate(a) : FldQuadElt -&gt; FldQuadElt
3<->conjugates :<->text373.htm#3593<->conjugates :: Conjugates (QUADRATIC FIELDS)
3<->other :<->text373.htm#3596<->other :: Other Element Functions (QUADRATIC FIELDS)
5<->BiquadraticResidueSymbol(a, b) <->text373.htm#3597<->BiquadraticResidueSymbol(a, b) : RngQuadElt, RngQuadElt -&gt; RngQuadElt
5<->Primary(a) <->text373.htm#3598<->Primary(a) : RngQuadElt -&gt; RngQuadElt
4<->FldQuad_Represent (Example H36E6)<->text373.htm#3599<->FldQuad_Represent (Example H36E6)
4<->Example-Represent :<->text373.htm#3599<->Example-Represent :: FldQuad_Represent (Example H36E6)
3<->other :<->text373.htm#3596<->other :: Other Element Functions (QUADRATIC FIELDS)
3<->elements :<->text373.htm<->elements :: Special Element Operations (QUADRATIC FIELDS)
3<->special-ideals :<->text374.htm<->special-ideals :: Special Functions for Ideals (QUADRATIC FIELDS)
5<->Content(I) <->text374.htm#3601<->Content(I) : RngQuadFracIdl -&gt; RngQuadFracIdl
5<->Conjugate(I) <->text374.htm#3602<->Conjugate(I) : RngQuadFracIdl -&gt; RngQuadFracIdl
5<->Discriminant(I) <->text374.htm#3603<->Discriminant(I) : RngQuadFracIdl -&gt; RngIntElt
5<->QuadraticForm(I) <->text374.htm#3604<->QuadraticForm(I) : RngQuadFracIdl -&gt; QuadBinElt
5<->Ideal(f) <->text374.htm#3605<->Ideal(f) : QuadBinElt -&gt; RngQuadIdl
5<->Reduction(I) <->text374.htm#3606<->Reduction(I) : RngQuadFracIdl -&gt; RngQuadFracIdl
3<->special-ideals :<->text374.htm<->special-ideals :: Special Functions for Ideals (QUADRATIC FIELDS)
3<->quadratic :<->text369.htm<->quadratic :: QUADRATIC FIELDS
3<->cyclotomic :<->text376.htm<->cyclotomic :: CYCLOTOMIC FIELDS
3<->RngCyc :<->text377.htm<->RngCyc :: Introduction (CYCLOTOMIC FIELDS)
3<->FldCyc :<->text377.htm<->FldCyc :: Introduction (CYCLOTOMIC FIELDS)
3<->introduction :<->text377.htm<->introduction :: Introduction (CYCLOTOMIC FIELDS)
3<->FldCycElt :<->text378.htm<->FldCycElt :: Creation Functions (CYCLOTOMIC FIELDS)
3<->RngCycElt :<->text378.htm<->RngCycElt :: Creation Functions (CYCLOTOMIC FIELDS)
3<->creation :<->text378.htm<->creation :: Creation Functions (CYCLOTOMIC FIELDS)
3<->creation :<->text378.htm#3611<->creation :: Creation of Cyclotomic Fields (CYCLOTOMIC FIELDS)
5<->CyclotomicField(m) <->text378.htm#3612<->CyclotomicField(m) : RngIntElt -&gt; FldCyc
5<->CyclotomicPolynomial(m) <->text378.htm#3613<->CyclotomicPolynomial(m) : RngIntElt -&gt; RngUPolElt
5<->MinimalField(a) <->text378.htm#3614<->MinimalField(a) : FldCycElt -> FldCyc
5<->MinimalField(a) <->text378.htm#3614<->MinimalField(a) : RngCycElt -> RngCyc
5<->MinimalCyclotomicField :: MinimalField(a) <->text378.htm#3614<->MinimalCyclotomicField :: MinimalField(a) : FldRatElt -&gt; FldRat
5<->MinimalCyclotomicField(a) : FldCycElt -> FldCyc :: MinimalField(a) <->text378.htm#3614<->MinimalCyclotomicField(a) : FldCycElt -> FldCyc :: MinimalField(a) : FldRatElt -&gt; FldRat
5<->MinimalCyclotomicField(a) : RngCycElt -> RngCyc :: MinimalField(a) <->text378.htm#3614<->MinimalCyclotomicField(a) : RngCycElt -> RngCyc :: MinimalField(a) : FldRatElt -&gt; FldRat
5<->MinimalField(a) <->text378.htm#3614<->MinimalField(a) : FldRatElt -&gt; FldRat
5<->MinimalField(S) <->text378.htm#3615<->MinimalField(S) : \lbrace FldCycElt \rbrace -> FldCyc
5<->MinimalField(S) <->text378.htm#3615<->MinimalField(S) : [ RngCycElt ] -> RngCyc
5<->MinimalField(S) <->text378.htm#3615<->MinimalField(S) : \lbrace RngCycElt \rbrace -> RngCyc
5<->MinimalCyclotomicField :: MinimalField(S) <->text378.htm#3615<->MinimalCyclotomicField :: MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
5<->MinimalCyclotomicField(S) : Setq -> FldCyc :: MinimalField(S) <->text378.htm#3615<->MinimalCyclotomicField(S) : Setq -> FldCyc :: MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
5<->MinimalCyclotomicField(S) : \lbrace FldCycElt \rbrace -> FldCyc :: MinimalField(S) <->text378.htm#3615<->MinimalCyclotomicField(S) : \lbrace FldCycElt \rbrace -> FldCyc :: MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
5<->MinimalCyclotomicField(S) : [ RngCycElt ] -> RngCyc :: MinimalField(S) <->text378.htm#3615<->MinimalCyclotomicField(S) : [ RngCycElt ] -> RngCyc :: MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
5<->MinimalCyclotomicField(S) : \lbrace RngCycElt \rbrace -> RngCyc :: MinimalField(S) <->text378.htm#3615<->MinimalCyclotomicField(S) : \lbrace RngCycElt \rbrace -> RngCyc :: MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
5<->MinimalField(S) <->text378.htm#3615<->MinimalField(S) : [ FldCycElt ] -&gt; FldCyc
4<->FldCyc_creation (Example H37E1)<->text378.htm#3616<->FldCyc_creation (Example H37E1)
4<->Example-creation :<->text378.htm#3616<->Example-creation :: FldCyc_creation (Example H37E1)
3<->creation :<->text378.htm#3611<->creation :: Creation of Cyclotomic Fields (CYCLOTOMIC FIELDS)
3<->element :<->text378.htm#3617<->element :: Creation of Elements (CYCLOTOMIC FIELDS)
5<->RootOfUnity(n) <->text378.htm#3618<->RootOfUnity(n) : RngIntElt -&gt; FldCycElt
5<->RootOfUnity(n, K) <->text378.htm#3619<->RootOfUnity(n, K) : RngIntElt, FldCyc -&gt; FldCycElt
5<->Minimize :: Minimise(~a) <->text378.htm#3620<->Minimize :: Minimise(~a) : FldCycElt -&gt;
5<->Minimise($\sim$a) <->text378.htm#3620<->Minimise($\sim$a) : RngCycElt ->
5<->Minimize($\sim$a) : RngCycElt -> :: Minimise(~a) <->text378.htm#3620<->Minimize($\sim$a) : RngCycElt -> :: Minimise(~a) : FldCycElt -&gt;
5<->Minimise(~a) <->text378.htm#3620<->Minimise(~a) : FldCycElt -&gt;
5<->Minimize :: Minimise(~s) <->text378.htm#3621<->Minimize :: Minimise(~s) : [ FldCycElt ] -&gt;
5<->Minimise($\sim$s) <->text378.htm#3621<->Minimise($\sim$s) : [ RngCycElt ] ->
5<->Minimize($\sim$s) : [ RngCycElt ] -> :: Minimise(~s) <->text378.htm#3621<->Minimize($\sim$s) : [ RngCycElt ] -> :: Minimise(~s) : [ FldCycElt ] -&gt;
5<->Minimise(~s) <->text378.htm#3621<->Minimise(~s) : [ FldCycElt ] -&gt;
5<->Minimize :: Minimise(a) <->text378.htm#3622<->Minimize :: Minimise(a) : FldCycElt -&gt; RngElt
5<->Minimise(a) <->text378.htm#3622<->Minimise(a) : RngCycElt -> RngElt
5<->Minimize(a) : RngCycElt -> RngElt :: Minimise(a) <->text378.htm#3622<->Minimize(a) : RngCycElt -> RngElt :: Minimise(a) : FldCycElt -&gt; RngElt
5<->Minimise(a) <->text378.htm#3622<->Minimise(a) : FldCycElt -&gt; RngElt
5<->Minimize :: Minimise(s) <->text378.htm#3623<->Minimize :: Minimise(s) : { FldCycElt } -&gt; { RngElt }
5<->Minimise(s) <->text378.htm#3623<->Minimise(s) : \brace RngCycElt \rbrace -> \brace RngElt \rbrace
5<->Minimize(s) : \brace RngCycElt \rbrace -> \brace RngElt \rbrace :: Minimise(s) <->text378.htm#3623<->Minimize(s) : \brace RngCycElt \rbrace -> \brace RngElt \rbrace :: Minimise(s) : { FldCycElt } -&gt; { RngElt }
5<->Minimise(s) <->text378.htm#3623<->Minimise(s) : { FldCycElt } -&gt; { RngElt }
3<->element :<->text378.htm#3617<->element :: Creation of Elements (CYCLOTOMIC FIELDS)
3<->creation :<->text378.htm<->creation :: Creation Functions (CYCLOTOMIC FIELDS)
3<->structure :<->text379.htm<->structure :: Structure Operations (CYCLOTOMIC FIELDS)
3<->invariant :<->text379.htm#3625<->invariant :: Invariants (CYCLOTOMIC FIELDS)
5<->Conductor(K) <->text379.htm#3626<->Conductor(K) : FldCyc -&gt; RngIntElt, [RngIntElt]
5<->CyclotomicOrder(K) <->text379.htm#3627<->CyclotomicOrder(K) : FldRat -> RngIntElt
5<->CyclotomicOrder(K) <->text379.htm#3627<->CyclotomicOrder(K) : FldCyc -&gt; RngIntElt
5<->CyclotomicAutomorphismGroup(K) <->text379.htm#3628<->CyclotomicAutomorphismGroup(K) : FldCyc -&gt; GrpAb, Map
5<->CyclotomicRelativeField(k, K) <->text379.htm#3629<->CyclotomicRelativeField(k, K) : FldCyc, FldCyc -&gt; FldNum
3<->invariant :<->text379.htm#3625<->invariant :: Invariants (CYCLOTOMIC FIELDS)
3<->structure :<->text379.htm<->structure :: Structure Operations (CYCLOTOMIC FIELDS)
3<->element :<->text380.htm<->element :: Element Operations (CYCLOTOMIC FIELDS)
3<->predicates :<->text380.htm#3631<->predicates :: Predicates on Elements (CYCLOTOMIC FIELDS)
5<->IsReal(a) <->text380.htm#3632<->IsReal(a) : RngCycElt -> BoolElt
5<->IsReal(a) <->text380.htm#3632<->IsReal(a) : FldCycElt -&gt; BoolElt
3<->predicates :<->text380.htm#3631<->predicates :: Predicates on Elements (CYCLOTOMIC FIELDS)
3<->conjugates :<->text380.htm#3633<->conjugates :: Conjugates (CYCLOTOMIC FIELDS)
5<->ComplexConjugate(a) <->text380.htm#3634<->ComplexConjugate(a) : RngCycElt -> RngCycElt
5<->ComplexConjugate(a) <->text380.htm#3634<->ComplexConjugate(a) : FldCycElt -&gt; FldCycElt
5<->Conjugate(a, n) <->text380.htm#3635<->Conjugate(a, n) : RngCycElt, RngIntElt -> RngCycElt
5<->Conjugate(a, n) <->text380.htm#3635<->Conjugate(a, n) : FldCycElt, RngIntElt -&gt; FldCycElt
5<->Conjugate(a, r) <->text380.htm#3636<->Conjugate(a, r) : RngCycElt, RngCycElt -> RngCycElt
5<->Conjugate(a, r) <->text380.htm#3636<->Conjugate(a, r) : FldCycElt, FldCycElt -&gt; FldCycElt
4<->FldCyc_GaussianPeriods (Example H37E2)<->text380.htm#3637<->FldCyc_GaussianPeriods (Example H37E2)
4<->Example-GaussianPeriods :<->text380.htm#3637<->Example-GaussianPeriods :: FldCyc_GaussianPeriods (Example H37E2)
3<->conjugates :<->text380.htm#3633<->conjugates :: Conjugates (CYCLOTOMIC FIELDS)
3<->element :<->text380.htm<->element :: Element Operations (CYCLOTOMIC FIELDS)
3<->cyclotomic :<->text376.htm<->cyclotomic :: CYCLOTOMIC FIELDS
3<->algebraic-field :<->text383.htm<->algebraic-field :: NUMBER FIELDS AND ORDERS
3<->introduction :<->text384.htm<->introduction :: Introduction (NUMBER FIELDS AND ORDERS)
3<->types :<->text384.htm#3642<->types :: Types (NUMBER FIELDS AND ORDERS)
3<->introduction :<->text384.htm<->introduction :: Introduction (NUMBER FIELDS AND ORDERS)
3<->acknowledgement :<->text385.htm<->acknowledgement :: Acknowledgement (NUMBER FIELDS AND ORDERS)
3<->creation :<->text386.htm<->creation :: Creation Functions (NUMBER FIELDS AND ORDERS)
3<->magma :<->text386.htm#3645<->magma :: Creation of Algebraic Fields (NUMBER FIELDS AND ORDERS)
5<->NumberField(f) <->text386.htm#3646<->NumberField(f) : RngUPolElt -&gt; FldNum
5<->QNF :: RationalsAsNumberField() <->text386.htm#3647<->QNF :: RationalsAsNumberField() : -&gt; FldNum
5<->RationalsAsNumberField() <->text386.htm#3647<->RationalsAsNumberField() : -&gt; FldNum
5<->NumberField(s) <->text386.htm#3648<->NumberField(s) : [ RngUPolElt ] -&gt; FldNum
5<->ext <->text386.htm#3649<->ext<F | s> : FldAlg, [RngUPolElt] -> FldAlg
5<->ext <->text386.htm#3649<->ext< Q | s1, ..., sn > : FldRat, RngUPolElt, ..., RngUPolElt -> FldNum
5<->ext <->text386.htm#3649<->ext< Q | s > : FldRat, [RngUPolElt] -> FldNum
5<->ext< F | s1, ..., sn > <->text386.htm#3649<->ext&lt; F | s1, ..., sn &gt; : FldAlg, RngUPolElt, ..., RngUPolElt -&gt; FldAlg
5<->RadicalExtension(F, d, a) <->text386.htm#3650<->RadicalExtension(F, d, a) : Rng, RngIntElt, RngElt -&gt; FldAlg
5<->NormalClosure :: SplittingField(F) <->text386.htm#3651<->NormalClosure :: SplittingField(F) : FldAlg -&gt; FldAlg, SeqEnum
5<->SplittingField(F) <->text386.htm#3651<->SplittingField(F) : FldAlg -&gt; FldAlg, SeqEnum
5<->SplittingField(f) <->text386.htm#3652<->SplittingField(f) : RngUPolElt -&gt; FldAlg
5<->SplittingField(L) <->text386.htm#3653<->SplittingField(L) : [RngUPolElt] -&gt; FldNum, [FldNumElt]
5<->sub <->text386.htm#3654<->sub< F | S > : FldAlg, SeqEnum -> FldAlg, Map
5<->sub< F | e1, ..., en > <->text386.htm#3654<->sub&lt; F | e<sub>1</sub>, ..., e<sub>n</sub> &gt; : FldAlg, FldAlgElt, ..., FldAlgElt -&gt; FldAlg, Map
5<->CompositeFields :: MergeFields(F, L) <->text386.htm#3655<->CompositeFields :: MergeFields(F, L) : FldAlg, FldAlg -&gt; SeqEnum
5<->MergeFields(F, L) <->text386.htm#3655<->MergeFields(F, L) : FldAlg, FldAlg -&gt; SeqEnum
5<->Compositum(K, L) <->text386.htm#3656<->Compositum(K, L) : FldAlg, FldAlg -&gt; FldAlg
5<->Compositum(K, A) <->text386.htm#3657<->Compositum(K, A) : FldAlg, FldAb -&gt; FldAlg
5<->OptimisedRepresentation :: OptimizedRepresentation(F) <->text386.htm#3658<->OptimisedRepresentation :: OptimizedRepresentation(F) : FldAlg -&gt; FldAlg, map
5<->OptimizedRepresentation(F, d) <->text386.htm#3658<->OptimizedRepresentation(F, d) : FldAlg, RngIntElt -> FldAlg, map
5<->OptimisedRepresentation(F, d) : FldAlg, RngIntElt -> FldAlg, map :: OptimizedRepresentation(F) <->text386.htm#3658<->OptimisedRepresentation(F, d) : FldAlg, RngIntElt -> FldAlg, map :: OptimizedRepresentation(F) : FldAlg -&gt; FldAlg, map
5<->OptimizedRepresentation(F) <->text386.htm#3658<->OptimizedRepresentation(F) : FldAlg -&gt; FldAlg, map
4<->RngOrd_opt-rep-ord (Example H38E1)<->text386.htm#3659<->RngOrd_opt-rep-ord (Example H38E1)
4<->Example-opt-rep-ord :<->text386.htm#3659<->Example-opt-rep-ord :: RngOrd_opt-rep-ord (Example H38E1)
3<->magma :<->text386.htm#3645<->magma :: Creation of Algebraic Fields (NUMBER FIELDS AND ORDERS)
3<->order :<->text386.htm#3660<->order :: Creation of Orders and Fields from Orders (NUMBER FIELDS AND ORDERS)
5<->EquationOrder(f) <->text386.htm#3661<->EquationOrder(f) : RngUPolElt -&gt; RngOrd
5<->EquationOrder(S) <->text386.htm#3662<->EquationOrder(S) : [RngUPolElt] -&gt; RngOrd
5<->EquationOrder(K) <->text386.htm#3663<->EquationOrder(K) : FldNum -&gt; RngOrd
5<->SubOrder(O) <->text386.htm#3664<->SubOrder(O) : RngOrd -&gt; RngOrd
5<->EquationOrder(O) <->text386.htm#3665<->EquationOrder(O) : RngOrd -&gt; RngOrd
5<->RingOfIntegers :: Integers(O) <->text386.htm#3666<->RingOfIntegers :: Integers(O) : RngOrd -&gt; RngOrd
5<->IntegerRing :: Integers(O) <->text386.htm#3666<->IntegerRing :: Integers(O) : RngOrd -&gt; RngOrd
5<->Integers(O) <->text386.htm#3666<->Integers(O) : RngOrd -&gt; RngOrd
4<->RngOrd_Orders (Example H38E2)<->text386.htm#3667<->RngOrd_Orders (Example H38E2)
4<->Example-Orders :<->text386.htm#3667<->Example-Orders :: RngOrd_Orders (Example H38E2)
5<->sub< O | a1, ..., ar > <->text386.htm#3668<->sub&lt; O | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngOrd, RngOrdElt, ..., RngOrdElt -&gt; RngOrd
5<->ext< O | a1, ..., ar > <->text386.htm#3669<->ext&lt; O | a<sub>1</sub>, ..., a<sub>r</sub> &gt; : RngOrd, RngOrdElt, ..., RngOrdElt -&gt; RngOrd
5<->ext <->text386.htm#3670<->ext< O | f > : RngOrd, RngUPolElt -> RngOrd
5<->ext< Z | f > <->text386.htm#3670<->ext&lt; Z | f &gt; : RngInt, RngUPolElt -&gt; RngOrd
5<->FieldOfFractions(O) <->text386.htm#3671<->FieldOfFractions(O) : RngOrd -&gt; FldOrd
5<->Order(F) <->text386.htm#3672<->Order(F) : FldOrd -&gt; RngOrd
5<->NumberField(O) <->text386.htm#3673<->NumberField(O) : RngOrd -&gt; FldNum
5<->NumberField(F) <->text386.htm#3674<->NumberField(F) : FldOrd -&gt; FldNum
4<->RngOrd_fractions (Example H38E3)<->text386.htm#3675<->RngOrd_fractions (Example H38E3)
4<->Example-fractions :<->text386.htm#3675<->Example-fractions :: RngOrd_fractions (Example H38E3)
5<->OptimisedRepresentation :: OptimizedRepresentation(O) <->text386.htm#3676<->OptimisedRepresentation :: OptimizedRepresentation(O) : RngOrd -&gt; BoolElt, RngOrd, Map
5<->OptimizedRepresentation(O, d) <->text386.htm#3676<->OptimizedRepresentation(O, d) : RngOrd, RngIntElt -> BoolElt, RngOrd, Map
5<->OptimisedRepresentation(O, d) : RngOrd, RngIntElt -> BoolElt, RngOrd, Map :: OptimizedRepresentation(O) <->text386.htm#3676<->OptimisedRepresentation(O, d) : RngOrd, RngIntElt -> BoolElt, RngOrd, Map :: OptimizedRepresentation(O) : RngOrd -&gt; BoolElt, RngOrd, Map
5<->OptimizedRepresentation(O) <->text386.htm#3676<->OptimizedRepresentation(O) : RngOrd -&gt; BoolElt, RngOrd, Map
5<->O + P <->text386.htm#3677<->O + P : RngOrd, RngOrd -&gt; RngOrd
5<->O meet P <->text386.htm#3678<->O meet P : RngOrd, RngOrd -&gt; RngOrd
5<->AsExtensionOf(O, P) <->text386.htm#3679<->AsExtensionOf(O, P) : RngOrd, RngOrd -&gt; RngOrd
5<->Order(O, T, d) <->text386.htm#3680<->Order(O, T, d) : RngOrd, AlgMatElt, RngIntElt -&gt; RngOrd
5<->Order(O, M) <->text386.htm#3681<->Order(O, M) : RngOrd, PMat -> RngOrd
5<->Order(O, M) <->text386.htm#3681<->Order(O, M) : RngOrd, ModDed -&gt; RngOrd
5<->Order( [ e1, ... en ] )<->text386.htm#3682<->Order( [ e<sub>1</sub>, ... e<sub>n</sub> ] ): [FldAlgElt] -&gt; RngOrd
3<->order :<->text386.htm#3660<->order :: Creation of Orders and Fields from Orders (NUMBER FIELDS AND ORDERS)
3<->maximal_orders :<->text386.htm#3683<->maximal_orders :: Maximal Orders (NUMBER FIELDS AND ORDERS)
5<->MaximalOrder(O) <->text386.htm#3684<->MaximalOrder(O) : RngOrd -&gt; RngOrd
5<->IntegerRing :: MaximalOrder(F) <->text386.htm#3685<->IntegerRing :: MaximalOrder(F) : FldAlg -&gt; RngOrd
5<->Integers :: MaximalOrder(F) <->text386.htm#3685<->Integers :: MaximalOrder(F) : FldAlg -&gt; RngOrd
5<->RingOfIntegers :: MaximalOrder(F) <->text386.htm#3685<->RingOfIntegers :: MaximalOrder(F) : FldAlg -&gt; RngOrd
5<->MaximalOrder(F) <->text386.htm#3685<->MaximalOrder(F) : FldAlg -&gt; RngOrd
5<->MaximalOrder(f) <->text386.htm#3686<->MaximalOrder(f) : RngUPolElt -&gt; RngOrd
4<->RngOrd_max_order (Example H38E4)<->text386.htm#3687<->RngOrd_max_order (Example H38E4)
4<->Example-max_order :<->text386.htm#3687<->Example-max_order :: RngOrd_max_order (Example H38E4)
3<->orders_ideals :<->text386.htm#3688<->orders_ideals :: Orders and Ideals (NUMBER FIELDS AND ORDERS)
5<->pMaximalOrder(O, p) <->text386.htm#3689<->pMaximalOrder(O, p) : RngOrd, RngOrdIdl -> RngOrd
5<->pMaximalOrder(O, p) <->text386.htm#3689<->pMaximalOrder(O, p) : RngOrd, RngIntElt -&gt; RngOrd
5<->pRadical(O, p) <->text386.htm#3690<->pRadical(O, p) : RngOrd, RngOrdIdl -> RngOrdIdl
5<->pRadical(O, p) <->text386.htm#3690<->pRadical(O, p) : RngOrd, RngIntElt -&gt; RngOrdIdl
5<->MultiplicatorRing(I) <->text386.htm#3691<->MultiplicatorRing(I) : RngOrdFracIdl -&gt; Rng
4<->RngOrd_Round2 (Example H38E5)<->text386.htm#3692<->RngOrd_Round2 (Example H38E5)
4<->Example-Round2 :<->text386.htm#3692<->Example-Round2 :: RngOrd_Round2 (Example H38E5)
3<->orders_ideals :<->text386.htm#3688<->orders_ideals :: Orders and Ideals (NUMBER FIELDS AND ORDERS)
3<->maximal_orders :<->text386.htm#3683<->maximal_orders :: Maximal Orders (NUMBER FIELDS AND ORDERS)
3<->element :<->text386.htm#3693<->element :: Creation of Elements (NUMBER FIELDS AND ORDERS)
5<->elt :: F ! a <->text386.htm#3694<->elt :: F ! a : FldAlg, RngElt -&gt; FldAlgElt
5<->F ! a <->text386.htm#3694<->F ! a : FldAlg, RngElt -&gt; FldAlgElt
5<->elt :: F ! [a0, a1, ..., am - 1] <->text386.htm#3695<->elt :: F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldAlg, [RngElt] -&gt; FldAlgElt
5<->elt : FldAlg, RngElt , ..., RngElt -> FldAlgElt :: F ! [a0, a1, ..., am - 1] <->text386.htm#3695<->elt< F | a$_0$, a$_1$, ..., a$_{m-1}$> : FldAlg, RngElt , ..., RngElt -> FldAlgElt :: F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldAlg, [RngElt] -&gt; FldAlgElt
5<->F ! [a0, a1, ..., am - 1] <->text386.htm#3695<->F ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : FldAlg, [RngElt] -&gt; FldAlgElt
5<->elt :: O ! a <->text386.htm#3696<->elt :: O ! a : RngOrd, RngElt -&gt; RngOrdElt
5<->O ! a <->text386.htm#3696<->O ! a : RngOrd, RngElt -&gt; RngOrdElt
5<->elt :: O ! [a0, a1, ..., am - 1] <->text386.htm#3697<->elt :: O ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : RngOrd, [ RngElt ] -&gt; RngOrdElt
5<->elt	 : RngOrd, RngElt, ..., RngElt -> RngOrdElt :: O ! [a0, a1, ..., am - 1] <->text386.htm#3697<->elt< O | a$_0$, a$_1$, ..., a$_m-1$ >	 : RngOrd, RngElt, ..., RngElt -> RngOrdElt :: O ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : RngOrd, [ RngElt ] -&gt; RngOrdElt
5<->O ! [a0, a1, ..., am - 1] <->text386.htm#3697<->O ! [a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>m - 1</sub>] : RngOrd, [ RngElt ] -&gt; RngOrdElt
5<->Random(O, m) <->text386.htm#3698<->Random(O, m) : RngOrd, RngIntElt -> RngOrdElt
5<->Random(F, m) <->text386.htm#3698<->Random(F, m) : FldAlg, RngIntElt -&gt; FldAlgElt
5<->Random(I, m) <->text386.htm#3699<->Random(I, m) : RngOrdFracIdl, RngIntElt -&gt; FldOrdElt
4<->RngOrd_Elements (Example H38E6)<->text386.htm#3700<->RngOrd_Elements (Example H38E6)
4<->Example-Elements :<->text386.htm#3700<->Example-Elements :: RngOrd_Elements (Example H38E6)
3<->element :<->text386.htm#3693<->element :: Creation of Elements (NUMBER FIELDS AND ORDERS)
3<->homomorphism :<->text386.htm#3701<->homomorphism :: Creation of Homomorphisms (NUMBER FIELDS AND ORDERS)
5<->hom <->text386.htm#3702<->hom< F \ar R | h, r > : FldAlg, Rng, Map, RngElt -> Map
5<->hom< F -> R | r > <->text386.htm#3702<->hom&lt; F -&gt; R | r &gt; : FldAlg, Rng, RngElt -&gt; Map
5<->hom <->text386.htm#3703<->hom< O \ar R | h, r > : RngOrd, Rng, Map, RngElt -> Map
5<->hom< O -> R | r > <->text386.htm#3703<->hom&lt; O -&gt; R | r &gt; : RngOrd, Rng, RngElt -&gt; Map
4<->RngOrd_Homomorphisms (Example H38E7)<->text386.htm#3704<->RngOrd_Homomorphisms (Example H38E7)
4<->Example-Homomorphisms :<->text386.htm#3704<->Example-Homomorphisms :: RngOrd_Homomorphisms (Example H38E7)
5<->hom <->text386.htm#3705<->hom< O \ar R | m, $b_1, ..., b_n$ > : RngFunOrd, Rng, Map, RngElt, ..., RngElt -> Map
5<->hom< O -> R | b1, ..., bn > <->text386.htm#3705<->hom&lt; O -&gt; R | b<sub>1</sub>, ..., b<sub>n</sub> &gt; : RngFunOrd, Rng, RngElt, ..., RngElt -&gt; Map
5<->IsRingHomomorphism(m) <->text386.htm#3706<->IsRingHomomorphism(m) : Map -&gt; BoolElt
3<->homomorphism :<->text386.htm#3701<->homomorphism :: Creation of Homomorphisms (NUMBER FIELDS AND ORDERS)
3<->creation :<->text386.htm<->creation :: Creation Functions (NUMBER FIELDS AND ORDERS)
3<->printing :<->text387.htm<->printing :: Printing (NUMBER FIELDS AND ORDERS)
5<->SetVerbose(s, n) <->text387.htm#3708<->SetVerbose(s, n) : MonStgElt, RngIntElt -&gt;
5<->SetKantPrinting(f) <->text387.htm#3709<->SetKantPrinting(f) : BoolElt -&gt; BoolElt
3<->printing :<->text387.htm<->printing :: Printing (NUMBER FIELDS AND ORDERS)
3<->precision :<->text388.htm<->precision :: Real Precision (NUMBER FIELDS AND ORDERS)
5<->SetKantPrecision(F, n, m) <->text388.htm#3711<->SetKantPrecision(F, n, m) : FldAlg, RngIntElt, RngIntElt ->
5<->SetKantPrecision(O, n) <->text388.htm#3711<->SetKantPrecision(O, n) : RngOrd, RngIntElt ->
5<->SetKantPrecision(O, n, m) <->text388.htm#3711<->SetKantPrecision(O, n, m) : RngOrd, RngIntElt, RngIntElt ->
5<->SetKantPrecision(F, n) <->text388.htm#3711<->SetKantPrecision(F, n) : FldAlg, RngIntElt -&gt;
3<->precision :<->text388.htm<->precision :: Real Precision (NUMBER FIELDS AND ORDERS)
3<->operation :<->text389.htm<->operation :: Structure Operations (NUMBER FIELDS AND ORDERS)
3<->general :<->text389.htm#3713<->general :: General Functions (NUMBER FIELDS AND ORDERS)
5<->AssignNames(~K, s) <->text389.htm#3714<->AssignNames(~K, s) : FldNum, [ MonStgElt ] -&gt;
5<->. :: Name(K, i) <->text389.htm#3715<->. :: Name(K, i) : FldNum, RngIntElt -&gt; FldNumElt
5<->Name(K, i) <->text389.htm#3715<->Name(K, i) : FldNum, RngIntElt -&gt; FldNumElt
5<->AssignNames(~F, s) <->text389.htm#3716<->AssignNames(~F, s) : FldOrd, [ MonStgElt ] -&gt;
5<->Name :: F . i <->text389.htm#3717<->Name :: F . i : FldOrd, RngIntElt -&gt; FldOrdElt
5<->F . i <->text389.htm#3717<->F . i : FldOrd, RngIntElt -&gt; FldOrdElt
5<->O . i <->text389.htm#3718<->O . i : RngOrd, RngIntElt -&gt; RngOrdElt
3<->general :<->text389.htm#3713<->general :: General Functions (NUMBER FIELDS AND ORDERS)
3<->related :<->text389.htm#3719<->related :: Related Structures (NUMBER FIELDS AND ORDERS)
5<->BaseField :: GroundField(F) <->text389.htm#3720<->BaseField :: GroundField(F) : FldAlg -&gt; Fld
5<->CoefficientField :: GroundField(F) <->text389.htm#3720<->CoefficientField :: GroundField(F) : FldAlg -&gt; Fld
5<->CoefficientRing :: GroundField(F) <->text389.htm#3720<->CoefficientRing :: GroundField(F) : FldAlg -&gt; Fld
5<->GroundField(F) <->text389.htm#3720<->GroundField(F) : FldAlg -&gt; Fld
5<->CoefficientRing :: BaseRing(O) <->text389.htm#3721<->CoefficientRing :: BaseRing(O) : RngOrd -&gt; Rng
5<->BaseRing(O) <->text389.htm#3721<->BaseRing(O) : RngOrd -&gt; Rng
5<->AbsoluteField(F) <->text389.htm#3722<->AbsoluteField(F) : FldAlg -&gt; FldAlg
5<->AbsoluteOrder(O) <->text389.htm#3723<->AbsoluteOrder(O) : RngOrd -&gt; RngOrd
5<->SimpleExtension(O) <->text389.htm#3724<->SimpleExtension(O) : RngOrd -> RngOrd
5<->SimpleExtension(F) <->text389.htm#3724<->SimpleExtension(F) : FldAlg -&gt; FldAlg
5<->RelativeField(Q, L) <->text389.htm#3725<->RelativeField(Q, L) : FldRat, FldAlg -> FldAlg
5<->RelativeField(F, L) <->text389.htm#3725<->RelativeField(F, L) : FldAlg, FldAlg -&gt; FldAlg
5<->Components(O) <->text389.htm#3726<->Components(O) : RngOrd -> [RngOrd]
5<->Components(F) <->text389.htm#3726<->Components(F) : FldAlg -&gt; [FldAlg]
4<->RngOrd_Compositum (Example H38E8)<->text389.htm#3727<->RngOrd_Compositum (Example H38E8)
4<->Example-Compositum :<->text389.htm#3727<->Example-Compositum :: RngOrd_Compositum (Example H38E8)
5<->Simplify(O) <->text389.htm#3728<->Simplify(O) : RngOrd -&gt; RngOrd
5<->LLL(O) <->text389.htm#3729<->LLL(O) : RngOrd -&gt; RngOrd, AlgMatElt
4<->RngOrd_lll (Example H38E9)<->text389.htm#3730<->RngOrd_lll (Example H38E9)
4<->Example-lll :<->text389.htm#3730<->Example-lll :: RngOrd_lll (Example H38E9)
5<->Embed(F, L, a) <->text389.htm#3731<->Embed(F, L, a) : FldAlg, FldAlg, FldAlgElt -&gt;
5<->Embed(F, L, a) <->text389.htm#3732<->Embed(F, L, a) : FldAlg, FldAlg, [FldAlgElt] -&gt;
5<->EmbeddingMap(F, L)<->text389.htm#3733<->EmbeddingMap(F, L): FldAlg, FldAlg -&gt; Map
4<->RngOrd_em (Example H38E10)<->text389.htm#3734<->RngOrd_em (Example H38E10)
4<->Example-em :<->text389.htm#3734<->Example-em :: RngOrd_em (Example H38E10)
5<->Completion(O, P) <->text389.htm#3735<->Completion(O, P) : RngOrd, RngOrdIdl -> RngLoc, Map
5<->comp :: Completion(K, P) <->text389.htm#3735<->comp :: Completion(K, P) : FldAlg, RngOrdIdl -&gt; FldLoc, Map
5<->comp : RngOrd, RngOrdIdl -> RngLoc, Map :: Completion(K, P) <->text389.htm#3735<->comp<O|P> : RngOrd, RngOrdIdl -> RngLoc, Map :: Completion(K, P) : FldAlg, RngOrdIdl -&gt; FldLoc, Map
5<->Completion(K, P) <->text389.htm#3735<->Completion(K, P) : FldAlg, RngOrdIdl -&gt; FldLoc, Map
5<->Completion(K, P) <->text389.htm#3736<->Completion(K, P) : FldAlg, PlcNumElt -&gt; FldLoc, Map
5<->LocalRing(P, prec) <->text389.htm#3737<->LocalRing(P, prec) : RngOrdIdl, RngIntElt -&gt; RngLoc, Map
3<->related :<->text389.htm#3719<->related :: Related Structures (NUMBER FIELDS AND ORDERS)
3<->vector_spaces :<->text389.htm#3738<->vector_spaces :: Representing Fields as Vector Spaces (NUMBER FIELDS AND ORDERS)
5<->Algebra(K, J, S) <->text389.htm#3739<->Algebra(K, J, S) : FldAlg, Fld, [FldAlgElt] -> AlgAss, Map
5<->Algebra(K, J) <->text389.htm#3739<->Algebra(K, J) : FldAlg, Fld -&gt; AlgAss, Map
5<->KSpace :: VectorSpace(K, J) <->text389.htm#3740<->KSpace :: VectorSpace(K, J) : FldAlg, Fld -&gt; ModTupFld, Map
5<->VectorSpace(K, J, S) <->text389.htm#3740<->VectorSpace(K, J, S) : FldAlg, Fld, [FldAlgElt] -> ModTupFld, Map
5<->KSpace(K, J, S) : FldAlg, Fld, [FldAlgElt] -> ModTupFld, Map :: VectorSpace(K, J) <->text389.htm#3740<->KSpace(K, J, S) : FldAlg, Fld, [FldAlgElt] -> ModTupFld, Map :: VectorSpace(K, J) : FldAlg, Fld -&gt; ModTupFld, Map
5<->VectorSpace(K, J) <->text389.htm#3740<->VectorSpace(K, J) : FldAlg, Fld -&gt; ModTupFld, Map
4<->RngOrd_vector_space_eg (Example H38E11)<->text389.htm#3741<->RngOrd_vector_space_eg (Example H38E11)
4<->Example-vector_space_eg :<->text389.htm#3741<->Example-vector_space_eg :: RngOrd_vector_space_eg (Example H38E11)
3<->vector_spaces :<->text389.htm#3738<->vector_spaces :: Representing Fields as Vector Spaces (NUMBER FIELDS AND ORDERS)
3<->invariant :<->text389.htm#3742<->invariant :: Invariants (NUMBER FIELDS AND ORDERS)
5<->\nameRngOrd:Degree{Degree}(F) <->text389.htm#3743<->\nameRngOrd:Degree{Degree}(F) : FldAlg -> RngIntElt
5<->Degree(O) <->text389.htm#3743<->Degree(O) : RngOrd -&gt; RngIntElt
5<->AbsoluteDegree(F) <->text389.htm#3744<->AbsoluteDegree(F) : FldAlg -> RngIntElt
5<->AbsoluteDegree(O) <->text389.htm#3744<->AbsoluteDegree(O) : RngOrd -&gt; RngIntElt
5<->Discriminant(O) <->text389.htm#3745<->Discriminant(O) : RngInt -> RngIntElt
5<->\nameRngOrd:Discriminant{Discriminant}(F) <->text389.htm#3745<->\nameRngOrd:Discriminant{Discriminant}(F) : FldAlg  -> RngIntElt
5<->Discriminant(O) <->text389.htm#3745<->Discriminant(O) : RngOrd -> RngOrdIdl
5<->Discriminant(F) <->text389.htm#3745<->Discriminant(F) : FldAlg -> RngOrdIdl
5<->Discriminant(O) <->text389.htm#3745<->Discriminant(O) : RngOrd -&gt; RngIntElt
5<->AbsoluteDiscriminant(O) <->text389.htm#3746<->AbsoluteDiscriminant(O) : RngOrd -&gt; RngIntElt
5<->AbsoluteDiscriminant(K) <->text389.htm#3747<->AbsoluteDiscriminant(K) : FldAlg -&gt; FldRatElt
5<->ReducedDiscriminant(F) <->text389.htm#3748<->ReducedDiscriminant(F) : FldAlg  -> RngIntElt
5<->ReducedDiscriminant(O) <->text389.htm#3748<->ReducedDiscriminant(O) : RngOrd -> RngOrdIdl
5<->ReducedDiscriminant(F) <->text389.htm#3748<->ReducedDiscriminant(F) : FldAlg  -> RngOrdIdl
5<->ReducedDiscriminant(O) <->text389.htm#3748<->ReducedDiscriminant(O) : RngOrd -&gt; RngIntElt
5<->Regulator(K) <->text389.htm#3749<->Regulator(K) : FldNum -> FldReElt
5<->Regulator(O: parameters) <->text389.htm#3749<->Regulator(O: parameters) : RngOrd -&gt; FldReElt
5<->RegulatorLowerBound(K) <->text389.htm#3750<->RegulatorLowerBound(K) : FldNum -> FldReElt
5<->RegulatorLowerBound(O) <->text389.htm#3750<->RegulatorLowerBound(O) : RngOrd -&gt; FldReElt
5<->Signature(F) <->text389.htm#3751<->Signature(F) : FldAlg -> RngIntElt, RngIntElt
5<->Signature(O) <->text389.htm#3751<->Signature(O) : RngOrd -&gt; RngIntElt, RngIntElt
5<->UnitRank(K) <->text389.htm#3752<->UnitRank(K) : FldNum -> RngIntElt
5<->UnitRank(O) <->text389.htm#3752<->UnitRank(O) : RngOrd -&gt; RngIntElt
5<->Index(O, S) <->text389.htm#3753<->Index(O, S) : RngOrd, RngOrd -> RngOrdIdl
5<->Index(O, S) <->text389.htm#3753<->Index(O, S) : RngOrd, RngOrd -&gt; RngIntElt
5<->DefiningPolynomial(O) <->text389.htm#3754<->DefiningPolynomial(O) : RngOrd -> RngUPolElt
5<->DefiningPolynomial(F) <->text389.htm#3754<->DefiningPolynomial(F) : FldAlg -> [RngUPolElt]
5<->DefiningPolynomial(O) <->text389.htm#3754<->DefiningPolynomial(O) : RngOrd -> [RngUPolElt]
5<->DefiningPolynomial(F) <->text389.htm#3754<->DefiningPolynomial(F) : FldAlg -&gt; RngUPolElt
5<->Zeros :: Zeroes(O, n) <->text389.htm#3755<->Zeros :: Zeroes(O, n) : RngOrd, RngIntElt -&gt; [ FldReElt ]
5<->Zeroes(F, n) <->text389.htm#3755<->Zeroes(F, n) : FldAlg, RngIntElt -> [ FldReElt ]
5<->Zeros(F, n) : FldAlg, RngIntElt -> [ FldReElt ] :: Zeroes(O, n) <->text389.htm#3755<->Zeros(F, n) : FldAlg, RngIntElt -> [ FldReElt ] :: Zeroes(O, n) : RngOrd, RngIntElt -&gt; [ FldReElt ]
5<->Zeroes(O, n) <->text389.htm#3755<->Zeroes(O, n) : RngOrd, RngIntElt -&gt; [ FldReElt ]
4<->RngOrd_zero (Example H38E12)<->text389.htm#3756<->RngOrd_zero (Example H38E12)
4<->Example-zero :<->text389.htm#3756<->Example-zero :: RngOrd_zero (Example H38E12)
5<->Different(O) <->text389.htm#3757<->Different(O) : RngOrd -&gt; RngOrdIdl
5<->Conductor(O) <->text389.htm#3758<->Conductor(O) : RngOrd -&gt; RngOrdIdl
3<->invariant :<->text389.htm#3742<->invariant :: Invariants (NUMBER FIELDS AND ORDERS)
3<->basis :<->text389.htm#3759<->basis :: Basis Representation (NUMBER FIELDS AND ORDERS)
5<->Basis(O, R) <->text389.htm#3760<->Basis(O, R) : RngOrd, Rng -> [ RngElt ]
5<->Basis(F) <->text389.htm#3760<->Basis(F) : FldAlg -> [ FldAlgElt ]
5<->Basis(F, R) <->text389.htm#3760<->Basis(F, R) : FldAlg, Rng -> [ RngElt ]
5<->Basis(O) <->text389.htm#3760<->Basis(O) : RngOrd -&gt; [ FldOrdElt ]
5<->IntegralBasis(F, R) <->text389.htm#3761<->IntegralBasis(F, R) : FldAlg, Rng -> [ RngElt ]
5<->IntegralBasis(F) <->text389.htm#3761<->IntegralBasis(F) : FldAlg -&gt; [ FldAlgElt ]
4<->RngOrd_basis-ring (Example H38E13)<->text389.htm#3762<->RngOrd_basis-ring (Example H38E13)
4<->Example-basis-ring :<->text389.htm#3762<->Example-basis-ring :: RngOrd_basis-ring (Example H38E13)
5<->AbsoluteBasis(K) <->text389.htm#3763<->AbsoluteBasis(K) : FldAlg -&gt; [FldAlgElt]
5<->BasisMatrix(O) <->text389.htm#3764<->BasisMatrix(O) : RngOrd -&gt; AlgMatElt
5<->TransformationMatrix(O, P) <->text389.htm#3765<->TransformationMatrix(O, P) : RngOrd, RngOrd -&gt; AlgMatElt, RngIntElt
5<->CoefficientIdeals(O) <->text389.htm#3766<->CoefficientIdeals(O) : RngOrd -&gt; [RngOrdFracIdl]
4<->RngOrd_Bases (Example H38E14)<->text389.htm#3767<->RngOrd_Bases (Example H38E14)
4<->Example-Bases :<->text389.htm#3767<->Example-Bases :: RngOrd_Bases (Example H38E14)
5<->MultiplicationTable(O) <->text389.htm#3768<->MultiplicationTable(O) : RngOrd -&gt; [AlgMatElt]
5<->TraceMatrix(F) <->text389.htm#3769<->TraceMatrix(F) : FldAlg -> AlgMatElt
5<->TraceMatrix(O) <->text389.htm#3769<->TraceMatrix(O) : RngOrd -&gt; AlgMatElt
4<->RngOrd_MultiplicationTable (Example H38E15)<->text389.htm#3770<->RngOrd_MultiplicationTable (Example H38E15)
4<->Example-MultiplicationTable :<->text389.htm#3770<->Example-MultiplicationTable :: RngOrd_MultiplicationTable (Example H38E15)
3<->basis :<->text389.htm#3759<->basis :: Basis Representation (NUMBER FIELDS AND ORDERS)
3<->Boolean :<->text389.htm#3771<->Boolean :: Ring Predicates (NUMBER FIELDS AND ORDERS)
5<->N eq O <->text389.htm#3772<->N eq O : RngOrd, RngOrd -&gt; BoolElt
5<->F eq L <->text389.htm#3773<->F eq L : FldRat, FldAlg -> BoolElt
5<->F eq L <->text389.htm#3773<->F eq L : FldAlg, FldRat -> BoolElt
5<->F eq L <->text389.htm#3773<->F eq L : FldAlg, FldAlg -&gt; BoolElt
5<->IsNumberField(R) <->text389.htm#3774<->IsNumberField(R) : . -&gt; BoolElt
5<->IsAlgebraicField(R) <->text389.htm#3775<->IsAlgebraicField(R) : Any -&gt; BoolElt
5<->IsEuclideanDomain(F) <->text389.htm#3776<->IsEuclideanDomain(F) : FldAlg -&gt; BoolElt
5<->IsSimple(O) <->text389.htm#3777<->IsSimple(O) : RngOrd -> BoolElt
5<->IsSimple(F) <->text389.htm#3777<->IsSimple(F) : FldAlg -&gt; BoolElt
5<->IsPrincipalIdealRing(F) <->text389.htm#3778<->IsPrincipalIdealRing(F) : FldAlg -&gt; BoolElt
5<->IsPrincipalIdealRing(O) <->text389.htm#3779<->IsPrincipalIdealRing(O) : RngOrd -&gt; BoolElt
5<->HasComplexConjugate(K) <->text389.htm#3780<->HasComplexConjugate(K) : FldAlg -&gt; BoolElt, Map
5<->ComplexConjugate(x) <->text389.htm#3781<->ComplexConjugate(x) : FldAlgElt -&gt; FldAlgElt
3<->Boolean :<->text389.htm#3771<->Boolean :: Ring Predicates (NUMBER FIELDS AND ORDERS)
3<->Boolean :<->text389.htm#3782<->Boolean :: Order Predicates (NUMBER FIELDS AND ORDERS)
5<->IsEquationOrder(O) <->text389.htm#3783<->IsEquationOrder(O) : RngOrd -&gt; BoolElt
5<->IsMaximal(O) <->text389.htm#3784<->IsMaximal(O) : RngOrd -&gt; BoolElt
5<->IsAbsoluteOrder(O) <->text389.htm#3785<->IsAbsoluteOrder(O) : RngOrd -&gt; BoolElt
5<->IsWildlyRamified(O) <->text389.htm#3786<->IsWildlyRamified(O) : RngOrd -&gt; BoolElt
5<->IsTamelyRamified(O) <->text389.htm#3787<->IsTamelyRamified(O) : RngOrd -&gt; BoolElt
5<->IsUnramified(O) <->text389.htm#3788<->IsUnramified(O) : RngOrd -&gt; BoolElt
3<->Boolean :<->text389.htm#3782<->Boolean :: Order Predicates (NUMBER FIELDS AND ORDERS)
3<->Boolean :<->text389.htm#3789<->Boolean :: Field Predicates (NUMBER FIELDS AND ORDERS)
5<->IsIsomorphic(F, L) <->text389.htm#3790<->IsIsomorphic(F, L) : FldAlg, FldAlg -&gt; BoolElt, Map
5<->IsSubfield(F, L) <->text389.htm#3791<->IsSubfield(F, L) : FldRat, FldAlg  -> BoolElt, Map
5<->IsSubfield(F, L) <->text389.htm#3791<->IsSubfield(F, L) : FldAlg, FldAlg  -&gt; BoolElt, Map
5<->IsNormal(F) <->text389.htm#3792<->IsNormal(F) : FldAlg -&gt; BoolElt
5<->IsAbelian(F) <->text389.htm#3793<->IsAbelian(F) : FldAlg -&gt; BoolElt
5<->IsCyclic(F) <->text389.htm#3794<->IsCyclic(F) : FldAlg -&gt; BoolElt
5<->IsAbsoluteField(K) <->text389.htm#3795<->IsAbsoluteField(K) : FldAlg -&gt; BoolElt
5<->IsWildlyRamified(K) <->text389.htm#3796<->IsWildlyRamified(K) : FldAlg -&gt; BoolElt
5<->IsTamelyRamified(K) <->text389.htm#3797<->IsTamelyRamified(K) : FldAlg -&gt; BoolElt
5<->IsUnramified(K) <->text389.htm#3798<->IsUnramified(K) : FldAlg -&gt; BoolElt
5<->IsQuadratic(K) <->text389.htm#3799<->IsQuadratic(K) : FldAlg -&gt; BoolElt, FldQuad
5<->IsTotallyReal(K) <->text389.htm#3800<->IsTotallyReal(K) : FldAlg -&gt; BoolElt
3<->Boolean :<->text389.htm#3789<->Boolean :: Field Predicates (NUMBER FIELDS AND ORDERS)
3<->setting :<->text389.htm#3801<->setting :: Setting Properties of Orders (NUMBER FIELDS AND ORDERS)
5<->SetOrderMaximal(O, b) <->text389.htm#3802<->SetOrderMaximal(O, b) : RngOrd, BoolElt -&gt;
5<->SetOrderTorsionUnit(O, e, r) <->text389.htm#3803<->SetOrderTorsionUnit(O, e, r) : RngOrd, RngOrdElt, RngIntElt -&gt;
5<->SetOrderUnitsAreFundamental(O) <->text389.htm#3804<->SetOrderUnitsAreFundamental(O) : RngOrd -&gt;
3<->setting :<->text389.htm#3801<->setting :: Setting Properties of Orders (NUMBER FIELDS AND ORDERS)
3<->operation :<->text389.htm<->operation :: Structure Operations (NUMBER FIELDS AND ORDERS)
3<->operation-element :<->text390.htm<->operation-element :: Element Operations (NUMBER FIELDS AND ORDERS)
3<->parent-category :<->text390.htm#3806<->parent-category :: Parent and Category (NUMBER FIELDS AND ORDERS)
3<->field-element :<->text390.htm#3807<->field-element :: Arithmetic (NUMBER FIELDS AND ORDERS)
5<->w div v <->text390.htm#3808<->w div v : RngOrdElt, RngOrdElt -&gt; RngOrdElt
5<->Modexp(a, n, m) <->text390.htm#3809<->Modexp(a, n, m) : RngOrdElt, RngIntElt, RngIntElt -&gt; RngOrdElt
5<->Sqrt(a) <->text390.htm#3810<->Sqrt(a) : FldAlgElt -> FldAlgElt
5<->SquareRoot :: Sqrt(a) <->text390.htm#3810<->SquareRoot :: Sqrt(a) : RngOrdElt -&gt; RngOrdElt
5<->SquareRoot(a) : FldAlgElt -> FldAlgElt :: Sqrt(a) <->text390.htm#3810<->SquareRoot(a) : FldAlgElt -> FldAlgElt :: Sqrt(a) : RngOrdElt -&gt; RngOrdElt
5<->Sqrt(a) <->text390.htm#3810<->Sqrt(a) : RngOrdElt -&gt; RngOrdElt
5<->Root(a, n) <->text390.htm#3811<->Root(a, n) : FldAlgElt, RngIntElt -> FldAlgElt
5<->Root(a, n) <->text390.htm#3811<->Root(a, n) : RngOrdElt, RngIntElt -&gt; RngOrdElt
5<->IsPower(a, k) <->text390.htm#3812<->IsPower(a, k) : RngOrdElt, RngIntElt -> BoolElt, RngOrdElt
5<->IsSquare :: IsPower(a, k) <->text390.htm#3812<->IsSquare :: IsPower(a, k) : FldAlgElt, RngIntElt -&gt; BoolElt, FldAlgElt
5<->IsSquare(a) : RngOrdElt -> BoolElt, RngOrdElt :: IsPower(a, k) <->text390.htm#3812<->IsSquare(a) : RngOrdElt -> BoolElt, RngOrdElt :: IsPower(a, k) : FldAlgElt, RngIntElt -&gt; BoolElt, FldAlgElt
5<->IsPower(a, k) <->text390.htm#3812<->IsPower(a, k) : FldAlgElt, RngIntElt -&gt; BoolElt, FldAlgElt
5<->Denominator(a) <->text390.htm#3813<->Denominator(a) : RngOrdElt -> RngIntElt
5<->Denominator(a) <->text390.htm#3813<->Denominator(a) : FldAlgElt -&gt; RngIntElt
5<->Numerator(a) <->text390.htm#3814<->Numerator(a) : FldAlgElt -&gt; RngIntElt
5<->Qround(E, M)<->text390.htm#3815<->Qround(E, M): FldAlgElt, RngIntElt -&gt; FldAlgElt
3<->field-element :<->text390.htm#3807<->field-element :: Arithmetic (NUMBER FIELDS AND ORDERS)
3<->equality-membership :<->text390.htm#3816<->equality-membership :: Equality and Membership (NUMBER FIELDS AND ORDERS)
3<->boolean :<->text390.htm#3817<->boolean :: Predicates on Elements (NUMBER FIELDS AND ORDERS)
5<->IsIntegral(a) <->text390.htm#3818<->IsIntegral(a) : RngOrdElt -> BoolElt
5<->IsIntegral(a) <->text390.htm#3818<->IsIntegral(a) : FldAlgElt -&gt; BoolElt
5<->IsPrimitive(a) <->text390.htm#3819<->IsPrimitive(a) : RngOrdElt -> BoolElt
5<->IsPrimitive(a) <->text390.htm#3819<->IsPrimitive(a) : FldAlgElt -&gt; BoolElt
5<->IsTorsionUnit(w) <->text390.htm#3820<->IsTorsionUnit(w) : RngOrdElt -&gt; BoolElt
5<->IsPower(w, n) <->text390.htm#3821<->IsPower(w, n) : RngOrdElt, RngIntElt -&gt; BoolElt, RngOrdElt
5<->IsTotallyPositive(a) <->text390.htm#3822<->IsTotallyPositive(a) : FldAlgElt -> BoolElt
5<->IsTotallyPositive(a) <->text390.htm#3822<->IsTotallyPositive(a) : RngOrdElt -&gt; BoolElt
3<->boolean :<->text390.htm#3817<->boolean :: Predicates on Elements (NUMBER FIELDS AND ORDERS)
3<->generator-primitive :<->text390.htm#3823<->generator-primitive :: Field Generators (NUMBER FIELDS AND ORDERS)
5<->K . 1 <->text390.htm#3824<->K . 1 : FldNum -&gt; FldNumElt
5<->PrimitiveElement(F) <->text390.htm#3825<->PrimitiveElement(F) : FldOrd -> FldOrdElt
5<->PrimitiveElement(K) <->text390.htm#3825<->PrimitiveElement(K) : FldNum -&gt; FldNumElt
5<->PrimitiveElement(O) <->text390.htm#3826<->PrimitiveElement(O) : RngOrd -&gt; RngOrdElt
5<->Generators(K)<->text390.htm#3827<->Generators(K): FldAlg -&gt; [FldAlgElt]
5<->Generators(K, Q) <->text390.htm#3828<->Generators(K, Q) : FldAlg, FldRat -> [FldAlgElt]
5<->Generators(K, k) <->text390.htm#3828<->Generators(K, k) : FldAlg, FldAlg -&gt; [FldAlgElt]
3<->generator-primitive :<->text390.htm#3823<->generator-primitive :: Field Generators (NUMBER FIELDS AND ORDERS)
3<->real-complex :<->text390.htm#3829<->real-complex :: Real and Complex Embeddings (NUMBER FIELDS AND ORDERS)
5<->Conjugates(a) <->text390.htm#3830<->Conjugates(a) : RngOrdElt -> [ FldComElt ]
5<->Conjugates(a) <->text390.htm#3830<->Conjugates(a) : FldAlgElt -&gt; [ FldComElt ]
5<->Conjugate(a, l) <->text390.htm#3831<->Conjugate(a, l) : RngOrdElt, RngIntElt -> FldReElt
5<->Conjugate(a, l) <->text390.htm#3831<->Conjugate(a, l) : FldAlgElt, RngIntElt -&gt; FldReElt
5<->Conjugate(a, l) <->text390.htm#3832<->Conjugate(a, l) : FldAlgElt, [RngIntElt] -&gt; FldReElt
5<->AbsoluteValues(a) <->text390.htm#3833<->AbsoluteValues(a) : RngOrdElt -> [FldReElt]
5<->AbsoluteValues(a) <->text390.htm#3833<->AbsoluteValues(a) : FldAlgElt -&gt; [FldReElt]
5<->Logs(a) <->text390.htm#3834<->Logs(a) : RngOrdElt -> [FldReElt]
5<->Logs(a) <->text390.htm#3834<->Logs(a) : FldAlgElt -&gt; [FldReElt]
5<->InfinitePlaces(O) <->text390.htm#3835<->InfinitePlaces(O) : RngOrd -> [PlcNumElt]
5<->InfinitePlaces(K) <->text390.htm#3835<->InfinitePlaces(K) : FldAlg -&gt; [PlcNumElt]
5<->Evaluate(x, p) <->text390.htm#3836<->Evaluate(x, p) : RngOrdElt, PlcNumElt -> RngElt
5<->Evaluate(x, p) <->text390.htm#3836<->Evaluate(x, p) : FldAlgElt, PlcNumElt -&gt; RngElt
5<->RealEmbeddings(a) <->text390.htm#3837<->RealEmbeddings(a) : RngOrdElt -> []
5<->RealEmbeddings(a) <->text390.htm#3837<->RealEmbeddings(a) : FldAlgElt -&gt; []
5<->MinkowskiLattice(O) <->text390.htm#3838<->MinkowskiLattice(O) : RngOrd -&gt; Lat, Map
5<->MinkowskiLattice(I) <->text390.htm#3839<->MinkowskiLattice(I) : RngOrdIdl -&gt; Lat, Map
5<->MinkowskiSpace(F) <->text390.htm#3840<->MinkowskiSpace(F) : FldAlg -&gt; Lat, Map
3<->real-complex :<->text390.htm#3829<->real-complex :: Real and Complex Embeddings (NUMBER FIELDS AND ORDERS)
3<->heights :<->text390.htm#3841<->heights :: Heights (NUMBER FIELDS AND ORDERS)
5<->AbsoluteLogarithmicHeight(a) <->text390.htm#3842<->AbsoluteLogarithmicHeight(a) : RngOrdElt -> FldReElt
5<->AbsoluteLogarithmicHeight(a) <->text390.htm#3842<->AbsoluteLogarithmicHeight(a) : FldAlgElt -&gt; FldReElt
5<->CoefficientHeight(E) <->text390.htm#3843<->CoefficientHeight(E) : FldAlgElt -> RngIntElt
5<->CoefficientHeight(E) <->text390.htm#3843<->CoefficientHeight(E) : RngOrdElt -&gt; RngIntElt
5<->CoefficientLength(E) <->text390.htm#3844<->CoefficientLength(E) : FldAlgElt -> RngIntElt
5<->CoefficientLength(E) <->text390.htm#3844<->CoefficientLength(E) : RngOrdElt -&gt; RngIntElt
5<->Length(a) <->text390.htm#3845<->Length(a) : RngOrdElt -> FldReElt
5<->Length(a) <->text390.htm#3845<->Length(a) : FldAlgElt -&gt; FldReElt
4<->RngOrd_Discriminant (Example H38E16)<->text390.htm#3846<->RngOrd_Discriminant (Example H38E16)
4<->Example-Discriminant :<->text390.htm#3846<->Example-Discriminant :: RngOrd_Discriminant (Example H38E16)
3<->heights :<->text390.htm#3841<->heights :: Heights (NUMBER FIELDS AND ORDERS)
3<->norm-trace :<->text390.htm#3847<->norm-trace :: Norm, Trace, and Minimal Polynomial (NUMBER FIELDS AND ORDERS)
5<->\nameRngOrd:Norm{Norm}(a) <->text390.htm#3848<->\nameRngOrd:Norm{Norm}(a) : FldAlgElt -> FldRatElt
5<->Norm(a, R) <->text390.htm#3848<->Norm(a, R) : FldAlgElt, Rng -> RngElt
5<->Norm(a) <->text390.htm#3848<->Norm(a) : RngOrdElt -> RngOrdElt
5<->Norm(a) <->text390.htm#3848<->Norm(a) : RngOrdElt -> RngIntElt
5<->Norm(a, R) <->text390.htm#3848<->Norm(a, R) : RngOrdElt, Rng -> RngElt
5<->Norm(a) <->text390.htm#3848<->Norm(a) : FldAlgElt -&gt; FldAlgElt
5<->NormAbs :: AbsoluteNorm(a) <->text390.htm#3849<->NormAbs :: AbsoluteNorm(a) : FldAlgElt -&gt; FldRatElt
5<->AbsoluteNorm(a) <->text390.htm#3849<->AbsoluteNorm(a) : RngOrdElt -> FldRatElt
5<->NormAbs(a) : RngOrdElt -> FldRatElt :: AbsoluteNorm(a) <->text390.htm#3849<->NormAbs(a) : RngOrdElt -> FldRatElt :: AbsoluteNorm(a) : FldAlgElt -&gt; FldRatElt
5<->AbsoluteNorm(a) <->text390.htm#3849<->AbsoluteNorm(a) : FldAlgElt -&gt; FldRatElt
5<->\nameRngOrd:Trace{Trace}(a) <->text390.htm#3850<->\nameRngOrd:Trace{Trace}(a) : FldAlgElt -> FldRatElt
5<->Trace(a, R) <->text390.htm#3850<->Trace(a, R) : FldAlgElt, Rng -> RngElt
5<->Trace(a) <->text390.htm#3850<->Trace(a) : RngOrdElt -> RngOrdElt
5<->Trace(a) <->text390.htm#3850<->Trace(a) : RngOrdElt -> RngIntElt
5<->Trace(a, R) <->text390.htm#3850<->Trace(a, R) : RngOrdElt, Rng -> RngElt
5<->Trace(a) <->text390.htm#3850<->Trace(a) : FldAlgElt -&gt; FldAlgElt
5<->TraceAbs :: AbsoluteTrace(a) <->text390.htm#3851<->TraceAbs :: AbsoluteTrace(a) : FldAlgElt -&gt; FldRatElt
5<->AbsoluteTrace(a) <->text390.htm#3851<->AbsoluteTrace(a) : RngOrdElt -> FldRatElt
5<->TraceAbs(a) : RngOrdElt -> FldRatElt :: AbsoluteTrace(a) <->text390.htm#3851<->TraceAbs(a) : RngOrdElt -> FldRatElt :: AbsoluteTrace(a) : FldAlgElt -&gt; FldRatElt
5<->AbsoluteTrace(a) <->text390.htm#3851<->AbsoluteTrace(a) : FldAlgElt -&gt; FldRatElt
5<->CharacteristicPolynomial(a, R) <->text390.htm#3852<->CharacteristicPolynomial(a, R) : FldAlgElt, Rng -> RngUPolElt
5<->CharacteristicPolynomial(a) <->text390.htm#3852<->CharacteristicPolynomial(a) : RngOrdElt -> RngUPolElt
5<->CharacteristicPolynomial(a, R) <->text390.htm#3852<->CharacteristicPolynomial(a, R) : RngOrdElt, Rng -> RngUPolElt
5<->CharacteristicPolynomial(a) <->text390.htm#3852<->CharacteristicPolynomial(a) : FldAlgElt -&gt; RngUPolElt
5<->AbsoluteCharacteristicPolynomial(a) <->text390.htm#3853<->AbsoluteCharacteristicPolynomial(a) : RngOrdElt -> RngUPolElt
5<->AbsoluteCharacteristicPolynomial(a) <->text390.htm#3853<->AbsoluteCharacteristicPolynomial(a) : FldAlgElt -&gt; RngUPolElt
5<->MinimalPolynomial(a, R) <->text390.htm#3854<->MinimalPolynomial(a, R) : FldAlgElt, Rng -> RngUPolElt
5<->MinimalPolynomial(a) <->text390.htm#3854<->MinimalPolynomial(a) : RngOrdElt -> RngUPolElt
5<->MinimalPolynomial(a, R) <->text390.htm#3854<->MinimalPolynomial(a, R) : RngOrdElt, Rng -> RngUPolElt
5<->MinimalPolynomial(a) <->text390.htm#3854<->MinimalPolynomial(a) : FldAlgElt -&gt; RngUPolElt
5<->AbsoluteMinimalPolynomial(a) <->text390.htm#3855<->AbsoluteMinimalPolynomial(a) : RngOrdElt -> RngUPolElt
5<->AbsoluteMinimalPolynomial(a) <->text390.htm#3855<->AbsoluteMinimalPolynomial(a) : FldAlgElt -&gt; RngUPolElt
5<->RepresentationMatrix(a, R) <->text390.htm#3856<->RepresentationMatrix(a, R) : FldAlgElt, Rng -> AlgMatElt
5<->RepresentationMatrix(a) <->text390.htm#3856<->RepresentationMatrix(a) : RngOrdElt -> AlgMatElt
5<->RepresentationMatrix(a, R) <->text390.htm#3856<->RepresentationMatrix(a, R) : RngOrdElt, Rng -> AlgMatElt
5<->RepresentationMatrix(a) <->text390.htm#3856<->RepresentationMatrix(a) : FldAlgElt -&gt; AlgMatElt
5<->AbsoluteRepresentationMatrix(a) <->text390.htm#3857<->AbsoluteRepresentationMatrix(a) : RngOrdElt -> AlgMatElt
5<->AbsoluteRepresentationMatrix(a) <->text390.htm#3857<->AbsoluteRepresentationMatrix(a) : FldAlgElt -&gt; AlgMatElt
4<->RngOrd_NormsEtc (Example H38E17)<->text390.htm#3858<->RngOrd_NormsEtc (Example H38E17)
4<->Example-NormsEtc :<->text390.htm#3858<->Example-NormsEtc :: RngOrd_NormsEtc (Example H38E17)
3<->norm-trace :<->text390.htm#3847<->norm-trace :: Norm, Trace, and Minimal Polynomial (NUMBER FIELDS AND ORDERS)
3<->other :<->text390.htm#3859<->other :: Other Functions (NUMBER FIELDS AND ORDERS)
5<->Eltseq :: ElementToSequence(a) <->text390.htm#3860<->Eltseq :: ElementToSequence(a) : FldAlgElt -&gt; [ FldAlgElt ]
5<->ElementToSequence(a) <->text390.htm#3860<->ElementToSequence(a) : RngOrdElt -> [ FldOrdElt ]
5<->\nameRngOrd:Eltseq{Eltseq}(a) : RngOrdElt -> [ FldOrdElt ] :: ElementToSequence(a) <->text390.htm#3860<->\nameRngOrd:Eltseq{Eltseq}(a) : RngOrdElt -> [ FldOrdElt ] :: ElementToSequence(a) : FldAlgElt -&gt; [ FldAlgElt ]
5<->ElementToSequence(a) <->text390.htm#3860<->ElementToSequence(a) : FldAlgElt -&gt; [ FldAlgElt ]
5<->Eltseq(E, k) <->text390.htm#3861<->Eltseq(E, k) : FldAlgElt, Rng -> [RngElt]
5<->Eltseq(E, k) <->text390.htm#3861<->Eltseq(E, k) : FldAlgElt, FldAlg -&gt; [RngElt]
5<->Flat(e) <->text390.htm#3862<->Flat(e) : FldAlgElt -&gt; [FldRatElt]
5<->a[i] : FldAlgElt, RngIntElt -> FldAlgElt :: a[i] <->text390.htm#3863<->a[i] : FldAlgElt, RngIntElt -> FldAlgElt :: a[i] : FldAlgElt, RngIntElt -&gt; FldRatElt
5<->a[i] : RngOrdElt, RngIntElt -> FldRatElt :: a[i] <->text390.htm#3863<->a[i] : RngOrdElt, RngIntElt -> FldRatElt :: a[i] : FldAlgElt, RngIntElt -&gt; FldRatElt
5<->a[i] : RngOrdElt, RngIntElt -> FldOrdElt :: a[i] <->text390.htm#3863<->a[i] : RngOrdElt, RngIntElt -> FldOrdElt :: a[i] : FldAlgElt, RngIntElt -&gt; FldRatElt
5<->[] :: a[i] <->text390.htm#3863<->[] :: a[i] : FldAlgElt, RngIntElt -&gt; FldRatElt
5<->ProductRepresentation(a) <->text390.htm#3864<->ProductRepresentation(a) : FldAlgElt -> [ FldAlgElt ], [ RngIntElt ]
5<->ProductRepresentation(a) <->text390.htm#3864<->ProductRepresentation(a) : RngOrdElt -&gt; [ RngOrdElt ], [ RngIntElt ]
5<->PowerProduct :: ProductRepresentation(P, E) <->text390.htm#3865<->PowerProduct :: ProductRepresentation(P, E) : [ FldAlgElt ], [ RngIntElt ] -&gt; FldAlgElt
5<->ProductRepresentation(P, E) <->text390.htm#3865<->ProductRepresentation(P, E) : [ FldAlgElt ], [ RngIntElt ] -&gt; FldAlgElt
5<->Valuation(w, I) <->text390.htm#3866<->Valuation(w, I) : FldAlgElt, RngOrdIdl -> RngIntElt
5<->Valuation(w, I) <->text390.htm#3866<->Valuation(w, I) : RngOrdElt, RngOrdIdl -&gt; RngIntElt
5<->Decomposition(a) <->text390.htm#3867<->Decomposition(a) : FldOrdElt -> SeqEnum[<RngOrdIdl, RngIntElt>]
5<->Decomposition(a) <->text390.htm#3867<->Decomposition(a) : RngOrdElt -&gt; SeqEnum[&lt;RngOrdIdl, RngIntElt&gt;]
5<->Divisors(a) <->text390.htm#3868<->Divisors(a) : RngOrdElt -&gt; SeqEnum[RngOrdElt]
5<->Index(a) <->text390.htm#3869<->Index(a) : RngOrdElt -&gt; RngIntElt
5<->Different(a) <->text390.htm#3870<->Different(a) : RngOrdElt -&gt; RngOrdElt
5<->DegreeOnePrimeIdeals(O, B) <->text390.htm#3871<->DegreeOnePrimeIdeals(O, B) : RngOrd, RngIntElt -&gt; [ RngOrdIdl ]
3<->other :<->text390.htm#3859<->other :: Other Functions (NUMBER FIELDS AND ORDERS)
3<->operation-element :<->text390.htm<->operation-element :: Element Operations (NUMBER FIELDS AND ORDERS)
3<->ideal-class-group :<->text391.htm<->ideal-class-group :: Ideal Class Groups (NUMBER FIELDS AND ORDERS)
5<->ClassGroup(K\col\ \parameters) <->text391.htm#3873<->ClassGroup(K\col\ \parameters) : FldNum -> GrpAb, Map
5<->ClassGroup(O: parameters) <->text391.htm#3873<->ClassGroup(O: parameters) : RngOrd -&gt; GrpAb, Map
5<->PicardGroup :: RingClassGroup(O) <->text391.htm#3874<->PicardGroup :: RingClassGroup(O) : RngOrd -&gt; GrpAb, Map
5<->RingClassGroup(O) <->text391.htm#3874<->RingClassGroup(O) : RngOrd -&gt; GrpAb, Map
5<->ConditionalClassGroup(K) <->text391.htm#3875<->ConditionalClassGroup(K) : FldNum -> GrpAb, Map
5<->ConditionalClassGroup(O) <->text391.htm#3875<->ConditionalClassGroup(O) : RngOrd -&gt; GrpAb, Map
5<->ClassGroupPrimeRepresentatives(O, I) <->text391.htm#3876<->ClassGroupPrimeRepresentatives(O, I) : RngOrd, RngOrdIdl -&gt; Map
5<->ClassNumber(K\col\ \parameters) <->text391.htm#3877<->ClassNumber(K\col\ \parameters) : FldNum ->  RngIntElt
5<->ClassNumber(O: parameters) <->text391.htm#3877<->ClassNumber(O: parameters) : RngOrd -&gt;  RngIntElt
5<->MinkowskiBound(O) <->text391.htm#3878<->MinkowskiBound(O) : RngOrd -> RngIntElt
5<->MinkowskiBound(K) <->text391.htm#3878<->MinkowskiBound(K) : FldNum -&gt; RngIntElt
5<->BachBound(O) <->text391.htm#3879<->BachBound(O) : RngOrd -> RngIntElt
5<->BachBound(K) <->text391.htm#3879<->BachBound(K) : FldNum -&gt; RngIntElt
5<->GRHBound(O) <->text391.htm#3880<->GRHBound(O) : RngOrd -> RngIntElt
5<->GRHBound(K) <->text391.htm#3880<->GRHBound(K) : FldNum -&gt; RngIntElt
5<->FactorBasisVerify(O, a, b) <->text391.htm#3881<->FactorBasisVerify(O, a, b) : RngOrd, RngIntElt, RngIntElt -&gt;
3<->class-group-internals :<->text391.htm#3882<->class-group-internals :: Class Group Internals (NUMBER FIELDS AND ORDERS)
5<->EulerProduct(O, B) <->text391.htm#3883<->EulerProduct(O, B) : RngOrd, RngIntElt -&gt; FldReElt
5<->FactorBasis(O, B) <->text391.htm#3884<->FactorBasis(O, B) : RngOrd, RngIntElt -> [ RngOrdIdl ]
5<->FactorBasis(K, B) <->text391.htm#3884<->FactorBasis(K, B) : FldNum, RngIntElt -&gt; [ RngOrdIdl ]
5<->FactorBasis(O) <->text391.htm#3885<->FactorBasis(O) : RngOrd -&gt; [ RngOrdIdl ], Integer
5<->RelationMatrix(O) <->text391.htm#3886<->RelationMatrix(O) : RngOrd -&gt; ModHomElt
5<->Relations(O) <->text391.htm#3887<->Relations(O) : RngOrd -&gt; ModHomElt
5<->ClassGroupCyclicFactorGenerators(O) <->text391.htm#3888<->ClassGroupCyclicFactorGenerators(O) : RngOrd -&gt; ModHomElt
4<->RngOrd_ClassGroup (Example H38E18)<->text391.htm#3889<->RngOrd_ClassGroup (Example H38E18)
4<->Example-ClassGroup :<->text391.htm#3889<->Example-ClassGroup :: RngOrd_ClassGroup (Example H38E18)
3<->class-group-internals :<->text391.htm#3882<->class-group-internals :: Class Group Internals (NUMBER FIELDS AND ORDERS)
3<->class-group-bounds :<->text391.htm#3890<->class-group-bounds :: Setting the Class Group Bounds (NUMBER FIELDS AND ORDERS)
5<->SetClassGroupBounds(string) <->text391.htm#3891<->SetClassGroupBounds(string) : MonStgElt -&gt;
5<->SetClassGroupBounds(n) <->text391.htm#3892<->SetClassGroupBounds(n) : RngIntElt -&gt;
4<->RngOrd_class-group-bounds (Example H38E19)<->text391.htm#3893<->RngOrd_class-group-bounds (Example H38E19)
4<->Example-class-group-bounds :<->text391.htm#3893<->Example-class-group-bounds :: RngOrd_class-group-bounds (Example H38E19)
3<->class-group-bounds :<->text391.htm#3890<->class-group-bounds :: Setting the Class Group Bounds (NUMBER FIELDS AND ORDERS)
3<->class-group-map-caching :<->text391.htm#3894<->class-group-map-caching :: Class Group Map Caching (NUMBER FIELDS AND ORDERS)
5<->ClassGroupSetUseMemory :: ClassGroupGetUseMemory(O) <->text391.htm#3895<->ClassGroupSetUseMemory :: ClassGroupGetUseMemory(O) : RngOrd -&gt; BoolElt
5<->ClassGroupGetUseMemory(O) <->text391.htm#3895<->ClassGroupGetUseMemory(O) : RngOrd -&gt; BoolElt
3<->class-group-map-caching :<->text391.htm#3894<->class-group-map-caching :: Class Group Map Caching (NUMBER FIELDS AND ORDERS)
3<->ideal-class-group :<->text391.htm<->ideal-class-group :: Ideal Class Groups (NUMBER FIELDS AND ORDERS)
3<->unit-group :<->text392.htm<->unit-group :: Unit Groups (NUMBER FIELDS AND ORDERS)
5<->UnitRank(K) <->text392.htm#3897<->UnitRank(K) : FldAlg -> RngIntElt
5<->UnitRank(O) <->text392.htm#3897<->UnitRank(O) : RngOrd -&gt; RngIntElt
5<->TorsionUnitGroup(K) <->text392.htm#3898<->TorsionUnitGroup(K) : FldNum -> GrpAb, Map
5<->TorsionUnitGroup(O) <->text392.htm#3898<->TorsionUnitGroup(O) : RngOrd -&gt; GrpAb, Map
5<->MultiplicativeGroup :: UnitGroup(O) <->text392.htm#3899<->MultiplicativeGroup :: UnitGroup(O) : RngOrd -&gt; GrpAb, Map
5<->UnitGroup(O) <->text392.htm#3899<->UnitGroup(O) : RngOrd -&gt; GrpAb, Map
5<->MultiplicativeGroup :: UnitGroup(K) <->text392.htm#3900<->MultiplicativeGroup :: UnitGroup(K) : FldNum -&gt; GrpAb, Map
5<->UnitGroup(K) <->text392.htm#3900<->UnitGroup(K) : FldNum -&gt; GrpAb, Map
5<->IndependentUnits(K) <->text392.htm#3901<->IndependentUnits(K) : FldNum -> GrpAb, Map
5<->IndependentUnits(O) <->text392.htm#3901<->IndependentUnits(O) : RngOrd -&gt; GrpAb, Map
5<->pFundamentalUnits(K, p) <->text392.htm#3902<->pFundamentalUnits(K, p) : FldNum, RngIntElt -> GrpAb, Map
5<->pFundamentalUnits(O, p) <->text392.htm#3902<->pFundamentalUnits(O, p) : RngOrd, RngIntElt -&gt; GrpAb, Map
5<->UnitGroupAsSubgroup(O) <->text392.htm#3903<->UnitGroupAsSubgroup(O) : RngOrd -&gt; GrpAb
5<->MergeUnits(O, a) <->text392.htm#3904<->MergeUnits(O, a) : RngOrd, RngOrdElt -> BoolElt
5<->MergeUnits(K, a) <->text392.htm#3904<->MergeUnits(K, a) : FldNum, FldNumElt -&gt; BoolElt
4<->RngOrd_UnitGroup (Example H38E20)<->text392.htm#3905<->RngOrd_UnitGroup (Example H38E20)
4<->Example-UnitGroup :<->text392.htm#3905<->Example-UnitGroup :: RngOrd_UnitGroup (Example H38E20)
5<->IsExceptionalUnit(u) <->text392.htm#3906<->IsExceptionalUnit(u) : RngOrdElt -&gt; BoolElt
5<->ExceptionalUnitOrbit(u) <->text392.htm#3907<->ExceptionalUnitOrbit(u) : RngOrdElt -&gt; [ RngOrdElt ]
5<->ExceptionalUnits(O) <->text392.htm#3908<->ExceptionalUnits(O) : RngOrd -&gt; [ RngOrdElt ]
3<->unit-group :<->text392.htm<->unit-group :: Unit Groups (NUMBER FIELDS AND ORDERS)
3<->equation :<->text393.htm<->equation :: Diophantine Equations (NUMBER FIELDS AND ORDERS)
3<->norm-equation :<->text393.htm#3910<->norm-equation :: Norm Equations (NUMBER FIELDS AND ORDERS)
5<->NormEquation(O, m) <->text393.htm#3911<->NormEquation(O, m) : RngOrd, RngOrdElt -> BoolElt, [ RngOrdElt ]
5<->NormEquation(O, m) <->text393.htm#3911<->NormEquation(O, m) : RngOrd, RngIntElt -&gt; BoolElt, [ RngOrdElt ]
5<->NormEquation(F, m) <->text393.htm#3912<->NormEquation(F, m) : FldAlg, FldAlgElt -> BoolElt, [ FldAlgElt ]
5<->NormEquation(F, m) <->text393.htm#3912<->NormEquation(F, m) : FldAlg, FldRatElt -> BoolElt, [ FldAlgElt ]
5<->NormEquation(F, m) <->text393.htm#3912<->NormEquation(F, m) : FldAlg, RngIntElt -&gt; BoolElt, [ FldAlgElt ]
5<->NormEquation(m, N)<->text393.htm#3913<->NormEquation(m, N): RngElt, Map -&gt; BoolElt, RngElt
5<->IntegralNormEquation(a, N, O) <->text393.htm#3914<->IntegralNormEquation(a, N, O) : RngElt, Map, RngOrd -&gt; BoolElt, [RngOrdElt]
5<->SimNEQ(K, e, f) <->text393.htm#3915<->SimNEQ(K, e, f) : FldNum, FldNumElt, FldNumElt -&gt; BoolElt, [FldNumElt]
4<->RngOrd_norm-equation (Example H38E21)<->text393.htm#3916<->RngOrd_norm-equation (Example H38E21)
4<->Example-norm-equation :<->text393.htm#3916<->Example-norm-equation :: RngOrd_norm-equation (Example H38E21)
3<->norm-equation :<->text393.htm#3910<->norm-equation :: Norm Equations (NUMBER FIELDS AND ORDERS)
3<->thue :<->text393.htm#3917<->thue :: Thue Equations (NUMBER FIELDS AND ORDERS)
5<->Thue(f) <->text393.htm#3918<->Thue(f) : RngUPolElt -&gt; Thue
5<->Thue(O) <->text393.htm#3919<->Thue(O) : RngOrd -&gt; Thue
5<->Evaluate(t, S) <->text393.htm#3920<->Evaluate(t, S) : Thue, [ RngIntElt ] -> RngIntElt
5<->Evaluate(t, a, b) <->text393.htm#3920<->Evaluate(t, a, b) : Thue, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Solutions(t, a) <->text393.htm#3921<->Solutions(t, a) : Thue, RngIntElt -&gt; [ [ RngIntElt, RngIntElt ] ]
4<->RngOrd_thue (Example H38E22)<->text393.htm#3922<->RngOrd_thue (Example H38E22)
4<->Example-thue :<->text393.htm#3922<->Example-thue :: RngOrd_thue (Example H38E22)
3<->thue :<->text393.htm#3917<->thue :: Thue Equations (NUMBER FIELDS AND ORDERS)
3<->unit-equation :<->text393.htm#3923<->unit-equation :: Unit Equations (NUMBER FIELDS AND ORDERS)
5<->UnitEquation(a, b, c) <->text393.htm#3924<->UnitEquation(a, b, c) : FldNumElt, FldNumElt, FldNumElt -&gt; [ ModHomElt ]
4<->RngOrd_uniteq (Example H38E23)<->text393.htm#3925<->RngOrd_uniteq (Example H38E23)
4<->Example-uniteq :<->text393.htm#3925<->Example-uniteq :: RngOrd_uniteq (Example H38E23)
3<->unit-equation :<->text393.htm#3923<->unit-equation :: Unit Equations (NUMBER FIELDS AND ORDERS)
3<->index-form :<->text393.htm#3926<->index-form :: Index Form Equations (NUMBER FIELDS AND ORDERS)
5<->IndexFormEquation(O, k) <->text393.htm#3927<->IndexFormEquation(O, k) : RngOrd, RngIntElt -&gt; [ RngOrdElt ]
4<->RngOrd_index-form (Example H38E24)<->text393.htm#3928<->RngOrd_index-form (Example H38E24)
4<->Example-index-form :<->text393.htm#3928<->Example-index-form :: RngOrd_index-form (Example H38E24)
3<->index-form :<->text393.htm#3926<->index-form :: Index Form Equations (NUMBER FIELDS AND ORDERS)
3<->equation :<->text393.htm<->equation :: Diophantine Equations (NUMBER FIELDS AND ORDERS)
3<->ideal :<->text394.htm<->ideal :: Ideals and Quotients (NUMBER FIELDS AND ORDERS)
3<->ideal-creation :<->text394.htm#3930<->ideal-creation :: Creation of Ideals in Orders (NUMBER FIELDS AND ORDERS)
5<->O * x <->text394.htm#3931<->O * x : RngElt, RngOrd -> RngOrdFracIdl
5<->x * O <->text394.htm#3931<->x * O : RngElt, RngOrd -&gt; RngOrdFracIdl
5<->F !! I <->text394.htm#3932<->F !! I : FldOrd, RngOrdFracIdl -> RngOrdFracIdl
5<->O !! I <->text394.htm#3932<->O !! I : RngOrd, RngOrdFracIdl -> RngOrdIdl
5<->F !! I <->text394.htm#3932<->F !! I : RngOrd, RngInt -&gt; RngOrdFracIdl
5<->ideal <->text394.htm#3933<->ideal<O | x> : RngOrd, RngIntElt -> RngOrdIdl
5<->ideal <->text394.htm#3933<->ideal<O | M, d> : RngOrd, AlgMatElt, RngIntElt -> RngOrdFracIdl
5<->ideal <->text394.htm#3933<->ideal<O | M, d> : RngOrd, ModDed, RngIntElt -> RngOrdFracIdl
5<->ideal <->text394.htm#3933<->ideal<O | M, I1, ..., In> : RngOrd, AlgMatElt, RngOrdFracIdl, ..., RngOrdFracIdl -> RngOrdFracIdl
5<->ideal <->text394.htm#3933<->ideal<O | M, [I1, ..., In]> : RngOrd, AlgMatElt, [RngOrdFracIdl] -> RngOrdFracIdl
5<->ideal< O | a1, a2, ... , am > <->text394.htm#3933<->ideal&lt; O | a<sub>1</sub>, a<sub>2</sub>, ... , a<sub>m</sub> &gt; : RngOrd, RngElt, ..., RngElt -&gt; RngOrdFracIdl
4<->RngOrd_Ideals (Example H38E25)<->text394.htm#3934<->RngOrd_Ideals (Example H38E25)
4<->Example-Ideals :<->text394.htm#3934<->Example-Ideals :: RngOrd_Ideals (Example H38E25)
3<->ideal-creation :<->text394.htm#3930<->ideal-creation :: Creation of Ideals in Orders (NUMBER FIELDS AND ORDERS)
3<->invariant :<->text394.htm#3935<->invariant :: Invariants (NUMBER FIELDS AND ORDERS)
5<->Order(I) <->text394.htm#3936<->Order(I) : RngOrdFracIdl -&gt; RngOrd
5<->Denominator(I) <->text394.htm#3937<->Denominator(I) : RngOrdFracIdl -&gt; RngIntElt
5<->PrimitiveElement(I) <->text394.htm#3938<->PrimitiveElement(I) : RngOrdFracIdl -> FldOrdElt
5<->UniformizingElement :: PrimitiveElement(I) <->text394.htm#3938<->UniformizingElement :: PrimitiveElement(I) : RngOrdIdl -&gt; RngOrdElt
5<->PrimitiveElement(I) <->text394.htm#3938<->PrimitiveElement(I) : RngOrdIdl -&gt; RngOrdElt
5<->Index(O, I) <->text394.htm#3939<->Index(O, I) : RngOrd, RngOrdIdl -&gt; RngIntElt
5<->Norm(I) <->text394.htm#3940<->Norm(I) : RngOrdFracIdl -> FldRatElt
5<->Norm(I) <->text394.htm#3940<->Norm(I) : RngOrdFracIdl -> RngOrdFracIdl
5<->Norm(I) <->text394.htm#3940<->Norm(I) : RngOrdIdl -&gt; RngIntElt
5<->MinimalInteger(I) <->text394.htm#3941<->MinimalInteger(I) : RngOrdIdl -&gt; RngElt
5<->Minimum(I) <->text394.htm#3942<->Minimum(I) : RngOrdFracIdl -&gt; RngElt
5<->AbsoluteNorm(I) <->text394.htm#3943<->AbsoluteNorm(I) : RngOrdFracIdl -> FldRatElt
5<->NormAbs :: AbsoluteNorm(I) <->text394.htm#3943<->NormAbs :: AbsoluteNorm(I) : RngOrdIdl -&gt; RngIntElt
5<->NormAbs(I) : RngOrdFracIdl -> FldRatElt :: AbsoluteNorm(I) <->text394.htm#3943<->NormAbs(I) : RngOrdFracIdl -> FldRatElt :: AbsoluteNorm(I) : RngOrdIdl -&gt; RngIntElt
5<->AbsoluteNorm(I) <->text394.htm#3943<->AbsoluteNorm(I) : RngOrdIdl -&gt; RngIntElt
5<->CoefficientHeight(I) <->text394.htm#3944<->CoefficientHeight(I) : RngOrdFracIdl -> RngIntElt
5<->CoefficientHeight(I) <->text394.htm#3944<->CoefficientHeight(I) : RngOrdIdl -&gt; RngIntElt
5<->CoefficientLength(I) <->text394.htm#3945<->CoefficientLength(I) : RngOrdFracIdl -> RngIntElt
5<->CoefficientLength(I) <->text394.htm#3945<->CoefficientLength(I) : RngOrdIdl -&gt; RngIntElt
5<->RamificationDegree :: RamificationIndex(I, p) <->text394.htm#3946<->RamificationDegree :: RamificationIndex(I, p) : RngOrdIdl, RngIntElt -&gt; RngIntElt
5<->RamificationIndex(I, p) <->text394.htm#3946<->RamificationIndex(I, p) : RngOrdIdl, RngIntElt -&gt; RngIntElt
5<->RamificationIndex :: RamificationDegree(I) <->text394.htm#3947<->RamificationIndex :: RamificationDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->RamificationDegree(I) <->text394.htm#3947<->RamificationDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->AbsoluteRamificationIndex :: AbsoluteRamificationDegree(I) <->text394.htm#3948<->AbsoluteRamificationIndex :: AbsoluteRamificationDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->AbsoluteRamificationDegree(I) <->text394.htm#3948<->AbsoluteRamificationDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->ResidueClassField(I) <->text394.htm#3949<->ResidueClassField(I) : RngOrdIdl -> FldFin, Map
5<->ResidueClassField(O, I) <->text394.htm#3949<->ResidueClassField(O, I) : RngOrd, RngOrdIdl -&gt; FldFin, Map
5<->InertiaDegree :: Degree(I) <->text394.htm#3950<->InertiaDegree :: Degree(I) : RngOrdIdl -&gt; RngIntElt
5<->Degree(I) <->text394.htm#3950<->Degree(I) : RngOrdIdl -&gt; RngIntElt
5<->AbsoluteInertiaIndex :: AbsoluteInertiaDegree(I) <->text394.htm#3951<->AbsoluteInertiaIndex :: AbsoluteInertiaDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->AbsoluteInertiaDegree(I) <->text394.htm#3951<->AbsoluteInertiaDegree(I) : RngOrdIdl -&gt; RngIntElt
5<->Valuation(I, p) <->text394.htm#3952<->Valuation(I, p) : RngOrdFracIdl, RngOrdIdl -&gt; RngIntElt
5<->Content(I) <->text394.htm#3953<->Content(I) : RngOrdFracIdl -&gt; RngIntElt
4<->RngOrd_ideal-invar (Example H38E26)<->text394.htm#3954<->RngOrd_ideal-invar (Example H38E26)
4<->Example-ideal-invar :<->text394.htm#3954<->Example-ideal-invar :: RngOrd_ideal-invar (Example H38E26)
3<->invariant :<->text394.htm#3935<->invariant :: Invariants (NUMBER FIELDS AND ORDERS)
3<->basis :<->text394.htm#3955<->basis :: Basis Representation (NUMBER FIELDS AND ORDERS)
5<->Basis(I) <->text394.htm#3956<->Basis(I) : RngOrdFracIdl -> [FldOrdElt]
5<->Basis(I, R) <->text394.htm#3956<->Basis(I, R) : RngOrdFracIdl, Rng -> [RngElt]
5<->Basis(I) <->text394.htm#3956<->Basis(I) : RngOrdIdl -&gt; [RngOrdElt]
5<->BasisMatrix(I) <->text394.htm#3957<->BasisMatrix(I) : RngOrdFracIdl -&gt; MtrxSpcElt
5<->TransformationMatrix(I) <->text394.htm#3958<->TransformationMatrix(I) : RngOrdFracIdl -&gt; MtrxSpcElt, RngIntElt
5<->CoefficientIdeals(I) <->text394.htm#3959<->CoefficientIdeals(I) : RngOrdFracIdl -&gt; [RngOrdFracIdl]
4<->RngOrd_ideal-basis (Example H38E27)<->text394.htm#3960<->RngOrd_ideal-basis (Example H38E27)
4<->Example-ideal-basis :<->text394.htm#3960<->Example-ideal-basis :: RngOrd_ideal-basis (Example H38E27)
5<->Module(I) <->text394.htm#3961<->Module(I) : RngOrdFracIdl -&gt; ModDed, Map
3<->basis :<->text394.htm#3955<->basis :: Basis Representation (NUMBER FIELDS AND ORDERS)
3<->TwoElement :<->text394.htm#3962<->TwoElement :: Two--Element Presentations (NUMBER FIELDS AND ORDERS)
5<->Generators(I) <->text394.htm#3963<->Generators(I) : RngOrdFracIdl -> [ FldOrdElt ]
5<->Generators(I) <->text394.htm#3963<->Generators(I) : RngOrdIdl -&gt; [ RngOrdElt ]
5<->TwoElement(I) <->text394.htm#3964<->TwoElement(I) : RngOrdFracIdl -&gt; FldOrdElt, FldOrdElt
5<->TwoElementNormal(I) <->text394.htm#3965<->TwoElementNormal(I) : RngOrdIdl -&gt; RngOrdElt, RngOrdElt, RngIntElt
4<->RngOrd_ideal-two (Example H38E28)<->text394.htm#3966<->RngOrd_ideal-two (Example H38E28)
4<->Example-ideal-two :<->text394.htm#3966<->Example-ideal-two :: RngOrd_ideal-two (Example H38E28)
3<->TwoElement :<->text394.htm#3962<->TwoElement :: Two--Element Presentations (NUMBER FIELDS AND ORDERS)
3<->ideal-Boolean :<->text394.htm#3967<->ideal-Boolean :: Predicates on Ideals (NUMBER FIELDS AND ORDERS)
5<->IsIntegral(I) <->text394.htm#3968<->IsIntegral(I) : RngOrdFracIdl -&gt; BoolElt
5<->IsZero(I) <->text394.htm#3969<->IsZero(I) : RngOrdFracIdl -&gt; BoolElt
5<->IsOne(I) <->text394.htm#3970<->IsOne(I) : RngOrdFracIdl -> BoolElt
5<->IsOne(I) <->text394.htm#3970<->IsOne(I) : RngOrdIdl -&gt; BoolElt
5<->IsPrime(I) <->text394.htm#3971<->IsPrime(I) : RngOrdFracIdl -> BoolElt
5<->IsPrime(I) <->text394.htm#3971<->IsPrime(I) : RngOrdIdl -&gt; BoolElt, RngOrdIdl
5<->IsPrincipal(I) <->text394.htm#3972<->IsPrincipal(I) : RngOrdFracIdl -&gt; BoolElt, FldOrdElt
5<->IsRamified(P) <->text394.htm#3973<->IsRamified(P) : RngOrdIdl -&gt; BoolElt
5<->IsRamified(P, O) <->text394.htm#3974<->IsRamified(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsRamified(P, O) <->text394.htm#3974<->IsRamified(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsTotallyRamified(P) <->text394.htm#3975<->IsTotallyRamified(P) : RngOrdIdl -&gt; BoolElt
5<->IsTotallyRamified(P, O) <->text394.htm#3976<->IsTotallyRamified(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsTotallyRamified(P, O) <->text394.htm#3976<->IsTotallyRamified(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsTotallyRamified(K) <->text394.htm#3977<->IsTotallyRamified(K) : FldAlg -&gt; BoolElt
5<->IsTotallyRamified(O) <->text394.htm#3978<->IsTotallyRamified(O) : RngOrd -&gt; BoolElt
5<->IsWildlyRamified(P) <->text394.htm#3979<->IsWildlyRamified(P) : RngOrdIdl -&gt; BoolElt
5<->IsWildlyRamified(P, O) <->text394.htm#3980<->IsWildlyRamified(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsWildlyRamified(P, O) <->text394.htm#3980<->IsWildlyRamified(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsTamelyRamified(P) <->text394.htm#3981<->IsTamelyRamified(P) : RngOrdIdl -&gt; BoolElt
5<->IsTamelyRamified(P, O) <->text394.htm#3982<->IsTamelyRamified(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsTamelyRamified(P, O) <->text394.htm#3982<->IsTamelyRamified(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsUnramified(P) <->text394.htm#3983<->IsUnramified(P) : RngOrdIdl -&gt; BoolElt
5<->IsUnramified(P, O) <->text394.htm#3984<->IsUnramified(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsUnramified(P, O) <->text394.htm#3984<->IsUnramified(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsInert(P) <->text394.htm#3985<->IsInert(P) : RngOrdIdl -&gt; BoolElt
5<->IsInert(P, O) <->text394.htm#3986<->IsInert(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsInert(P, O) <->text394.htm#3986<->IsInert(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsSplit(P) <->text394.htm#3987<->IsSplit(P) : RngOrdIdl -&gt; BoolElt
5<->IsSplit(P, O) <->text394.htm#3988<->IsSplit(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsSplit(P, O) <->text394.htm#3988<->IsSplit(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
5<->IsTotallySplit(P) <->text394.htm#3989<->IsTotallySplit(P) : RngOrdIdl -&gt; BoolElt
5<->IsTotallySplit(P, O) <->text394.htm#3990<->IsTotallySplit(P, O) : RngIntElt, RngOrd -> BoolElt
5<->IsTotallySplit(P, O) <->text394.htm#3990<->IsTotallySplit(P, O) : RngOrdIdl, RngOrd -&gt; BoolElt
3<->ideal-Boolean :<->text394.htm#3967<->ideal-Boolean :: Predicates on Ideals (NUMBER FIELDS AND ORDERS)
3<->ideal-arithmetic :<->text394.htm#3991<->ideal-arithmetic :: Ideal Arithmetic (NUMBER FIELDS AND ORDERS)
5<->I * J <->text394.htm#3992<->I * J : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->I * x <->text394.htm#3993<->I * x : RngOrdFracIdl, RngElt -> RngOrdFracIdl
5<->x * I <->text394.htm#3993<->x * I : RngElt, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->\&* L <->text394.htm#3994<->\&* L : \lbrace RngOrdFracIdl \rbrace -> RngOrdFracIdl
5<->&* :: &* L <->text394.htm#3994<->&* :: &amp;* L : [RngOrdFracIdl] -&gt; RngOrdFracIdl
5<->I div J <->text394.htm#3995<->I div J : RngOrdIdl, RngOrdIdl -&gt; RngOrdIdl
5<->div :: I / J <->text394.htm#3996<->div :: I / J : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->I / J <->text394.htm#3996<->I / J : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->I / x <->text394.htm#3997<->I / x : RngOrdFracIdl, RngElt -&gt; RngOrdFracIdl
5<->I + J <->text394.htm#3998<->I + J : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->I ^ k <->text394.htm#3999<->I ^ k : RngOrdFracIdl, RngIntElt -&gt; RngOrdFracIdl
5<->I eq J <->text394.htm#4000<->I eq J : RngOrdFracIdl, RngOrdFracIdl -&gt; BoolElt
5<->I subset J <->text394.htm#4001<->I subset J : RngOrdIdl, RngOrdIdl -&gt; BoolElt
5<->E in I<->text394.htm#4002<->E in I: RngOrdElt, RngOrdFracIdl -> BoolElt
5<->E in I<->text394.htm#4002<->E in I: FldAlgElt, RngOrdFracIdl -> BoolElt
5<->E in I<->text394.htm#4002<->E in I: RngOrdElt, RngOrdIdl -&gt; BoolElt
5<->Lcm :: LCM(I, J) <->text394.htm#4003<->Lcm :: LCM(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->LeastCommonMultiple :: LCM(I, J) <->text394.htm#4003<->LeastCommonMultiple :: LCM(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->LCM(I, J) <->text394.htm#4003<->LCM(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->Gcd :: GCD(I, J) <->text394.htm#4004<->Gcd :: GCD(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->GreatestCommonDivisor :: GCD(I, J) <->text394.htm#4004<->GreatestCommonDivisor :: GCD(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->GCD(I, J) <->text394.htm#4004<->GCD(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->Content(M) <->text394.htm#4005<->Content(M) : Mtrx -&gt; RngOrdFracIdl
5<->I meet J <->text394.htm#4006<->I meet J : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->\&meet\ S <->text394.htm#4007<->\&meet\ S : \lbrace RngOrdFracIdl \rbrace -> RngOrdFracIdl
5<->&meet :: &meet S <->text394.htm#4007<->&meet :: &amp;meet S : [RngOrdFracIdl] -&gt; RngOrdFracIdl
5<->R meet I <->text394.htm#4008<->R meet I : Rng, RngOrdFracIdl -> Any
5<->I meet R <->text394.htm#4008<->I meet R : RngOrdFracIdl, Rng -&gt; Any
5<->a mod I <->text394.htm#4009<->a mod I : RngOrdElt, RngOrdIdl -&gt; RngOrdElt
5<->InverseMod(E, M) <->text394.htm#4010<->InverseMod(E, M) : RngOrdElt, RngOrdIdl -> RngOrdElt
5<->Modinv :: InverseMod(E, M) <->text394.htm#4010<->Modinv :: InverseMod(E, M) : RngOrdElt, RngIntElt -&gt; RngOrdElt
5<->Modinv(E, M) : RngOrdElt, RngIntElt -> RngOrdElt :: InverseMod(E, M) <->text394.htm#4010<->Modinv(E, M) : RngOrdElt, RngIntElt -> RngOrdElt :: InverseMod(E, M) : RngOrdElt, RngIntElt -&gt; RngOrdElt
5<->InverseMod(E, M) <->text394.htm#4010<->InverseMod(E, M) : RngOrdElt, RngIntElt -&gt; RngOrdElt
5<->IdealQuotient :: ColonIdeal(I, J) <->text394.htm#4011<->IdealQuotient :: ColonIdeal(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->ColonIdeal(I, J) <->text394.htm#4011<->ColonIdeal(I, J) : RngOrdFracIdl, RngOrdFracIdl -&gt; RngOrdFracIdl
5<->IntegralSplit(I) <->text394.htm#4012<->IntegralSplit(I) : RngOrdFracIdl -&gt; RngOrdIdl, RngElt
5<->Different(I) <->text394.htm#4013<->Different(I) : RngOrdFracIdl -&gt; RngOrdFracIdl
5<->Codifferent(I) <->text394.htm#4014<->Codifferent(I) : RngOrdFracIdl -&gt; RngOrdFracIdl
3<->ideal-arithmetic :<->text394.htm#3991<->ideal-arithmetic :: Ideal Arithmetic (NUMBER FIELDS AND ORDERS)
3<->roots :<->text394.htm#4015<->roots :: Roots of Ideals (NUMBER FIELDS AND ORDERS)
5<->Root(I, k) <->text394.htm#4016<->Root(I, k) : RngOrdFracIdl, RngIntElt -&gt; RngOrdFracIdl
5<->IsPower(I, k) <->text394.htm#4017<->IsPower(I, k) : RngOrdFracIdl, RngIntElt -&gt; BoolElt, RngOrdFracIdl
5<->Sqrt :: SquareRoot(I) <->text394.htm#4018<->Sqrt :: SquareRoot(I) : RngOrdFracIdl -&gt; RngOrdFracIdl
5<->SquareRoot(I) <->text394.htm#4018<->SquareRoot(I) : RngOrdFracIdl -&gt; RngOrdFracIdl
5<->IsSquare(I) <->text394.htm#4019<->IsSquare(I) : RngOrdFracIdl -&gt; BoolElt, RngOrdFracIdl
3<->roots :<->text394.htm#4015<->roots :: Roots of Ideals (NUMBER FIELDS AND ORDERS)
3<->factorization :<->text394.htm#4020<->factorization :: Factorization and Primes (NUMBER FIELDS AND ORDERS)
5<->Decomposition(O, p) <->text394.htm#4021<->Decomposition(O, p) : RngOrd, RngOrdIdl -> [ <RngOrdIdl, RngIntElt> ]
5<->Decomposition(O, p) <->text394.htm#4021<->Decomposition(O, p) : RngOrd, RngIntElt -&gt; [&lt;RngOrdIdl, RngIntElt&gt;]
5<->DecompositionType(O, p) <->text394.htm#4022<->DecompositionType(O, p) : FldAlg, RngIntElt -> [<RngIntElt, RngIntElt>]
5<->DecompositionType(O, p) <->text394.htm#4022<->DecompositionType(O, p) : FldAlg, RngOrdIdl -> [<RngIntElt, RngIntElt>]
5<->DecompositionType(O, p) <->text394.htm#4022<->DecompositionType(O, p) : RngOrd, RngOrdIdl -> [ <RngIntElt, RngIntElt> ]
5<->DecompositionType(O, p) <->text394.htm#4022<->DecompositionType(O, p) : RngOrd, RngIntElt -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->Factorisation :: Factorization(I) <->text394.htm#4023<->Factorisation :: Factorization(I) : RngOrdFracIdl -&gt; [&lt;RngOrdIdl, RngIntElt&gt;]
5<->Factorization(I) <->text394.htm#4023<->Factorization(I) : RngOrdFracIdl -&gt; [&lt;RngOrdIdl, RngIntElt&gt;]
5<->Divisors(I) <->text394.htm#4024<->Divisors(I) : RngOrdIdl -&gt; [&lt;RngOrdIdl, RngIntElt&gt;]
5<->Support(I) <->text394.htm#4025<->Support(I) : RngOrdFracIdl -&gt; RngOrdIdl
5<->Support(L) <->text394.htm#4026<->Support(L) : [FldAlgElt] -> RngOrdIdl
5<->Support(L) <->text394.htm#4026<->Support(L) : [RngOrdFracIdl] -&gt; RngOrdIdl
5<->CoprimeBasis(L) <->text394.htm#4027<->CoprimeBasis(L) : [RngOrdFracIdl] -&gt; RngOrdIdl
5<->CoprimeBasisInsert(~L, I) <->text394.htm#4028<->CoprimeBasisInsert(~L, I) : [RngOrdIdl], RngOrdFracIdl  -&gt;
5<->PowerProduct(B, E) <->text394.htm#4029<->PowerProduct(B, E) : [RngOrdFracIdl], [RngIntElt] -&gt; RngOrdFracIdl
3<->factorization :<->text394.htm#4020<->factorization :: Factorization and Primes (NUMBER FIELDS AND ORDERS)
3<->ideal-other :<->text394.htm#4030<->ideal-other :: Other Ideal Operations (NUMBER FIELDS AND ORDERS)
5<->ChineseRemainderTheorem(X, M) <->text394.htm#4031<->ChineseRemainderTheorem(X, M) : SeqEnum[RngOrdElt], SeqEnum[RngOrdIdl] -> RngOrdElt
5<->CRT :: ChineseRemainderTheorem(I1, I2, e1, e2) <->text394.htm#4031<->CRT :: ChineseRemainderTheorem(I1, I2, e1, e2) : RngOrdIdl, RngOrdIdl, RngOrdElt, RngOrdElt -&gt; RngOrdElt
5<->CRT(X, M) : SeqEnum[RngOrdElt], SeqEnum[RngOrdIdl] -> RngOrdElt :: ChineseRemainderTheorem(I1, I2, e1, e2) <->text394.htm#4031<->CRT(X, M) : SeqEnum[RngOrdElt], SeqEnum[RngOrdIdl] -> RngOrdElt :: ChineseRemainderTheorem(I1, I2, e1, e2) : RngOrdIdl, RngOrdIdl, RngOrdElt, RngOrdElt -&gt; RngOrdElt
5<->ChineseRemainderTheorem(I1, I2, e1, e2) <->text394.htm#4031<->ChineseRemainderTheorem(I1, I2, e1, e2) : RngOrdIdl, RngOrdIdl, RngOrdElt, RngOrdElt -&gt; RngOrdElt
5<->ChineseRemainderTheorem :: CRT(I1, L1, e1, L2) <->text394.htm#4032<->ChineseRemainderTheorem :: CRT(I1, L1, e1, L2) : RngOrdIdl, [RngIntElt], RngOrdElt, [RngIntElt] -&gt; RngOrdElt
5<->CRT(I1, L1, e1, L2) <->text394.htm#4032<->CRT(I1, L1, e1, L2) : RngOrdIdl, [RngIntElt], RngOrdElt, [RngIntElt] -&gt; RngOrdElt
5<->WeakApproximation(I, V) <->text394.htm#4033<->WeakApproximation(I, V) : [RngOrdIdl], [RngIntElt] -&gt; FldOrdElt
5<->Idempotents(I, J) <->text394.htm#4034<->Idempotents(I, J) : RngOrdIdl, RngOrdIdl -&gt; BoolElt, RngOrdElt, RngOrdElt
5<->MakeCoprime :: CoprimeRepresentative(I, J) <->text394.htm#4035<->MakeCoprime :: CoprimeRepresentative(I, J) : RngOrdIdl, RngOrdIdl -&gt; FldOrdElt
5<->CoprimeRepresentative(I, J) <->text394.htm#4035<->CoprimeRepresentative(I, J) : RngOrdIdl, RngOrdIdl -&gt; FldOrdElt
5<->ClassRepresentative(I) <->text394.htm#4036<->ClassRepresentative(I) : RngOrdFracIdl -&gt; RngOrdFracIdl
5<->\nameRngOrd:SUnitGroup{SUnitGroup}(S) <->text394.htm#4037<->\nameRngOrd:SUnitGroup{SUnitGroup}(S) : [ RngOrdIdl ] -> GrpAb, Map
5<->SUnitGroup(I) <->text394.htm#4037<->SUnitGroup(I) : RngOrdFracIdl -&gt; GrpAb, Map
4<->RngOrd_S-Units (Example H38E29)<->text394.htm#4038<->RngOrd_S-Units (Example H38E29)
4<->Example-S-Units :<->text394.htm#4038<->Example-S-Units :: RngOrd_S-Units (Example H38E29)
5<->SUnitAction(SU, Act, S) <->text394.htm#4039<->SUnitAction(SU, Act, S) : Map, Map, SeqEnum[RngOrdIdl] -&gt; Map
5<->SUnitAction(SU, Act, S) <->text394.htm#4040<->SUnitAction(SU, Act, S) : Map, SeqEnum[Map], SeqEnum[RngOrdIdl] -&gt; [Map]
5<->SUnitDiscLog(SU, L, S) <->text394.htm#4041<->SUnitDiscLog(SU, L, S) : Map, SeqEnum[FldAlgElt], SeqEnum[RngOrdIdl] -> GrpAbElt
5<->SUnitDiscLog(SU, x, S) <->text394.htm#4041<->SUnitDiscLog(SU, x, S) : Map, FldAlgElt, SeqEnum[RngOrdIdl] -&gt; GrpAbElt
4<->RngOrd_S-Units, advanced (Example H38E30)<->text394.htm#4042<->RngOrd_S-Units, advanced (Example H38E30)
4<->Example-S-Units, advanced :<->text394.htm#4042<->Example-S-Units, advanced :: RngOrd_S-Units, advanced (Example H38E30)
3<->ideal-other :<->text394.htm#4030<->ideal-other :: Other Ideal Operations (NUMBER FIELDS AND ORDERS)
3<->quotient-ring :<->text394.htm#4043<->quotient-ring :: Quotient Rings (NUMBER FIELDS AND ORDERS)
3<->orderq :<->text394.htm#4044<->orderq :: Operations on Quotient Rings (NUMBER FIELDS AND ORDERS)
5<->quo <->text394.htm#4045<->quo< O | M > : RngOrd, ModDed -> RngOrdRes
5<->quo <->text394.htm#4045<->quo< O | M > : RngOrd, AlgMatElt -> RngOrdRes
5<->quo <->text394.htm#4045<->quo< O | S > : RngOrd, RngElt, ..., RngElt -> RngOrdRes
5<->quo< O | I > <->text394.htm#4045<->quo&lt; O | I &gt; : RngOrd, RngOrdIdl -&gt; RngOrdRes
5<->MultiplicativeGroup :: UnitGroup(OQ) <->text394.htm#4046<->MultiplicativeGroup :: UnitGroup(OQ) : RngOrdRes -&gt; GrpAb, Map
5<->UnitGroup(OQ) <->text394.htm#4046<->UnitGroup(OQ) : RngOrdRes -&gt; GrpAb, Map
5<->Modulus(OQ) <->text394.htm#4047<->Modulus(OQ) : RngOrdRes -&gt; RngOrdIdl
4<->RngOrd_quotient (Example H38E31)<->text394.htm#4048<->RngOrd_quotient (Example H38E31)
4<->Example-quotient :<->text394.htm#4048<->Example-quotient :: RngOrd_quotient (Example H38E31)
3<->orderq :<->text394.htm#4044<->orderq :: Operations on Quotient Rings (NUMBER FIELDS AND ORDERS)
3<->orderq-elts :<->text394.htm#4049<->orderq-elts :: Elements of Quotients (NUMBER FIELDS AND ORDERS)
5<->OQ ! a <->text394.htm#4050<->OQ ! a : RngOrdRes, Elt -&gt; RngOrdResElt
5<->Random(OQ) <->text394.htm#4051<->Random(OQ) : RngOrdRes -&gt; RngOrdResElt
5<->a mod I <->text394.htm#4052<->a mod I : RngOrdElt, RngOrdIdl -&gt; RngOrdElt
5<->IsZero(a) <->text394.htm#4053<->IsZero(a) : RngOrdResElt -&gt; BoolElt
5<->IsOne(a) <->text394.htm#4054<->IsOne(a) : RngOrdResElt -&gt; BoolElt
5<->IsMinusOne(a) <->text394.htm#4055<->IsMinusOne(a) : RngOrdResElt -&gt; BoolElt
5<->IsUnit(a) <->text394.htm#4056<->IsUnit(a) : RngOrdResElt -&gt; BoolElt
5<->ElementToSequence :: Eltseq(a) <->text394.htm#4057<->ElementToSequence :: Eltseq(a) : RngOrdResElt -&gt; []
5<->Eltseq(a) <->text394.htm#4057<->Eltseq(a) : RngOrdResElt -&gt; []
5<->EuclideanNorm(a) <->text394.htm#4058<->EuclideanNorm(a) : RngOrdResElt -&gt; RngIntElt
5<->Annihilator(a) <->text394.htm#4059<->Annihilator(a) : RngOrdResElt -&gt; RngOrdResElt
3<->orderq-elts :<->text394.htm#4049<->orderq-elts :: Elements of Quotients (NUMBER FIELDS AND ORDERS)
3<->RngOrdRecoEnv :<->text394.htm#4060<->RngOrdRecoEnv :: Reconstruction (NUMBER FIELDS AND ORDERS)
3<->reconstruction :<->text394.htm#4060<->reconstruction :: Reconstruction (NUMBER FIELDS AND ORDERS)
5<->ReconstructionEnvironment(p, k) <->text394.htm#4061<->ReconstructionEnvironment(p, k) : RngIntElt, RngIntElt -> RngOrdRecoEnv
5<->ReconstructionEnvironment(p, k) <->text394.htm#4061<->ReconstructionEnvironment(p, k) : RngOrdIdl, RngIntElt -&gt; RngOrdRecoEnv
5<->Reconstruct(x, R) <->text394.htm#4062<->Reconstruct(x, R) : RngIntElt, RngOrdRecoEnv -> RngIntElt
5<->Reconstruct(x, R) <->text394.htm#4062<->Reconstruct(x, R) : RngOrdElt, RngOrdRecoEnv -&gt; RngOrdElt
5<->ChangePrecision(~ R, k) <->text394.htm#4063<->ChangePrecision(~ R, k) : RngOrdRecoEnv, RngIntElt -&gt;
4<->RngOrd_order-reco (Example H38E32)<->text394.htm#4064<->RngOrd_order-reco (Example H38E32)
4<->Example-order-reco :<->text394.htm#4064<->Example-order-reco :: RngOrd_order-reco (Example H38E32)
3<->reconstruction :<->text394.htm#4060<->reconstruction :: Reconstruction (NUMBER FIELDS AND ORDERS)
3<->quotient-ring :<->text394.htm#4043<->quotient-ring :: Quotient Rings (NUMBER FIELDS AND ORDERS)
3<->ideal :<->text394.htm<->ideal :: Ideals and Quotients (NUMBER FIELDS AND ORDERS)
3<->divisors :<->text395.htm<->divisors :: Places and Divisors (NUMBER FIELDS AND ORDERS)
3<->div-create-s :<->text395.htm#4066<->div-create-s :: Creation of Structures (NUMBER FIELDS AND ORDERS)
5<->DivisorGroup :: Places(K) <->text395.htm#4067<->DivisorGroup :: Places(K) : FldNum -&gt; PlcNum
5<->Places(K) <->text395.htm#4067<->Places(K) : FldNum -&gt; PlcNum
3<->div-create-s :<->text395.htm#4066<->div-create-s :: Creation of Structures (NUMBER FIELDS AND ORDERS)
3<->div-op-s :<->text395.htm#4068<->div-op-s :: Operations on Structures (NUMBER FIELDS AND ORDERS)
5<->NumberField(D) <->text395.htm#4069<->NumberField(D) : DivNum -> FldNum
5<->NumberField(P) <->text395.htm#4069<->NumberField(P) : PlcNum -&gt; FldNum
3<->div-op-s :<->text395.htm#4068<->div-op-s :: Operations on Structures (NUMBER FIELDS AND ORDERS)
3<->div-create-e :<->text395.htm#4070<->div-create-e :: Creation of Elements (NUMBER FIELDS AND ORDERS)
5<->Place(I) <->text395.htm#4071<->Place(I) : RngOrdIdl -&gt; PlcNumElt
5<->Decomposition(K, I) <->text395.htm#4072<->Decomposition(K, I) : FldAlg, Infty -> SeqEnum
5<->Decomposition(K, p) <->text395.htm#4072<->Decomposition(K, p) : FldAlg, RngIntElt -&gt; SeqEnum
5<->Decomposition(K, p) <->text395.htm#4073<->Decomposition(K, p) : FldNum, PlcNumElt -&gt; SeqEnum
5<->Decomposition(m, p) <->text395.htm#4074<->Decomposition(m, p) : Map[FldAlg, FldAlg], PlcNumElt -> SeqEnum[<PlcNumElt, RngIntElt>]
5<->Decomposition(m, p) <->text395.htm#4074<->Decomposition(m, p) : Map[FldRat, FldAlg], RngIntElt -&gt; SeqEnum[&lt;PlcNumElt, RngIntElt&gt;]
5<->InfinitePlaces(O) <->text395.htm#4075<->InfinitePlaces(O) : RngOrd -> [PlcNumElt]
5<->InfinitePlaces(K) <->text395.htm#4075<->InfinitePlaces(K) : FldAlg -&gt; [PlcNumElt]
5<->RealPlaces(K) <->text395.htm#4076<->RealPlaces(K) : FldAlg -&gt; [PlcNumElt]
5<->Divisor(pl) <->text395.htm#4077<->Divisor(pl) : PlcNumElt -&gt; DivNumElt
5<->Divisor(I) <->text395.htm#4078<->Divisor(I) : RngOrdFracIdl -&gt; DivNumElt
5<->Divisor(x) <->text395.htm#4079<->Divisor(x) : FldNumElt -&gt; DivNumElt
3<->div-create-e :<->text395.htm#4070<->div-create-e :: Creation of Elements (NUMBER FIELDS AND ORDERS)
3<->div-arith :<->text395.htm#4080<->div-arith :: Arithmetic with Places and Divisors (NUMBER FIELDS AND ORDERS)
3<->div-other :<->text395.htm#4081<->div-other :: Other Functions for Places and Divisors (NUMBER FIELDS AND ORDERS)
5<->Valuation(a, p) <->text395.htm#4082<->Valuation(a, p) : RngElt, PlcNumElt -> RngElt
5<->Valuation(a, p) <->text395.htm#4082<->Valuation(a, p) : FldNumElt, PlcNumElt -&gt; RngElt
5<->Valuation(I, p) <->text395.htm#4083<->Valuation(I, p) : RngOrdFracIdl , PlcNumElt -&gt; RngElt
5<->Support(D) <->text395.htm#4084<->Support(D) : DivNumElt -&gt; SeqEnum, SeqEnum
5<->Ideal(D) <->text395.htm#4085<->Ideal(D) : PlcNumElt -> RngOrdIdl
5<->Ideal(D) <->text395.htm#4085<->Ideal(D) : DivNumElt -&gt; RngOrdIdl
5<->IsFinite(p) <->text395.htm#4086<->IsFinite(p) : PlcNumElt -&gt; BoolElt
5<->IsInfinite(p) <->text395.htm#4087<->IsInfinite(p) : PlcNumElt -&gt; BoolElt, RngIntElt
5<->IsReal(p) <->text395.htm#4088<->IsReal(p) : PlcNumElt -&gt; BoolElt
5<->IsComplex(p) <->text395.htm#4089<->IsComplex(p) : PlcNumElt -&gt; BoolElt
5<->Extends(P, p) <->text395.htm#4090<->Extends(P, p) : PlcNumElt, PlcNumElt -&gt; BoolElt
5<->InertiaDegree(P) <->text395.htm#4091<->InertiaDegree(P) : PlcNumElt -&gt; RngIntElt
5<->Degree(D) <->text395.htm#4092<->Degree(D) : DivNumElt -&gt; RngElt
5<->NumberField(D) <->text395.htm#4093<->NumberField(D) : DivNumElt -> FldNum
5<->NumberField(P) <->text395.htm#4093<->NumberField(P) : PlcNumElt -&gt; FldNum
5<->ResidueClassField(P) <->text395.htm#4094<->ResidueClassField(P) : PlcNumElt -&gt; Fld
5<->UniformizingElement(P) <->text395.htm#4095<->UniformizingElement(P) : PlcNumElt -&gt; FldNumElt
5<->LocalDegree(P) <->text395.htm#4096<->LocalDegree(P) : PlcNumElt -&gt; RngIntElt
5<->RamificationIndex(P) <->text395.htm#4097<->RamificationIndex(P) : PlcNumElt -&gt; RngIntElt
5<->DecompositionGroup(P) <->text395.htm#4098<->DecompositionGroup(P) : PlcNumElt -&gt; GrpPerm
3<->div-other :<->text395.htm#4081<->div-other :: Other Functions for Places and Divisors (NUMBER FIELDS AND ORDERS)
3<->divisors :<->text395.htm<->divisors :: Places and Divisors (NUMBER FIELDS AND ORDERS)
3<->algebraic-field :<->text383.htm<->algebraic-field :: NUMBER FIELDS AND ORDERS
3<->galois-theory :<->text398.htm<->galois-theory :: GALOIS GROUPS AND AUTOMORPHISMS
3<->automorphism :<->text399.htm<->automorphism :: Automorphism Groups (GALOIS GROUPS AND AUTOMORPHISMS)
5<->Automorphisms(F) <->text399.htm#4103<->Automorphisms(F) : FldAlg -&gt; [ Map ]
5<->AutomorphismGroup(F) <->text399.htm#4104<->AutomorphismGroup(F) : FldAlg -&gt; GrpPerm, PowMap, Map
4<->RngOrdGal_Automorphisms (Example H39E1)<->text399.htm#4105<->RngOrdGal_Automorphisms (Example H39E1)
4<->Example-Automorphisms :<->text399.htm#4105<->Example-Automorphisms :: RngOrdGal_Automorphisms (Example H39E1)
5<->AutomorphismGroup(K, F) <->text399.htm#4106<->AutomorphismGroup(K, F) : FldRat, FldAlg -> GrpPerm, PowMap, Map
5<->AutomorphismGroup(K, F) <->text399.htm#4106<->AutomorphismGroup(K, F) : FldAlg, FldRat -> GrpPerm, PowMap, Map
5<->AutomorphismGroup(K, F) <->text399.htm#4106<->AutomorphismGroup(K, F) : FldAlg, FldAlg -&gt; GrpPerm, PowMap, Map
5<->DecompositionGroup(p) <->text399.htm#4107<->DecompositionGroup(p) : RngOrdIdl ->  GrpPerm 
5<->DecompositionGroup(p) <->text399.htm#4107<->DecompositionGroup(p) : RngIntElt -&gt;  GrpPerm
5<->RamificationGroup(p, i) <->text399.htm#4108<->RamificationGroup(p, i) : RngOrdIdl, RngIntElt -&gt;  GrpPerm
5<->RamificationGroup(p) <->text399.htm#4109<->RamificationGroup(p) : RngOrdIdl -&gt; GrpPerm
5<->InertiaGroup(p) <->text399.htm#4110<->InertiaGroup(p) : RngOrdIdl -&gt; GrpPerm
5<->FixedField(K, U) <->text399.htm#4111<->FixedField(K, U) : FldAlg, GrpPerm -&gt; FldNum, Map
5<->FixedField(K, S) <->text399.htm#4112<->FixedField(K, S) : FldAlg, [Map] -&gt; FldAlg, Map
5<->FixedGroup(K, L) <->text399.htm#4113<->FixedGroup(K, L) : FldAlg, FldAlg -&gt; GrpPerm
5<->FixedGroup(K, L) <->text399.htm#4114<->FixedGroup(K, L) : FldAlg, [FldAlgElt] -&gt; GrpPerm
5<->FixedGroup(K, a) <->text399.htm#4115<->FixedGroup(K, a) : FldAlg, FldAlgElt -&gt; GrpPerm
5<->DecompositionField(p) <->text399.htm#4116<->DecompositionField(p) : RngOrdIdl -&gt; FldNum, Map
5<->RamificationField(p, i) <->text399.htm#4117<->RamificationField(p, i) : RngOrdIdl, RngIntElt -&gt; FldNum, Map
5<->RamificationField(p) <->text399.htm#4118<->RamificationField(p) : RngOrdIdl -&gt; FldNum, Map
5<->InertiaField(p) <->text399.htm#4119<->InertiaField(p) : RngOrdIdl -&gt; FldNum, Map
4<->RngOrdGal_Ramification (Example H39E2)<->text399.htm#4120<->RngOrdGal_Ramification (Example H39E2)
4<->Example-Ramification :<->text399.htm#4120<->Example-Ramification :: RngOrdGal_Ramification (Example H39E2)
5<->FrobeniusElement(K, p) <->text399.htm#4121<->FrobeniusElement(K, p) : FldNum, RngIntElt -&gt; GrpPermElt
4<->RngOrdGal_nf-sig-FrobeniusElement (Example H39E3)<->text399.htm#4122<->RngOrdGal_nf-sig-FrobeniusElement (Example H39E3)
4<->Example-nf-sig-FrobeniusElement :<->text399.htm#4122<->Example-nf-sig-FrobeniusElement :: RngOrdGal_nf-sig-FrobeniusElement (Example H39E3)
3<->automorphism :<->text399.htm<->automorphism :: Automorphism Groups (GALOIS GROUPS AND AUTOMORPHISMS)
3<->galois :<->text400.htm<->galois :: Galois Groups (GALOIS GROUPS AND AUTOMORPHISMS)
5<->GaloisGroup(f) <->text400.htm#4124<->GaloisGroup(f) : RngUPolElt[FldRat] -> GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(f) <->text400.htm#4124<->GaloisGroup(f) : RngUPolElt[FldAlg] -> GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(f) <->text400.htm#4124<->GaloisGroup(f) : RngUPolElt[RngOrd] -> GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(f) <->text400.htm#4124<->GaloisGroup(f) : RngUPolElt[RngInt] -&gt; GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(K) <->text400.htm#4125<->GaloisGroup(K) : FldNum[FldRat] -> GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(K) <->text400.htm#4125<->GaloisGroup(K) : FldNum[FldNum[FldRat]] -> GrpPerm, SeqEnum, GaloisData
5<->GaloisGroup(K) <->text400.htm#4125<->GaloisGroup(K) : FldNum -&gt; GrpPerm, SeqEnum, GaloisData
5<->GaloisProof(K, S) <->text400.htm#4126<->GaloisProof(K, S) : FldAlg, GaloisData -> BoolElt
5<->GaloisProof(f, S) <->text400.htm#4126<->GaloisProof(f, S) : RngUPolElt, GaloisData -&gt; BoolElt
5<->\nameRngOrd:GaloisRoot{GaloisRoot}(i, S) <->text400.htm#4127<->\nameRngOrd:GaloisRoot{GaloisRoot}(i, S) : RngIntElt, GaloisData -> RngElt
5<->GaloisRoot(f, i, S) <->text400.htm#4127<->GaloisRoot(f, i, S) : RngUPolElt, RngIntElt, GaloisData -&gt; RngElt
5<->Stauduhar(G, H, S, B) <->text400.htm#4128<->Stauduhar(G, H, S, B) : GrpPerm, GrpPerm, GaloisData, RngIntElt -&gt; RngIntElt, GrpPermElt, BoolElt, RngSLPolElt
5<->IsInt(x, B, S) <->text400.htm#4129<->IsInt(x, B, S) : RngElt, RngIntElt, GaloisData -&gt; BoolElt, RngElt
4<->RngOrdGal_GaloisGroups (Example H39E4)<->text400.htm#4130<->RngOrdGal_GaloisGroups (Example H39E4)
4<->Example-GaloisGroups :<->text400.htm#4130<->Example-GaloisGroups :: RngOrdGal_GaloisGroups (Example H39E4)
3<->RngSLPol :<->text400.htm#4131<->RngSLPol :: Straight-line Polynomials (GALOIS GROUPS AND AUTOMORPHISMS)
3<->RngSLPolElt :<->text400.htm#4131<->RngSLPolElt :: Straight-line Polynomials (GALOIS GROUPS AND AUTOMORPHISMS)
3<->sl-poly :<->text400.htm#4131<->sl-poly :: Straight-line Polynomials (GALOIS GROUPS AND AUTOMORPHISMS)
5<->SLPolynomialRing(R, n) <->text400.htm#4132<->SLPolynomialRing(R, n) : Rng, RngIntElt -&gt; RngSLPol
5<->. :: Name(R, i) <->text400.htm#4133<->. :: Name(R, i) : RngSLPol, RngIntElt -&gt; RngSLPolElt
5<->Name(R, i) <->text400.htm#4133<->Name(R, i) : RngSLPol, RngIntElt -&gt; RngSLPolElt
5<->CoefficientRing :: BaseRing(R) <->text400.htm#4134<->CoefficientRing :: BaseRing(R) : RngSLPol -&gt; Rng
5<->BaseRing(R) <->text400.htm#4134<->BaseRing(R) : RngSLPol -&gt; Rng
5<->Rank(R) <->text400.htm#4135<->Rank(R) : RngSLPol -&gt; RngIntElt
5<->SetEvaluationComparison(R, F, n) <->text400.htm#4136<->SetEvaluationComparison(R, F, n) : RngSLPol, FldFin, RngIntElt -&gt;
5<->GetEvaluationComparison(R) <->text400.htm#4137<->GetEvaluationComparison(R) : RngSLPol -&gt; FldFin, RngIntElt
5<->InitializeEvaluation(R, S) <->text400.htm#4138<->InitializeEvaluation(R, S) : RngSLPol, [RngElt] -&gt;
5<->Derivative(x, i) <->text400.htm#4139<->Derivative(x, i) : RngSLPolElt, RngIntElt -&gt; RngSLPolElt
5<->Evaluate(f, S) <->text400.htm#4140<->Evaluate(f, S) : RngSLPolElt, [RngElt] -> RngElt
5<->Evaluate(f, S, m) <->text400.htm#4140<->Evaluate(f, S, m) : RngSLPolElt, [RngElt], Map -> RngElt
5<->Evaluate(f) <->text400.htm#4140<->Evaluate(f) : RngSLPolElt -&gt; RngElt
3<->sl-poly :<->text400.htm#4131<->sl-poly :: Straight-line Polynomials (GALOIS GROUPS AND AUTOMORPHISMS)
3<->invariants :<->text400.htm#4141<->invariants :: Invariants (GALOIS GROUPS AND AUTOMORPHISMS)
5<->GaloisGroupInvariant(G, H) <->text400.htm#4142<->GaloisGroupInvariant(G, H) : GrpPerm, GrpPerm -&gt; RngSLPolElt
5<->RelativeInvariant(G, H) <->text400.htm#4143<->RelativeInvariant(G, H) : GrpPerm, GrpPerm -&gt; RngSLPolElt
5<->CombineInvariants(R, G, H1, H2, H3) <->text400.htm#4144<->CombineInvariants(R, G, H1, H2, H3) : Rng, GrpPerm, Tup&lt;GrpPerm, RngSLPolElt&gt;, Tup&lt;GrpPerm, RngSLPolElt&gt;, GrpPerm -&gt; RngSLPolElt
5<->IsInvariant(F, p) <->text400.htm#4145<->IsInvariant(F, p) : RngSLPolElt, GrpPermElt -&gt; BoolElt
5<->Bound(I, B) <->text400.htm#4146<->Bound(I, B) : RngSLPolElt, RngIntElt -&gt; RngIntElt
5<->Bound(I, B) <->text400.htm#4147<->Bound(I, B) : RngSLPolElt, RngElt -&gt; RngElt
5<->PrettyPrintInvariant(I) <->text400.htm#4148<->PrettyPrintInvariant(I) : RngSLPolElt -&gt; MonStgElt
3<->invariants :<->text400.htm#4141<->invariants :: Invariants (GALOIS GROUPS AND AUTOMORPHISMS)
3<->subfields :<->text400.htm#4149<->subfields :: Subfields and Subfield Towers (GALOIS GROUPS AND AUTOMORPHISMS)
5<->\nameRngOrdGal:GaloisSubgroup{GaloisSubgroup}(S, U) <->text400.htm#4150<->\nameRngOrdGal:GaloisSubgroup{GaloisSubgroup}(S, U) : GaloisData, GrpPerm -> FldNum, UserProgram
5<->GaloisSubgroup(f, U) <->text400.htm#4150<->GaloisSubgroup(f, U) : RngUPolElt, GrpPerm -> FldNum, UserProgram
5<->GaloisSubgroup(K, U) <->text400.htm#4150<->GaloisSubgroup(K, U) : FldNum, GrpPerm -&gt; FldNum, UserProgram
5<->GaloisQuotient(f, Q) <->text400.htm#4151<->GaloisQuotient(f, Q) : RngUPolElt, GrpPerm -> SeqEnum[FldNum]
5<->GaloisQuotient(S, Q) <->text400.htm#4151<->GaloisQuotient(S, Q) : GaloisData, GrpPerm -> SeqEnum[FldNum]
5<->GaloisQuotient(K, Q) <->text400.htm#4151<->GaloisQuotient(K, Q) : FldNum, GrpPerm -&gt; SeqEnum[FldNum]
5<->GaloisSubfieldTower(S, L) <->text400.htm#4152<->GaloisSubfieldTower(S, L) : GaloisData, [GrpPerm] -&gt; FldNum, [Tup&lt;RngSLPolElt, RngUPolElt, [GrpPermElt]&gt;], UserProgram, UserProgram
5<->GaloisSplittingField(f) <->text400.htm#4153<->GaloisSplittingField(f) : RngUPolElt -&gt; FldNum, [FldNumElt], GrpPerm, [[FldNumElt]]
4<->RngOrdGal_galois-subfield (Example H39E5)<->text400.htm#4154<->RngOrdGal_galois-subfield (Example H39E5)
4<->Example-galois-subfield :<->text400.htm#4154<->Example-galois-subfield :: RngOrdGal_galois-subfield (Example H39E5)
3<->subfields :<->text400.htm#4149<->subfields :: Subfields and Subfield Towers (GALOIS GROUPS AND AUTOMORPHISMS)
3<->radicals :<->text400.htm#4155<->radicals :: Solvability by Radicals (GALOIS GROUPS AND AUTOMORPHISMS)
5<->SolveByRadicals(f) <->text400.htm#4156<->SolveByRadicals(f) : RngUPolElt -&gt; FldNum, [FldNumElt], [FldNumElt]
5<->CyclicToRadical(K, a, z) <->text400.htm#4157<->CyclicToRadical(K, a, z) : FldNum, FldNumElt, RngElt -&gt; FldNum, [FldNumElt], [FldNumElt]
4<->RngOrdGal_solve-radical (Example H39E6)<->text400.htm#4158<->RngOrdGal_solve-radical (Example H39E6)
4<->Example-solve-radical :<->text400.htm#4158<->Example-solve-radical :: RngOrdGal_solve-radical (Example H39E6)
3<->radicals :<->text400.htm#4155<->radicals :: Solvability by Radicals (GALOIS GROUPS AND AUTOMORPHISMS)
3<->relations :<->text400.htm#4159<->relations :: Linear Relations (GALOIS GROUPS AND AUTOMORPHISMS)
5<->LinearRelations(f) <->text400.htm#4160<->LinearRelations(f) : RngUPolElt -&gt; Mtrx, GaloisData
5<->LinearRelations(f, I) <->text400.htm#4161<->LinearRelations(f, I) : RngUPolElt, [RngSLPolElt] -&gt; Mtrx, GaloisData
5<->VerifyRelation(f, F) <->text400.htm#4162<->VerifyRelation(f, F) : RngUPolElt, RngSLPolElt -&gt; BoolElt
4<->RngOrdGal_linear-relations (Example H39E7)<->text400.htm#4163<->RngOrdGal_linear-relations (Example H39E7)
4<->Example-linear-relations :<->text400.htm#4163<->Example-linear-relations :: RngOrdGal_linear-relations (Example H39E7)
3<->relations :<->text400.htm#4159<->relations :: Linear Relations (GALOIS GROUPS AND AUTOMORPHISMS)
3<->other :<->text400.htm#4164<->other :: Other (GALOIS GROUPS AND AUTOMORPHISMS)
5<->ConjugatesToPowerSums(I) <->text400.htm#4165<->ConjugatesToPowerSums(I) : [] -&gt; []
5<->PowerSumToElementarySymmetric(I) <->text400.htm#4166<->PowerSumToElementarySymmetric(I) : [] -&gt; []
3<->other :<->text400.htm#4164<->other :: Other (GALOIS GROUPS AND AUTOMORPHISMS)
3<->galois :<->text400.htm<->galois :: Galois Groups (GALOIS GROUPS AND AUTOMORPHISMS)
3<->subfields :<->text401.htm<->subfields :: Subfields (GALOIS GROUPS AND AUTOMORPHISMS)
5<->Subfields(K, n) <->text401.htm#4168<->Subfields(K, n) : FldAlg, RngIntElt -&gt; [ &lt; FldAlg, Hom &gt; ]
5<->Subfields(K) <->text401.htm#4169<->Subfields(K) : FldAlg -&gt; [ &lt; FldAlg, Hom &gt; ]
3<->subfield-lattice :<->text401.htm#4170<->subfield-lattice :: The Subfield Lattice (GALOIS GROUPS AND AUTOMORPHISMS)
5<->SubfieldLattice(K) <->text401.htm#4171<->SubfieldLattice(K) : FldNum -&gt; SubFldLat
5<-># L <->text401.htm#4172<-># L : SubFldLat -&gt; RngIntElt
5<->Bottom(L) <->text401.htm#4173<->Bottom(L) : SubFldLat -&gt; SubFldLatElt
5<->Top(L) <->text401.htm#4174<->Top(L) : SubFldLat -&gt; SubFldLatElt
5<->Random(L) <->text401.htm#4175<->Random(L) : SubFldLat -&gt; SubFldLatElt
5<->[] :: L ! n <->text401.htm#4176<->[] :: L ! n : SubFldLat, RngIntElt -&gt; SubFldLatElt
5<->L ! n <->text401.htm#4176<->L ! n : SubFldLat, RngIntElt -&gt; SubFldLatElt
5<->NumberField(e) <->text401.htm#4177<->NumberField(e) : SubFldLatElt -&gt; FldNum
5<->EmbeddingMap(e) <->text401.htm#4178<->EmbeddingMap(e) : SubFldLatElt -&gt; Map
5<->Degree(e) <->text401.htm#4179<->Degree(e) : SubFldLatElt -&gt; RngIntElt
5<->e eq f <->text401.htm#4180<->e eq f : SubFldLatElt, SubFldLatElt -&gt; BoolElt
5<->e subset f <->text401.htm#4181<->e subset f : SubFldLatElt, SubFldLatElt -&gt; BoolElt
5<->e * f <->text401.htm#4182<->e * f : SubFldLatElt, SubFldLatElt -&gt; SubFldLatElt
5<->e meet f <->text401.htm#4183<->e meet f : SubFldLatElt, SubFldLatElt -&gt; SubFldLatElt
5<->&meet :: &meet S <->text401.htm#4184<->&meet :: &amp;meet S : [ SubFldLatElt ] -&gt; SubFldLatElt
5<->MaximalSubfields(e) <->text401.htm#4185<->MaximalSubfields(e) : SubFldLatElt -&gt; [ SubFldLatElt ]
5<->MinimalOverfields(e) <->text401.htm#4186<->MinimalOverfields(e) : SubFldLatElt -&gt; [ SubFldLatElt ]
4<->RngOrdGal_SubfieldLattice (Example H39E8)<->text401.htm#4187<->RngOrdGal_SubfieldLattice (Example H39E8)
4<->Example-SubfieldLattice :<->text401.htm#4187<->Example-SubfieldLattice :: RngOrdGal_SubfieldLattice (Example H39E8)
3<->subfield-lattice :<->text401.htm#4170<->subfield-lattice :: The Subfield Lattice (GALOIS GROUPS AND AUTOMORPHISMS)
3<->subfields :<->text401.htm<->subfields :: Subfields (GALOIS GROUPS AND AUTOMORPHISMS)
3<->cohomology :<->text402.htm<->cohomology :: Galois Cohomology (GALOIS GROUPS AND AUTOMORPHISMS)
5<->Hilbert90(a, M) <->text402.htm#4189<->Hilbert90(a, M) : FldNumElt, Map[FldNum, FldNum] -&gt; FldNumElt
5<->SUnitCohomologyProcess(S, U) <->text402.htm#4190<->SUnitCohomologyProcess(S, U) : {RngOrdIdl}, GrpPerm -&gt; {1}
5<->IsGloballySplit(C, l) <->text402.htm#4191<->IsGloballySplit(C, l) : , UserProgram -&gt; BoolElt, UserProgram
5<->IsSplitAsIdealAt(I, l) <->text402.htm#4192<->IsSplitAsIdealAt(I, l) : RngOrdFracIdl, UserProgram -&gt; BoolElt, UserProgram, [RngOrdIdl]
3<->cohomology :<->text402.htm<->cohomology :: Galois Cohomology (GALOIS GROUPS AND AUTOMORPHISMS)
3<->galois-theory :<->text398.htm<->galois-theory :: GALOIS GROUPS AND AUTOMORPHISMS
3<->abelian-extension :<->text405.htm<->abelian-extension :: CLASS FIELD THEORY
3<->FldAb :<->text406.htm<->FldAb :: Introduction (CLASS FIELD THEORY)
3<->introduction :<->text406.htm<->introduction :: Introduction (CLASS FIELD THEORY)
3<->overview :<->text406.htm#4197<->overview :: Overview (CLASS FIELD THEORY)
3<->magma :<->text406.htm#4198<->magma :: Magma (CLASS FIELD THEORY)
4<->FldAb_hilbert (Example H40E1)<->text406.htm#4199<->FldAb_hilbert (Example H40E1)
4<->Example-hilbert :<->text406.htm#4199<->Example-hilbert :: FldAb_hilbert (Example H40E1)
3<->magma :<->text406.htm#4198<->magma :: Magma (CLASS FIELD THEORY)
3<->introduction :<->text406.htm<->introduction :: Introduction (CLASS FIELD THEORY)
3<->creation :<->text407.htm<->creation :: Creation (CLASS FIELD THEORY)
3<->ray-class-group :<->text407.htm#4201<->ray-class-group :: Ray Class Groups (CLASS FIELD THEORY)
5<->RayClassGroup(I, T) <->text407.htm#4202<->RayClassGroup(I, T) : RngOrdIdl, SeqEnum[RngIntElt] -> GrpAb, Map
5<->RayClassGroup(I) <->text407.htm#4202<->RayClassGroup(I) : RngOrdIdl -&gt; GrpAb, Map
5<->RayClassGroup(P) <->text407.htm#4203<->RayClassGroup(P) : PlcNumElt -> GrpAb, Map
5<->RayClassGroup(D) <->text407.htm#4203<->RayClassGroup(D) : DivNumElt -&gt; GrpAb, Map
4<->FldAb_ideal-ray (Example H40E2)<->text407.htm#4204<->FldAb_ideal-ray (Example H40E2)
4<->Example-ideal-ray :<->text407.htm#4204<->Example-ideal-ray :: FldAb_ideal-ray (Example H40E2)
5<->RayResidueRing(I, T) <->text407.htm#4205<->RayResidueRing(I, T) : RngOrdIdl, SeqEnum[RngIntElt] -> GrpAb, Map
5<->RayResidueRing(I) <->text407.htm#4205<->RayResidueRing(I) : RngOrdIdl -&gt; GrpAb, Map
5<->RayResidueRing(P) <->text407.htm#4206<->RayResidueRing(P) : PlcNumElt -> GrpAb, Map
5<->RayResidueRing(D) <->text407.htm#4206<->RayResidueRing(D) : DivNumElt -&gt; GrpAb, Map
3<->ray-class-group :<->text407.htm#4201<->ray-class-group :: Ray Class Groups (CLASS FIELD THEORY)
3<->selmer-group :<->text407.htm#4207<->selmer-group :: Selmer Groups (CLASS FIELD THEORY)
5<->pSelmerGroup(p, S) <->text407.htm#4208<->pSelmerGroup(p, S) : RngIntElt, { RngOrdIdl } -&gt; GrpAb, Map
4<->FldAb_Selmer-group (Example H40E3)<->text407.htm#4209<->FldAb_Selmer-group (Example H40E3)
4<->Example-Selmer-group :<->text407.htm#4209<->Example-Selmer-group :: FldAb_Selmer-group (Example H40E3)
3<->selmer-group :<->text407.htm#4207<->selmer-group :: Selmer Groups (CLASS FIELD THEORY)
3<->maps :<->text407.htm#4210<->maps :: Maps (CLASS FIELD THEORY)
5<->InducedMap(m1, m2, h, c) <->text407.htm#4211<->InducedMap(m1, m2, h, c) : Map, Map, Map, RngIntElt -&gt; Map
5<->InducedAutomorphism(r, h, c) <->text407.htm#4212<->InducedAutomorphism(r, h, c) : Map, Map, RngIntElt -&gt; Map
4<->FldAb_inducedMap (Example H40E4)<->text407.htm#4213<->FldAb_inducedMap (Example H40E4)
4<->Example-inducedMap :<->text407.htm#4213<->Example-inducedMap :: FldAb_inducedMap (Example H40E4)
3<->maps :<->text407.htm#4210<->maps :: Maps (CLASS FIELD THEORY)
3<->abelian-extensions-basics :<->text407.htm#4214<->abelian-extensions-basics :: Abelian Extensions (CLASS FIELD THEORY)
5<->AbelianExtension :: RayClassField(m) <->text407.htm#4215<->AbelianExtension :: RayClassField(m) : Map -&gt; FldAb
5<->RayClassField(m, I, T) <->text407.htm#4215<->RayClassField(m, I, T) : Map, RngOrdIdl, [RngIntElt] -> FldAb
5<->\nameFldAb:AbelianExtension{AbelianExtension}(m, I, T) : Map, RngOrdIdl, [RngIntElt] -> FldAb :: RayClassField(m) <->text407.htm#4215<->\nameFldAb:AbelianExtension{AbelianExtension}(m, I, T) : Map, RngOrdIdl, [RngIntElt] -> FldAb :: RayClassField(m) : Map -&gt; FldAb
5<->RayClassField(m, I) <->text407.htm#4215<->RayClassField(m, I) : Map, RngOrdIdl -> FldAb
5<->AbelianExtension(m, I) : Map, RngOrdIdl -> FldAb :: RayClassField(m) <->text407.htm#4215<->AbelianExtension(m, I) : Map, RngOrdIdl -> FldAb :: RayClassField(m) : Map -&gt; FldAb
5<->RayClassField(m) <->text407.htm#4215<->RayClassField(m) : Map -&gt; FldAb
5<->AbelianExtension(I) <->text407.htm#4216<->AbelianExtension(I) : RngOrdIdl -&gt; FldAb
5<->RayClassField(P) <->text407.htm#4217<->RayClassField(P) : PlcNumElt -> FldAb
5<->RayClassField(D) <->text407.htm#4217<->RayClassField(D) : DivNumElt -&gt; FldAb
5<->AbelianpExtension(m, p) <->text407.htm#4218<->AbelianpExtension(m, p) : Map, RngIntElt -&gt; FldAb
4<->FldAb_class-field (Example H40E5)<->text407.htm#4219<->FldAb_class-field (Example H40E5)
4<->Example-class-field :<->text407.htm#4219<->Example-class-field :: FldAb_class-field (Example H40E5)
5<->AbelianExtension(I, P) <->text407.htm#4220<->AbelianExtension(I, P) : RngOrdIdl, [RngIntElt] -&gt; FldAb
5<->HilbertClassField(K) <->text407.htm#4221<->HilbertClassField(K) : FldAlg -&gt; FldAb
5<->MaximalAbelianSubfield(F)<->text407.htm#4222<->MaximalAbelianSubfield(F): FldOrd  -> FldAb
5<->MaximalAbelianSubfield(K) <->text407.htm#4222<->MaximalAbelianSubfield(K) : FldNum -> FldAb
5<->MaximalAbelianSubfield(M) <->text407.htm#4222<->MaximalAbelianSubfield(M) : RngOrd -&gt; FldAb
5<->AbelianExtension(M)<->text407.htm#4223<->AbelianExtension(M): RngOrd  -> FldAb
5<->AbelianExtension(K) <->text407.htm#4223<->AbelianExtension(K) : FldAlg -&gt; FldAb
4<->FldAb_hilbert-class-field (Example H40E6)<->text407.htm#4224<->FldAb_hilbert-class-field (Example H40E6)
4<->Example-hilbert-class-field :<->text407.htm#4224<->Example-hilbert-class-field :: FldAb_hilbert-class-field (Example H40E6)
3<->abelian-extensions-basics :<->text407.htm#4214<->abelian-extensions-basics :: Abelian Extensions (CLASS FIELD THEORY)
3<->binary-operations :<->text407.htm#4225<->binary-operations :: Binary Operations (CLASS FIELD THEORY)
5<->A eq B <->text407.htm#4226<->A eq B : FldAb, FldAb -&gt; BoolElt
5<->A subset B <->text407.htm#4227<->A subset B : FldAb, FldAb -&gt; BoolElt
5<->A * B <->text407.htm#4228<->A * B : FldAb, FldAb -&gt; FldAb
5<->A meet B <->text407.htm#4229<->A meet B : FldAb, FldAb -&gt; FldAb
3<->binary-operations :<->text407.htm#4225<->binary-operations :: Binary Operations (CLASS FIELD THEORY)
3<->creation :<->text407.htm<->creation :: Creation (CLASS FIELD THEORY)
3<->galois-module-structure :<->text408.htm<->galois-module-structure :: Galois Module Structure (CLASS FIELD THEORY)
3<->predicates :<->text408.htm#4231<->predicates :: Predicates (CLASS FIELD THEORY)
5<->IsAbelian(A) <->text408.htm#4232<->IsAbelian(A) : FldAb -&gt; BoolElt
5<->IsNormal(A) <->text408.htm#4233<->IsNormal(A) : FldAb -&gt; BoolElt
5<->IsCentral(A) <->text408.htm#4234<->IsCentral(A) : FldAb -&gt; BoolElt
3<->predicates :<->text408.htm#4231<->predicates :: Predicates (CLASS FIELD THEORY)
3<->constructions :<->text408.htm#4235<->constructions :: Constructions (CLASS FIELD THEORY)
5<->GenusField(A)<->text408.htm#4236<->GenusField(A): FldAb  -&gt; FldAb
5<->H2_G_A(A) <->text408.htm#4237<->H2_G_A(A) : FldAb -&gt; ModTupRng
5<->NormalSubfields(A) <->text408.htm#4238<->NormalSubfields(A) : FldAb -&gt; []
5<->FixedField :: AbelianSubfield(A, U) <->text408.htm#4239<->FixedField :: AbelianSubfield(A, U) : FldAb, GrpAb -&gt; FldAb
5<->AbelianSubfield(A, U) <->text408.htm#4239<->AbelianSubfield(A, U) : FldAb, GrpAb -&gt; FldAb
5<->CohomologyModule(A) <->text408.htm#4240<->CohomologyModule(A) : FldAb -&gt; ModGrp, Map, Map, Map
3<->constructions :<->text408.htm#4235<->constructions :: Constructions (CLASS FIELD THEORY)
3<->galois-module-structure :<->text408.htm<->galois-module-structure :: Galois Module Structure (CLASS FIELD THEORY)
3<->conversion :<->text409.htm<->conversion :: Conversion to Number Fields (CLASS FIELD THEORY)
5<->EquationOrder(A) <->text409.htm#4242<->EquationOrder(A) : FldAb -&gt; RngOrd
5<->NumberField(A) <->text409.htm#4243<->NumberField(A) : FldAb -&gt; FldNum
5<->MaximalOrder(A) <->text409.htm#4244<->MaximalOrder(A) : FldAb -&gt; RngOrd
5<->Components(A) <->text409.htm#4245<->Components(A) : FldAb -&gt; [RngOrd]
5<->Generators(A) <->text409.htm#4246<->Generators(A) : FldAb -&gt; [ ], [ ], [ ]
3<->class-field-chars :<->text409.htm#4247<->class-field-chars :: Character Theory (CLASS FIELD THEORY)
5<->AbelianExtension(psi) <->text409.htm#4248<->AbelianExtension(psi) : GrpHeckeElt -> FldAb
5<->AbelianExtension(chi) <->text409.htm#4248<->AbelianExtension(chi) : GrpDrchNFElt -> FldAb
5<->AbelianExtension(chi) <->text409.htm#4248<->AbelianExtension(chi) : GrpDrchElt -> FldAb
5<->AbelianExtension(psi) <->text409.htm#4248<->AbelianExtension(psi) : GrpHecke -&gt; FldAb
5<->HeckeCharacterGroup(L) <->text409.htm#4249<->HeckeCharacterGroup(L) : FldNum -&gt; GrpHecke
5<->HeckeCharacterGroup(A) <->text409.htm#4250<->HeckeCharacterGroup(A) : FldAb -&gt; GrpHecke
4<->FldAb_classfield-characters (Example H40E7)<->text409.htm#4251<->FldAb_classfield-characters (Example H40E7)
4<->Example-classfield-characters :<->text409.htm#4251<->Example-classfield-characters :: FldAb_classfield-characters (Example H40E7)
3<->class-field-chars :<->text409.htm#4247<->class-field-chars :: Character Theory (CLASS FIELD THEORY)
3<->conversion :<->text409.htm<->conversion :: Conversion to Number Fields (CLASS FIELD THEORY)
3<->invariants :<->text410.htm<->invariants :: Invariants (CLASS FIELD THEORY)
5<->Discriminant(A) <->text410.htm#4253<->Discriminant(A) : FldAb -&gt; RngOrdIdl, [RngIntElt]
5<->AbsoluteDiscriminant(A) <->text410.htm#4254<->AbsoluteDiscriminant(A) : FldAb -&gt; RngIntElt
5<->Conductor(A) <->text410.htm#4255<->Conductor(A) : FldAb -&gt; RngOrdIdl, [RngIntElt]
5<->Degree(A) <->text410.htm#4256<->Degree(A) : FldAb -&gt; RngIntElt
5<->AbsoluteDegree(A) <->text410.htm#4257<->AbsoluteDegree(A) : FldAb -&gt; RngIntElt
5<->CoefficientField :: CoefficientRing(A) <->text410.htm#4258<->CoefficientField :: CoefficientRing(A) : FldAb -&gt; Fld
5<->BaseField :: CoefficientRing(A) <->text410.htm#4258<->BaseField :: CoefficientRing(A) : FldAb -&gt; Fld
5<->CoefficientRing(A) <->text410.htm#4258<->CoefficientRing(A) : FldAb -&gt; Fld
5<->CoefficientRing :: BaseRing(A) <->text410.htm#4259<->CoefficientRing :: BaseRing(A) : FldAb -&gt; Rng
5<->BaseRing(A) <->text410.htm#4259<->BaseRing(A) : FldAb -&gt; Rng
5<->NormGroup(A) <->text410.htm#4260<->NormGroup(A) : FldAb -&gt; Map, RngOrdIdl, [RngIntElt]
5<->DecompositionField(p, A) <->text410.htm#4261<->DecompositionField(p, A) : RngOrdIdl, FldAb -&gt; FldAb
5<->DecompositionField(p, A) <->text410.htm#4262<->DecompositionField(p, A) : PlcNumElt, FldAb -&gt; FldAb
5<->DecompositionGroup(p, A) <->text410.htm#4263<->DecompositionGroup(p, A) : RngOrdIdl, FldAb -> GrpAb
5<->DecompositionGroup(p, A) <->text410.htm#4263<->DecompositionGroup(p, A) : RngIntElt, FldAb -&gt; GrpAb
5<->DecompositionGroup(p, A) <->text410.htm#4264<->DecompositionGroup(p, A) : PlcNumElt, FldAb -&gt; GrpAb
5<->DecompositionType(A, p) <->text410.htm#4265<->DecompositionType(A, p) : FldAb, RngOrdIdl -&gt; [Tpl]
5<->DecompositionType(A, p) <->text410.htm#4266<->DecompositionType(A, p) : FldAb, PlcNumElt -&gt; [Tpl]
5<->DecompositionType(A, p) <->text410.htm#4267<->DecompositionType(A, p) : FldAb, RngIntElt -&gt; [Tpl]
5<->DecompositionTypeFrequency(A, l) <->text410.htm#4268<->DecompositionTypeFrequency(A, l) : FldAb, [ ]  -&gt; Mset
5<->DecompositionTypeFrequency(A, a, b) <->text410.htm#4269<->DecompositionTypeFrequency(A, a, b) : FldAb, RngIntElt, RngIntElt  -&gt; Mset
3<->invariants :<->text410.htm<->invariants :: Invariants (CLASS FIELD THEORY)
3<->automorphisms :<->text411.htm<->automorphisms :: Automorphisms (CLASS FIELD THEORY)
5<->ArtinMap(A) <->text411.htm#4271<->ArtinMap(A) : FldAb -&gt; Map
5<->FrobeniusAutomorphism(A, p) <->text411.htm#4272<->FrobeniusAutomorphism(A, p) : FldAb, RngOrdIdl -&gt; Map
5<->AutomorphismGroup(A) <->text411.htm#4273<->AutomorphismGroup(A) : FldAb -&gt; GrpFP, [Map], Map
5<->ProbableAutomorphismGroup(A) <->text411.htm#4274<->ProbableAutomorphismGroup(A) : FldAb -&gt; GrpFP, SeqEnum
5<->ImproveAutomorphismGroup(F, E) <->text411.htm#4275<->ImproveAutomorphismGroup(F, E) : FldAb, SeqEnum -&gt; GrpFP, SeqEnum
4<->FldAb_ProbableAutomorphismGroup (Example H40E8)<->text411.htm#4276<->FldAb_ProbableAutomorphismGroup (Example H40E8)
4<->Example-ProbableAutomorphismGroup :<->text411.htm#4276<->Example-ProbableAutomorphismGroup :: FldAb_ProbableAutomorphismGroup (Example H40E8)
5<->AbsoluteGaloisGroup(A) <->text411.htm#4277<->AbsoluteGaloisGroup(A) : FldAb -&gt; GrpPerm, SeqEnum, GaloisData
5<->TwoCocycle(A) <->text411.htm#4278<->TwoCocycle(A) : FldAb -&gt; UserProgram
3<->automorphisms :<->text411.htm<->automorphisms :: Automorphisms (CLASS FIELD THEORY)
3<->norm-equations :<->text412.htm<->norm-equations :: Norm Equations (CLASS FIELD THEORY)
5<->IsLocalNorm(A, x, p) <->text412.htm#4280<->IsLocalNorm(A, x, p) : FldAb, RngOrdElt, RngOrdIdl -&gt; BoolElt
5<->IsLocalNorm(A, x, i) <->text412.htm#4281<->IsLocalNorm(A, x, i) : FldAb, RngOrdElt, RngIntElt -&gt; BoolElt
5<->IsLocalNorm(A, x, p) <->text412.htm#4282<->IsLocalNorm(A, x, p) : FldAb, RngOrdElt, PlcNumElt -&gt; BoolElt
5<->IsLocalNorm(A, x) <->text412.htm#4283<->IsLocalNorm(A, x) : FldAb, RngOrdElt -&gt; BoolElt
5<->Knot(A) <->text412.htm#4284<->Knot(A) : FldAb -&gt; GrpAb
5<->NormEquation(A, x) <->text412.htm#4285<->NormEquation(A, x) : FldAb, RngOrdElt -&gt; BoolElt, [RngOrdElt]
5<->IsNorm(A, x) <->text412.htm#4286<->IsNorm(A, x) : FldAb, RngOrdElt -&gt; BoolElt
4<->FldAb_norm-equation (Example H40E9)<->text412.htm#4287<->FldAb_norm-equation (Example H40E9)
4<->Example-norm-equation :<->text412.htm#4287<->Example-norm-equation :: FldAb_norm-equation (Example H40E9)
3<->norm-equations :<->text412.htm<->norm-equations :: Norm Equations (CLASS FIELD THEORY)
3<->attributes :<->text413.htm<->attributes :: Attributes (CLASS FIELD THEORY)
3<->orders :<->text413.htm#4289<->orders :: Orders (CLASS FIELD THEORY)
5<->o`CyclotomicExtensions <->text413.htm#4290<->o`CyclotomicExtensions : RngOrd -&gt; [Rec]
4<->FldAb_cyclotomic-extension (Example H40E10)<->text413.htm#4291<->FldAb_cyclotomic-extension (Example H40E10)
4<->Example-cyclotomic-extension :<->text413.htm#4291<->Example-cyclotomic-extension :: FldAb_cyclotomic-extension (Example H40E10)
3<->orders :<->text413.htm#4289<->orders :: Orders (CLASS FIELD THEORY)
3<->abelian-extensions :<->text413.htm#4292<->abelian-extensions :: Abelian Extensions (CLASS FIELD THEORY)
5<->A`Components <->text413.htm#4293<->A`Components : FldAb -&gt; [Rec]
5<->A`NormGroup :: A`DefiningGroup <->text413.htm#4294<->A`NormGroup :: A`DefiningGroup : FldAb -&gt; Rec
5<->A`DefiningGroup <->text413.htm#4294<->A`DefiningGroup : FldAb -&gt; Rec
5<->A`IsAbelian <->text413.htm#4295<->A`IsAbelian : FldAb -&gt; Bool
5<->A`IsNormal <->text413.htm#4296<->A`IsNormal : FldAb -&gt; Bool
5<->A`IsCentral <->text413.htm#4297<->A`IsCentral : FldAb -&gt; Bool
4<->FldAb_abelian-extension-attributes (Example H40E11)<->text413.htm#4298<->FldAb_abelian-extension-attributes (Example H40E11)
4<->Example-abelian-extension-attributes :<->text413.htm#4298<->Example-abelian-extension-attributes :: FldAb_abelian-extension-attributes (Example H40E11)
3<->abelian-extensions :<->text413.htm#4292<->abelian-extensions :: Abelian Extensions (CLASS FIELD THEORY)
3<->attributes :<->text413.htm<->attributes :: Attributes (CLASS FIELD THEORY)
3<->group-theory :<->text414.htm<->group-theory :: Group Theoretic Functions (CLASS FIELD THEORY)
3<->generic-groups :<->text414.htm#4300<->generic-groups :: Generic Groups (CLASS FIELD THEORY)
5<->GenericGroup(X) <->text414.htm#4301<->GenericGroup(X) : [] -&gt; GrpFp, Map
5<->AddGenerator(G, x) <->text414.htm#4302<->AddGenerator(G, x) : GrpFP, . -&gt; BoolElt, GrpFP, Map
5<->FindGenerators(G) <->text414.htm#4303<->FindGenerators(G) : GrpFP -&gt; []
3<->generic-groups :<->text414.htm#4300<->generic-groups :: Generic Groups (CLASS FIELD THEORY)
3<->group-theory :<->text414.htm<->group-theory :: Group Theoretic Functions (CLASS FIELD THEORY)
3<->abelian-extension :<->text405.htm<->abelian-extension :: CLASS FIELD THEORY
3<->characters :<->text417.htm<->characters :: DIRICHLET AND HECKE CHARACTERS
3<->GrpDrchNF :<->text418.htm<->GrpDrchNF :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->GrpDrchNFElt :<->text418.htm<->GrpDrchNFElt :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->GrpHecke :<->text418.htm<->GrpHecke :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->GrpHeckeElt :<->text418.htm<->GrpHeckeElt :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->introduction :<->text418.htm<->introduction :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->creation-functions :<->text418.htm#4308<->creation-functions :: Creation Functions (DIRICHLET AND HECKE CHARACTERS)
5<->DirichletGroup(I, oo) <->text418.htm#4309<->DirichletGroup(I, oo) : RngOrdIdl, SeqEnum -> GrpDrchNF
5<->DirichletGroup(I) <->text418.htm#4309<->DirichletGroup(I) : RngOrdIdl -&gt; GrpDrchNF
5<->HeckeCharacterGroup(I, oo) <->text418.htm#4310<->HeckeCharacterGroup(I, oo) : RngOrdIdl, SeqEnum -> GrpHecke
5<->HeckeCharacterGroup(I) <->text418.htm#4310<->HeckeCharacterGroup(I) : RngOrdIdl -&gt; GrpHecke
5<->UnitTrivialSubgroup(G) <->text418.htm#4311<->UnitTrivialSubgroup(G) : GrpDrchNF -&gt; GrpDrchNF
5<->TotallyUnitTrivialSubgroup(G) <->text418.htm#4312<->TotallyUnitTrivialSubgroup(G) : GrpDrchNF -&gt; GrpDrchNF
5<->HilbertCharacterSubgroup(G) <->text418.htm#4313<->HilbertCharacterSubgroup(G) : GrpHecke -&gt; GrpHecke
3<->creation-functions :<->text418.htm#4308<->creation-functions :: Creation Functions (DIRICHLET AND HECKE CHARACTERS)
3<->fogage :<->text418.htm#4314<->fogage :: Functions on Groups and Group Elements (DIRICHLET AND HECKE CHARACTERS)
5<->Modulus(G) <->text418.htm#4315<->Modulus(G) : GrpHecke -> RngOrdIdl, SeqEnum
5<->Modulus(chi) <->text418.htm#4315<->Modulus(chi) : GrpDrchNFElt -> RngOrdIdl, SeqEnum
5<->Modulus(chi) <->text418.htm#4315<->Modulus(chi) : GrpHeckeElt -> RngOrdIdl, SeqEnum
5<->Modulus(G) <->text418.htm#4315<->Modulus(G) : GrpDrchNF -&gt; RngOrdIdl, SeqEnum
5<->Order(psi) <->text418.htm#4316<->Order(psi) : GrpHeckeElt -> RngIntElt
5<->Order(chi) <->text418.htm#4316<->Order(chi) : GrpDrchNFElt -&gt; RngIntElt
5<->Random(G) <->text418.htm#4317<->Random(G) : GrpHecke -> GrpHeckeElt
5<->Random(G) <->text418.htm#4317<->Random(G) : GrpDrchNF -&gt; GrpDrchNFElt
5<->Domain(G) <->text418.htm#4318<->Domain(G) : GrpDrchNFElt -> FldNum
5<->Domain(G) <->text418.htm#4318<->Domain(G) : GrpDrchNF -&gt; FldNum
5<->Domain(G) <->text418.htm#4319<->Domain(G) : GrpHeckeElt -> PowIdl
5<->Domain(G) <->text418.htm#4319<->Domain(G) : GrpHecke -&gt; PowIdl
5<->Decomposition(chi) <->text418.htm#4320<->Decomposition(chi) : GrpDrchNFElt -&gt; List
5<->Components(psi) <->text418.htm#4321<->Components(psi) : GrpHeckeElt -> Assoc
5<->Components(chi) <->text418.htm#4321<->Components(chi) : GrpDrchNFElt -&gt; Assoc
5<->Component(psi, P) <->text418.htm#4322<->Component(psi, P) : GrpHeckeElt, RngOrdIdl -> GrpDrchNFElt
5<->Component(chi, oo) <->text418.htm#4322<->Component(chi, oo) : GrpDrchNFElt, RngIntElt -> GrpDrchNFEl
5<->Component(psi, oo) <->text418.htm#4322<->Component(psi, oo) : GrpHeckeElt, RngIntElt -> GrpDrchNFElt
5<->Component(chi, P) <->text418.htm#4322<->Component(chi, P) : GrpDrchNFElt, PlcNumElt -> GrpDrchNFEl
5<->Component(psi, P) <->text418.htm#4322<->Component(psi, P) : GrpHeckeElt, PlcNumElt -> GrpDrchNFElt
5<->Component(chi, P) <->text418.htm#4322<->Component(chi, P) : GrpDrchNFElt, RngOrdIdl -&gt; GrpDrchNFEl
5<->Conductor(psi) <->text418.htm#4323<->Conductor(psi) : GrpHeckeElt -> RngOrdIdl, SeqEnum
5<->Conductor(chi) <->text418.htm#4323<->Conductor(chi) : GrpDrchNFElt -&gt; RngOrdIdl, SeqEnum
5<->AssociatedPrimitiveCharacter(psi) <->text418.htm#4324<->AssociatedPrimitiveCharacter(psi) : GrpHeckeElt -> GrpHeckeElt
5<->AssociatedPrimitiveCharacter(chi) <->text418.htm#4324<->AssociatedPrimitiveCharacter(chi) : GrpDrchNFElt -&gt; GrpDrchNFElt
5<->Restrict(psi, H) <->text418.htm#4325<->Restrict(psi, H) : GrpHeckeElt, GrpHecke -> GrpHeckeElt
5<->Restrict(chi, I) <->text418.htm#4325<->Restrict(chi, I) : GrpDrchNFElt, RngOrdIdl -> GrpDrchNFElt
5<->Restrict(psi, I) <->text418.htm#4325<->Restrict(psi, I) : GrpHeckeElt, RngOrdIdl -> GrpHeckeElt
5<->Restrict(chi, I, oo) <->text418.htm#4325<->Restrict(chi, I, oo) : GrpDrchNFElt, RngOrdIdl, SeqEnum -> GrpDrchNFElt
5<->Restrict(psi, I, oo) <->text418.htm#4325<->Restrict(psi, I, oo) : GrpHeckeElt, RngOrdIdl, SeqEnum -> GrpHeckeElt
5<->Restrict(G, D) <->text418.htm#4325<->Restrict(G, D) : GrpDrchNF, GrpDrchNF -> GrpDrchNF
5<->Restrict(G, H) <->text418.htm#4325<->Restrict(G, H) : GrpHecke, GrpHecke -> GrpHecke
5<->Restrict(G, I) <->text418.htm#4325<->Restrict(G, I) : GrpDrchNF, RngOrdIdl -> GrpDrchNF
5<->Restrict(G, I) <->text418.htm#4325<->Restrict(G, I) : GrpHecke, RngOrdIdl -> GrpHecke
5<->Restrict(G, I, oo) <->text418.htm#4325<->Restrict(G, I, oo) : GrpDrchNF, RngOrdIdl, SeqEnum -> GrpDrchNF
5<->Restrict(G, I, oo) <->text418.htm#4325<->Restrict(G, I, oo) : GrpHecke, RngOrdIdl, SeqEnum -> GrpHecke
5<->Restrict(chi, D) <->text418.htm#4325<->Restrict(chi, D) : GrpDrchNFElt, GrpDrchNF -&gt; GrpDrchNFElt
5<->TargetRestriction(H, C) <->text418.htm#4326<->TargetRestriction(H, C) : GrpHecke, FldCyc -> GrpDrchNF
5<->TargetRestriction(G, C) <->text418.htm#4326<->TargetRestriction(G, C) : GrpDrchNF, FldCyc -&gt; GrpDrchNF
5<->SetTargetRing($\sim $psi, e) <->text418.htm#4327<->SetTargetRing($\sim $psi, e) : GrpHeckeElt, RngElt ->
5<->SetTargetRing(~chi, e) <->text418.htm#4327<->SetTargetRing(~chi, e) : GrpDrchNFElt, RngElt -&gt;
5<->Extend(psi, H) <->text418.htm#4328<->Extend(psi, H) : GrpHeckeElt, GrpHecke -> GrpHeckeElt
5<->Extend(chi, I) <->text418.htm#4328<->Extend(chi, I) : GrpDrchNFElt, RngOrdIdl -> GrpDrchNFElt
5<->Extend(psi, I) <->text418.htm#4328<->Extend(psi, I) : GrpHeckeElt, RngOrdIdl -> GrpHeckeElt
5<->Extend(chi, I, oo) <->text418.htm#4328<->Extend(chi, I, oo) : GrpDrchNFElt, RngOrdIdl, SeqEnum -> GrpDrchNFElt
5<->Extend(psi, I, oo) <->text418.htm#4328<->Extend(psi, I, oo) : GrpHeckeElt, RngOrdIdl, SeqEnum -> GrpHeckeElt
5<->Extend(G, D) <->text418.htm#4328<->Extend(G, D) : GrpDrchNF, GrpDrchNF -> GrpDrchNF
5<->Extend(G, H) <->text418.htm#4328<->Extend(G, H) : GrpHecke, GrpHecke -> GrpHecke
5<->Extend(G, I) <->text418.htm#4328<->Extend(G, I) : GrpDrchNF, RngOrdIdl -> GrpDrchNF
5<->Extend(G, I) <->text418.htm#4328<->Extend(G, I) : GrpHecke, RngOrdIdl -> GrpHecke
5<->Extend(G, I, oo) <->text418.htm#4328<->Extend(G, I, oo) : GrpDrchNF, RngOrdIdl, SeqEnum -> GrpDrchNF
5<->Extend(G, I, oo) <->text418.htm#4328<->Extend(G, I, oo) : GrpHecke, RngOrdIdl, SeqEnum -> GrpHecke
5<->Extend(chi, D) <->text418.htm#4328<->Extend(chi, D) : GrpDrchNFElt, GrpDrchNF -&gt; GrpDrchNFElt
3<->fogage :<->text418.htm#4314<->fogage :: Functions on Groups and Group Elements (DIRICHLET AND HECKE CHARACTERS)
3<->predicates :<->text418.htm#4329<->predicates :: Predicates on Group Elements (DIRICHLET AND HECKE CHARACTERS)
5<->IsTrivial(psi) <->text418.htm#4330<->IsTrivial(psi) : GrpHeckeElt -> BoolElt
5<->IsTrivial(chi) <->text418.htm#4330<->IsTrivial(chi) : GrpDrchNFElt -&gt; BoolElt
5<->IsTrivialOnUnits(chi) <->text418.htm#4331<->IsTrivialOnUnits(chi) : GrpDrchNFElt -&gt; BoolElt
5<->IsOdd(chi) <->text418.htm#4332<->IsOdd(chi) : GrpDrchNFElt -&gt; BoolElt
5<->IsEven(chi) <->text418.htm#4333<->IsEven(chi) : GrpDrchNFElt -&gt; BoolElt
5<->IsTotallyEven(chi) <->text418.htm#4334<->IsTotallyEven(chi) : GrpDrchNFElt -&gt; BoolElt
5<->IsPrimitive(psi) <->text418.htm#4335<->IsPrimitive(psi) : GrpHeckeElt -> BoolElt
5<->IsPrimitive(chi) <->text418.htm#4335<->IsPrimitive(chi) : GrpDrchNFElt -&gt; BoolElt
3<->predicates :<->text418.htm#4329<->predicates :: Predicates on Group Elements (DIRICHLET AND HECKE CHARACTERS)
3<->dirichlet-hecke :<->text418.htm#4336<->dirichlet-hecke :: Passing between Dirichlet and Hecke Characters (DIRICHLET AND HECKE CHARACTERS)
5<->HeckeLift(chi) <->text418.htm#4337<->HeckeLift(chi) : GrpDrchNFElt -&gt; GrpHeckeElt, GrpHecke
5<->DirichletRestriction(psi) <->text418.htm#4338<->DirichletRestriction(psi) : GrpHeckeElt -&gt; GrpDrchNFElt
5<->NormInduction(K, chi) <->text418.htm#4339<->NormInduction(K, chi) : FldNum, GrpDrchElt -&gt; GrpHeckeElt
5<->QuadraticCharacter(e) <->text418.htm#4340<->QuadraticCharacter(e) : FldNumElt -&gt; GrpHeckeElt
4<->Char_dirichletQ (Example H41E1)<->text418.htm#4341<->Char_dirichletQ (Example H41E1)
4<->Example-dirichletQ :<->text418.htm#4341<->Example-dirichletQ :: Char_dirichletQ (Example H41E1)
4<->Char_simple-char-ops (Example H41E2)<->text418.htm#4342<->Char_simple-char-ops (Example H41E2)
4<->Example-simple-char-ops :<->text418.htm#4342<->Example-simple-char-ops :: Char_simple-char-ops (Example H41E2)
5<->DirichletCharacter(I, oo, B) <->text418.htm#4343<->DirichletCharacter(I, oo, B) : RngOrdIdl, SeqEnum, Tup -> GrpDrchNFElt, GrpDrchNF
5<->DirichletCharacter(G, B) <->text418.htm#4343<->DirichletCharacter(G, B) : GrpDrchNF, Tup -> GrpDrchNFElt, GrpDrchNF
5<->DirichletCharacter(I, L) <->text418.htm#4343<->DirichletCharacter(I, L) : RngOrdIdl, List -> GrpDrchNFElt, GrpDrchNF
5<->DirichletCharacter(I, oo, L) <->text418.htm#4343<->DirichletCharacter(I, oo, L) : RngOrdIdl, SeqEnum, List -> GrpDrchNFElt, GrpDrchNF
5<->DirichletCharacter(G, L) <->text418.htm#4343<->DirichletCharacter(G, L) : GrpDrchNF, List -> GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter(I, oo, B) : RngOrdIdl, SeqEnum, Tup -> GrpHeckeElt :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter(I, oo, B) : RngOrdIdl, SeqEnum, Tup -> GrpHeckeElt :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter(G, B) : GrpHecke, Tup -> GrpHeckeElt :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter(G, B) : GrpHecke, Tup -> GrpHeckeElt :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter(I, L) : RngOrdIdl, List -> GrpHeckeElt :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter(I, L) : RngOrdIdl, List -> GrpHeckeElt :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter(I, oo, L) : RngOrdIdl, SeqEnum, List -> GrpHeckeElt :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter(I, oo, L) : RngOrdIdl, SeqEnum, List -> GrpHeckeElt :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->HeckeCharacter(G, L) : GrpHecke, List -> GrpHeckeElt :: DirichletCharacter(I, B) <->text418.htm#4343<->HeckeCharacter(G, L) : GrpHecke, List -> GrpHeckeElt :: DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
5<->DirichletCharacter(I, B) <->text418.htm#4343<->DirichletCharacter(I, B) : RngOrdIdl, Tup -&gt; GrpDrchNFElt, GrpDrchNF
4<->Char_dirichlet-hecke (Example H41E3)<->text418.htm#4344<->Char_dirichlet-hecke (Example H41E3)
4<->Example-dirichlet-hecke :<->text418.htm#4344<->Example-dirichlet-hecke :: Char_dirichlet-hecke (Example H41E3)
5<->CentralCharacter(psi) <->text418.htm#4345<->CentralCharacter(psi) : GrpHeckeElt -> GrpDrchNFElt
5<->CentralCharacter(chi) <->text418.htm#4345<->CentralCharacter(chi) : GrpDrchNFElt -&gt; GrpDrchNFElt
4<->Char_central-chars (Example H41E4)<->text418.htm#4346<->Char_central-chars (Example H41E4)
4<->Example-central-chars :<->text418.htm#4346<->Example-central-chars :: Char_central-chars (Example H41E4)
5<->DirichletCharacterOverQ :: DirichletCharacterOverNF(chi) <->text418.htm#4347<->DirichletCharacterOverQ :: DirichletCharacterOverNF(chi) : GrpDrchElt -&gt; GrpDrchNFElt
5<->DirichletCharacterOverNF(chi) <->text418.htm#4347<->DirichletCharacterOverNF(chi) : GrpDrchElt -&gt; GrpDrchNFElt
4<->Char_dirich-chars-over-nf-and-q (Example H41E5)<->text418.htm#4348<->Char_dirich-chars-over-nf-and-q (Example H41E5)
4<->Example-dirich-chars-over-nf-and-q :<->text418.htm#4348<->Example-dirich-chars-over-nf-and-q :: Char_dirich-chars-over-nf-and-q (Example H41E5)
3<->dirichlet-hecke :<->text418.htm#4336<->dirichlet-hecke :: Passing between Dirichlet and Hecke Characters (DIRICHLET AND HECKE CHARACTERS)
3<->l-func :<->text418.htm#4349<->l-func :: L-functions of Hecke Characters (DIRICHLET AND HECKE CHARACTERS)
4<->Char_lfunc-hecke (Example H41E6)<->text418.htm#4350<->Char_lfunc-hecke (Example H41E6)
4<->Example-lfunc-hecke :<->text418.htm#4350<->Example-lfunc-hecke :: Char_lfunc-hecke (Example H41E6)
3<->l-func :<->text418.htm#4349<->l-func :: L-functions of Hecke Characters (DIRICHLET AND HECKE CHARACTERS)
3<->gross :<->text418.htm#4351<->gross :: Hecke Gr&ouml;ssencharacters and their L-functions (DIRICHLET AND HECKE CHARACTERS)
5<->RawEval :: Grossencharacter(psi, chi, T) <->text418.htm#4352<->RawEval :: Grossencharacter(psi, chi, T) : GrpHeckeElt, GrpDrchNFElt, SeqEnum -&gt; GrossenChar
5<->Grossencharacter(psi, chi, T) <->text418.htm#4352<->Grossencharacter(psi, chi, T) : GrpHeckeElt, GrpDrchNFElt, SeqEnum -&gt; GrossenChar
5<->Grossencharacter(psi, T) <->text418.htm#4353<->Grossencharacter(psi, T) : GrpHeckeElt, SeqEnum -&gt; GrossenChar
5<->Modulus :: Conductor(GR) <->text418.htm#4354<->Modulus :: Conductor(GR) : GrossenChar -&gt; RngOrdIdl, SeqEnum
5<->IsPrimitive :: Conductor(GR) <->text418.htm#4354<->IsPrimitive :: Conductor(GR) : GrossenChar -&gt; RngOrdIdl, SeqEnum
5<->AssociatedPrimitiveGrossencharacter :: Conductor(GR) <->text418.htm#4354<->AssociatedPrimitiveGrossencharacter :: Conductor(GR) : GrossenChar -&gt; RngOrdIdl, SeqEnum
5<->Conductor(GR) <->text418.htm#4354<->Conductor(GR) : GrossenChar -&gt; RngOrdIdl, SeqEnum
5<->Components(GR) <->text418.htm#4355<->Components(GR) : GrossenChar -&gt; Assoc
5<->Component(GR, oo) <->text418.htm#4356<->Component(GR, oo) : GrossenChar, RngIntElt -> GrpDrchNFEl
5<->Component(GR, P) <->text418.htm#4356<->Component(GR, P) : GrossenChar, PlcNumElt -> GrpDrchNFEl
5<->Component(GR, P) <->text418.htm#4356<->Component(GR, P) : GrossenChar, RngOrdIdl -&gt; GrpDrchNFEl
5<->Restrict :: Extend(GR, I) <->text418.htm#4357<->Restrict :: Extend(GR, I) : GrossenChar, RngOrdIdl -&gt; GrossenChar
5<->Extend(GR, I) <->text418.htm#4357<->Extend(GR, I) : GrossenChar, RngOrdIdl -&gt; GrossenChar
5<->CentralCharacter(GR) <->text418.htm#4358<->CentralCharacter(GR) : GrossenChar -&gt; GrpDrchNFElt
5<->GrossenTwist(GR, D) <->text418.htm#4359<->GrossenTwist(GR, D) : GrossenChar, List -&gt; GrossenChar, GrpHecke
5<->TateTwist(psi, n) <->text418.htm#4360<->TateTwist(psi, n) : GrpHeckeElt, RngIntElt -> GrossenChar
5<->TateTwist(GR, n) <->text418.htm#4360<->TateTwist(GR, n) : GrossenChar, RngIntElt -&gt; GrossenChar
4<->Char_grossenchar-gaussian (Example H41E7)<->text418.htm#4361<->Char_grossenchar-gaussian (Example H41E7)
4<->Example-grossenchar-gaussian :<->text418.htm#4361<->Example-grossenchar-gaussian :: Char_grossenchar-gaussian (Example H41E7)
4<->Char_grossenchar-sqrt23 (Example H41E8)<->text418.htm#4362<->Char_grossenchar-sqrt23 (Example H41E8)
4<->Example-grossenchar-sqrt23 :<->text418.htm#4362<->Example-grossenchar-sqrt23 :: Char_grossenchar-sqrt23 (Example H41E8)
4<->Char_grossenchar-symcubed-sqrt59 (Example H41E9)<->text418.htm#4363<->Char_grossenchar-symcubed-sqrt59 (Example H41E9)
4<->Example-grossenchar-symcubed-sqrt59 :<->text418.htm#4363<->Example-grossenchar-symcubed-sqrt59 :: Char_grossenchar-symcubed-sqrt59 (Example H41E9)
4<->Char_grossen-char-cyclo5 (Example H41E10)<->text418.htm#4364<->Char_grossen-char-cyclo5 (Example H41E10)
4<->Example-grossen-char-cyclo5 :<->text418.htm#4364<->Example-grossen-char-cyclo5 :: Char_grossen-char-cyclo5 (Example H41E10)
4<->Char_grossenchar-embedding (Example H41E11)<->text418.htm#4365<->Char_grossenchar-embedding (Example H41E11)
4<->Example-grossenchar-embedding :<->text418.htm#4365<->Example-grossenchar-embedding :: Char_grossenchar-embedding (Example H41E11)
4<->Char_grossen-large-gamma (Example H41E12)<->text418.htm#4366<->Char_grossen-large-gamma (Example H41E12)
4<->Example-grossen-large-gamma :<->text418.htm#4366<->Example-grossen-large-gamma :: Char_grossen-large-gamma (Example H41E12)
4<->Char_grossen-cyclo8 (Example H41E13)<->text418.htm#4367<->Char_grossen-cyclo8 (Example H41E13)
4<->Example-grossen-cyclo8 :<->text418.htm#4367<->Example-grossen-cyclo8 :: Char_grossen-cyclo8 (Example H41E13)
4<->Char_hypgeom-mot (Example H41E14)<->text418.htm#4368<->Char_hypgeom-mot (Example H41E14)
4<->Example-hypgeom-mot :<->text418.htm#4368<->Example-hypgeom-mot :: Char_hypgeom-mot (Example H41E14)
3<->gross :<->text418.htm#4351<->gross :: Hecke Gr&ouml;ssencharacters and their L-functions (DIRICHLET AND HECKE CHARACTERS)
3<->hecke-root-numbers :<->text418.htm#4369<->hecke-root-numbers :: Local Root Numbers (DIRICHLET AND HECKE CHARACTERS)
5<->RootNumber(psi, P) <->text418.htm#4370<->RootNumber(psi, P) : GrpHeckeElt, RngOrgIdl -> FldComElt
5<->RootNumber(GR, p) <->text418.htm#4370<->RootNumber(GR, p) : GrossenChar, PlcNumElt -> FldComElt
5<->RootNumber(psi, p) <->text418.htm#4370<->RootNumber(psi, p) : GrpHeckeElt, PlcNumElt -> FldComElt
5<->RootNumber(GR, P) <->text418.htm#4370<->RootNumber(GR, P) : GrossenChar, RngOrgIdl -&gt; FldComElt
5<->RootNumber(psi, p) <->text418.htm#4371<->RootNumber(psi, p) : GrpHeckeElt, RngIntElt -> FldComElt
5<->RootNumber(GR, p) <->text418.htm#4371<->RootNumber(GR, p) : GrossenChar, RngIntElt -&gt; FldComElt
5<->RootNumbers(psi) <->text418.htm#4372<->RootNumbers(psi) : GrossenChar -> SeqEnum
5<->RootNumbers(GR) <->text418.htm#4372<->RootNumbers(GR) : GrossenChar -&gt; SeqEnum
5<->RootNumber(psi) <->text418.htm#4373<->RootNumber(psi) : GrossenChar -> SeqEnum
5<->RootNumber(GR) <->text418.htm#4373<->RootNumber(GR) : GrossenChar -&gt; SeqEnum
4<->Char_rootno-27a (Example H41E15)<->text418.htm#4374<->Char_rootno-27a (Example H41E15)
4<->Example-rootno-27a :<->text418.htm#4374<->Example-rootno-27a :: Char_rootno-27a (Example H41E15)
4<->Char_rohrlich-rootno (Example H41E16)<->text418.htm#4375<->Char_rohrlich-rootno (Example H41E16)
4<->Example-rohrlich-rootno :<->text418.htm#4375<->Example-rohrlich-rootno :: Char_rohrlich-rootno (Example H41E16)
3<->hecke-root-numbers :<->text418.htm#4369<->hecke-root-numbers :: Local Root Numbers (DIRICHLET AND HECKE CHARACTERS)
3<->grossen-ec :<->text418.htm#4376<->grossen-ec :: Gr&ouml;ssencharacters and Elliptic Curves (DIRICHLET AND HECKE CHARACTERS)
5<->Grossencharacter(E) <->text418.htm#4377<->Grossencharacter(E) : CrvEll -&gt; GrossenChar
5<->EllipticCurve(GR) <->text418.htm#4378<->EllipticCurve(GR) : GrossenChar -&gt; CrvEll
4<->Char_grossenchar-and-ec (Example H41E17)<->text418.htm#4379<->Char_grossenchar-and-ec (Example H41E17)
4<->Example-grossenchar-and-ec :<->text418.htm#4379<->Example-grossenchar-and-ec :: Char_grossenchar-and-ec (Example H41E17)
3<->grossen-ec :<->text418.htm#4376<->grossen-ec :: Gr&ouml;ssencharacters and Elliptic Curves (DIRICHLET AND HECKE CHARACTERS)
3<->introduction :<->text418.htm<->introduction :: Introduction (DIRICHLET AND HECKE CHARACTERS)
3<->characters :<->text417.htm<->characters :: DIRICHLET AND HECKE CHARACTERS
3<->algebraically-closed-field :<->text421.htm<->algebraically-closed-field :: ALGEBRAICALLY CLOSED FIELDS
3<->introduction :<->text422.htm<->introduction :: Introduction (ALGEBRAICALLY CLOSED FIELDS)
3<->representation :<->text423.htm<->representation :: Representation (ALGEBRAICALLY CLOSED FIELDS)
3<->structure :<->text424.htm<->structure :: Creation of Structures (ALGEBRAICALLY CLOSED FIELDS)
5<->AlgebraicClosure(K) <->text424.htm#4386<->AlgebraicClosure(K) : Fld -&gt; FldAC
5<->AlgebraicClosure() <->text424.htm#4387<->AlgebraicClosure() : -&gt; FldAC
5<->AssignNamePrefix(A, S) <->text424.htm#4388<->AssignNamePrefix(A, S) : FldAC, MonStgElt -&gt;
3<->structure :<->text424.htm<->structure :: Creation of Structures (ALGEBRAICALLY CLOSED FIELDS)
3<->creation :<->text425.htm<->creation :: Creation of Elements (ALGEBRAICALLY CLOSED FIELDS)
3<->coercion :<->text425.htm#4390<->coercion :: Coercion (ALGEBRAICALLY CLOSED FIELDS)
5<->A ! a <->text425.htm#4391<->A ! a : FldAC, RngElt -&gt; FldACElt
3<->coercion :<->text425.htm#4390<->coercion :: Coercion (ALGEBRAICALLY CLOSED FIELDS)
3<->roots :<->text425.htm#4392<->roots :: Roots (ALGEBRAICALLY CLOSED FIELDS)
5<->Roots(f, A) <->text425.htm#4393<->Roots(f, A) : RngUPolElt, FldAC -> [ < FldACElt, RngIntElt> ]
5<->Roots(f) <->text425.htm#4393<->Roots(f) : RngUPolElt -&gt; [ &lt; FldACElt, RngIntElt&gt; ]
5<->RootOfUnity(n, A) <->text425.htm#4394<->RootOfUnity(n, A) : RngIntElt, FldAC -&gt; FldACElt
5<->Sqrt :: SquareRoot(a) <->text425.htm#4395<->Sqrt :: SquareRoot(a) : FldACElt -&gt; FldACElt
5<->SquareRoot(a) <->text425.htm#4395<->SquareRoot(a) : FldACElt -&gt; FldACElt
5<->IsSquare(a) <->text425.htm#4396<->IsSquare(a) : FldACElt -&gt; BoolElt
5<->Root(a, n) <->text425.htm#4397<->Root(a, n) : FldACElt, RngIntElt -&gt; FldACElt
5<->IsPower(a, n) <->text425.htm#4398<->IsPower(a, n) : FldACElt, RngIntElt -&gt; BoolElt, FldACElt
3<->roots :<->text425.htm#4392<->roots :: Roots (ALGEBRAICALLY CLOSED FIELDS)
3<->variable :<->text425.htm#4399<->variable :: Variables (ALGEBRAICALLY CLOSED FIELDS)
5<->A . i <->text425.htm#4400<->A . i : FldAC, RngIntElt -&gt; FldACElt
4<->FldAC_Create (Example H42E1)<->text425.htm#4401<->FldAC_Create (Example H42E1)
4<->Example-Create :<->text425.htm#4401<->Example-Create :: FldAC_Create (Example H42E1)
4<->FldAC_SwinnertonDyer (Example H42E2)<->text425.htm#4402<->FldAC_SwinnertonDyer (Example H42E2)
4<->Example-SwinnertonDyer :<->text425.htm#4402<->Example-SwinnertonDyer :: FldAC_SwinnertonDyer (Example H42E2)
4<->FldAC_Puiseux (Example H42E3)<->text425.htm#4403<->FldAC_Puiseux (Example H42E3)
4<->Example-Puiseux :<->text425.htm#4403<->Example-Puiseux :: FldAC_Puiseux (Example H42E3)
3<->variable :<->text425.htm#4399<->variable :: Variables (ALGEBRAICALLY CLOSED FIELDS)
3<->creation :<->text425.htm<->creation :: Creation of Elements (ALGEBRAICALLY CLOSED FIELDS)
3<->related :<->text426.htm<->related :: Related Structures (ALGEBRAICALLY CLOSED FIELDS)
3<->property :<->text427.htm<->property :: Properties (ALGEBRAICALLY CLOSED FIELDS)
5<->BaseField(A) <->text427.htm#4406<->BaseField(A) : FldAC -&gt; Fld
5<->Rank(A) <->text427.htm#4407<->Rank(A) : FldAC -&gt; RngIntElt
5<->Degree(A, v) <->text427.htm#4408<->Degree(A, v) : FldAC, RngIntElt -&gt; RngIntElt
5<->Degree(A) <->text427.htm#4409<->Degree(A) : FldAC -&gt; RngIntElt
5<->QuotientRing :: AffineAlgebra(A) <->text427.htm#4410<->QuotientRing :: AffineAlgebra(A) : FldAC -&gt; RngMPolRes
5<->AffineAlgebra(A) <->text427.htm#4410<->AffineAlgebra(A) : FldAC -&gt; RngMPolRes
5<->Ideal(A) <->text427.htm#4411<->Ideal(A) : FldAC -&gt; RngMPol
3<->property :<->text427.htm<->property :: Properties (ALGEBRAICALLY CLOSED FIELDS)
3<->predicate :<->text428.htm<->predicate :: Ring Predicates and Properties (ALGEBRAICALLY CLOSED FIELDS)
3<->operation-element :<->text429.htm<->operation-element :: Element Operations (ALGEBRAICALLY CLOSED FIELDS)
3<->arithmetic :<->text429.htm#4414<->arithmetic :: Arithmetic Operators (ALGEBRAICALLY CLOSED FIELDS)
3<->Boolean :<->text429.htm#4415<->Boolean :: Equality and Membership (ALGEBRAICALLY CLOSED FIELDS)
3<->generic :<->text429.htm#4416<->generic :: Parent and Category (ALGEBRAICALLY CLOSED FIELDS)
3<->element-Boolean :<->text429.htm#4417<->element-Boolean :: Predicates on Ring Elements (ALGEBRAICALLY CLOSED FIELDS)
5<->IsZero(a) <->text429.htm#4418<->IsZero(a) : FldACElt -&gt; BoolElt
5<->IsOne(a) <->text429.htm#4419<->IsOne(a) : FldACElt -&gt; BoolElt
5<->IsMinusOne(a) <->text429.htm#4420<->IsMinusOne(a) : FldACElt -&gt; BoolElt
5<->a eq b <->text429.htm#4421<->a eq b : FldACElt, FldACElt -&gt; BoolElt
3<->element-Boolean :<->text429.htm#4417<->element-Boolean :: Predicates on Ring Elements (ALGEBRAICALLY CLOSED FIELDS)
3<->minimal-polynomial-norm-trace :<->text429.htm#4422<->minimal-polynomial-norm-trace :: Minimal Polynomial, Norm and  Trace (ALGEBRAICALLY CLOSED FIELDS)
5<->MinimalPolynomial(a) <->text429.htm#4423<->MinimalPolynomial(a) : FldACElt -&gt; RngUPolElt
5<->Norm(a) <->text429.htm#4424<->Norm(a) : FldACElt -&gt; FldACElt
5<->Trace(a) <->text429.htm#4425<->Trace(a) : FldACElt -&gt; FldACElt
5<->Conjugates(a) <->text429.htm#4426<->Conjugates(a) : FldACElt -&gt; [ FldACElt ]
4<->FldAC_Functions (Example H42E4)<->text429.htm#4427<->FldAC_Functions (Example H42E4)
4<->Example-Functions :<->text429.htm#4427<->Example-Functions :: FldAC_Functions (Example H42E4)
3<->minimal-polynomial-norm-trace :<->text429.htm#4422<->minimal-polynomial-norm-trace :: Minimal Polynomial, Norm and  Trace (ALGEBRAICALLY CLOSED FIELDS)
3<->operation-element :<->text429.htm<->operation-element :: Element Operations (ALGEBRAICALLY CLOSED FIELDS)
3<->simplify :<->text430.htm<->simplify :: Simplification (ALGEBRAICALLY CLOSED FIELDS)
5<->Simplify(A) <->text430.htm#4429<->Simplify(A) : FldAC -&gt;
5<->Prune(A) <->text430.htm#4430<->Prune(A) : FldAC -&gt;
3<->simplify :<->text430.htm<->simplify :: Simplification (ALGEBRAICALLY CLOSED FIELDS)
3<->absolute :<->text431.htm<->absolute :: Absolute Field (ALGEBRAICALLY CLOSED FIELDS)
5<->AbsoluteQuotientRing :: AbsoluteAffineAlgebra(A) <->text431.htm#4432<->AbsoluteQuotientRing :: AbsoluteAffineAlgebra(A) : FldAC -&gt; RngUPolRes
5<->AbsoluteAffineAlgebra(A) <->text431.htm#4432<->AbsoluteAffineAlgebra(A) : FldAC -&gt; RngUPolRes
5<->AbsolutePolynomial(A) <->text431.htm#4433<->AbsolutePolynomial(A) : FldAC -&gt;
5<->Absolutize(A) <->text431.htm#4434<->Absolutize(A) : FldAC -&gt;
4<->FldAC_Cyclic6 (Example H42E5)<->text431.htm#4435<->FldAC_Cyclic6 (Example H42E5)
4<->Example-Cyclic6 :<->text431.htm#4435<->Example-Cyclic6 :: FldAC_Cyclic6 (Example H42E5)
4<->FldAC_Split (Example H42E6)<->text431.htm#4436<->FldAC_Split (Example H42E6)
4<->Example-Split :<->text431.htm#4436<->Example-Split :: FldAC_Split (Example H42E6)
3<->absolute :<->text431.htm<->absolute :: Absolute Field (ALGEBRAICALLY CLOSED FIELDS)
3<->algebraically-closed-field :<->text421.htm<->algebraically-closed-field :: ALGEBRAICALLY CLOSED FIELDS
3<->rational-function-field :<->text434.htm<->rational-function-field :: RATIONAL FUNCTION FIELDS
3<->FldFunRat :<->text435.htm<->FldFunRat :: Introduction (RATIONAL FUNCTION FIELDS)
3<->FldFunRatElt :<->text435.htm<->FldFunRatElt :: Introduction (RATIONAL FUNCTION FIELDS)
3<->introduction :<->text435.htm<->introduction :: Introduction (RATIONAL FUNCTION FIELDS)
3<->creation :<->text436.htm<->creation :: Creation Functions (RATIONAL FUNCTION FIELDS)
3<->structure :<->text436.htm#4442<->structure :: Creation of Structures (RATIONAL FUNCTION FIELDS)
5<->RationalFunctionField :: FunctionField(R) <->text436.htm#4443<->RationalFunctionField :: FunctionField(R) : Rng -&gt; FldFunRat
5<->FunctionField(R) <->text436.htm#4443<->FunctionField(R) : Rng -&gt; FldFunRat
5<->RationalFunctionField :: FunctionField(R, r) <->text436.htm#4444<->RationalFunctionField :: FunctionField(R, r) : Rng, RngIntElt -&gt; FldFunRat
5<->FunctionField(R, r) <->text436.htm#4444<->FunctionField(R, r) : Rng, RngIntElt -&gt; FldFunRat
5<->FieldOfFractions(P) <->text436.htm#4445<->FieldOfFractions(P) : RngUPol -&gt; FldFunRat
3<->structure :<->text436.htm#4442<->structure :: Creation of Structures (RATIONAL FUNCTION FIELDS)
3<->names :<->text436.htm#4446<->names :: Names (RATIONAL FUNCTION FIELDS)
5<->AssignNames(~F, s) <->text436.htm#4447<->AssignNames(~F, s) : FldFunRat, [ MonStgElt ]) -&gt;
5<->Name(F, i) <->text436.htm#4448<->Name(F, i) : FldFunRat, RngIntElt -&gt; FldFunRatElt
3<->names :<->text436.htm#4446<->names :: Names (RATIONAL FUNCTION FIELDS)
3<->element :<->text436.htm#4449<->element :: Creation of Elements (RATIONAL FUNCTION FIELDS)
5<->elt :: F ! [a, b] <->text436.htm#4450<->elt :: F ! [a, b] : FldFunRat, RngUPolElt, RngUPolElt -&gt; FldFunRatElt
5<->F ! [a, b] <->text436.htm#4450<->F ! [a, b] : FldFunRat, RngUPolElt, RngUPolElt -&gt; FldFunRatElt
5<->F ! a <->text436.htm#4451<->F ! a : FldFunRat, FldElt -&gt; FldFunRatElt
5<->K . i <->text436.htm#4452<->K . i : FldFunRat, RngIntElt -&gt; FldFunRatElt
4<->FldFunRat_FunctionField (Example H43E1)<->text436.htm#4453<->FldFunRat_FunctionField (Example H43E1)
4<->Example-FunctionField :<->text436.htm#4453<->Example-FunctionField :: FldFunRat_FunctionField (Example H43E1)
3<->element :<->text436.htm#4449<->element :: Creation of Elements (RATIONAL FUNCTION FIELDS)
3<->creation :<->text436.htm<->creation :: Creation Functions (RATIONAL FUNCTION FIELDS)
3<->operation :<->text437.htm<->operation :: Structure Operations (RATIONAL FUNCTION FIELDS)
3<->magma :<->text437.htm#4455<->magma :: Related Structures (RATIONAL FUNCTION FIELDS)
5<->RingOfIntegers :: IntegerRing(F) <->text437.htm#4456<->RingOfIntegers :: IntegerRing(F) : FldFunRat -&gt; RngPol
5<->IntegerRing(F) <->text437.htm#4456<->IntegerRing(F) : FldFunRat -&gt; RngPol
5<->CoefficientRing :: BaseRing(F) <->text437.htm#4457<->CoefficientRing :: BaseRing(F) : FldFunRat -&gt; Rng
5<->BaseRing(F) <->text437.htm#4457<->BaseRing(F) : FldFunRat -&gt; Rng
5<->Rank(F) <->text437.htm#4458<->Rank(F) : FldFunRat -&gt; RngIntElt
5<->ValuationRing(F) <->text437.htm#4459<->ValuationRing(F) : FldFunRat -&gt; RngVal
5<->ValuationRing(F, f) <->text437.htm#4460<->ValuationRing(F, f) : FldFunRat, RngUPolElt -&gt; RngVal
3<->magma :<->text437.htm#4455<->magma :: Related Structures (RATIONAL FUNCTION FIELDS)
3<->invariant :<->text437.htm#4461<->invariant :: Invariants (RATIONAL FUNCTION FIELDS)
3<->predicate :<->text437.htm#4462<->predicate :: Ring Predicates and Booleans (RATIONAL FUNCTION FIELDS)
3<->homomorphism :<->text437.htm#4463<->homomorphism :: Homomorphisms (RATIONAL FUNCTION FIELDS)
5<->hom <->text437.htm#4464<->hom< P \ar S | y$_1$, ..., y$_n$ > : FldFunRat, Rng -> Map
5<->hom< P -> S | f, y1, ..., yn > <->text437.htm#4464<->hom&lt; P -&gt; S | f, y<sub>1</sub>, ..., y<sub>n</sub> &gt; : FldFunRat, Rng -&gt; Map
4<->FldFunRat_Homomorphism (Example H43E2)<->text437.htm#4465<->FldFunRat_Homomorphism (Example H43E2)
4<->Example-Homomorphism :<->text437.htm#4465<->Example-Homomorphism :: FldFunRat_Homomorphism (Example H43E2)
3<->homomorphism :<->text437.htm#4463<->homomorphism :: Homomorphisms (RATIONAL FUNCTION FIELDS)
3<->operation :<->text437.htm<->operation :: Structure Operations (RATIONAL FUNCTION FIELDS)
3<->element :<->text438.htm<->element :: Element Operations (RATIONAL FUNCTION FIELDS)
3<->arithmetic :<->text438.htm#4467<->arithmetic :: Arithmetic (RATIONAL FUNCTION FIELDS)
3<->equality-membership :<->text438.htm#4468<->equality-membership :: Equality and Membership (RATIONAL FUNCTION FIELDS)
3<->numerator-denominator-degree :<->text438.htm#4469<->numerator-denominator-degree :: Numerator, Denominator and Degree (RATIONAL FUNCTION FIELDS)
5<->Numerator(f) <->text438.htm#4470<->Numerator(f) : RngUPolElt -> RngUPolElt
5<->Numerator(f) <->text438.htm#4470<->Numerator(f) : RngMPolElt -> RngMPolElt
5<->Numerator(f) <->text438.htm#4470<->Numerator(f) : FldFunRatElt -&gt; RngElt
5<->Denominator(f) <->text438.htm#4471<->Denominator(f) : RngUPolElt -> RngUPolElt
5<->Denominator(f) <->text438.htm#4471<->Denominator(f) : RngMPolElt -> RngMPolElt
5<->Denominator(f) <->text438.htm#4471<->Denominator(f) : FldFunRatElt -&gt; RngElt
5<->Degree(f) <->text438.htm#4472<->Degree(f) : FldFunRatElt -&gt; RngIntElt
5<->TotalDegree(f) <->text438.htm#4473<->TotalDegree(f) : FldFunRatElt -&gt; RngIntElt
5<->WeightedDegree(f) <->text438.htm#4474<->WeightedDegree(f) : FldFunRatElt -&gt; RngIntElt
5<->Denominator :: Numerator(f, R) <->text438.htm#4475<->Denominator :: Numerator(f, R) : FldFunRatElt -&gt; RngElt
5<->Numerator(f, R) <->text438.htm#4475<->Numerator(f, R) : FldFunRatElt -&gt; RngElt
3<->numerator-denominator-degree :<->text438.htm#4469<->numerator-denominator-degree :: Numerator, Denominator and Degree (RATIONAL FUNCTION FIELDS)
3<->element-Boolean :<->text438.htm#4476<->element-Boolean :: Predicates on Ring Elements (RATIONAL FUNCTION FIELDS)
3<->evaluate :<->text438.htm#4477<->evaluate :: Evaluation (RATIONAL FUNCTION FIELDS)
5<->Evaluate(f, r) <->text438.htm#4478<->Evaluate(f, r) : FldFunRatUElt, RngElt -&gt; FldFunRatUElt
5<->Evaluate(f, v, r) <->text438.htm#4479<->Evaluate(f, v, r) : FldFunRatMElt, RngIntElt, RngElt -&gt; FldFunRatMElt
5<->Evaluate(f, S) <->text438.htm#4480<->Evaluate(f, S) : FldFunRatMElt, [RngElt] -&gt; RngElt
3<->evaluate :<->text438.htm#4477<->evaluate :: Evaluation (RATIONAL FUNCTION FIELDS)
3<->derivative :<->text438.htm#4481<->derivative :: Derivative (RATIONAL FUNCTION FIELDS)
5<->Derivative(f) <->text438.htm#4482<->Derivative(f) : FldFunRatUElt -&gt; FldFunRatUElt
5<->Derivative(f, k) <->text438.htm#4483<->Derivative(f, k) : FldFunRatUElt, RngIntElt -&gt; FldFunRatUElt
5<->Derivative(f, v) <->text438.htm#4484<->Derivative(f, v) : FldFunRatMElt, RngIntElt -&gt; FldFunRatMElt
5<->Derivative(f, v, k) <->text438.htm#4485<->Derivative(f, v, k) : FldFunRatMElt, RngIntElt, RngIntElt -&gt; FldFunRatMElt
3<->derivative :<->text438.htm#4481<->derivative :: Derivative (RATIONAL FUNCTION FIELDS)
3<->partial-fraction :<->text438.htm#4486<->partial-fraction :: Partial Fraction Decomposition (RATIONAL FUNCTION FIELDS)
5<->PartialFractionDecomposition(f) <->text438.htm#4487<->PartialFractionDecomposition(f) : FldFunRatUElt -&gt; [ &lt;RngUPolElt, RngIntElt, RngUPolElt&gt; ]
5<->SquarefreePartialFractionDecomposition(f) <->text438.htm#4488<->SquarefreePartialFractionDecomposition(f) : FldFunRatUElt -&gt; [ &lt;RngUPolElt, RngIntElt, RngUPolElt&gt; ]
4<->FldFunRat_PartialFractionDecomposition (Example H43E3)<->text438.htm#4489<->FldFunRat_PartialFractionDecomposition (Example H43E3)
4<->Example-PartialFractionDecomposition :<->text438.htm#4489<->Example-PartialFractionDecomposition :: FldFunRat_PartialFractionDecomposition (Example H43E3)
3<->partial-fraction :<->text438.htm#4486<->partial-fraction :: Partial Fraction Decomposition (RATIONAL FUNCTION FIELDS)
3<->element :<->text438.htm<->element :: Element Operations (RATIONAL FUNCTION FIELDS)
3<->Pad\'{e :<->text439.htm<->Pad\'{e :: Pad&eacute;-Hermite Approximants (RATIONAL FUNCTION FIELDS)
3<->padehermite :<->text439.htm<->padehermite :: Pad&eacute;-Hermite Approximants (RATIONAL FUNCTION FIELDS)
3<->introduction :<->text439.htm#4491<->introduction :: Introduction (RATIONAL FUNCTION FIELDS)
3<->sequences-degrees-and-types :<->text439.htm#4492<->sequences-degrees-and-types :: Ordering of Sequences (RATIONAL FUNCTION FIELDS)
5<->MaximumDegree(f) <->text439.htm#4493<->MaximumDegree(f) : SeqEnum -&gt; RngIntElt
4<->FldFunRat_degree-of-sequence (Example H43E4)<->text439.htm#4494<->FldFunRat_degree-of-sequence (Example H43E4)
4<->Example-degree-of-sequence :<->text439.htm#4494<->Example-degree-of-sequence :: FldFunRat_degree-of-sequence (Example H43E4)
5<->TypeOfSequence(f) <->text439.htm#4495<->TypeOfSequence(f) : SeqEnum -&gt; RngIntElt, RngIntElt
4<->FldFunRat_type-of-sequence (Example H43E5)<->text439.htm#4496<->FldFunRat_type-of-sequence (Example H43E5)
4<->Example-type-of-sequence :<->text439.htm#4496<->Example-type-of-sequence :: FldFunRat_type-of-sequence (Example H43E5)
5<->MinimalVectorSequence(f,n) <->text439.htm#4497<->MinimalVectorSequence(f,n) : SeqEnum, RngIntElt -&gt; SeqEnum
4<->FldFunRat_minimal-vector-sequence (Example H43E6)<->text439.htm#4498<->FldFunRat_minimal-vector-sequence (Example H43E6)
4<->Example-minimal-vector-sequence :<->text439.htm#4498<->Example-minimal-vector-sequence :: FldFunRat_minimal-vector-sequence (Example H43E6)
4<->FldFunRat_the-next_example (Example H43E7)<->text439.htm#4499<->FldFunRat_the-next_example (Example H43E7)
4<->Example-the-next_example :<->text439.htm#4499<->Example-the-next_example :: FldFunRat_the-next_example (Example H43E7)
4<->FldFunRat_another-example (Example H43E8)<->text439.htm#4500<->FldFunRat_another-example (Example H43E8)
4<->Example-another-example :<->text439.htm#4500<->Example-another-example :: FldFunRat_another-example (Example H43E8)
4<->FldFunRat_one-more (Example H43E9)<->text439.htm#4501<->FldFunRat_one-more (Example H43E9)
4<->Example-one-more :<->text439.htm#4501<->Example-one-more :: FldFunRat_one-more (Example H43E9)
3<->sequences-degrees-and-types :<->text439.htm#4492<->sequences-degrees-and-types :: Ordering of Sequences (RATIONAL FUNCTION FIELDS)
3<->pade-hermite-approximants :<->text439.htm#4502<->pade-hermite-approximants :: Approximants (RATIONAL FUNCTION FIELDS)
5<->PadeHermiteApproximant(f,d) <->text439.htm#4503<->PadeHermiteApproximant(f,d) : SeqEnum, SeqEnum -&gt; ModTupRngElt, SeqEnum, RngIntElt
4<->FldFunRat_pade-hermite-approximants (Example H43E10)<->text439.htm#4504<->FldFunRat_pade-hermite-approximants (Example H43E10)
4<->Example-pade-hermite-approximants :<->text439.htm#4504<->Example-pade-hermite-approximants :: FldFunRat_pade-hermite-approximants (Example H43E10)
4<->FldFunRat_last-example (Example H43E11)<->text439.htm#4505<->FldFunRat_last-example (Example H43E11)
4<->Example-last-example :<->text439.htm#4505<->Example-last-example :: FldFunRat_last-example (Example H43E11)
4<->FldFunRat_ (Example H43E12)<->text439.htm#4506<->FldFunRat_ (Example H43E12)
4<->Example- :<->text439.htm#4506<->Example- :: FldFunRat_ (Example H43E12)
5<->PadeHermiteApproximant(f,m) <->text439.htm#4507<->PadeHermiteApproximant(f,m) : SeqEnum, RngIntElt -&gt; ModTupRngElt, SeqEnum
4<->FldFunRat_pade-hermite-approximants-vectors (Example H43E13)<->text439.htm#4508<->FldFunRat_pade-hermite-approximants-vectors (Example H43E13)
4<->Example-pade-hermite-approximants-vectors :<->text439.htm#4508<->Example-pade-hermite-approximants-vectors :: FldFunRat_pade-hermite-approximants-vectors (Example H43E13)
4<->FldFunRat_ (Example H43E14)<->text439.htm#4509<->FldFunRat_ (Example H43E14)
4<->Example- :<->text439.htm#4509<->Example- :: FldFunRat_ (Example H43E14)
3<->pade-hermite-approximants :<->text439.htm#4502<->pade-hermite-approximants :: Approximants (RATIONAL FUNCTION FIELDS)
3<->padehermite :<->text439.htm<->padehermite :: Pad&eacute;-Hermite Approximants (RATIONAL FUNCTION FIELDS)
3<->rational-function-field :<->text434.htm<->rational-function-field :: RATIONAL FUNCTION FIELDS
3<->function-field :<->text442.htm<->function-field :: ALGEBRAIC FUNCTION FIELDS
3<->FldFun :<->text443.htm<->FldFun :: Introduction (ALGEBRAIC FUNCTION FIELDS)
3<->FldFunElt :<->text443.htm<->FldFunElt :: Introduction (ALGEBRAIC FUNCTION FIELDS)
3<->introduction :<->text443.htm<->introduction :: Introduction (ALGEBRAIC FUNCTION FIELDS)
3<->representations :<->text443.htm#4514<->representations :: Representations of Fields (ALGEBRAIC FUNCTION FIELDS)
3<->introduction :<->text443.htm<->introduction :: Introduction (ALGEBRAIC FUNCTION FIELDS)
3<->creation :<->text444.htm<->creation :: Creation of Algebraic Function  Fields and their Orders (ALGEBRAIC FUNCTION FIELDS)
3<->creation-fields :<->text444.htm#4516<->creation-fields :: Creation of Algebraic Function Fields (ALGEBRAIC FUNCTION FIELDS)
5<->ext <->text444.htm#4517<->ext< K | f > : FldFun, RngUPolElt -> FldFun
5<->FunctionField :: ext< K | f > <->text444.htm#4517<->FunctionField :: ext&lt; K | f &gt; : FldFunRat, RngUPolElt -&gt; FldFun
5<->ext< K | f > <->text444.htm#4517<->ext&lt; K | f &gt; : FldFunRat, RngUPolElt -&gt; FldFun
5<->FunctionField(f : parameters) <->text444.htm#4518<->FunctionField(f : parameters) : RngMPolElt -&gt; FldFun
5<->FunctionField(S) <->text444.htm#4519<->FunctionField(S) : [RngUPolElt] -&gt; FldFun
5<->HermitianFunctionField(q) <->text444.htm#4520<->HermitianFunctionField(q) : RngIntElt -> FldFun
5<->HermitianFunctionField(p, d) <->text444.htm#4520<->HermitianFunctionField(p, d) : RngIntElt, RngIntElt -&gt; FldFun
5<->sub <->text444.htm#4521<->sub<F | $s_1, \ldots, s_r$ > : FldFun, [] -> FldFun
5<->sub<F | S> <->text444.htm#4521<->sub&lt;F | S&gt; : FldFun, [] -&gt; FldFun
5<->AssignNames(\til a, s) <->text444.htm#4522<->AssignNames(\til a, s) : FldFunElt, [ MonStgElt ] ->
5<->AssignNames(~F, s) <->text444.htm#4522<->AssignNames(~F, s) : FldFun, [ MonStgElt ] -&gt;
5<->FunctionField(R) <->text444.htm#4523<->FunctionField(R) : Rng -&gt; FldFunG
4<->FldFunG_Creation (Example H44E1)<->text444.htm#4524<->FldFunG_Creation (Example H44E1)
4<->Example-Creation :<->text444.htm#4524<->Example-Creation :: FldFunG_Creation (Example H44E1)
4<->FldFunG_creation-rel (Example H44E2)<->text444.htm#4525<->FldFunG_creation-rel (Example H44E2)
4<->Example-creation-rel :<->text444.htm#4525<->Example-creation-rel :: FldFunG_creation-rel (Example H44E2)
4<->FldFunG_creation-non-simple (Example H44E3)<->text444.htm#4526<->FldFunG_creation-non-simple (Example H44E3)
4<->Example-creation-non-simple :<->text444.htm#4526<->Example-creation-non-simple :: FldFunG_creation-non-simple (Example H44E3)
4<->FldFunG_creation_herm (Example H44E4)<->text444.htm#4527<->FldFunG_creation_herm (Example H44E4)
4<->Example-creation_herm :<->text444.htm#4527<->Example-creation_herm :: FldFunG_creation_herm (Example H44E4)
3<->creation-fields :<->text444.htm#4516<->creation-fields :: Creation of Algebraic Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->creation-rings :<->text444.htm#4528<->creation-rings :: Creation of Orders of Algebraic Function Fields (ALGEBRAIC FUNCTION FIELDS)
5<->EquationOrderFinite(F) <->text444.htm#4529<->EquationOrderFinite(F) : FldFun -&gt; RngFunOrd
5<->MaximalOrderFinite(F) <->text444.htm#4530<->MaximalOrderFinite(F) : FldFun -&gt; RngFunOrd
5<->EquationOrderInfinite(F) <->text444.htm#4531<->EquationOrderInfinite(F) : FldFun -&gt; RngFunOrd
5<->MaximalOrderInfinite(F) <->text444.htm#4532<->MaximalOrderInfinite(F) : FldFun -&gt; RngFunOrd
5<->IntegralClosure(R, F) <->text444.htm#4533<->IntegralClosure(R, F) : Rng, FldFun -&gt; RngFunOrd
5<->EquationOrder(O) <->text444.htm#4534<->EquationOrder(O) : RngFunOrd -&gt; RngFunOrd
5<->MaximalOrder(O) <->text444.htm#4535<->MaximalOrder(O) : RngFunOrd -&gt; RngFunOrd
5<->SetOrderMaximal(O, b) <->text444.htm#4536<->SetOrderMaximal(O, b) : RngFunOrd, BoolElt -&gt;
5<->ext<O | f> <->text444.htm#4537<->ext&lt;O | f&gt; : RngFunOrd, RngUPolElt -&gt; RngFunOrd
4<->FldFunG_orders (Example H44E5)<->text444.htm#4538<->FldFunG_orders (Example H44E5)
4<->Example-orders :<->text444.htm#4538<->Example-orders :: FldFunG_orders (Example H44E5)
4<->FldFunG_int_cl (Example H44E6)<->text444.htm#4539<->FldFunG_int_cl (Example H44E6)
4<->Example-int_cl :<->text444.htm#4539<->Example-int_cl :: FldFunG_int_cl (Example H44E6)
5<->Order(O, T, d) <->text444.htm#4540<->Order(O, T, d) : RngFunOrd, AlgMatElt, RngElt -&gt; RngFunOrd
5<->Order(O, M) <->text444.htm#4541<->Order(O, M) : RngFunOrd, ModDed -&gt; RngFunOrd
5<->Order(O, S) <->text444.htm#4542<->Order(O, S) : RngFunOrd, [FldFunElt] -&gt; RngFunOrd
5<->Simplify(O) <->text444.htm#4543<->Simplify(O) : RngFunOrd -&gt; RngFunOrd
5<->O1 + O2 <->text444.htm#4544<->O1 + O2 : RngFunOrd, RngFunOrd -&gt; RngFunOrd
5<->O1 meet O2 <->text444.htm#4545<->O1 meet O2 : RngFunOrd, RngFunOrd -&gt; RngFunOrd
5<->AsExtensionOf(O1, O2) <->text444.htm#4546<->AsExtensionOf(O1, O2) : RngFunOrd, RngFunOrd -&gt; RngFunOrd
4<->FldFunG_order-create-more (Example H44E7)<->text444.htm#4547<->FldFunG_order-create-more (Example H44E7)
4<->Example-order-create-more :<->text444.htm#4547<->Example-order-create-more :: FldFunG_order-create-more (Example H44E7)
3<->creation-rings :<->text444.htm#4528<->creation-rings :: Creation of Orders of Algebraic Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->orders_ideals :<->text444.htm#4548<->orders_ideals :: Orders and Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->MultiplicatorRing(I) <->text444.htm#4549<->MultiplicatorRing(I) : RngFunOrdIdl -&gt; RngFunOrd
5<->pMaximalOrder(O, p) <->text444.htm#4550<->pMaximalOrder(O, p) : RngFunOrd, RngElt -> RngFunOrd
5<->pMaximalOrder(O, p) <->text444.htm#4550<->pMaximalOrder(O, p) : RngFunOrd, RngFunOrdIdl -&gt; RngFunOrd
5<->pRadical(O, p) <->text444.htm#4551<->pRadical(O, p) : RngFunOrd, RngElt -> RngFunOrdIdl
5<->pRadical(O, p) <->text444.htm#4551<->pRadical(O, p) : RngFunOrd, RngFunOrdIdl -&gt; RngFunOrdIdl
3<->orders_ideals :<->text444.htm#4548<->orders_ideals :: Orders and Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->creation :<->text444.htm<->creation :: Creation of Algebraic Function  Fields and their Orders (ALGEBRAIC FUNCTION FIELDS)
3<->structure-related :<->text445.htm<->structure-related :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->structure-related-parent-category :<->text445.htm#4553<->structure-related-parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->structure-related-other :<->text445.htm#4554<->structure-related-other :: Other Related Structures (ALGEBRAIC FUNCTION FIELDS)
5<->PrimeField :: PrimeRing(F) <->text445.htm#4555<->PrimeField :: PrimeRing(F) : FldFun -&gt; Rng
5<->PrimeRing(O) <->text445.htm#4555<->PrimeRing(O) : RngFunOrd -> Rng
5<->PrimeRing(F) <->text445.htm#4555<->PrimeRing(F) : FldFun -&gt; Rng
5<->DefiningConstantField :: ConstantField(F) <->text445.htm#4556<->DefiningConstantField :: ConstantField(F) : FldFunG -&gt; Rng
5<->ConstantField(F) <->text445.htm#4556<->ConstantField(F) : FldFunG -&gt; Rng
5<->ExactConstantField(F) <->text445.htm#4557<->ExactConstantField(F) : FldFunG -&gt; Rng, Map
5<->BaseField :: BaseRing(F) <->text445.htm#4558<->BaseField :: BaseRing(F) : FldFun -&gt; Rng
5<->CoefficientRing :: BaseRing(F) <->text445.htm#4558<->CoefficientRing :: BaseRing(F) : FldFun -&gt; Rng
5<->CoefficientField :: BaseRing(F) <->text445.htm#4558<->CoefficientField :: BaseRing(F) : FldFun -&gt; Rng
5<->BaseRing(F) <->text445.htm#4558<->BaseRing(F) : FldFun -&gt; Rng
5<->ISABaseField(F,G) <->text445.htm#4559<->ISABaseField(F,G) : Fld, Fld -&gt; BoolElt
5<->CoefficientRing :: BaseRing(O) <->text445.htm#4560<->CoefficientRing :: BaseRing(O) : RngFunOrd -&gt; Rng
5<->BaseRing(O) <->text445.htm#4560<->BaseRing(O) : RngFunOrd -&gt; Rng
5<->BaseField :: BaseRing(FF) <->text445.htm#4561<->BaseField :: BaseRing(FF) : FldFunOrd -&gt; Rng
5<->CoefficientRing :: BaseRing(FF) <->text445.htm#4561<->CoefficientRing :: BaseRing(FF) : FldFunOrd -&gt; Rng
5<->CoefficientField :: BaseRing(FF) <->text445.htm#4561<->CoefficientField :: BaseRing(FF) : FldFunOrd -&gt; Rng
5<->BaseRing(FF) <->text445.htm#4561<->BaseRing(FF) : FldFunOrd -&gt; Rng
5<->SubOrder(O) <->text445.htm#4562<->SubOrder(O) : RngFunOrd -&gt; RngFunOrd
5<->FunctionField(O) <->text445.htm#4563<->FunctionField(O) : RngFunOrd -&gt; FldFun
5<->FieldOfFractions(FF) <->text445.htm#4564<->FieldOfFractions(FF) : FldFunOrd -> FldFunOrd
5<->FieldOfFractions(F) <->text445.htm#4564<->FieldOfFractions(F) : FldFun -> FldFun
5<->FieldOfFractions(O) <->text445.htm#4564<->FieldOfFractions(O) : RngFunOrd -&gt; FldFunOrd
5<->Order(FF) <->text445.htm#4565<->Order(FF) : FldFunOrd -&gt; RngFunOrd
5<->RationalExtensionRepresentation(F) <->text445.htm#4566<->RationalExtensionRepresentation(F) : FldFunG -&gt; FldFun
5<->AbsoluteOrder(O) <->text445.htm#4567<->AbsoluteOrder(O) : RngFunOrd -&gt; RngFunOrd
5<->AbsoluteFunctionField(F) <->text445.htm#4568<->AbsoluteFunctionField(F) : FldFunG -&gt; FldFunG
5<->UnderlyingField :: UnderlyingRing(F) <->text445.htm#4569<->UnderlyingField :: UnderlyingRing(F) : FldFunG -&gt; FldFunG
5<->UnderlyingRing(F, R) <->text445.htm#4569<->UnderlyingRing(F, R) : FldFunG, Rng -> FldFunG
5<->UnderlyingField(F, R) : FldFunG, Rng -> FldFunG :: UnderlyingRing(F) <->text445.htm#4569<->UnderlyingField(F, R) : FldFunG, Rng -> FldFunG :: UnderlyingRing(F) : FldFunG -&gt; FldFunG
5<->UnderlyingRing(F) <->text445.htm#4569<->UnderlyingRing(F) : FldFunG -&gt; FldFunG
5<->Embed(F, L, s) <->text445.htm#4570<->Embed(F, L, s) : FldFun, FldFun, [FldFunElt] -> 
5<->Embed(F, L, a) <->text445.htm#4570<->Embed(F, L, a) : FldFun, FldFun, FldFunElt -&gt;
5<->Places(F) <->text445.htm#4571<->Places(F) : FldFunG -&gt; PlcFun
5<->DivisorGroup(F) <->text445.htm#4572<->DivisorGroup(F) : FldFun -&gt; DivFun
5<->DifferentialSpace(F) <->text445.htm#4573<->DifferentialSpace(F) : FldFun -&gt; DiffFun
4<->FldFunG_related-structures (Example H44E8)<->text445.htm#4574<->FldFunG_related-structures (Example H44E8)
4<->Example-related-structures :<->text445.htm#4574<->Example-related-structures :: FldFunG_related-structures (Example H44E8)
4<->FldFunG_related-structures-rat-ext (Example H44E9)<->text445.htm#4575<->FldFunG_related-structures-rat-ext (Example H44E9)
4<->Example-related-structures-rat-ext :<->text445.htm#4575<->Example-related-structures-rat-ext :: FldFunG_related-structures-rat-ext (Example H44E9)
5<->WeilRestriction(E, n) <->text445.htm#4576<->WeilRestriction(E, n) : FldFun, RngIntElt -&gt; FldFun, UserProgram
5<->ConstantFieldExtension(F, E) <->text445.htm#4577<->ConstantFieldExtension(F, E) : FldFun, Rng -&gt; FldFun, Map
4<->FldFunG_cfe (Example H44E10)<->text445.htm#4578<->FldFunG_cfe (Example H44E10)
4<->Example-cfe :<->text445.htm#4578<->Example-cfe :: FldFunG_cfe (Example H44E10)
5<->Reduce(O) <->text445.htm#4579<->Reduce(O) : RngFunOrd -&gt; RngFunOrd
3<->structure-related-other :<->text445.htm#4554<->structure-related-other :: Other Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->structure-related :<->text445.htm<->structure-related :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->structure-invar :<->text446.htm<->structure-invar :: General Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
5<->Characteristic(O) <->text446.htm#4581<->Characteristic(O) : RngFunOrd -> RngIntElt
5<->Characteristic(F) <->text446.htm#4581<->Characteristic(F) : FldFun -&gt; RngIntElt
5<->IsPerfect(F) <->text446.htm#4582<->IsPerfect(F) : Fld -&gt; BoolElt
5<->Degree(F, G) <->text446.htm#4583<->Degree(F, G) : FldFun, FldFun -> RngIntElt
5<->Degree(O) <->text446.htm#4583<->Degree(O) : RngFunOrd -> RngIntElt
5<->Degree(F) <->text446.htm#4583<->Degree(F) : FldFunG -&gt; RngIntElt
5<->AbsoluteDegree(O) <->text446.htm#4584<->AbsoluteDegree(O) : RngFunOrd -> RngIntElt
5<->AbsoluteDegree(F) <->text446.htm#4584<->AbsoluteDegree(F) : FldFunG -&gt; RngIntElt
5<->DefiningPolynomial(O) <->text446.htm#4585<->DefiningPolynomial(O) : RngFunOrd -> RngUPolElt
5<->DefiningPolynomial(F) <->text446.htm#4585<->DefiningPolynomial(F) : FldFun -&gt; RngUPolElt
5<->DefiningPolynomials(O) <->text446.htm#4586<->DefiningPolynomials(O) : RngFunOrd -> [RngUPolElt]
5<->DefiningPolynomials(F) <->text446.htm#4586<->DefiningPolynomials(F) : FldFun -&gt; [RngUPolElt]
5<->Basis(O) <->text446.htm#4587<->Basis(O) : RngFunOrd -> SeqEnum[FldFunElt]
5<->Basis(O, R) <->text446.htm#4587<->Basis(O, R) : RngFunOrd, Rng -> SeqEnum[RngElt]
5<->Basis(F) <->text446.htm#4587<->Basis(F) : FldFunG -&gt; SeqEnum[FldFunElt]
5<->TransformationMatrix(O1, O2) <->text446.htm#4588<->TransformationMatrix(O1, O2) : RngFunOrd, RngFunOrd -&gt; AlgMatElt, RngElt
5<->CoefficientIdeals(O) <->text446.htm#4589<->CoefficientIdeals(O) : RngFunOrd -&gt; [RngFunOrdIdl]
5<->BasisMatrix(O) <->text446.htm#4590<->BasisMatrix(O) : RngFunOrd -&gt; AlgMatElt
5<->PrimitiveElement(O) <->text446.htm#4591<->PrimitiveElement(O) : RngFunOrd -&gt; RngFunOrdElt
5<->Discriminant(O) <->text446.htm#4592<->Discriminant(O) : RngFunOrd -&gt; .
5<->AbsoluteDiscriminant(O) <->text446.htm#4593<->AbsoluteDiscriminant(O) : RngFunOrd -&gt; .
5<->DegreeOfExactConstantField :: DimensionOfExactConstantField(F) <->text446.htm#4594<->DegreeOfExactConstantField :: DimensionOfExactConstantField(F) : FldFunG -&gt; RngIntElt
5<->DimensionOfExactConstantField(F) <->text446.htm#4594<->DimensionOfExactConstantField(F) : FldFunG -&gt; RngIntElt
5<->Genus(F) <->text446.htm#4595<->Genus(F) : FldFunG -&gt; RngIntElt
4<->FldFunG_invar (Example H44E11)<->text446.htm#4596<->FldFunG_invar (Example H44E11)
4<->Example-invar :<->text446.htm#4596<->Example-invar :: FldFunG_invar (Example H44E11)
4<->FldFunG_invar-non-simple (Example H44E12)<->text446.htm#4597<->FldFunG_invar-non-simple (Example H44E12)
4<->Example-invar-non-simple :<->text446.htm#4597<->Example-invar-non-simple :: FldFunG_invar-non-simple (Example H44E12)
5<->GapNumbers(F) <->text446.htm#4598<->GapNumbers(F) : FldFunG -&gt; SeqEnum[RngIntElt]
5<->GapNumbers(P) <->text446.htm#4599<->GapNumbers(P) : PlcFunElt -> SeqEnum[RngIntElt]
5<->GapNumbers(F, P) <->text446.htm#4599<->GapNumbers(F, P) : FldFunG, PlcFunElt -&gt; SeqEnum[RngIntElt]
5<->SeparatingElement(F) <->text446.htm#4600<->SeparatingElement(F) : FldFunG -&gt; FldFunGElt
5<->RamificationDivisor(F) <->text446.htm#4601<->RamificationDivisor(F) : FldFunG -&gt; DivFunElt
5<->WeierstrassPlaces(F) <->text446.htm#4602<->WeierstrassPlaces(F) : FldFunG -&gt; [PlcFunElt]
5<->WronskianOrders(F) <->text446.htm#4603<->WronskianOrders(F) : FldFunG -&gt; [RngIntElt]
5<->Different(O) <->text446.htm#4604<->Different(O) : RngFunOrd -&gt; RngFunOrdIdl
5<->Index(O, S) <->text446.htm#4605<->Index(O, S) : RngFunOrd, RngFunOrd -&gt; Any
3<->structure-invar :<->text446.htm<->structure-invar :: General Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
3<->galois :<->text447.htm<->galois :: Galois Groups (ALGEBRAIC FUNCTION FIELDS)
5<->GaloisGroup(f) <->text447.htm#4607<->GaloisGroup(f) : RngUPolElt -&gt; GrpPerm, [ RngElt ], GaloisData
5<->GaloisGroup(F) <->text447.htm#4608<->GaloisGroup(F) : FldFun[FldFun[FldFunRat]] -> GrpPerm, [RngElt], GaloisData
5<->GaloisGroup(F) <->text447.htm#4608<->GaloisGroup(F) : FldFun[FldFin] -> GrpPerm, [RngElt], GaloisData
5<->GaloisGroup(F) <->text447.htm#4608<->GaloisGroup(F) : FldFun[FldFunRat] -> GrpPerm, [RngElt], GaloisData
5<->GaloisGroup(F) <->text447.htm#4608<->GaloisGroup(F) : FldFun[FldRat] -> GrpPerm, [RngElt], GaloisData
5<->GaloisGroup(F) <->text447.htm#4608<->GaloisGroup(F) : FldFun -&gt; GrpPerm, [RngElt], GaloisData
4<->FldFunG_GaloisGroups (Example H44E13)<->text447.htm#4609<->FldFunG_GaloisGroups (Example H44E13)
4<->Example-GaloisGroups :<->text447.htm#4609<->Example-GaloisGroups :: FldFunG_GaloisGroups (Example H44E13)
4<->FldFunG_GaloisGroups2 (Example H44E14)<->text447.htm#4610<->FldFunG_GaloisGroups2 (Example H44E14)
4<->Example-GaloisGroups2 :<->text447.htm#4610<->Example-GaloisGroups2 :: FldFunG_GaloisGroups2 (Example H44E14)
3<->galois :<->text447.htm<->galois :: Galois Groups (ALGEBRAIC FUNCTION FIELDS)
3<->subfields :<->text448.htm<->subfields :: Subfields (ALGEBRAIC FUNCTION FIELDS)
5<->Subfields(F) <->text448.htm#4612<->Subfields(F) : FldFun -&gt; SeqEnum[FldFun]
4<->FldFunG_Subfields (Example H44E15)<->text448.htm#4613<->FldFunG_Subfields (Example H44E15)
4<->Example-Subfields :<->text448.htm#4613<->Example-Subfields :: FldFunG_Subfields (Example H44E15)
3<->subfields :<->text448.htm<->subfields :: Subfields (ALGEBRAIC FUNCTION FIELDS)
3<->automorphism-group :<->text449.htm<->automorphism-group :: Automorphism Group (ALGEBRAIC FUNCTION FIELDS)
3<->autQt :<->text449.htm#4615<->autQt :: Automorphisms over the Base Field (ALGEBRAIC FUNCTION FIELDS)
5<->Automorphisms(K, k) <->text449.htm#4616<->Automorphisms(K, k) : FldFun, FldFunG -&gt; [Map]
5<->AutomorphismGroup(K, k) <->text449.htm#4617<->AutomorphismGroup(K, k) : FldFun, FldFunG -&gt; GrpFP, Map
4<->FldFunG_Automorphisms (Example H44E16)<->text449.htm#4618<->FldFunG_Automorphisms (Example H44E16)
4<->Example-Automorphisms :<->text449.htm#4618<->Example-Automorphisms :: FldFunG_Automorphisms (Example H44E16)
5<->IsSubfield(K, L) <->text449.htm#4619<->IsSubfield(K, L) : FldFun, FldFun -&gt; BoolElt, Map
5<->IsIsomorphicOverQt(K, L) <->text449.htm#4620<->IsIsomorphicOverQt(K, L) : FldFun, FldFun -&gt; BoolElt, Map
4<->FldFunG_IsSubfield (Example H44E17)<->text449.htm#4621<->FldFunG_IsSubfield (Example H44E17)
4<->Example-IsSubfield :<->text449.htm#4621<->Example-IsSubfield :: FldFunG_IsSubfield (Example H44E17)
3<->autQt :<->text449.htm#4615<->autQt :: Automorphisms over the Base Field (ALGEBRAIC FUNCTION FIELDS)
3<->autGen :<->text449.htm#4622<->autGen :: General Automorphisms (ALGEBRAIC FUNCTION FIELDS)
5<->Isomorphisms(K, E) <->text449.htm#4623<->Isomorphisms(K, E) : FldFunG, FldFunG -&gt; [Map]
5<->IsIsomorphic(K, E) <->text449.htm#4624<->IsIsomorphic(K, E) : FldFunG, FldFunG -&gt; BoolElt, Map
5<->Automorphisms(K) <->text449.htm#4625<->Automorphisms(K) : FldFunG -&gt; [Map]
5<->Automorphisms :: Isomorphisms(K,E,p1,p2) <->text449.htm#4626<->Automorphisms :: Isomorphisms(K,E,p1,p2) : FldFunG, FldFunG, PlcFunElt, PlcFunElt -&gt; [Map]
5<->Isomorphisms(K,E,p1,p2) <->text449.htm#4626<->Isomorphisms(K,E,p1,p2) : FldFunG, FldFunG, PlcFunElt, PlcFunElt -&gt; [Map]
5<->AutomorphismGroup(K) <->text449.htm#4627<->AutomorphismGroup(K) : FldFunG -&gt; GrpFP, Map
5<->AutomorphismGroup(K,f) <->text449.htm#4628<->AutomorphismGroup(K,f) : FldFunG, Map -&gt; Grp, Map, SeqEnum
3<->autGen :<->text449.htm#4622<->autGen :: General Automorphisms (ALGEBRAIC FUNCTION FIELDS)
3<->ff_morphs :<->text449.htm#4629<->ff_morphs :: Field Morphisms (ALGEBRAIC FUNCTION FIELDS)
5<->IsMorphism(f) <->text449.htm#4630<->IsMorphism(f) : Map -&gt; Bool
5<->FieldMorphism(f) <->text449.htm#4631<->FieldMorphism(f) : Map -&gt; Map
5<->IdentityFieldMorphism(F) <->text449.htm#4632<->IdentityFieldMorphism(F) : Fld -&gt; Map
5<->IsIdentity(f) <->text449.htm#4633<->IsIdentity(f) : Map -&gt; BoolElt
5<->Equality(f, g) <->text449.htm#4634<->Equality(f, g) : Map, Map -&gt; Bool
5<->HasInverse(f) <->text449.htm#4635<->HasInverse(f) : Map -&gt; MonStgElt, Map
5<->Composition(f, g) <->text449.htm#4636<->Composition(f, g) : Map, Map -&gt; Map
4<->FldFunG_Isomorphisms (Example H44E18)<->text449.htm#4637<->FldFunG_Isomorphisms (Example H44E18)
4<->Example-Isomorphisms :<->text449.htm#4637<->Example-Isomorphisms :: FldFunG_Isomorphisms (Example H44E18)
3<->ff_morphs :<->text449.htm#4629<->ff_morphs :: Field Morphisms (ALGEBRAIC FUNCTION FIELDS)
3<->automorphism-group :<->text449.htm<->automorphism-group :: Automorphism Group (ALGEBRAIC FUNCTION FIELDS)
3<->global :<->text450.htm<->global :: Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->global_ecf :<->text450.htm#4639<->global_ecf :: Functions relative to the Exact Constant Field (ALGEBRAIC FUNCTION FIELDS)
5<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(F, m) <->text450.htm#4640<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOverExactConstantField(F, m) <->text450.htm#4640<->NumberOfPlacesOfDegreeOverExactConstantField(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F) <->text450.htm#4641<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantField(F) <->text450.htm#4641<->NumberOfPlacesOfDegreeOneOverExactConstantField(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) <->text450.htm#4642<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) : FldFunG, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) <->text450.htm#4642<->NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) : FldFunG, RngIntElt -&gt; RngIntElt
5<->SerreBound(F, m) <->text450.htm#4643<->SerreBound(F, m) : FldFunG, RngIntElt -> RngIntElt
5<->SerreBound(q, g) <->text450.htm#4643<->SerreBound(q, g) : RngIntElt, RngIntElt -> RngIntElt
5<->SerreBound(F) <->text450.htm#4643<->SerreBound(F) : FldFunG -&gt; RngIntElt
5<->IharaBound(F, m) <->text450.htm#4644<->IharaBound(F, m) : FldFunG, RngIntElt -> RngIntElt
5<->IharaBound(q, g) <->text450.htm#4644<->IharaBound(q, g) : RngIntElt, RngIntElt -> RngIntElt
5<->IharaBound(F) <->text450.htm#4644<->IharaBound(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound :: NumberOfPlacesOfDegreeOneECFBound(F) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound :: NumberOfPlacesOfDegreeOneECFBound(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound(F, m) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneECFBound(F, m) : FldFun, RngIntElt -> RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) : FldFunG, RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(F) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) : FldFunG, RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound(q, g) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneECFBound(q, g) : RngIntElt, RngIntElt -> RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(q, g) : RngIntElt, RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(F) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(q, g) : RngIntElt, RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(F) : FldFunG -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound(F) <->text450.htm#4645<->NumberOfPlacesOfDegreeOneECFBound(F) : FldFunG -&gt; RngIntElt
5<->LPolynomial(F) <->text450.htm#4646<->LPolynomial(F) : FldFunG -&gt; RngUPolElt
5<->LPolynomial(F, m) <->text450.htm#4647<->LPolynomial(F, m) : FldFunG, RngIntElt -&gt; RngUPolElt
5<->ZetaFunction(F) <->text450.htm#4648<->ZetaFunction(F) : FldFunG -&gt; FldFunRatUElt
5<->ZetaFunction(F, m) <->text450.htm#4649<->ZetaFunction(F, m) : FldFunG, RngIntElt -&gt; FldFunRatUElt
3<->global_ecf :<->text450.htm#4639<->global_ecf :: Functions relative to the Exact Constant Field (ALGEBRAIC FUNCTION FIELDS)
3<->global_const :<->text450.htm#4650<->global_const :: Functions Relative to the Constant Field (ALGEBRAIC FUNCTION FIELDS)
5<->Places(F, m) <->text450.htm#4651<->Places(F, m) : FldFunG, RngIntElt -&gt; SeqEnum[PlcFunElt]
5<->HasPlace(F, m) <->text450.htm#4652<->HasPlace(F, m) : FldFunG, RngIntElt -&gt; BoolElt, PlcFunElt
5<->HasRandomPlace(F, m) <->text450.htm#4653<->HasRandomPlace(F, m) : FldFunG, RngIntElt -&gt; BoolElt, PlcFunElt
5<->RandomPlace(F, m) <->text450.htm#4654<->RandomPlace(F, m) : FldFunG, RngIntElt -&gt; PlcFunElt
4<->FldFunG_global-function-fields (Example H44E19)<->text450.htm#4655<->FldFunG_global-function-fields (Example H44E19)
4<->Example-global-function-fields :<->text450.htm#4655<->Example-global-function-fields :: FldFunG_global-function-fields (Example H44E19)
4<->FldFunG_global1 (Example H44E20)<->text450.htm#4656<->FldFunG_global1 (Example H44E20)
4<->Example-global1 :<->text450.htm#4656<->Example-global1 :: FldFunG_global1 (Example H44E20)
3<->global_const :<->text450.htm#4650<->global_const :: Functions Relative to the Constant Field (ALGEBRAIC FUNCTION FIELDS)
3<->global-class :<->text450.htm#4657<->global-class :: Functions related to Class Group (ALGEBRAIC FUNCTION FIELDS)
5<->UnitRank(O) <->text450.htm#4658<->UnitRank(O) : RngFunOrd -&gt; RngIntElt
5<->UnitGroup(O) <->text450.htm#4659<->UnitGroup(O) : RngFunOrd -&gt; GrpAb, Map
5<->Regulator(O) <->text450.htm#4660<->Regulator(O) : RngFunOrd -&gt; RngIntElt
5<->PrincipalIdealMap(O) <->text450.htm#4661<->PrincipalIdealMap(O) : RngFunOrd -&gt; Map
4<->FldFunG_global-class-ex (Example H44E21)<->text450.htm#4662<->FldFunG_global-class-ex (Example H44E21)
4<->Example-global-class-ex :<->text450.htm#4662<->Example-global-class-ex :: FldFunG_global-class-ex (Example H44E21)
5<->ClassGroup(F : parameters) <->text450.htm#4663<->ClassGroup(F : parameters) : FldFunG -&gt; GrpAb, Map, Map
5<->ClassGroup(O) <->text450.htm#4664<->ClassGroup(O) : RngFunOrd -&gt; GrpAb, Map, Map
5<->ClassGroupExactSequence(O) <->text450.htm#4665<->ClassGroupExactSequence(O) : RngFunOrd -&gt; Map, Map, Map
5<->ClassGroupAbelianInvariants(F : parameters) <->text450.htm#4666<->ClassGroupAbelianInvariants(F : parameters) : FldFunG -&gt; SeqEnum
5<->ClassGroupAbelianInvariants(O) <->text450.htm#4667<->ClassGroupAbelianInvariants(O) : RngFunOrd -&gt; SeqEnum
5<->ClassNumber(F) <->text450.htm#4668<->ClassNumber(F) : FldFunG -&gt; RngIntElt
5<->ClassNumber(O) <->text450.htm#4669<->ClassNumber(O) : RngFunOrd -&gt; RngIntElt
4<->FldFunG_class-group (Example H44E22)<->text450.htm#4670<->FldFunG_class-group (Example H44E22)
4<->Example-class-group :<->text450.htm#4670<->Example-class-group :: FldFunG_class-group (Example H44E22)
5<->GlobalUnitGroup(F) <->text450.htm#4671<->GlobalUnitGroup(F) : FldFunG -&gt; GrpAb, Map
5<->ClassGroupPRank(F) <->text450.htm#4672<->ClassGroupPRank(F) : FldFunG -&gt; RngIntElt
5<->HasseWittInvariant(F) <->text450.htm#4673<->HasseWittInvariant(F) : FldFunG -&gt; RngIntElt
5<->IndependentUnits(O) <->text450.htm#4674<->IndependentUnits(O) : RngFunOrd -&gt; SeqEnum[RngFunOrdElt]
5<->FundamentalUnits(O) <->text450.htm#4675<->FundamentalUnits(O) : RngFunOrd -&gt; SeqEnum[RngFunOrdElt]
4<->FldFunG_orders (Example H44E23)<->text450.htm#4676<->FldFunG_orders (Example H44E23)
4<->Example-orders :<->text450.htm#4676<->Example-orders :: FldFunG_orders (Example H44E23)
3<->global-class :<->text450.htm#4657<->global-class :: Functions related to Class Group (ALGEBRAIC FUNCTION FIELDS)
3<->global :<->text450.htm<->global :: Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->structure-predicates :<->text451.htm<->structure-predicates :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
5<->O1 subset O2 <->text451.htm#4678<->O1 subset O2 : RngFunOrd, RngFunOrd -&gt; BoolElt
5<->IsGlobal(F) <->text451.htm#4679<->IsGlobal(F) : FldFunG -&gt; BoolElt
5<->IsRationalFunctionField(F) <->text451.htm#4680<->IsRationalFunctionField(F) : FldFunG -&gt; BoolElt
5<->IsFiniteOrder(O) <->text451.htm#4681<->IsFiniteOrder(O) : RngFunOrd -&gt; BoolElt
5<->IsEquationOrder(O) <->text451.htm#4682<->IsEquationOrder(O) : RngFunOrd -&gt; BoolElt
5<->IsAbsoluteOrder(O) <->text451.htm#4683<->IsAbsoluteOrder(O) : RngFunOrd -&gt; BoolElt
5<->IsMaximal(O) <->text451.htm#4684<->IsMaximal(O) : RngFunOrd -&gt; BoolElt
5<->IsTamelyRamified(O) <->text451.htm#4685<->IsTamelyRamified(O) : RngFunOrd -&gt; BoolElt
5<->IsTotallyRamified(O) <->text451.htm#4686<->IsTotallyRamified(O) : RngFunOrd -&gt; BoolElt
5<->IsUnramified(O) <->text451.htm#4687<->IsUnramified(O) : RngFunOrd -&gt; BoolElt
5<->IsWildlyRamified(O) <->text451.htm#4688<->IsWildlyRamified(O) : RngFunOrd -&gt; BoolElt
5<->IsInKummerRepresentation(K) <->text451.htm#4689<->IsInKummerRepresentation(K) : FldFun -&gt; BoolElt, FldFunElt
5<->IsInArtinSchreierRepresentation(K) <->text451.htm#4690<->IsInArtinSchreierRepresentation(K) : FldFun -&gt; BoolElt, FldFunElt
3<->structure-predicates :<->text451.htm<->structure-predicates :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
3<->hom :<->text452.htm<->hom :: Homomorphisms (ALGEBRAIC FUNCTION FIELDS)
5<->hom <->text452.htm#4692<->hom<F \ar R | cf, g> : FldFun, Rng, Map, RngElt -> Map
5<->hom<F -> R | g> <->text452.htm#4692<->hom&lt;F -&gt; R | g&gt; : FldFun, Rng, RngElt -&gt; Map
5<->hom <->text452.htm#4693<->hom< O \ar R | cf, g > : RngFunOrd, Rng, Map, RngElt -> Map
5<->hom< O -> R | g > <->text452.htm#4693<->hom&lt; O -&gt; R | g &gt; : RngFunOrd, Rng, RngElt -&gt; Map
5<->IsRingHomomorphism(m) <->text452.htm#4694<->IsRingHomomorphism(m) : Map -&gt; BoolElt
4<->FldFunG_hom (Example H44E24)<->text452.htm#4695<->FldFunG_hom (Example H44E24)
4<->Example-hom :<->text452.htm#4695<->Example-hom :: FldFunG_hom (Example H44E24)
5<->hom <->text452.htm#4696<->hom< O \ar R | m, $b_1, ..., b_n$ > : RngFunOrd, Rng, Map, RngElt, ..., RngElt -> Map
5<->hom< O -> R | b1, ..., bn > <->text452.htm#4696<->hom&lt; O -&gt; R | b<sub>1</sub>, ..., b<sub>n</sub> &gt; : RngFunOrd, Rng, RngElt, ..., RngElt -&gt; Map
3<->hom :<->text452.htm<->hom :: Homomorphisms (ALGEBRAIC FUNCTION FIELDS)
3<->elements :<->text453.htm<->elements :: Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elements-creation :<->text453.htm#4698<->elements-creation :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
5<->F . 2 <->text453.htm#4699<->F . 2 : FldFun -> FldFunElt
5<->F . 1 <->text453.htm#4699<->F . 1 : FldFun -&gt; FldFunElt
5<->Name(F, i) <->text453.htm#4700<->Name(F, i) : FldFun, RngIntElt -&gt; FldFunElt
5<->FF . i <->text453.htm#4701<->FF . i : FldFunOrd, RngIntElt -> FldFunOrdElt
5<->O . i <->text453.htm#4701<->O . i : RngFunOrd, RngIntElt -&gt; FldFunOrdElt
5<->elt :: F ! a <->text453.htm#4702<->elt :: F ! a : FldFun, . -&gt; FldFunElt
5<->F ! a <->text453.htm#4702<->F ! a : FldFun, . -&gt; FldFunElt
5<->elt :: O ! a <->text453.htm#4703<->elt :: O ! a : RngFunOrd, . -&gt; RngFunOrdElt
5<->O ! a <->text453.htm#4703<->O ! a : RngFunOrd, . -&gt; RngFunOrdElt
5<->elt :: FF ! a <->text453.htm#4704<->elt :: FF ! a : FldFunOrd, Any -&gt; FldFunOrdElt
5<->FF ! a <->text453.htm#4704<->FF ! a : FldFunOrd, Any -&gt; FldFunOrdElt
5<->elt< F | a0, a1, ..., an - 1> <->text453.htm#4705<->elt&lt; F | a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>n - 1</sub>&gt; : FldFun, RngElt , ..., RngElt -&gt; FldFunElt
5<->elt <->text453.htm#4706<->elt< FF | a$_1$, a$_2$, ..., a$_{n}$> : FldFunOrd, RngElt , ..., RngElt -> FldFunOrdElt
5<->elt< O | a1, a2, ..., an> <->text453.htm#4706<->elt&lt; O | a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>&gt; : RngFunOrd, RngElt , ..., RngElt -&gt; RngFunOrdElt
5<->Random(O, m) <->text453.htm#4707<->Random(O, m) : RngFunOrd, RngIntElt -> RngFunOrdElt
5<->Random(F, m) <->text453.htm#4707<->Random(F, m) : FldFunG, RngIntElt -&gt; FldFunElt
3<->elements-creation :<->text453.htm#4698<->elements-creation :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elements-parent-category :<->text453.htm#4708<->elements-parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->elements-sequence :<->text453.htm#4709<->elements-sequence :: Sequence Conversions (ALGEBRAIC FUNCTION FIELDS)
5<->ElementToSequence(a) <->text453.htm#4710<->ElementToSequence(a) : RngFunOrdElt -> SeqEnum[RngElt]
5<->ElementToSequence(a) <->text453.htm#4710<->ElementToSequence(a) : FldFunOrdElt -> SeqEnum[RngElt]
5<->Eltseq :: ElementToSequence(a) <->text453.htm#4710<->Eltseq :: ElementToSequence(a) : FldFunElt -&gt; SeqEnum[FldElt]
5<->Eltseq(a) : RngFunOrdElt -> SeqEnum[RngElt] :: ElementToSequence(a) <->text453.htm#4710<->Eltseq(a) : RngFunOrdElt -> SeqEnum[RngElt] :: ElementToSequence(a) : FldFunElt -&gt; SeqEnum[FldElt]
5<->Eltseq(a) : FldFunOrdElt -> SeqEnum[RngElt] :: ElementToSequence(a) <->text453.htm#4710<->Eltseq(a) : FldFunOrdElt -> SeqEnum[RngElt] :: ElementToSequence(a) : FldFunElt -&gt; SeqEnum[FldElt]
5<->ElementToSequence(a) <->text453.htm#4710<->ElementToSequence(a) : FldFunElt -&gt; SeqEnum[FldElt]
5<->Eltseq(a, R) <->text453.htm#4711<->Eltseq(a, R) : FldFunElt, FldFunG -&gt; [FldFunGElt]
5<->Flat(a) <->text453.htm#4712<->Flat(a) : FldFunElt -&gt; [FldFunGElt]
5<->F ! [ a0, a1, ..., an - 1 ] <->text453.htm#4713<->F ! [ a<sub>0</sub>, a<sub>1</sub>, ..., a<sub>n - 1</sub> ] : FldFun, SeqEnum -&gt; FldFunElt
5<->O ! [ a1, a2, ..., an ] <->text453.htm#4714<->O ! [ a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub> ] : RngFunOrd, SeqEnum -&gt; RngFunOrdElt
4<->FldFunG_Elements (Example H44E25)<->text453.htm#4715<->FldFunG_Elements (Example H44E25)
4<->Example-Elements :<->text453.htm#4715<->Example-Elements :: FldFunG_Elements (Example H44E25)
3<->elements-sequence :<->text453.htm#4709<->elements-sequence :: Sequence Conversions (ALGEBRAIC FUNCTION FIELDS)
3<->elements-arithmetic :<->text453.htm#4716<->elements-arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
5<->Modexp(a, k, m) <->text453.htm#4717<->Modexp(a, k, m) : RngFunOrdElt, RngIntElt, RngValElt -> RngFunOrdElt
5<->Modexp(a, k, m) <->text453.htm#4717<->Modexp(a, k, m) : RngFunOrdElt, RngIntElt, RngUPolElt -&gt; RngFunOrdElt
5<->a mod I <->text453.htm#4718<->a mod I : RngFunOrdElt, RngFunOrdIdl -&gt; RngFunOrdElt
5<->Modinv(a, m) <->text453.htm#4719<->Modinv(a, m) : RngFunOrdElt, RngUPolElt -> RngFunOrdElt
5<->Modinv(a, m) <->text453.htm#4719<->Modinv(a, m) : RngFunOrdElt, RngValElt -> RngFunOrdElt
5<->Modinv(a, m) <->text453.htm#4719<->Modinv(a, m) : RngFunOrdElt, RngFunOrdIdl -&gt; RngFunOrdElt
3<->elements-arithmetic :<->text453.htm#4716<->elements-arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
3<->elements-equality-membership :<->text453.htm#4720<->elements-equality-membership :: Equality and Membership (ALGEBRAIC FUNCTION FIELDS)
3<->elements-boolean :<->text453.htm#4721<->elements-boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->IsDivisibleBy(a, b) <->text453.htm#4722<->IsDivisibleBy(a, b) : RngFunOrdElt, RngFunOrdElt -> BoolElt, RngFunOrdElt
5<->IsDivisibleBy(a, b) <->text453.htm#4722<->IsDivisibleBy(a, b) : FldFunElt, FldFunElt -&gt; BoolElt, FldFunElt
5<->IsSeparating(a) <->text453.htm#4723<->IsSeparating(a) : FldFunGElt -&gt; BoolElt
5<->IsConstant(a) <->text453.htm#4724<->IsConstant(a) : RngFunOrdElt -> BoolElt, RngElt
5<->IsConstant(a) <->text453.htm#4724<->IsConstant(a) : FldFunGElt -&gt; BoolElt, RngElt
5<->IsGlobalUnit(a) <->text453.htm#4725<->IsGlobalUnit(a) : FldFunElt -&gt; BoolElt
5<->IsGlobalUnitWithPreimage(a) <->text453.htm#4726<->IsGlobalUnitWithPreimage(a) : FldFunElt -&gt; BoolElt, GrpAbElt
5<->IsUnitWithPreimage(a) <->text453.htm#4727<->IsUnitWithPreimage(a) : RngFunOrdElt -&gt; BoolElt, GrpAbElt
3<->elements-boolean :<->text453.htm#4721<->elements-boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->element-norm-trace :<->text453.htm#4728<->element-norm-trace :: Functions related to Norm and  Trace (ALGEBRAIC FUNCTION FIELDS)
5<->RepresentationMatrix(a) <->text453.htm#4729<->RepresentationMatrix(a) : RngFunOrdElt -> AlgMatElt
5<->RepresentationMatrix(a) <->text453.htm#4729<->RepresentationMatrix(a) : FldFunGElt -&gt; AlgMatElt
5<->Trace(a, R) <->text453.htm#4730<->Trace(a, R) : RngFunOrdElt, Rng -> RngElt
5<->Trace(a, R) <->text453.htm#4730<->Trace(a, R) : FldFunElt, Rng -&gt; RngElt
5<->Norm(a, R) <->text453.htm#4731<->Norm(a, R) : RngFunOrdElt, Rng -> RngElt
5<->Norm(a, R) <->text453.htm#4731<->Norm(a, R) : FldFunElt, Rng -&gt; RngElt
5<->CharacteristicPolynomial(a, R) <->text453.htm#4732<->CharacteristicPolynomial(a, R) : RngFunOrdElt, Rng -> RngUPolElt
5<->CharacteristicPolynomial(a, R) <->text453.htm#4732<->CharacteristicPolynomial(a, R) : FldFunElt, Rng -&gt; RngUPolElt
5<->MinimalPolynomial(a, R) <->text453.htm#4733<->MinimalPolynomial(a, R) : RngFunOrdElt, Rng -> RngUPolElt
5<->MinimalPolynomial(a, R) <->text453.htm#4733<->MinimalPolynomial(a, R) : FldFunElt, Rng -&gt; RngUPolElt
5<->AbsoluteMinimalPolynomial(a) <->text453.htm#4734<->AbsoluteMinimalPolynomial(a) : FldFunElt -&gt; RngUPolElt
5<->RepresentationMatrix(a, R) <->text453.htm#4735<->RepresentationMatrix(a, R) : RngFunOrdElt, Rng -> AlgMatElt
5<->RepresentationMatrix(a, R) <->text453.htm#4735<->RepresentationMatrix(a, R) : FldFunGElt, Rng -&gt; AlgMatElt
4<->FldFunG_elements-norm-trace (Example H44E26)<->text453.htm#4736<->FldFunG_elements-norm-trace (Example H44E26)
4<->Example-elements-norm-trace :<->text453.htm#4736<->Example-elements-norm-trace :: FldFunG_elements-norm-trace (Example H44E26)
3<->element-norm-trace :<->text453.htm#4728<->element-norm-trace :: Functions related to Norm and  Trace (ALGEBRAIC FUNCTION FIELDS)
3<->element-ops-orders :<->text453.htm#4737<->element-ops-orders :: Functions related to Orders and Integrality (ALGEBRAIC FUNCTION FIELDS)
5<->IntegralSplit(a, O) <->text453.htm#4738<->IntegralSplit(a, O) : RngFunOrdElt, RngFunOrd -> RngFunOrdElt, RngElt
5<->IntegralSplit(a, O) <->text453.htm#4738<->IntegralSplit(a, O) : FldFunOrdElt, RngFunOrd -> RngFunOrdElt, RngElt
5<->IntegralSplit(a, O) <->text453.htm#4738<->IntegralSplit(a, O) : FldFunElt, RngFunOrd -&gt; RngFunOrdElt, RngElt
5<->Numerator(a, O) <->text453.htm#4739<->Numerator(a, O) : FldFunElt, RngFunOrd -&gt; RngFunOrdElt
5<->Numerator(a) <->text453.htm#4740<->Numerator(a) : FldFunOrdElt -&gt; RngFunOrdElt
5<->Numerator(a, O) <->text453.htm#4741<->Numerator(a, O) : FldFunOrdElt, RngFunOrd -&gt; RngElt
5<->Denominator(a, O) <->text453.htm#4742<->Denominator(a, O) : FldFunElt, RngFunOrd -&gt; RngElt
5<->Denominator(a) <->text453.htm#4743<->Denominator(a) : FldFunOrdElt -&gt; RngElt
5<->Denominator(a, O) <->text453.htm#4744<->Denominator(a, O) : FldFunOrdElt, RngFunOrd -&gt; RngElt
5<->Minimum :: Min(a, O) <->text453.htm#4745<->Minimum :: Min(a, O) : FldFunElt, RngFunOrd -&gt; RngElt, RngElt
5<->Minimum(a, O) : RngFunOrdElt, RngFunOrd -> RngElt, RngElt :: Min(a, O) <->text453.htm#4745<->Minimum(a, O) : RngFunOrdElt, RngFunOrd -> RngElt, RngElt :: Min(a, O) : FldFunElt, RngFunOrd -&gt; RngElt, RngElt
5<->Min(a, O) <->text453.htm#4745<->Min(a, O) : RngFunOrdElt, RngFunOrd -> RngElt, RngElt
5<->Min(a, O) <->text453.htm#4745<->Min(a, O) : FldFunElt, RngFunOrd -&gt; RngElt, RngElt
3<->element-ops-orders :<->text453.htm#4737<->element-ops-orders :: Functions related to Orders and Integrality (ALGEBRAIC FUNCTION FIELDS)
3<->element-ops-places :<->text453.htm#4746<->element-ops-places :: Functions related to Places and Divisors (ALGEBRAIC FUNCTION FIELDS)
5<->Evaluate(a, P) <->text453.htm#4747<->Evaluate(a, P) : RngFunOrdElt, PlcFunElt -> RngElt
5<->Evaluate(a, P) <->text453.htm#4747<->Evaluate(a, P) : FldFunElt, PlcFunElt -&gt; RngElt
5<->Lift(a, P) <->text453.htm#4748<->Lift(a, P) : RngElt, PlcFunElt -&gt; FldFunElt
5<->Valuation(a, P) <->text453.htm#4749<->Valuation(a, P) : RngFunOrdElt, PlcFunElt -> RngIntElt
5<->Valuation(a, P) <->text453.htm#4749<->Valuation(a, P) : FldFunElt, PlcFunElt -&gt; RngIntElt
5<->Expand(a, P) <->text453.htm#4750<->Expand(a, P) : FldFunGElt, PlcFunElt -&gt; RngSerElt, FldFunGElt
5<->Divisor(a) <->text453.htm#4751<->Divisor(a) : RngFunOrdElt -> DivFunElt
5<->PrincipalDivisor :: Divisor(a) <->text453.htm#4751<->PrincipalDivisor :: Divisor(a) : FldFunGElt -&gt; DivFunElt
5<->PrincipalDivisor(a) : RngFunOrdElt -> DivFunElt :: Divisor(a) <->text453.htm#4751<->PrincipalDivisor(a) : RngFunOrdElt -> DivFunElt :: Divisor(a) : FldFunGElt -&gt; DivFunElt
5<->Divisor(a) <->text453.htm#4751<->Divisor(a) : FldFunGElt -&gt; DivFunElt
5<->Zeros(a) <->text453.htm#4752<->Zeros(a) : RngFunOrdElt -> [PlcFunElt]
5<->Zeroes :: Zeros(a) <->text453.htm#4752<->Zeroes :: Zeros(a) : FldFunGElt -&gt; [PlcFunElt]
5<->Zeroes(a) : RngFunOrdElt -> [PlcFunElt] :: Zeros(a) <->text453.htm#4752<->Zeroes(a) : RngFunOrdElt -> [PlcFunElt] :: Zeros(a) : FldFunGElt -&gt; [PlcFunElt]
5<->Zeros(a) <->text453.htm#4752<->Zeros(a) : FldFunGElt -&gt; [PlcFunElt]
5<->Zeroes :: Zeros(F, a) <->text453.htm#4753<->Zeroes :: Zeros(F, a) : FldFunG, FldFunGElt -&gt; [PlcFunElt]
5<->Zeros(F, a) <->text453.htm#4753<->Zeros(F, a) : FldFunG, FldFunGElt -&gt; [PlcFunElt]
5<->Poles(a) <->text453.htm#4754<->Poles(a) : RngFunOrdElt -> SeqEnum[PlcFunElt]
5<->Poles(a) <->text453.htm#4754<->Poles(a) : FldFunGElt -&gt; SeqEnum[PlcFunElt]
5<->Poles(F, a) <->text453.htm#4755<->Poles(F, a) : FldFun, FldFunGElt -&gt; [PlcFunElt]
5<->Degree(a) <->text453.htm#4756<->Degree(a) : RngFunOrdElt -> RngIntElt
5<->Degree(a) <->text453.htm#4756<->Degree(a) : FldFunElt -&gt; RngIntElt
5<->CommonZeros(L) <->text453.htm#4757<->CommonZeros(L) : [FldFunGElt] -&gt; [PlcFunElt]
5<->CommonZeros(F, L) <->text453.htm#4758<->CommonZeros(F, L) : FldFunG, SeqEnum[ FldFunGElt ] -&gt; SeqEnum[ PlcFunElt ]
4<->FldFunG_elements (Example H44E27)<->text453.htm#4759<->FldFunG_elements (Example H44E27)
4<->Example-elements :<->text453.htm#4759<->Example-elements :: FldFunG_elements (Example H44E27)
5<->Module(L, R) <->text453.htm#4760<->Module(L, R) : SeqEnum[ FldFunGElt ], Rng -&gt; Mod, Map, SeqEnum[ ModElt ]
5<->Relations(L, R, m) <->text453.htm#4761<->Relations(L, R, m) : SeqEnum[ FldFunElt ], Rng, RngIntElt -> ModTupRng
5<->Relations(L, R) <->text453.htm#4761<->Relations(L, R) : SeqEnum[ FldFunElt ], Rng -&gt; ModTupRng
5<->Roots(f, D) <->text453.htm#4762<->Roots(f, D) : RngUPolElt, DivFunElt -&gt; SeqEnum[ FldFunElt ]
4<->FldFunG_module (Example H44E28)<->text453.htm#4763<->FldFunG_module (Example H44E28)
4<->Example-module :<->text453.htm#4763<->Example-module :: FldFunG_module (Example H44E28)
3<->element-ops-places :<->text453.htm#4746<->element-ops-places :: Functions related to Places and Divisors (ALGEBRAIC FUNCTION FIELDS)
3<->elt-other :<->text453.htm#4764<->elt-other :: Other Operations on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->ProductRepresentation(a) <->text453.htm#4765<->ProductRepresentation(a) : RngFunOrdElt -> [RngElt], [RngIntElt]
5<->ProductRepresentation(a) <->text453.htm#4765<->ProductRepresentation(a) : FldFunGElt -&gt; [FldFunGElt], [RngIntElt]
5<->PowerProduct :: ProductRepresentation(Q, S) <->text453.htm#4766<->PowerProduct :: ProductRepresentation(Q, S) : [FldFunGElt], [RngIntElt] -&gt; FldFunGElt
5<->ProductRepresentation(Q, S) <->text453.htm#4766<->ProductRepresentation(Q, S) : [FldFunGElt], [RngIntElt] -&gt; FldFunGElt
5<->RationalFunction(a, R) <->text453.htm#4767<->RationalFunction(a, R) : FldFunGElt, Rng -> RngElt
5<->RationalFunction(a) <->text453.htm#4767<->RationalFunction(a) : FldFunGElt -&gt; RngElt
5<->Differentiation(x, a) <->text453.htm#4768<->Differentiation(x, a) : FldFunGElt, FldFunGElt -&gt; FldFunGElt
5<->Differentiation(x, n, a) <->text453.htm#4769<->Differentiation(x, n, a) : FldFunGElt, RngIntElt, FldFunGElt -&gt; FldFunGElt
5<->DifferentiationSequence(x, n, a) <->text453.htm#4770<->DifferentiationSequence(x, n, a) : FldFunGElt, RngIntElt, FldFunGElt -&gt; SeqEnum
5<->PrimePowerRepresentation(x, k, a) <->text453.htm#4771<->PrimePowerRepresentation(x, k, a) : FldFunGElt, RngIntElt, FldFunGElt -&gt; SeqEnum
5<->Different(a) <->text453.htm#4772<->Different(a) : RngFunOrdElt -&gt; RngFunOrdElt
5<->RationalReconstruction(e, f) <->text453.htm#4773<->RationalReconstruction(e, f) : FldFunElt, RngUPolElt -&gt; BoolElt, FldFunElt
5<->CoefficientHeight(a) <->text453.htm#4774<->CoefficientHeight(a) : FldFunElt -> RngIntElt
5<->CoefficientHeight(a) <->text453.htm#4774<->CoefficientHeight(a) : RngFunOrdElt -&gt; RngIntElt
5<->CoefficientLength(a) <->text453.htm#4775<->CoefficientLength(a) : FldFunElt -> RngIntElt
5<->CoefficientLength(a) <->text453.htm#4775<->CoefficientLength(a) : RngFunOrdElt -&gt; RngIntElt
4<->FldFunG_elements-other_ops (Example H44E29)<->text453.htm#4776<->FldFunG_elements-other_ops (Example H44E29)
4<->Example-elements-other_ops :<->text453.htm#4776<->Example-elements-other_ops :: FldFunG_elements-other_ops (Example H44E29)
3<->elt-other :<->text453.htm#4764<->elt-other :: Other Operations on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elements :<->text453.htm<->elements :: Elements (ALGEBRAIC FUNCTION FIELDS)
3<->ideals :<->text454.htm<->ideals :: Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->ideals-creation :<->text454.htm#4778<->ideals-creation :: Creation of Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->ideal< O | a1, a2, ... , am > <->text454.htm#4779<->ideal&lt; O | a<sub>1</sub>, a<sub>2</sub>, ... , a<sub>m</sub> &gt; : RngFunOrd, RngElt, ..., RngElt -&gt; RngFunOrdIdl
5<->ideal <->text454.htm#4780<->ideal< O | T, d > : RngFunOrd, ModDed, RngElt -> RngFunOrdIdl
5<->ideal< O | T, d > <->text454.htm#4780<->ideal&lt; O | T, d &gt; : RngFunOrd, AlgMatElt, RngElt -&gt; RngFunOrdIdl
5<->ideal <->text454.htm#4781<->ideal< O | T, $I_1, ..., I_n$ > : RngFunOrd, AlgMatElt, RngFunOrdIdl, ..., RngFunOrdIdl -> RngFunOrdIdl
5<->ideal< O | T, S > <->text454.htm#4781<->ideal&lt; O | T, S &gt; : RngFunOrd, AlgMatElt, [RngFunOrdIdl] -&gt; RngFunOrdIdl
5<->O * x <->text454.htm#4782<->O * x : RngFunOrd, RngElt -> RngFunOrdIdl
5<->x * O <->text454.htm#4782<->x * O : RngElt, RngFunOrd -&gt; RngFunOrdIdl
5<->Ideal(P) <->text454.htm#4783<->Ideal(P) : PlcFunElt  -&gt; RngFunOrdIdl
5<->Ideals(D) <->text454.htm#4784<->Ideals(D) : DivFunElt  -&gt; RngFunOrdIdl, RngFunOrdIdl
5<->O !! I <->text454.htm#4785<->O !! I : RngFunOrd, RngFunOrdIdl -&gt; RngFunOrdIdl
3<->ideals-creation :<->text454.htm#4778<->ideals-creation :: Creation of Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->parent-category :<->text454.htm#4786<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->arithmetic :<->text454.htm#4787<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
5<->c / I <->text454.htm#4788<->c / I : RngElt, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->ColonIdeal :: IdealQuotient(I, J) <->text454.htm#4789<->ColonIdeal :: IdealQuotient(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->IdealQuotient(I, J) <->text454.htm#4789<->IdealQuotient(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->CRT :: ChineseRemainderTheorem(I1, I2, e1, e2) <->text454.htm#4790<->CRT :: ChineseRemainderTheorem(I1, I2, e1, e2) : RngFunOrdIdl, RngFunOrdIdl, RngFunOrdElt, RngFunOrdElt -&gt; RngFunOrdElt
5<->ChineseRemainderTheorem(I1, I2, e1, e2) <->text454.htm#4790<->ChineseRemainderTheorem(I1, I2, e1, e2) : RngFunOrdIdl, RngFunOrdIdl, RngFunOrdElt, RngFunOrdElt -&gt; RngFunOrdElt
3<->arithmetic :<->text454.htm#4787<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
3<->ideals-roots :<->text454.htm#4791<->ideals-roots :: Roots of Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->IsPower(I, n) <->text454.htm#4792<->IsPower(I, n) : RngFunOrdIdl, RngIntElt -&gt; BoolElt, RngFunOrdIdl
5<->Root(I, n) <->text454.htm#4793<->Root(I, n) : RngFunOrdIdl, RngIntElt -&gt; RngFunOrdIdl
5<->IsSquare(I) <->text454.htm#4794<->IsSquare(I) : RngFunOrdIdl -&gt; BoolElt, RngFunOrdIdl
5<->Sqrt :: SquareRoot(I) <->text454.htm#4795<->Sqrt :: SquareRoot(I) : RngFunOrdIdl -&gt; RngFunOrdIdl
5<->SquareRoot(I) <->text454.htm#4795<->SquareRoot(I) : RngFunOrdIdl -&gt; RngFunOrdIdl
4<->FldFunG_ideal-is-square (Example H44E30)<->text454.htm#4796<->FldFunG_ideal-is-square (Example H44E30)
4<->Example-ideal-is-square :<->text454.htm#4796<->Example-ideal-is-square :: FldFunG_ideal-is-square (Example H44E30)
3<->ideals-roots :<->text454.htm#4791<->ideals-roots :: Roots of Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->equality-membership :<->text454.htm#4797<->equality-membership :: Equality and Membership (ALGEBRAIC FUNCTION FIELDS)
3<->boolean :<->text454.htm#4798<->boolean :: Predicates on Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->IsZero(I) <->text454.htm#4799<->IsZero(I) : RngFunOrdIdl -&gt; BoolElt
5<->IsOne(I) <->text454.htm#4800<->IsOne(I) : RngFunOrdIdl -&gt; BoolElt
5<->IsIntegral(I) <->text454.htm#4801<->IsIntegral(I) : RngFunOrdIdl -&gt; BoolElt
5<->IsPrime(I) <->text454.htm#4802<->IsPrime(I) : RngFunOrdIdl -&gt; BoolElt
5<->IsPrincipal(I) <->text454.htm#4803<->IsPrincipal(I) : RngFunOrdIdl -&gt; BoolElt, FldFunElt
3<->pred-ideal-prime :<->text454.htm#4804<->pred-ideal-prime :: Predicates on Prime Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->IsInert(P) <->text454.htm#4805<->IsInert(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsInert(P, O) <->text454.htm#4806<->IsInert(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsInert(P, O) <->text454.htm#4806<->IsInert(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsRamified(P) <->text454.htm#4807<->IsRamified(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsRamified(P, O) <->text454.htm#4808<->IsRamified(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsRamified(P, O) <->text454.htm#4808<->IsRamified(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsSplit(P) <->text454.htm#4809<->IsSplit(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsSplit(P, O) <->text454.htm#4810<->IsSplit(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsSplit(P, O) <->text454.htm#4810<->IsSplit(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsTamelyRamified(P) <->text454.htm#4811<->IsTamelyRamified(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsTamelyRamified(P, O) <->text454.htm#4812<->IsTamelyRamified(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsTamelyRamified(P, O) <->text454.htm#4812<->IsTamelyRamified(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsTotallyRamified(P) <->text454.htm#4813<->IsTotallyRamified(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsTotallyRamified(P, O) <->text454.htm#4814<->IsTotallyRamified(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsTotallyRamified(P, O) <->text454.htm#4814<->IsTotallyRamified(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsTotallySplit(P) <->text454.htm#4815<->IsTotallySplit(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsTotallySplit(P, O) <->text454.htm#4816<->IsTotallySplit(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsTotallySplit(P, O) <->text454.htm#4816<->IsTotallySplit(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsUnramified(P) <->text454.htm#4817<->IsUnramified(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsUnramified(P, O) <->text454.htm#4818<->IsUnramified(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsUnramified(P, O) <->text454.htm#4818<->IsUnramified(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
5<->IsWildlyRamified(P) <->text454.htm#4819<->IsWildlyRamified(P) : RngFunOrdIdl -&gt; BoolElt
5<->IsWildlyRamified(P, O) <->text454.htm#4820<->IsWildlyRamified(P, O) : RngElt, RngFunOrd -> BoolElt
5<->IsWildlyRamified(P, O) <->text454.htm#4820<->IsWildlyRamified(P, O) : RngFunOrdIdl, RngFunOrd -&gt; BoolElt
3<->pred-ideal-prime :<->text454.htm#4804<->pred-ideal-prime :: Predicates on Prime Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->boolean :<->text454.htm#4798<->boolean :: Predicates on Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->ideal-ops-further :<->text454.htm#4821<->ideal-ops-further :: Further Ideal Operations (ALGEBRAIC FUNCTION FIELDS)
5<->I meet J <->text454.htm#4822<->I meet J : RngFunOrdIdl, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Gcd(I, J) <->text454.htm#4823<->Gcd(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Lcm(I, J) <->text454.htm#4824<->Lcm(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Factorisation :: Factorization(I) <->text454.htm#4825<->Factorisation :: Factorization(I) : RngFunOrdIdl -&gt; [ &lt;RngFunOrdIdl, RngIntElt&gt; ]
5<->Factorization(I) <->text454.htm#4825<->Factorization(I) : RngFunOrdIdl -&gt; [ &lt;RngFunOrdIdl, RngIntElt&gt; ]
5<->Decomposition(O, p) <->text454.htm#4826<->Decomposition(O, p) : RngFunOrd, RngFunOrdIdl -> [ RngFunOrdIdl ]
5<->Decomposition(O, p) <->text454.htm#4826<->Decomposition(O, p) : RngFunOrd, RngElt -&gt; [ RngFunOrdIdl ]
5<->Decomposition(O) <->text454.htm#4827<->Decomposition(O) : RngFunOrd -&gt; [ RngFunOrdIdl ]
5<->DecompositionType(O, p) <->text454.htm#4828<->DecompositionType(O, p) : RngFunOrd, RngFunOrdIdl -> [ <RngIntElt, RngIntElt> ]
5<->DecompositionType(O, p) <->text454.htm#4828<->DecompositionType(O, p) : RngFunOrd, RngElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->DecompositionType(O) <->text454.htm#4829<->DecompositionType(O) : RngFunOrd -&gt;  [ &lt;RngIntElt, RngIntElt&gt; ]
5<->MultiplicatorRing(I) <->text454.htm#4830<->MultiplicatorRing(I) : RngFunOrdIdl -&gt; RngFunOrd
5<->pMaximalOrder(O, p) <->text454.htm#4831<->pMaximalOrder(O, p) : RngFunOrd, RngFunOrdIdl -&gt; RngFunOrd
5<->pRadical(O, p) <->text454.htm#4832<->pRadical(O, p) : RngFunOrd, RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Valuation(I, P) <->text454.htm#4833<->Valuation(I, P) : RngFunOrdIdl, RngFunOrdIdl -> RngIntElt
5<->Valuation(a, P) <->text454.htm#4833<->Valuation(a, P) : RngElt, RngFunOrdIdl -&gt; RngIntElt
5<->Order(I) <->text454.htm#4834<->Order(I) : RngFunOrdIdl -&gt; RngFunOrd
5<->Denominator(I) <->text454.htm#4835<->Denominator(I) : RngFunOrdIdl -&gt; RngElt
5<->Minimum(I) <->text454.htm#4836<->Minimum(I) : RngFunOrdIdl -&gt; Any
5<->I meet R <->text454.htm#4837<->I meet R : RngFunOrdIdl, Rng -&gt; Any
5<->IntegralSplit(I) <->text454.htm#4838<->IntegralSplit(I) : RngFunOrdIdl -&gt; RngFunOrdIdl, RngElt
5<->Norm(I) <->text454.htm#4839<->Norm(I) : RngFunOrdIdl -&gt; Any
5<->TwoElement(I) <->text454.htm#4840<->TwoElement(I) : RngFunOrdIdl -&gt; RngElt, RngElt
5<->Generators(I) <->text454.htm#4841<->Generators(I) : RngFunOrdIdl -&gt; [ RngFunOrdElt ]
5<->Basis(I, R) <->text454.htm#4842<->Basis(I, R) : RngFunOrdIdl, Rng -> [ RngElt ]
5<->Basis(I) <->text454.htm#4842<->Basis(I) : RngFunOrdIdl -&gt; [FldFunElt]
5<->BasisMatrix(I) <->text454.htm#4843<->BasisMatrix(I) : RngFunOrdIdl -&gt; AlgMatElt
5<->TransformationMatrix(I) <->text454.htm#4844<->TransformationMatrix(I) : RngFunOrdIdl -&gt; AlgMatElt, RngElt
5<->CoefficientIdeals(I) <->text454.htm#4845<->CoefficientIdeals(I) : RngFunOrdIdl -&gt; [RngFunOrdIdl]
5<->Different(I) <->text454.htm#4846<->Different(I) : RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Codifferent(I) <->text454.htm#4847<->Codifferent(I) : RngFunOrdIdl -&gt; RngFunOrdIdl
5<->Divisor(I) <->text454.htm#4848<->Divisor(I) : RngFunOrdIdl -&gt; DivFunElt
5<->Divisor(I, J) <->text454.htm#4849<->Divisor(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; DivFunElt
5<->CoefficientHeight(I) <->text454.htm#4850<->CoefficientHeight(I) : RngFunOrdIdl -&gt; RngIntElt
5<->CoefficientLength(I) <->text454.htm#4851<->CoefficientLength(I) : RngFunOrdIdl -&gt; RngIntElt
4<->FldFunG_ideals (Example H44E31)<->text454.htm#4852<->FldFunG_ideals (Example H44E31)
4<->Example-ideals :<->text454.htm#4852<->Example-ideals :: FldFunG_ideals (Example H44E31)
3<->ideals-prime :<->text454.htm#4853<->ideals-prime :: Functions on Prime Ideals (ALGEBRAIC FUNCTION FIELDS)
5<->RamificationDegree :: RamificationIndex(I) <->text454.htm#4854<->RamificationDegree :: RamificationIndex(I) : RngFunOrdIdl -&gt; RngIntElt
5<->RamificationIndex(I) <->text454.htm#4854<->RamificationIndex(I) : RngFunOrdIdl -&gt; RngIntElt
5<->InertiaDegree :: Degree(I) <->text454.htm#4855<->InertiaDegree :: Degree(I) : RngFunOrdIdl -&gt; RngIntElt
5<->ResidueClassDegree :: Degree(I) <->text454.htm#4855<->ResidueClassDegree :: Degree(I) : RngFunOrdIdl -&gt; RngIntElt
5<->Degree(I) <->text454.htm#4855<->Degree(I) : RngFunOrdIdl -&gt; RngIntElt
5<->ResidueClassField(I) <->text454.htm#4856<->ResidueClassField(I) : RngFunOrdIdl -&gt; Rng, Map
5<->Place(I) <->text454.htm#4857<->Place(I) : RngFunOrdIdl -&gt; PlcFunElt
5<->SafeUniformizer(P) <->text454.htm#4858<->SafeUniformizer(P) : RngFunOrdIdl -&gt; RngFunOrdElt
5<->WeakApproximation(I, V) <->text454.htm#4859<->WeakApproximation(I, V) : [RngFunOrdIdl], [RngIntElt] -&gt; FldFunElt
4<->FldFunG_order-ideals (Example H44E32)<->text454.htm#4860<->FldFunG_order-ideals (Example H44E32)
4<->Example-order-ideals :<->text454.htm#4860<->Example-order-ideals :: FldFunG_order-ideals (Example H44E32)
3<->ideals-prime :<->text454.htm#4853<->ideals-prime :: Functions on Prime Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->ideal-ops-further :<->text454.htm#4821<->ideal-ops-further :: Further Ideal Operations (ALGEBRAIC FUNCTION FIELDS)
3<->ideals :<->text454.htm<->ideals :: Ideals (ALGEBRAIC FUNCTION FIELDS)
3<->Places (ALGEBRAIC FUNCTION FIELDS)<->text455.htm<->Places (ALGEBRAIC FUNCTION FIELDS)
3<->creation-structure :<->text455.htm#4862<->creation-structure :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
5<->Places(F) <->text455.htm#4863<->Places(F) : FldFun -&gt; PlcFun
3<->creation-structure :<->text455.htm#4862<->creation-structure :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
3<->creation-element :<->text455.htm#4864<->creation-element :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
3<->creation-element-general :<->text455.htm#4865<->creation-element-general :: General Function Field Places (ALGEBRAIC FUNCTION FIELDS)
5<->Decomposition(F, P) <->text455.htm#4866<->Decomposition(F, P) : FldFunG, PlcFunElt -&gt; [ PlcFunElt ]
5<->DecompositionType(F, P) <->text455.htm#4867<->DecompositionType(F, P) : FldFun, PlcFunElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->Zeros(a) <->text455.htm#4868<->Zeros(a) : RngFunOrdElt -> [ PlcFunElt ]
5<->Zeros(a) <->text455.htm#4868<->Zeros(a) : FldFunElt -&gt; [ PlcFunElt ]
5<->Poles(a) <->text455.htm#4869<->Poles(a) : RngFunOrdElt -> [ PlcFunElt ]
5<->Poles(a) <->text455.htm#4869<->Poles(a) : FldFunElt -&gt; [ PlcFunElt ]
5<->Place :: S ! I <->text455.htm#4870<->Place :: S ! I : PlcFun, RngFunOrdIdl -&gt; PlcFunElt
5<->S ! I <->text455.htm#4870<->S ! I : PlcFun, RngFunOrdIdl -&gt; PlcFunElt
5<->Support(P) <->text455.htm#4871<->Support(P) : PlcFunElt -> [ PlcFunElt ], [ RngIntElt ]
5<->Support(D) <->text455.htm#4871<->Support(D) : DivFunElt -&gt; [ PlcFunElt ], [ RngIntElt ]
5<->AssignNames(~P, s) <->text455.htm#4872<->AssignNames(~P, s) : PlcFunElt, [ MonStgElt ] -&gt;
5<->InfinitePlaces(F) <->text455.htm#4873<->InfinitePlaces(F) : FldFun -&gt; [PlcFunElt]
3<->creation-element-general :<->text455.htm#4865<->creation-element-general :: General Function Field Places (ALGEBRAIC FUNCTION FIELDS)
3<->creation-element-global :<->text455.htm#4874<->creation-element-global :: Global Function Field Places (ALGEBRAIC FUNCTION FIELDS)
5<->HasPlace(F, m) <->text455.htm#4875<->HasPlace(F, m) : FldFun, RngIntElt -&gt; PlcFunElt
5<->HasRandomPlace(F, m) <->text455.htm#4876<->HasRandomPlace(F, m) : FldFun, RngIntElt -&gt; BoolElt, PlcFunElt
5<->RandomPlace(F, m) <->text455.htm#4877<->RandomPlace(F, m) : FldFun, RngIntElt -&gt; PlcFunElt
5<->Places(F, m) <->text455.htm#4878<->Places(F, m) : FldFun, RngIntElt -&gt; SeqEnum[PlcFunElt]
4<->FldFunG_place-creation (Example H44E33)<->text455.htm#4879<->FldFunG_place-creation (Example H44E33)
4<->Example-place-creation :<->text455.htm#4879<->Example-place-creation :: FldFunG_place-creation (Example H44E33)
3<->creation-element-global :<->text455.htm#4874<->creation-element-global :: Global Function Field Places (ALGEBRAIC FUNCTION FIELDS)
3<->creation-element :<->text455.htm#4864<->creation-element :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
3<->operation-structure :<->text455.htm#4880<->operation-structure :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->parent-category :<->text455.htm#4881<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionField(S) <->text455.htm#4882<->FunctionField(S) : PlcFun -&gt; FldFun
5<->DivisorGroup(F) <->text455.htm#4883<->DivisorGroup(F) : FldFunG -&gt; DivFun
3<->parent-category :<->text455.htm#4881<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->operation-structure :<->text455.htm#4880<->operation-structure :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->other :<->text455.htm#4884<->other :: Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
3<->other-general :<->text455.htm#4885<->other-general :: General function fields (ALGEBRAIC FUNCTION FIELDS)
5<->WeierstrassPlaces(F) <->text455.htm#4886<->WeierstrassPlaces(F) : FldFunG -&gt; [PlcFunElt]
3<->other-general :<->text455.htm#4885<->other-general :: General function fields (ALGEBRAIC FUNCTION FIELDS)
3<->other-global :<->text455.htm#4887<->other-global :: Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
5<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) <->text455.htm#4888<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) <->text455.htm#4888<->NumberOfPlacesOfDegreeOneOverExactConstantField(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound :: NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) <->text455.htm#4889<->NumberOfPlacesOfDegreeOneECFBound :: NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) <->text455.htm#4889<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(F, m) : FldFun, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(F, m) <->text455.htm#4890<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(F, m) : FldFunG, RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOverExactConstantField(F, m) <->text455.htm#4890<->NumberOfPlacesOfDegreeOverExactConstantField(F, m) : FldFunG, RngIntElt -&gt; RngIntElt
3<->other-global :<->text455.htm#4887<->other-global :: Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->other :<->text455.htm#4884<->other :: Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
3<->structure-predicates :<->text455.htm#4891<->structure-predicates :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
3<->operation-element :<->text455.htm#4892<->operation-element :: Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->parent-category :<->text455.htm#4893<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->arithmetic :<->text455.htm#4894<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
5<->Quotrem(P, k) <->text455.htm#4895<->Quotrem(P, k) : PlcFunElt, RngIntElt -&gt; DivFunElt, DivFunElt
3<->arithmetic :<->text455.htm#4894<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
3<->equality-membership :<->text455.htm#4896<->equality-membership :: Equality and Membership (ALGEBRAIC FUNCTION FIELDS)
3<->boolean :<->text455.htm#4897<->boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->IsFinite(P) <->text455.htm#4898<->IsFinite(P) : PlcFunElt -&gt; BoolElt
5<->IsWeierstrassPlace(F, P) <->text455.htm#4899<->IsWeierstrassPlace(F, P) : FldFunG, PlcFunElt -> BoolElt
5<->IsWeierstrassPlace(P) <->text455.htm#4899<->IsWeierstrassPlace(P) : PlcFunElt -&gt; BoolElt
3<->boolean :<->text455.htm#4897<->boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->element-ops-other :<->text455.htm#4900<->element-ops-other :: Other Element Operations (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionField(P) <->text455.htm#4901<->FunctionField(P) : PlcFunElt -&gt; FldFun
5<->Degree(P) <->text455.htm#4902<->Degree(P) : PlcFunElt -&gt; RngIntElt
5<->RamificationDegree :: RamificationIndex(P) <->text455.htm#4903<->RamificationDegree :: RamificationIndex(P) : PlcFunElt -&gt; RngIntElt
5<->RamificationIndex(P) <->text455.htm#4903<->RamificationIndex(P) : PlcFunElt -&gt; RngIntElt
5<->ResidueClassDegree :: InertiaDegree(P) <->text455.htm#4904<->ResidueClassDegree :: InertiaDegree(P) : PlcFunElt -&gt; RngIntElt
5<->InertiaDegree(P) <->text455.htm#4904<->InertiaDegree(P) : PlcFunElt -&gt; RngIntElt
5<->Minimum(P) <->text455.htm#4905<->Minimum(P) : PlcFunElt -&gt; RngElt
5<->ResidueClassField(P) <->text455.htm#4906<->ResidueClassField(P) : PlcFunElt -&gt; Rng, Map
5<->Evaluate(a, P) <->text455.htm#4907<->Evaluate(a, P) : RngElt, PlcFunElt -&gt; RngElt
5<->Lift(i, P) <->text455.htm#4908<->Lift(i, P) : Infty, PlcFunElt -> FldFunElt
5<->Lift(a, P) <->text455.htm#4908<->Lift(a, P) : RngElt, PlcFunElt -&gt; FldFunElt
5<->TwoGenerators(P) <->text455.htm#4909<->TwoGenerators(P) : PlcFunElt  -&gt; FldFunGElt, FldFunGElt
5<->UniformizingElement :: LocalUniformizer(P) <->text455.htm#4910<->UniformizingElement :: LocalUniformizer(P) : PlcFunElt  -&gt; FldFunGElt
5<->LocalUniformizer(P) <->text455.htm#4910<->LocalUniformizer(P) : PlcFunElt  -&gt; FldFunGElt
5<->Valuation(a, P) <->text455.htm#4911<->Valuation(a, P) : FldFunElt, PlcFunElt -&gt; RngIntElt
5<->Ideal(P) <->text455.htm#4912<->Ideal(P) : PlcFunElt  -&gt; RngFunOrdIdl
5<->Norm(P) <->text455.htm#4913<->Norm(P) : PlcFunElt -&gt; DivFunElt
4<->FldFunG_places (Example H44E34)<->text455.htm#4914<->FldFunG_places (Example H44E34)
4<->Example-places :<->text455.htm#4914<->Example-places :: FldFunG_places (Example H44E34)
3<->element-ops-other :<->text455.htm#4900<->element-ops-other :: Other Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->operation-element :<->text455.htm#4892<->operation-element :: Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->place-ops-completion :<->text455.htm#4915<->place-ops-completion :: Completion at Places (ALGEBRAIC FUNCTION FIELDS)
5<->Completion(O, p) <->text455.htm#4916<->Completion(O, p) : RngFunOrd, PlcFunElt -> RngSerPow, Map
5<->Completion(F, p) <->text455.htm#4916<->Completion(F, p) : FldFun, PlcFunElt -&gt; RngSerLaur, Map
3<->place-ops-completion :<->text455.htm#4915<->place-ops-completion :: Completion at Places (ALGEBRAIC FUNCTION FIELDS)
3<->Places (ALGEBRAIC FUNCTION FIELDS)<->text455.htm<->Places (ALGEBRAIC FUNCTION FIELDS)
3<->Divisors (ALGEBRAIC FUNCTION FIELDS)<->text456.htm<->Divisors (ALGEBRAIC FUNCTION FIELDS)
3<->creation-structure :<->text456.htm#4918<->creation-structure :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
5<->DivisorGroup(F) <->text456.htm#4919<->DivisorGroup(F) : FldFun -&gt; DivFun
3<->creation-structure :<->text456.htm#4918<->creation-structure :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
3<->creation-element :<->text456.htm#4920<->creation-element :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
5<->! :: Divisor(P) <->text456.htm#4921<->! :: Divisor(P) : PlcFunElt -&gt; DivFunElt
5<->* :: Divisor(P) <->text456.htm#4921<->* :: Divisor(P) : PlcFunElt -&gt; DivFunElt
5<->Divisor(P) <->text456.htm#4921<->Divisor(P) : PlcFunElt -&gt; DivFunElt
5<->Divisor :: Div ! a <->text456.htm#4922<->Divisor :: Div ! a : DivFun, RngElt -&gt; DivFunElt
5<->Divisor(a) : RngFunOrdElt -> DivFunElt :: Div ! a <->text456.htm#4922<->Divisor(a) : RngFunOrdElt -> DivFunElt :: Div ! a : DivFun, RngElt -&gt; DivFunElt
5<->Div ! a <->text456.htm#4922<->Div ! a : DivFun, RngElt -&gt; DivFunElt
5<->Divisor :: Div ! I <->text456.htm#4923<->Divisor :: Div ! I : DivFun, RngFunOrdIdl -&gt; DivFunElt
5<->Div ! I <->text456.htm#4923<->Div ! I : DivFun, RngFunOrdIdl -&gt; DivFunElt
5<->Divisor(I, J) <->text456.htm#4924<->Divisor(I, J) : RngFunOrdIdl, RngFunOrdIdl -&gt; DivFunElt
5<->Identity(G) <->text456.htm#4925<->Identity(G) : DivFun -&gt; DivFunElt
5<->CanonicalDivisor(F) <->text456.htm#4926<->CanonicalDivisor(F) : FldFunG -&gt; DivFunElt
5<->DifferentDivisor(F) <->text456.htm#4927<->DifferentDivisor(F) : FldFunG -&gt; DivFunElt
5<->AssignNames(~D, s) <->text456.htm#4928<->AssignNames(~D, s) : DivFunElt, [ MonStgElt ] -&gt;
3<->creation-element :<->text456.htm#4920<->creation-element :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
3<->operation-structure :<->text456.htm#4929<->operation-structure :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->parent-category :<->text456.htm#4930<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionField(G) <->text456.htm#4931<->FunctionField(G) : DivFun -&gt; FldFun
5<->Places(F) <->text456.htm#4932<->Places(F) : FldFun -&gt; PlcFun
3<->parent-category :<->text456.htm#4930<->parent-category :: Parent and Category (ALGEBRAIC FUNCTION FIELDS)
3<->operation-structure :<->text456.htm#4929<->operation-structure :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->other :<->text456.htm#4933<->other :: Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
5<->NumberOfSmoothDivisors(n, m, P) <->text456.htm#4934<->NumberOfSmoothDivisors(n, m, P) : RngIntElt, RngIntElt, SeqEnum[RngElt] -&gt; RngElt
5<->DivisorOfDegreeOne(F) <->text456.htm#4935<->DivisorOfDegreeOne(F) : FldFunG -&gt; DivFunElt
3<->other :<->text456.htm#4933<->other :: Structure Invariants (ALGEBRAIC FUNCTION FIELDS)
3<->structure-predicates :<->text456.htm#4936<->structure-predicates :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
3<->operation-element :<->text456.htm#4937<->operation-element :: Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->arithmetic :<->text456.htm#4938<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
5<->Quotrem(D, k) <->text456.htm#4939<->Quotrem(D, k) : DivFunElt, RngIntElt -&gt; DivFunElt, DivFunElt
5<->Gcd :: GCD(D1, D2) <->text456.htm#4940<->Gcd :: GCD(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
5<->GreatestCommonDivisor :: GCD(D1, D2) <->text456.htm#4940<->GreatestCommonDivisor :: GCD(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
5<->GCD(D1, D2) <->text456.htm#4940<->GCD(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
5<->Lcm :: LCM(D1, D2) <->text456.htm#4941<->Lcm :: LCM(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
5<->LeastCommonMultiple :: LCM(D1, D2) <->text456.htm#4941<->LeastCommonMultiple :: LCM(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
5<->LCM(D1, D2) <->text456.htm#4941<->LCM(D1, D2) : DivFunElt, DivFunElt -&gt; DivFunElt
3<->arithmetic :<->text456.htm#4938<->arithmetic :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
3<->equality-membership :<->text456.htm#4942<->equality-membership :: Equality, Comparison and Membership (ALGEBRAIC FUNCTION FIELDS)
3<->boolean :<->text456.htm#4943<->boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->IsCanonical(D) <->text456.htm#4944<->IsCanonical(D) : DivFunElt -&gt; BoolElt, DiffFunElt
4<->FldFunG_divisors-simple_rel (Example H44E35)<->text456.htm#4945<->FldFunG_divisors-simple_rel (Example H44E35)
4<->Example-divisors-simple_rel :<->text456.htm#4945<->Example-divisors-simple_rel :: FldFunG_divisors-simple_rel (Example H44E35)
3<->boolean :<->text456.htm#4943<->boolean :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->element-ops-other :<->text456.htm#4946<->element-ops-other :: Other Element Operations (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionField(D) <->text456.htm#4947<->FunctionField(D) : DivFunElt -&gt; FldFun
5<->Degree(D) <->text456.htm#4948<->Degree(D) : DivFunElt -&gt; RngIntElt
5<->Support(D) <->text456.htm#4949<->Support(D) : DivFunElt -&gt; [ PlcFunElt ]
5<->ZeroDivisor :: Numerator(D) <->text456.htm#4950<->ZeroDivisor :: Numerator(D) : DivFunElt -&gt; DivFunElt
5<->Numerator(D) <->text456.htm#4950<->Numerator(D) : DivFunElt -&gt; DivFunElt
5<->PoleDivisor :: Denominator(D) <->text456.htm#4951<->PoleDivisor :: Denominator(D) : DivFunElt -&gt; DivFunElt
5<->Denominator(D) <->text456.htm#4951<->Denominator(D) : DivFunElt -&gt; DivFunElt
5<->Ideals(D) <->text456.htm#4952<->Ideals(D) : DivFunElt  -&gt; RngFunOrdIdl, RngFunOrdIdl
5<->Norm(D) <->text456.htm#4953<->Norm(D) : DivFunElt -&gt; DivFunElt
5<->FiniteDivisor :: FiniteSplit(D) <->text456.htm#4954<->FiniteDivisor :: FiniteSplit(D) : DivFunElt -&gt; DivFunElt, DivFunElt
5<->InfiniteDivisor :: FiniteSplit(D) <->text456.htm#4954<->InfiniteDivisor :: FiniteSplit(D) : DivFunElt -&gt; DivFunElt, DivFunElt
5<->FiniteSplit(D) <->text456.htm#4954<->FiniteSplit(D) : DivFunElt -&gt; DivFunElt, DivFunElt
5<->Dimension(D) <->text456.htm#4955<->Dimension(D) : DivFunElt -&gt; RngIntElt
5<->IndexOfSpeciality(D) <->text456.htm#4956<->IndexOfSpeciality(D) : DivFunElt -&gt; RngIntElt
5<->ShortBasis(D : parameters) <->text456.htm#4957<->ShortBasis(D : parameters) : DivFunElt -&gt; [RngElt], [RngIntElt]
5<->Basis(D : parameters) <->text456.htm#4958<->Basis(D : parameters) : DivFunElt -&gt; [ FldFunElt ]
5<->RiemannRochSpace(P) <->text456.htm#4959<->RiemannRochSpace(P) : PlcFunElt -> ModFld, Map
5<->RiemannRochSpace(D) <->text456.htm#4959<->RiemannRochSpace(D) : DivFunElt -&gt; ModFld, Map
5<->Valuation(D, P) <->text456.htm#4960<->Valuation(D, P) : DivFunElt, PlcFunElt -&gt; RngIntElt
5<->Reduction(D, A) <->text456.htm#4961<->Reduction(D, A) : DivFunElt, DivFunElt -> DivFunElt, RngIntElt, DivFunElt, FldFunElt
5<->Reduction(D) <->text456.htm#4961<->Reduction(D) : DivFunElt -&gt; DivFunElt, RngIntElt, DivFunElt, FldFunElt
5<->GapNumbers(D, P) <->text456.htm#4962<->GapNumbers(D, P) : DivFunElt, PlcFunElt -&gt; SeqEnum[RngIntElt]
5<->GapNumbers(D) <->text456.htm#4963<->GapNumbers(D) : DivFunElt -&gt; SeqEnum[RngIntElt]
4<->FldFunG_divisors (Example H44E36)<->text456.htm#4964<->FldFunG_divisors (Example H44E36)
4<->Example-divisors :<->text456.htm#4964<->Example-divisors :: FldFunG_divisors (Example H44E36)
4<->FldFunG_AlgReln1 (Example H44E37)<->text456.htm#4965<->FldFunG_AlgReln1 (Example H44E37)
4<->Example-AlgReln1 :<->text456.htm#4965<->Example-AlgReln1 :: FldFunG_AlgReln1 (Example H44E37)
4<->FldFunG_AlgReln2 (Example H44E38)<->text456.htm#4966<->FldFunG_AlgReln2 (Example H44E38)
4<->Example-AlgReln2 :<->text456.htm#4966<->Example-AlgReln2 :: FldFunG_AlgReln2 (Example H44E38)
5<->RamificationDivisor(D) <->text456.htm#4967<->RamificationDivisor(D) : DivFunElt -&gt; DivFunElt
5<->WeierstrassPlaces(D) <->text456.htm#4968<->WeierstrassPlaces(D) : DivFunElt -&gt; [PlcFunElt]
5<->IsWeierstrassPlace(D, P) <->text456.htm#4969<->IsWeierstrassPlace(D, P) : DivFunElt, PlcFunElt -&gt; BoolElt
5<->WronskianOrders(D) <->text456.htm#4970<->WronskianOrders(D) : DivFunElt -&gt; [RngIntElt]
5<->ComplementaryDivisor(D) <->text456.htm#4971<->ComplementaryDivisor(D) : DivFunElt -&gt; DivFunElt
5<->DifferentialBasis(D) <->text456.htm#4972<->DifferentialBasis(D) : DivFunElt -&gt; [DiffFunElt]
5<->DifferentialSpace(D) <->text456.htm#4973<->DifferentialSpace(D) : DivFunElt -&gt; ModFld, Map
5<->Parametrization(F, D) <->text456.htm#4974<->Parametrization(F, D) : FldFun, DivFunElt -&gt; FldFunElt, [FldFunRatUElt]
3<->element-ops-other :<->text456.htm#4946<->element-ops-other :: Other Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->operation-element :<->text456.htm#4937<->operation-element :: Element Operations (ALGEBRAIC FUNCTION FIELDS)
3<->divisor-class-group :<->text456.htm#4975<->divisor-class-group :: Functions related to Divisor Class Groups of Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
5<->ClassGroupGenerationBound(q, g) <->text456.htm#4976<->ClassGroupGenerationBound(q, g) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->ClassGroupGenerationBound(F) <->text456.htm#4977<->ClassGroupGenerationBound(F) : FldFunG -&gt; RngIntElt
5<->ClassNumberApproximation(F, e) <->text456.htm#4978<->ClassNumberApproximation(F, e) : FldFunG, FldReElt -&gt; FldReElt
5<->ClassNumberApproximationBound(q, g, e) <->text456.htm#4979<->ClassNumberApproximationBound(q, g, e) : RngIntElt, RngIntElt, FldReElt, -&gt; RngIntElt
5<->ClassGroup(F : parameters) <->text456.htm#4980<->ClassGroup(F : parameters) : FldFun -&gt; GrpAb, Map, Map
5<->ClassGroupAbelianInvariants(F : parameters) <->text456.htm#4981<->ClassGroupAbelianInvariants(F : parameters) : FldFun -&gt; SeqEnum
5<->ClassNumber(F) <->text456.htm#4982<->ClassNumber(F) : FldFun -&gt; RngIntElt
4<->FldFunG_divisors-class (Example H44E39)<->text456.htm#4983<->FldFunG_divisors-class (Example H44E39)
4<->Example-divisors-class :<->text456.htm#4983<->Example-divisors-class :: FldFunG_divisors-class (Example H44E39)
5<->GlobalUnitGroup(F) <->text456.htm#4984<->GlobalUnitGroup(F) : FldFun -&gt; GrpAb, Map
5<->IsGlobalUnit(a) <->text456.htm#4985<->IsGlobalUnit(a) : FldFunElt -&gt; BoolElt
5<->IsGlobalUnitWithPreimage(a) <->text456.htm#4986<->IsGlobalUnitWithPreimage(a) : FldFunElt -&gt; BoolElt, GrpAbElt
5<->PrincipalDivisorMap(F) <->text456.htm#4987<->PrincipalDivisorMap(F) : FldFunG -&gt; Map
5<->ClassGroupExactSequence(F) <->text456.htm#4988<->ClassGroupExactSequence(F) : FldFunG -&gt; Map, Map, Map
5<->SUnitGroup(S) <->text456.htm#4989<->SUnitGroup(S) : SetEnum[PlcFunElt] -&gt; GrpAb, Map
5<->IsSUnit(a, S) <->text456.htm#4990<->IsSUnit(a, S) : FldFunElt, SetEnum[PlcFunElt] -&gt; BoolElt
5<->IsSUnitWithPreimage(a, S) <->text456.htm#4991<->IsSUnitWithPreimage(a, S) : FldFunElt, SetEnum[PlcFunElt] -&gt; BoolElt, GrpAbElt
5<->SRegulator(S) <->text456.htm#4992<->SRegulator(S) : SetEnum[PlcFunElt] -&gt; RngIntElt
5<->SPrincipalDivisorMap(S) <->text456.htm#4993<->SPrincipalDivisorMap(S) : SetEnum[PlcFunElt] -&gt; Map
5<->IsSPrincipal(D, S) <->text456.htm#4994<->IsSPrincipal(D, S) : DivFunElt, SetEnum[PlcFunElt] -&gt; BoolElt, FldFunElt
5<->SClassGroup(S) <->text456.htm#4995<->SClassGroup(S) : SetEnum[PlcFunElt] -&gt; GrpAb, Map, Map
5<->SClassGroupExactSequence(S) <->text456.htm#4996<->SClassGroupExactSequence(S) : SetEnum[PlcFunElt] -&gt; Map, Map, Map
5<->SClassGroupAbelianInvariants(S) <->text456.htm#4997<->SClassGroupAbelianInvariants(S) : SetEnum[PlcFunElt] -&gt; SeqEnum
5<->SClassNumber(S) <->text456.htm#4998<->SClassNumber(S) : SetEnum[PlcFunElt] -&gt; RngIntElt
5<->ClassGroupPRank(F) <->text456.htm#4999<->ClassGroupPRank(F) : FldFunG -&gt; RngIntElt
5<->HasseWittInvariant(F) <->text456.htm#5000<->HasseWittInvariant(F) : FldFunG -&gt; RngIntElt
5<->TateLichtenbaumPairing(D1, D2, m) <->text456.htm#5001<->TateLichtenbaumPairing(D1, D2, m) : DivFunElt, DivFunElt, RngIntElt -&gt; RngElt
4<->FldFunG_tate (Example H44E40)<->text456.htm#5002<->FldFunG_tate (Example H44E40)
4<->Example-tate :<->text456.htm#5002<->Example-tate :: FldFunG_tate (Example H44E40)
3<->divisor-class-group :<->text456.htm#4975<->divisor-class-group :: Functions related to Divisor Class Groups of Global Function Fields (ALGEBRAIC FUNCTION FIELDS)
3<->Divisors (ALGEBRAIC FUNCTION FIELDS)<->text456.htm<->Divisors (ALGEBRAIC FUNCTION FIELDS)
3<->differentials :<->text457.htm<->differentials :: Differentials (ALGEBRAIC FUNCTION FIELDS)
3<->create-struct :<->text457.htm#5004<->create-struct :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
5<->DifferentialSpace(F) <->text457.htm#5005<->DifferentialSpace(F) : FldFunG -&gt; DiffFun
3<->create-struct :<->text457.htm#5004<->create-struct :: Creation of Structures (ALGEBRAIC FUNCTION FIELDS)
3<->create-elts :<->text457.htm#5006<->create-elts :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
5<->Differential(a) <->text457.htm#5007<->Differential(a) : RngFunOrdElt -> DiffFunElt
5<->Differential(a) <->text457.htm#5007<->Differential(a) : FldFunGElt -&gt; DiffFunElt
5<->Identity(D) <->text457.htm#5008<->Identity(D) : DiffFun -&gt; DiffFunElt
5<->IsCanonical(D) <->text457.htm#5009<->IsCanonical(D) : DivFunElt -&gt; BoolElt, DiffFunElt
3<->create-elts :<->text457.htm#5006<->create-elts :: Creation of Elements (ALGEBRAIC FUNCTION FIELDS)
3<->related-struct :<->text457.htm#5010<->related-struct :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionField(D) <->text457.htm#5011<->FunctionField(D) : DiffFun -&gt; FldFun
5<->FunctionField(d) <->text457.htm#5012<->FunctionField(d) : DiffFunElt -&gt; FldFun
3<->related-struct :<->text457.htm#5010<->related-struct :: Related Structures (ALGEBRAIC FUNCTION FIELDS)
3<->create-subspaces :<->text457.htm#5013<->create-subspaces :: Subspaces (ALGEBRAIC FUNCTION FIELDS)
5<->SpaceOfHolomorphicDifferentials :: SpaceOfDifferentialsFirstKind(F) <->text457.htm#5014<->SpaceOfHolomorphicDifferentials :: SpaceOfDifferentialsFirstKind(F) : FldFunG -&gt; ModFld, Map
5<->SpaceOfDifferentialsFirstKind(F) <->text457.htm#5014<->SpaceOfDifferentialsFirstKind(F) : FldFunG -&gt; ModFld, Map
5<->BasisOfHolomorphicDifferentials :: BasisOfDifferentialsFirstKind(F) <->text457.htm#5015<->BasisOfHolomorphicDifferentials :: BasisOfDifferentialsFirstKind(F) : FldFunG -&gt; SeqEnum[DiffFunElt]
5<->BasisOfDifferentialsFirstKind(F) <->text457.htm#5015<->BasisOfDifferentialsFirstKind(F) : FldFunG -&gt; SeqEnum[DiffFunElt]
5<->DifferentialBasis(D) <->text457.htm#5016<->DifferentialBasis(D) : DivFunElt -&gt; [DiffFunElt]
5<->DifferentialSpace(D) <->text457.htm#5017<->DifferentialSpace(D) : DivFunElt -&gt; ModFld, Map
4<->FldFunG_div_diff (Example H44E41)<->text457.htm#5018<->FldFunG_div_diff (Example H44E41)
4<->Example-div_diff :<->text457.htm#5018<->Example-div_diff :: FldFunG_div_diff (Example H44E41)
3<->create-subspaces :<->text457.htm#5013<->create-subspaces :: Subspaces (ALGEBRAIC FUNCTION FIELDS)
3<->struct-pred :<->text457.htm#5019<->struct-pred :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
5<->D1 eq D2 <->text457.htm#5020<->D1 eq D2 : DiffFun, DiffFun -&gt; BoolElt
3<->struct-pred :<->text457.htm#5019<->struct-pred :: Structure Predicates (ALGEBRAIC FUNCTION FIELDS)
3<->elt-ops :<->text457.htm#5021<->elt-ops :: Operations on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elt-arith :<->text457.htm#5022<->elt-arith :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
5<->x * r <->text457.htm#5023<->x * r : DiffFunElt, RngElt -> DiffFunElt
5<->+ :: r * x <->text457.htm#5023<->+ :: r * x : RngElt, DiffFunElt -&gt; DiffFunElt
5<->r * x <->text457.htm#5023<->r * x : RngElt, DiffFunElt -&gt; DiffFunElt
5<->x - y <->text457.htm#5023<->x - y : DiffFunElt, DiffFunElt -> DiffFunElt
5<->/ :: r * x <->text457.htm#5023<->/ :: r * x : RngElt, DiffFunElt -&gt; DiffFunElt
5<->x / r : DiffFunElt, RngElt -> DiffFunElt :: r * x <->text457.htm#5023<->x / r : DiffFunElt, RngElt -> DiffFunElt :: r * x : RngElt, DiffFunElt -&gt; DiffFunElt
5<->r * x <->text457.htm#5023<->r * x : RngElt, DiffFunElt -&gt; DiffFunElt
3<->elt-arith :<->text457.htm#5022<->elt-arith :: Arithmetic Operators (ALGEBRAIC FUNCTION FIELDS)
3<->elt-eq :<->text457.htm#5024<->elt-eq :: Equality and Membership (ALGEBRAIC FUNCTION FIELDS)
5<->x eq y <->text457.htm#5025<->x eq y : DiffFunElt, DiffFunElt -&gt; BoolElt
5<->x in D <->text457.htm#5026<->x in D : Any, DiffFun -&gt; BoolElt
3<->elt-eq :<->text457.htm#5024<->elt-eq :: Equality and Membership (ALGEBRAIC FUNCTION FIELDS)
3<->elt-pred :<->text457.htm#5027<->elt-pred :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->IsExact(d) <->text457.htm#5028<->IsExact(d) : DiffFunElt -&gt; BoolElt, FldFunGElt
5<->IsZero(d) <->text457.htm#5029<->IsZero(d) : DiffFunElt -&gt; BoolElt
3<->elt-pred :<->text457.htm#5027<->elt-pred :: Predicates on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elt-ops :<->text457.htm#5030<->elt-ops :: Functions on Elements (ALGEBRAIC FUNCTION FIELDS)
5<->Valuation(d, P) <->text457.htm#5031<->Valuation(d, P) : DiffFunElt, PlcFunElt -&gt; RngIntElt
5<->Divisor(d) <->text457.htm#5032<->Divisor(d) : DiffFunElt -&gt; DivFunElt
5<->Residue(d, P) <->text457.htm#5033<->Residue(d, P) : DiffFunElt, PlcFunElt -&gt; RngElt
4<->FldFunG_diff-fun (Example H44E42)<->text457.htm#5034<->FldFunG_diff-fun (Example H44E42)
4<->Example-diff-fun :<->text457.htm#5034<->Example-diff-fun :: FldFunG_diff-fun (Example H44E42)
5<->Module(L, R) <->text457.htm#5035<->Module(L, R) : SeqEnum[ DiffFunElt ], Rng -&gt; Mod, Map, SeqEnum[ ModElt ]
5<->Relations(L, R, m) <->text457.htm#5036<->Relations(L, R, m) : SeqEnum[ DiffFunElt ], Rng, RngIntElt -> ModTupRng
5<->Relations(L, R) <->text457.htm#5036<->Relations(L, R) : SeqEnum[ DiffFunElt ], Rng -&gt; ModTupRng
4<->FldFunG_module-diff (Example H44E43)<->text457.htm#5037<->FldFunG_module-diff (Example H44E43)
4<->Example-module-diff :<->text457.htm#5037<->Example-module-diff :: FldFunG_module-diff (Example H44E43)
5<->Cartier(b, r) <->text457.htm#5038<->Cartier(b, r) : DiffFunElt, RngIntElt -> DiffFunElt
5<->Cartier(b) <->text457.htm#5038<->Cartier(b) : DiffFunElt -&gt; DiffFunElt
3<->elt-ops :<->text457.htm#5030<->elt-ops :: Functions on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->elt-other :<->text457.htm#5039<->elt-other :: Other (ALGEBRAIC FUNCTION FIELDS)
5<->CartierRepresentation(F, r) <->text457.htm#5040<->CartierRepresentation(F, r) : FldFunG, RngIntElt -> AlgMatElt, SeqEnum[DiffFunElt]
5<->CartierRepresentation(F) <->text457.htm#5040<->CartierRepresentation(F) : FldFunG -&gt; AlgMatElt, SeqEnum[DiffFunElt]
4<->FldFunG_diff-cart (Example H44E44)<->text457.htm#5041<->FldFunG_diff-cart (Example H44E44)
4<->Example-diff-cart :<->text457.htm#5041<->Example-diff-cart :: FldFunG_diff-cart (Example H44E44)
3<->elt-other :<->text457.htm#5039<->elt-other :: Other (ALGEBRAIC FUNCTION FIELDS)
3<->elt-ops :<->text457.htm#5021<->elt-ops :: Operations on Elements (ALGEBRAIC FUNCTION FIELDS)
3<->differentials :<->text457.htm<->differentials :: Differentials (ALGEBRAIC FUNCTION FIELDS)
3<->weil_descent :<->text458.htm<->weil_descent :: Weil Descent (ALGEBRAIC FUNCTION FIELDS)
5<->WeilDescent(E,k) <->text458.htm#5043<->WeilDescent(E,k) : FldFun, FldFin -&gt; FldFunG, Map
5<->ArtinSchreierExtension(c,a,b) <->text458.htm#5044<->ArtinSchreierExtension(c,a,b) : FldFin, FldFin, FldFin -&gt; FldFun
5<->WeilDescentDegree(E,k) <->text458.htm#5045<->WeilDescentDegree(E,k) : FldFun, FldFin -&gt; RngIntElt
5<->WeilDescentGenus(E,k) <->text458.htm#5046<->WeilDescentGenus(E,k) : FldFun, FldFin -&gt; RngIntElt
5<->MultiplyFrobenius(b,f,F) <->text458.htm#5047<->MultiplyFrobenius(b,f,F) : RngElt, RngUPolElt, Map -&gt; RngElt
4<->FldFunG_ghs-descent (Example H44E45)<->text458.htm#5048<->FldFunG_ghs-descent (Example H44E45)
4<->Example-ghs-descent :<->text458.htm#5048<->Example-ghs-descent :: FldFunG_ghs-descent (Example H44E45)
3<->weil_descent :<->text458.htm<->weil_descent :: Weil Descent (ALGEBRAIC FUNCTION FIELDS)
3<->database :<->text459.htm<->database :: Function Field Database (ALGEBRAIC FUNCTION FIELDS)
3<->database-creation :<->text459.htm#5050<->database-creation :: Creation (ALGEBRAIC FUNCTION FIELDS)
5<->FunctionFieldDatabase(q, d) <->text459.htm#5051<->FunctionFieldDatabase(q, d) : RngIntElt, RngIntElt -&gt; DB
5<->sub< D | : parameters> <->text459.htm#5052<->sub&lt; D | : parameters&gt; : DB -&gt; DB
3<->database-creation :<->text459.htm#5050<->database-creation :: Creation (ALGEBRAIC FUNCTION FIELDS)
3<->database-access :<->text459.htm#5053<->database-access :: Access (ALGEBRAIC FUNCTION FIELDS)
5<->CoefficientField :: BaseField(D) <->text459.htm#5054<->CoefficientField :: BaseField(D) : DB -&gt; FldFin
5<->BaseField(D) <->text459.htm#5054<->BaseField(D) : DB -&gt; FldFin
5<->Degree(D) <->text459.htm#5055<->Degree(D) : DB -&gt; RngIntElt
5<->NumberOfFields :: # D <->text459.htm#5056<->NumberOfFields :: # D : DB -&gt; RngIntElt
5<-># D <->text459.htm#5056<-># D : DB -&gt; RngIntElt
5<->FunctionFields(D) <->text459.htm#5057<->FunctionFields(D) : DB -&gt; [ FldFunG ]
4<->FldFunG_alffdb-basic1 (Example H44E46)<->text459.htm#5058<->FldFunG_alffdb-basic1 (Example H44E46)
4<->Example-alffdb-basic1 :<->text459.htm#5058<->Example-alffdb-basic1 :: FldFunG_alffdb-basic1 (Example H44E46)
3<->database-access :<->text459.htm#5053<->database-access :: Access (ALGEBRAIC FUNCTION FIELDS)
3<->database :<->text459.htm<->database :: Function Field Database (ALGEBRAIC FUNCTION FIELDS)
3<->function-field :<->text442.htm<->function-field :: ALGEBRAIC FUNCTION FIELDS
3<->function-field-class :<->text462.htm<->function-field-class :: CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS
3<->class-groups :<->text463.htm<->class-groups :: Ray Class Groups (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->RayResidueRing(D) <->text463.htm#5063<->RayResidueRing(D) : DivFunElt -&gt; GrpAb, Map
5<->RayClassGroup(D) <->text463.htm#5064<->RayClassGroup(D) : DivFunElt -&gt; GrpAb, Map
5<->RayClassGroupDiscLog(y, D) <->text463.htm#5065<->RayClassGroupDiscLog(y, D) : PlcFunElt, DivFunElt -> GrpAbElt
5<->RayClassGroupDiscLog(y, D) <->text463.htm#5065<->RayClassGroupDiscLog(y, D) : DivFunElt, DivFunElt -&gt; GrpAbElt
4<->FldFunAb_classfield-structures (Example H45E1)<->text463.htm#5066<->FldFunAb_classfield-structures (Example H45E1)
4<->Example-classfield-structures :<->text463.htm#5066<->Example-classfield-structures :: FldFunAb_classfield-structures (Example H45E1)
3<->class-groups :<->text463.htm<->class-groups :: Ray Class Groups (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->fields :<->text464.htm<->fields :: Creation of Class Fields (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->AbelianExtension(D, U) <->text464.htm#5068<->AbelianExtension(D, U) : DivFunElt, GrpAb -&gt; FldFunAb
5<->MaximalAbelianSubfield(K) <->text464.htm#5069<->MaximalAbelianSubfield(K) : FldFunG -&gt; FldFunAb
5<->HilbertClassField(K, p) <->text464.htm#5070<->HilbertClassField(K, p) : FldFun, PlcFunElt -&gt; FldFunAb
5<->FunctionField(A) <->text464.htm#5071<->FunctionField(A) : FldFunAb -&gt; FldFun
5<->MaximalOrderInfinite :: MaximalOrderFinite(A) <->text464.htm#5072<->MaximalOrderInfinite :: MaximalOrderFinite(A) : FldFunAb -&gt; RngFunOrd
5<->MaximalOrderFinite(A) <->text464.htm#5072<->MaximalOrderFinite(A) : FldFunAb -&gt; RngFunOrd
4<->FldFunAb_classfields (Example H45E2)<->text464.htm#5073<->FldFunAb_classfields (Example H45E2)
4<->Example-classfields :<->text464.htm#5073<->Example-classfields :: FldFunAb_classfields (Example H45E2)
4<->FldFunAb_classfields2 (Example H45E3)<->text464.htm#5074<->FldFunAb_classfields2 (Example H45E3)
4<->Example-classfields2 :<->text464.htm#5074<->Example-classfields2 :: FldFunAb_classfields2 (Example H45E3)
3<->fields :<->text464.htm<->fields :: Creation of Class Fields (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->properties :<->text465.htm<->properties :: Properties of Class Fields (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->Conductor(m) <->text465.htm#5076<->Conductor(m) : DivFunElt -&gt; DivFunElt
5<->Conductor(m, U) <->text465.htm#5077<->Conductor(m, U) : DivFunElt, GrpAb -&gt; DivFunElt
5<->Conductor(A) <->text465.htm#5078<->Conductor(A) : FldFunAb -&gt; DivFunElt
5<->DiscriminantDivisor(m, U) <->text465.htm#5079<->DiscriminantDivisor(m, U) : DivFunElt, GrpAb -&gt; DivFunElt
5<->DiscriminantDivisor(A) <->text465.htm#5080<->DiscriminantDivisor(A) : FldFunAb -&gt; DivFunElt
5<->DegreeOfExactConstantField(m) <->text465.htm#5081<->DegreeOfExactConstantField(m) : DivFunElt -&gt; RngIntElt
5<->DegreeOfExactConstantField(m, U) <->text465.htm#5082<->DegreeOfExactConstantField(m, U) : DivFunElt, GrpAb -&gt; RngIntElt
5<->DegreeOfExactConstantField(A) <->text465.htm#5083<->DegreeOfExactConstantField(A) : FldFunAb -&gt; RngIntElt
5<->Genus(m, U) <->text465.htm#5084<->Genus(m, U) : DivFunElt, GrpAb -&gt; RngIntElt
5<->Genus(A) <->text465.htm#5085<->Genus(A) : FldFunAb -&gt; RngIntElt
5<->DecompositionType(m, U, p) <->text465.htm#5086<->DecompositionType(m, U, p) : DivFunElt, GrpAb, PlcFunElt -&gt; [&lt;f,e&gt;]
5<->DecompositionType(A, p) <->text465.htm#5087<->DecompositionType(A, p) : FldFunAb, PlcFunElt -&gt; [&lt;f,e&gt;]
5<->NumberOfPlacesOfDegreeOne(m, U) <->text465.htm#5088<->NumberOfPlacesOfDegreeOne(m, U) : DivFunElt, GrpAb -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOne(A) <->text465.htm#5089<->NumberOfPlacesOfDegreeOne(A) : FldFunAb -&gt; RngIntElt
5<->Degree(A) <->text465.htm#5090<->Degree(A) : FldFunAb -&gt; RngIntElt
5<->BaseField(A) <->text465.htm#5091<->BaseField(A) : FldFunAb -&gt; FldFunG
5<->A eq B <->text465.htm#5092<->A eq B : FldFunAb, FldFunAb -&gt; BoolElt
5<->A subset B <->text465.htm#5093<->A subset B : FldFunAb, FldFunAb -&gt; BoolElt
5<->A meet B <->text465.htm#5094<->A meet B : FldFunAb, FldFunAb -&gt; FldFunAb
5<->A * B <->text465.htm#5095<->A * B : FldFunAb, FldFunAb -&gt; FldFunAb
3<->properties :<->text465.htm<->properties :: Properties of Class Fields (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->RngWitt :<->text466.htm<->RngWitt :: The Ring of Witt Vectors of Finite Length (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->RngWittElt :<->text466.htm<->RngWittElt :: The Ring of Witt Vectors of Finite Length (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->witt-rings :<->text466.htm<->witt-rings :: The Ring of Witt Vectors of Finite Length (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->WittRing(F, n) <->text466.htm#5097<->WittRing(F, n) : Fld, RngIntElt -&gt; RngWitt
5<->W ! a <->text466.htm#5098<->W ! a : RngWitt, . -&gt; RngWittElt
5<->BaseField :: BaseRing(W) <->text466.htm#5099<->BaseField :: BaseRing(W) : RngWitt -&gt; Fld
5<->BaseRing(W) <->text466.htm#5099<->BaseRing(W) : RngWitt -&gt; Fld
5<->Length(W) <->text466.htm#5100<->Length(W) : RngWitt -&gt; RngIntElt
5<->Eltseq(a) <->text466.htm#5101<->Eltseq(a) : RngWittElt -&gt; [FldElt]
5<->Zero :: Unity(W) <->text466.htm#5102<->Zero :: Unity(W) : RngWitt -&gt; RngWittElt
5<->Unity(W) <->text466.htm#5102<->Unity(W) : RngWitt -&gt; RngWittElt
5<->W . 1 <->text466.htm#5103<->W . 1 : RngWitt, RngIntElt -&gt; RngWittElt
5<->FrobeniusMap(W) <->text466.htm#5104<->FrobeniusMap(W) : RngWitt -&gt; Map
5<->FrobeniusImage(e) <->text466.htm#5105<->FrobeniusImage(e) : RngWittElt -&gt; RngWittElt
5<->VerschiebungMap(W) <->text466.htm#5106<->VerschiebungMap(W) : RngWitt -&gt; Map
5<->VerschiebungImage(e) <->text466.htm#5107<->VerschiebungImage(e) : RngWittElt -&gt; RngWittElt
5<->Random(W) <->text466.htm#5108<->Random(W) : RngWitt -&gt; RngWittElt
5<->Random(W, n) <->text466.htm#5109<->Random(W, n) : RngWitt, RngIntElt -&gt; RngWittElt
5<->TeichmuellerSystem(R) <->text466.htm#5110<->TeichmuellerSystem(R) : Rng -> [RngLocElt]
5<->TeichmuellerSystem(R) <->text466.htm#5110<->TeichmuellerSystem(R) : Any -&gt; [RngLocElt]
5<->LocalRing(W) <->text466.htm#5111<->LocalRing(W) : RngWitt -&gt; RngLoc, Map
5<->ArtinSchreierMap(W) <->text466.htm#5112<->ArtinSchreierMap(W) : RngWitt -&gt; Map
5<->ArtinSchreierImage(e) <->text466.htm#5113<->ArtinSchreierImage(e) : RngWittElt -&gt; RngWittElt
5<->FunctionField(e) <->text466.htm#5114<->FunctionField(e) : RngWittElt -&gt; FldFun, Map
5<->MaximalOrderInfinite :: MaximalOrderFinite(u) <->text466.htm#5115<->MaximalOrderInfinite :: MaximalOrderFinite(u) : RngWittElt -&gt; RngFunOrd
5<->MaximalOrderFinite(u) <->text466.htm#5115<->MaximalOrderFinite(u) : RngWittElt -&gt; RngFunOrd
5<->SMaximalOrder(u, S) <->text466.htm#5116<->SMaximalOrder(u, S) : RngWittElt, [PlcFunElt] -&gt; RngFunOrd
5<->MaximalOrders(u) <->text466.htm#5117<->MaximalOrders(u) : RngWittElt -&gt; RngFunOrd, RngFunOrd
3<->witt-rings :<->text466.htm<->witt-rings :: The Ring of Witt Vectors of Finite Length (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->RngUPolTwst :<->text467.htm<->RngUPolTwst :: The Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->RngUPolTwstElt :<->text467.htm<->RngUPolTwstElt :: The Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->twisted-polynomials :<->text467.htm<->twisted-polynomials :: The Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->creation :<->text467.htm#5119<->creation :: Creation of Twisted Polynomial  Rings (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->TwistedPolynomials(R) <->text467.htm#5120<->TwistedPolynomials(R) : Rng -&gt; RngUPolTwst
3<->creation :<->text467.htm#5119<->creation :: Creation of Twisted Polynomial  Rings (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->ring-operations :<->text467.htm#5121<->ring-operations :: Operations with the Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->Unity(R) <->text467.htm#5122<->Unity(R) : RngUPolTwst -&gt; RngUPolTwstElt
5<->Zero(R) <->text467.htm#5123<->Zero(R) : RngUPolTwst -&gt; RngUPolTwstElt
5<->R eq S <->text467.htm#5124<->R eq S : RngUPolTwst, RngUPolTwst -&gt; BoolElt
5<->BaseRing(R) <->text467.htm#5125<->BaseRing(R) : RngUPolTwst -&gt; Rng
5<->R . i <->text467.htm#5126<->R . i : RngUPolTwst, RngIntElt -&gt; RngUPolTwstElt
3<->ring-operations :<->text467.htm#5121<->ring-operations :: Operations with the Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->create-elements :<->text467.htm#5127<->create-elements :: Creation of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->AdditivePolynomialFromRoots(x, P) <->text467.htm#5128<->AdditivePolynomialFromRoots(x, P) : RngElt, PlcFunElt -&gt; RngUPolTwstElt
5<->Random(F, n) <->text467.htm#5129<->Random(F, n) : RngUPolTwst, RngIntElt -&gt; RngUPolTwstElt
4<->FldFunAb_additive-polynomial (Example H45E4)<->text467.htm#5130<->FldFunAb_additive-polynomial (Example H45E4)
4<->Example-additive-polynomial :<->text467.htm#5130<->Example-additive-polynomial :: FldFunAb_additive-polynomial (Example H45E4)
3<->create-elements :<->text467.htm#5127<->create-elements :: Creation of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->operations :<->text467.htm#5131<->operations :: Operations with Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->LeadingCoefficient(F) <->text467.htm#5132<->LeadingCoefficient(F) : RngUPolTwstElt -&gt; RngElt
5<->ConstantCoefficient(F) <->text467.htm#5133<->ConstantCoefficient(F) : RngUPolTwstElt -&gt; RngElt
5<->Degree(F) <->text467.htm#5134<->Degree(F) : RngUPolTwstElt -&gt; RngIntElt
5<->Quotrem(F, G) <->text467.htm#5135<->Quotrem(F, G) : RngUPolTwstElt, RngUPolTwstElt -&gt; RngUPolTwstElt, RngUPolTwstElt
5<->GCD(F, G) <->text467.htm#5136<->GCD(F, G) : RngUPolTwstElt, RngUPolTwstElt -&gt; RngUPolTwstElt
5<->BaseRing(F) <->text467.htm#5137<->BaseRing(F) : RngUPolTwstElt -&gt; Rng
5<->Polynomial(G) <->text467.htm#5138<->Polynomial(G) : RngUPolTwstElt -&gt; RngUPolElt
5<->SpecialEvaluate(F, x) <->text467.htm#5139<->SpecialEvaluate(F, x) : RngUPolTwstElt, RngElt -&gt; RngElt
5<->SpecialEvaluate(F, x) <->text467.htm#5140<->SpecialEvaluate(F, x) : RngUPolElt, Any -&gt; RngElt
5<->Eltseq(F) <->text467.htm#5141<->Eltseq(F) : RngUPolTwstElt -&gt; [RngElt]
3<->operations :<->text467.htm#5131<->operations :: Operations with Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->twisted-polynomials :<->text467.htm<->twisted-polynomials :: The Ring of Twisted Polynomials (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->drinfeld :<->text468.htm<->drinfeld :: Analytic Theory (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->CarlitzModule(R, x) <->text468.htm#5143<->CarlitzModule(R, x) : RngUPolTwst, FldFunRatUElt -> RngUPolTwstElt
5<->CarlitzModule(R, x) <->text468.htm#5143<->CarlitzModule(R, x) : RngUPolTwst, RngUPolElt -&gt; RngUPolTwstElt
4<->FldFunAb_carlitz-module (Example H45E5)<->text468.htm#5144<->FldFunAb_carlitz-module (Example H45E5)
4<->Example-carlitz-module :<->text468.htm#5144<->Example-carlitz-module :: FldFunAb_carlitz-module (Example H45E5)
5<->AnalyticDrinfeldModule(F, p) <->text468.htm#5145<->AnalyticDrinfeldModule(F, p) : FldFun, PlcFunElt -&gt; RngUPolTwstElt
5<->Extend(D, x, p) <->text468.htm#5146<->Extend(D, x, p) : RngUPolTwstElt, RngElt, PlcFunElt -&gt; RngUPolTwstElt
4<->FldFunAb_drinfeld (Example H45E6)<->text468.htm#5147<->FldFunAb_drinfeld (Example H45E6)
4<->Example-drinfeld :<->text468.htm#5147<->Example-drinfeld :: FldFunAb_drinfeld (Example H45E6)
5<->Exp(x,p) <->text468.htm#5148<->Exp(x,p) : RngElt, PlcFunElt -&gt; RngUPolTwstElt
5<->AnalyticModule(x, p) <->text468.htm#5149<->AnalyticModule(x, p) : RngElt, PlcFunElt -&gt; RngElt
5<->CanNormalize(F) <->text468.htm#5150<->CanNormalize(F) : RngUPolTwstElt -&gt; BoolElt, RngUPolTwstElt, RngElt
5<->CanSignNormalize(F) <->text468.htm#5151<->CanSignNormalize(F) : RngUPolTwstElt -&gt; BoolElt, RngUPolTwstElt, RngElt
5<->AlgebraicToAnalytic(F, p) <->text468.htm#5152<->AlgebraicToAnalytic(F, p) : RngUPolTwstElt, PlcFunElt -&gt; RngUPolTwstElt
3<->drinfeld :<->text468.htm<->drinfeld :: Analytic Theory (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->related :<->text469.htm<->related :: Related Functions (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->StrongApproximation(m, S)<->text469.htm#5154<->StrongApproximation(m, S): DivFunElt, [&lt;PlcFunElt, FldFunElt&gt;]  -&gt; FldFunElt
5<->StrongApproximation(S, Z, V)<->text469.htm#5155<->StrongApproximation(S, Z, V): [PlcFunElt], [FldFunGElt], [RngIntElt] -&gt; FldFunElt
5<->CRT :: ChineseRemainderTheorem(S, Z, V)<->text469.htm#5156<->CRT :: ChineseRemainderTheorem(S, Z, V): [PlcFunElt], [FldFunGElt], [RngIntElt] -&gt; FldFunElt
5<->ChineseRemainderTheorem(S, Z, V)<->text469.htm#5156<->ChineseRemainderTheorem(S, Z, V): [PlcFunElt], [FldFunGElt], [RngIntElt] -&gt; FldFunElt
4<->FldFunAb_strong-approximation (Example H45E7)<->text469.htm#5157<->FldFunAb_strong-approximation (Example H45E7)
4<->Example-strong-approximation :<->text469.htm#5157<->Example-strong-approximation :: FldFunAb_strong-approximation (Example H45E7)
5<->NonSpecialDivisor(m)<->text469.htm#5158<->NonSpecialDivisor(m): DivFunElt -&gt; DivFunElt, RngIntElt
5<->NormGroup(F) <->text469.htm#5159<->NormGroup(F) : FldFun -&gt; DivFunElt, GrpAb
5<->Sign(a, p) <->text469.htm#5160<->Sign(a, p) : FldFunElt, PlcFunElt -&gt; RngElt
5<->ChangeModel(F, p) <->text469.htm#5161<->ChangeModel(F, p) : FldFun, PlcFunElt -&gt; FldFun
5<->ArtinSchreierReduction(u, P)<->text469.htm#5162<->ArtinSchreierReduction(u, P): FldFunGElt, PlcFunElt -&gt; RngIntElt, FldFunElt
3<->related :<->text469.htm<->related :: Related Functions (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->place-enumeration :<->text470.htm<->place-enumeration :: Enumeration of Places (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
5<->PlaceEnumInit(K) <->text470.htm#5164<->PlaceEnumInit(K) : FldFun -&gt; PlcEnum
5<->PlaceEnumInit(P) <->text470.htm#5165<->PlaceEnumInit(P) : PlcFunElt -&gt; PlcEnum
5<->PlaceEnumInit(K, Pos) <->text470.htm#5166<->PlaceEnumInit(K, Pos) : FldFun, [RngIntElt]) -&gt; PlcEnum
5<->PlaceEnumCopy(R) <->text470.htm#5167<->PlaceEnumCopy(R) : PlcEnum -&gt; PlcEnum
5<->PlaceEnumPosition(R) <->text470.htm#5168<->PlaceEnumPosition(R) : PlcEnum -&gt; [RngIntElt]
5<->PlaceEnumNext(R) <->text470.htm#5169<->PlaceEnumNext(R) : PlcEnum -&gt; PlcFunElt
5<->PlaceEnumCurrent(R) <->text470.htm#5170<->PlaceEnumCurrent(R) : PlcEnum -&gt; PlcFunElt
3<->place-enumeration :<->text470.htm<->place-enumeration :: Enumeration of Places (CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS)
3<->function-field-class :<->text462.htm<->function-field-class :: CLASS FIELD THEORY FOR GLOBAL FUNCTION FIELDS
3<->artrep :<->text473.htm<->artrep :: ARTIN REPRESENTATIONS
3<->overview :<->text474.htm<->overview :: Overview (ARTIN REPRESENTATIONS)
3<->functions :<->text475.htm<->functions :: Constructing Artin Representations (ARTIN REPRESENTATIONS)
5<->ArtinRepresentations(K) <->text475.htm#5176<->ArtinRepresentations(K) : FldNum -&gt; SeqEnum
5<->K !! ch <->text475.htm#5177<->K !! ch : FldNum, SeqEnum -> ArtRep
5<->K !! ch <->text475.htm#5177<->K !! ch : FldNum, AlgChtrElt -&gt; ArtRep
5<->PermutationCharacter(K) <->text475.htm#5178<->PermutationCharacter(K) : FldNum -&gt; ArtRep
5<->Determinant(A) <->text475.htm#5179<->Determinant(A) : ArtRep -&gt; ArtRep
5<->!! :: ChangeField(A,K) <->text475.htm#5180<->!! :: ChangeField(A,K) : ArtRep, FldNum -&gt; ArtRep, BoolElt
5<->ChangeField(A,K) <->text475.htm#5180<->ChangeField(A,K) : ArtRep, FldNum -&gt; ArtRep, BoolElt
4<->ArtRep_artin-const (Example H46E1)<->text475.htm#5181<->ArtRep_artin-const (Example H46E1)
4<->Example-artin-const :<->text475.htm#5181<->Example-artin-const :: ArtRep_artin-const (Example H46E1)
3<->functions :<->text475.htm<->functions :: Constructing Artin Representations (ARTIN REPRESENTATIONS)
3<->invariants :<->text476.htm<->invariants :: Basic Invariants (ARTIN REPRESENTATIONS)
5<->Field(A) <->text476.htm#5183<->Field(A) : ArtRep -&gt; FldNum
5<->Dimension :: Degree(A) <->text476.htm#5184<->Dimension :: Degree(A) : ArtRep -&gt; RngIntElt
5<->Degree(A) <->text476.htm#5184<->Degree(A) : ArtRep -&gt; RngIntElt
5<->Group(A) <->text476.htm#5185<->Group(A) : ArtRep -&gt; GrpPerm
5<->Character(A) <->text476.htm#5186<->Character(A) : ArtRep -&gt; AlgChtrElt
5<->Conductor(A) <->text476.htm#5187<->Conductor(A) : ArtRep -&gt; RngIntElt
5<->Decomposition(A) <->text476.htm#5188<->Decomposition(A) : ArtRep -&gt; SeqEnum[Tup]
5<->DefiningPolynomial(A) <->text476.htm#5189<->DefiningPolynomial(A) : ArtRep -&gt; RngUPolElt
5<->Minimize(A) <->text476.htm#5190<->Minimize(A) : ArtRep -&gt; ArtRep
5<->Kernel(A) <->text476.htm#5191<->Kernel(A) : ArtRep -&gt; FldNum
4<->ArtRep_artin-minimize (Example H46E2)<->text476.htm#5192<->ArtRep_artin-minimize (Example H46E2)
4<->Example-artin-minimize :<->text476.htm#5192<->Example-artin-minimize :: ArtRep_artin-minimize (Example H46E2)
5<->IsIrreducible(A) <->text476.htm#5193<->IsIrreducible(A) : ArtRep -&gt; BoolElt
5<->IsRamified(A, p) <->text476.htm#5194<->IsRamified(A, p) : ArtRep, RngIntElt -&gt; BoolElt
5<->IsWildlyRamified(A, p) <->text476.htm#5195<->IsWildlyRamified(A, p) : ArtRep, RngIntElt -&gt; BoolElt
5<->EulerFactor(A, p) <->text476.htm#5196<->EulerFactor(A, p) : ArtRep, RngIntElt -&gt; RngUPolElt
5<->EpsilonFactor(A) <->text476.htm#5197<->EpsilonFactor(A) : ArtRep -&gt; FldComElt
5<->RootNumber(A) <->text476.htm#5198<->RootNumber(A) : ArtRep -&gt; FldComElt
5<->EpsilonFactor(A,p) <->text476.htm#5199<->EpsilonFactor(A,p) : ArtRep, RngIntElt -&gt; FldComElt
5<->RootNumber(A,p) <->text476.htm#5200<->RootNumber(A,p) : ArtRep, RngIntElt -&gt; FldComElt
5<->RootNumber :: EpsilonFactor(A,infty) <->text476.htm#5201<->RootNumber :: EpsilonFactor(A,infty) : ArtRep, Infty -&gt; FldComElt
5<->EpsilonFactor(A,infty) <->text476.htm#5201<->EpsilonFactor(A,infty) : ArtRep, Infty -&gt; FldComElt
4<->ArtRep_artin-invariants (Example H46E3)<->text476.htm#5202<->ArtRep_artin-invariants (Example H46E3)
4<->Example-artin-invariants :<->text476.htm#5202<->Example-artin-invariants :: ArtRep_artin-invariants (Example H46E3)
5<->DirichletCharacter(A) <->text476.htm#5203<->DirichletCharacter(A) : ArtRep -&gt; GrpDrchElt
5<->HeckeCharacter(A) <->text476.htm#5204<->HeckeCharacter(A) : ArtRep -&gt; GrpHeckeElt
5<->ArtinRepresentation(ch) <->text476.htm#5205<->ArtinRepresentation(ch) : GrpDrchElt -&gt; ArtRep
4<->ArtRep_one-dim-artin-reps (Example H46E4)<->text476.htm#5206<->ArtRep_one-dim-artin-reps (Example H46E4)
4<->Example-one-dim-artin-reps :<->text476.htm#5206<->Example-one-dim-artin-reps :: ArtRep_one-dim-artin-reps (Example H46E4)
3<->invariants :<->text476.htm<->invariants :: Basic Invariants (ARTIN REPRESENTATIONS)
3<->arithmetic :<->text477.htm<->arithmetic :: Arithmetic (ARTIN REPRESENTATIONS)
5<->A1 + A2<->text477.htm#5208<->A1 + A2: ArtRep, ArtRep -&gt; ArtRep
5<->A1 - A2<->text477.htm#5209<->A1 - A2: ArtRep, ArtRep -&gt; ArtRep
5<->A1 * A2<->text477.htm#5210<->A1 * A2: ArtRep, ArtRep -&gt; ArtRep
5<->A1 eq A2<->text477.htm#5211<->A1 eq A2: ArtRep, ArtRep -&gt; BoolElt
5<->A1 ne A2<->text477.htm#5212<->A1 ne A2: ArtRep, ArtRep -&gt; BoolElt
4<->ArtRep_artin-arith1 (Example H46E5)<->text477.htm#5213<->ArtRep_artin-arith1 (Example H46E5)
4<->Example-artin-arith1 :<->text477.htm#5213<->Example-artin-arith1 :: ArtRep_artin-arith1 (Example H46E5)
4<->ArtRep_artin-arith2 (Example H46E6)<->text477.htm#5214<->ArtRep_artin-arith2 (Example H46E6)
4<->Example-artin-arith2 :<->text477.htm#5214<->Example-artin-arith2 :: ArtRep_artin-arith2 (Example H46E6)
3<->arithmetic :<->text477.htm<->arithmetic :: Arithmetic (ARTIN REPRESENTATIONS)
3<->notes :<->text478.htm<->notes :: Implementation Notes (ARTIN REPRESENTATIONS)
3<->artrep :<->text473.htm<->artrep :: ARTIN REPRESENTATIONS
3<->local rings :<->text481.htm<->local rings :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->local fields :<->text481.htm<->local fields :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->p-adic rings :<->text481.htm<->p-adic rings :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->p-adic fields :<->text481.htm<->p-adic fields :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->local :<->text481.htm<->local :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->RngPadRes :<->text482.htm<->RngPadRes :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->RngPadResExt :<->text482.htm<->RngPadResExt :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->RngPadResElt :<->text482.htm<->RngPadResElt :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->RngPadResExtElt :<->text482.htm<->RngPadResExtElt :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->RngPad :<->text482.htm<->RngPad :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->FldPad :<->text482.htm<->FldPad :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->RngPadElt :<->text482.htm<->RngPadElt :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->FldPadElt :<->text482.htm<->FldPadElt :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->local ring :<->text482.htm<->local ring :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->local field :<->text482.htm<->local field :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->completion :<->text482.htm<->completion :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->introduction :<->text482.htm<->introduction :: Introduction (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->background :<->text483.htm<->background :: Background (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->overview :<->text484.htm<->overview :: Overview of the p-adics in  Magma (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->completion :<->text484.htm#5222<->completion :: p-adic Rings (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->local-rings :<->text484.htm#5222<->local-rings :: p-adic Rings (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->local-fields :<->text484.htm#5223<->local-fields :: p-adic Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->inf :<->text484.htm#5224<->inf :: Free Precision Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->prec-ext :<->text484.htm#5225<->prec-ext :: Precision of Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->overview :<->text484.htm<->overview :: Overview of the p-adics in  Magma (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->creation :<->text485.htm<->creation :: Creation of Local Rings and  Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elementary_padic :<->text485.htm#5227<->elementary_padic :: Creation Functions for the p-adics (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->pAdicField :: pAdicRing(p, k) <->text485.htm#5228<->pAdicField :: pAdicRing(p, k) : RngIntElt, RngIntElt -&gt; RngPad
5<->pAdicRing(p, k) <->text485.htm#5228<->pAdicRing(p, k) : RngIntElt, RngIntElt -&gt; RngPad
5<->pAdicField :: pAdicRing(p) <->text485.htm#5229<->pAdicField :: pAdicRing(p) : RngIntElt -&gt; RngPad
5<->pAdicRing(p) <->text485.htm#5229<->pAdicRing(p) : RngIntElt -&gt; RngPad
5<->pAdicQuotientRing(p, k) <->text485.htm#5230<->pAdicQuotientRing(p, k) : RngIntElt, RngIntElt -&gt; RngPadRes
5<->quo<L | x> <->text485.htm#5231<->quo&lt;L | x&gt; : RngPad, RngPadElt -&gt; .
4<->RngLoc_el_creation_padic (Example H47E1)<->text485.htm#5232<->RngLoc_el_creation_padic (Example H47E1)
4<->Example-el_creation_padic :<->text485.htm#5232<->Example-el_creation_padic :: RngLoc_el_creation_padic (Example H47E1)
3<->elementary_padic :<->text485.htm#5227<->elementary_padic :: Creation Functions for the p-adics (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elementary_ext_unram :<->text485.htm#5233<->elementary_ext_unram :: Creation of Unramified Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->UnramifiedExtension(L, n) <->text485.htm#5234<->UnramifiedExtension(L, n) : FldPad, RngIntElt -> FldPad
5<->UnramifiedExtension(L, n) <->text485.htm#5234<->UnramifiedExtension(L, n) : RngPadRes, RngIntElt -> RngPadResExt
5<->UnramifiedExtension(L, n) <->text485.htm#5234<->UnramifiedExtension(L, n) : RngPadResExt, RngIntElt -> RngPadResExt
5<->ext :: UnramifiedExtension(L, n) <->text485.htm#5234<->ext :: UnramifiedExtension(L, n) : RngPad, RngIntElt -&gt; RngPad
5<->ext : FldPad, RngIntElt -> FldPad :: UnramifiedExtension(L, n) <->text485.htm#5234<->ext<L | n> : FldPad, RngIntElt -> FldPad :: UnramifiedExtension(L, n) : RngPad, RngIntElt -&gt; RngPad
5<->ext : RngPadRes, RngIntElt -> RngPadResExt :: UnramifiedExtension(L, n) <->text485.htm#5234<->ext<L | n> : RngPadRes, RngIntElt -> RngPadResExt :: UnramifiedExtension(L, n) : RngPad, RngIntElt -&gt; RngPad
5<->ext : RngPadResExt, RngIntElt -> RngPadResExt :: UnramifiedExtension(L, n) <->text485.htm#5234<->ext<L | n> : RngPadResExt, RngIntElt -> RngPadResExt :: UnramifiedExtension(L, n) : RngPad, RngIntElt -&gt; RngPad
5<->UnramifiedExtension(L, n) <->text485.htm#5234<->UnramifiedExtension(L, n) : RngPad, RngIntElt -&gt; RngPad
5<->UnramifiedQuotientRing(K, k) <->text485.htm#5235<->UnramifiedQuotientRing(K, k) : FldFin, RngIntElt -&gt; Rng
5<->UnramifiedExtension(L, f) <->text485.htm#5236<->UnramifiedExtension(L, f) : FldPad, RngUPolElt -> FldPad
5<->UnramifiedExtension(L, f) <->text485.htm#5236<->UnramifiedExtension(L, f) : RngPadRes, RngUPolElt -> RngPadResExt
5<->UnramifiedExtension(L, f) <->text485.htm#5236<->UnramifiedExtension(L, f) : RngPadResExt, RngUPolElt -> RngPadResExt
5<->ext :: UnramifiedExtension(L, f) <->text485.htm#5236<->ext :: UnramifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : FldPad, RngUPolElt -> FldPad :: UnramifiedExtension(L, f) <->text485.htm#5236<->ext<L | f> : FldPad, RngUPolElt -> FldPad :: UnramifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : RngPadRes, RngUPolElt -> RngPadResExt :: UnramifiedExtension(L, f) <->text485.htm#5236<->ext<L | f> : RngPadRes, RngUPolElt -> RngPadResExt :: UnramifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : RngPadResExt, RngUPolElt -> RngPadResExt :: UnramifiedExtension(L, f) <->text485.htm#5236<->ext<L | f> : RngPadResExt, RngUPolElt -> RngPadResExt :: UnramifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->UnramifiedExtension(L, f) <->text485.htm#5236<->UnramifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->IsInertial(f) <->text485.htm#5237<->IsInertial(f) : RngUPolElt -&gt; BoolElt
5<->HasGNB(L, n, t) <->text485.htm#5238<->HasGNB(L, n, t) : FldPad, RngIntElt, RngIntElt -> BoolElt
5<->HasGNB(R, n, t) <->text485.htm#5238<->HasGNB(R, n, t) : RngPadRes, RngIntElt, RngIntElt -> BoolElt
5<->HasGNB(R, n, t) <->text485.htm#5238<->HasGNB(R, n, t) : RngPadResExt, RngIntElt, RngIntElt -> BoolElt
5<->HasGNB(R, n, t) <->text485.htm#5238<->HasGNB(R, n, t) : RngPad, RngIntElt, RngIntElt -&gt; BoolElt
5<->CyclotomicUnramifiedExtension(R, f) <->text485.htm#5239<->CyclotomicUnramifiedExtension(R, f) : RngPad, RngIntElt -> RngPad
5<->CyclotomicUnramifiedExtension(R, f) <->text485.htm#5239<->CyclotomicUnramifiedExtension(R, f) : RngPadRes, RngIntElt -> RngPadRes
5<->CyclotomicUnramifiedExtension(R, f) <->text485.htm#5239<->CyclotomicUnramifiedExtension(R, f) : RngPadResExt, RngIntElt -> RngPadResExt
5<->CyclotomicUnramifiedExtension(R, f) <->text485.htm#5239<->CyclotomicUnramifiedExtension(R, f) : FldPad, RngIntElt -&gt; FldPad
4<->RngLoc_el_creation_unram (Example H47E2)<->text485.htm#5240<->RngLoc_el_creation_unram (Example H47E2)
4<->Example-el_creation_unram :<->text485.htm#5240<->Example-el_creation_unram :: RngLoc_el_creation_unram (Example H47E2)
3<->elementary_ext_unram :<->text485.htm#5233<->elementary_ext_unram :: Creation of Unramified Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elementary_ext_ram :<->text485.htm#5241<->elementary_ext_ram :: Creation of Totally Ramified Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->TotallyRamifiedExtension(L, f) <->text485.htm#5242<->TotallyRamifiedExtension(L, f) : FldPad, RngUPolElt -> FldPad
5<->TotallyRamifiedExtension(L, f) <->text485.htm#5242<->TotallyRamifiedExtension(L, f) : RngPadRes, RngUPolElt -> RngPadResExt
5<->TotallyRamifiedExtension(L, f) <->text485.htm#5242<->TotallyRamifiedExtension(L, f) : RngPadResExt, RngUPolElt -> RngPadResExt
5<->ext :: TotallyRamifiedExtension(L, f) <->text485.htm#5242<->ext :: TotallyRamifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : FldPad, RngUPolElt -> FldPad :: TotallyRamifiedExtension(L, f) <->text485.htm#5242<->ext<L | f> : FldPad, RngUPolElt -> FldPad :: TotallyRamifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : RngPadRes, RngUPolElt -> RngPadResExt :: TotallyRamifiedExtension(L, f) <->text485.htm#5242<->ext<L | f> : RngPadRes, RngUPolElt -> RngPadResExt :: TotallyRamifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->ext : RngPadResExt, RngUPolElt -> RngPadResExt :: TotallyRamifiedExtension(L, f) <->text485.htm#5242<->ext<L | f> : RngPadResExt, RngUPolElt -> RngPadResExt :: TotallyRamifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->TotallyRamifiedExtension(L, f) <->text485.htm#5242<->TotallyRamifiedExtension(L, f) : RngPad, RngUPolElt -&gt; RngPad
5<->IsEisenstein(f) <->text485.htm#5243<->IsEisenstein(f) : RngUPolElt -&gt; BoolElt
4<->RngLoc_el_creation_ram (Example H47E3)<->text485.htm#5244<->RngLoc_el_creation_ram (Example H47E3)
4<->Example-el_creation_ram :<->text485.htm#5244<->Example-el_creation_ram :: RngLoc_el_creation_ram (Example H47E3)
3<->elementary_ext_ram :<->text485.htm#5241<->elementary_ext_ram :: Creation of Totally Ramified Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elementary_ext_map :<->text485.htm#5245<->elementary_ext_map :: Creation of Unbounded Precision Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->ext <->text485.htm#5246<->ext<L | m> : FldPad, Map -> RngPad
5<->ext<L | m> <->text485.htm#5246<->ext&lt;L | m&gt; : RngPad, Map -&gt; RngPad
4<->RngLoc_el_creation_map (Example H47E4)<->text485.htm#5247<->RngLoc_el_creation_map (Example H47E4)
4<->Example-el_creation_map :<->text485.htm#5247<->Example-el_creation_map :: RngLoc_el_creation_map (Example H47E4)
3<->elementary_ext_map :<->text485.htm#5245<->elementary_ext_map :: Creation of Unbounded Precision Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elementary_misc :<->text485.htm#5248<->elementary_misc :: Creation of Related Rings (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Integers :: IntegerRing(F) <->text485.htm#5249<->Integers :: IntegerRing(F) : FldPad -&gt; RngPad
5<->RingOfIntegers :: IntegerRing(F) <->text485.htm#5249<->RingOfIntegers :: IntegerRing(F) : FldPad -&gt; RngPad
5<->IntegerRing(F) <->text485.htm#5249<->IntegerRing(F) : FldPad -&gt; RngPad
5<->RingOfIntegers(R) <->text485.htm#5250<->RingOfIntegers(R) : RngPad -&gt; RngPad
5<->FieldOfFractions(R) <->text485.htm#5251<->FieldOfFractions(R) : RngPad -&gt; FldPad
5<->SplittingField(f, R) <->text485.htm#5252<->SplittingField(f, R) : RngUPolElt[RngInt], RngPad -&gt; RngPad
5<->AbsoluteTotallyRamifiedExtension(R) <->text485.htm#5253<->AbsoluteTotallyRamifiedExtension(R) : RngPad -&gt; RngPad, Map
3<->elementary_misc :<->text485.htm#5248<->elementary_misc :: Creation of Related Rings (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->misc :<->text485.htm#5254<->misc :: Other Elementary Constructions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Composite(R, S) <->text485.htm#5255<->Composite(R, S) : RngPad, RngPad -&gt; RngPad
3<->misc :<->text485.htm#5254<->misc :: Other Elementary Constructions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->attr :<->text485.htm#5256<->attr :: Attributes of Local Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->L`DefaultPrecision <->text485.htm#5257<->L`DefaultPrecision : RngPad -&gt; RngIntElt
3<->attr :<->text485.htm#5256<->attr :: Attributes of Local Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->creation :<->text485.htm<->creation :: Creation of Local Rings and  Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->invariants :<->text486.htm<->invariants :: Elementary Invariants (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Prime(L) <->text486.htm#5259<->Prime(L) : FldPad -> RngIntElt
5<->Prime(L) <->text486.htm#5259<->Prime(L) : RngPadRes -> RngIntElt
5<->Prime(L) <->text486.htm#5259<->Prime(L) : RngPadResExt -> RngIntElt
5<->Prime(L) <->text486.htm#5259<->Prime(L) : RngPad -&gt; RngIntElt
5<->InertiaDegree(L) <->text486.htm#5260<->InertiaDegree(L) : FldPad -> RngIntElt
5<->InertiaDegree(L) <->text486.htm#5260<->InertiaDegree(L) : RngPadRes -> RngIntElt
5<->InertiaDegree(L) <->text486.htm#5260<->InertiaDegree(L) : RngPadResExt -> RngIntElt
5<->InertiaDegree(L) <->text486.htm#5260<->InertiaDegree(L) : RngPad -&gt; RngIntElt
5<->InertiaDegree(K, L) <->text486.htm#5261<->InertiaDegree(K, L) : FldPad, FldPad -> RngIntElt
5<->InertiaDegree(K, L) <->text486.htm#5261<->InertiaDegree(K, L) : RngPadRes, RngPadRes -> RngIntElt
5<->InertiaDegree(K, L) <->text486.htm#5261<->InertiaDegree(K, L) : RngPadResExt, RngPadResExt -> RngIntElt
5<->InertiaDegree(K, L) <->text486.htm#5261<->InertiaDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaDegree(L) : FldPad -> RngIntElt
5<->AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaDegree(L) : RngPadRes -> RngIntElt
5<->AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaDegree(L) : RngPadResExt -> RngIntElt
5<->AbsoluteInertiaIndex :: AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaIndex :: AbsoluteInertiaDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteInertiaIndex(L) : FldPad -> RngIntElt :: AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaIndex(L) : FldPad -> RngIntElt :: AbsoluteInertiaDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteInertiaIndex(L) : RngPadRes -> RngIntElt :: AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaIndex(L) : RngPadRes -> RngIntElt :: AbsoluteInertiaDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteInertiaIndex(L) : RngPadResExt -> RngIntElt :: AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaIndex(L) : RngPadResExt -> RngIntElt :: AbsoluteInertiaDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteInertiaDegree(L) <->text486.htm#5262<->AbsoluteInertiaDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationDegree(L) <->text486.htm#5263<->RamificationDegree(L) : FldPad -> RngIntElt
5<->RamificationDegree(L) <->text486.htm#5263<->RamificationDegree(L) : RngPadRes -> RngIntElt
5<->RamificationDegree(L) <->text486.htm#5263<->RamificationDegree(L) : RngPadResExt -> RngIntElt
5<->RamificationIndex :: RamificationDegree(L) <->text486.htm#5263<->RamificationIndex :: RamificationDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationIndex(L) : FldPad -> RngIntElt :: RamificationDegree(L) <->text486.htm#5263<->RamificationIndex(L) : FldPad -> RngIntElt :: RamificationDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationIndex(L) : RngPadRes -> RngIntElt :: RamificationDegree(L) <->text486.htm#5263<->RamificationIndex(L) : RngPadRes -> RngIntElt :: RamificationDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationIndex(L) : RngPadResExt -> RngIntElt :: RamificationDegree(L) <->text486.htm#5263<->RamificationIndex(L) : RngPadResExt -> RngIntElt :: RamificationDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationDegree(L) <->text486.htm#5263<->RamificationDegree(L) : RngPad -&gt; RngIntElt
5<->RamificationDegree(K, L) <->text486.htm#5264<->RamificationDegree(K, L) : FldPad, FldPad -> RngIntElt
5<->RamificationDegree(K, L) <->text486.htm#5264<->RamificationDegree(K, L) : RngPadRes, RngPadRes -> RngIntElt
5<->RamificationDegree(K, L) <->text486.htm#5264<->RamificationDegree(K, L) : RngPadResExt, RngPadResExt -> RngIntElt
5<->RamificationIndex :: RamificationDegree(K, L) <->text486.htm#5264<->RamificationIndex :: RamificationDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->RamificationIndex(K, L) : FldPad, FldPad -> RngIntElt :: RamificationDegree(K, L) <->text486.htm#5264<->RamificationIndex(K, L) : FldPad, FldPad -> RngIntElt :: RamificationDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->RamificationIndex(K, L) : RngPadRes, RngPadRes -> RngIntElt :: RamificationDegree(K, L) <->text486.htm#5264<->RamificationIndex(K, L) : RngPadRes, RngPadRes -> RngIntElt :: RamificationDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->RamificationIndex(K, L) : RngPadResExt, RngPadResExt -> RngIntElt :: RamificationDegree(K, L) <->text486.htm#5264<->RamificationIndex(K, L) : RngPadResExt, RngPadResExt -> RngIntElt :: RamificationDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->RamificationDegree(K, L) <->text486.htm#5264<->RamificationDegree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationDegree(L) : FldPad -> RngIntElt
5<->AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationDegree(L) : RngPadRes -> RngIntElt
5<->AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationDegree(L) : RngPadResExt -> RngIntElt
5<->AbsoluteRamificationIndex :: AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationIndex :: AbsoluteRamificationDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteRamificationIndex(L) : FldPad -> RngIntElt :: AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationIndex(L) : FldPad -> RngIntElt :: AbsoluteRamificationDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteRamificationIndex(L) : RngPadRes -> RngIntElt :: AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationIndex(L) : RngPadRes -> RngIntElt :: AbsoluteRamificationDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteRamificationIndex(L) : RngPadResExt -> RngIntElt :: AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationIndex(L) : RngPadResExt -> RngIntElt :: AbsoluteRamificationDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteRamificationDegree(L) <->text486.htm#5265<->AbsoluteRamificationDegree(L) : RngPad -&gt; RngIntElt
5<->AbsoluteDegree(L) <->text486.htm#5266<->AbsoluteDegree(L) : RngPad -&gt; RngIntElt
5<->Degree(L) <->text486.htm#5267<->Degree(L) : FldPad -> RngIntElt
5<->Degree(L) <->text486.htm#5267<->Degree(L) : RngPadRes -> RngIntElt
5<->Degree(L) <->text486.htm#5267<->Degree(L) : RngPadResExt -> RngIntElt
5<->Degree(L) <->text486.htm#5267<->Degree(L) : RngPad -&gt; RngIntElt
5<->Degree(K, L) <->text486.htm#5268<->Degree(K, L) : FldPad, FldPad -> RngIntElt
5<->Degree(K, L) <->text486.htm#5268<->Degree(K, L) : RngPadRes, RngPadRes -> RngIntElt
5<->Degree(K, L) <->text486.htm#5268<->Degree(K, L) : RngPadResExt, RngPadResExt -> RngIntElt
5<->Degree(K, L) <->text486.htm#5268<->Degree(K, L) : RngPad, RngPad -&gt; RngIntElt
5<->DefiningPolynomial(L) <->text486.htm#5269<->DefiningPolynomial(L) : FldPad -> RngUPolElt
5<->DefiningPolynomial(L) <->text486.htm#5269<->DefiningPolynomial(L) : RngPadRes -> RngUPolElt
5<->DefiningPolynomial(L) <->text486.htm#5269<->DefiningPolynomial(L) : RngPadResExt -> RngUPolElt
5<->DefiningPolynomial(L) <->text486.htm#5269<->DefiningPolynomial(L) : RngPad -&gt; RngUPolElt
5<->DefiningPolynomial(K, L) <->text486.htm#5270<->DefiningPolynomial(K, L) : FldPad, FldPad -> RngUPolElt 
5<->DefiningPolynomial(K, L) <->text486.htm#5270<->DefiningPolynomial(K, L) : RngPadRes, RngPadRes -> RngUPolElt 
5<->DefiningPolynomial(K, L) <->text486.htm#5270<->DefiningPolynomial(K, L) : RngPadResExt, RngPadRes -> RngUPolElt 
5<->DefiningPolynomial(K, L) <->text486.htm#5270<->DefiningPolynomial(K, L) : RngPadResExt, RngPadResExt -> RngUPolElt 
5<->DefiningPolynomial(K, L) <->text486.htm#5270<->DefiningPolynomial(K, L) : RngPad, RngPad -&gt; RngUPolElt
5<->DefiningMap(L) <->text486.htm#5271<->DefiningMap(L) : FldPad -> Map
5<->DefiningMap(L) <->text486.htm#5271<->DefiningMap(L) : RngPad -&gt; Map
5<->HasDefiningMap(L) <->text486.htm#5272<->HasDefiningMap(L) : RngPad -&gt; BoolElt, Map
5<->PrimeRing(L) <->text486.htm#5273<->PrimeRing(L) : RngPadRes -> RngPadRes
5<->PrimeRing(L) <->text486.htm#5273<->PrimeRing(L) : RngPadResExt -> RngPadRes
5<->PrimeField :: PrimeRing(L) <->text486.htm#5273<->PrimeField :: PrimeRing(L) : RngPad -&gt; RngPad
5<->pAdicRing :: PrimeRing(L) <->text486.htm#5273<->pAdicRing :: PrimeRing(L) : RngPad -&gt; RngPad
5<->pAdicRing(L) : RngPadRes -> RngPadRes :: PrimeRing(L) <->text486.htm#5273<->pAdicRing(L) : RngPadRes -> RngPadRes :: PrimeRing(L) : RngPad -&gt; RngPad
5<->pAdicRing(L) : RngPadResExt -> RngPadRes :: PrimeRing(L) <->text486.htm#5273<->pAdicRing(L) : RngPadResExt -> RngPadRes :: PrimeRing(L) : RngPad -&gt; RngPad
5<->pAdicField :: PrimeRing(L) <->text486.htm#5273<->pAdicField :: PrimeRing(L) : RngPad -&gt; RngPad
5<->PrimeRing(L) <->text486.htm#5273<->PrimeRing(L) : RngPad -&gt; RngPad
5<->BaseRing(L) <->text486.htm#5274<->BaseRing(L) : RngPadRes -> RngPadRes
5<->BaseRing(L) <->text486.htm#5274<->BaseRing(L) : RngPadResExt -> Rng
5<->CoefficientRing :: BaseRing(L) <->text486.htm#5274<->CoefficientRing :: BaseRing(L) : RngPad -&gt; RngPad
5<->CoefficientRing(L) : RngPadRes -> RngPadRes :: BaseRing(L) <->text486.htm#5274<->CoefficientRing(L) : RngPadRes -> RngPadRes :: BaseRing(L) : RngPad -&gt; RngPad
5<->CoefficientRing(L) : RngPadResExt -> Rng :: BaseRing(L) <->text486.htm#5274<->CoefficientRing(L) : RngPadResExt -> Rng :: BaseRing(L) : RngPad -&gt; RngPad
5<->BaseField :: BaseRing(L) <->text486.htm#5274<->BaseField :: BaseRing(L) : RngPad -&gt; RngPad
5<->CoefficientField :: BaseRing(L) <->text486.htm#5274<->CoefficientField :: BaseRing(L) : RngPad -&gt; RngPad
5<->BaseRing(L) <->text486.htm#5274<->BaseRing(L) : FldPad -> FldPad
5<->BaseRing(L) <->text486.htm#5274<->BaseRing(L) : RngPad -&gt; RngPad
5<->ResidueClassField(L) <->text486.htm#5275<->ResidueClassField(L) : RngPad -&gt; FldFin, Map
5<->ResidueSystem(R) <->text486.htm#5276<->ResidueSystem(R) : RngPadRes -> [RngPadEltRes]
5<->ResidueSystem(R) <->text486.htm#5276<->ResidueSystem(R) : RngPadResExt -> [RngPadEltResExt]
5<->ResidueSystem(R) <->text486.htm#5276<->ResidueSystem(R) : FldPad -> [FldPadElt]
5<->ResidueSystem(R) <->text486.htm#5276<->ResidueSystem(R) : RngPad -&gt; [RngPadElt]
5<->UniformizingElement(L) <->text486.htm#5277<->UniformizingElement(L) : RngPadRes -> RngPadResElt
5<->UniformizingElement(L) <->text486.htm#5277<->UniformizingElement(L) : RngPadResExt -> RngPadResExtElt
5<->UniformizingElement(L) <->text486.htm#5277<->UniformizingElement(L) : FldPad -> FldPadElt
5<->UniformizingElement(L) <->text486.htm#5277<->UniformizingElement(L) : RngPad -&gt; RngPadElt
5<->L . 1 <->text486.htm#5278<->L . 1 : RngPadRes -> RngPadResElt
5<->L . 1 <->text486.htm#5278<->L . 1 : RngPadResExt -> RngPadResExtElt
5<->L . 1 <->text486.htm#5278<->L . 1 : FldPad -> FldPadElt
5<->L . 1 <->text486.htm#5278<->L . 1 : RngPad -&gt; RngPadElt
5<->Precision(L) <->text486.htm#5279<->Precision(L) : RngPadRes -> RngIntElt
5<->Precision(L) <->text486.htm#5279<->Precision(L) : RngPadResExt -> RngIntElt
5<->Precision(L) <->text486.htm#5279<->Precision(L) : FldPad -> RngIntElt
5<->Precision(L) <->text486.htm#5279<->Precision(L) : RngPad -&gt; RngIntElt
5<->HasPRoot(R) <->text486.htm#5280<->HasPRoot(R) : RngPad -&gt; BoolElt
5<->HasRootOfUnity(L, n) <->text486.htm#5281<->HasRootOfUnity(L, n) : RngPad, RngIntElt -&gt; BoolElt
5<->Discriminant(R) <->text486.htm#5282<->Discriminant(R) : RngPad -&gt; RngPadElt
5<->Discriminant(K, k) <->text486.htm#5283<->Discriminant(K, k) : RngPad, RngPad -&gt; RngPadElt
5<->AdditiveGroup(R) <->text486.htm#5284<->AdditiveGroup(R) : RngPadRes -&gt; GrpAb, Map
4<->RngLoc_elinvar (Example H47E5)<->text486.htm#5285<->RngLoc_elinvar (Example H47E5)
4<->Example-elinvar :<->text486.htm#5285<->Example-elinvar :: RngLoc_elinvar (Example H47E5)
5<->AbsoluteRootNumber(K) <->text486.htm#5286<->AbsoluteRootNumber(K) : FldPad -&gt; FldCycElt
5<->RootNumber(K) <->text486.htm#5287<->RootNumber(K) : FldPad -&gt; FldCycElt
4<->RngLoc_padic-rootno-ex (Example H47E6)<->text486.htm#5288<->RngLoc_padic-rootno-ex (Example H47E6)
4<->Example-padic-rootno-ex :<->text486.htm#5288<->Example-padic-rootno-ex :: RngLoc_padic-rootno-ex (Example H47E6)
3<->invariants :<->text486.htm<->invariants :: Elementary Invariants (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->structure-operations :<->text487.htm<->structure-operations :: Operations on Structures (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->AssignNames($\sim$L, S) <->text487.htm#5290<->AssignNames($\sim$L, S) : RngPadResExt, SeqEnum ->
5<->AssignNames($\sim$L, S) <->text487.htm#5290<->AssignNames($\sim$L, S) : FldPad, SeqEnum ->
5<->AssignNames(~L, S) <->text487.htm#5290<->AssignNames(~L, S) : RngPad, SeqEnum -&gt;
5<->Characteristic(L) <->text487.htm#5291<->Characteristic(L) : RngPadRes -> RngIntElt
5<->Characteristic(L) <->text487.htm#5291<->Characteristic(L) : RngPadResExt -> RngIntElt
5<->Characteristic(L) <->text487.htm#5291<->Characteristic(L) : FldPad -> RngIntElt
5<->Characteristic(L) <->text487.htm#5291<->Characteristic(L) : RngPad -&gt; RngIntElt
5<-># L <->text487.htm#5292<-># L : RngPad -&gt; RngIntElt
5<->Name(L, k) <->text487.htm#5293<->Name(L, k) : RngPadRes, RngIntElt -> RngPadResElt
5<->Name(L, k) <->text487.htm#5293<->Name(L, k) : RngPadResExt, RngIntElt -> RngPadResExtElt
5<->Name(L, k) <->text487.htm#5293<->Name(L, k) : FldPad, RngIntElt -> FldPadElt
5<->Name(L, k) <->text487.htm#5293<->Name(L, k) : RngPad, RngIntElt -&gt; RngPadElt
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : RngPad, Infty -> RngPad
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : RngPad, Infty -> RngPad
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : RngPad, RngIntElt -> RngPad
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : RngPad, RngIntElt -> RngPad
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : RngPadRes, RngIntElt -> RngPadRes
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : RngPadRes, RngIntElt -> RngPadRes
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : RngPadResExt, RngIntElt -> RngPadResExt
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : RngPadResExt, RngIntElt -> RngPadResExt
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : FldPad, RngIntElt -> FldPad
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : FldPad, RngIntElt -> FldPad
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : FldPad, Any -> FldPad
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : FldPad, Infty -> FldPad
5<->ChangePrecision($\sim$L, k) <->text487.htm#5294<->ChangePrecision($\sim$L, k) : FldPad, Infty -> FldPad
5<->ChangePrecision(L, k) <->text487.htm#5294<->ChangePrecision(L, k) : RngPad, Any -&gt; RngPad
5<->L eq K <->text487.htm#5295<->L eq K : RngPadRes, RngPadRes -> BoolElt
5<->L eq K <->text487.htm#5295<->L eq K : RngPadResExt, RngPadResExt -> BoolElt
5<->L eq K <->text487.htm#5295<->L eq K : FldPad, FldPad -> BoolElt
5<->L eq K <->text487.htm#5295<->L eq K : RngPad, RngPad -&gt; BoolElt
5<->L ne K <->text487.htm#5296<->L ne K : RngPadRes, RngPadRes -> BoolElt
5<->L ne K <->text487.htm#5296<->L ne K : RngPadResExt, RngPadResExt -> BoolElt
5<->L ne K <->text487.htm#5296<->L ne K : FldPad, FldPad -> BoolElt
5<->L ne K <->text487.htm#5296<->L ne K : RngPad, RngPad -&gt; BoolElt
4<->RngLoc_strop (Example H47E7)<->text487.htm#5297<->RngLoc_strop (Example H47E7)
4<->Example-strop :<->text487.htm#5297<->Example-strop :: RngLoc_strop (Example H47E7)
3<->ram_pred :<->text487.htm#5298<->ram_pred :: Ramification Predicates (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->IsRamified(R) <->text487.htm#5299<->IsRamified(R) : FldPad -> BoolElt
5<->IsUnramified :: IsRamified(R) <->text487.htm#5299<->IsUnramified :: IsRamified(R) : RngPad -&gt; BoolElt
5<->IsUnramified(R) : FldPad -> BoolElt :: IsRamified(R) <->text487.htm#5299<->IsUnramified(R) : FldPad -> BoolElt :: IsRamified(R) : RngPad -&gt; BoolElt
5<->IsTotallyRamified :: IsRamified(R) <->text487.htm#5299<->IsTotallyRamified :: IsRamified(R) : RngPad -&gt; BoolElt
5<->IsTotallyRamified(R) : FldPad -> BoolElt :: IsRamified(R) <->text487.htm#5299<->IsTotallyRamified(R) : FldPad -> BoolElt :: IsRamified(R) : RngPad -&gt; BoolElt
5<->IsRamified(R) <->text487.htm#5299<->IsRamified(R) : RngPad -&gt; BoolElt
5<->IsTamelyRamified(R) <->text487.htm#5300<->IsTamelyRamified(R) : FldPad -> BoolElt
5<->IsWildlyRamified :: IsTamelyRamified(R) <->text487.htm#5300<->IsWildlyRamified :: IsTamelyRamified(R) : RngPad -&gt; BoolElt
5<->IsWildlyRamified(R) : FldPad -> BoolElt :: IsTamelyRamified(R) <->text487.htm#5300<->IsWildlyRamified(R) : FldPad -> BoolElt :: IsTamelyRamified(R) : RngPad -&gt; BoolElt
5<->IsTamelyRamified(R) <->text487.htm#5300<->IsTamelyRamified(R) : RngPad -&gt; BoolElt
3<->ram_pred :<->text487.htm#5298<->ram_pred :: Ramification Predicates (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->structure-operations :<->text487.htm<->structure-operations :: Operations on Structures (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->consconv-element :<->text488.htm<->consconv-element :: Element Constructions and Conversions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->constr_elt :<->text488.htm#5302<->constr_elt :: Constructions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Zero(L) <->text488.htm#5303<->Zero(L) : RngPadRes -> RngPadResElt
5<->Zero(L) <->text488.htm#5303<->Zero(L) : RngPadResExt -> RngPadResExtElt
5<->Zero(L) <->text488.htm#5303<->Zero(L) : FldPad -> FldPadElt
5<->Zero(L) <->text488.htm#5303<->Zero(L) : RngPad -&gt; RngPadElt
5<->One(L) <->text488.htm#5304<->One(L) : RngPadRes -> RngPadResElt
5<->One(L) <->text488.htm#5304<->One(L) : RngPadResExt -> RngPadResExtElt
5<->One(L) <->text488.htm#5304<->One(L) : FldPad -> FldPadElt
5<->One(L) <->text488.htm#5304<->One(L) : RngPad -&gt; RngPadElt
5<->Random(L) <->text488.htm#5305<->Random(L) : RngPadRes -> RngPadResElt
5<->Random(L) <->text488.htm#5305<->Random(L) : RngPadResExt -> RngPadResExtElt
5<->Random(L) <->text488.htm#5305<->Random(L) : RngPad -&gt; RngPadElt
5<->Representative(L) <->text488.htm#5306<->Representative(L) : RngPadRes -> RngPadResElt
5<->Representative(L) <->text488.htm#5306<->Representative(L) : RngPadResExt -> RngPadResExtElt
5<->Representative(L) <->text488.htm#5306<->Representative(L) : FldPad -> FldPadElt
5<->Representative(L) <->text488.htm#5306<->Representative(L) : RngPad -&gt; RngPadElt
5<->elt <->text488.htm#5307<->elt<L | u> : RngPad, [RngElt] -> RngPadElt
5<->! :: elt<L | u> <->text488.htm#5307<->! :: elt&lt;L | u&gt; : RngPad, RngElt -&gt; RngPadElt
5<->L ! u : RngPad, [RngElt] -> RngPadElt :: elt<L | u> <->text488.htm#5307<->L ! u : RngPad, [RngElt] -> RngPadElt :: elt&lt;L | u&gt; : RngPad, RngElt -&gt; RngPadElt
5<->elt <->text488.htm#5307<->elt<L | u> : FldPad, RngElt -> FldPadElt
5<->elt <->text488.htm#5307<->elt<L | u> : FldPad, [RngElt] -> FldPadElt
5<->L ! u : FldPad, RngElt -> FldPadElt :: elt<L | u> <->text488.htm#5307<->L ! u : FldPad, RngElt -> FldPadElt :: elt&lt;L | u&gt; : RngPad, RngElt -&gt; RngPadElt
5<->L ! u : FldPad, [RngElt] -> FldPadElt :: elt<L | u> <->text488.htm#5307<->L ! u : FldPad, [RngElt] -> FldPadElt :: elt&lt;L | u&gt; : RngPad, RngElt -&gt; RngPadElt
5<->elt<L | u> <->text488.htm#5307<->elt&lt;L | u&gt; : RngPad, RngElt -&gt; RngPadElt
5<->elt <->text488.htm#5308<->elt<L | u, r> : RngPad, [RngElt], RngIntElt -> RngPadElt
5<->elt <->text488.htm#5308<->elt<L | u, r> : FldPad, RngElt, RngIntElt -> FldPadElt
5<->elt <->text488.htm#5308<->elt<L | u, r> : FldPad, [RngElt], RngIntElt -> FldPadElt
5<->elt<L | u, r> <->text488.htm#5308<->elt&lt;L | u, r&gt; : RngPad, RngElt, RngIntElt -&gt; RngPadElt
5<->elt <->text488.htm#5309<->elt<L | v, u, r> : RngPad, RngIntElt, [RngElt], RngIntElt -> RngPadElt
5<->elt <->text488.htm#5309<->elt<L | v, u, r> : FldPad, RngIntElt, RngElt, RngIntElt -> FldPadElt
5<->elt <->text488.htm#5309<->elt<L | v, u, r> : FldPad, RngIntElt, [RngElt], RngIntElt -> FldPadElt
5<->elt<L | v, u, r> <->text488.htm#5309<->elt&lt;L | v, u, r&gt; : RngPad, RngIntElt, RngElt, RngIntElt -&gt; RngPadElt
5<->BigO(x) <->text488.htm#5310<->BigO(x) : FldPadElt -> FldPadElt
5<->BigO(x) <->text488.htm#5310<->BigO(x) : RngPadElt -&gt; RngPadElt
5<->O(x) <->text488.htm#5310<->O(x) : FldPadElt -> FldPadElt
5<->BigO(x) <->text488.htm#5310<->BigO(x) : RngPadElt -&gt; RngPadElt
5<->UniformizingElement(L) <->text488.htm#5311<->UniformizingElement(L) : RngPadRes -> RndPadResElt
5<->UniformizingElement(L) <->text488.htm#5311<->UniformizingElement(L) : RngPadResExt -> RndPadResExtElt
5<->UniformizingElement(L) <->text488.htm#5311<->UniformizingElement(L) : FldPad -> FldPadElt
5<->UniformizingElement(L) <->text488.htm#5311<->UniformizingElement(L) : RngPad -&gt; RngPadElt
4<->RngLoc_eltcons (Example H47E8)<->text488.htm#5312<->RngLoc_eltcons (Example H47E8)
4<->Example-eltcons :<->text488.htm#5312<->Example-eltcons :: RngLoc_eltcons (Example H47E8)
4<->RngLoc_eltcons_seq_weird (Example H47E9)<->text488.htm#5313<->RngLoc_eltcons_seq_weird (Example H47E9)
4<->Example-eltcons_seq_weird :<->text488.htm#5313<->Example-eltcons_seq_weird :: RngLoc_eltcons_seq_weird (Example H47E9)
3<->constr_elt :<->text488.htm#5302<->constr_elt :: Constructions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->sequence :<->text488.htm#5314<->sequence :: Element Decomposers (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->ElementToSequence(x) <->text488.htm#5315<->ElementToSequence(x) : RngPadResElt -> [ RngElt ]
5<->ElementToSequence(x) <->text488.htm#5315<->ElementToSequence(x) : RngPadResExtElt -> [ RngElt ]
5<->ElementToSequence(x) <->text488.htm#5315<->ElementToSequence(x) : FldPadElt -> [ RngElt ]
5<->Eltseq :: ElementToSequence(x) <->text488.htm#5315<->Eltseq :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Eltseq(x) : RngPadResElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Eltseq(x) : RngPadResElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Eltseq(x) : RngPadResExtElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Eltseq(x) : RngPadResExtElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Eltseq(x) : FldPadElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Eltseq(x) : FldPadElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Coefficients :: ElementToSequence(x) <->text488.htm#5315<->Coefficients :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Coefficients(x) : RngPadResElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Coefficients(x) : RngPadResElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Coefficients(x) : RngPadResExtElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Coefficients(x) : RngPadResExtElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Coefficients(x) : FldPadElt -> [ RngElt ] :: ElementToSequence(x) <->text488.htm#5315<->Coefficients(x) : FldPadElt -> [ RngElt ] :: ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->ElementToSequence(x) <->text488.htm#5315<->ElementToSequence(x) : RngPadElt -&gt; [ RngElt ]
5<->Coefficient(x, i) <->text488.htm#5316<->Coefficient(x, i) : RngPadResElt, RngIntElt -> RngPadResElt
5<->Coefficient(x, i) <->text488.htm#5316<->Coefficient(x, i) : RngPadResExtElt, RngIntElt -> RngElt
5<->Coefficient(x, i) <->text488.htm#5316<->Coefficient(x, i) : FldPadElt, RngIntElt -> FldPadElt
5<->Coefficient(x, i) <->text488.htm#5316<->Coefficient(x, i) : RngPadElt, RngIntElt -&gt; RngPadElt
4<->RngLoc_gal-desc (Example H47E10)<->text488.htm#5317<->RngLoc_gal-desc (Example H47E10)
4<->Example-gal-desc :<->text488.htm#5317<->Example-gal-desc :: RngLoc_gal-desc (Example H47E10)
3<->sequence :<->text488.htm#5314<->sequence :: Element Decomposers (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->consconv-element :<->text488.htm<->consconv-element :: Element Constructions and Conversions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->operation-element :<->text489.htm<->operation-element :: Operations on Elements (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->arithmetic :<->text489.htm#5319<->arithmetic :: Arithmetic (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->- x <->text489.htm#5320<->- x : RngPadResElt -> RngPadResElt
5<->- x <->text489.htm#5320<->- x : RngPadResExtElt -> RngPadResExtElt
5<->- x <->text489.htm#5320<->- x : FldPadElt -> FldPadElt
5<->- x <->text489.htm#5320<->- x : RngPadElt -&gt; RngPadElt
5<->x + y <->text489.htm#5321<->x + y : RngPadResElt, RngPadResElt -> RngPadResElt
5<->x + y <->text489.htm#5321<->x + y : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt
5<->x + y <->text489.htm#5321<->x + y : FldPadElt, FldPadElt -> FldPadElt
5<->x + y <->text489.htm#5321<->x + y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->x - y <->text489.htm#5322<->x - y : RngPadResElt, RngPadResElt -> RngPadResElt
5<->x - y <->text489.htm#5322<->x - y : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt
5<->x - y <->text489.htm#5322<->x - y : FldPadElt, FldPadElt -> FldPadElt
5<->x - y <->text489.htm#5322<->x - y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->x * y <->text489.htm#5323<->x * y : RngPadResElt, RngPadResElt -> RngPadResElt
5<->x * y <->text489.htm#5323<->x * y : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt
5<->x * y <->text489.htm#5323<->x * y : FldPadElt, FldPadElt -> FldPadElt
5<->x * y <->text489.htm#5323<->x * y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->x \^ k <->text489.htm#5324<->x \^ k : RngPadResElt, RngIntElt -> RngPadResElt
5<->x \^ k <->text489.htm#5324<->x \^ k : RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->x \^ k <->text489.htm#5324<->x \^ k : FldPadElt, RngIntElt -> FldPadElt
5<->x ^ k <->text489.htm#5324<->x ^ k : RngPadElt, RngIntElt -&gt; RngPadElt
5<->x div y <->text489.htm#5325<->x div y : RngPadResElt, RngPadResElt -> RngPadResElt
5<->x div y <->text489.htm#5325<->x div y : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt
5<->x div y <->text489.htm#5325<->x div y : FldPadElt, FldPadElt -> FldPadElt
5<->x div y <->text489.htm#5325<->x div y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->x div:= y <->text489.htm#5326<->x div:= y : RngPadResElt, RngPadResElt -> RngPadResElt
5<->x div:= y <->text489.htm#5326<->x div:= y : RngPadElt, RngPadElt -> RngPadElt
5<->x div:= y <->text489.htm#5326<->x div:= y : FldPadElt, FldPadElt -> FldPadElt
5<->x div:= y <->text489.htm#5326<->x div:= y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->x / y <->text489.htm#5327<->x / y : FldPadElt, FldPadElt -> FldPadElt
5<->x / y <->text489.htm#5327<->x / y : RngPadElt, RngPadElt -&gt; RngPadElt
5<->IsExactlyDivisible(x, y) <->text489.htm#5328<->IsExactlyDivisible(x, y) : RngPadResElt, RngPadResElt -> BoolElt, RngPadResElt
5<->IsExactlyDivisible(x, y) <->text489.htm#5328<->IsExactlyDivisible(x, y) : RngPadResExtElt, RngPadResExtElt -> BoolElt, RngPadResExtElt
5<->IsExactlyDivisible(x, y) <->text489.htm#5328<->IsExactlyDivisible(x, y) : FldPadElt, FldPadElt -> BoolElt, FldPadElt
5<->IsExactlyDivisible(x, y) <->text489.htm#5328<->IsExactlyDivisible(x, y) : RngPadElt, RngPadElt -&gt; BoolElt, RngPadElt
4<->RngLoc_Division (Example H47E11)<->text489.htm#5329<->RngLoc_Division (Example H47E11)
4<->Example-Division :<->text489.htm#5329<->Example-Division :: RngLoc_Division (Example H47E11)
3<->arithmetic :<->text489.htm#5319<->arithmetic :: Arithmetic (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->eq-in :<->text489.htm#5330<->eq-in :: Equality and Membership (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->x eq y  <->text489.htm#5331<->x eq y  : RngPadResExtElt, RngPadResExtElt -> BoolElt
5<->x eq y <->text489.htm#5331<->x eq y : RngPadResElt, RngPadResElt -&gt; BoolElt
5<->x ne y  <->text489.htm#5332<->x ne y  : RngPadResExtElt, RngPadResExtElt -> BoolElt
5<->x ne y <->text489.htm#5332<->x ne y : RngPadResElt, RngPadResElt -&gt; BoolElt
5<->x in L <->text489.htm#5333<->x in L : ., FldPad  -> BoolElt
5<->x in L <->text489.htm#5333<->x in L : ., RngPad  -&gt; BoolElt
5<->x notin L <->text489.htm#5334<->x notin L : ., FldPad  -> BoolElt
5<->x notin L <->text489.htm#5334<->x notin L : ., RngPad  -&gt; BoolElt
4<->RngLoc_unram-ext (Example H47E12)<->text489.htm#5335<->RngLoc_unram-ext (Example H47E12)
4<->Example-unram-ext :<->text489.htm#5335<->Example-unram-ext :: RngLoc_unram-ext (Example H47E12)
3<->eq-in :<->text489.htm#5330<->eq-in :: Equality and Membership (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->prop-generic :<->text489.htm#5336<->prop-generic :: Properties (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->IsZero(x) <->text489.htm#5337<->IsZero(x) : RngPadResElt -> BoolElt
5<->IsZero(x) <->text489.htm#5337<->IsZero(x) : RngPadResExtElt -> BoolElt
5<->IsZero(x) <->text489.htm#5337<->IsZero(x) : FldPadElt -> BoolElt
5<->IsZero(x) <->text489.htm#5337<->IsZero(x) : RngPadElt -&gt; BoolElt
5<->IsOne(x) <->text489.htm#5338<->IsOne(x) : RngPadResElt -> BoolElt
5<->IsOne(x) <->text489.htm#5338<->IsOne(x) : RngPadResExtElt -> BoolElt
5<->IsOne(x) <->text489.htm#5338<->IsOne(x) : FldPadElt -> BoolElt
5<->IsOne(x) <->text489.htm#5338<->IsOne(x) : RngPadElt -&gt; BoolElt
5<->IsMinusOne(x) <->text489.htm#5339<->IsMinusOne(x) : RngPadResElt -> BoolElt
5<->IsMinusOne(x) <->text489.htm#5339<->IsMinusOne(x) : RngPadResExtElt -> BoolElt
5<->IsMinusOne(x) <->text489.htm#5339<->IsMinusOne(x) : FldPadElt -> BoolElt
5<->IsMinusOne(x) <->text489.htm#5339<->IsMinusOne(x) : RngPadElt -&gt; BoolElt
5<->IsUnit(x) <->text489.htm#5340<->IsUnit(x) : RngPadResElt -> BoolElt
5<->IsUnit(x) <->text489.htm#5340<->IsUnit(x) : RngPadResExtElt -> BoolElt
5<->IsUnit(x) <->text489.htm#5340<->IsUnit(x) : FldPadElt -> BoolElt
5<->IsUnit(x) <->text489.htm#5340<->IsUnit(x) : RngPadElt -&gt; BoolElt
5<->IsIntegral(x) <->text489.htm#5341<->IsIntegral(x) : RngPadResElt -> BoolElt
5<->IsIntegral(x) <->text489.htm#5341<->IsIntegral(x) : RngPadResExtElt -> BoolElt
5<->IsIntegral(x) <->text489.htm#5341<->IsIntegral(x) : FldPadElt -> BoolElt
5<->IsIntegral(x) <->text489.htm#5341<->IsIntegral(x) : RngPadElt -&gt; BoolElt
3<->prop-generic :<->text489.htm#5336<->prop-generic :: Properties (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->prec-val :<->text489.htm#5342<->prec-val :: Precision and Valuation (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Parent(x) <->text489.htm#5343<->Parent(x) : RngPadResElt -> RngPadRes
5<->Parent(x) <->text489.htm#5343<->Parent(x) : RngPadResExtElt -> RngPadResExt
5<->Parent(x) <->text489.htm#5343<->Parent(x) : FldPadElt -> FldPad
5<->Parent(x) <->text489.htm#5343<->Parent(x) : RngPadElt -&gt; RngPad
5<->Precision(x) <->text489.htm#5344<->Precision(x) : RngPadResElt -> RngIntElt
5<->Precision(x) <->text489.htm#5344<->Precision(x) : RngPadResExtElt -> RngIntElt
5<->Precision(x) <->text489.htm#5344<->Precision(x) : FldPadElt -> RngIntElt
5<->Precision(x) <->text489.htm#5344<->Precision(x) : RngPadElt -&gt; RngIntElt
5<->AbsolutePrecision(x) <->text489.htm#5345<->AbsolutePrecision(x) : RngPadResElt -> RngIntElt
5<->AbsolutePrecision(x) <->text489.htm#5345<->AbsolutePrecision(x) : RngPadResExtElt -> RngIntElt
5<->AbsolutePrecision(x) <->text489.htm#5345<->AbsolutePrecision(x) : FldPadElt -> RngIntElt
5<->AbsolutePrecision(x) <->text489.htm#5345<->AbsolutePrecision(x) : RngPadElt -&gt; RngIntElt
5<->RelativePrecision(x) <->text489.htm#5346<->RelativePrecision(x) : RngPadResElt -> RngIntElt
5<->RelativePrecision(x) <->text489.htm#5346<->RelativePrecision(x) : RngPadResExtElt -> RngIntElt
5<->RelativePrecision(x) <->text489.htm#5346<->RelativePrecision(x) : FldPadElt -> RngIntElt
5<->RelativePrecision(x) <->text489.htm#5346<->RelativePrecision(x) : RngPadElt -&gt; RngIntElt
5<->ChangePrecision($\sim$x, k) <->text489.htm#5347<->ChangePrecision($\sim$x, k) : RngUPolElt, RngIntElt -> RngPadElt
5<->ChangePrecision(x, k) <->text489.htm#5347<->ChangePrecision(x, k) : RngPadElt, RngIntElt -> RngPadElt
5<->ChangePrecision($\sim$x, k) <->text489.htm#5347<->ChangePrecision($\sim$x, k) : RngPadElt, RngIntElt -> RngPadElt
5<->ChangePrecision(x, k) <->text489.htm#5347<->ChangePrecision(x, k) : FldPadElt, RngIntElt -> FldPadElt
5<->ChangePrecision($\sim$x, k) <->text489.htm#5347<->ChangePrecision($\sim$x, k) : FldPadElt, RngIntElt -> FldPadElt
5<->ChangePrecision(x, k) <->text489.htm#5347<->ChangePrecision(x, k) : RngUPolElt, RngIntElt -&gt; RngPadElt
5<->Expand(x) <->text489.htm#5348<->Expand(x) : FldPadElt -> FldPadElt
5<->Expand(x) <->text489.htm#5348<->Expand(x) : RngPadElt -&gt; RngPadElt
5<->Valuation(x) <->text489.htm#5349<->Valuation(x) : RngPadResElt -> RngIntElt
5<->Valuation(x) <->text489.htm#5349<->Valuation(x) : RngPadResExtElt -> RngIntElt
5<->Valuation(x) <->text489.htm#5349<->Valuation(x) : FldPadElt -> RngIntElt
5<->Valuation(x) <->text489.htm#5349<->Valuation(x) : RngPadElt -&gt; RngIntElt
4<->RngLoc_ofe (Example H47E13)<->text489.htm#5350<->RngLoc_ofe (Example H47E13)
4<->Example-ofe :<->text489.htm#5350<->Example-ofe :: RngLoc_ofe (Example H47E13)
3<->prec-val :<->text489.htm#5342<->prec-val :: Precision and Valuation (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->log-exp :<->text489.htm#5351<->log-exp :: Logarithms and Exponentials (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Log(x) <->text489.htm#5352<->Log(x) : RngPadResElt -> RngPadResElt
5<->Log(x) <->text489.htm#5352<->Log(x) : RngPadResExtElt -> RngPadResExtElt
5<->Log(x) <->text489.htm#5352<->Log(x) : FldPadElt -> FldPadElt
5<->Log(x) <->text489.htm#5352<->Log(x) : RngPadElt -&gt; RngPadElt
5<->Exp(x) <->text489.htm#5353<->Exp(x) : RngPadResElt -> RngPadResElt
5<->Exp(x) <->text489.htm#5353<->Exp(x) : RngPadResExtElt -> RngPadResExtElt
5<->Exp(x) <->text489.htm#5353<->Exp(x) : FldPadElt -> FldPadElt
5<->Exp(x) <->text489.htm#5353<->Exp(x) : RngPadElt -&gt; RngPadElt
4<->RngLoc_log (Example H47E14)<->text489.htm#5354<->RngLoc_log (Example H47E14)
4<->Example-log :<->text489.htm#5354<->Example-log :: RngLoc_log (Example H47E14)
3<->log-exp :<->text489.htm#5351<->log-exp :: Logarithms and Exponentials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->norm-trace :<->text489.htm#5355<->norm-trace :: Norm and Trace (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Norm(x) <->text489.htm#5356<->Norm(x) : RngPadResElt -> RngPadResElt
5<->Norm(x) <->text489.htm#5356<->Norm(x) : RngPadResExtElt -> RngElt
5<->Norm(x) <->text489.htm#5356<->Norm(x) : FldPadElt -> FldPadElt
5<->Norm(x) <->text489.htm#5356<->Norm(x) : RngPadElt -&gt; RngPadElt
5<->Norm(x, R) <->text489.htm#5357<->Norm(x, R) : RngPadResElt, RngPadRes -> RngPadResElt
5<->Norm(x, R) <->text489.htm#5357<->Norm(x, R) : RngPadResExtElt, Rng -> RngElt
5<->Norm(x, R) <->text489.htm#5357<->Norm(x, R) : FldPadElt, FldPad -> FldPadElt
5<->Norm(x, R) <->text489.htm#5357<->Norm(x, R) : RngPadElt, RngPad -&gt; RngPadElt
5<->Trace(x) <->text489.htm#5358<->Trace(x) : RngPadResElt -> RngPadResElt
5<->Trace(x) <->text489.htm#5358<->Trace(x) : RngPadResExtElt -> RngElt
5<->Trace(x) <->text489.htm#5358<->Trace(x) : FldPadElt -> FldPadElt
5<->Trace(x) <->text489.htm#5358<->Trace(x) : RngPadElt -&gt; RngPadElt
5<->Trace(x, R) <->text489.htm#5359<->Trace(x, R) : RngPadResElt, RngPadRes -> RngPadResElt
5<->Trace(x, R) <->text489.htm#5359<->Trace(x, R) : RngPadResExtElt, Rng -> RngElt
5<->Trace(x, R) <->text489.htm#5359<->Trace(x, R) : FldPadElt, FldPad -> FldPadElt
5<->Trace(x, R) <->text489.htm#5359<->Trace(x, R) : RngPadElt, RngPad -&gt; RngPadElt
5<->MinimalPolynomial(x) <->text489.htm#5360<->MinimalPolynomial(x) : RngPadResElt -> RngUPolElt
5<->MinimalPolynomial(x) <->text489.htm#5360<->MinimalPolynomial(x) : RngPadResExtElt -> RngUPolElt
5<->MinimalPolynomial(x) <->text489.htm#5360<->MinimalPolynomial(x) : FldPadElt -> RngUPolElt
5<->MinimalPolynomial(x) <->text489.htm#5360<->MinimalPolynomial(x) : RngPadElt -&gt; RngUPolElt
5<->MinimalPolynomial(x, R) <->text489.htm#5361<->MinimalPolynomial(x, R) : RngPadResElt, RngPadRes -> RngUPolElt
5<->MinimalPolynomial(x, R) <->text489.htm#5361<->MinimalPolynomial(x, R) : RngPadResExtElt, Rng -> RngUPolElt
5<->MinimalPolynomial(x, R) <->text489.htm#5361<->MinimalPolynomial(x, R) : FldPadElt, FldPad -> RngUPolElt
5<->MinimalPolynomial(x, R) <->text489.htm#5361<->MinimalPolynomial(x, R) : RngPadElt, RngPad -&gt; RngUPolElt
5<->CharacteristicPolynomial(x) <->text489.htm#5362<->CharacteristicPolynomial(x) : RngPadResElt -> RngUPolElt
5<->CharacteristicPolynomial(x) <->text489.htm#5362<->CharacteristicPolynomial(x) : RngPadResExtElt -> RngUPolElt
5<->CharacteristicPolynomial(x) <->text489.htm#5362<->CharacteristicPolynomial(x) : RngPadElt -&gt; RngUPolElt
5<->CharacteristicPolynomial(x, R) <->text489.htm#5363<->CharacteristicPolynomial(x, R) : RngPadResElt, RngPadRes -> RngUPolElt
5<->CharacteristicPolynomial(x, R) <->text489.htm#5363<->CharacteristicPolynomial(x, R) : RngPadResExtElt, RngPadRes -> RngUPolElt
5<->CharacteristicPolynomial(x, R) <->text489.htm#5363<->CharacteristicPolynomial(x, R) : RngPadResExtElt, RngPadResExt -> RngUPolElt
5<->CharacteristicPolynomial(x, R) <->text489.htm#5363<->CharacteristicPolynomial(x, R) : RngPadElt, RngPad -&gt; RngUPolElt
5<->GaloisImage(x, i) <->text489.htm#5364<->GaloisImage(x, i) : RngPadResElt, RngIntElt -> RngPadResElt
5<->GaloisImage(x, i) <->text489.htm#5364<->GaloisImage(x, i) : RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->GaloisImage(x, i) <->text489.htm#5364<->GaloisImage(x, i) : FldPadElt, RngIntElt -> FldPadElt
5<->GaloisImage(x, i) <->text489.htm#5364<->GaloisImage(x, i) : RngPadElt, RngIntElt -&gt; RngPadElt
4<->RngLoc_agm (Example H47E15)<->text489.htm#5365<->RngLoc_agm (Example H47E15)
4<->Example-agm :<->text489.htm#5365<->Example-agm :: RngLoc_agm (Example H47E15)
5<->EuclideanNorm(x) <->text489.htm#5366<->EuclideanNorm(x) : RngRadResExtElt -> RngIntElt
5<->EuclideanNorm(x) <->text489.htm#5366<->EuclideanNorm(x) : RngPadResElt -&gt; RngIntElt
3<->norm-trace :<->text489.htm#5355<->norm-trace :: Norm and Trace (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->teich-lift :<->text489.htm#5367<->teich-lift :: Teichm&uuml;ller Lifts (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->TeichmuellerLift(u, R) <->text489.htm#5368<->TeichmuellerLift(u, R) : FldFinElt, RngPadRes -> RngPadResElt
5<->TeichmuellerLift(u, R) <->text489.htm#5368<->TeichmuellerLift(u, R) : FldFinElt, RngPadResExt -&gt; RngPadResExtElt
3<->teich-lift :<->text489.htm#5367<->teich-lift :: Teichm&uuml;ller Lifts (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->operation-element :<->text489.htm<->operation-element :: Operations on Elements (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->lin-alg :<->text490.htm<->lin-alg :: Linear Algebra (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->elt-roots :<->text491.htm<->elt-roots :: Roots of Elements (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->SquareRoot(x) <->text491.htm#5371<->SquareRoot(x) : RngPadResElt -> RngPadResElt
5<->SquareRoot(x) <->text491.htm#5371<->SquareRoot(x) : RngPadResExtElt -> RngPadResExtElt
5<->SquareRoot(x) <->text491.htm#5371<->SquareRoot(x) : FldPadElt -> FldPadElt
5<->Sqrt :: SquareRoot(x) <->text491.htm#5371<->Sqrt :: SquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->Sqrt(x) : RngPadResElt -> RngPadResElt :: SquareRoot(x) <->text491.htm#5371<->Sqrt(x) : RngPadResElt -> RngPadResElt :: SquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->Sqrt(x) : RngPadResExtElt -> RngPadResExtElt :: SquareRoot(x) <->text491.htm#5371<->Sqrt(x) : RngPadResExtElt -> RngPadResExtElt :: SquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->Sqrt(x) : FldPadElt -> FldPadElt :: SquareRoot(x) <->text491.htm#5371<->Sqrt(x) : FldPadElt -> FldPadElt :: SquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->SquareRoot(x) <->text491.htm#5371<->SquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->IsSquare(x) <->text491.htm#5372<->IsSquare(x) : RngPadResElt -> BoolElt, RngPadResElt
5<->IsSquare(x) <->text491.htm#5372<->IsSquare(x) : RngPadResExtElt -> BoolElt, RngPadResExtElt
5<->IsSquare(x) <->text491.htm#5372<->IsSquare(x) : FldPadElt -> BoolElt, FldPadElt
5<->IsSquare(x) <->text491.htm#5372<->IsSquare(x) : RngPadElt -&gt; BoolElt, RngPadElt
5<->InverseSquareRoot(x) <->text491.htm#5373<->InverseSquareRoot(x) : RngPadResElt -> RngPadResElt
5<->InverseSquareRoot(x) <->text491.htm#5373<->InverseSquareRoot(x) : RngPadResExtElt -> RngPadResExtElt
5<->InverseSquareRoot(x) <->text491.htm#5373<->InverseSquareRoot(x) : FldPadElt -> FldPadElt
5<->InverseSqrt :: InverseSquareRoot(x) <->text491.htm#5373<->InverseSqrt :: InverseSquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x) : RngPadResElt -> RngPadResElt :: InverseSquareRoot(x) <->text491.htm#5373<->InverseSqrt(x) : RngPadResElt -> RngPadResElt :: InverseSquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x) : RngPadResExtElt -> RngPadResExtElt :: InverseSquareRoot(x) <->text491.htm#5373<->InverseSqrt(x) : RngPadResExtElt -> RngPadResExtElt :: InverseSquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x) : FldPadElt -> FldPadElt :: InverseSquareRoot(x) <->text491.htm#5373<->InverseSqrt(x) : FldPadElt -> FldPadElt :: InverseSquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->InverseSquareRoot(x) <->text491.htm#5373<->InverseSquareRoot(x) : RngPadElt -&gt; RngPadElt
5<->InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSquareRoot(x, y) : RngPadResElt, RngPadResElt -> RngPadResElt
5<->InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSquareRoot(x, y) : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt
5<->InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSquareRoot(x, y) : FldPadElt, FldPadElt -> FldPadElt
5<->InverseSqrt :: InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSqrt :: InverseSquareRoot(x, y) : RngPadElt, RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x, y) : RngPadResElt, RngPadResElt -> RngPadResElt :: InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSqrt(x, y) : RngPadResElt, RngPadResElt -> RngPadResElt :: InverseSquareRoot(x, y) : RngPadElt, RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x, y) : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt :: InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSqrt(x, y) : RngPadResExtElt, RngPadResExtElt -> RngPadResExtElt :: InverseSquareRoot(x, y) : RngPadElt, RngPadElt -&gt; RngPadElt
5<->InverseSqrt(x, y) : FldPadElt, FldPadElt -> FldPadElt :: InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSqrt(x, y) : FldPadElt, FldPadElt -> FldPadElt :: InverseSquareRoot(x, y) : RngPadElt, RngPadElt -&gt; RngPadElt
5<->InverseSquareRoot(x, y) <->text491.htm#5374<->InverseSquareRoot(x, y) : RngPadElt, RngPadElt -&gt; RngPadElt
5<->Root(x, n) <->text491.htm#5375<->Root(x, n) : RngPadResElt, RngIntElt -> RngPadResElt
5<->Root(x, n) <->text491.htm#5375<->Root(x, n) : RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->Root(x, n) <->text491.htm#5375<->Root(x, n) : FldPadElt, RngIntElt -> FldPadElt
5<->Root(x, n) <->text491.htm#5375<->Root(x, n) : RngPadElt, RngIntElt -&gt; RngPadElt
5<->IsPower(x, n) <->text491.htm#5376<->IsPower(x, n) : RngPadResElt, RngIntElt -> BoolElt, RngPadResElt
5<->IsPower(x, n) <->text491.htm#5376<->IsPower(x, n) : RngPadResExtElt, RngIntElt -> BoolElt, RngPadResExtElt
5<->IsPower(x, n) <->text491.htm#5376<->IsPower(x, n) : FldPadElt, RngIntElt -> BoolElt, FldPadElt
5<->IsPower(x, n) <->text491.htm#5376<->IsPower(x, n) : RngPadElt, RngIntElt -&gt; BoolElt, RngPadElt
5<->InverseRoot(x, n) <->text491.htm#5377<->InverseRoot(x, n) : RngPadResElt, RngIntElt -> RngPadResElt
5<->InverseRoot(x, n) <->text491.htm#5377<->InverseRoot(x, n) : RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->InverseRoot(x, n) <->text491.htm#5377<->InverseRoot(x, n) : FldPadElt, RngIntElt -> FldPadElt
5<->InverseRoot(x, n) <->text491.htm#5377<->InverseRoot(x, n) : RngPadElt, RngIntElt -&gt; RngPadElt
5<->InverseRoot(x, y, n) <->text491.htm#5378<->InverseRoot(x, y, n) : RngPadResElt, RngPadResElt, RngIntElt -> RngPadResElt
5<->InverseRoot(x, y, n) <->text491.htm#5378<->InverseRoot(x, y, n) : RngPadResExtElt, RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->InverseRoot(x, y, n) <->text491.htm#5378<->InverseRoot(x, y, n) : FldPadElt, FldPadElt, RngIntElt -> FldPadElt
5<->InverseRoot(x, y, n) <->text491.htm#5378<->InverseRoot(x, y, n) : RngPadElt, RngPadElt, RngIntElt -&gt; RngPadElt
3<->elt-roots :<->text491.htm<->elt-roots :: Roots of Elements (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->polynomials :<->text492.htm<->polynomials :: Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->operations :<->text492.htm#5380<->operations :: Operations for Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Gcd :: GreatestCommonDivisor(f, g) <->text492.htm#5381<->Gcd :: GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->GCD :: GreatestCommonDivisor(f, g) <->text492.htm#5381<->GCD :: GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
5<->GreatestCommonDivisor(f, g) <->text492.htm#5381<->GreatestCommonDivisor(f, g) : RngUPolElt, RngUPolElt -&gt; RngUPolElt
4<->RngLoc_gcd (Example H47E16)<->text492.htm#5382<->RngLoc_gcd (Example H47E16)
4<->Example-gcd :<->text492.htm#5382<->Example-gcd :: RngLoc_gcd (Example H47E16)
5<->ShiftValuation(f, n) <->text492.htm#5383<->ShiftValuation(f, n) : RngUPolElt, RngIntElt -&gt; RngUPolElt
3<->operations :<->text492.htm#5380<->operations :: Operations for Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->roots :<->text492.htm#5384<->roots :: Roots of Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->Newton!polygon :<->text492.htm#5385<->Newton!polygon :: Hensel Lifting of Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->Hensel!lifting :<->text492.htm#5385<->Hensel!lifting :: Hensel Lifting of Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->hensel-roots :<->text492.htm#5385<->hensel-roots :: Hensel Lifting of Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->NewtonPolygon(f) <->text492.htm#5386<->NewtonPolygon(f) : RngUPolElt -&gt; NwtnPgon
5<->ValuationsOfRoots(f) <->text492.htm#5387<->ValuationsOfRoots(f) : RngUPolElt -&gt; SeqEnum[&lt;FldRatElt, RngIntElt&gt;]
4<->RngLoc_newton-polygon (Example H47E17)<->text492.htm#5388<->RngLoc_newton-polygon (Example H47E17)
4<->Example-newton-polygon :<->text492.htm#5388<->Example-newton-polygon :: RngLoc_newton-polygon (Example H47E17)
5<->HenselLift(f, x) <->text492.htm#5389<->HenselLift(f, x) : RngUPolElt, RngPadResElt -> RngPadResElt
5<->HenselLift(f, x) <->text492.htm#5389<->HenselLift(f, x) : RngUPolElt, RngPadResExtElt -> RngPadResExtElt
5<->HenselLift(f, x) <->text492.htm#5389<->HenselLift(f, x) : RngUPolElt, FldPadElt -> FldPadElt
5<->HenselLift(f, x, k) <->text492.htm#5389<->HenselLift(f, x, k) : RngUPolElt, RngPadElt, RngIntElt -> RngPadElt
5<->HenselLift(f, x, k) <->text492.htm#5389<->HenselLift(f, x, k) : RngUPolElt, RngPadResElt, RngIntElt -> RngPadResElt
5<->HenselLift(f, x, k) <->text492.htm#5389<->HenselLift(f, x, k) : RngUPolElt, RngPadResExtElt, RngIntElt -> RngPadResExtElt
5<->HenselLift(f, x, k) <->text492.htm#5389<->HenselLift(f, x, k) : RngUPolElt, FldPadElt, RngIntElt -> FldPadElt
5<->HenselLift(f, x) <->text492.htm#5389<->HenselLift(f, x) : RngUPolElt, RngPadElt -&gt; RngPadElt
4<->RngLoc_Hensel (Example H47E18)<->text492.htm#5390<->RngLoc_Hensel (Example H47E18)
4<->Example-Hensel :<->text492.htm#5390<->Example-Hensel :: RngLoc_Hensel (Example H47E18)
3<->hensel-roots :<->text492.htm#5385<->hensel-roots :: Hensel Lifting of Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->roots-direct :<->text492.htm#5391<->roots-direct :: Functions returning Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Roots(f, R) <->text492.htm#5392<->Roots(f, R) : RngUPolElt, RngPad -> [ <RngPadElt, RngIntElt> ]
5<->Roots(f) <->text492.htm#5392<->Roots(f) : RngUPolElt -&gt; [ &lt;RngPadElt, RngIntElt&gt; ]
5<->HasRoot(f) <->text492.htm#5393<->HasRoot(f) : RngUPolElt -&gt; BoolElt, RngPadElt
4<->RngLoc_ramified-ext (Example H47E19)<->text492.htm#5394<->RngLoc_ramified-ext (Example H47E19)
4<->Example-ramified-ext :<->text492.htm#5394<->Example-ramified-ext :: RngLoc_ramified-ext (Example H47E19)
3<->roots-direct :<->text492.htm#5391<->roots-direct :: Functions returning Roots (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->roots :<->text492.htm#5384<->roots :: Roots of Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->fact :<->text492.htm#5395<->fact :: Factorization (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->HenselLift(f, s) <->text492.htm#5396<->HenselLift(f, s) : RngUPolElt, [RngUPolElt] -&gt; [RngUPolElt]
4<->RngLoc_Poly-Hensel (Example H47E20)<->text492.htm#5397<->RngLoc_Poly-Hensel (Example H47E20)
4<->Example-Poly-Hensel :<->text492.htm#5397<->Example-Poly-Hensel :: RngLoc_Poly-Hensel (Example H47E20)
5<->IsIrreducible(f) <->text492.htm#5398<->IsIrreducible(f) : RngUPolElt -&gt; BoolElt
5<->SquareFreeFactorization(f) <->text492.htm#5399<->SquareFreeFactorization(f) : RngUPolElt -&gt; [ &lt; RngUPolElt, RngIntElt &gt; ]
5<->LocalFactorization :: Factorization(f) <->text492.htm#5400<->LocalFactorization :: Factorization(f) : RngUPolElt -&gt; [ &lt; RngUPolElt, RngIntElt &gt; ]
5<->Factorization(f) <->text492.htm#5400<->Factorization(f) : RngUPolElt -&gt; [ &lt; RngUPolElt, RngIntElt &gt; ]
5<->SuggestedPrecision(f) <->text492.htm#5401<->SuggestedPrecision(f) : RngUPolElt -&gt; RngIntElt
5<->IsIsomorphic(f, g) <->text492.htm#5402<->IsIsomorphic(f, g) : RngUPolElt, RngUPolElt -&gt; BoolElt
5<->Distance(f, g) <->text492.htm#5403<->Distance(f, g) : RngUPolElt, RngUPolElt -&gt; RngIntElt
4<->RngLoc_factors-precision (Example H47E21)<->text492.htm#5404<->RngLoc_factors-precision (Example H47E21)
4<->Example-factors-precision :<->text492.htm#5404<->Example-factors-precision :: RngLoc_factors-precision (Example H47E21)
4<->RngLoc_Factors (Example H47E22)<->text492.htm#5405<->RngLoc_Factors (Example H47E22)
4<->Example-Factors :<->text492.htm#5405<->Example-Factors :: RngLoc_Factors (Example H47E22)
5<->SplittingField(f) <->text492.htm#5406<->SplittingField(f) : RngUPolElt[RngPad] -> FldPad, SeqEnum
5<->SplittingField(f) <->text492.htm#5406<->SplittingField(f) : RngUPolElt[FldPad] -&gt; FldPad, SeqEnum
4<->RngLoc_rngloc-splittingfield (Example H47E23)<->text492.htm#5407<->RngLoc_rngloc-splittingfield (Example H47E23)
4<->Example-rngloc-splittingfield :<->text492.htm#5407<->Example-rngloc-splittingfield :: RngLoc_rngloc-splittingfield (Example H47E23)
3<->fact :<->text492.htm#5395<->fact :: Factorization (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->polynomials :<->text492.htm<->polynomials :: Polynomials (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->automorphisms :<->text493.htm<->automorphisms :: Automorphisms of Local Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->autos :<->text493.htm<->autos :: Automorphisms of Local Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Automorphisms(L) <->text493.htm#5409<->Automorphisms(L) : FldPad -> [Map]
5<->Automorphisms(L) <->text493.htm#5409<->Automorphisms(L) : RngPad -&gt; [Map]
5<->Automorphisms(K, k) <->text493.htm#5410<->Automorphisms(K, k) : RngPad, RngPad -> [Map]
5<->Automorphisms(K, k) <->text493.htm#5410<->Automorphisms(K, k) : FldPad, FldPad -&gt; [Map]
5<->AutomorphismGroup(L) <->text493.htm#5411<->AutomorphismGroup(L) : FldPad -> GrpPerm, Map
5<->AutomorphismGroup(L) <->text493.htm#5411<->AutomorphismGroup(L) : RngPad -&gt; GrpPerm, Map
5<->AutomorphismGroup(K, k) <->text493.htm#5412<->AutomorphismGroup(K, k) : FldPad, FldPad -> GrpPerm, Map
5<->AutomorphismGroup(K, k) <->text493.htm#5412<->AutomorphismGroup(K, k) : RngPad, RngPad -&gt; GrpPerm, Map
5<->IsNormal(K) <->text493.htm#5413<->IsNormal(K) : FldPad -> BoolElt
5<->IsNormal(K) <->text493.htm#5413<->IsNormal(K) : RngPad -&gt; BoolElt
5<->IsNormal(K, k) <->text493.htm#5414<->IsNormal(K, k) : FldPad, FldPad -> BoolElt
5<->IsNormal(K, k) <->text493.htm#5414<->IsNormal(K, k) : RngPad, RngPad -&gt; BoolElt
5<->IsAbelian(K, k) <->text493.htm#5415<->IsAbelian(K, k) : FldPad, FldPad -&gt; BoolElt
5<->Continuations(m, L) <->text493.htm#5416<->Continuations(m, L) : Map, RngPad -&gt; [Map]
5<->IsIsomorphic(E, K) <->text493.htm#5417<->IsIsomorphic(E, K) : FldPad, FldPad -> BooElt
5<->IsIsomorphic(E, K) <->text493.htm#5417<->IsIsomorphic(E, K) : RngPad, RngPad -&gt; BooElt
4<->RngLoc_units-autos (Example H47E24)<->text493.htm#5418<->RngLoc_units-autos (Example H47E24)
4<->Example-units-autos :<->text493.htm#5418<->Example-units-autos :: RngLoc_units-autos (Example H47E24)
5<->GaloisGroup(f) <->text493.htm#5419<->GaloisGroup(f) : RngUPolElt[RngPad] -> GrpPerm, SeqEnum, UserProgram
5<->GaloisGroup(f) <->text493.htm#5419<->GaloisGroup(f) : RngUPolElt[FldPad] -&gt; GrpPerm, SeqEnum, UserProgram
4<->RngLoc_rngloc-galoisgroup (Example H47E25)<->text493.htm#5420<->RngLoc_rngloc-galoisgroup (Example H47E25)
4<->Example-rngloc-galoisgroup :<->text493.htm#5420<->Example-rngloc-galoisgroup :: RngLoc_rngloc-galoisgroup (Example H47E25)
3<->autos :<->text493.htm<->autos :: Automorphisms of Local Rings and Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->completion :<->text494.htm<->completion :: Completions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->Completion(K, P) <->text494.htm#5422<->Completion(K, P) : FldNum, RngOrdIdl -> FldPad, Map
5<->Completion(O, P) <->text494.htm#5422<->Completion(O, P) : RngOrd, RngOrdIdl -&gt; RngPad, Map
5<->LocalRing(P, k) <->text494.htm#5423<->LocalRing(P, k) : RngOrdIdl, RngIntElt -&gt; RngPad, Map
4<->RngLoc_completion (Example H47E26)<->text494.htm#5424<->RngLoc_completion (Example H47E26)
4<->Example-completion :<->text494.htm#5424<->Example-completion :: RngLoc_completion (Example H47E26)
3<->completion :<->text494.htm<->completion :: Completions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->class-fields :<->text495.htm<->class-fields :: Class Field Theory (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->unit-group :<->text495.htm#5426<->unit-group :: Unit Group (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->PrincipalUnitGroupGenerators(R) <->text495.htm#5427<->PrincipalUnitGroupGenerators(R) : FldPad -> SeqEnum
5<->PrincipalUnitGroupGenerators(R) <->text495.htm#5427<->PrincipalUnitGroupGenerators(R) : RngPad -&gt; SeqEnum
5<->PrincipalUnitGroup(R) <->text495.htm#5428<->PrincipalUnitGroup(R) : RngPadResExt -> GrpAb, Map
5<->PrincipalUnitGroup(R) <->text495.htm#5428<->PrincipalUnitGroup(R) : RngPadRes -> GrpAb, Map
5<->PrincipalUnitGroup(R) <->text495.htm#5428<->PrincipalUnitGroup(R) : RngPad -&gt; GrpAb, Map
5<->UnitGroup(R) <->text495.htm#5429<->UnitGroup(R) : RngPad -&gt; GrpAb, Map
5<->UnitGroup(F) <->text495.htm#5430<->UnitGroup(F) : FldPad -&gt; GrpAb, Map
5<->UnitGroupGenerators(R) <->text495.htm#5431<->UnitGroupGenerators(R) : RngPadRes -> SeqEnum
5<->UnitGroupGenerators(R) <->text495.htm#5431<->UnitGroupGenerators(R) : RngPad -&gt; SeqEnum
5<->UnitGroupGenerators(F) <->text495.htm#5432<->UnitGroupGenerators(F) : FldPad -&gt; SeqEnum
5<->pSelmerGroup(p,F) <->text495.htm#5433<->pSelmerGroup(p,F) : RngIntElt, FldPad -&gt; GrpAb, Map
3<->unit-group :<->text495.htm#5426<->unit-group :: Unit Group (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->norm-group :<->text495.htm#5434<->norm-group :: Norm Group (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->NormGroup(R, m) <->text495.htm#5435<->NormGroup(R, m) : RngPad, Map -> GrpAb, Map
5<->NormGroup(R, m) <->text495.htm#5435<->NormGroup(R, m) : FldPad, Map -&gt; GrpAb, Map
5<->NormEquation(R, m, b) <->text495.htm#5436<->NormEquation(R, m, b) : RngPad, Map, RngElt -> BoolElt, RngElt
5<->NormEquation(R, m, b) <->text495.htm#5436<->NormEquation(R, m, b) : FldPad, Map, RngElt -&gt; BoolElt, RngElt
5<->NormEquation(m1, m2, G) <->text495.htm#5437<->NormEquation(m1, m2, G) : Map, Map, GrpAb -&gt; GrpAb, Map
5<->Norm(m1, m2, G) <->text495.htm#5438<->Norm(m1, m2, G) : Map, Map, GrpAb -&gt; GrpAb
5<->NormKernel(m1, m2) <->text495.htm#5439<->NormKernel(m1, m2) : Map, Map -&gt; GrpAb
3<->norm-group :<->text495.htm#5434<->norm-group :: Norm Group (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->class-fields :<->text495.htm#5440<->class-fields :: Class Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->ClassField(m, G) <->text495.htm#5441<->ClassField(m, G) : Map, GrpAb -&gt; FldAb
5<->NormGroupDiscriminant(m, G) <->text495.htm#5442<->NormGroupDiscriminant(m, G) : Map, GrpAb -&gt; RngIntElt
3<->class-fields :<->text495.htm#5440<->class-fields :: Class Fields (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->class-fields :<->text495.htm<->class-fields :: Class Field Theory (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->extensions :<->text496.htm<->extensions :: Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
5<->AllExtensions(R, n) <->text496.htm#5444<->AllExtensions(R, n) : FldPad, RngIntElt -> [RngPad]
5<->AllExtensions(R, n) <->text496.htm#5444<->AllExtensions(R, n) : RngPad, RngIntElt -&gt; [RngPad]
5<->NumberOfExtensions(R, n) <->text496.htm#5445<->NumberOfExtensions(R, n) : RngPad, RngIntElt -&gt; RngIntElt
5<->OreConditions(R, n, j) <->text496.htm#5446<->OreConditions(R, n, j) : FldPad, RngIntElt, RngIntElt -> BoolElt
5<->OreConditions(R, n, j) <->text496.htm#5446<->OreConditions(R, n, j) : RngPad, RngIntElt, RngIntElt -&gt; BoolElt
4<->RngLoc_all-extensions (Example H47E27)<->text496.htm#5447<->RngLoc_all-extensions (Example H47E27)
4<->Example-all-extensions :<->text496.htm#5447<->Example-all-extensions :: RngLoc_all-extensions (Example H47E27)
3<->extensions :<->text496.htm<->extensions :: Extensions (p-ADIC RINGS AND THEIR EXTENSIONS)
3<->local :<->text481.htm<->local :: p-ADIC RINGS AND THEIR EXTENSIONS
3<->local-arbitrary :<->text498.htm<->local-arbitrary :: GENERAL p-ADIC EXTENSIONS
3<->introduction :<->text499.htm<->introduction :: Introduction (GENERAL p-ADIC EXTENSIONS)
3<->construction :<->text500.htm<->construction :: Constructions (GENERAL p-ADIC EXTENSIONS)
5<->LocalField(L, f) <->text500.htm#5452<->LocalField(L, f) : RngLocA, RngUPolElt -> RngLocA
5<->LocalField(L, f) <->text500.htm#5452<->LocalField(L, f) : FldPad, RngUPolElt -&gt; RngLocA
4<->RngLocA_construct (Example H48E1)<->text500.htm#5453<->RngLocA_construct (Example H48E1)
4<->Example-construct :<->text500.htm#5453<->Example-construct :: RngLocA_construct (Example H48E1)
5<->sub <->text500.htm#5454<->sub< L | S> : RngLocA, SeqEnum -> RngLocA
5<->sub< L | a1, ..., an > <->text500.htm#5454<->sub&lt; L | a<sub>1</sub>, ..., a<sub>n</sub> &gt; : RngLocA, RngLocAElt, ..., RngLocAElt -&gt; RngLocA
4<->RngLocA_sub (Example H48E2)<->text500.htm#5455<->RngLocA_sub (Example H48E2)
4<->Example-sub :<->text500.htm#5455<->Example-sub :: RngLocA_sub (Example H48E2)
3<->construction :<->text500.htm<->construction :: Constructions (GENERAL p-ADIC EXTENSIONS)
3<->operations :<->text501.htm<->operations :: Operations with Fields (GENERAL p-ADIC EXTENSIONS)
5<->CoefficientRing :: BaseRing(L) <->text501.htm#5457<->CoefficientRing :: BaseRing(L) : RngLocA -&gt; Rng
5<->BaseRing(L) <->text501.htm#5457<->BaseRing(L) : RngLocA -&gt; Rng
5<->DefiningPolynomial(L) <->text501.htm#5458<->DefiningPolynomial(L) : RngLocA -&gt; RngUPolElt
5<->Degree(L) <->text501.htm#5459<->Degree(L) : RngLocA -&gt; RngIntElt
5<->Degree(L, R) <->text501.htm#5460<->Degree(L, R) : RngLocA, Rng -&gt; RngIntElt
5<->RamificationDegree :: InertiaDegree(L) <->text501.htm#5461<->RamificationDegree :: InertiaDegree(L) : RngLocA -&gt; RngIntElt
5<->RamificationIndex :: InertiaDegree(L) <->text501.htm#5461<->RamificationIndex :: InertiaDegree(L) : RngLocA -&gt; RngIntElt
5<->InertiaDegree(L) <->text501.htm#5461<->InertiaDegree(L) : RngLocA -&gt; RngIntElt
5<->Precision(L) <->text501.htm#5462<->Precision(L) : RngLocA -&gt; RngIntElt
5<->Prime(L) <->text501.htm#5463<->Prime(L) : RngLocA -&gt; RngElt
4<->RngLocA_ops (Example H48E3)<->text501.htm#5464<->RngLocA_ops (Example H48E3)
4<->Example-ops :<->text501.htm#5464<->Example-ops :: RngLocA_ops (Example H48E3)
5<->QuotientRepresentation(L) <->text501.htm#5465<->QuotientRepresentation(L) : RngLocA -&gt; RngUPolRes
5<->RamifiedRepresentation(L) <->text501.htm#5466<->RamifiedRepresentation(L) : RngLocA -&gt; FldPad, Map
4<->RngLocA_reps (Example H48E4)<->text501.htm#5467<->RngLocA_reps (Example H48E4)
4<->Example-reps :<->text501.htm#5467<->Example-reps :: RngLocA_reps (Example H48E4)
5<->AssignNames(~L, S) <->text501.htm#5468<->AssignNames(~L, S) : RngLocA, SeqEnum[MonStgElt] -&gt;
5<->Name(L, i) <->text501.htm#5469<->Name(L, i) : RngLocA, RngIntElt -&gt; RngLocAElt
5<->Discriminant(L) <->text501.htm#5470<->Discriminant(L) : RngLocA -&gt; RngElt
5<->ResidueClassField(L) <->text501.htm#5471<->ResidueClassField(L) : RngLocA -&gt; Rng, Map
5<->RelativeField(L, m) <->text501.htm#5472<->RelativeField(L, m) : RngLocA, Map -&gt; RngLocA, Map, Map
3<->predicates :<->text501.htm#5473<->predicates :: Predicates on Fields (GENERAL p-ADIC EXTENSIONS)
5<->IsRamified(L) <->text501.htm#5474<->IsRamified(L) : RngLocA -&gt; BoolElt
5<->IsWildlyRamified :: IsTamelyRamified(L) <->text501.htm#5475<->IsWildlyRamified :: IsTamelyRamified(L) : RngLocA -&gt; BoolElt
5<->IsTamelyRamified(L) <->text501.htm#5475<->IsTamelyRamified(L) : RngLocA -&gt; BoolElt
5<->IsTotallyRamified(L) <->text501.htm#5476<->IsTotallyRamified(L) : RngLocA -&gt; BoolElt
5<->IsUnramified(L) <->text501.htm#5477<->IsUnramified(L) : RngLocA -&gt; BoolElt
3<->predicates :<->text501.htm#5473<->predicates :: Predicates on Fields (GENERAL p-ADIC EXTENSIONS)
3<->operations :<->text501.htm<->operations :: Operations with Fields (GENERAL p-ADIC EXTENSIONS)
3<->maximal-order :<->text502.htm<->maximal-order :: Maximal Order (GENERAL p-ADIC EXTENSIONS)
5<->IntegralBasis(L) <->text502.htm#5479<->IntegralBasis(L) : RngLocA -&gt; SeqEnum
5<->IsIntegral(a) <->text502.htm#5480<->IsIntegral(a) : RngLocAElt -&gt; BoolElt, SeqEnum
4<->RngLocA_max-order (Example H48E5)<->text502.htm#5481<->RngLocA_max-order (Example H48E5)
4<->Example-max-order :<->text502.htm#5481<->Example-max-order :: RngLocA_max-order (Example H48E5)
3<->maximal-order :<->text502.htm<->maximal-order :: Maximal Order (GENERAL p-ADIC EXTENSIONS)
3<->maps :<->text503.htm<->maps :: Homomorphisms (GENERAL p-ADIC EXTENSIONS)
5<->hom <->text503.htm#5483<->hom< L $\rightarrow$ R | cfm, a > : RngLocA, Rng, Map, RngElt -> Map
5<->hom< L -> R | a > <->text503.htm#5483<->hom&lt; L -&gt; R | a &gt; : RngLocA, Rng, RngElt -&gt; Map
3<->maps :<->text503.htm<->maps :: Homomorphisms (GENERAL p-ADIC EXTENSIONS)
3<->galois :<->text504.htm<->galois :: Automorphisms and Galois Theory (GENERAL p-ADIC EXTENSIONS)
5<->FrobeniusAutomorphism(L) <->text504.htm#5485<->FrobeniusAutomorphism(L) : RngLocA -&gt; Map
5<->AutomorphismGroup(L) <->text504.htm#5486<->AutomorphismGroup(L) : RngLocA -&gt; Grp, Map
5<->InertiaGroup :: DecompositionGroup(L) <->text504.htm#5487<->InertiaGroup :: DecompositionGroup(L) : RngLocA -&gt; GrpPerm
5<->RamificationGroup :: DecompositionGroup(L) <->text504.htm#5487<->RamificationGroup :: DecompositionGroup(L) : RngLocA -&gt; GrpPerm
5<->DecompositionGroup(L) <->text504.htm#5487<->DecompositionGroup(L) : RngLocA -&gt; GrpPerm
5<->FixedField(L, G) <->text504.htm#5488<->FixedField(L, G) : RngLocA, GrpPerm -&gt; RngLocA
4<->RngLocA_auto-gal (Example H48E6)<->text504.htm#5489<->RngLocA_auto-gal (Example H48E6)
4<->Example-auto-gal :<->text504.htm#5489<->Example-auto-gal :: RngLocA_auto-gal (Example H48E6)
3<->galois :<->text504.htm<->galois :: Automorphisms and Galois Theory (GENERAL p-ADIC EXTENSIONS)
3<->elements :<->text505.htm<->elements :: Elements Operations (GENERAL p-ADIC EXTENSIONS)
5<->L ! r <->text505.htm#5491<->L ! r : RngLocA, Any -&gt; RngLocAElt
5<->L . i <->text505.htm#5492<->L . i : RngLocA, RngIntElt -&gt; RngLocAElt
5<->InertialElement(L) <->text505.htm#5493<->InertialElement(L) : RngLocA -&gt; RngLocAElt
5<->UniformizingElement(L) <->text505.htm#5494<->UniformizingElement(L) : RngLocA -&gt; RngLocAElt
3<->elt-arith :<->text505.htm#5495<->elt-arith :: Arithmetic (GENERAL p-ADIC EXTENSIONS)
3<->elt-predicates :<->text505.htm#5496<->elt-predicates :: Predicates on Elements (GENERAL p-ADIC EXTENSIONS)
5<->a eq b <->text505.htm#5497<->a eq b : RngLocAElt, RngLocAElt -&gt; BoolElt
5<->IsMinusOne :: IsOne(a) <->text505.htm#5498<->IsMinusOne :: IsOne(a) : RngLocAElt -&gt; BoolElt
5<->IsOne(a) <->text505.htm#5498<->IsOne(a) : RngLocAElt -&gt; BoolElt
5<->IsWeaklyZero(a) <->text505.htm#5499<->IsWeaklyZero(a) : RngLocAElt -&gt; BoolElt
5<->IsZero(a) <->text505.htm#5500<->IsZero(a) : RngLocAElt -&gt; BoolElt
3<->elt-predicates :<->text505.htm#5496<->elt-predicates :: Predicates on Elements (GENERAL p-ADIC EXTENSIONS)
3<->elt-ops :<->text505.htm#5501<->elt-ops :: Other Operations on Elements (GENERAL p-ADIC EXTENSIONS)
5<->Valuation(a) <->text505.htm#5502<->Valuation(a) : RngLocAElt -&gt; RngExtReElt
5<->RelativePrecision(a) <->text505.htm#5503<->RelativePrecision(a) : RngLocAElt -&gt; RngExtReElt
5<->Eltseq(a) <->text505.htm#5504<->Eltseq(a) : RngLocAElt -&gt; SeqEnum
5<->RepresentationMatrix(a) <->text505.htm#5505<->RepresentationMatrix(a) : RngLocAElt -&gt; AlgMatElt
5<->Norm(a, F) <->text505.htm#5506<->Norm(a, F) : RngLocAElt, Rng -> RngElt
5<->Trace :: Norm(a) <->text505.htm#5506<->Trace :: Norm(a) : RngLocAElt -&gt; RngElt
5<->Trace(a, F) : RngLocAElt, Rng -> RngElt :: Norm(a) <->text505.htm#5506<->Trace(a, F) : RngLocAElt, Rng -> RngElt :: Norm(a) : RngLocAElt -&gt; RngElt
5<->MinimalPolynomial :: Norm(a) <->text505.htm#5506<->MinimalPolynomial :: Norm(a) : RngLocAElt -&gt; RngElt
5<->MinimalPolynomial(a, F) : RngLocAElt -> RngUPolElt :: Norm(a) <->text505.htm#5506<->MinimalPolynomial(a, F) : RngLocAElt -> RngUPolElt :: Norm(a) : RngLocAElt -&gt; RngElt
5<->Norm(a) <->text505.htm#5506<->Norm(a) : RngLocAElt -&gt; RngElt
4<->RngLocA_elts (Example H48E7)<->text505.htm#5507<->RngLocA_elts (Example H48E7)
4<->Example-elts :<->text505.htm#5507<->Example-elts :: RngLocA_elts (Example H48E7)
3<->elt-ops :<->text505.htm#5501<->elt-ops :: Other Operations on Elements (GENERAL p-ADIC EXTENSIONS)
3<->elements :<->text505.htm<->elements :: Elements Operations (GENERAL p-ADIC EXTENSIONS)
3<->poly_fact :<->text506.htm<->poly_fact :: Polynomial Factorization (GENERAL p-ADIC EXTENSIONS)
5<->Factorization(f) <->text506.htm#5509<->Factorization(f) : RngUPolElt[RngLocA] -&gt; SeqEnum, RngElt, Any
5<->SuggestedPrecision(f) <->text506.htm#5510<->SuggestedPrecision(f) : RngUPolElt[RngLocA] -&gt; RngIntElt
5<->Roots(f, R) <->text506.htm#5511<->Roots(f, R) : RngUPolElt, RngLocA -> SeqEnum
5<->Roots(f) <->text506.htm#5511<->Roots(f) : RngUPolElt[RngLocA] -&gt; SeqEnum
4<->RngLocA_poly-fact (Example H48E8)<->text506.htm#5512<->RngLocA_poly-fact (Example H48E8)
4<->Example-poly-fact :<->text506.htm#5512<->Example-poly-fact :: RngLocA_poly-fact (Example H48E8)
3<->poly_fact :<->text506.htm<->poly_fact :: Polynomial Factorization (GENERAL p-ADIC EXTENSIONS)
3<->local-arbitrary :<->text498.htm<->local-arbitrary :: GENERAL p-ADIC EXTENSIONS
3<->series-power-Laurent :<->text509.htm<->series-power-Laurent :: POWER, LAURENT AND PUISEUX SERIES
3<->power series :<->text510.htm<->power series :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->Laurent series :<->text510.htm<->Laurent series :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->Puiseux series :<->text510.htm<->Puiseux series :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->PARI :<->text510.htm<->PARI :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->introduction :<->text510.htm<->introduction :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->kinds :<->text510.htm#5517<->kinds :: Kinds of Series (POWER, LAURENT AND PUISEUX SERIES)
3<->puiseux :<->text510.htm#5518<->puiseux :: Puiseux Series (POWER, LAURENT AND PUISEUX SERIES)
3<->representation :<->text510.htm#5519<->representation :: Representation of Series (POWER, LAURENT AND PUISEUX SERIES)
3<->precision :<->text510.htm#5520<->precision :: Precision (POWER, LAURENT AND PUISEUX SERIES)
3<->fixed-precision :<->text510.htm#5521<->fixed-precision :: Free and Fixed Precision (POWER, LAURENT AND PUISEUX SERIES)
3<->equality :<->text510.htm#5522<->equality :: Equality (POWER, LAURENT AND PUISEUX SERIES)
3<->polynomials :<->text510.htm#5523<->polynomials :: Polynomials over Series Rings (POWER, LAURENT AND PUISEUX SERIES)
3<->introduction :<->text510.htm<->introduction :: Introduction (POWER, LAURENT AND PUISEUX SERIES)
3<->creation :<->text511.htm<->creation :: Creation Functions (POWER, LAURENT AND PUISEUX SERIES)
3<->structure :<->text511.htm#5525<->structure :: Creation of Structures (POWER, LAURENT AND PUISEUX SERIES)
5<->PowerSeriesRing(R, p) <->text511.htm#5526<->PowerSeriesRing(R, p) : Rng, RngIntElt -> RngSerPow
5<->PowerSeriesRing(R) <->text511.htm#5526<->PowerSeriesRing(R) : Rng -&gt; RngSerPow
5<->LaurentSeriesRing(R, p) <->text511.htm#5527<->LaurentSeriesRing(R, p) : Rng, RngIntElt -> RngSerLaur
5<->LaurentSeriesRing(R) <->text511.htm#5527<->LaurentSeriesRing(R) : Rng -&gt; RngSerLaur
5<->PuiseuxSeriesRing(R, p) <->text511.htm#5528<->PuiseuxSeriesRing(R, p) : Rng, RngIntElt -> RngSerPuis
5<->PuiseuxSeriesRing(R) <->text511.htm#5528<->PuiseuxSeriesRing(R) : Rng -&gt; RngSerPuis
4<->RngSer_Creation (Example H49E1)<->text511.htm#5529<->RngSer_Creation (Example H49E1)
4<->Example-Creation :<->text511.htm#5529<->Example-Creation :: RngSer_Creation (Example H49E1)
3<->structure :<->text511.htm#5525<->structure :: Creation of Structures (POWER, LAURENT AND PUISEUX SERIES)
3<->options :<->text511.htm#5530<->options :: Special Options (POWER, LAURENT AND PUISEUX SERIES)
5<->AssertAttribute(S, "DefaultPrecision", n) <->text511.htm#5531<->AssertAttribute(S, "DefaultPrecision", n) : RngSer, MonStgElt, RngIntElt -&gt;
5<->HasAttribute(S, "DefaultPrecision") <->text511.htm#5532<->HasAttribute(S, "DefaultPrecision") : RngSer, MonStgElt -&gt; BoolElt, RngIntElt
5<->AssignNames(~S, ["x"]) <->text511.htm#5533<->AssignNames(~S, ["x"]) : RngSer, [ MonStgElt ] -&gt;
5<->. :: Name(S, 1) <->text511.htm#5534<->. :: Name(S, 1) : RngSer, RngIntElt -&gt; RngSerElt
5<->Name(S, 1) <->text511.htm#5534<->Name(S, 1) : RngSer, RngIntElt -> RngSerElt
5<->S . 1 : RngSer, RngIntElt -> RngSerElt :: Name(S, 1) <->text511.htm#5534<->S . 1 : RngSer, RngIntElt -> RngSerElt :: Name(S, 1) : RngSer, RngIntElt -&gt; RngSerElt
5<->Name(S, 1) <->text511.htm#5534<->Name(S, 1) : RngSer, RngIntElt -&gt; RngSerElt
3<->options :<->text511.htm#5530<->options :: Special Options (POWER, LAURENT AND PUISEUX SERIES)
3<->creation-element :<->text511.htm#5535<->creation-element :: Creation of Elements (POWER, LAURENT AND PUISEUX SERIES)
5<->UniformizingElement :: R . 1 <->text511.htm#5536<->UniformizingElement :: R . 1 : RngSer, RngInt -&gt; RngSerElt
5<->R . 1 <->text511.htm#5536<->R . 1 : RngSer, RngInt -&gt; RngSerElt
5<->elt< R | v, [ a1, ..., ad], p > <->text511.htm#5537<->elt&lt; R | v, [ a<sub>1</sub>, ..., a<sub>d</sub>], p &gt; : RngIntElt, SeqEnum, RngIntElt -&gt; RngSerElt
5<->R ! s <->text511.htm#5538<->R ! s : RngSer, SeqEnum -&gt; RngSerElt
5<->BigO(f) <->text511.htm#5539<->BigO(f) : RngSerElt -&gt; RngIntElt
3<->creation-element :<->text511.htm#5535<->creation-element :: Creation of Elements (POWER, LAURENT AND PUISEUX SERIES)
3<->creation :<->text511.htm<->creation :: Creation Functions (POWER, LAURENT AND PUISEUX SERIES)
3<->operation-structure :<->text512.htm<->operation-structure :: Structure Operations (POWER, LAURENT AND PUISEUX SERIES)
3<->related :<->text512.htm#5541<->related :: Related Structures (POWER, LAURENT AND PUISEUX SERIES)
5<->CoefficientRing :: BaseRing(R) <->text512.htm#5542<->CoefficientRing :: BaseRing(R) : RngSer -&gt; Rng
5<->BaseRing(R) <->text512.htm#5542<->BaseRing(R) : RngSer -&gt; Rng
5<->Integers :: IntegerRing(R) <->text512.htm#5543<->Integers :: IntegerRing(R) : RngSer -&gt; RngSerPow
5<->RingOfIntegers :: IntegerRing(R) <->text512.htm#5543<->RingOfIntegers :: IntegerRing(R) : RngSer -&gt; RngSerPow
5<->IntegerRing(R) <->text512.htm#5543<->IntegerRing(R) : RngSer -&gt; RngSerPow
5<->FieldOfFractions(R) <->text512.htm#5544<->FieldOfFractions(R) : RngSer -&gt; RngSerLaur
5<->ChangePrecision($\sim$R, r) <->text512.htm#5545<->ChangePrecision($\sim$R, r) : RngSer, Any -> RngSer
5<->ChangePrecision(R, r) <->text512.htm#5545<->ChangePrecision(R, r) : RngSer, Any -&gt; RngSer
5<->ChangeRing(R, C) <->text512.htm#5546<->ChangeRing(R, C) : RngSer, Rng -&gt; RngSer, Map
5<->ResidueClassField(R) <->text512.htm#5547<->ResidueClassField(R) : RngSer -&gt; Rng, Map
3<->related :<->text512.htm#5541<->related :: Related Structures (POWER, LAURENT AND PUISEUX SERIES)
3<->invariant :<->text512.htm#5548<->invariant :: Invariants (POWER, LAURENT AND PUISEUX SERIES)
5<->GetPrecision :: Precision(R) <->text512.htm#5549<->GetPrecision :: Precision(R) : RngSer -&gt; ExtReElt
5<->Precision(R) <->text512.htm#5549<->Precision(R) : RngSer -&gt; ExtReElt
3<->invariant :<->text512.htm#5548<->invariant :: Invariants (POWER, LAURENT AND PUISEUX SERIES)
3<->boolean :<->text512.htm#5550<->boolean :: Ring Predicates and Booleans (POWER, LAURENT AND PUISEUX SERIES)
3<->operation-structure :<->text512.htm<->operation-structure :: Structure Operations (POWER, LAURENT AND PUISEUX SERIES)
3<->operation-element :<->text513.htm<->operation-element :: Basic Element Operations (POWER, LAURENT AND PUISEUX SERIES)
3<->parent-category :<->text513.htm#5552<->parent-category :: Parent and Category (POWER, LAURENT AND PUISEUX SERIES)
3<->arithmetic :<->text513.htm#5553<->arithmetic :: Arithmetic Operators (POWER, LAURENT AND PUISEUX SERIES)
3<->equality-membership :<->text513.htm#5554<->equality-membership :: Equality and Membership (POWER, LAURENT AND PUISEUX SERIES)
3<->element-Boolean :<->text513.htm#5555<->element-Boolean :: Predicates on Ring Elements (POWER, LAURENT AND PUISEUX SERIES)
5<->IsWeaklyZero(f) <->text513.htm#5556<->IsWeaklyZero(f) : RngSerElt -&gt; BoolElt
5<->IsWeaklyEqual(f, g) <->text513.htm#5557<->IsWeaklyEqual(f, g) : RngSerElt, RngSerElt -&gt; BoolElt
5<->IsIdentical(f, g) <->text513.htm#5558<->IsIdentical(f, g) : RngSerElt, RngSerElt -&gt; BoolElt
3<->element-Boolean :<->text513.htm#5555<->element-Boolean :: Predicates on Ring Elements (POWER, LAURENT AND PUISEUX SERIES)
3<->precision :<->text513.htm#5559<->precision :: Precision (POWER, LAURENT AND PUISEUX SERIES)
5<->AbsolutePrecision(f) <->text513.htm#5560<->AbsolutePrecision(f) : RngSerElt -&gt; RngIntElt
5<->RelativePrecision(f) <->text513.htm#5561<->RelativePrecision(f) : RngSerElt -&gt; RngIntElt
5<->ChangePrecision(f, r) <->text513.htm#5562<->ChangePrecision(f, r) : RngSerElt, Infty -> RngSerElt
5<->ChangePrecision($\sim$f, r) <->text513.htm#5562<->ChangePrecision($\sim$f, r) : RngSerElt, RngIntElt -> 
5<->ChangePrecision($\sim$f, r) <->text513.htm#5562<->ChangePrecision($\sim$f, r) : RngSerElt, Infty ->
5<->ChangePrecision(f, r) <->text513.htm#5562<->ChangePrecision(f, r) : RngSerElt, RngIntElt -&gt; RngSerElt
3<->precision :<->text513.htm#5559<->precision :: Precision (POWER, LAURENT AND PUISEUX SERIES)
3<->coefficient-degree :<->text513.htm#5563<->coefficient-degree :: Coefficients and Degree (POWER, LAURENT AND PUISEUX SERIES)
5<->ElementToSequence :: Coefficients(f) <->text513.htm#5564<->ElementToSequence :: Coefficients(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt
5<->Eltseq :: Coefficients(f) <->text513.htm#5564<->Eltseq :: Coefficients(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt
5<->Coefficients(f) <->text513.htm#5564<->Coefficients(f) : RngSerElt -&gt; [ RngElt ], RngIntElt, RngIntElt
5<->Coefficient(f, i) <->text513.htm#5565<->Coefficient(f, i) : RngSerElt, RngElt -&gt; RngElt
5<->LeadingCoefficient(f) <->text513.htm#5566<->LeadingCoefficient(f) : RngSerElt -&gt; RngElt
5<->LeadingTerm(f) <->text513.htm#5567<->LeadingTerm(f) : RngSerElt -&gt; RngElt
5<->Truncate(f) <->text513.htm#5568<->Truncate(f) : RngSerElt -&gt; RngSerElt
5<->ExponentDenominator(f) <->text513.htm#5569<->ExponentDenominator(f) : RngMSerElt -&gt; RngElt
5<->Degree(f) <->text513.htm#5570<->Degree(f) : RngSerElt -&gt; RngIntElt
5<->Valuation(f) <->text513.htm#5571<->Valuation(f) : RngSerElt -&gt; RngIntElt
5<->ExponentDenominator(f) <->text513.htm#5572<->ExponentDenominator(f) : RngSerElt -&gt; RngIntElt
3<->coefficient-degree :<->text513.htm#5563<->coefficient-degree :: Coefficients and Degree (POWER, LAURENT AND PUISEUX SERIES)
3<->evaluation-derivative :<->text513.htm#5573<->evaluation-derivative :: Evaluation and Derivative (POWER, LAURENT AND PUISEUX SERIES)
5<->Derivative(f) <->text513.htm#5574<->Derivative(f) : RngSerElt -&gt; RngSerElt
5<->Derivative(f, n) <->text513.htm#5575<->Derivative(f, n) : RngSerElt, RngIntElt -&gt; RngSerElt
5<->Integral(f) <->text513.htm#5576<->Integral(f) : RngSerElt -&gt; RngSerElt
5<->Evaluate(f, s) <->text513.htm#5577<->Evaluate(f, s) : RngSerElt, RngElt -&gt; RngElt
5<->Laplace(f) <->text513.htm#5578<->Laplace(f) : RngSerElt -&gt; RngSerElt
3<->evaluation-derivative :<->text513.htm#5573<->evaluation-derivative :: Evaluation and Derivative (POWER, LAURENT AND PUISEUX SERIES)
3<->square-root :<->text513.htm#5579<->square-root :: Square Root (POWER, LAURENT AND PUISEUX SERIES)
5<->Sqrt :: SquareRoot(f) <->text513.htm#5580<->Sqrt :: SquareRoot(f) : RngSerElt -&gt; RngSerElt
5<->SquareRoot(f) <->text513.htm#5580<->SquareRoot(f) : RngSerElt -&gt; RngSerElt
3<->square-root :<->text513.htm#5579<->square-root :: Square Root (POWER, LAURENT AND PUISEUX SERIES)
3<->composition-reversion :<->text513.htm#5581<->composition-reversion :: Composition and Reversion (POWER, LAURENT AND PUISEUX SERIES)
5<->Composition(f, g) <->text513.htm#5582<->Composition(f, g) : RngSerElt, RngSerElt -&gt; RngSerElt
5<->Reverse :: Reversion(f) <->text513.htm#5583<->Reverse :: Reversion(f) : RngSerElt -&gt; RngSerElt
5<->Reversion(f) <->text513.htm#5583<->Reversion(f) : RngSerElt -&gt; RngSerElt
5<->Convolution(f, g) <->text513.htm#5584<->Convolution(f, g) : RngSerElt, RngSerElt -&gt; RngSerElt
4<->RngSer_CompositionReversion (Example H49E2)<->text513.htm#5585<->RngSer_CompositionReversion (Example H49E2)
4<->Example-CompositionReversion :<->text513.htm#5585<->Example-CompositionReversion :: RngSer_CompositionReversion (Example H49E2)
3<->composition-reversion :<->text513.htm#5581<->composition-reversion :: Composition and Reversion (POWER, LAURENT AND PUISEUX SERIES)
3<->operation-element :<->text513.htm<->operation-element :: Basic Element Operations (POWER, LAURENT AND PUISEUX SERIES)
3<->transcendental :<->text514.htm<->transcendental :: Transcendental Functions (POWER, LAURENT AND PUISEUX SERIES)
3<->logarithm-exponential :<->text514.htm#5587<->logarithm-exponential :: Exponential and Logarithmic Functions (POWER, LAURENT AND PUISEUX SERIES)
5<->Exp(f) <->text514.htm#5588<->Exp(f) : RngSerElt -&gt; RngSerElt
5<->Log(f) <->text514.htm#5589<->Log(f) : RngSerElt -&gt; RngSerElt
4<->RngSer_Bernoulli (Example H49E3)<->text514.htm#5590<->RngSer_Bernoulli (Example H49E3)
4<->Example-Bernoulli :<->text514.htm#5590<->Example-Bernoulli :: RngSer_Bernoulli (Example H49E3)
3<->logarithm-exponential :<->text514.htm#5587<->logarithm-exponential :: Exponential and Logarithmic Functions (POWER, LAURENT AND PUISEUX SERIES)
3<->trigonometric :<->text514.htm#5591<->trigonometric :: Trigonometric Functions and their Inverses (POWER, LAURENT AND PUISEUX SERIES)
5<->Sin(f) <->text514.htm#5592<->Sin(f) : RngSerElt -&gt; RngSerElt
5<->Cos(f) <->text514.htm#5593<->Cos(f) : RngSerElt -&gt; RngSerElt
5<->Sincos(f) <->text514.htm#5594<->Sincos(f) : RngSerElt -&gt; RngSerElt
5<->Tan(f) <->text514.htm#5595<->Tan(f) : RngSerElt -&gt; RngSerElt
5<->Arcsin(f) <->text514.htm#5596<->Arcsin(f) : RngSerElt -&gt; RngSerElt
5<->Arccos(f) <->text514.htm#5597<->Arccos(f) : RngSerElt -&gt; RngSerElt
5<->Arctan(f) <->text514.htm#5598<->Arctan(f) : RngSerElt -&gt; RngSerElt
3<->trigonometric :<->text514.htm#5591<->trigonometric :: Trigonometric Functions and their Inverses (POWER, LAURENT AND PUISEUX SERIES)
3<->hyperbolic :<->text514.htm#5599<->hyperbolic :: Hyperbolic Functions and their Inverses (POWER, LAURENT AND PUISEUX SERIES)
5<->Sinh(f) <->text514.htm#5600<->Sinh(f) : RngSerElt -&gt; RngSerElt
5<->Cosh(f) <->text514.htm#5601<->Cosh(f) : RngSerElt -&gt; RngSerElt
5<->Tanh(f) <->text514.htm#5602<->Tanh(f) : RngSerElt -&gt; RngSerElt
5<->Argsinh(f) <->text514.htm#5603<->Argsinh(f) : RngSerElt -&gt; RngSerElt
5<->Argcosh(f) <->text514.htm#5604<->Argcosh(f) : RngSerElt -&gt; RngSerElt
5<->Argtanh(f) <->text514.htm#5605<->Argtanh(f) : RngSerElt -&gt; RngSerElt
3<->hyperbolic :<->text514.htm#5599<->hyperbolic :: Hyperbolic Functions and their Inverses (POWER, LAURENT AND PUISEUX SERIES)
3<->transcendental :<->text514.htm<->transcendental :: Transcendental Functions (POWER, LAURENT AND PUISEUX SERIES)
3<->hypergeometric :<->text515.htm<->hypergeometric :: The Hypergeometric Series (POWER, LAURENT AND PUISEUX SERIES)
5<->HypergeometricSeries(a,b,c, z) <->text515.htm#5607<->HypergeometricSeries(a,b,c, z) : RngElt, RngElt, RngElt, RngElt -&gt; RngElt
3<->hypergeometric :<->text515.htm<->hypergeometric :: The Hypergeometric Series (POWER, LAURENT AND PUISEUX SERIES)
3<->polynomials :<->text516.htm<->polynomials :: Polynomials over Series Rings (POWER, LAURENT AND PUISEUX SERIES)
5<->HenselLift(f, L) <->text516.htm#5609<->HenselLift(f, L) : RngUPolElt[RngSerExt], SeqEnum[RngUPolElt] -> [RngUPolElt]
5<->HenselLift(f, L) <->text516.htm#5609<->HenselLift(f, L) : RngUPolElt[RngSer], SeqEnum[RngUPolElt] -&gt; [RngUPolElt]
5<->Factorization(f) <->text516.htm#5610<->Factorization(f) : RngUPolElt[RngSerLaur[FldFin]] -> [ < RngUPolElt[RngSerLaur], RngIntElt > ], RngSerLaurElt
5<->Factorization(f) <->text516.htm#5610<->Factorization(f) : RngUPolElt[RngSerExt] -> [ < RngUPolElt[RngSerExt], RngIntElt > ], RngSerExtElt
5<->Factorization(f) <->text516.htm#5610<->Factorization(f) : RngUPolElt[RngSerPow[FldFin]] -&gt; [ &lt; RngUPolElt[RngSerPow], RngIntElt &gt; ], RngSerPowElt
4<->RngSer_series_poly_fact (Example H49E4)<->text516.htm#5611<->RngSer_series_poly_fact (Example H49E4)
4<->Example-series_poly_fact :<->text516.htm#5611<->Example-series_poly_fact :: RngSer_series_poly_fact (Example H49E4)
3<->polynomials :<->text516.htm<->polynomials :: Polynomials over Series Rings (POWER, LAURENT AND PUISEUX SERIES)
3<->extensions :<->text517.htm<->extensions :: Extensions of Series Rings (POWER, LAURENT AND PUISEUX SERIES)
3<->construct :<->text517.htm#5613<->construct :: Constructions of Extensions (POWER, LAURENT AND PUISEUX SERIES)
5<->UnramifiedExtension(R, f) <->text517.htm#5614<->UnramifiedExtension(R, f) : RngSerLaur[FldFin], RngUPolElt -> RngSerExt
5<->UnramifiedExtension(R, f) <->text517.htm#5614<->UnramifiedExtension(R, f) : RngSerExt, RngUPolElt -> RngSerExt
5<->UnramifiedExtension(R, f) <->text517.htm#5614<->UnramifiedExtension(R, f) : RngSerPow[FldFin], RngUPolElt -&gt; RngSerExt
5<->TotallyRamifiedExtension(R, f) <->text517.htm#5615<->TotallyRamifiedExtension(R, f) : RngSerLaur[FldFin], RngUPolElt -> RngSerExt
5<->TotallyRamifiedExtension(R, f) <->text517.htm#5615<->TotallyRamifiedExtension(R, f) : RngSerExt, RngUPolElt -> RngSerExt
5<->TotallyRamifiedExtension(R, f) <->text517.htm#5615<->TotallyRamifiedExtension(R, f) : RngSerPow[FldFin], RngUPolElt -&gt; RngSerExt
5<->ChangePrecision(\til E, r) <->text517.htm#5616<->ChangePrecision(\til E, r) : RngSerExt, RngIntElt ->
5<->ChangePrecision(E, r) <->text517.htm#5616<->ChangePrecision(E, r) : RngSerExt, RngIntElt -&gt; RngSerExt
5<->FieldOfFractions(E) <->text517.htm#5617<->FieldOfFractions(E) : RngSerExt -&gt; RngSerExt
4<->RngSer_extensions_eg (Example H49E5)<->text517.htm#5618<->RngSer_extensions_eg (Example H49E5)
4<->Example-extensions_eg :<->text517.htm#5618<->Example-extensions_eg :: RngSer_extensions_eg (Example H49E5)
3<->construct :<->text517.htm#5613<->construct :: Constructions of Extensions (POWER, LAURENT AND PUISEUX SERIES)
3<->operations :<->text517.htm#5619<->operations :: Operations on Extensions (POWER, LAURENT AND PUISEUX SERIES)
5<->GetPrecision :: Precision(E) <->text517.htm#5620<->GetPrecision :: Precision(E) : RngSerExt -&gt; RngIntElt
5<->Precision(E) <->text517.htm#5620<->Precision(E) : RngSerExt -&gt; RngIntElt
5<->BaseRing :: CoefficientRing(E) <->text517.htm#5621<->BaseRing :: CoefficientRing(E) : RngSerExt -&gt; Rng
5<->CoefficientRing(E) <->text517.htm#5621<->CoefficientRing(E) : RngSerExt -&gt; Rng
5<->DefiningPolynomial(E) <->text517.htm#5622<->DefiningPolynomial(E) : RngSerExt -&gt; RngUPolElt
5<->InertiaDegree(E) <->text517.htm#5623<->InertiaDegree(E) : RngSerExt -&gt; RngIntElt
5<->RamificationDegree :: RamificationIndex(E) <->text517.htm#5624<->RamificationDegree :: RamificationIndex(E) : RngSerExt -&gt; RngIntElt
5<->RamificationIndex(E) <->text517.htm#5624<->RamificationIndex(E) : RngSerExt -&gt; RngIntElt
5<->ResidueClassField(E) <->text517.htm#5625<->ResidueClassField(E) : RngSerExt -&gt; FldFin
5<->UniformizingElement(E) <->text517.htm#5626<->UniformizingElement(E) : RngSerExt -&gt; RngSerExtElt
5<->Integers :: IntegerRing(E) <->text517.htm#5627<->Integers :: IntegerRing(E) : RngSerExt -&gt; RngSerExt
5<->RingOfIntegers :: IntegerRing(E) <->text517.htm#5627<->RingOfIntegers :: IntegerRing(E) : RngSerExt -&gt; RngSerExt
5<->IntegerRing(E) <->text517.htm#5627<->IntegerRing(E) : RngSerExt -&gt; RngSerExt
5<->E1 eq E2 <->text517.htm#5628<->E1 eq E2 : RngSerExt, RngSerExt -&gt; BoolElt
5<->E . i <->text517.htm#5629<->E . i : RngSerExt, RngIntElt -&gt; RngSerExtElt
5<->AssignNames(~E, S) <->text517.htm#5630<->AssignNames(~E, S) : RngSerExt, [ MonStgElt ] -&gt;
4<->RngSer_ext-ops (Example H49E6)<->text517.htm#5631<->RngSer_ext-ops (Example H49E6)
4<->Example-ext-ops :<->text517.htm#5631<->Example-ext-ops :: RngSer_ext-ops (Example H49E6)
3<->operations :<->text517.htm#5619<->operations :: Operations on Extensions (POWER, LAURENT AND PUISEUX SERIES)
3<->elements :<->text517.htm#5632<->elements :: Elements of Extensions (POWER, LAURENT AND PUISEUX SERIES)
5<->Valuation(e) <->text517.htm#5633<->Valuation(e) : RngSerExtElt -&gt; RngIntElt
5<->RelativePrecision(e) <->text517.htm#5634<->RelativePrecision(e) : RngSerExtElt -&gt; RngIntElt
5<->AbsolutePrecision(e) <->text517.htm#5635<->AbsolutePrecision(e) : RngSerExtElt -&gt; RngIntElt
5<->Eltseq :: Coefficients(e) <->text517.htm#5636<->Eltseq :: Coefficients(e) : RngSerExtElt -&gt; [ RngElt ]
5<->ElementToSequence :: Coefficients(e) <->text517.htm#5636<->ElementToSequence :: Coefficients(e) : RngSerExtElt -&gt; [ RngElt ]
5<->Coefficients(e) <->text517.htm#5636<->Coefficients(e) : RngSerExtElt -&gt; [ RngElt ]
4<->RngSer_serext-simple (Example H49E7)<->text517.htm#5637<->RngSer_serext-simple (Example H49E7)
4<->Example-serext-simple :<->text517.htm#5637<->Example-serext-simple :: RngSer_serext-simple (Example H49E7)
3<->elements :<->text517.htm#5632<->elements :: Elements of Extensions (POWER, LAURENT AND PUISEUX SERIES)
3<->optimize :<->text517.htm#5638<->optimize :: Optimized Representation (POWER, LAURENT AND PUISEUX SERIES)
5<->OptimisedRepresentation :: OptimizedRepresentation(E) <->text517.htm#5639<->OptimisedRepresentation :: OptimizedRepresentation(E) : RngSerExt -&gt; RngSer, Map
5<->OptimizedRepresentation(E) <->text517.htm#5639<->OptimizedRepresentation(E) : RngSerExt -&gt; RngSer, Map
4<->RngSer_opt-rep (Example H49E8)<->text517.htm#5640<->RngSer_opt-rep (Example H49E8)
4<->Example-opt-rep :<->text517.htm#5640<->Example-opt-rep :: RngSer_opt-rep (Example H49E8)
3<->optimize :<->text517.htm#5638<->optimize :: Optimized Representation (POWER, LAURENT AND PUISEUX SERIES)
3<->extensions :<->text517.htm<->extensions :: Extensions of Series Rings (POWER, LAURENT AND PUISEUX SERIES)
3<->series-power-Laurent :<->text509.htm<->series-power-Laurent :: POWER, LAURENT AND PUISEUX SERIES
3<->lazy rings :<->text519.htm<->lazy rings :: LAZY POWER SERIES RINGS
3<->lazy :<->text519.htm<->lazy :: LAZY POWER SERIES RINGS
3<->RngLaz :<->text520.htm<->RngLaz :: Introduction (LAZY POWER SERIES RINGS)
3<->RngLazElt :<->text520.htm<->RngLazElt :: Introduction (LAZY POWER SERIES RINGS)
3<->introduction :<->text520.htm<->introduction :: Introduction (LAZY POWER SERIES RINGS)
3<->creation :<->text521.htm<->creation :: Creation of Lazy Series Rings (LAZY POWER SERIES RINGS)
5<->LazyPowerSeriesRing(C, n) <->text521.htm#5645<->LazyPowerSeriesRing(C, n) : Rng, RngIntElt -&gt; RngPowLaz
5<->ChangeRing(L, C) <->text521.htm#5646<->ChangeRing(L, C) : RngPowLaz, Rng -&gt; RngPowLaz, Map
4<->RngLaz_ring_create (Example H50E1)<->text521.htm#5647<->RngLaz_ring_create (Example H50E1)
4<->Example-ring_create :<->text521.htm#5647<->Example-ring_create :: RngLaz_ring_create (Example H50E1)
3<->creation :<->text521.htm<->creation :: Creation of Lazy Series Rings (LAZY POWER SERIES RINGS)
3<->ring_ops :<->text522.htm<->ring_ops :: Functions on Lazy Series Rings (LAZY POWER SERIES RINGS)
5<->R . i <->text522.htm#5649<->R . i : RngPowLaz, RngIntElt -&gt; RngPowLazElt
5<->AssignNames(~R,  S) <->text522.htm#5650<->AssignNames(~R,  S) : RngPowLaz, [MonStgElt] -&gt;
5<->CoefficientRing :: BaseRing(R) <->text522.htm#5651<->CoefficientRing :: BaseRing(R) : RngPowLaz -&gt; Rng
5<->BaseRing(R) <->text522.htm#5651<->BaseRing(R) : RngPowLaz -&gt; Rng
5<->Rank(R) <->text522.htm#5652<->Rank(R) : RngPowLaz -&gt; RngIntElt
5<->R1 eq R2 <->text522.htm#5653<->R1 eq R2 : RngPowLaz, RngPowLaz -&gt; BoolElt
4<->RngLaz_ring-ops (Example H50E2)<->text522.htm#5654<->RngLaz_ring-ops (Example H50E2)
4<->Example-ring-ops :<->text522.htm#5654<->Example-ring-ops :: RngLaz_ring-ops (Example H50E2)
3<->ring_ops :<->text522.htm<->ring_ops :: Functions on Lazy Series Rings (LAZY POWER SERIES RINGS)
3<->elements :<->text523.htm<->elements :: Elements (LAZY POWER SERIES RINGS)
3<->elt_creation :<->text523.htm#5656<->elt_creation :: Creation of Finite Lazy Series (LAZY POWER SERIES RINGS)
5<->R ! c <->text523.htm#5657<->R ! c : RngPowLaz, RngElt -&gt; RngPowLazElt
5<->R ! s <->text523.htm#5658<->R ! s : RngPowLaz, RngPowLazElt -&gt; RngPowLazElt
5<->R ! S <->text523.htm#5659<->R ! S : RngPowLaz, [RngElt] -&gt; RngPowLazElt
5<->LazySeries(R, f) <->text523.htm#5660<->LazySeries(R, f) : RngPowLaz, FldFunRatElt -> RngPowLazElt
5<->LazySeries(R, f) <->text523.htm#5660<->LazySeries(R, f) : RngPowLaz, RngUPolElt -> RngPowLazElt
5<->LazySeries(R, f) <->text523.htm#5660<->LazySeries(R, f) : RngPowLaz, RngMPolElt -&gt; RngPowLazElt
4<->RngLaz_elt-create-fin (Example H50E3)<->text523.htm#5661<->RngLaz_elt-create-fin (Example H50E3)
4<->Example-elt-create-fin :<->text523.htm#5661<->Example-elt-create-fin :: RngLaz_elt-create-fin (Example H50E3)
3<->elt_creation_map :<->text523.htm#5662<->elt_creation_map :: Creation of Lazy Series from Maps (LAZY POWER SERIES RINGS)
5<->elt<R | m> <->text523.htm#5663<->elt&lt;R | m&gt; : RngPowLaz, Map -&gt; RngPowLazElt
4<->RngLaz_maps-uni (Example H50E4)<->text523.htm#5664<->RngLaz_maps-uni (Example H50E4)
4<->Example-maps-uni :<->text523.htm#5664<->Example-maps-uni :: RngLaz_maps-uni (Example H50E4)
4<->RngLaz_maps-multi (Example H50E5)<->text523.htm#5665<->RngLaz_maps-multi (Example H50E5)
4<->Example-maps-multi :<->text523.htm#5665<->Example-maps-multi :: RngLaz_maps-multi (Example H50E5)
3<->elt_creation_map :<->text523.htm#5662<->elt_creation_map :: Creation of Lazy Series from Maps (LAZY POWER SERIES RINGS)
3<->elt_creation :<->text523.htm#5656<->elt_creation :: Creation of Finite Lazy Series (LAZY POWER SERIES RINGS)
3<->arith :<->text523.htm#5666<->arith :: Arithmetic with Lazy Series (LAZY POWER SERIES RINGS)
5<->s + t <->text523.htm#5667<->s + t : RngPowLazElt, RngPowLazElt -&gt; RngPowLazElt
5<->- s <->text523.htm#5668<->- s : RngPowLazElt -&gt; RngPowLazElt
5<->s - t <->text523.htm#5669<->s - t : RngPowLazElt, RngPowLazElt -&gt; RngPowLazElt
5<->s * t <->text523.htm#5670<->s * t : RngPowLazElt, RngPowLazElt -&gt; RngPowLazElt
5<->r + s <->text523.htm#5671<->r + s : RngElt, RngPowLazElt -> RngPowLazElt
5<->s + r <->text523.htm#5671<->s + r : RngPowLazElt, RngElt -&gt; RngPowLazElt
5<->s * c <->text523.htm#5672<->s * c : RngPowLazElt, RngElt -> RngPowLazElt
5<->c * s <->text523.htm#5672<->c * s : RngElt, RngPowLazElt -&gt; RngPowLazElt
5<->s * n <->text523.htm#5673<->s * n : RngPowLazElt, [RngIntElt] -&gt; RngPowLazElt
5<->s ^ n <->text523.htm#5674<->s ^ n : RngPowLazElt, RngIntElt -&gt; RngPowLazElt
4<->RngLaz_elt_arith (Example H50E6)<->text523.htm#5675<->RngLaz_elt_arith (Example H50E6)
4<->Example-elt_arith :<->text523.htm#5675<->Example-elt_arith :: RngLaz_elt_arith (Example H50E6)
3<->arith :<->text523.htm#5666<->arith :: Arithmetic with Lazy Series (LAZY POWER SERIES RINGS)
3<->coeffs :<->text523.htm#5676<->coeffs :: Finding Coefficients of Lazy Series (LAZY POWER SERIES RINGS)
5<->Coefficient(s, i) <->text523.htm#5677<->Coefficient(s, i) : RngPowLazElt, RngIntElt -&gt; RngElt
5<->Coefficient(s, T) <->text523.htm#5678<->Coefficient(s, T) : RngPowLazElt, SeqEnum -&gt; RngElt
5<->Coefficients(s, l, n) <->text523.htm#5679<->Coefficients(s, l, n) : RngPowLazElt, RngIntElt, RngIntElt -> [RngElt]
5<->Coefficients(s, n) <->text523.htm#5679<->Coefficients(s, n) : RngPowLazElt, RngIntElt -&gt; [RngElt]
5<->Valuation(s) <->text523.htm#5680<->Valuation(s) : RngPowLazElt -&gt; Any
5<->PrintToPrecision(s, n) <->text523.htm#5681<->PrintToPrecision(s, n) : RngPowLazElt, RngIntElt -&gt;
5<->PrintTermsOfDegree(s, l, n) <->text523.htm#5682<->PrintTermsOfDegree(s, l, n) : RngPowLazElt, RngIntElt, RngIntElt -&gt;
5<->LeadingCoefficient(s) <->text523.htm#5683<->LeadingCoefficient(s) : RngPowLazElt -&gt; RngElt
5<->LeadingTerm(s) <->text523.htm#5684<->LeadingTerm(s) : RngPowLazElt -&gt; RngPowLazElt
4<->RngLaz_elt_coeffs_spiral (Example H50E7)<->text523.htm#5685<->RngLaz_elt_coeffs_spiral (Example H50E7)
4<->Example-elt_coeffs_spiral :<->text523.htm#5685<->Example-elt_coeffs_spiral :: RngLaz_elt_coeffs_spiral (Example H50E7)
5<->CoefficientsNonSpiral(s, n) <->text523.htm#5686<->CoefficientsNonSpiral(s, n) : RngPowLazElt, RngIntElt -> SeqEnum
5<->CoefficientsNonSpiral(s, n) <->text523.htm#5686<->CoefficientsNonSpiral(s, n) : RngPowLazElt, [RngIntElt] -&gt; SeqEnum
5<->Index(s, i, n) <->text523.htm#5687<->Index(s, i, n) : RngPowLazElt, [RngIntElt], [RngIntElt] -&gt; RngIntElt
4<->RngLaz_coeff_non_spiral (Example H50E8)<->text523.htm#5688<->RngLaz_coeff_non_spiral (Example H50E8)
4<->Example-coeff_non_spiral :<->text523.htm#5688<->Example-coeff_non_spiral :: RngLaz_coeff_non_spiral (Example H50E8)
3<->coeffs :<->text523.htm#5676<->coeffs :: Finding Coefficients of Lazy Series (LAZY POWER SERIES RINGS)
3<->pred :<->text523.htm#5689<->pred :: Predicates on Lazy Series (LAZY POWER SERIES RINGS)
5<->s eq t <->text523.htm#5690<->s eq t : RngPowLazElt, RngPowLazElt -&gt; BoolElt
5<->IsZero(s) <->text523.htm#5691<->IsZero(s) : RngPowLazElt -&gt; BoolElt
5<->IsOne(s) <->text523.htm#5692<->IsOne(s) : RngPowLazElt -&gt; BoolElt
5<->IsMinusOne(s) <->text523.htm#5693<->IsMinusOne(s) : RngPowLazElt -&gt; BoolElt
5<->IsUnit(s) <->text523.htm#5694<->IsUnit(s) : RngPowLazElt -&gt; BoolElt
5<->IsWeaklyZero(s, n) <->text523.htm#5695<->IsWeaklyZero(s, n) : RngPowLazElt, RngIntElt -&gt; BoolElt
5<->IsWeaklyEqual(s, t, n) <->text523.htm#5696<->IsWeaklyEqual(s, t, n) : RngPowLazElt, RngPowLazElt, RngIntElt -&gt; BoolElt
3<->pred :<->text523.htm#5689<->pred :: Predicates on Lazy Series (LAZY POWER SERIES RINGS)
3<->other :<->text523.htm#5697<->other :: Other Functions on Lazy Series (LAZY POWER SERIES RINGS)
5<->Derivative(s, v) <->text523.htm#5698<->Derivative(s, v) : RngPowLazElt, RngIntElt -> RngPowLazElt
5<->Derivative(s, v, n) <->text523.htm#5698<->Derivative(s, v, n) : RngPowLazElt, RngIntElt, RngIntElt -> RngPowLazElt
5<->Derivative(s) <->text523.htm#5698<->Derivative(s) : RngPowLazElt -&gt; RngPowLazElt
5<->Integral(s, v) <->text523.htm#5699<->Integral(s, v) : RngPowLazElt, RngIntElt -> RngPowLazElt
5<->Integral(s) <->text523.htm#5699<->Integral(s) : RngPowLazElt -&gt; RngPowLazElt
5<->Evaluate(s, T) <->text523.htm#5700<->Evaluate(s, T) : RngPowLazElt, [RngPowLazElt] -> RngPowLazElt
5<->Evaluate(s, t) <->text523.htm#5700<->Evaluate(s, t) : RngPowLazElt, RngPowLazElt -&gt; RngPowLazElt
4<->RngLaz_eval (Example H50E9)<->text523.htm#5701<->RngLaz_eval (Example H50E9)
4<->Example-eval :<->text523.htm#5701<->Example-eval :: RngLaz_eval (Example H50E9)
5<->Sqrt :: SquareRoot(s) <->text523.htm#5702<->Sqrt :: SquareRoot(s) : RngPowLazElt -&gt; RngPowLazElt
5<->SquareRoot(s) <->text523.htm#5702<->SquareRoot(s) : RngPowLazElt -&gt; RngPowLazElt
5<->IsSquare(s) <->text523.htm#5703<->IsSquare(s) : RngPowLazElt -&gt; BoolElt, RngPowLazElt
5<->PolynomialCoefficient(s, i) <->text523.htm#5704<->PolynomialCoefficient(s, i) : RngPowLazElt, [RngIntElt] -> RngPowLazElt
5<->PolynomialCoefficient(s, i) <->text523.htm#5704<->PolynomialCoefficient(s, i) : RngPowLazElt, RngIntElt -&gt; RngPowLazElt
3<->other :<->text523.htm#5697<->other :: Other Functions on Lazy Series (LAZY POWER SERIES RINGS)
3<->elements :<->text523.htm<->elements :: Elements (LAZY POWER SERIES RINGS)
3<->lazy :<->text519.htm<->lazy :: LAZY POWER SERIES RINGS
3<->algebraic power series rings :<->text526.htm<->algebraic power series rings :: ALGEBRAIC POWER SERIES RINGS
3<->algebraic-power-series :<->text526.htm<->algebraic-power-series :: ALGEBRAIC POWER SERIES RINGS
3<->introduction :<->text527.htm<->introduction :: Introduction (ALGEBRAIC POWER SERIES RINGS)
3<->basics :<->text528.htm<->basics :: Basics (ALGEBRAIC POWER SERIES RINGS)
3<->RngPowAlgElt :<->text528.htm#5710<->RngPowAlgElt :: Data Structures (ALGEBRAIC POWER SERIES RINGS)
3<->data :<->text528.htm#5710<->data :: Data Structures (ALGEBRAIC POWER SERIES RINGS)
3<->verb :<->text528.htm#5711<->verb :: Verbose Output (ALGEBRAIC POWER SERIES RINGS)
3<->basics :<->text528.htm<->basics :: Basics (ALGEBRAIC POWER SERIES RINGS)
3<->cons :<->text529.htm<->cons :: Constructors (ALGEBRAIC POWER SERIES RINGS)
5<->PolyToSeries(s) <->text529.htm#5713<->PolyToSeries(s) : RngMPolElt -&gt; RngPowAlgElt
5<->AlgebraicPowerSeries(dp, ip, e)  <->text529.htm#5714<->AlgebraicPowerSeries(dp, ip, e)  :  RngUPolElt, RngMPolElt, RngIntElt -> RngPowAlgElt
5<->AlgebraicPowerSeries(dp, ip)  <->text529.htm#5714<->AlgebraicPowerSeries(dp, ip)  :  RngUPolElt, RngMPolElt -> RngPowAlgElt
5<->AlgebraicPowerSeries(dp, ip, L, e) <->text529.htm#5714<->AlgebraicPowerSeries(dp, ip, L, e) : RngUPolElt, RngMPolElt, Lat, RngIntElt -&gt; RngPowAlgElt
5<->EvaluationPowerSeries(s, nu, v) <->text529.htm#5715<->EvaluationPowerSeries(s, nu, v) : Tup, SeqEnum, SeqEnum -&gt; RngPowAlgElt
5<->ImplicitFunction(dp) <->text529.htm#5716<->ImplicitFunction(dp) : RngUPolElt -&gt; RngPowAlgElt
3<->puiseux :<->text529.htm#5717<->puiseux :: Rational Puiseux Expansions (ALGEBRAIC POWER SERIES RINGS)
5<->RationalPuiseux(p) <->text529.htm#5718<->RationalPuiseux(p) : RngUPolElt -&gt; Tup, SeqEnum, RngIntElt
4<->RngPowAlg_constructors (Example H51E1)<->text529.htm#5719<->RngPowAlg_constructors (Example H51E1)
4<->Example-constructors :<->text529.htm#5719<->Example-constructors :: RngPowAlg_constructors (Example H51E1)
3<->puiseux :<->text529.htm#5717<->puiseux :: Rational Puiseux Expansions (ALGEBRAIC POWER SERIES RINGS)
3<->cons :<->text529.htm<->cons :: Constructors (ALGEBRAIC POWER SERIES RINGS)
3<->accessors :<->text530.htm<->accessors :: Accessors and Expansion (ALGEBRAIC POWER SERIES RINGS)
5<->Domain(s) <->text530.htm#5721<->Domain(s) : RngPowAlgElt -&gt; RngMPol
5<->ExponentLattice(s) <->text530.htm#5722<->ExponentLattice(s) : RngPowAlgElt -&gt; Tup
5<->DefiningPolynomial(s) <->text530.htm#5723<->DefiningPolynomial(s) : RngPowAlgElt -&gt; RngUPolElt
5<->Order(s) <->text530.htm#5724<->Order(s) : RngPowAlgElt -&gt; RngIntElt
5<->Expand(s,ord) <->text530.htm#5725<->Expand(s,ord) : RngPowAlgElt, RngIntElt -&gt; BoolElt, RngMPolElt
4<->RngPowAlg_accessors (Example H51E2)<->text530.htm#5726<->RngPowAlg_accessors (Example H51E2)
4<->Example-accessors :<->text530.htm#5726<->Example-accessors :: RngPowAlg_accessors (Example H51E2)
3<->accessors :<->text530.htm<->accessors :: Accessors and Expansion (ALGEBRAIC POWER SERIES RINGS)
3<->arith :<->text531.htm<->arith :: Arithmetic (ALGEBRAIC POWER SERIES RINGS)
5<->AlgComb(c,ss) <->text531.htm#5728<->AlgComb(c,ss) : RngMPolElt, SeqEnum -&gt; RngPowAlgElt
5<->s + t <->text531.htm#5729<->s + t : RngPowAlgElt, RngPowAlgElt -&gt; RngPowAlgElt
5<->* :: s + t <->text531.htm#5729<->* :: s + t : RngPowAlgElt, RngPowAlgElt -&gt; RngPowAlgElt
5<->s + t <->text531.htm#5729<->s + t : RngPowAlgElt, RngPowAlgElt -&gt; RngPowAlgElt
4<->RngPowAlg_arith (Example H51E3)<->text531.htm#5730<->RngPowAlg_arith (Example H51E3)
4<->Example-arith :<->text531.htm#5730<->Example-arith :: RngPowAlg_arith (Example H51E3)
3<->arith :<->text531.htm<->arith :: Arithmetic (ALGEBRAIC POWER SERIES RINGS)
3<->preds :<->text532.htm<->preds :: Predicates (ALGEBRAIC POWER SERIES RINGS)
5<->IsZero(s) <->text532.htm#5732<->IsZero(s) : RngPowAlgElt  -&gt; BoolElt
5<->s eq t <->text532.htm#5733<->s eq t : RngPowAlgElt, RngPowAlgElt -&gt; BoolElt
5<->IsPolynomial(s) <->text532.htm#5734<->IsPolynomial(s) : RngPowAlgElt  -&gt; BoolElt, RngMPolElt
4<->RngPowAlg_preds (Example H51E4)<->text532.htm#5735<->RngPowAlg_preds (Example H51E4)
4<->Example-preds :<->text532.htm#5735<->Example-preds :: RngPowAlg_preds (Example H51E4)
3<->preds :<->text532.htm<->preds :: Predicates (ALGEBRAIC POWER SERIES RINGS)
3<->mods :<->text533.htm<->mods :: Modifiers (ALGEBRAIC POWER SERIES RINGS)
5<->ScaleGenerators(s,ls) <->text533.htm#5737<->ScaleGenerators(s,ls) : RngPowAlgElt, SeqEnum -&gt; RngPowAlgElt
5<->ChangeRing(s,R) <->text533.htm#5738<->ChangeRing(s,R) : RngPowAlgElt, RngMPol -&gt; RngPowAlgElt
5<->SimplifyRep(s) <->text533.htm#5739<->SimplifyRep(s) : RngPowAlgElt -&gt; RngPowAlgElt
4<->RngPowAlg_scale (Example H51E5)<->text533.htm#5740<->RngPowAlg_scale (Example H51E5)
4<->Example-scale :<->text533.htm#5740<->Example-scale :: RngPowAlg_scale (Example H51E5)
3<->mods :<->text533.htm<->mods :: Modifiers (ALGEBRAIC POWER SERIES RINGS)
3<->algebraic-power-series :<->text526.htm<->algebraic-power-series :: ALGEBRAIC POWER SERIES RINGS
3<->valuation :<->text535.htm<->valuation :: VALUATION RINGS
3<->introduction :<->text536.htm<->introduction :: Introduction (VALUATION RINGS)
3<->creation :<->text537.htm<->creation :: Creation Functions (VALUATION RINGS)
3<->structure :<->text537.htm#5745<->structure :: Creation of Structures (VALUATION RINGS)
5<->ValuationRing(Q, p) <->text537.htm#5746<->ValuationRing(Q, p) : FldRat, RngIntElt -&gt; RngVal
5<->ValuationRing(F, f) <->text537.htm#5747<->ValuationRing(F, f) : FldFun, RngUPolElt -&gt; RngVal
5<->ValuationRing(F) <->text537.htm#5748<->ValuationRing(F) : FldFun -&gt; RngVal
3<->structure :<->text537.htm#5745<->structure :: Creation of Structures (VALUATION RINGS)
3<->element :<->text537.htm#5749<->element :: Creation of Elements (VALUATION RINGS)
5<->V ! r <->text537.htm#5750<->V ! r : RngVal, FldRatElt -> RngValElt
5<->V ! r <->text537.htm#5750<->V ! r : RngVal, FldFunElt -&gt; RngValElt
3<->element :<->text537.htm#5749<->element :: Creation of Elements (VALUATION RINGS)
3<->creation :<->text537.htm<->creation :: Creation Functions (VALUATION RINGS)
3<->structure :<->text538.htm<->structure :: Structure Operations (VALUATION RINGS)
3<->related :<->text538.htm#5752<->related :: Related Structures (VALUATION RINGS)
5<->FieldOfFractions(V) <->text538.htm#5753<->FieldOfFractions(V) : RngVal -&gt; Rng
3<->related :<->text538.htm#5752<->related :: Related Structures (VALUATION RINGS)
3<->invariant :<->text538.htm#5754<->invariant :: Numerical Invariants (VALUATION RINGS)
3<->structure :<->text538.htm<->structure :: Structure Operations (VALUATION RINGS)
3<->element :<->text539.htm<->element :: Element Operations (VALUATION RINGS)
3<->arithmetic :<->text539.htm#5756<->arithmetic :: Arithmetic Operations (VALUATION RINGS)
5<->v div w <->text539.htm#5757<->v div w : RngValElt, RngValElt -&gt; RngValElt
3<->arithmetic :<->text539.htm#5756<->arithmetic :: Arithmetic Operations (VALUATION RINGS)
3<->equality-membership :<->text539.htm#5758<->equality-membership :: Equality and Membership (VALUATION RINGS)
3<->parent-category :<->text539.htm#5759<->parent-category :: Parent and Category (VALUATION RINGS)
3<->predicate :<->text539.htm#5760<->predicate :: Predicates on Ring Elements (VALUATION RINGS)
3<->other :<->text539.htm#5761<->other :: Other Element Functions (VALUATION RINGS)
5<->Valuation :: EuclideanNorm(v) <->text539.htm#5762<->Valuation :: EuclideanNorm(v) : RngValElt -&gt; RngIntElt
5<->EuclideanNorm(v) <->text539.htm#5762<->EuclideanNorm(v) : RngValElt -&gt; RngIntElt
5<->Quotrem(v, w) <->text539.htm#5763<->Quotrem(v, w) : RngValElt, RngValElt -&gt; RngValElt, RngValElt
5<->Gcd :: GreatestCommonDivisor(v, w) <->text539.htm#5764<->Gcd :: GreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt
5<->GCD :: GreatestCommonDivisor(v, w) <->text539.htm#5764<->GCD :: GreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt
5<->GreatestCommonDivisor(v, w) <->text539.htm#5764<->GreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt
5<->Xgcd :: ExtendedGreatestCommonDivisor(v, w) <->text539.htm#5765<->Xgcd :: ExtendedGreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt, RngValElt, RngValElt
5<->XGCD :: ExtendedGreatestCommonDivisor(v, w) <->text539.htm#5765<->XGCD :: ExtendedGreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt, RngValElt, RngValElt
5<->ExtendedGreatestCommonDivisor(v, w) <->text539.htm#5765<->ExtendedGreatestCommonDivisor(v, w) : RngValElt, RngValElt -&gt; RngValElt, RngValElt, RngValElt
3<->other :<->text539.htm#5761<->other :: Other Element Functions (VALUATION RINGS)
3<->element :<->text539.htm<->element :: Element Operations (VALUATION RINGS)
3<->valuation :<->text535.htm<->valuation :: VALUATION RINGS
3<->galois-ring :<->text541.htm<->galois-ring :: GALOIS RINGS
3<->introduction :<->text542.htm<->introduction :: Introduction (GALOIS RINGS)
3<->creation :<->text543.htm<->creation :: Creation Functions (GALOIS RINGS)
3<->structure :<->text543.htm#5770<->structure :: Creation of Structures (GALOIS RINGS)
5<->GR :: GaloisRing(q, d) <->text543.htm#5771<->GR :: GaloisRing(q, d) : RngIntElt, RngIntElt -&gt; RngGal
5<->GaloisRing(q, d) <->text543.htm#5771<->GaloisRing(q, d) : RngIntElt, RngIntElt -&gt; RngGal
5<->GR :: GaloisRing(p, a, d) <->text543.htm#5772<->GR :: GaloisRing(p, a, d) : RngIntElt, RngIntElt, RngIntElt -&gt; RngGal
5<->GaloisRing(p, a, d) <->text543.htm#5772<->GaloisRing(p, a, d) : RngIntElt, RngIntElt, RngIntElt -&gt; RngGal
5<->GR :: GaloisRing(q, D) <->text543.htm#5773<->GR :: GaloisRing(q, D) : RngIntElt, RngUPol -&gt; RngGal
5<->GaloisRing(q, D) <->text543.htm#5773<->GaloisRing(q, D) : RngIntElt, RngUPol -&gt; RngGal
5<->GR :: GaloisRing(p, a, D) <->text543.htm#5774<->GR :: GaloisRing(p, a, D) : RngIntElt, RngIntElt, RngUPol -&gt; RngGal
5<->GaloisRing(p, a, D) <->text543.htm#5774<->GaloisRing(p, a, D) : RngIntElt, RngIntElt, RngUPol -&gt; RngGal
3<->structure :<->text543.htm#5770<->structure :: Creation of Structures (GALOIS RINGS)
3<->names :<->text543.htm#5775<->names :: Names (GALOIS RINGS)
5<->AssignNames(~R, [f]) <->text543.htm#5776<->AssignNames(~R, [f]) : RngGal, [ MonStgElt ]) -&gt;
5<->Name(R, 1) <->text543.htm#5777<->Name(R, 1) : RngGal, RngIntElt -&gt; RngGalElt
3<->names :<->text543.htm#5775<->names :: Names (GALOIS RINGS)
3<->creation :<->text543.htm#5778<->creation :: Creation of Elements (GALOIS RINGS)
5<->Generator :: R . 1 <->text543.htm#5779<->Generator :: R . 1 : RngGal -&gt; RngGalElt
5<->R . 1 <->text543.htm#5779<->R . 1 : RngGal -&gt; RngGalElt
5<->R ! a <->text543.htm#5780<->R ! a : RngGal, RngElt -&gt; RngGalElt
5<->Random(R) <->text543.htm#5781<->Random(R) : RngGal -&gt; RngGalElt
3<->creation :<->text543.htm#5778<->creation :: Creation of Elements (GALOIS RINGS)
3<->sequence :<->text543.htm#5782<->sequence :: Sequence Conversions (GALOIS RINGS)
5<->Eltseq :: ElementToSequence(a) <->text543.htm#5783<->Eltseq :: ElementToSequence(a) : RngGalElt -&gt; [ RngIntResElt ]
5<->ElementToSequence(a) <->text543.htm#5783<->ElementToSequence(a) : RngGalElt -&gt; [ RngIntResElt ]
4<->RngGal_Create (Example H53E1)<->text543.htm#5784<->RngGal_Create (Example H53E1)
4<->Example-Create :<->text543.htm#5784<->Example-Create :: RngGal_Create (Example H53E1)
3<->sequence :<->text543.htm#5782<->sequence :: Sequence Conversions (GALOIS RINGS)
3<->creation :<->text543.htm<->creation :: Creation Functions (GALOIS RINGS)
3<->operation :<->text544.htm<->operation :: Structure Operations (GALOIS RINGS)
3<->related :<->text544.htm#5786<->related :: Related Structures (GALOIS RINGS)
3<->invariant :<->text544.htm#5787<->invariant :: Numerical Invariants (GALOIS RINGS)
5<->Characteristic(R) <->text544.htm#5788<->Characteristic(R) : RngGal -&gt; RngIntElt
5<-># R <->text544.htm#5789<-># R : RngGal -&gt; RngIntElt
5<->Degree(R) <->text544.htm#5790<->Degree(R) : RngGal -&gt; RngIntElt
5<->ResidueField(R) <->text544.htm#5791<->ResidueField(R) : RngGal -&gt; FldFin
3<->invariant :<->text544.htm#5787<->invariant :: Numerical Invariants (GALOIS RINGS)
3<->predicate :<->text544.htm#5792<->predicate :: Ring Predicates and Booleans (GALOIS RINGS)
3<->operation :<->text544.htm<->operation :: Structure Operations (GALOIS RINGS)
3<->operation-element :<->text545.htm<->operation-element :: Element Operations (GALOIS RINGS)
3<->arithmetic :<->text545.htm#5794<->arithmetic :: Arithmetic Operators (GALOIS RINGS)
3<->Euclidean Operations (GALOIS RINGS)<->text545.htm#5795<->Euclidean Operations (GALOIS RINGS)
3<->Boolean :<->text545.htm#5796<->Boolean :: Equality and Membership (GALOIS RINGS)
3<->generic :<->text545.htm#5797<->generic :: Parent and Category (GALOIS RINGS)
3<->element-Boolean :<->text545.htm#5798<->element-Boolean :: Predicates on Ring Elements (GALOIS RINGS)
4<->RngGal_Create (Example H53E2)<->text545.htm#5799<->RngGal_Create (Example H53E2)
4<->Example-Create :<->text545.htm#5799<->Example-Create :: RngGal_Create (Example H53E2)
3<->element-Boolean :<->text545.htm#5798<->element-Boolean :: Predicates on Ring Elements (GALOIS RINGS)
3<->operation-element :<->text545.htm<->operation-element :: Element Operations (GALOIS RINGS)
3<->galois-ring :<->text541.htm<->galois-ring :: GALOIS RINGS
3<->newton-polygon :<->text548.htm<->newton-polygon :: NEWTON POLYGONS
3<->Newton!polygon :<->text549.htm<->Newton!polygon :: Introduction (NEWTON POLYGONS)
3<->puiseux field :<->text549.htm<->puiseux field :: Introduction (NEWTON POLYGONS)
3<->local rings :<->text549.htm<->local rings :: Introduction (NEWTON POLYGONS)
3<->local fields :<->text549.htm<->local fields :: Introduction (NEWTON POLYGONS)
3<->Newton--Puiseux :<->text549.htm<->Newton--Puiseux :: Introduction (NEWTON POLYGONS)
3<->introduction :<->text549.htm<->introduction :: Introduction (NEWTON POLYGONS)
3<->newton :<->text550.htm<->newton :: Newton Polygons (NEWTON POLYGONS)
3<->newton-creation :<->text550.htm#5805<->newton-creation :: Creation of Newton Polygons (NEWTON POLYGONS)
5<->NewtonPolygon(f) <->text550.htm#5806<->NewtonPolygon(f) : RngMPolElt -&gt; NwtnPgon
5<->NewtonPolygon(f) <->text550.htm#5807<->NewtonPolygon(f) : RngUPolElt -&gt; NwtnPgon
5<->NewtonPolygon(f, p) <->text550.htm#5808<->NewtonPolygon(f, p) : RngUPolElt, RngFunOrdIdl -> NwtnPgon
5<->NewtonPolygon(f, p) <->text550.htm#5808<->NewtonPolygon(f, p) : RngUPolElt, RngIntElt -> NwtnPgon
5<->NewtonPolygon(f, p) <->text550.htm#5808<->NewtonPolygon(f, p) : RngUPolElt, RngOrdIdl -&gt; NwtnPgon
5<->NewtonPolygon(f, p) <->text550.htm#5809<->NewtonPolygon(f, p) : RngUPolElt, PlcFunElt -&gt; NwtnPgon
5<->NewtonPolygon(C) <->text550.htm#5810<->NewtonPolygon(C) : Crv -&gt; NwtnPgon
5<->NewtonPolygon(V) <->text550.htm#5811<->NewtonPolygon(V) : SetEnum -> NwtnPgon
5<->NewtonPolygon(V) <->text550.htm#5811<->NewtonPolygon(V) : SeqEnum -&gt; NwtnPgon
5<->DefiningPoints(N) <->text550.htm#5812<->DefiningPoints(N) : NwtnPgon -&gt; SeqEnum
4<->Newton_create-ex (Example H54E1)<->text550.htm#5813<->Newton_create-ex (Example H54E1)
4<->Example-create-ex :<->text550.htm#5813<->Example-create-ex :: Newton_create-ex (Example H54E1)
3<->newton-creation :<->text550.htm#5805<->newton-creation :: Creation of Newton Polygons (NEWTON POLYGONS)
3<->newton-vf :<->text550.htm#5814<->newton-vf :: Vertices and Faces of Polygons (NEWTON POLYGONS)
5<->Faces(N) <->text550.htm#5815<->Faces(N) : NwtnPgon -&gt; SeqEnum
5<->InnerFaces(N) <->text550.htm#5816<->InnerFaces(N) : NwtnPgon -&gt; SeqEnum
5<->LowerFaces(N) <->text550.htm#5817<->LowerFaces(N) : NwtnPgon -&gt; SeqEnum
5<->OuterFaces(N) <->text550.htm#5818<->OuterFaces(N) : NwtnPgon -&gt; SeqEnum
5<->AllFaces(N) <->text550.htm#5819<->AllFaces(N) : NwtnPgon -&gt; SeqEnum
4<->Newton_faces-ex (Example H54E2)<->text550.htm#5820<->Newton_faces-ex (Example H54E2)
4<->Example-faces-ex :<->text550.htm#5820<->Example-faces-ex :: Newton_faces-ex (Example H54E2)
5<->Vertices(N) <->text550.htm#5821<->Vertices(N) : NwtnPgon -&gt; SeqEnum
5<->InnerVertices(N) <->text550.htm#5822<->InnerVertices(N) : NwtnPgon -&gt; SeqEnum
5<->LowerVertices(N) <->text550.htm#5823<->LowerVertices(N) : NwtnPgon -&gt; SeqEnum
5<->OuterVertices(N) <->text550.htm#5824<->OuterVertices(N) : NwtnPgon -&gt; SeqEnum
5<->AllVertices(N) <->text550.htm#5825<->AllVertices(N) : NwtnPgon -&gt; SeqEnum
4<->Newton_vertices-ex (Example H54E3)<->text550.htm#5826<->Newton_vertices-ex (Example H54E3)
4<->Example-vertices-ex :<->text550.htm#5826<->Example-vertices-ex :: Newton_vertices-ex (Example H54E3)
5<->EndVertices(F) <->text550.htm#5827<->EndVertices(F) : NwtnPgonFace -&gt; SeqEnum
5<->FacesContaining(N,p) <->text550.htm#5828<->FacesContaining(N,p) : NwtnPgon,Tup -&gt; SeqEnum
4<->Newton_sp-vertices-ex (Example H54E4)<->text550.htm#5829<->Newton_sp-vertices-ex (Example H54E4)
4<->Example-sp-vertices-ex :<->text550.htm#5829<->Example-sp-vertices-ex :: Newton_sp-vertices-ex (Example H54E4)
5<->GradientVector(F) <->text550.htm#5830<->GradientVector(F) : NwtnPgonFace -&gt; Tup
5<->GradientVectors(N) <->text550.htm#5831<->GradientVectors(N) : NwtnPgon -&gt; [ Tup ]
5<->Weight(F) <->text550.htm#5832<->Weight(F) : NwtnPgonFace -&gt; RngIntElt
5<->Slopes(N) <->text550.htm#5833<->Slopes(N) : NwtnPgon -&gt; SeqEnum
5<->LowerSlopes :: InnerSlopes(N) <->text550.htm#5834<->LowerSlopes :: InnerSlopes(N) : NwtnPgon -&gt; SeqEnum
5<->AllSlopes :: InnerSlopes(N) <->text550.htm#5834<->AllSlopes :: InnerSlopes(N) : NwtnPgon -&gt; SeqEnum
5<->InnerSlopes(N) <->text550.htm#5834<->InnerSlopes(N) : NwtnPgon -&gt; SeqEnum
4<->Newton_grad-ex (Example H54E5)<->text550.htm#5835<->Newton_grad-ex (Example H54E5)
4<->Example-grad-ex :<->text550.htm#5835<->Example-grad-ex :: Newton_grad-ex (Example H54E5)
3<->newton-vf :<->text550.htm#5814<->newton-vf :: Vertices and Faces of Polygons (NEWTON POLYGONS)
3<->newton-ptbools :<->text550.htm#5836<->newton-ptbools :: Tests for Points and Faces (NEWTON POLYGONS)
5<->IsFace(N, F) <->text550.htm#5837<->IsFace(N, F) : NwtnPgon,Tup -&gt; BoolElt
5<->IsVertex(N, p) <->text550.htm#5838<->IsVertex(N, p) : NwtnPgon,Tup -&gt; BoolElt
5<->IsInterior(N,p) <->text550.htm#5839<->IsInterior(N,p) : NwtnPgon,Tup -&gt; BoolElt
5<->IsBoundary(N, p) <->text550.htm#5840<->IsBoundary(N, p) : NwtnPgon,Tup -&gt; BoolElt
5<->IsPoint(N,p) <->text550.htm#5841<->IsPoint(N,p) : NwtnPgon,Tup -&gt; BoolElt
3<->newton-ptbools :<->text550.htm#5836<->newton-ptbools :: Tests for Points and Faces (NEWTON POLYGONS)
3<->newton :<->text550.htm<->newton :: Newton Polygons (NEWTON POLYGONS)
3<->newton-polynomials :<->text551.htm<->newton-polynomials :: Polynomials Associated with  Newton Polygons (NEWTON POLYGONS)
5<->HasPolynomial(N) <->text551.htm#5843<->HasPolynomial(N) : NwtnPgon -&gt; BoolElt
5<->Polynomial(N) <->text551.htm#5844<->Polynomial(N) : NwtnPgon -&gt; RngElt
5<->ParentRing(N) <->text551.htm#5845<->ParentRing(N) : NwtnPgon -&gt; Rng
5<->IsNewtonPolygonOf(N, f) <->text551.htm#5846<->IsNewtonPolygonOf(N, f) : NwtnPgon, RngElt -&gt; BoolElt
5<->FaceFunction(F) <->text551.htm#5847<->FaceFunction(F) : NwtnPgonFace -&gt; RngElt
5<->IsDegenerate(F) <->text551.htm#5848<->IsDegenerate(F) : NwtnPgonFace -&gt; BoolElt
5<->IsDegenerate(N) <->text551.htm#5849<->IsDegenerate(N) : NwtnPgon -&gt; BoolElt
3<->newton-polynomials :<->text551.htm<->newton-polynomials :: Polynomials Associated with  Newton Polygons (NEWTON POLYGONS)
3<->val :<->text552.htm<->val :: Finding Valuations of Roots of Polynomials from Newton Polygons (NEWTON POLYGONS)
5<->ValuationsOfRoots(f) <->text552.htm#5851<->ValuationsOfRoots(f) : RngUPolElt -&gt; [ &lt; RngIntElt, RngIntElt &gt; ]
5<->ValuationsOfRoots(f, p) <->text552.htm#5852<->ValuationsOfRoots(f, p) : RngUPolElt, RngOrdIdl -> [ < RngIntElt, RngIntElt > ]
5<->ValuationsOfRoots(f, p) <->text552.htm#5852<->ValuationsOfRoots(f, p) : RngUPolElt, PlcFunElt -> [ < RngIntElt, RngIntElt > ]
5<->ValuationsOfRoots(f, p) <->text552.htm#5852<->ValuationsOfRoots(f, p) : RngUPolElt, RngIntElt -&gt; [ &lt; RngIntElt, RngIntElt &gt; ]
3<->val :<->text552.htm<->val :: Finding Valuations of Roots of Polynomials from Newton Polygons (NEWTON POLYGONS)
3<->poly-ops :<->text553.htm<->poly-ops :: Using Newton Polygons to Find Roots of Polynomials over Series Rings (NEWTON POLYGONS)
5<->SetVerbose("Newton", v) <->text553.htm#5854<->SetVerbose("Newton", v) : MonStgElt, RngIntElt -&gt;
3<->non-duval-ops :<->text553.htm#5855<->non-duval-ops :: Operations not associated with Duval's Algorithm (NEWTON POLYGONS)
5<->PuiseuxExpansion(f, n) <->text553.htm#5856<->PuiseuxExpansion(f, n) : RngUPolElt, RngIntElt -&gt; SeqEnum[RngSerPuisElt]
5<->ExpandToPrecision(f, c, n) <->text553.htm#5857<->ExpandToPrecision(f, c, n) : RngUPolElt, RngSerElt, RngIntElt -&gt; RngSerElt
5<->ImplicitFunction(f, d, n) <->text553.htm#5858<->ImplicitFunction(f, d, n) : RngUPolElt, RngIntElt, RngIntElt -&gt; RngSerElt
4<->Newton_poly-ops-ex (Example H54E6)<->text553.htm#5859<->Newton_poly-ops-ex (Example H54E6)
4<->Example-poly-ops-ex :<->text553.htm#5859<->Example-poly-ops-ex :: Newton_poly-ops-ex (Example H54E6)
5<->IsPartialRoot(f, c) <->text553.htm#5860<->IsPartialRoot(f, c) : RngUPolElt, RngSerElt -&gt; BoolElt
5<->IsUniquePartialRoot(f, c) <->text553.htm#5861<->IsUniquePartialRoot(f, c) : RngUPolElt, RngSerElt -&gt; BoolElt
4<->Newton_pol-is (Example H54E7)<->text553.htm#5862<->Newton_pol-is (Example H54E7)
4<->Example-pol-is :<->text553.htm#5862<->Example-pol-is :: Newton_pol-is (Example H54E7)
5<->PuiseuxExponents(p) <->text553.htm#5863<->PuiseuxExponents(p) : RngSerElt -&gt; SeqEnum
5<->PuiseuxExponentsCommon(p, q) <->text553.htm#5864<->PuiseuxExponentsCommon(p, q) : RngSerElt, RngSerElt -&gt; SeqEnum
4<->Newton_exps (Example H54E8)<->text553.htm#5865<->Newton_exps (Example H54E8)
4<->Example-exps :<->text553.htm#5865<->Example-exps :: Newton_exps (Example H54E8)
3<->non-duval-ops :<->text553.htm#5855<->non-duval-ops :: Operations not associated with Duval's Algorithm (NEWTON POLYGONS)
3<->Duval :<->text553.htm#5866<->Duval :: Operations associated with Duval's algorithm (NEWTON POLYGONS)
3<->duval :<->text553.htm#5866<->duval :: Operations associated with Duval's algorithm (NEWTON POLYGONS)
5<->DuvalPuiseuxExpansion(f, n) <->text553.htm#5867<->DuvalPuiseuxExpansion(f, n) : RngUPolElt, RngIntElt -&gt; SeqEnum
5<->ParametrizationToPuiseux(T) <->text553.htm#5868<->ParametrizationToPuiseux(T) : Tup -&gt; SeqEnum
5<->PuiseuxToParametrization(S) <->text553.htm#5869<->PuiseuxToParametrization(S) : RngSerElt -&gt; Tup
4<->Newton_duval-ex (Example H54E9)<->text553.htm#5870<->Newton_duval-ex (Example H54E9)
4<->Example-duval-ex :<->text553.htm#5870<->Example-duval-ex :: Newton_duval-ex (Example H54E9)
3<->duval :<->text553.htm#5866<->duval :: Operations associated with Duval's algorithm (NEWTON POLYGONS)
3<->roots :<->text553.htm#5871<->roots :: Roots of Polynomials (NEWTON POLYGONS)
5<->Roots(f, n) <->text553.htm#5872<->Roots(f, n) : RngUPolElt, RngIntElt -> [<RngSerElt, RngIntElt>]
5<->Roots(f) <->text553.htm#5872<->Roots(f) : RngUPolElt -&gt; [&lt;RngSerElt, RngIntElt&gt;]
5<->HasRoot(f) <->text553.htm#5873<->HasRoot(f) : RngUPolElt -&gt; BoolElt, RngSerElt
4<->Newton_roots-ex (Example H54E10)<->text553.htm#5874<->Newton_roots-ex (Example H54E10)
4<->Example-roots-ex :<->text553.htm#5874<->Example-roots-ex :: Newton_roots-ex (Example H54E10)
3<->roots :<->text553.htm#5871<->roots :: Roots of Polynomials (NEWTON POLYGONS)
3<->poly-ops :<->text553.htm<->poly-ops :: Using Newton Polygons to Find Roots of Polynomials over Series Rings (NEWTON POLYGONS)
3<->newton-polygon :<->text548.htm<->newton-polygon :: NEWTON POLYGONS
3<->p-adic-pow-ser :<->text556.htm<->p-adic-pow-ser :: SERIES RINGS OVER p-ADIC RINGS
3<->introduction :<->text557.htm<->introduction :: Introduction (SERIES RINGS OVER p-ADIC RINGS)
3<->Background (SERIES RINGS OVER p-ADIC RINGS)<->text557.htm#5879<->Background (SERIES RINGS OVER p-ADIC RINGS)
3<->basics :<->text557.htm#5880<->basics :: Basic Operations (SERIES RINGS OVER p-ADIC RINGS)
3<->creation :<->text557.htm#5881<->creation :: Creation Intrinsics (SERIES RINGS OVER p-ADIC RINGS)
5<->SpRing :: SnuRing (F, nu) <->text557.htm#5882<->SpRing :: SnuRing (F, nu) : FldPad, FldRatElt -&gt; SnuRng
5<->SuRing :: SnuRing (F, nu) <->text557.htm#5882<->SuRing :: SnuRing (F, nu) : FldPad, FldRatElt -&gt; SnuRng
5<->SnuRing (F, nu) <->text557.htm#5882<->SnuRing (F, nu) : FldPad, FldRatElt -&gt; SnuRng
5<->SpRing :: SnuRing (F) <->text557.htm#5883<->SpRing :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SuRing :: SnuRing (F) <->text557.htm#5883<->SuRing :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SnuRing (p, e) <->text557.htm#5883<->SnuRing (p, e) : RngIntElt, RngIntElt -> SnuRng
5<->SnuRing (p) <->text557.htm#5883<->SnuRing (p) : RngIntElt -> SnuRn
5<->SpRing (p, e) : RngIntElt, RngIntElt -> SpRng :: SnuRing (F) <->text557.htm#5883<->SpRing (p, e) : RngIntElt, RngIntElt -> SpRng :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SpRing (p) : RngIntElt -> SpRng :: SnuRing (F) <->text557.htm#5883<->SpRing (p) : RngIntElt -> SpRng :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SuRing (p, e) : RngIntElt, RngIntElt -> SuRng :: SnuRing (F) <->text557.htm#5883<->SuRing (p, e) : RngIntElt, RngIntElt -> SuRng :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SuRing (p) : RngIntElt -> SuRng :: SnuRing (F) <->text557.htm#5883<->SuRing (p) : RngIntElt -> SuRng :: SnuRing (F) : FldPad -&gt; SnuRng
5<->SnuRing (F) <->text557.htm#5883<->SnuRing (F) : FldPad -&gt; SnuRng
5<->SpRing :: SnuRing (S, nu) <->text557.htm#5884<->SpRing :: SnuRing (S, nu) : RngSerPow, FldRatElt -&gt; SnuRng
5<->SuRing :: SnuRing (S, nu) <->text557.htm#5884<->SuRing :: SnuRing (S, nu) : RngSerPow, FldRatElt -&gt; SnuRng
5<->SnuRing (S, nu) <->text557.htm#5884<->SnuRing (S, nu) : RngSerPow, FldRatElt -&gt; SnuRng
5<->SpRing :: SnuRing (S) <->text557.htm#5885<->SpRing :: SnuRing (S) : SpRng -&gt; SnuRng
5<->SnuRing (S) <->text557.htm#5885<->SnuRing (S) : SuRng -> SnuRng
5<->SuRing :: SnuRing (S) <->text557.htm#5885<->SuRing :: SnuRing (S) : SpRng -&gt; SnuRng
5<->SnuRing (S) <->text557.htm#5885<->SnuRing (S) : SpRng -&gt; SnuRng
3<->creation :<->text557.htm#5881<->creation :: Creation Intrinsics (SERIES RINGS OVER p-ADIC RINGS)
3<->access :<->text557.htm#5886<->access :: Access Functions (SERIES RINGS OVER p-ADIC RINGS)
5<->ne :: R eq S <->text557.htm#5887<->ne :: R eq S : SnuRng, SnuRng -&gt; BoolElt
5<->R eq S <->text557.htm#5887<->R eq S : SpRng, SpRng -> BoolElt
5<->R ne S : SpRng, SpRng -> BoolElt :: R eq S <->text557.htm#5887<->R ne S : SpRng, SpRng -> BoolElt :: R eq S : SnuRng, SnuRng -&gt; BoolElt
5<->R eq S <->text557.htm#5887<->R eq S : SuRng, SuRng -> BoolElt
5<->R ne S : SuRng, SuRng -> BoolElt :: R eq S <->text557.htm#5887<->R ne S : SuRng, SuRng -> BoolElt :: R eq S : SnuRng, SnuRng -&gt; BoolElt
5<->R eq S <->text557.htm#5887<->R eq S : SnuRng, SnuRng -&gt; BoolElt
5<->Slope (S) <->text557.htm#5888<->Slope (S) : SpRng -> RngIntElt
5<->Slope (S) <->text557.htm#5888<->Slope (S) : SuRng -> RngIntElt
5<->Slope (S) <->text557.htm#5888<->Slope (S) : SnuRng -&gt; RngIntElt
5<->Precision (S) <->text557.htm#5889<->Precision (S) : SpRng -> RngIntElt
5<->Precision (S) <->text557.htm#5889<->Precision (S) : SuRng -> RngIntElt
5<->Precision (S) <->text557.htm#5889<->Precision (S) : SnuRng -&gt; RngIntElt
5<->CoefficientRing (S) <->text557.htm#5890<->CoefficientRing (S) : SpRng -> RngIntElt
5<->CoefficientRing (S) <->text557.htm#5890<->CoefficientRing (S) : SuRng -> RngIntElt
5<->CoefficientRing (S) <->text557.htm#5890<->CoefficientRing (S) : SnuRng -&gt; RngIntElt
3<->access :<->text557.htm#5886<->access :: Access Functions (SERIES RINGS OVER p-ADIC RINGS)
3<->basics :<->text557.htm#5880<->basics :: Basic Operations (SERIES RINGS OVER p-ADIC RINGS)
3<->elements :<->text557.htm#5891<->elements :: Element Operations (SERIES RINGS OVER p-ADIC RINGS)
5<->Parent (f) <->text557.htm#5892<->Parent (f) : SpElement -> SpRng
5<->Parent (f) <->text557.htm#5892<->Parent (f) : SuElement -> SuRng
5<->Parent (f) <->text557.htm#5892<->Parent (f) : SnuElement -&gt; SnuRng
5<->IsWeaklyZero (f) <->text557.htm#5893<->IsWeaklyZero (f) : SpElement -> BoolElt
5<->IsWeaklyZero (f) <->text557.htm#5893<->IsWeaklyZero (f) : SuElement -> BoolElt
5<->IsWeaklyZero (f) <->text557.htm#5893<->IsWeaklyZero (f) : SnuElement -&gt; BoolElt
3<->valuation-degree :<->text557.htm#5894<->valuation-degree :: Valuation and Degree (SERIES RINGS OVER p-ADIC RINGS)
5<->GaussValuation (f) <->text557.htm#5895<->GaussValuation (f) : SpElement -> FldRatElt
5<->GaussValuation (f) <->text557.htm#5895<->GaussValuation (f) : SuElement -> FldRatElt
5<->WeierstrassDegree :: GaussValuation (f) <->text557.htm#5895<->WeierstrassDegree :: GaussValuation (f) : SnuElement -&gt; FldRatElt
5<->WeierstrassDegree (f) : SpElement -> FldRatElt :: GaussValuation (f) <->text557.htm#5895<->WeierstrassDegree (f) : SpElement -> FldRatElt :: GaussValuation (f) : SnuElement -&gt; FldRatElt
5<->WeierstrassDegree (f) : SuElement -> FldRatElt :: GaussValuation (f) <->text557.htm#5895<->WeierstrassDegree (f) : SuElement -> FldRatElt :: GaussValuation (f) : SnuElement -&gt; FldRatElt
5<->GaussValuation (f) <->text557.htm#5895<->GaussValuation (f) : SnuElement -&gt; FldRatElt
5<->IsDistinguished (f) <->text557.htm#5896<->IsDistinguished (f) : SnuElement -&gt; BoolElt
5<->LeadingTerm (f) <->text557.htm#5897<->LeadingTerm (f) : SpElement -> RngSerPowElt
5<->LeadingTerm (f) <->text557.htm#5897<->LeadingTerm (f) : SuElement -> RngSerLaurElt
5<->LeadingTerm (f) <->text557.htm#5897<->LeadingTerm (f) : SnuElement -&gt; RngSerPowElt
5<->WeierstrassTerm (f) <->text557.htm#5898<->WeierstrassTerm (f) : SpElement -> RngSerPowElt
5<->WeierstrassTerm (f) <->text557.htm#5898<->WeierstrassTerm (f) : SuElement -> RngSerLaurElt
5<->WeierstrassTerm (f) <->text557.htm#5898<->WeierstrassTerm (f) : SnuElement -&gt; RngSerPowElt
5<->O (x) <->text557.htm#5899<->O (x) : SpElement -> SpElement
5<->O (x) <->text557.htm#5899<->O (x) : SuElement -> SuElement
5<->O (x) <->text557.htm#5899<->O (x) : SnuElement -&gt; SnuElement
4<->RngSlope_basic_snu_ring (Example H55E1)<->text557.htm#5900<->RngSlope_basic_snu_ring (Example H55E1)
4<->Example-basic_snu_ring :<->text557.htm#5900<->Example-basic_snu_ring :: RngSlope_basic_snu_ring (Example H55E1)
3<->valuation-degree :<->text557.htm#5894<->valuation-degree :: Valuation and Degree (SERIES RINGS OVER p-ADIC RINGS)
3<->elements :<->text557.htm#5891<->elements :: Element Operations (SERIES RINGS OVER p-ADIC RINGS)
3<->euclidean-algorithm :<->text557.htm#5901<->euclidean-algorithm :: Euclidean Algorithm (SERIES RINGS OVER p-ADIC RINGS)
3<->Intrinsics (SERIES RINGS OVER p-ADIC RINGS)<->text557.htm#5902<->Intrinsics (SERIES RINGS OVER p-ADIC RINGS)
5<->WeierstrassPreparation (f) <->text557.htm#5903<->WeierstrassPreparation (f) : SnuElement -&gt; SnuElement, SnuElement
5<->Quotrem (A, B) <->text557.htm#5904<->Quotrem (A, B) : SnuElement, SnuElement -&gt; SnuElement, SnuElement
5<->Quotrem (A, B) <->text557.htm#5905<->Quotrem (A, B) : SpElement, SpElement -&gt; SpElement, SpElement
5<->Quotrem (A, B) <->text557.htm#5906<->Quotrem (A, B) : SuElement, SuElement -&gt; SuElement, SuElement
5<->ExtendedGcd (A, B) <->text557.htm#5907<->ExtendedGcd (A, B) : SnuElement, SnuElement -&gt; SnuElement, SnuElement, SnuElement, SnuElement, SnuElement, SnuElement
5<->ExtendedGcd (A, B) <->text557.htm#5908<->ExtendedGcd (A, B) : SpElement, SpElement -&gt; SpElement, SpElement, SpElement, SpElement, SpElement, SpElement
5<->ExtendedGcd (A, B) <->text557.htm#5909<->ExtendedGcd (A, B) : SuElement, SuElement -&gt; SuElement, SuElement, SuElement, SuElement, SuElement, SuElement
5<->CanonicalElement (S, v) <->text557.htm#5910<->CanonicalElement (S, v) : SuRng, FldRatElt -&gt; SuElement
4<->RngSlope_euclidean-basics (Example H55E2)<->text557.htm#5911<->RngSlope_euclidean-basics (Example H55E2)
4<->Example-euclidean-basics :<->text557.htm#5911<->Example-euclidean-basics :: RngSlope_euclidean-basics (Example H55E2)
3<->Intrinsics (SERIES RINGS OVER p-ADIC RINGS)<->text557.htm#5902<->Intrinsics (SERIES RINGS OVER p-ADIC RINGS)
3<->euclidean-algorithm :<->text557.htm#5901<->euclidean-algorithm :: Euclidean Algorithm (SERIES RINGS OVER p-ADIC RINGS)
3<->introduction :<->text557.htm<->introduction :: Introduction (SERIES RINGS OVER p-ADIC RINGS)
3<->matrices-modules :<->text558.htm<->matrices-modules :: Matrices and Modules (SERIES RINGS OVER p-ADIC RINGS)
3<->matrices :<->text558.htm#5913<->matrices :: Matrices (SERIES RINGS OVER p-ADIC RINGS)
5<->SuMatrixSpace :: SpMatrixSpace (S, r, c) <->text558.htm#5914<->SuMatrixSpace :: SpMatrixSpace (S, r, c) : SpRng, RngIntElt, RngIntElt -&gt; SpMatRng
5<->SpMatrixSpace (S, r, c) <->text558.htm#5914<->SpMatrixSpace (S, r, c) : SpRng, RngIntElt, RngIntElt -&gt; SpMatRng
5<->IdentityMatrix (S) <->text558.htm#5915<->IdentityMatrix (S) : SpMatRng -> SpMat
5<->ZeroMatrix :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->ZeroMatrix (S, n) : SpRng, RngIntElt -> SpMat :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix (S, n) : SpRng, RngIntElt -> SpMat :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->ZeroMatrix (S, r, c) : SpRng, RngIntElt, RngIntElt -> SpMat :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix (S, r, c) : SpRng, RngIntElt, RngIntElt -> SpMat :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->IdentityMatrix (S, n) <->text558.htm#5915<->IdentityMatrix (S, n) : SuRng, RngIntElt -> SuMat
5<->IdentityMatrix (S) <->text558.htm#5915<->IdentityMatrix (S) : SuMatRng -> SuMat
5<->ZeroMatrix (S) : SuMatRng -> SuMat :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix (S) : SuMatRng -> SuMat :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->ZeroMatrix (S, n) : SuRng, RngIntElt -> SuMat :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix (S, n) : SuRng, RngIntElt -> SuMat :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->ZeroMatrix (S, r, c) : SuRng, RngIntElt, RngIntElt -> SuMat :: IdentityMatrix (S, n) <->text558.htm#5915<->ZeroMatrix (S, r, c) : SuRng, RngIntElt, RngIntElt -> SuMat :: IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->IdentityMatrix (S, n) <->text558.htm#5915<->IdentityMatrix (S, n) : SpRng, RngIntElt -&gt; SpMat
5<->SpMatrix (r, c, A) <->text558.htm#5916<->SpMatrix (r, c, A) : RngIntElt, RngIntElt, SeqEnum -> SpMat
5<->SpMatrix (v) <->text558.htm#5916<->SpMatrix (v) : SeqEnum -> SpMat
5<->SpMatrix (A) <->text558.htm#5916<->SpMatrix (A) : SeqEnum -> SpMat
5<->SuMatrix :: SpMatrix (A) <->text558.htm#5916<->SuMatrix :: SpMatrix (A) : SeqEnum -&gt; SpMat
5<->SuMatrix (v) : SeqEnum -> SuMat :: SpMatrix (A) <->text558.htm#5916<->SuMatrix (v) : SeqEnum -> SuMat :: SpMatrix (A) : SeqEnum -&gt; SpMat
5<->SpMatrix (A) <->text558.htm#5916<->SpMatrix (A) : SeqEnum -&gt; SpMat
5<->GaussValuations (M) <->text558.htm#5917<->GaussValuations (M) : SuMat -> SeqEnum
5<->GaussValuations (M) <->text558.htm#5917<->GaussValuations (M) : SpMat -&gt; SeqEnum
5<->WeierstrassDegrees (M) <->text558.htm#5918<->WeierstrassDegrees (M) : SuMat -> SeqEnum
5<->WeierstrassDegrees (M) <->text558.htm#5918<->WeierstrassDegrees (M) : SpMat -&gt; SeqEnum
5<->LeadingTerms (M) <->text558.htm#5919<->LeadingTerms (M) : SuMat -> Mtrx
5<->LeadingTerms (M) <->text558.htm#5919<->LeadingTerms (M) : SpMat -&gt; Mtrx
5<->WeierstrassTerms (M) <->text558.htm#5920<->WeierstrassTerms (M) : SuMat -> Mtrx
5<->WeierstrassTerms (M) <->text558.htm#5920<->WeierstrassTerms (M) : SpMat -&gt; Mtrx
5<->IsWeaklyZero (M) <->text558.htm#5921<->IsWeaklyZero (M) : SuMat -> BoolElt
5<->IsWeaklyZero (M) <->text558.htm#5921<->IsWeaklyZero (M) : SpMat -&gt; BoolElt
5<->EchelonForm (M) <->text558.htm#5922<->EchelonForm (M) : SuMat -> SuMat, SuMat
5<->EchelonForm (M) <->text558.htm#5922<->EchelonForm (M) : SpMat -&gt; SpMat, SpMat
5<->HermiteForm (M) <->text558.htm#5923<->HermiteForm (M) : SuMat -> SuMat, SuMat
5<->HermiteForm (M) <->text558.htm#5923<->HermiteForm (M) : SpMat -&gt; SpMat, SpMat
5<->SmithForm (M) <->text558.htm#5924<->SmithForm (M) : SuMat -> SuMat, SuMat, SuMat
5<->SmithForm (M) <->text558.htm#5924<->SmithForm (M) : SpMat -&gt; SpMat, SpMat, SpMat
5<->Kernel (M) <->text558.htm#5925<->Kernel (M) : SuMat -> SuSpc
5<->Image :: Kernel (M) <->text558.htm#5925<->Image :: Kernel (M) : SpMat -&gt; SpSpc
5<->Image (M) : SuMat -> SuSpc :: Kernel (M) <->text558.htm#5925<->Image (M) : SuMat -> SuSpc :: Kernel (M) : SpMat -&gt; SpSpc
5<->Kernel (M) <->text558.htm#5925<->Kernel (M) : SpMat -&gt; SpSpc
4<->RngSlope_sp-matrices (Example H55E3)<->text558.htm#5926<->RngSlope_sp-matrices (Example H55E3)
4<->Example-sp-matrices :<->text558.htm#5926<->Example-sp-matrices :: RngSlope_sp-matrices (Example H55E3)
4<->RngSlope_su-matrices (Example H55E4)<->text558.htm#5927<->RngSlope_su-matrices (Example H55E4)
4<->Example-su-matrices :<->text558.htm#5927<->Example-su-matrices :: RngSlope_su-matrices (Example H55E4)
3<->matrices :<->text558.htm#5913<->matrices :: Matrices (SERIES RINGS OVER p-ADIC RINGS)
3<->Modules (SERIES RINGS OVER p-ADIC RINGS)<->text558.htm#5928<->Modules (SERIES RINGS OVER p-ADIC RINGS)
5<->SuSpace :: SpSpace (R, n) <->text558.htm#5929<->SuSpace :: SpSpace (R, n) : SpRng, RngIntElt -&gt; SpSpc
5<->SpSpace (R, n) <->text558.htm#5929<->SpSpace (R, n) : SpRng, RngIntElt -&gt; SpSpc
5<->SuSpace :: SpSpace (M) <->text558.htm#5930<->SuSpace :: SpSpace (M) : SpMat -&gt; SpSpc
5<->SpSpace (M) <->text558.htm#5930<->SpSpace (M) : SpMat -&gt; SpSpc
5<->SuSpace :: SpSpace (v) <->text558.htm#5931<->SuSpace :: SpSpace (v) : SeqEnum -&gt; SpSpc
5<->SpSpace (v) <->text558.htm#5931<->SpSpace (v) : SeqEnum -&gt; SpSpc
5<->Ambient (S) <->text558.htm#5932<->Ambient (S) : SuSpc -> SuSpc
5<->Ambient (S) <->text558.htm#5932<->Ambient (S) : SpSpc -&gt; SpSpc
5<->Parent (v) <->text558.htm#5933<->Parent (v) : SuVec -> SuSpc
5<->Parent (v) <->text558.htm#5933<->Parent (v) : SpVec -&gt; SpSpc
5<->ZeroVector (S) <->text558.htm#5934<->ZeroVector (S) : SuSpc -> SuVec
5<->ZeroVector (S) <->text558.htm#5934<->ZeroVector (S) : SpSpc -&gt; SpVec
5<->SuVector :: SpVector (e) <->text558.htm#5935<->SuVector :: SpVector (e) : SeqEnum -&gt; SpVec
5<->SpVector (e) <->text558.htm#5935<->SpVector (e) : SeqEnum -&gt; SpVec
5<->Basis (S) <->text558.htm#5936<->Basis (S) :  SuSpc -> SeqEnum
5<->Basis (S) <->text558.htm#5936<->Basis (S) : SpSpc -&gt; SeqEnum
5<->BasisMatrix (S) <->text558.htm#5937<->BasisMatrix (S) :  SuSpc -> SuMat
5<->BasisMatrix (S) <->text558.htm#5937<->BasisMatrix (S) : SpSpc -&gt; SpMat
5<->Dimension (S) <->text558.htm#5938<->Dimension (S) : SuSpc -> RngIntElt
5<->Degree :: Dimension (S) <->text558.htm#5938<->Degree :: Dimension (S) : SpSpc -&gt; RngIntElt
5<->Degree (S) : SuSpc -> RngIntElt :: Dimension (S) <->text558.htm#5938<->Degree (S) : SuSpc -> RngIntElt :: Dimension (S) : SpSpc -&gt; RngIntElt
5<->Dimension (S) <->text558.htm#5938<->Dimension (S) : SpSpc -&gt; RngIntElt
5<->LeadingTerms (v) <->text558.htm#5939<->LeadingTerms (v) : SuVec -> ModTupRngElt
5<->LeadingTerms (v) <->text558.htm#5939<->LeadingTerms (v) : SpVec -&gt; ModTupRngElt
5<->WeierstrassTerms (v) <->text558.htm#5940<->WeierstrassTerms (v) : SuVec -> ModTupRngElt
5<->WeierstrassTerms (v) <->text558.htm#5940<->WeierstrassTerms (v) : SpVec -&gt; ModTupRngElt
5<->GaussValuations (v) <->text558.htm#5941<->GaussValuations (v) : SuVec -> SeqEnum
5<->GaussValuations (v) <->text558.htm#5941<->GaussValuations (v) : SpVec -&gt; SeqEnum
5<->WeierstrassDegrees (v) <->text558.htm#5942<->WeierstrassDegrees (v) : SuVec -> SeqEnum
5<->WeierstrassDegrees (v) <->text558.htm#5942<->WeierstrassDegrees (v) : SpVec -&gt; SeqEnum
5<->IsWeaklyZero (v) <->text558.htm#5943<->IsWeaklyZero (v) : SuVec -> BoolElt
5<->IsWeaklyZero (v) <->text558.htm#5943<->IsWeaklyZero (v) : SpVec -&gt; BoolElt
5<->M1 + M2 <->text558.htm#5944<->M1 + M2 : SuSpc, SuSpc -> SuSpc
5<->DirectSum :: M1 + M2 <->text558.htm#5944<->DirectSum :: M1 + M2 : SpSpc, SpSpc -&gt; SpSpc
5<->DirectSum (M1, M2) : SuSpc, SuSpc -> SuSpc :: M1 + M2 <->text558.htm#5944<->DirectSum (M1, M2) : SuSpc, SuSpc -> SuSpc :: M1 + M2 : SpSpc, SpSpc -&gt; SpSpc
5<->meet :: M1 + M2 <->text558.htm#5944<->meet :: M1 + M2 : SpSpc, SpSpc -&gt; SpSpc
5<->M1 meet M2 : SuSpc, SuSpc -> SuSpc :: M1 + M2 <->text558.htm#5944<->M1 meet M2 : SuSpc, SuSpc -> SuSpc :: M1 + M2 : SpSpc, SpSpc -&gt; SpSpc
5<->M1 + M2 <->text558.htm#5944<->M1 + M2 : SpSpc, SpSpc -&gt; SpSpc
5<->S * M <->text558.htm#5945<->S * M : SuSpc, SuMat -> SuSpc
5<->S * M <->text558.htm#5945<->S * M : SpSpc, SpMat -&gt; SpSpc
5<->IsConsistent (M, v) <->text558.htm#5946<->IsConsistent (M, v) : SuMat, SuVec -> BoolElt, SuVec
5<->IsConsistent (M, e) <->text558.htm#5946<->IsConsistent (M, e) : SpMat, SeqEnum -> BoolElt, SeqEnum
5<->IsConsistent (M, e) <->text558.htm#5946<->IsConsistent (M, e) : SuMat, SeqEnum -> BoolElt, SeqEnum
5<->IsConsistent (M, W) <->text558.htm#5946<->IsConsistent (M, W) : SpMat, SpMat -> BoolElt, SpMat, SpMat
5<->IsConsistent (M, W) <->text558.htm#5946<->IsConsistent (M, W) : SuMat, SpMat -> BoolElt, SuMat, SuMat
5<->in :: IsConsistent (M, v) <->text558.htm#5946<->in :: IsConsistent (M, v) : SpMat, SpVec -&gt; BoolElt, SpVec
5<->v in M : SuVec, SpMat -> BoolElt, SuVec :: IsConsistent (M, v) <->text558.htm#5946<->v in M : SuVec, SpMat -> BoolElt, SuVec :: IsConsistent (M, v) : SpMat, SpVec -&gt; BoolElt, SpVec
5<->IsConsistent (M, v) <->text558.htm#5946<->IsConsistent (M, v) : SpMat, SpVec -&gt; BoolElt, SpVec
5<->IsSubspace (A, B) <->text558.htm#5947<->IsSubspace (A, B) : SuSpc, SuSpc -> BoolElt, SuMat
5<->IsSubspace (A, B) <->text558.htm#5947<->IsSubspace (A, B) : SpSpc, SpSpc -&gt; BoolElt, SpMat
4<->RngSlope_sp-mod-basics (Example H55E5)<->text558.htm#5948<->RngSlope_sp-mod-basics (Example H55E5)
4<->Example-sp-mod-basics :<->text558.htm#5948<->Example-sp-mod-basics :: RngSlope_sp-mod-basics (Example H55E5)
4<->RngSlope_sp-kernel (Example H55E6)<->text558.htm#5949<->RngSlope_sp-kernel (Example H55E6)
4<->Example-sp-kernel :<->text558.htm#5949<->Example-sp-kernel :: RngSlope_sp-kernel (Example H55E6)
4<->RngSlope_su-module (Example H55E7)<->text558.htm#5950<->RngSlope_su-module (Example H55E7)
4<->Example-su-module :<->text558.htm#5950<->Example-su-module :: RngSlope_su-module (Example H55E7)
3<->Modules (SERIES RINGS OVER p-ADIC RINGS)<->text558.htm#5928<->Modules (SERIES RINGS OVER p-ADIC RINGS)
3<->matrices-modules :<->text558.htm<->matrices-modules :: Matrices and Modules (SERIES RINGS OVER p-ADIC RINGS)
3<->p-adic-pow-ser :<->text556.htm<->p-adic-pow-ser :: SERIES RINGS OVER p-ADIC RINGS
3<->GalRep :<->text561.htm<->GalRep :: LOCAL GALOIS REPRESENTATIONS
3<->overview :<->text562.htm<->overview :: Overview (LOCAL GALOIS REPRESENTATIONS)
3<->printing :<->text562.htm#5955<->printing :: Notation and Printing (LOCAL GALOIS REPRESENTATIONS)
4<->GalRep_galrep-printing (Example H56E1)<->text562.htm#5956<->GalRep_galrep-printing (Example H56E1)
4<->Example-galrep-printing :<->text562.htm#5956<->Example-galrep-printing :: GalRep_galrep-printing (Example H56E1)
3<->printing :<->text562.htm#5955<->printing :: Notation and Printing (LOCAL GALOIS REPRESENTATIONS)
3<->conventions :<->text562.htm#5957<->conventions :: Conventions (LOCAL GALOIS REPRESENTATIONS)
3<->implementation :<->text562.htm#5958<->implementation :: Implementation Notes (LOCAL GALOIS REPRESENTATIONS)
3<->overview :<->text562.htm<->overview :: Overview (LOCAL GALOIS REPRESENTATIONS)
3<->creating :<->text563.htm<->creating :: Creating Galois Representations (LOCAL GALOIS REPRESENTATIONS)
5<->ZeroRepresentation(K) <->text563.htm#5960<->ZeroRepresentation(K) : FldPad -&gt; GalRep
4<->GalRep_galrep-zerorepresentation (Example H56E2)<->text563.htm#5961<->GalRep_galrep-zerorepresentation (Example H56E2)
4<->Example-galrep-zerorepresentation :<->text563.htm#5961<->Example-galrep-zerorepresentation :: GalRep_galrep-zerorepresentation (Example H56E2)
5<->PrincipalCharacter(K) <->text563.htm#5962<->PrincipalCharacter(K) : FldPad -&gt; GalRep
4<->GalRep_galrep-principalcharacter (Example H56E3)<->text563.htm#5963<->GalRep_galrep-principalcharacter (Example H56E3)
4<->Example-galrep-principalcharacter :<->text563.htm#5963<->Example-galrep-principalcharacter :: GalRep_galrep-principalcharacter (Example H56E3)
5<->CyclotomicCharacter(K) <->text563.htm#5964<->CyclotomicCharacter(K) : FldPad -&gt; GalRep
4<->GalRep_galrep-cyclotomiccharacter (Example H56E4)<->text563.htm#5965<->GalRep_galrep-cyclotomiccharacter (Example H56E4)
4<->Example-galrep-cyclotomiccharacter :<->text563.htm#5965<->Example-galrep-cyclotomiccharacter :: GalRep_galrep-cyclotomiccharacter (Example H56E4)
5<->UnramifiedCharacter(K,c) <->text563.htm#5966<->UnramifiedCharacter(K,c) : FldPad, Any -&gt; GalRep
4<->GalRep_galrep-unramifiedcharacter (Example H56E5)<->text563.htm#5967<->GalRep_galrep-unramifiedcharacter (Example H56E5)
4<->Example-galrep-unramifiedcharacter :<->text563.htm#5967<->Example-galrep-unramifiedcharacter :: GalRep_galrep-unramifiedcharacter (Example H56E5)
5<->UnramifiedRepresentation(K,CharPoly) <->text563.htm#5968<->UnramifiedRepresentation(K,CharPoly) : FldPad,RngUPolElt -&gt; GalRep
4<->GalRep_galrep-unramifiedrepresentation (Example H56E6)<->text563.htm#5969<->GalRep_galrep-unramifiedrepresentation (Example H56E6)
4<->Example-galrep-unramifiedrepresentation :<->text563.htm#5969<->Example-galrep-unramifiedrepresentation :: GalRep_galrep-unramifiedrepresentation (Example H56E6)
5<->UnramifiedRepresentation(K,dim,dimcomputed,CharPoly) <->text563.htm#5970<->UnramifiedRepresentation(K,dim,dimcomputed,CharPoly) : FldPad,RngIntElt,RngIntElt,RngUPolElt -&gt; GalRep
4<->GalRep_galrep-notfullycomputed (Example H56E7)<->text563.htm#5971<->GalRep_galrep-notfullycomputed (Example H56E7)
4<->Example-galrep-notfullycomputed :<->text563.htm#5971<->Example-galrep-notfullycomputed :: GalRep_galrep-notfullycomputed (Example H56E7)
5<->SP(K,n) <->text563.htm#5972<->SP(K,n) : FldPad,RngIntElt -&gt; GalRep
4<->GalRep_galrep-sp (Example H56E8)<->text563.htm#5973<->GalRep_galrep-sp (Example H56E8)
4<->Example-galrep-sp :<->text563.htm#5973<->Example-galrep-sp :: GalRep_galrep-sp (Example H56E8)
5<->SP(K,f,n) <->text563.htm#5974<->SP(K,f,n) : FldPad,RngUPolElt,RngIntElt -&gt; GalRep
4<->GalRep_galrep-sp-1 (Example H56E9)<->text563.htm#5975<->GalRep_galrep-sp-1 (Example H56E9)
4<->Example-galrep-sp-1 :<->text563.htm#5975<->Example-galrep-sp-1 :: GalRep_galrep-sp-1 (Example H56E9)
3<->finiteG :<->text563.htm#5976<->finiteG :: Representations from Finite Extensions (LOCAL GALOIS REPRESENTATIONS)
5<->GaloisRepresentations(F,K) <->text563.htm#5977<->GaloisRepresentations(F,K) : FldPad,FldPad -&gt; SeqEnum[GalRep]
4<->GalRep_galrep-galoisrepresentations-1 (Example H56E10)<->text563.htm#5978<->GalRep_galrep-galoisrepresentations-1 (Example H56E10)
4<->Example-galrep-galoisrepresentations-1 :<->text563.htm#5978<->Example-galrep-galoisrepresentations-1 :: GalRep_galrep-galoisrepresentations-1 (Example H56E10)
5<->GaloisRepresentations(f) <->text563.htm#5979<->GaloisRepresentations(f) : RngUPolEltFldPad -&gt; SeqEnum[GalRep]
4<->GalRep_galrep-galoisrepresentations (Example H56E11)<->text563.htm#5980<->GalRep_galrep-galoisrepresentations (Example H56E11)
4<->Example-galrep-galoisrepresentations :<->text563.htm#5980<->Example-galrep-galoisrepresentations :: GalRep_galrep-galoisrepresentations (Example H56E11)
5<->PermutationCharacter(F,K) <->text563.htm#5981<->PermutationCharacter(F,K) : FldPad,FldPad -&gt; GalRep
4<->GalRep_galrep-permutationcharacter (Example H56E12)<->text563.htm#5982<->GalRep_galrep-permutationcharacter (Example H56E12)
4<->Example-galrep-permutationcharacter :<->text563.htm#5982<->Example-galrep-permutationcharacter :: GalRep_galrep-permutationcharacter (Example H56E12)
5<->A !! chi <->text563.htm#5983<->A !! chi : GalRep, SeqEnum -> GalRep
5<->A !! chi <->text563.htm#5983<->A !! chi : GalRep, AlgChtrElt -&gt; GalRep
4<->GalRep_galrep-smash (Example H56E13)<->text563.htm#5984<->GalRep_galrep-smash (Example H56E13)
4<->Example-galrep-smash :<->text563.htm#5984<->Example-galrep-smash :: GalRep_galrep-smash (Example H56E13)
3<->finiteG :<->text563.htm#5976<->finiteG :: Representations from Finite Extensions (LOCAL GALOIS REPRESENTATIONS)
3<->artinetc :<->text563.htm#5985<->artinetc :: Local Representations of Global Objects (LOCAL GALOIS REPRESENTATIONS)
5<->GaloisRepresentation(chi,p) <->text563.htm#5986<->GaloisRepresentation(chi,p) : GrpDrchElt,RngIntElt -&gt; GalRep
4<->GalRep_galrep-dirichlet (Example H56E14)<->text563.htm#5987<->GalRep_galrep-dirichlet (Example H56E14)
4<->Example-galrep-dirichlet :<->text563.htm#5987<->Example-galrep-dirichlet :: GalRep_galrep-dirichlet (Example H56E14)
5<->GaloisRepresentation(A,p) <->text563.htm#5988<->GaloisRepresentation(A,p) : ArtRep,RngIntElt -&gt; GalRep
4<->GalRep_galrep-artin (Example H56E15)<->text563.htm#5989<->GalRep_galrep-artin (Example H56E15)
4<->Example-galrep-artin :<->text563.htm#5989<->Example-galrep-artin :: GalRep_galrep-artin (Example H56E15)
5<->GaloisRepresentation(E) <->text563.htm#5990<->GaloisRepresentation(E) : CrvEll -&gt; GalRep
4<->GalRep_galrep-E (Example H56E16)<->text563.htm#5991<->GalRep_galrep-E (Example H56E16)
4<->Example-galrep-E :<->text563.htm#5991<->Example-galrep-E :: GalRep_galrep-E (Example H56E16)
5<->GaloisRepresentation(E,p) <->text563.htm#5992<->GaloisRepresentation(E,p) : CrvEll,RngIntElt -&gt; GalRep
4<->GalRep_galrep-E-p (Example H56E17)<->text563.htm#5993<->GalRep_galrep-E-p (Example H56E17)
4<->Example-galrep-E-p :<->text563.htm#5993<->Example-galrep-E-p :: GalRep_galrep-E-p (Example H56E17)
5<->GaloisRepresentation(E,P) <->text563.htm#5994<->GaloisRepresentation(E,P) : CrvEll,RngOrdIdl -&gt; GalRep
4<->GalRep_galrep-E-P (Example H56E18)<->text563.htm#5995<->GalRep_galrep-E-P (Example H56E18)
4<->Example-galrep-E-P :<->text563.htm#5995<->Example-galrep-E-P :: GalRep_galrep-E-P (Example H56E18)
5<->GaloisRepresentation(C) <->text563.htm#5996<->GaloisRepresentation(C) : CrvHyp[FldPad] -&gt; GalRep
4<->GalRep_galrep-crvhyp-Qp (Example H56E19)<->text563.htm#5997<->GalRep_galrep-crvhyp-Qp (Example H56E19)
4<->Example-galrep-crvhyp-Qp :<->text563.htm#5997<->Example-galrep-crvhyp-Qp :: GalRep_galrep-crvhyp-Qp (Example H56E19)
5<->GaloisRepresentation(C,p) <->text563.htm#5998<->GaloisRepresentation(C,p) : CrvHyp[FldRat], RngIntElt -&gt; GalRep
4<->GalRep_galrep-crvhyp-Q (Example H56E20)<->text563.htm#5999<->GalRep_galrep-crvhyp-Q (Example H56E20)
4<->Example-galrep-crvhyp-Q :<->text563.htm#5999<->Example-galrep-crvhyp-Q :: GalRep_galrep-crvhyp-Q (Example H56E20)
5<->GaloisRepresentation(C,P) <->text563.htm#6000<->GaloisRepresentation(C,P) : CrvHyp[FldNum],RngOrdIdl -&gt; GalRep
4<->GalRep_galrep-crvhyp-nf (Example H56E21)<->text563.htm#6001<->GalRep_galrep-crvhyp-nf (Example H56E21)
4<->Example-galrep-crvhyp-nf :<->text563.htm#6001<->Example-galrep-crvhyp-nf :: GalRep_galrep-crvhyp-nf (Example H56E21)
5<->GaloisRepresentation(f,p) <->text563.htm#6002<->GaloisRepresentation(f,p) : ModFrmElt,RngIntElt -&gt; GalRep
4<->GalRep_galrep-f-p (Example H56E22)<->text563.htm#6003<->GalRep_galrep-f-p (Example H56E22)
4<->Example-galrep-f-p :<->text563.htm#6003<->Example-galrep-f-p :: GalRep_galrep-f-p (Example H56E22)
3<->artinetc :<->text563.htm#5985<->artinetc :: Local Representations of Global Objects (LOCAL GALOIS REPRESENTATIONS)
3<->creating :<->text563.htm<->creating :: Creating Galois Representations (LOCAL GALOIS REPRESENTATIONS)
3<->invariants :<->text564.htm<->invariants :: Basic Invariants (LOCAL GALOIS REPRESENTATIONS)
5<->BaseField(A) <->text564.htm#6005<->BaseField(A) : GalRep -&gt; FldPad
5<->Dimension :: Degree(A) <->text564.htm#6006<->Dimension :: Degree(A) : GalRep -&gt; RngIntElt
5<->Degree(A) <->text564.htm#6006<->Degree(A) : GalRep -&gt; RngIntElt
4<->GalRep_galrep-degree (Example H56E23)<->text564.htm#6007<->GalRep_galrep-degree (Example H56E23)
4<->Example-galrep-degree :<->text564.htm#6007<->Example-galrep-degree :: GalRep_galrep-degree (Example H56E23)
5<->GaloisGroup :: Group(A) <->text564.htm#6008<->GaloisGroup :: Group(A) : GalRep -&gt; GrpPerm
5<->Group(A) <->text564.htm#6008<->Group(A) : GalRep -&gt; GrpPerm
4<->GalRep_galrep-group (Example H56E24)<->text564.htm#6009<->GalRep_galrep-group (Example H56E24)
4<->Example-galrep-group :<->text564.htm#6009<->Example-galrep-group :: GalRep_galrep-group (Example H56E24)
5<->FrobeniusElement(A) <->text564.htm#6010<->FrobeniusElement(A) : GalRep -&gt; GrpPermElt
4<->GalRep_galrep-frobeniuselement (Example H56E25)<->text564.htm#6011<->GalRep_galrep-frobeniuselement (Example H56E25)
4<->Example-galrep-frobeniuselement :<->text564.htm#6011<->Example-galrep-frobeniuselement :: GalRep_galrep-frobeniuselement (Example H56E25)
5<->Character(A) <->text564.htm#6012<->Character(A) : GalRep -&gt; AlgChtrElt
4<->GalRep_galrep-character (Example H56E26)<->text564.htm#6013<->GalRep_galrep-character (Example H56E26)
4<->Example-galrep-character :<->text564.htm#6013<->Example-galrep-character :: GalRep_galrep-character (Example H56E26)
5<->Field(A) <->text564.htm#6014<->Field(A) : GalRep -&gt; FldPad
5<->DefiningPolynomial(A) <->text564.htm#6015<->DefiningPolynomial(A) : GalRep -&gt; RngUPolElt
4<->GalRep_galrep-definingpolynomial (Example H56E27)<->text564.htm#6016<->GalRep_galrep-definingpolynomial (Example H56E27)
4<->Example-galrep-definingpolynomial :<->text564.htm#6016<->Example-galrep-definingpolynomial :: GalRep_galrep-definingpolynomial (Example H56E27)
5<->Automorphism(A,g) <->text564.htm#6017<->Automorphism(A,g) : GalRep,GrpPermElt -&gt; Map
4<->GalRep_galrep-automorphism (Example H56E28)<->text564.htm#6018<->GalRep_galrep-automorphism (Example H56E28)
4<->Example-galrep-automorphism :<->text564.htm#6018<->Example-galrep-automorphism :: GalRep_galrep-automorphism (Example H56E28)
5<->EulerFactor(A) <->text564.htm#6019<->EulerFactor(A) : GalRep -&gt; RngUPolElt
4<->GalRep_galrep-eulerfactor (Example H56E29)<->text564.htm#6020<->GalRep_galrep-eulerfactor (Example H56E29)
4<->Example-galrep-eulerfactor :<->text564.htm#6020<->Example-galrep-eulerfactor :: GalRep_galrep-eulerfactor (Example H56E29)
5<->IsZero(A) <->text564.htm#6021<->IsZero(A) : GalRep -&gt; BoolElt
5<->IsOne(A) <->text564.htm#6022<->IsOne(A) : GalRep -&gt; BoolElt
5<->Factorization(A) <->text564.htm#6023<->Factorization(A) : GalRep -&gt; List,GalRep
4<->GalRep_galrep-factorization (Example H56E30)<->text564.htm#6024<->GalRep_galrep-factorization (Example H56E30)
4<->Example-galrep-factorization :<->text564.htm#6024<->Example-galrep-factorization :: GalRep_galrep-factorization (Example H56E30)
3<->ramification :<->text564.htm#6025<->ramification :: Ramification (LOCAL GALOIS REPRESENTATIONS)
5<->InertiaGroup(A) <->text564.htm#6026<->InertiaGroup(A) : GalRep -&gt; GrpPerm
4<->GalRep_galrep-inertia (Example H56E31)<->text564.htm#6027<->GalRep_galrep-inertia (Example H56E31)
4<->Example-galrep-inertia :<->text564.htm#6027<->Example-galrep-inertia :: GalRep_galrep-inertia (Example H56E31)
5<->InertiaGroup(A,n) <->text564.htm#6028<->InertiaGroup(A,n) : GalRep,RngIntElt -&gt; GrpPerm
4<->GalRep_galrep-higherinertia (Example H56E32)<->text564.htm#6029<->GalRep_galrep-higherinertia (Example H56E32)
4<->Example-galrep-higherinertia :<->text564.htm#6029<->Example-galrep-higherinertia :: GalRep_galrep-higherinertia (Example H56E32)
5<->IsUnramified(A) <->text564.htm#6030<->IsUnramified(A) : GalRep -&gt; BoolElt
4<->GalRep_galrep-isunramified (Example H56E33)<->text564.htm#6031<->GalRep_galrep-isunramified (Example H56E33)
4<->Example-galrep-isunramified :<->text564.htm#6031<->Example-galrep-isunramified :: GalRep_galrep-isunramified (Example H56E33)
5<->IsRamified(A) <->text564.htm#6032<->IsRamified(A) : GalRep -&gt; BoolElt
4<->GalRep_galrep-isramified (Example H56E34)<->text564.htm#6033<->GalRep_galrep-isramified (Example H56E34)
4<->Example-galrep-isramified :<->text564.htm#6033<->Example-galrep-isramified :: GalRep_galrep-isramified (Example H56E34)
5<->IsTamelyRamified(A) <->text564.htm#6034<->IsTamelyRamified(A) : GalRep -&gt; BoolElt
5<->IsWildlyRamified(A) <->text564.htm#6035<->IsWildlyRamified(A) : GalRep -&gt; BoolElt
4<->GalRep_galrep-iswildlyramified (Example H56E35)<->text564.htm#6036<->GalRep_galrep-iswildlyramified (Example H56E35)
4<->Example-galrep-iswildlyramified :<->text564.htm#6036<->Example-galrep-iswildlyramified :: GalRep_galrep-iswildlyramified (Example H56E35)
5<->InertiaInvariants(A) <->text564.htm#6037<->InertiaInvariants(A) : GalRep -&gt; GalRep
4<->GalRep_galrep-inertiainvariants (Example H56E36)<->text564.htm#6038<->GalRep_galrep-inertiainvariants (Example H56E36)
4<->Example-galrep-inertiainvariants :<->text564.htm#6038<->Example-galrep-inertiainvariants :: GalRep_galrep-inertiainvariants (Example H56E36)
5<->ConductorExponent(A) <->text564.htm#6039<->ConductorExponent(A) : GalRep -&gt; RngIntElt
5<->Conductor(A) <->text564.htm#6040<->Conductor(A) : GalRep -&gt; FldPadElt
4<->GalRep_galrep-conductor (Example H56E37)<->text564.htm#6041<->GalRep_galrep-conductor (Example H56E37)
4<->Example-galrep-conductor :<->text564.htm#6041<->Example-galrep-conductor :: GalRep_galrep-conductor (Example H56E37)
5<->EpsilonFactor(A) <->text564.htm#6042<->EpsilonFactor(A) : GalRep -&gt; FldComElt
5<->RootNumber(A) <->text564.htm#6043<->RootNumber(A) : GalRep -&gt; FldComElt
4<->GalRep_epsilon-rootnumber (Example H56E38)<->text564.htm#6044<->GalRep_epsilon-rootnumber (Example H56E38)
4<->Example-epsilon-rootnumber :<->text564.htm#6044<->Example-epsilon-rootnumber :: GalRep_epsilon-rootnumber (Example H56E38)
3<->ramification :<->text564.htm#6025<->ramification :: Ramification (LOCAL GALOIS REPRESENTATIONS)
3<->decomposition :<->text564.htm#6045<->decomposition :: Semisimplicity and Irreducibles (LOCAL GALOIS REPRESENTATIONS)
5<->IsIrreducible(A) <->text564.htm#6046<->IsIrreducible(A) : GalRep -&gt; BoolElt
4<->GalRep_galrep-isirreducible (Example H56E39)<->text564.htm#6047<->GalRep_galrep-isirreducible (Example H56E39)
4<->Example-galrep-isirreducible :<->text564.htm#6047<->Example-galrep-isirreducible :: GalRep_galrep-isirreducible (Example H56E39)
5<->IsIndecomposable(A) <->text564.htm#6048<->IsIndecomposable(A) : GalRep -&gt; BoolElt
5<->IsSemisimple(A) <->text564.htm#6049<->IsSemisimple(A) : GalRep -&gt; BoolElt
5<->Semisimplification(A) <->text564.htm#6050<->Semisimplification(A) : GalRep -&gt; GalRep
5<->Decomposition(A) <->text564.htm#6051<->Decomposition(A) : GalRep -&gt; SeqEnum[GalRep]
4<->GalRep_galrep-decomposition (Example H56E40)<->text564.htm#6052<->GalRep_galrep-decomposition (Example H56E40)
4<->Example-galrep-decomposition :<->text564.htm#6052<->Example-galrep-decomposition :: GalRep_galrep-decomposition (Example H56E40)
3<->decomposition :<->text564.htm#6045<->decomposition :: Semisimplicity and Irreducibles (LOCAL GALOIS REPRESENTATIONS)
3<->invariants :<->text564.htm<->invariants :: Basic Invariants (LOCAL GALOIS REPRESENTATIONS)
3<->arithmetic :<->text565.htm<->arithmetic :: Arithmetic (LOCAL GALOIS REPRESENTATIONS)
5<->A1 + A2 <->text565.htm#6054<->A1 + A2 : GalRep,GalRep -&gt; GalRep
4<->GalRep_galrep-sum (Example H56E41)<->text565.htm#6055<->GalRep_galrep-sum (Example H56E41)
4<->Example-galrep-sum :<->text565.htm#6055<->Example-galrep-sum :: GalRep_galrep-sum (Example H56E41)
5<->A1 - A2 <->text565.htm#6056<->A1 - A2 : GalRep,GalRep -&gt; BoolElt
4<->GalRep_galrep-difference (Example H56E42)<->text565.htm#6057<->GalRep_galrep-difference (Example H56E42)
4<->Example-galrep-difference :<->text565.htm#6057<->Example-galrep-difference :: GalRep_galrep-difference (Example H56E42)
5<->A1 * A2 <->text565.htm#6058<->A1 * A2 : GalRep,GalRep -&gt; GalRep
4<->GalRep_galrep-product (Example H56E43)<->text565.htm#6059<->GalRep_galrep-product (Example H56E43)
4<->Example-galrep-product :<->text565.htm#6059<->Example-galrep-product :: GalRep_galrep-product (Example H56E43)
5<->A1 / A2 <->text565.htm#6060<->A1 / A2 : RngIntElt,GalRep -> GalRep
5<->A1 / A2 <->text565.htm#6060<->A1 / A2 : GalRep,GalRep -&gt; GalRep
5<->A ^ n <->text565.htm#6061<->A ^ n : GalRep,Any -&gt; GalRep
4<->GalRep_galrep-power (Example H56E44)<->text565.htm#6062<->GalRep_galrep-power (Example H56E44)
4<->Example-galrep-power :<->text565.htm#6062<->Example-galrep-power :: GalRep_galrep-power (Example H56E44)
5<->A1 eq A2 <->text565.htm#6063<->A1 eq A2 : GalRep,GalRep -&gt; BoolElt
4<->GalRep_galrep-eq (Example H56E45)<->text565.htm#6064<->GalRep_galrep-eq (Example H56E45)
4<->Example-galrep-eq :<->text565.htm#6064<->Example-galrep-eq :: GalRep_galrep-eq (Example H56E45)
5<->Determinant(A) <->text565.htm#6065<->Determinant(A) : GalRep -&gt; GalRep
4<->GalRep_galrep-determinant (Example H56E46)<->text565.htm#6066<->GalRep_galrep-determinant (Example H56E46)
4<->Example-galrep-determinant :<->text565.htm#6066<->Example-galrep-determinant :: GalRep_galrep-determinant (Example H56E46)
5<->TateTwist(A,n) <->text565.htm#6067<->TateTwist(A,n) : GalRep,RngIntElt -&gt; GalRep
4<->GalRep_galrep-tatetwist (Example H56E47)<->text565.htm#6068<->GalRep_galrep-tatetwist (Example H56E47)
4<->Example-galrep-tatetwist :<->text565.htm#6068<->Example-galrep-tatetwist :: GalRep_galrep-tatetwist (Example H56E47)
3<->arithmetic :<->text565.htm<->arithmetic :: Arithmetic (LOCAL GALOIS REPRESENTATIONS)
3<->precision :<->text566.htm<->precision :: Changing Precision (LOCAL GALOIS REPRESENTATIONS)
5<->Precision(A) <->text566.htm#6070<->Precision(A) : GalRep -&gt; RngIntElt
5<->ChangePrecision(~A,Prec) <->text566.htm#6071<->ChangePrecision(~A,Prec) : GalRep,RngIntElt -&gt;
5<->ChangePrecision(A,Prec) <->text566.htm#6072<->ChangePrecision(A,Prec) : GalRep,RngIntElt -&gt; GalRep
4<->GalRep_galrep-precision (Example H56E48)<->text566.htm#6073<->GalRep_galrep-precision (Example H56E48)
4<->Example-galrep-precision :<->text566.htm#6073<->Example-galrep-precision :: GalRep_galrep-precision (Example H56E48)
3<->precision :<->text566.htm<->precision :: Changing Precision (LOCAL GALOIS REPRESENTATIONS)
3<->fields :<->text567.htm<->fields :: Changing Fields (LOCAL GALOIS REPRESENTATIONS)
5<->Minimize(A) <->text567.htm#6075<->Minimize(A) : GalRep -&gt; GalRep
4<->GalRep_galrep-minimize (Example H56E49)<->text567.htm#6076<->GalRep_galrep-minimize (Example H56E49)
4<->Example-galrep-minimize :<->text567.htm#6076<->Example-galrep-minimize :: GalRep_galrep-minimize (Example H56E49)
5<->BaseChange :: Restriction(A,L) <->text567.htm#6077<->BaseChange :: Restriction(A,L) : GalRep,FldPad -&gt; GalRep
5<->Restriction(A,L) <->text567.htm#6077<->Restriction(A,L) : GalRep,FldPad -&gt; GalRep
4<->GalRep_galrep-basechange (Example H56E50)<->text567.htm#6078<->GalRep_galrep-basechange (Example H56E50)
4<->Example-galrep-basechange :<->text567.htm#6078<->Example-galrep-basechange :: GalRep_galrep-basechange (Example H56E50)
5<->Induction(A,K0) <->text567.htm#6079<->Induction(A,K0) : GalRep,FldPad -&gt; GalRep
4<->GalRep_galrep-induction (Example H56E51)<->text567.htm#6080<->GalRep_galrep-induction (Example H56E51)
4<->Example-galrep-induction :<->text567.htm#6080<->Example-galrep-induction :: GalRep_galrep-induction (Example H56E51)
3<->fields :<->text567.htm<->fields :: Changing Fields (LOCAL GALOIS REPRESENTATIONS)
3<->fields :<->text568.htm<->fields :: Advanced Examples (LOCAL GALOIS REPRESENTATIONS)
3<->galrep-s-ex1 :: Example<->text568.htm#6082<->galrep-s-ex1 :: Example: Local and Global Epsilon Factors for Dirichlet Characters (LOCAL GALOIS REPRESENTATIONS)
4<->GalRep_galrep-funeq (Example H56E52)<->text568.htm#6083<->GalRep_galrep-funeq (Example H56E52)
4<->Example-galrep-funeq :<->text568.htm#6083<->Example-galrep-funeq :: GalRep_galrep-funeq (Example H56E52)
3<->galrep-s-ex1 :: Example<->text568.htm#6082<->galrep-s-ex1 :: Example: Local and Global Epsilon Factors for Dirichlet Characters (LOCAL GALOIS REPRESENTATIONS)
3<->galrep-s-ex2 :: Example<->text568.htm#6084<->galrep-s-ex2 :: Example: Reconstructing a Galois Representation from its Euler Factors (LOCAL GALOIS REPRESENTATIONS)
4<->GalRep_galrep-reconstruction (Example H56E53)<->text568.htm#6085<->GalRep_galrep-reconstruction (Example H56E53)
4<->Example-galrep-reconstruction :<->text568.htm#6085<->Example-galrep-reconstruction :: GalRep_galrep-reconstruction (Example H56E53)
3<->galrep-s-ex2 :: Example<->text568.htm#6084<->galrep-s-ex2 :: Example: Reconstructing a Galois Representation from its Euler Factors (LOCAL GALOIS REPRESENTATIONS)
3<->fields :<->text568.htm<->fields :: Advanced Examples (LOCAL GALOIS REPRESENTATIONS)
3<->GalRep :<->text561.htm<->GalRep :: LOCAL GALOIS REPRESENTATIONS
3<->detail :<->text570.htm<->detail :: INTRODUCTION TO MODULES [MODULES]
3<->overview :<->text571.htm<->overview :: Overview (INTRODUCTION TO MODULES [MODULES])
3<->definition :<->text572.htm<->definition :: General Modules (INTRODUCTION TO MODULES [MODULES])
3<->presentation :<->text573.htm<->presentation :: The Presentation of Submodules (INTRODUCTION TO MODULES [MODULES])
3<->detail :<->text570.htm<->detail :: INTRODUCTION TO MODULES [MODULES]
3<->general :<->text575.htm<->general :: FREE MODULES
3<->introduction :<->text576.htm<->introduction :: Introduction (FREE MODULES)
3<->free-modules :<->text576.htm#6094<->free-modules :: Free Modules (FREE MODULES)
3<->ModRng :<->text576.htm#6095<->ModRng :: Module Categories (FREE MODULES)
3<->ModTupFld :<->text576.htm#6095<->ModTupFld :: Module Categories (FREE MODULES)
3<->ModMatFld :<->text576.htm#6095<->ModMatFld :: Module Categories (FREE MODULES)
3<->ModTupEd :<->text576.htm#6095<->ModTupEd :: Module Categories (FREE MODULES)
3<->ModTupRng :<->text576.htm#6095<->ModTupRng :: Module Categories (FREE MODULES)
3<->ModMatRng :<->text576.htm#6095<->ModMatRng :: Module Categories (FREE MODULES)
3<->category :<->text576.htm#6095<->category :: Module Categories (FREE MODULES)
3<->presentation :<->text576.htm#6096<->presentation :: Presentation of Submodules (FREE MODULES)
3<->notation :<->text576.htm#6097<->notation :: Notation (FREE MODULES)
3<->introduction :<->text576.htm<->introduction :: Introduction (FREE MODULES)
3<->creation-module :<->text577.htm<->creation-module :: Definition of a Module (FREE MODULES)
3<->tuple-module :<->text577.htm#6099<->tuple-module :: Construction of Modules of n-tuples (FREE MODULES)
5<->RModule :: RSpace(R, n) <->text577.htm#6100<->RModule :: RSpace(R, n) : Rng, RngIntElt -&gt; ModTupRng
5<->RSpace(R, n) <->text577.htm#6100<->RSpace(R, n) : Rng, RngIntElt -&gt; ModTupRng
5<->RSpace(R, n, F) <->text577.htm#6101<->RSpace(R, n, F) : Rng, RngIntElt, Mtrx -&gt; ModTupRng
4<->ModRng_CreateZ6 (Example H58E1)<->text577.htm#6102<->ModRng_CreateZ6 (Example H58E1)
4<->Example-CreateZ6 :<->text577.htm#6102<->Example-CreateZ6 :: ModRng_CreateZ6 (Example H58E1)
3<->tuple-module :<->text577.htm#6099<->tuple-module :: Construction of Modules of n-tuples (FREE MODULES)
3<->matrix-module :<->text577.htm#6103<->matrix-module :: Construction of Modules of m x n Matrices (FREE MODULES)
5<->RMatrixSpace(R, m, n) <->text577.htm#6104<->RMatrixSpace(R, m, n) : Rng, RngIntElt, RngIntElt -&gt; ModMatRng
3<->matrix-module :<->text577.htm#6103<->matrix-module :: Construction of Modules of m x n Matrices (FREE MODULES)
3<->module-with-basis :<->text577.htm#6105<->module-with-basis :: Construction of a Module with Specified Basis (FREE MODULES)
5<->RSpaceWithBasis :: RModuleWithBasis(Q) <->text577.htm#6106<->RSpaceWithBasis :: RModuleWithBasis(Q) : [ModFldElt] -&gt; ModFld
5<->RSpaceWithBasis(a) : AlgMatElt -> ModTupRng :: RModuleWithBasis(Q) <->text577.htm#6106<->RSpaceWithBasis(a) : AlgMatElt -> ModTupRng :: RModuleWithBasis(Q) : [ModFldElt] -&gt; ModFld
5<->RSpaceWithBasis(a) : ModMatRngElt -> ModTupRng :: RModuleWithBasis(Q) <->text577.htm#6106<->RSpaceWithBasis(a) : ModMatRngElt -> ModTupRng :: RModuleWithBasis(Q) : [ModFldElt] -&gt; ModFld
5<->RModuleWithBasis(Q) <->text577.htm#6106<->RModuleWithBasis(Q) : [ModFldElt] -&gt; ModFld
5<->RMatrixSpaceWithBasis(Q) <->text577.htm#6107<->RMatrixSpaceWithBasis(Q) : [ModTupRngElt] -&gt; ModMatRng
3<->module-with-basis :<->text577.htm#6105<->module-with-basis :: Construction of a Module with Specified Basis (FREE MODULES)
3<->creation-module :<->text577.htm<->creation-module :: Definition of a Module (FREE MODULES)
3<->access :<->text578.htm<->access :: Accessing Module Information (FREE MODULES)
5<->M . i <->text578.htm#6109<->M . i : ModTupRng, RngIntElt -&gt; ModElt
5<->BaseRing :: CoefficientRing(M) <->text578.htm#6110<->BaseRing :: CoefficientRing(M) : ModTupRng -&gt; Rng
5<->CoefficientRing(M) <->text578.htm#6110<->CoefficientRing(M) : ModRng -> Rng
5<->BaseRing(M) : ModRng -> Rng :: CoefficientRing(M) <->text578.htm#6110<->BaseRing(M) : ModRng -> Rng :: CoefficientRing(M) : ModTupRng -&gt; Rng
5<->CoefficientField :: CoefficientRing(M) <->text578.htm#6110<->CoefficientField :: CoefficientRing(M) : ModTupRng -&gt; Rng
5<->BaseField :: CoefficientRing(M) <->text578.htm#6110<->BaseField :: CoefficientRing(M) : ModTupRng -&gt; Rng
5<->CoefficientRing(M) <->text578.htm#6110<->CoefficientRing(M) : ModTupRng -&gt; Rng
5<->Generators(M) <->text578.htm#6111<->Generators(M) : ModTupRng -&gt; { ModTupRngElt }
5<->OverDimension(M) <->text578.htm#6112<->OverDimension(M) : ModTupRng -&gt; RngIntElt
5<->OverDimension(u) <->text578.htm#6113<->OverDimension(u) : ModTupRngElt -&gt; RngIntElt
5<->Moduli(M) <->text578.htm#6114<->Moduli(M) : ModTupRng -&gt; [ RngElt ]
5<->Parent(u) <->text578.htm#6115<->Parent(u) : ModTupRngElt -&gt; ModRng
5<->Generic(M) <->text578.htm#6116<->Generic(M) : ModRng -&gt; ModRng
3<->access :<->text578.htm<->access :: Accessing Module Information (FREE MODULES)
3<->operation :<->text579.htm<->operation :: Standard Constructions (FREE MODULES)
3<->modification-coefficient-ring :<->text579.htm#6118<->modification-coefficient-ring :: Changing the Coefficient Ring (FREE MODULES)
5<->ChangeRing(M, S) <->text579.htm#6119<->ChangeRing(M, S) : ModRng, Rng -&gt; ModRng, Map
5<->ChangeRing(M, S, f) <->text579.htm#6120<->ChangeRing(M, S, f) : ModRng, Rng, Map -&gt; ModRng, Map
5<->ChangeUniverse(~x, R) <->text579.htm#6121<->ChangeUniverse(~x, R) : ModTupRngElt, Rng -&gt; ModRng, Map
3<->modification-coefficient-ring :<->text579.htm#6118<->modification-coefficient-ring :: Changing the Coefficient Ring (FREE MODULES)
3<->extension :<->text579.htm#6122<->extension :: Direct Sums (FREE MODULES)
5<->DirectSum(M, N) <->text579.htm#6123<->DirectSum(M, N) : ModRng, ModRng -&gt; ModRng, Map, Map, Map, Map
5<->DirectSum(Q) <->text579.htm#6124<->DirectSum(Q) : [ ModRng ] -&gt; [ ModRng ], [ Map ], [ Map ]
3<->extension :<->text579.htm#6122<->extension :: Direct Sums (FREE MODULES)
3<->operation :<->text579.htm<->operation :: Standard Constructions (FREE MODULES)
3<->creation :<->text580.htm<->creation :: Construction of Elements (FREE MODULES)
5<->elt< M | a1, ..., an > <->text580.htm#6126<->elt&lt; M | a<sub>1</sub>, ..., a<sub>n</sub> &gt; : ModTupRng, List -&gt; ModTupRngElt
5<->M ! Q <->text580.htm#6127<->M ! Q : ModTupRng, [RngElt] -&gt; ModTupRngElt
5<->CharacteristicVector(M, S) <->text580.htm#6128<->CharacteristicVector(M, S) : ModRng, { RngIntElt } -&gt; ModRngElt
5<->! :: Zero(M) <->text580.htm#6129<->! :: Zero(M) : ModRng -&gt; ModRngElt
5<->Zero(M) <->text580.htm#6129<->Zero(M) : ModRng -&gt; ModRngElt
5<->Random(M) <->text580.htm#6130<->Random(M) : ModRng -&gt; ModRngElt
4<->ModRng_Elements (Example H58E2)<->text580.htm#6131<->ModRng_Elements (Example H58E2)
4<->Example-Elements :<->text580.htm#6131<->Example-Elements :: ModRng_Elements (Example H58E2)
3<->deconstruction :<->text580.htm#6132<->deconstruction :: Deconstruction of Elements (FREE MODULES)
5<->Eltseq :: ElementToSequence(u) <->text580.htm#6133<->Eltseq :: ElementToSequence(u) : ModTupRngElt -&gt; [RngElt]
5<->ElementToSequence(u) <->text580.htm#6133<->ElementToSequence(u) : ModTupRngElt -&gt; [RngElt]
3<->deconstruction :<->text580.htm#6132<->deconstruction :: Deconstruction of Elements (FREE MODULES)
3<->operation :<->text580.htm#6134<->operation :: Operations on Module Elements (FREE MODULES)
3<->arithmetic :<->text580.htm#6135<->arithmetic :: Arithmetic (FREE MODULES)
5<->u + v <->text580.htm#6136<->u + v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->- u <->text580.htm#6137<->- u : ModTupRngElt -&gt; ModTupRngElt
5<->u - v <->text580.htm#6138<->u - v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->x * u <->text580.htm#6139<->x * u : RngElt, ModTupRngElt -&gt; ModTupRngElt
5<->u * x <->text580.htm#6140<->u * x : ModTupRngElt, RngElt -&gt; ModTupRngElt
5<->u / x <->text580.htm#6141<->u / x : ModTupRngElt, RngElt -&gt; ModTupRngElt
3<->arithmetic :<->text580.htm#6135<->arithmetic :: Arithmetic (FREE MODULES)
3<->indexing :<->text580.htm#6142<->indexing :: Indexing (FREE MODULES)
5<->u[i] <->text580.htm#6143<->u[i] : ModTupRngElt, RngIntElt -&gt; RngElt
5<->[] :: u[i] := x <->text580.htm#6144<->[] :: u[i] := x : ModTupRngElt, RngIntElt, RngElt -&gt; ModTupRngElt
3<->indexing :<->text580.htm#6142<->indexing :: Indexing (FREE MODULES)
3<->normalization :<->text580.htm#6145<->normalization :: Normalization (FREE MODULES)
5<->Normalise :: Normalize(u) <->text580.htm#6146<->Normalise :: Normalize(u) : ModTupRngElt -&gt; ModTupRngElt
5<->Normalize(u) <->text580.htm#6146<->Normalize(u) : ModTupRngElt -&gt; ModTupRngElt
5<->Rotate(u, k) <->text580.htm#6147<->Rotate(u, k) : ModTupRngElt, RngIntElt -&gt; ModTupRngElt
5<->Rotate(~u, k) <->text580.htm#6148<->Rotate(~u, k) : ModTupRngElt, RngIntElt -&gt;
4<->ModRng_Operations (Example H58E3)<->text580.htm#6149<->ModRng_Operations (Example H58E3)
4<->Example-Operations :<->text580.htm#6149<->Example-Operations :: ModRng_Operations (Example H58E3)
3<->normalization :<->text580.htm#6145<->normalization :: Normalization (FREE MODULES)
3<->operation :<->text580.htm#6134<->operation :: Operations on Module Elements (FREE MODULES)
3<->properties :<->text580.htm#6150<->properties :: Properties of Vectors (FREE MODULES)
5<->IsZero(u) <->text580.htm#6151<->IsZero(u) : ModTupRngElt -&gt; BoolElt
5<->Depth(v) <->text580.htm#6152<->Depth(v) : ModTupRngElt -&gt; RngIntElt
5<->Support(u) <->text580.htm#6153<->Support(u) : ModTupRngElt -&gt; { RngElt }
5<->Weight(u) <->text580.htm#6154<->Weight(u) : ModTupRngElt -&gt; RngIntElt
3<->properties :<->text580.htm#6150<->properties :: Properties of Vectors (FREE MODULES)
3<->inner-product :<->text580.htm#6155<->inner-product :: Inner Products (FREE MODULES)
5<->InnerProduct :: (u, v) <->text580.htm#6156<->InnerProduct :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->(,) :: (u, v) <->text580.htm#6156<->(,) :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->Norm(u) <->text580.htm#6157<->Norm(u) : ModTupRngElt -&gt; RngElt
3<->inner-product :<->text580.htm#6155<->inner-product :: Inner Products (FREE MODULES)
3<->creation :<->text580.htm<->creation :: Construction of Elements (FREE MODULES)
3<->basis :<->text581.htm<->basis :: Bases (FREE MODULES)
5<->Basis(M) <->text581.htm#6159<->Basis(M) : ModTupRng -&gt; [ModTupRngElt]
5<->Rank(M) <->text581.htm#6160<->Rank(M) : ModTupRng -&gt; RngIntElt
5<->Coordinates(M, u) <->text581.htm#6161<->Coordinates(M, u) : ModTupRng, ModTupRngElt -&gt; [RngElt]
3<->basis :<->text581.htm<->basis :: Bases (FREE MODULES)
3<->submodule :<->text582.htm<->submodule :: Submodules (FREE MODULES)
3<->submodule :<->text582.htm#6163<->submodule :: Construction of Submodules (FREE MODULES)
5<->sub <->text582.htm#6164<->sub<M | L> : ModMatRng, List -> ModMatRng
5<->sub<M | L> <->text582.htm#6164<->sub&lt;M | L&gt; : ModTupRng, List -&gt; ModTupRng
4<->ModRng_Submodule (Example H58E4)<->text582.htm#6165<->ModRng_Submodule (Example H58E4)
4<->Example-Submodule :<->text582.htm#6165<->Example-Submodule :: ModRng_Submodule (Example H58E4)
3<->submodule :<->text582.htm#6163<->submodule :: Construction of Submodules (FREE MODULES)
3<->operation-submodule :<->text582.htm#6166<->operation-submodule :: Operations on Submodules (FREE MODULES)
3<->Boolean :<->text582.htm#6167<->Boolean :: Membership and Equality (FREE MODULES)
5<->u in M <->text582.htm#6168<->u in M : ModMatRngElt, ModMatRng -> BoolElt	
5<->u in M <->text582.htm#6168<->u in M : ModTupRngElt, ModTupRng -&gt; BoolElt
5<->u notin M <->text582.htm#6169<->u notin M : ModMatRngElt, ModMatRng -> BoolElt
5<->u notin M <->text582.htm#6169<->u notin M : ModTupRngElt, ModTupRng -&gt; BoolElt
5<->N subset M <->text582.htm#6170<->N subset M : ModMatRng, ModMatRng -> BoolElt
5<->N subset M <->text582.htm#6170<->N subset M : ModTupRng, ModTupRng -&gt; BoolElt
5<->N notsubset M <->text582.htm#6171<->N notsubset M : ModMatRng, ModMatRng -> BoolElt
5<->N notsubset M <->text582.htm#6171<->N notsubset M : ModTupRng, ModTupRng -&gt; BoolElt
5<->M eq N <->text582.htm#6172<->M eq N : ModMatRng, ModMatRng -> BoolElt
5<->N eq M <->text582.htm#6172<->N eq M : ModTupRng, ModTupRng -&gt; BoolElt
5<->M ne N <->text582.htm#6173<->M ne N : ModMatRng, ModMatRng -> BoolElt
5<->N ne M <->text582.htm#6173<->N ne M : ModTupRng, ModTupRng -&gt; BoolElt
3<->Boolean :<->text582.htm#6167<->Boolean :: Membership and Equality (FREE MODULES)
3<->other :<->text582.htm#6174<->other :: Operations on Submodules (FREE MODULES)
5<->M + N <->text582.htm#6175<->M + N : ModMatRng, ModMatRng -> ModMatRng
5<->M + N <->text582.htm#6175<->M + N : ModTupRng, ModTupRng -&gt; ModTupRng
5<->M meet N <->text582.htm#6176<->M meet N : ModMatRng, ModMatRng -> ModMatRng
5<->M meet N <->text582.htm#6176<->M meet N : ModTupRng, ModTupRng -&gt; ModTupRng
3<->other :<->text582.htm#6174<->other :: Operations on Submodules (FREE MODULES)
3<->submodule :<->text582.htm<->submodule :: Submodules (FREE MODULES)
3<->quotient :<->text583.htm<->quotient :: Quotient Modules (FREE MODULES)
3<->quotient :<->text583.htm#6178<->quotient :: Construction of Quotient Modules (FREE MODULES)
5<->quo <->text583.htm#6179<->quo<M | L> : ModMatRng, List -> ModMatRng
5<->quo<M | L> <->text583.htm#6179<->quo&lt;M | L&gt; : ModTupRng, List -&gt; ModTupRng
3<->quotient :<->text583.htm#6178<->quotient :: Construction of Quotient Modules (FREE MODULES)
3<->quotient :<->text583.htm<->quotient :: Quotient Modules (FREE MODULES)
3<->homomorphisms :<->text584.htm<->homomorphisms :: Homomorphisms (FREE MODULES)
3<->creation :<->text584.htm#6181<->creation :: Hom<sub>R</sub>(M, N) for R-modules (FREE MODULES)
5<->Hom(M, N) <->text584.htm#6182<->Hom(M, N) : ModTupRng, ModTupRng -&gt; ModMatRng
5<->RMatrixSpace(R, m, n) <->text584.htm#6183<->RMatrixSpace(R, m, n) : Rng, RngIntElt, RngIntElt -&gt; ModMatRng
4<->ModRng_Create (Example H58E5)<->text584.htm#6184<->ModRng_Create (Example H58E5)
4<->Example-Create :<->text584.htm#6184<->Example-Create :: ModRng_Create (Example H58E5)
3<->creation :<->text584.htm#6181<->creation :: Hom<sub>R</sub>(M, N) for R-modules (FREE MODULES)
3<->creation-hom :<->text584.htm#6185<->creation-hom :: Hom<sub>R</sub>(M, N) for Matrix Modules (FREE MODULES)
5<->Hom(M, N, "right") <->text584.htm#6186<->Hom(M, N, "right") : ModMatRng, ModMatRng, MonStgElt -&gt; ModMatRng
5<->Hom(M, N, "left") <->text584.htm#6187<->Hom(M, N, "left") : ModMatRng, ModMatRng, MonStgElt -&gt; ModMatRng
4<->ModRng_CreateHom (Example H58E6)<->text584.htm#6188<->ModRng_CreateHom (Example H58E6)
4<->Example-CreateHom :<->text584.htm#6188<->Example-CreateHom :: ModRng_CreateHom (Example H58E6)
3<->creation-hom :<->text584.htm#6185<->creation-hom :: Hom<sub>R</sub>(M, N) for Matrix Modules (FREE MODULES)
3<->module-with-basis :<->text584.htm#6189<->module-with-basis :: Modules Hom<sub>R</sub>(M, N) with Given  Basis (FREE MODULES)
5<->RMatrixSpaceWithBasis(Q) <->text584.htm#6190<->RMatrixSpaceWithBasis(Q) : [ ModMatRngElt ] -&gt; ModMatRng
5<->KMatrixSpaceWithBasis(Q) <->text584.htm#6191<->KMatrixSpaceWithBasis(Q) : [ ModMatRngElt ] -&gt; ModMatRng
3<->module-with-basis :<->text584.htm#6189<->module-with-basis :: Modules Hom<sub>R</sub>(M, N) with Given  Basis (FREE MODULES)
3<->endomorphism-ring :<->text584.htm#6192<->endomorphism-ring :: The Endomorphsim Ring (FREE MODULES)
5<->EndomorphismAlgebra(M) <->text584.htm#6193<->EndomorphismAlgebra(M) : ModTupRng -&gt; AlgMat
4<->ModRng_CreateHom (Example H58E7)<->text584.htm#6194<->ModRng_CreateHom (Example H58E7)
4<->Example-CreateHom :<->text584.htm#6194<->Example-CreateHom :: ModRng_CreateHom (Example H58E7)
3<->endomorphism-ring :<->text584.htm#6192<->endomorphism-ring :: The Endomorphsim Ring (FREE MODULES)
3<->reduce :<->text584.htm#6195<->reduce :: The Reduced Form of a Matrix Module (FREE MODULES)
5<->Reduce(H) <->text584.htm#6196<->Reduce(H) : ModMatRng -&gt; ModMatRng, Map
4<->ModRng_Reduce (Example H58E8)<->text584.htm#6197<->ModRng_Reduce (Example H58E8)
4<->Example-Reduce :<->text584.htm#6197<->Example-Reduce :: ModRng_Reduce (Example H58E8)
4<->ModRng_ReduceHom (Example H58E9)<->text584.htm#6198<->ModRng_ReduceHom (Example H58E9)
4<->Example-ReduceHom :<->text584.htm#6198<->Example-ReduceHom :: ModRng_ReduceHom (Example H58E9)
3<->reduce :<->text584.htm#6195<->reduce :: The Reduced Form of a Matrix Module (FREE MODULES)
3<->creation-element :<->text584.htm#6199<->creation-element :: Construction of a Matrix (FREE MODULES)
5<->M ! Q <->text584.htm#6200<->M ! Q : ModMatRng, [RngElt] -&gt; ModMatRngElt
4<->ModRng_Matrix (Example H58E10)<->text584.htm#6201<->ModRng_Matrix (Example H58E10)
4<->Example-Matrix :<->text584.htm#6201<->Example-Matrix :: ModRng_Matrix (Example H58E10)
3<->creation-element :<->text584.htm#6199<->creation-element :: Construction of a Matrix (FREE MODULES)
3<->operation-element :<->text584.htm#6202<->operation-element :: Element Operations (FREE MODULES)
5<->() :: u * a <->text584.htm#6203<->() :: u * a : ModTupRngElt, ModMatRngElt -&gt; ModTupRngElt
5<->u * a <->text584.htm#6203<->u * a : ModTupRngElt, ModMatRngElt -&gt; ModTupRngElt
5<->a * b <->text584.htm#6204<->a * b : ModMatRngElt, ModMatRngElt -&gt; ModMatRngElt
5<->a ^ -1 <->text584.htm#6205<->a ^ -1 : ModMatRngElt, RngIntElt -&gt; ModMatRngElt
5<->Codomain(S) <->text584.htm#6206<->Codomain(S) : ModMatRng -&gt; ModTupRng
5<->Codomain(a) <->text584.htm#6207<->Codomain(a) : ModMatRngElt -&gt; ModTupRng
5<->Cokernel(a) <->text584.htm#6208<->Cokernel(a) : ModMatRngElt -&gt; ModTupRng
5<->Domain(S) <->text584.htm#6209<->Domain(S) : ModMatRng -&gt; ModTupRng
5<->Domain(a) <->text584.htm#6210<->Domain(a) : ModMatRngElt -&gt; ModTupRng
5<->Image(a) <->text584.htm#6211<->Image(a) : ModMatRngElt -&gt; ModTupRng
5<->NullSpace :: Kernel(a) <->text584.htm#6212<->NullSpace :: Kernel(a) : ModMatRngElt -&gt; ModTupRng
5<->Kernel(a) <->text584.htm#6212<->Kernel(a) : ModMatRngElt -&gt; ModTupRng
5<->Morphism(M, N) <->text584.htm#6213<->Morphism(M, N) : ModTupRng, ModTupRng -&gt; ModMatRngElt
5<->Rank(a) <->text584.htm#6214<->Rank(a) : ModMatRngElt -&gt; RngIntElt
5<->IsBijective(a) <->text584.htm#6215<->IsBijective(a) : ModMatRngElt -&gt; BoolElt
5<->IsInjective(a) <->text584.htm#6216<->IsInjective(a) : ModMatRngElt -&gt; BoolElt
5<->IsSurjective(a) <->text584.htm#6217<->IsSurjective(a) : ModMatRngElt -&gt; BoolElt
4<->ModRng_Operations (Example H58E11)<->text584.htm#6218<->ModRng_Operations (Example H58E11)
4<->Example-Operations :<->text584.htm#6218<->Example-Operations :: ModRng_Operations (Example H58E11)
3<->operation-element :<->text584.htm#6202<->operation-element :: Element Operations (FREE MODULES)
3<->homomorphisms :<->text584.htm<->homomorphisms :: Homomorphisms (FREE MODULES)
3<->general :<->text575.htm<->general :: FREE MODULES
3<->dedekind-modules :<->text586.htm<->dedekind-modules :: MODULES OVER DEDEKIND DOMAINS
3<->ModDed :<->text587.htm<->ModDed :: Introduction (MODULES OVER DEDEKIND DOMAINS)
3<->introduction :<->text587.htm<->introduction :: Introduction (MODULES OVER DEDEKIND DOMAINS)
3<->creation :<->text588.htm<->creation :: Creation of Modules (MODULES OVER DEDEKIND DOMAINS)
5<->Module(O, n) <->text588.htm#6223<->Module(O, n) : RngFunOrd, RngIntElt -> ModDed
5<->Module(O, n) <->text588.htm#6223<->Module(O, n) : RngOrd, RngIntElt -&gt; ModDed
5<->Module(O) <->text588.htm#6224<->Module(O) : RngFunOrd -> ModDed, Map
5<->Module(O) <->text588.htm#6224<->Module(O) : RngOrd -&gt; ModDed, Map
5<->Module(I) <->text588.htm#6225<->Module(I) : RngFunOrdIdl -> ModDed, Map
5<->Module(I) <->text588.htm#6225<->Module(I) : RngOrdFracIdl -&gt; ModDed, Map
5<->Module(S) <->text588.htm#6226<->Module(S) : SeqEnum[Tup] -&gt; ModDed, Map
5<->Module(S) <->text588.htm#6227<->Module(S) : SeqEnum[RngFunOrdIdl] -> ModDed
5<->Module(S) <->text588.htm#6227<->Module(S) : SeqEnum[RngOrdFracIdl] -&gt; ModDed
5<->Module(S) <->text588.htm#6228<->Module(S) : SeqEnum[ModElt] -&gt; ModDed, Map
4<->ModDed_create (Example H59E1)<->text588.htm#6229<->ModDed_create (Example H59E1)
4<->Example-create :<->text588.htm#6229<->Example-create :: ModDed_create (Example H59E1)
5<->sub <->text588.htm#6230<->sub<M | m1, .., mn> : ModDed, ModDedElt, ..., ModDedElt -> ModDed, Map 
5<->sub<M | m> <->text588.htm#6230<->sub&lt;M | m&gt; : ModDed, SeqEnum[ModDedElt] -&gt; ModDed, Map
5<->quo <->text588.htm#6231<->quo<M | m> : ModDed, SeqEnum[ModDedElt] -> ModDed, Map
5<->quo <->text588.htm#6231<->quo<M | m1, .., mn> : ModDed, ModDedElt, ..., ModDedElt -> ModDed, Map
5<->quo<M | S> <->text588.htm#6231<->quo&lt;M | S&gt; : ModDed, ModDed -&gt; ModDed, Map
4<->ModDed_sub-quo (Example H59E2)<->text588.htm#6232<->ModDed_sub-quo (Example H59E2)
4<->Example-sub-quo :<->text588.htm#6232<->Example-sub-quo :: ModDed_sub-quo (Example H59E2)
3<->creation :<->text588.htm<->creation :: Creation of Modules (MODULES OVER DEDEKIND DOMAINS)
3<->elementary-functions :<->text589.htm<->elementary-functions :: Elementary Functions (MODULES OVER DEDEKIND DOMAINS)
5<->CoefficientRing :: BaseRing(M) <->text589.htm#6234<->CoefficientRing :: BaseRing(M) : ModDed -&gt; Rng
5<->BaseRing(M) <->text589.htm#6234<->BaseRing(M) : ModDed -&gt; Rng
5<->Degree(M) <->text589.htm#6235<->Degree(M) : ModDed -&gt; RngIntElt
5<->NumberOfGenerators :: Ngens(M) <->text589.htm#6236<->NumberOfGenerators :: Ngens(M) : ModDed -&gt; RngIntElt
5<->Ngens(M) <->text589.htm#6236<->Ngens(M) : ModDed -&gt; RngIntElt
5<->M . i <->text589.htm#6237<->M . i : ModDed, RngIntElt -&gt; ModTupRngElt
5<->Determinant(M) <->text589.htm#6238<->Determinant(M) : ModDed -> RngFunOrdIdl
5<->Determinant(M) <->text589.htm#6238<->Determinant(M) : ModDed -&gt; RngOrdIdl
5<->Dimension(M) <->text589.htm#6239<->Dimension(M) : ModDed -&gt; RngIntElt
5<->Contents(M) <->text589.htm#6240<->Contents(M) : ModDed -&gt; RngOrdFracIdl
5<->Simplify(M) <->text589.htm#6241<->Simplify(M) : ModDed -&gt; ModDed
5<->EmbeddingSpace(M) <->text589.htm#6242<->EmbeddingSpace(M) : ModDed -&gt; Mod
4<->ModDed_elementary (Example H59E3)<->text589.htm#6243<->ModDed_elementary (Example H59E3)
4<->Example-elementary :<->text589.htm#6243<->Example-elementary :: ModDed_elementary (Example H59E3)
3<->elementary-functions :<->text589.htm<->elementary-functions :: Elementary Functions (MODULES OVER DEDEKIND DOMAINS)
3<->ops :<->text590.htm<->ops :: Predicates on Modules (MODULES OVER DEDEKIND DOMAINS)
5<->M eq N <->text590.htm#6245<->M eq N : ModDed, ModDed -&gt; BoolElt
5<->x in M <->text590.htm#6246<->x in M : Any, ModDed -&gt; BoolElt
5<->M subset N <->text590.htm#6247<->M subset N : ModDed, ModDed -&gt; BoolElt
3<->ops :<->text590.htm<->ops :: Predicates on Modules (MODULES OVER DEDEKIND DOMAINS)
3<->module-arith :<->text591.htm<->module-arith :: Arithmetic with Modules (MODULES OVER DEDEKIND DOMAINS)
5<->I * M <->text591.htm#6249<->I * M : RngFunOrdIdl, ModDed -> ModDed
5<->M * I <->text591.htm#6249<->M * I : ModDed, RngOrdIdl -> ModDed
5<->M * I <->text591.htm#6249<->M * I : ModDed, RngFunOrdIdl -> ModDed
5<->I * M <->text591.htm#6249<->I * M : RngOrdIdl, ModDed -&gt; ModDed
5<->M1 + M2 <->text591.htm#6250<->M1 + M2 : ModDed, ModDed -&gt; ModDed
5<->DirectSum(S) <->text591.htm#6251<->DirectSum(S) : [ModDed] -> ModDed, [Map], [Map]
5<->DirectSum(M1, M2) <->text591.htm#6251<->DirectSum(M1, M2) : ModDed, ModDed -&gt; ModDed, Map, Map, Map, Map
5<->u * I <->text591.htm#6252<->u * I : ModDedElt, RngFunOrdIdl -> ModDed
5<->I * u <->text591.htm#6252<->I * u : RngOrdIdl, ModDedElt -> ModDed
5<->I * u <->text591.htm#6252<->I * u : RngFunOrdIdl, ModDedElt -> ModDed
5<->u * I <->text591.htm#6252<->u * I : ModDedElt, RngOrdIdl -&gt; ModDed
4<->ModDed_ops_arith (Example H59E4)<->text591.htm#6253<->ModDed_ops_arith (Example H59E4)
4<->Example-ops_arith :<->text591.htm#6253<->Example-ops_arith :: ModDed_ops_arith (Example H59E4)
3<->module-arith :<->text591.htm<->module-arith :: Arithmetic with Modules (MODULES OVER DEDEKIND DOMAINS)
3<->basis :<->text592.htm<->basis :: Basis of a Module (MODULES OVER DEDEKIND DOMAINS)
5<->Basis(M) <->text592.htm#6255<->Basis(M) : ModDed -&gt; SeqEnum
5<->PseudoBasis(M) <->text592.htm#6256<->PseudoBasis(M) : ModDed -&gt; SeqEnum
5<->PseudoGenerators(M)<->text592.htm#6257<->PseudoGenerators(M): ModDed -&gt; SeqEnum
3<->basis :<->text592.htm<->basis :: Basis of a Module (MODULES OVER DEDEKIND DOMAINS)
3<->other :<->text593.htm<->other :: Other Functions on Modules (MODULES OVER DEDEKIND DOMAINS)
5<->M1 meet M2 <->text593.htm#6259<->M1 meet M2 : ModDed, ModDed -&gt; ModDed
5<->Dual(M) <->text593.htm#6260<->Dual(M) : ModDed -&gt; ModDed
5<->ElementaryDivisors(M, N) <->text593.htm#6261<->ElementaryDivisors(M, N) : ModDed, ModDed -&gt; SeqEnum
5<->SteinitzClass(M) <->text593.htm#6262<->SteinitzClass(M) : ModDed -&gt; RngOrdIdl
5<->SteinitzForm(M) <->text593.htm#6263<->SteinitzForm(M) : ModDed -&gt; ModDed
4<->ModDed_basis-other (Example H59E5)<->text593.htm#6264<->ModDed_basis-other (Example H59E5)
4<->Example-basis-other :<->text593.htm#6264<->Example-basis-other :: ModDed_basis-other (Example H59E5)
3<->other :<->text593.htm<->other :: Other Functions on Modules (MODULES OVER DEDEKIND DOMAINS)
3<->homomorphisms :<->text594.htm<->homomorphisms :: Homomorphisms between Modules (MODULES OVER DEDEKIND DOMAINS)
5<->hom <->text594.htm#6266<->hom<M \ar N | T> : ModDed, ModDed, SeqEnum[ModTupRngElt] -> Map
5<->hom <->text594.htm#6266<->hom<M \ar N | T> : ModDed, ModDed, MtrxSpcElt -> Map
5<->hom<M -> N | T> <->text594.htm#6266<->hom&lt;M -&gt; N | T&gt; : ModDed, ModDed, Map -&gt; Map
5<->Hom(M, N) <->text594.htm#6267<->Hom(M, N) : ModDed, ModDed -&gt; ModDed, Map
5<->IsSubmodule(M, N) <->text594.htm#6268<->IsSubmodule(M, N) : ModDed, ModDed -&gt; BoolElt, Map
5<->Morphism(M, N) <->text594.htm#6269<->Morphism(M, N) : ModDed, ModDed -&gt; Map
4<->ModDed_hom (Example H59E6)<->text594.htm#6270<->ModDed_hom (Example H59E6)
4<->Example-hom :<->text594.htm#6270<->Example-hom :: ModDed_hom (Example H59E6)
3<->homomorphisms :<->text594.htm<->homomorphisms :: Homomorphisms between Modules (MODULES OVER DEDEKIND DOMAINS)
3<->elements :<->text595.htm<->elements :: Elements of Modules (MODULES OVER DEDEKIND DOMAINS)
3<->creation :<->text595.htm#6272<->creation :: Creation of Elements (MODULES OVER DEDEKIND DOMAINS)
5<->M ! v <->text595.htm#6273<->M ! v : ModDed, ModDedElt -> ModDedElt
5<->M ! v <->text595.htm#6273<->M ! v : ModDed, ModElt -> ModDedElt
5<->M ! v <->text595.htm#6273<->M ! v : ModDed, SeqEnum -&gt; ModDedElt
4<->ModDed_coerce-quo (Example H59E7)<->text595.htm#6274<->ModDed_coerce-quo (Example H59E7)
4<->Example-coerce-quo :<->text595.htm#6274<->Example-coerce-quo :: ModDed_coerce-quo (Example H59E7)
3<->creation :<->text595.htm#6272<->creation :: Creation of Elements (MODULES OVER DEDEKIND DOMAINS)
3<->element-arith :<->text595.htm#6275<->element-arith :: Arithmetic with Elements (MODULES OVER DEDEKIND DOMAINS)
5<->x + y <->text595.htm#6276<->x + y : ModDedElt, ModDedElt -&gt; ModDedElt
5<->x - y <->text595.htm#6277<->x - y : ModDedElt, ModDedElt -&gt; ModDedElt
5<->c * u <->text595.htm#6278<->c * u : RngElt, ModDedElt -> ModDedElt
5<->u * c <->text595.htm#6278<->u * c : ModDedElt, RngElt -&gt; ModDedElt
5<->u / c <->text595.htm#6279<->u / c : ModDedElt, RngElt -&gt; ModDedElt
5<->I * u <->text595.htm#6280<->I * u : RngFunOrdIdl, ModDedElt -> ModDed
5<->u * I <->text595.htm#6280<->u * I : ModDedElt, RngOrdIdl -> ModDed
5<->u * I <->text595.htm#6280<->u * I : ModDedElt, RngFunOrdIdl -> ModDed
5<->I * u <->text595.htm#6280<->I * u : RngOrdIdl, ModDedElt -&gt; ModDed
3<->element-arith :<->text595.htm#6275<->element-arith :: Arithmetic with Elements (MODULES OVER DEDEKIND DOMAINS)
3<->other-elts :<->text595.htm#6281<->other-elts :: Other Functions on Elements (MODULES OVER DEDEKIND DOMAINS)
5<->x eq y <->text595.htm#6282<->x eq y : ModDedElt, ModDedElt -&gt; Bool
5<->IsZero(a) <->text595.htm#6283<->IsZero(a) : ModDedElt -&gt; BoolElt
5<->Eltseq :: ElementToSequence(a) <->text595.htm#6284<->Eltseq :: ElementToSequence(a) : ModDedElt -&gt; SeqEnum
5<->ElementToSequence(a) <->text595.htm#6284<->ElementToSequence(a) : ModDedElt -&gt; SeqEnum
3<->other-elts :<->text595.htm#6281<->other-elts :: Other Functions on Elements (MODULES OVER DEDEKIND DOMAINS)
3<->elements :<->text595.htm<->elements :: Elements of Modules (MODULES OVER DEDEKIND DOMAINS)
3<->PMat :<->text596.htm<->PMat :: Pseudo Matrices (MODULES OVER DEDEKIND DOMAINS)
3<->pmat :<->text596.htm<->pmat :: Pseudo Matrices (MODULES OVER DEDEKIND DOMAINS)
3<->pmat-construct :<->text596.htm#6286<->pmat-construct :: Construction of a Pseudo Matrix (MODULES OVER DEDEKIND DOMAINS)
5<->PseudoMatrix(I, m) <->text596.htm#6287<->PseudoMatrix(I, m) : [RngFunOrdIdl], MtrxSpcElt -> PMat
5<->PseudoMatrix(I, m) <->text596.htm#6287<->PseudoMatrix(I, m) : [RngOrdFracIdl], MtrxSpcElt -&gt; PMat
5<->PseudoMatrix(m) <->text596.htm#6288<->PseudoMatrix(m) : Mtrx[RngOrd] -> PMat
5<->PseudoMatrix(m) <->text596.htm#6288<->PseudoMatrix(m) : Mtrx[FldFunOrd] -> PMat
5<->PseudoMatrix(m) <->text596.htm#6288<->PseudoMatrix(m) : Mtrx[RngFunOrd] -> PMat
5<->PseudoMatrix(m) <->text596.htm#6288<->PseudoMatrix(m) : Mtrx[FldOrd] -&gt; PMat
5<->PseudoMatrix(M) <->text596.htm#6289<->PseudoMatrix(M) : ModDed -&gt; PMat
3<->pmat-construct :<->text596.htm#6286<->pmat-construct :: Construction of a Pseudo Matrix (MODULES OVER DEDEKIND DOMAINS)
3<->pmat-elementary :<->text596.htm#6290<->pmat-elementary :: Elementary Functions (MODULES OVER DEDEKIND DOMAINS)
5<->CoefficientIdeals(P)<->text596.htm#6291<->CoefficientIdeals(P): PMat -&gt; SeqEnum
5<->Matrix(P) <->text596.htm#6292<->Matrix(P) : PMat -&gt; Mtrx
5<->Order(pm) <->text596.htm#6293<->Order(pm) : PMat -&gt; Rng
5<->Dimension(pm) <->text596.htm#6294<->Dimension(pm) : PMat -&gt; RngIntElt
5<->Length(pm) <->text596.htm#6295<->Length(pm) : PMat -&gt; RngIntElt
3<->pmat-elementary :<->text596.htm#6290<->pmat-elementary :: Elementary Functions (MODULES OVER DEDEKIND DOMAINS)
3<->pmat-basis :<->text596.htm#6296<->pmat-basis :: Basis of a Pseudo Matrix (MODULES OVER DEDEKIND DOMAINS)
5<->Basis(P) <->text596.htm#6297<->Basis(P) : PMat -&gt; SeqEnum
3<->pmat-basis :<->text596.htm#6296<->pmat-basis :: Basis of a Pseudo Matrix (MODULES OVER DEDEKIND DOMAINS)
3<->pmat-predicates :<->text596.htm#6298<->pmat-predicates :: Predicates (MODULES OVER DEDEKIND DOMAINS)
5<->p1 eq p2 <->text596.htm#6299<->p1 eq p2 : PMat, PMat -&gt; BoolElt
3<->pmat-predicates :<->text596.htm#6298<->pmat-predicates :: Predicates (MODULES OVER DEDEKIND DOMAINS)
3<->pmat-ops :<->text596.htm#6300<->pmat-ops :: Operations with Pseudo Matrices (MODULES OVER DEDEKIND DOMAINS)
5<->Transpose(P) <->text596.htm#6301<->Transpose(P) : PMat -&gt; PMat
5<->HermiteForm(X) <->text596.htm#6302<->HermiteForm(X) : PMat -&gt; PMat, AlgMatElt
5<->VerticalJoin(X, Y) <->text596.htm#6303<->VerticalJoin(X, Y) : PMat, PMat -&gt; PMat
5<->X meet Y <->text596.htm#6304<->X meet Y : PMat, PMat -&gt; PMat
5<->Module(X) <->text596.htm#6305<->Module(X) : PMat -&gt; ModDed
5<->I * X <->text596.htm#6306<->I * X : RngFunOrdIdl, PMat -> PMat
5<->X * I <->text596.htm#6306<->X * I : PMat, RngOrdFracIdl -> PMat
5<->X * I <->text596.htm#6306<->X * I : PMat, RngFunOrdIdl -> PMat
5<->I * X <->text596.htm#6306<->I * X : RngOrdFracIdl, PMat -&gt; PMat
3<->pmat-ops :<->text596.htm#6300<->pmat-ops :: Operations with Pseudo Matrices (MODULES OVER DEDEKIND DOMAINS)
3<->pmat :<->text596.htm<->pmat :: Pseudo Matrices (MODULES OVER DEDEKIND DOMAINS)
3<->dedekind-modules :<->text586.htm<->dedekind-modules :: MODULES OVER DEDEKIND DOMAINS
3<->complexes :<->text598.htm<->complexes :: CHAIN COMPLEXES
3<->complexes :<->text599.htm<->complexes :: Complexes of Modules (CHAIN COMPLEXES)
3<->Creation (CHAIN COMPLEXES)<->text599.htm#6310<->Creation (CHAIN COMPLEXES)
5<->Complex(L, d) <->text599.htm#6311<->Complex(L, d) : List, RngIntElt -&gt; ModCpx
5<->Complex(f, d) <->text599.htm#6312<->Complex(f, d) : Map, RngIntElt -&gt; ModCpx
5<->ZeroComplex(A, m, n) <->text599.htm#6313<->ZeroComplex(A, m, n) : AlgBas, RngIntElt, RngIntElt -&gt; ModCpx
5<->Dual(C, n) <->text599.htm#6314<->Dual(C, n) : ModCpx, RngIntElt ->   ModCpx
5<->Dual(C) <->text599.htm#6314<->Dual(C) : ModCpx -&gt;   ModCpx
3<->Creation (CHAIN COMPLEXES)<->text599.htm#6310<->Creation (CHAIN COMPLEXES)
3<->sub-quo :<->text599.htm#6315<->sub-quo :: Subcomplexes and Quotient  Complexes (CHAIN COMPLEXES)
5<->sub <->text599.htm#6316<->sub< C | L > : ModCpx, List -> ModCpx, MapChn
5<->sub< C | Q > <->text599.htm#6316<->sub&lt; C | Q &gt; : ModCpx, SeqEnum[ModAlg] -&gt; ModCpx, MapChn
5<->RandomSubcomplex(C, Q) <->text599.htm#6317<->RandomSubcomplex(C, Q) : ModCpx, SeqEnum -&gt;  ModCpx, MapChn
5<->quo <->text599.htm#6318<->quo< C | S > : ModCpx, SeqEnum[ModAlg] -> ModCpx
5<->quo <->text599.htm#6318<->quo< C | L > : ModCpx, List -> ModCpx
5<->quo< C | D > <->text599.htm#6318<->quo&lt; C | D &gt; : ModCpx, ModCpx -&gt; ModCpx
3<->sub-quo :<->text599.htm#6315<->sub-quo :: Subcomplexes and Quotient  Complexes (CHAIN COMPLEXES)
3<->access :<->text599.htm#6319<->access :: Access Functions (CHAIN COMPLEXES)
5<->Degrees(C) <->text599.htm#6320<->Degrees(C) : ModCpx -&gt; RngIntElt
5<->Algebra(C) <->text599.htm#6321<->Algebra(C) : ModCpx -&gt; AlgBas
5<->BoundaryMap(C, n) <->text599.htm#6322<->BoundaryMap(C, n) : ModCpx, RngIntElt -&gt; ModMatRngElt
5<->BoundaryMaps(C) <->text599.htm#6323<->BoundaryMaps(C) : ModCpx  -&gt; List
5<->DimensionsOfHomology(C) <->text599.htm#6324<->DimensionsOfHomology(C) : ModCpx -&gt; SeqEnum
5<->DimensionOfHomology(C, n) <->text599.htm#6325<->DimensionOfHomology(C, n) : ModCpx, RngIntElt -&gt; RngIntElt
5<->DimensionsOfTerms(C) <->text599.htm#6326<->DimensionsOfTerms(C) : ModCpx -&gt; SeqEnum
5<->Term(C, n) <->text599.htm#6327<->Term(C, n) : ModCpx, RngIntElt -&gt; ModAlg
5<->Terms(C) <->text599.htm#6328<->Terms(C) : ModCpx -&gt; SeqEnum
3<->access :<->text599.htm#6319<->access :: Access Functions (CHAIN COMPLEXES)
3<->arithmetic :<->text599.htm#6329<->arithmetic :: Elementary Operations (CHAIN COMPLEXES)
5<->DirectSum(C, D) <->text599.htm#6330<->DirectSum(C, D) : ModCpx, ModCpx -&gt; ModCpx
5<->HomologyOfChainComplex :: Homology(C) <->text599.htm#6331<->HomologyOfChainComplex :: Homology(C) : ModCpx -&gt; SeqEnum
5<->Homology(C) <->text599.htm#6331<->Homology(C) : ModCpx -&gt; SeqEnum
5<->Homology(C, n) <->text599.htm#6332<->Homology(C, n) : ModCpx, RngIntElt -&gt; SeqEnum
5<->Prune(C) <->text599.htm#6333<->Prune(C) : ModCpx -&gt; ModCpx
5<->Prune(C,n) <->text599.htm#6334<->Prune(C,n) : ModCpx, RngIntElt -&gt; ModCpx
5<->Preprune(C) <->text599.htm#6335<->Preprune(C) : ModCpx -&gt; ModCpx
5<->Preprune(C,n) <->text599.htm#6336<->Preprune(C,n) : ModCpx, RngIntElt -&gt; ModCpx
5<->Shift(C, n) <->text599.htm#6337<->Shift(C, n) : ModCpx, RngIntElt -&gt; ModCpx
5<->ShiftToDegreeZero(C) <->text599.htm#6338<->ShiftToDegreeZero(C) : ModCpx -&gt; ModCpx
5<->Splice(C, D) <->text599.htm#6339<->Splice(C, D) : ModCpx, ModCpx -&gt;  ModCpx
5<->Splice(C, D, f) <->text599.htm#6340<->Splice(C, D, f) : ModCpx, ModCpx, ModMatRngElt -&gt;  ModCpx
3<->arithmetic :<->text599.htm#6329<->arithmetic :: Elementary Operations (CHAIN COMPLEXES)
3<->extensions :<->text599.htm#6341<->extensions :: Extensions (CHAIN COMPLEXES)
5<->LeftExactExtension(C) <->text599.htm#6342<->LeftExactExtension(C) : ModCpx -&gt;   ModCpx
5<->RightExactExtension(C) <->text599.htm#6343<->RightExactExtension(C) : ModCpx -&gt;   ModCpx
5<->ExactExtension(C) <->text599.htm#6344<->ExactExtension(C) : ModCpx -&gt;   ModCpx
5<->LeftZeroExtension(C, n) <->text599.htm#6345<->LeftZeroExtension(C, n) : ModCpx, RngIntElt ->  ModCpx
5<->LeftZeroExtension(C) <->text599.htm#6345<->LeftZeroExtension(C) : ModCpx -&gt;  ModCpx
5<->RightZeroExtension(C, n) <->text599.htm#6346<->RightZeroExtension(C, n) : ModCpx, RngIntElt ->  ModCpx
5<->RightZeroExtension(C) <->text599.htm#6346<->RightZeroExtension(C) : ModCpx -&gt;  ModCpx
5<->ZeroExtension(C) <->text599.htm#6347<->ZeroExtension(C) : ModCpx -&gt;   ModCpx
5<->EqualizeDegrees(Q) <->text599.htm#6348<->EqualizeDegrees(Q) :  SeqEnum ->  SeqEnum
5<->EqualizeDegrees(C, D) <->text599.htm#6348<->EqualizeDegrees(C, D) : ModCpx, ModCpx -&gt;   ModCpx, ModCpx
5<->EqualizeDegrees(C, D, n) <->text599.htm#6349<->EqualizeDegrees(C, D, n) : ModCpx, ModCpx, RngIntElt  -&gt;   ModCpx, ModCpx
3<->extensions :<->text599.htm#6341<->extensions :: Extensions (CHAIN COMPLEXES)
3<->predicates :<->text599.htm#6350<->predicates :: Predicates (CHAIN COMPLEXES)
5<->IsExact(C) <->text599.htm#6351<->IsExact(C) : ModComplex -&gt; BoolElt
5<->IsShortExactSequence(C) <->text599.htm#6352<->IsShortExactSequence(C) : ModCpx -&gt; BoolElt, RngIntElt
5<->IsExact(C, n) <->text599.htm#6353<->IsExact(C, n) : ModCpx, RngIntElt -&gt; BoolElt
5<->IsZeroComplex(C) <->text599.htm#6354<->IsZeroComplex(C) : ModCpx -&gt; BoolElt
5<->IsZeroMap(C, n) <->text599.htm#6355<->IsZeroMap(C, n) : ModCpx, RngIntElt -&gt; BoolElt
5<->IsZeroTerm(C, n) <->text599.htm#6356<->IsZeroTerm(C, n) : ModCpx, RngIntElt -&gt; BoolElt
4<->ModCpx_Complexes (Example H60E1)<->text599.htm#6357<->ModCpx_Complexes (Example H60E1)
4<->Example-Complexes :<->text599.htm#6357<->Example-Complexes :: ModCpx_Complexes (Example H60E1)
3<->predicates :<->text599.htm#6350<->predicates :: Predicates (CHAIN COMPLEXES)
3<->complexes :<->text599.htm<->complexes :: Complexes of Modules (CHAIN COMPLEXES)
3<->chainmaps :<->text600.htm<->chainmaps :: Chain Maps (CHAIN COMPLEXES)
3<->creation :<->text600.htm#6359<->creation :: Creation (CHAIN COMPLEXES)
5<->ChainMap(Q, C, D, n) <->text600.htm#6360<->ChainMap(Q, C, D, n) : SeqEnum, ModCpx, ModCpx, RngIntElt  -&gt; MapChn
5<->ZeroChainMap(C, D) <->text600.htm#6361<->ZeroChainMap(C, D) : ModCpx, ModCpx -&gt; MapChn
3<->creation :<->text600.htm#6359<->creation :: Creation (CHAIN COMPLEXES)
3<->access :<->text600.htm#6362<->access :: Access Functions (CHAIN COMPLEXES)
5<->Degree(f) <->text600.htm#6363<->Degree(f) : MapChn -&gt; RngIntElt
5<->ModuleMap(f, n) <->text600.htm#6364<->ModuleMap(f, n) : MapChn, RngIntElt -&gt; ModMatRngElt
5<->Kernel(f) <->text600.htm#6365<->Kernel(f) : MapChn -&gt; ModCpx, MapChn
5<->Cokernel(f) <->text600.htm#6366<->Cokernel(f) : MapChn -&gt; ModCpx, MapChn
5<->Image(f) <->text600.htm#6367<->Image(f) : MapChn -&gt; ModCpx, MapChn, MapChn
3<->access :<->text600.htm#6362<->access :: Access Functions (CHAIN COMPLEXES)
3<->arithmetic :<->text600.htm#6368<->arithmetic :: Elementary Operations (CHAIN COMPLEXES)
5<->f + g <->text600.htm#6369<->f + g : MapChn , MapChn  -&gt; MapChn
5<->a * g <->text600.htm#6370<->a * g : RngElt , MapChn  -&gt; MapChn
5<->f * g <->text600.htm#6371<->f * g : MapChn , MapChn  -&gt; MapChn
3<->arithmetic :<->text600.htm#6368<->arithmetic :: Elementary Operations (CHAIN COMPLEXES)
3<->Predicates (CHAIN COMPLEXES)<->text600.htm#6372<->Predicates (CHAIN COMPLEXES)
5<->IsSurjective(f) <->text600.htm#6373<->IsSurjective(f) : MapChn -&gt; BoolElt
5<->IsInjective(f) <->text600.htm#6374<->IsInjective(f) : MapChn -&gt; BoolElt
5<->IsZero(f) <->text600.htm#6375<->IsZero(f) : MapChn -&gt; BoolElt
5<->IsIsomorphism(f) <->text600.htm#6376<->IsIsomorphism(f) : MapChn -&gt; BoolElt
5<->IsShortExactSequence(f, g) <->text600.htm#6377<->IsShortExactSequence(f, g) : MapChn, MapChn -&gt; BoolElt
5<->IsChainMap(L, C, D, n) <->text600.htm#6378<->IsChainMap(L, C, D, n) : List, ModCpx, ModCpx, RngIntElt -&gt; BoolElt
5<->IsChainMap(f) <->text600.htm#6379<->IsChainMap(f) : MapChn -&gt; BoolElt
5<->IsProperChainMap(f) <->text600.htm#6380<->IsProperChainMap(f) : MapChn -&gt; BoolElt
5<->HasDefinedModuleMap(C,n) <->text600.htm#6381<->HasDefinedModuleMap(C,n) : ModCpx, RngIntElt -&gt; BoolElt
4<->ModCpx_Chainmaps (Example H60E2)<->text600.htm#6382<->ModCpx_Chainmaps (Example H60E2)
4<->Example-Chainmaps :<->text600.htm#6382<->Example-Chainmaps :: ModCpx_Chainmaps (Example H60E2)
3<->Predicates (CHAIN COMPLEXES)<->text600.htm#6372<->Predicates (CHAIN COMPLEXES)
3<->homologymaps :<->text600.htm#6383<->homologymaps :: Maps on Homology (CHAIN COMPLEXES)
5<->InducedMapOnHomology(f, n) <->text600.htm#6384<->InducedMapOnHomology(f, n) : MapChn, RngIntElt -&gt; ModTupFldElt
5<->ConnectingHomomorphism(f, g, n) <->text600.htm#6385<->ConnectingHomomorphism(f, g, n) : MapChn, MapChn, RngIntElt -&gt; ModMatRngElt
5<->LongExactSequenceOnHomology(f, g) <->text600.htm#6386<->LongExactSequenceOnHomology(f, g) : MapChn, MapChn -&gt; ModCpx
4<->ModCpx_LongExactSequence (Example H60E3)<->text600.htm#6387<->ModCpx_LongExactSequence (Example H60E3)
4<->Example-LongExactSequence :<->text600.htm#6387<->Example-LongExactSequence :: ModCpx_LongExactSequence (Example H60E3)
3<->homologymaps :<->text600.htm#6383<->homologymaps :: Maps on Homology (CHAIN COMPLEXES)
3<->chainmaps :<->text600.htm<->chainmaps :: Chain Maps (CHAIN COMPLEXES)
3<->complexes :<->text598.htm<->complexes :: CHAIN COMPLEXES
3<->multilinear :<->text603.htm<->multilinear :: MULTILINEAR ALGEBRA
3<->intro :<->text604.htm<->intro :: Introduction (MULTILINEAR ALGEBRA)
3<->Overview (MULTILINEAR ALGEBRA)<->text604.htm#6392<->Overview (MULTILINEAR ALGEBRA)
3<->intro :<->text604.htm<->intro :: Introduction (MULTILINEAR ALGEBRA)
3<->tensors :<->text605.htm<->tensors :: Tensors (MULTILINEAR ALGEBRA)
3<->Creating-tensors :<->text605.htm#6394<->Creating-tensors :: Creating Tensors (MULTILINEAR ALGEBRA)
3<->Black-box-tensors :<->text605.htm#6395<->Black-box-tensors :: Black-box Tensors (MULTILINEAR ALGEBRA)
5<->Tensor(S, F) <->text605.htm#6396<->Tensor(S, F) : List, UserProgram -> TenSpcElt
5<->Tensor(S, F, Cat) <->text605.htm#6396<->Tensor(S, F, Cat) : SeqEnum, UserProgram, TenCat -> TenSpcElt
5<->Tensor(S, F, Cat) <->text605.htm#6396<->Tensor(S, F, Cat) : List, UserProgram, TenCat -> TenSpcElt
5<->Tensor(S, F) <->text605.htm#6396<->Tensor(S, F) : SeqEnum, UserProgram -&gt; TenSpcElt
5<->Tensor(D, C, F) <->text605.htm#6397<->Tensor(D, C, F) : List, Any, UserProgram -> TenSpcElt
5<->Tensor(D, C, F, Cat) <->text605.htm#6397<->Tensor(D, C, F, Cat) : SeqEnum, Any, UserProgram, TenCat -> TenSpcElt
5<->Tensor(D, C, F, Cat) <->text605.htm#6397<->Tensor(D, C, F, Cat) : List, Any, UserProgram, TenCat -> TenSpcElt
5<->Tensor(D, C, F) <->text605.htm#6397<->Tensor(D, C, F) : SeqEnum, Any, UserProgram -&gt; TenSpcElt
4<->Multilinear_Ten_Tripl_Product (Example H61E1)<->text605.htm#6398<->Multilinear_Ten_Tripl_Product (Example H61E1)
4<->Example-Ten_Tripl_Product :<->text605.htm#6398<->Example-Ten_Tripl_Product :: Multilinear_Ten_Tripl_Product (Example H61E1)
3<->Black-box-tensors :<->text605.htm#6395<->Black-box-tensors :: Black-box Tensors (MULTILINEAR ALGEBRA)
3<->Tensors-with-structure-constant-sequences :<->text605.htm#6399<->Tensors-with-structure-constant-sequences :: Tensors with Structure Constant Sequences (MULTILINEAR ALGEBRA)
5<->Tensor(D, S) <->text605.htm#6400<->Tensor(D, S) : [RngElt], SeqEnum -> TenSpcElt
5<->Tensor(R, D, S, Cat) <->text605.htm#6400<->Tensor(R, D, S, Cat) : Rng, [RngElt], SeqEnum, TenCat -> TenSpcElt
5<->Tensor(D, S, Cat) <->text605.htm#6400<->Tensor(D, S, Cat) : [RngElt], SeqEnum, TenCat -> TenSpcElt
5<->Tensor(R, D, S) <->text605.htm#6400<->Tensor(R, D, S) : Rng, [RngElt], SeqEnum -&gt; TenSpcElt
5<->Eltseq :: StructureConstants(T) <->text605.htm#6401<->Eltseq :: StructureConstants(T) : TenSpcElt -&gt; SeqEnum
5<->StructureConstants(T) <->text605.htm#6401<->StructureConstants(T) : TenSpcElt -&gt; SeqEnum
3<->Tensors-with-structure-constant-sequences :<->text605.htm#6399<->Tensors-with-structure-constant-sequences :: Tensors with Structure Constant Sequences (MULTILINEAR ALGEBRA)
3<->Creating-tensors :<->text605.htm#6394<->Creating-tensors :: Creating Tensors (MULTILINEAR ALGEBRA)
3<->Bilinear-tensors :<->text605.htm#6402<->Bilinear-tensors :: Bilinear Tensors (MULTILINEAR ALGEBRA)
5<->Tensor(M, s, t, C) <->text605.htm#6403<->Tensor(M, s, t, C) : [Mtrx], RngIntElt, RngIntElt, TenCat -> TenSpcElt
5<->Tensor(M, s, t) <->text605.htm#6403<->Tensor(M, s, t) : [Mtrx], RngIntElt, RngIntElt -&gt; TenSpcElt
5<->SystemOfForms :: AsMatrices(T, s, t) <->text605.htm#6404<->SystemOfForms :: AsMatrices(T, s, t) : TenSpcElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->AsMatrices(T, s, t) <->text605.htm#6404<->AsMatrices(T, s, t) : TenSpcElt, RngIntElt, RngIntElt -&gt; SeqEnum
4<->Multilinear_Ten_StrConst (Example H61E2)<->text605.htm#6405<->Multilinear_Ten_StrConst (Example H61E2)
4<->Example-Ten_StrConst :<->text605.htm#6405<->Example-Ten_StrConst :: Multilinear_Ten_StrConst (Example H61E2)
4<->Multilinear_Ten_SysForms (Example H61E3)<->text605.htm#6406<->Multilinear_Ten_SysForms (Example H61E3)
4<->Example-Ten_SysForms :<->text605.htm#6406<->Example-Ten_SysForms :: Multilinear_Ten_SysForms (Example H61E3)
3<->Tensors-from-algebraic-objects :<->text605.htm#6407<->Tensors-from-algebraic-objects :: Tensors from Algebraic Objects (MULTILINEAR ALGEBRA)
5<->Tensor(A)<->text605.htm#6408<->Tensor(A): Alg -&gt; TenSpcElt
5<->CommutatorTensor(A) <->text605.htm#6409<->CommutatorTensor(A) : Alg -&gt; TenSpcElt
5<->AssociatorTensor(A) <->text605.htm#6410<->AssociatorTensor(A) : Alg -&gt; TenSpcElt
4<->Multilinear_Ten_Alg (Example H61E4)<->text605.htm#6411<->Multilinear_Ten_Alg (Example H61E4)
4<->Example-Ten_Alg :<->text605.htm#6411<->Example-Ten_Alg :: Multilinear_Ten_Alg (Example H61E4)
5<->pCentralTensor(G, p, s, t) <->text605.htm#6412<->pCentralTensor(G, p, s, t) : Grp, RngIntElt, RngIntElt, RngIntElt -> TenSpcElt
5<->pCentralTensor(G, s, t) <->text605.htm#6412<->pCentralTensor(G, s, t) : GrpPC, RngIntElt, RngIntElt -&gt; TenSpcElt
4<->Multilinear_Ten_Grp (Example H61E5)<->text605.htm#6413<->Multilinear_Ten_Grp (Example H61E5)
4<->Example-Ten_Grp :<->text605.htm#6413<->Example-Ten_Grp :: Multilinear_Ten_Grp (Example H61E5)
5<->Polarization :: Polarisation(f) <->text605.htm#6414<->Polarization :: Polarisation(f) : MPolElt -&gt; TenSpcElt, MPolElt
5<->Polarisation(f) <->text605.htm#6414<->Polarisation(f) : MPolElt -&gt; TenSpcElt, MPolElt
4<->Multilinear_Ten_Polar (Example H61E6)<->text605.htm#6415<->Multilinear_Ten_Polar (Example H61E6)
4<->Example-Ten_Polar :<->text605.htm#6415<->Example-Ten_Polar :: Multilinear_Ten_Polar (Example H61E6)
3<->Tensors-from-algebraic-objects :<->text605.htm#6407<->Tensors-from-algebraic-objects :: Tensors from Algebraic Objects (MULTILINEAR ALGEBRA)
3<->New-tensors-from-old :<->text605.htm#6416<->New-tensors-from-old :: New Tensors from Old (MULTILINEAR ALGEBRA)
5<->AlternatingTensor(T) <->text605.htm#6417<->AlternatingTensor(T) : TenSpcElt -&gt; TenSpcElt
5<->AntisymmetricTensor(T) <->text605.htm#6418<->AntisymmetricTensor(T) : TenSpcElt -&gt; TenSpcElt
5<->SymmetricTensor(T) <->text605.htm#6419<->SymmetricTensor(T) : TenSpcElt -&gt; TenSpcElt
5<->Shuffle(T, g) <->text605.htm#6420<->Shuffle(T, g) : TenSpcElt, SeqEnum -&gt; TenSpcElt
3<->New-tensors-from-old :<->text605.htm#6416<->New-tensors-from-old :: New Tensors from Old (MULTILINEAR ALGEBRA)
3<->Bilinear-tensors :<->text605.htm#6402<->Bilinear-tensors :: Bilinear Tensors (MULTILINEAR ALGEBRA)
3<->Operations-with-Tensors :<->text605.htm#6421<->Operations-with-Tensors :: Operations with Tensors (MULTILINEAR ALGEBRA)
3<->Elementary-operations :<->text605.htm#6422<->Elementary-operations :: Elementary Operations (MULTILINEAR ALGEBRA)
5<->* :: S + T <->text605.htm#6423<->* :: S + T : TenSpcElt, TenSpcElt -&gt; TenSpcElt
5<->S + T <->text605.htm#6423<->S + T : TenSpcElt, TenSpcElt -&gt; TenSpcElt
5<->TensorOnVectorSpaces(T) <->text605.htm#6424<->TensorOnVectorSpaces(T) : TenSpcElt -&gt; TenSpcElt, Hmtp
5<->AssociatedForm(T) <->text605.htm#6425<->AssociatedForm(T) : TenSpcElt -&gt; TenSpcElt
5<->Compress(T) <->text605.htm#6426<->Compress(T) : TenSpcElt -&gt; TenSpcElt
4<->Multilinear_Ten_VS_Cmp (Example H61E7)<->text605.htm#6427<->Multilinear_Ten_VS_Cmp (Example H61E7)
4<->Example-Ten_VS_Cmp :<->text605.htm#6427<->Example-Ten_VS_Cmp :: Multilinear_Ten_VS_Cmp (Example H61E7)
3<->Elementary-operations :<->text605.htm#6422<->Elementary-operations :: Elementary Operations (MULTILINEAR ALGEBRA)
3<->General-properties :<->text605.htm#6428<->General-properties :: General Properties (MULTILINEAR ALGEBRA)
5<->Parent(T) <->text605.htm#6429<->Parent(T) : TenSpcElt -&gt; TenSpc
5<->Domain(T) <->text605.htm#6430<->Domain(T) : TenSpcElt -&gt; List
5<->Codomain(T) <->text605.htm#6431<->Codomain(T) : TenSpcElt -&gt; Any
5<->Valence(T) <->text605.htm#6432<->Valence(T) : TenSpcElt -&gt; RngIntElt
5<->Frame(T) <->text605.htm#6433<->Frame(T) : TenSpcElt -&gt; List
5<->TensorCategory(T) <->text605.htm#6434<->TensorCategory(T) : TenSpcElt -&gt; TenCat
5<->ChangeTensorCategory(~T, C) <->text605.htm#6435<->ChangeTensorCategory(~T, C) : TenSpcElt, TenCat ->
5<->ChangeTensorCategory(T, C) <->text605.htm#6435<->ChangeTensorCategory(T, C) : TenSpcElt, TenCat -&gt; TenSpcElt
5<->IsContravariant :: IsCovariant(T) <->text605.htm#6436<->IsContravariant :: IsCovariant(T) : TenSpcElt -&gt; BoolElt
5<->IsCovariant(T) <->text605.htm#6436<->IsCovariant(T) : TenSpcElt -&gt; BoolElt
4<->Multilinear_Ten_Prop1 (Example H61E8)<->text605.htm#6437<->Multilinear_Ten_Prop1 (Example H61E8)
4<->Example-Ten_Prop1 :<->text605.htm#6437<->Example-Ten_Prop1 :: Multilinear_Ten_Prop1 (Example H61E8)
5<->Image(T) <->text605.htm#6438<->Image(T) : TenSpcElt -&gt; ModTupRng, Map
5<->BaseField :: BaseRing(T) <->text605.htm#6439<->BaseField :: BaseRing(T) : TenSpcElt -&gt; Rng
5<->BaseRing(T) <->text605.htm#6439<->BaseRing(T) : TenSpcElt -&gt; Rng
5<->NondegenerateTensor(T) <->text605.htm#6440<->NondegenerateTensor(T) : TenSpcElt -&gt; TenSpcElt, Hmtp
5<->IsNondegenerate(T) <->text605.htm#6441<->IsNondegenerate(T) : TenSpcElt -&gt; BoolElt
5<->FullyNondegenerateTensor(T) <->text605.htm#6442<->FullyNondegenerateTensor(T) : TenSpcElt -&gt; TenSpcElt, Hmtp
5<->IsFullyNondegenerate(T) <->text605.htm#6443<->IsFullyNondegenerate(T) : TenSpcElt -&gt; BoolElt
5<->IsAlternating(T) <->text605.htm#6444<->IsAlternating(T) : TenSpcElt -&gt; BoolElt
5<->IsAntisymmetric(T) <->text605.htm#6445<->IsAntisymmetric(T) : TenSpcElt -&gt; BoolElt
5<->IsSymmetric(T) <->text605.htm#6446<->IsSymmetric(T) : TenSpcElt -&gt; BoolElt
4<->Multilinear_Ten_Prop2 (Example H61E9)<->text605.htm#6447<->Multilinear_Ten_Prop2 (Example H61E9)
4<->Example-Ten_Prop2 :<->text605.htm#6447<->Example-Ten_Prop2 :: Multilinear_Ten_Prop2 (Example H61E9)
3<->General-properties :<->text605.htm#6428<->General-properties :: General Properties (MULTILINEAR ALGEBRA)
3<->As-multilinear-maps :<->text605.htm#6448<->As-multilinear-maps :: As Multilinear Maps (MULTILINEAR ALGEBRA)
5<->x @ T <->text605.htm#6449<->x @ T : Tup, TenSpcElt -&gt; Any
5<->T * f <->text605.htm#6450<->T * f : TenSpcElt, Map -&gt; TenSpcElt
5<->S eq T <->text605.htm#6451<->S eq T : TenSpcElt, TenSpcElt -&gt; BoolElt
3<->As-multilinear-maps :<->text605.htm#6448<->As-multilinear-maps :: As Multilinear Maps (MULTILINEAR ALGEBRA)
3<->Operations-with-Bilinear-maps :<->text605.htm#6452<->Operations-with-Bilinear-maps :: Operations with Bilinear Maps (MULTILINEAR ALGEBRA)
5<->x * y <->text605.htm#6453<->x * y : BmpU, BmpV -> Any
5<->x * y <->text605.htm#6453<->x * y : BmpUElt, BmpV -> Any
5<->x * y <->text605.htm#6453<->x * y : BmpU, BmpVElt -> Any
5<->x * y <->text605.htm#6453<->x * y : BmpUElt, BmpVElt -&gt; Any
5<->B * y <->text605.htm#6454<->B * y : TenSpcElt, Any -> TenSpcElt
5<->x * B <->text605.htm#6454<->x * B : Any, TenSpcElt -&gt; TenSpcElt
5<->Parent(x) <->text605.htm#6455<->Parent(x) : BmpVElt -> BmpV
5<->Parent(x) <->text605.htm#6455<->Parent(x) : BmpUElt -&gt; BmpU
5<->Parent(X) <->text605.htm#6456<->Parent(X) : BmpV -> TenSpcElt
5<->Parent(X) <->text605.htm#6456<->Parent(X) : BmpU -&gt; TenSpcElt
5<->LeftDomain(B) <->text605.htm#6457<->LeftDomain(B) : TenSpcElt -&gt; BmpU
5<->RightDomain(B) <->text605.htm#6458<->RightDomain(B) : TenSpcElt -&gt; BmpV
5<->IsCoercible(S,x) <->text605.htm#6459<->IsCoercible(S,x) : BmpV, Any -> BoolElt, BmpVElt
5<->IsCoercible(S,x) <->text605.htm#6459<->IsCoercible(S,x) : BmpU, Any -&gt; BoolElt, BmpUElt
5<->u1 eq u2 <->text605.htm#6460<->u1 eq u2 : BmpUElt, BmpUElt -&gt; BoolElt
5<->v1 eq v2 <->text605.htm#6461<->v1 eq v2 : BmpUElt, BmpUElt -&gt; BoolElt
5<->U1 eq U2 <->text605.htm#6462<->U1 eq U2 : BmpU, BmpU -&gt; BoolElt
5<->V1 eq V2 <->text605.htm#6463<->V1 eq V2 : BmpV, BmpV -&gt; BoolElt
4<->Multilinear_Bimap_Infix (Example H61E10)<->text605.htm#6464<->Multilinear_Bimap_Infix (Example H61E10)
4<->Example-Bimap_Infix :<->text605.htm#6464<->Example-Bimap_Infix :: Multilinear_Bimap_Infix (Example H61E10)
4<->Multilinear_Bimap_Product (Example H61E11)<->text605.htm#6465<->Multilinear_Bimap_Product (Example H61E11)
4<->Example-Bimap_Product :<->text605.htm#6465<->Example-Bimap_Product :: Multilinear_Bimap_Product (Example H61E11)
3<->Operations-with-Bilinear-maps :<->text605.htm#6452<->Operations-with-Bilinear-maps :: Operations with Bilinear Maps (MULTILINEAR ALGEBRA)
3<->Manipulating-tensor-data :<->text605.htm#6466<->Manipulating-tensor-data :: Manipulating Tensor Data (MULTILINEAR ALGEBRA)
5<->InducedTensor :: Slice(T, grid) <->text605.htm#6467<->InducedTensor :: Slice(T, grid) : TenSpcElt, [SetEnum] -&gt; SeqEnum
5<->Slice(T, grid) <->text605.htm#6467<->Slice(T, grid) : TenSpcElt, [SetEnum] -&gt; SeqEnum
4<->Multilinear_Ten_Foliation (Example H61E12)<->text605.htm#6468<->Multilinear_Ten_Foliation (Example H61E12)
4<->Example-Ten_Foliation :<->text605.htm#6468<->Example-Ten_Foliation :: Multilinear_Ten_Foliation (Example H61E12)
5<->Foliation(T, i) <->text605.htm#6469<->Foliation(T, i) : TenSpcElt, RngIntElt -&gt; Mtrx
5<->AsTensorSpace(T, i) <->text605.htm#6470<->AsTensorSpace(T, i) : TenSpcElt, RngIntElt -&gt; TenSpc, Mtrx
5<->AsCotensorSpace(T) <->text605.htm#6471<->AsCotensorSpace(T) : TenSpcElt -&gt; TenSpc, Mtrx
5<->AsTensor(S) <->text605.htm#6472<->AsTensor(S) : TenSpc -&gt; TenSpcElt
4<->Multilinear_Ten_Slice (Example H61E13)<->text605.htm#6473<->Multilinear_Ten_Slice (Example H61E13)
4<->Example-Ten_Slice :<->text605.htm#6473<->Example-Ten_Slice :: Multilinear_Ten_Slice (Example H61E13)
3<->Manipulating-tensor-data :<->text605.htm#6466<->Manipulating-tensor-data :: Manipulating Tensor Data (MULTILINEAR ALGEBRA)
3<->Operations-with-Tensors :<->text605.htm#6421<->Operations-with-Tensors :: Operations with Tensors (MULTILINEAR ALGEBRA)
3<->Invariants-of-tensors :<->text605.htm#6474<->Invariants-of-tensors :: Invariants of Tensors (MULTILINEAR ALGEBRA)
5<->Induce(X, i) <->text605.htm#6475<->Induce(X, i) : AlgMatLie, RngIntElt -> AlgMatLie, Map
5<->Induce(X, i) <->text605.htm#6475<->Induce(X, i) : GrpMat, RngIntElt -> GrpMat, Map
5<->Induce(X, i) <->text605.htm#6475<->Induce(X, i) : AlgMat, RngIntElt -&gt; AlgMat, Map
3<->Standard-invariants :<->text605.htm#6476<->Standard-invariants :: Standard Invariants (MULTILINEAR ALGEBRA)
5<->Radical(T, s) <->text605.htm#6477<->Radical(T, s) : TenSpcElt, RngIntElt -&gt; ModTupRng, Map
5<->Radical(T) <->text605.htm#6478<->Radical(T) : TenSpcElt -&gt; Tup
5<->Coradical(T) <->text605.htm#6479<->Coradical(T) : TenSpcElt -&gt; ModTupRng, Map
3<->Standard-invariants :<->text605.htm#6476<->Standard-invariants :: Standard Invariants (MULTILINEAR ALGEBRA)
3<->Invariants-for-bilinear-tensors :<->text605.htm#6480<->Invariants-for-bilinear-tensors :: Invariants for Bilinear Tensors (MULTILINEAR ALGEBRA)
5<->AdjointAlgebra(B) <->text605.htm#6481<->AdjointAlgebra(B) : TenSpcElt -&gt; AlgMat
4<->Multilinear_Ten_Adj_Alg (Example H61E14)<->text605.htm#6482<->Multilinear_Ten_Adj_Alg (Example H61E14)
4<->Example-Ten_Adj_Alg :<->text605.htm#6482<->Example-Ten_Adj_Alg :: Multilinear_Ten_Adj_Alg (Example H61E14)
5<->LeftNucleus(B) <->text605.htm#6483<->LeftNucleus(B) : TenSpcElt -&gt; AlgMat
5<->MidNucleus(B) <->text605.htm#6484<->MidNucleus(B) : TenSpcElt -&gt; AlgMat
5<->RightNucleus(B) <->text605.htm#6485<->RightNucleus(B) : TenSpcElt -&gt; AlgMat
3<->Invariants-for-bilinear-tensors :<->text605.htm#6480<->Invariants-for-bilinear-tensors :: Invariants for Bilinear Tensors (MULTILINEAR ALGEBRA)
3<->Invariants-of-general-multilinear-maps :<->text605.htm#6486<->Invariants-of-general-multilinear-maps :: Invariants of General Multilinear Maps (MULTILINEAR ALGEBRA)
5<->Centroid(T) <->text605.htm#6487<->Centroid(T) : TenSpcElt -&gt; AlgMat
4<->Multilinear_Ten_Centroid (Example H61E15)<->text605.htm#6488<->Multilinear_Ten_Centroid (Example H61E15)
4<->Example-Ten_Centroid :<->text605.htm#6488<->Example-Ten_Centroid :: Multilinear_Ten_Centroid (Example H61E15)
5<->DerivationAlgebra(T) <->text605.htm#6489<->DerivationAlgebra(T) : TenSpcElt -&gt; AlgMatLie
5<->Nucleus(T, s, t) <->text605.htm#6490<->Nucleus(T, s, t) : TenSpcElt, RngIntElt, RngIntElt -&gt; AlgMat
4<->Multilinear_Ten_Der_Nuc (Example H61E16)<->text605.htm#6491<->Multilinear_Ten_Der_Nuc (Example H61E16)
4<->Example-Ten_Der_Nuc :<->text605.htm#6491<->Example-Ten_Der_Nuc :: Multilinear_Ten_Der_Nuc (Example H61E16)
5<->TensorOverCentroid(T) <->text605.htm#6492<->TensorOverCentroid(T) : TenSpcElt -&gt; TenSpcElt, Hmtp
4<->Multilinear_Ten_Over_Cen (Example H61E17)<->text605.htm#6493<->Multilinear_Ten_Over_Cen (Example H61E17)
4<->Example-Ten_Over_Cen :<->text605.htm#6493<->Example-Ten_Over_Cen :: Multilinear_Ten_Over_Cen (Example H61E17)
5<->Discriminant(B) <->text605.htm#6494<->Discriminant(B) : TenSpcElt -&gt; RngMPolElt
5<->Pfaffian(B) <->text605.htm#6495<->Pfaffian(B) : TenSpcElt -&gt; RngMPolElt
4<->Multilinear_Ten_Disc_Pfaff (Example H61E18)<->text605.htm#6496<->Multilinear_Ten_Disc_Pfaff (Example H61E18)
4<->Example-Ten_Disc_Pfaff :<->text605.htm#6496<->Example-Ten_Disc_Pfaff :: Multilinear_Ten_Disc_Pfaff (Example H61E18)
3<->Invariants-of-general-multilinear-maps :<->text605.htm#6486<->Invariants-of-general-multilinear-maps :: Invariants of General Multilinear Maps (MULTILINEAR ALGEBRA)
3<->Invariants-of-tensors :<->text605.htm#6474<->Invariants-of-tensors :: Invariants of Tensors (MULTILINEAR ALGEBRA)
3<->tensors :<->text605.htm<->tensors :: Tensors (MULTILINEAR ALGEBRA)
3<->Exporting-tensors :<->text606.htm<->Exporting-tensors :: Exporting Tensors (MULTILINEAR ALGEBRA)
5<->HeisenbergAlgebra(B) <->text606.htm#6498<->HeisenbergAlgebra(B) : TenSpcElt -&gt; AlgGen
5<->HeisenbergLieAlgebra(B) <->text606.htm#6499<->HeisenbergLieAlgebra(B) : TenSpcElt -&gt; AlgLie
5<->HeisenbergGroup(B) <->text606.htm#6500<->HeisenbergGroup(B) : TenSpcElt -&gt; GrpPC
4<->Multilinear_Ten_Heisenberg (Example H61E19)<->text606.htm#6501<->Multilinear_Ten_Heisenberg (Example H61E19)
4<->Example-Ten_Heisenberg :<->text606.htm#6501<->Example-Ten_Heisenberg :: Multilinear_Ten_Heisenberg (Example H61E19)
3<->Exporting-tensors :<->text606.htm<->Exporting-tensors :: Exporting Tensors (MULTILINEAR ALGEBRA)
3<->tensor_spaces :<->text607.htm<->tensor_spaces :: Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Constructions-of-tensor-and-cotensor-spaces :<->text607.htm#6503<->Constructions-of-tensor-and-cotensor-spaces :: Constructions of Tensor and Cotensor Spaces (MULTILINEAR ALGEBRA)
3<->Universal-tensor-spaces :<->text607.htm#6504<->Universal-tensor-spaces :: Universal Tensor Spaces (MULTILINEAR ALGEBRA)
5<->KTensorSpace(K, S, C) <->text607.htm#6505<->KTensorSpace(K, S, C) : Fld, [RngIntElt], TenCat -> TenSpc
5<->KTensorSpace(K, S) <->text607.htm#6505<->KTensorSpace(K, S) : Fld, [RngIntElt] -&gt; TenSpc
5<->RTensorSpace(R, S, C) <->text607.htm#6506<->RTensorSpace(R, S, C) : Rng, [RngIntElt], TenCat -> TenSpc
5<->RTensorSpace(R, S) <->text607.htm#6506<->RTensorSpace(R, S) : Rng, [RngIntElt] -&gt; TenSpc
5<->TensorSpace(S) <->text607.htm#6507<->TensorSpace(S) : [ModTupRng] -> TenSpc
5<->TensorSpace(S) <->text607.htm#6507<->TensorSpace(S) : [ModMatRng] -> TenSpc
5<->TensorSpace(S) <->text607.htm#6507<->TensorSpace(S) : List -> TenSpc
5<->TensorSpace(S, C) <->text607.htm#6507<->TensorSpace(S, C) : [ModRng], TenCat -> TenSpc
5<->TensorSpace(S, C) <->text607.htm#6507<->TensorSpace(S, C) : [ModTupRng], TenCat -> TenSpc
5<->TensorSpace(S, C) <->text607.htm#6507<->TensorSpace(S, C) : [ModMatRng], TenCat -> TenSpc
5<->TensorSpace(S, C) <->text607.htm#6507<->TensorSpace(S, C) : List, TenCat -> TenSpc
5<->TensorSpace(S) <->text607.htm#6507<->TensorSpace(S) : [ModRng] -&gt; TenSpc
5<->TensorSpace(K, d, p, q) <->text607.htm#6508<->TensorSpace(K, d, p, q) : Fld, RngIntElt, RngIntElt, RngIntElt -> TenSpc
5<->TensorSpace(V, p, q) <->text607.htm#6508<->TensorSpace(V, p, q) : ModTupFld, RngIntElt, RngIntElt -&gt; TenSpc
4<->Multilinear_TenSpc_Const (Example H61E20)<->text607.htm#6509<->Multilinear_TenSpc_Const (Example H61E20)
4<->Example-TenSpc_Const :<->text607.htm#6509<->Example-TenSpc_Const :: Multilinear_TenSpc_Const (Example H61E20)
3<->Universal-tensor-spaces :<->text607.htm#6504<->Universal-tensor-spaces :: Universal Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Universal-cotensor-spaces :<->text607.htm#6510<->Universal-cotensor-spaces :: Universal Cotensor Spaces (MULTILINEAR ALGEBRA)
5<->KCotensorSpace(K, S, C) <->text607.htm#6511<->KCotensorSpace(K, S, C) : Fld, [RngIntElt], TenCat -> TenSpc
5<->KCotensorSpace(K, S) <->text607.htm#6511<->KCotensorSpace(K, S) : Fld, [RngIntElt] -&gt; TenSpc
5<->CotensorSpace(S) <->text607.htm#6512<->CotensorSpace(S) : [ModMatFld] -> TenSpc
5<->CotensorSpace(S) <->text607.htm#6512<->CotensorSpace(S) : List -> TenSpc
5<->CotensorSpace(S, C) <->text607.htm#6512<->CotensorSpace(S, C) : [ModTupFld], TenCat -> TenSpc
5<->CotensorSpace(S, C) <->text607.htm#6512<->CotensorSpace(S, C) : [ModMatFld], TenCat -> TenSpc
5<->CotensorSpace(S, C) <->text607.htm#6512<->CotensorSpace(S, C) : List, TenCat -> TenSpc
5<->CotensorSpace(S) <->text607.htm#6512<->CotensorSpace(S) : [ModTupFld] -&gt; TenSpc
4<->Multilinear_CoTenSpc_Const (Example H61E21)<->text607.htm#6513<->Multilinear_CoTenSpc_Const (Example H61E21)
4<->Example-CoTenSpc_Const :<->text607.htm#6513<->Example-CoTenSpc_Const :: Multilinear_CoTenSpc_Const (Example H61E21)
3<->Universal-cotensor-spaces :<->text607.htm#6510<->Universal-cotensor-spaces :: Universal Cotensor Spaces (MULTILINEAR ALGEBRA)
3<->Some-standard-constructions :<->text607.htm#6514<->Some-standard-constructions :: Some Standard Constructions (MULTILINEAR ALGEBRA)
5<->AlternatingSpace(T) <->text607.htm#6515<->AlternatingSpace(T) : TenSpc -&gt; TenSpc
5<->AntisymmetricSpace(T) <->text607.htm#6516<->AntisymmetricSpace(T) : TenSpc -&gt; TenSpc
5<->SymmetricSpace(T) <->text607.htm#6517<->SymmetricSpace(T) : TenSpc -&gt; TenSpc
5<->ExteriorCotensorSpace(V, n) <->text607.htm#6518<->ExteriorCotensorSpace(V, n) : ModTupFld, RngIntElt -&gt; TenSpc
5<->SymmetricCotensorSpace(V, n) <->text607.htm#6519<->SymmetricCotensorSpace(V, n) : ModTupFld, RngIntElt -&gt; TenSpc
4<->Multilinear_TenSpc_Const2 (Example H61E22)<->text607.htm#6520<->Multilinear_TenSpc_Const2 (Example H61E22)
4<->Example-TenSpc_Const2 :<->text607.htm#6520<->Example-TenSpc_Const2 :: Multilinear_TenSpc_Const2 (Example H61E22)
3<->Some-standard-constructions :<->text607.htm#6514<->Some-standard-constructions :: Some Standard Constructions (MULTILINEAR ALGEBRA)
3<->Subspaces-as-closures :<->text607.htm#6521<->Subspaces-as-closures :: Subspaces as Closures (MULTILINEAR ALGEBRA)
5<->DerivationClosure(TS, O) <->text607.htm#6522<->DerivationClosure(TS, O) : TenSpc, ModMatFld -> TenSpc
5<->DerivationClosure(TS, O) <->text607.htm#6522<->DerivationClosure(TS, O) : TenSpc, AlgMatLie -> TenSpc
5<->DerivationClosure(TS, O) <->text607.htm#6522<->DerivationClosure(TS, O) : TenSpc, [Mtrx] -> TenSpc
5<->DerivationClosure(TS, O) <->text607.htm#6522<->DerivationClosure(TS, O) : TenSpc, [AlgMatLie] -> TenSpc
5<->DerivationClosure(TS, O) <->text607.htm#6522<->DerivationClosure(TS, O) : TenSpc, AlgMat -&gt; TenSpc
5<->DerivationClosure(TS, T) <->text607.htm#6523<->DerivationClosure(TS, T) : TenSpc, TenSpcElt -&gt; TenSpc
5<->NucleusClosure(TS, O, s, t) <->text607.htm#6524<->NucleusClosure(TS, O, s, t) : TenSpc, ModMatFld, RngIntElt, RngIntElt -> TenSpc
5<->NucleusClosure(TS, O, s, t) <->text607.htm#6524<->NucleusClosure(TS, O, s, t) : TenSpc, [Mtrx], RngIntElt, RngIntElt -> TenSpc
5<->NucleusClosure(TS, O, s, t) <->text607.htm#6524<->NucleusClosure(TS, O, s, t) : TenSpc, AlgMat, RngIntElt, RngIntElt -&gt; TenSpc
5<->NucleusClosure(TS, T, s, t) <->text607.htm#6525<->NucleusClosure(TS, T, s, t) : TenSpc, TenSpcElt, RngIntElt, RngIntElt -&gt; TenSpc
4<->Multilinear_Der_Closure (Example H61E23)<->text607.htm#6526<->Multilinear_Der_Closure (Example H61E23)
4<->Example-Der_Closure :<->text607.htm#6526<->Example-Der_Closure :: Multilinear_Der_Closure (Example H61E23)
4<->Multilinear_Nuc_Closure (Example H61E24)<->text607.htm#6527<->Multilinear_Nuc_Closure (Example H61E24)
4<->Example-Nuc_Closure :<->text607.htm#6527<->Example-Nuc_Closure :: Multilinear_Nuc_Closure (Example H61E24)
3<->Subspaces-as-closures :<->text607.htm#6521<->Subspaces-as-closures :: Subspaces as Closures (MULTILINEAR ALGEBRA)
3<->Constructions-of-tensor-and-cotensor-spaces :<->text607.htm#6503<->Constructions-of-tensor-and-cotensor-spaces :: Constructions of Tensor and Cotensor Spaces (MULTILINEAR ALGEBRA)
3<->Operations-on-tensor-spaces :<->text607.htm#6528<->Operations-on-tensor-spaces :: Operations on Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Membership-and-comparison-with-tensor-spaces :<->text607.htm#6529<->Membership-and-comparison-with-tensor-spaces :: Membership and Comparison with Tensor Spaces (MULTILINEAR ALGEBRA)
5<->T in TS <->text607.htm#6530<->T in TS : TenSpcElt, TenSpc -&gt; BoolElt
5<->! :: IsCoercible(TS, T) <->text607.htm#6531<->! :: IsCoercible(TS, T) : TenSpc, TenSpcElt -&gt; BoolElt, TenSpcElt
5<->IsCoercible(TS, T) <->text607.htm#6531<->IsCoercible(TS, T) : TenSpc, TenSpcElt -&gt; BoolElt, TenSpcElt
5<->! :: IsCoercible(TS, S) <->text607.htm#6532<->! :: IsCoercible(TS, S) : TenSpc, SeqEnum -&gt; BoolElt, TenSpcElt
5<->IsCoercible(TS, S) <->text607.htm#6532<->IsCoercible(TS, S) : TenSpc, SeqEnum -&gt; BoolElt, TenSpcElt
5<->S eq T <->text607.htm#6533<->S eq T : TenSpc, TenSpc -&gt; BoolElt
5<->S subset T <->text607.htm#6534<->S subset T : TenSpc, TenSpc -&gt; BoolElt
4<->Multilinear_TenCoerce (Example H61E25)<->text607.htm#6535<->Multilinear_TenCoerce (Example H61E25)
4<->Example-TenCoerce :<->text607.htm#6535<->Example-TenCoerce :: Multilinear_TenCoerce (Example H61E25)
3<->Membership-and-comparison-with-tensor-spaces :<->text607.htm#6529<->Membership-and-comparison-with-tensor-spaces :: Membership and Comparison with Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Tensor-spaces-as-modules :<->text607.htm#6536<->Tensor-spaces-as-modules :: Tensor Spaces as Modules (MULTILINEAR ALGEBRA)
5<->Generators(T) <->text607.htm#6537<->Generators(T) : TenSpc -&gt; SeqEnum
5<->T . i <->text607.htm#6538<->T . i : TenSpc, RngIntElt -&gt; TenSpcElt
5<->Ngens :: NumberOfGenerators(T) <->text607.htm#6539<->Ngens :: NumberOfGenerators(T) : TenSpc -&gt; RngIntElt
5<->NumberOfGenerators(T) <->text607.htm#6539<->NumberOfGenerators(T) : TenSpc -&gt; RngIntElt
5<->Dimension(T) <->text607.htm#6540<->Dimension(T) : TenSpc -&gt; RngIntElt
5<-># T <->text607.htm#6541<-># T : TenSpc -&gt; RngIntElt
5<->Random(T) <->text607.htm#6542<->Random(T) : TenSpc -&gt; TenSpcElt
5<->RandomTensor(R, S, C) <->text607.htm#6543<->RandomTensor(R, S, C) : Rng, [RngIntElt], TenCat -> TenSpcElt
5<->RandomTensor(R, S) <->text607.htm#6543<->RandomTensor(R, S) : Rng, [RngIntElt] -&gt; TenSpcElt
4<->Multilinear_TenSpc_Module (Example H61E26)<->text607.htm#6544<->Multilinear_TenSpc_Module (Example H61E26)
4<->Example-TenSpc_Module :<->text607.htm#6544<->Example-TenSpc_Module :: Multilinear_TenSpc_Module (Example H61E26)
3<->Tensor-spaces-as-modules :<->text607.htm#6536<->Tensor-spaces-as-modules :: Tensor Spaces as Modules (MULTILINEAR ALGEBRA)
3<->Properties-of-tensor-spaces :<->text607.htm#6545<->Properties-of-tensor-spaces :: Properties of Tensor Spaces (MULTILINEAR ALGEBRA)
5<->Valence(T) <->text607.htm#6546<->Valence(T) : TenSpc -&gt; RngIntElt
5<->Frame(T) <->text607.htm#6547<->Frame(T) : TenSpc -&gt; List
5<->BaseField :: BaseRing(T) <->text607.htm#6548<->BaseField :: BaseRing(T) : TenSpc -&gt; Rng
5<->BaseRing(T) <->text607.htm#6548<->BaseRing(T) : TenSpc -&gt; Rng
5<->TensorCategory(T) <->text607.htm#6549<->TensorCategory(T) : TenSpc -&gt; TenCat
5<->IsContravariant :: IsCovariant(T) <->text607.htm#6550<->IsContravariant :: IsCovariant(T) : TenSpc -&gt; BoolElt
5<->IsCovariant(T) <->text607.htm#6550<->IsCovariant(T) : TenSpc -&gt; BoolElt
5<->ChangeTensorCategory(~T, C) <->text607.htm#6551<->ChangeTensorCategory(~T, C) : TenSpc, TenCat -> 
5<->ChangeTensorCategory(T, C) <->text607.htm#6551<->ChangeTensorCategory(T, C) : TenSpc, TenCat -&gt; TenSpc
5<->IsAlternating(T) <->text607.htm#6552<->IsAlternating(T) : TenSpc -&gt; BoolElt
5<->IsAntisymmetric(T) <->text607.htm#6553<->IsAntisymmetric(T) : TenSpc -&gt; BoolElt
5<->IsSymmetric(T) <->text607.htm#6554<->IsSymmetric(T) : TenSpc -&gt; BoolElt
5<->UniversalCotensorSpace :: UniversalTensorSpace(T) <->text607.htm#6555<->UniversalCotensorSpace :: UniversalTensorSpace(T) : TenSpc -&gt; TenSpc
5<->Generic :: UniversalTensorSpace(T) <->text607.htm#6555<->Generic :: UniversalTensorSpace(T) : TenSpc -&gt; TenSpc
5<->UniversalTensorSpace(T) <->text607.htm#6555<->UniversalTensorSpace(T) : TenSpc -&gt; TenSpc
4<->Multilinear_TenSpc_Prop (Example H61E27)<->text607.htm#6556<->Multilinear_TenSpc_Prop (Example H61E27)
4<->Example-TenSpc_Prop :<->text607.htm#6556<->Example-TenSpc_Prop :: Multilinear_TenSpc_Prop (Example H61E27)
3<->Properties-of-tensor-spaces :<->text607.htm#6545<->Properties-of-tensor-spaces :: Properties of Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Operations-on-tensor-spaces :<->text607.htm#6528<->Operations-on-tensor-spaces :: Operations on Tensor Spaces (MULTILINEAR ALGEBRA)
3<->tensor_spaces :<->text607.htm<->tensor_spaces :: Tensor Spaces (MULTILINEAR ALGEBRA)
3<->Tensor_categories :<->text608.htm<->Tensor_categories :: Tensor Categories (MULTILINEAR ALGEBRA)
3<->Creating-tensor-categories :<->text608.htm#6558<->Creating-tensor-categories :: Creating Tensor Categories (MULTILINEAR ALGEBRA)
5<->TensorCategory(A, P) <->text608.htm#6559<->TensorCategory(A, P) : Map, SetEnum -> TenCat
5<->TensorCategory(A, P) <->text608.htm#6559<->TensorCategory(A, P) : [RngIntElt], SetEnum -&gt; TenCat
5<->CotensorCategory(A, P) <->text608.htm#6560<->CotensorCategory(A, P) : Map, SetEnum -> TenCat
5<->CotensorCategory(A, P) <->text608.htm#6560<->CotensorCategory(A, P) : [RngIntElt], SetEnum -&gt; TenCat
5<->HomotopismCategory(v : parameters) <->text608.htm#6561<->HomotopismCategory(v : parameters) : RngIntElt -&gt; TenCat
5<->CohomotopismCategory(v) <->text608.htm#6562<->CohomotopismCategory(v) : RngIntElt -&gt; TenCat
5<->LinearCategory :: AdjointCategory(v, s, t) <->text608.htm#6563<->LinearCategory :: AdjointCategory(v, s, t) : RngIntElt, RngIntElt, RngIntElt -&gt; TenCat
5<->AdjointCategory(v, s, t) <->text608.htm#6563<->AdjointCategory(v, s, t) : RngIntElt, RngIntElt, RngIntElt -&gt; TenCat
4<->Multilinear_TenCat_Const (Example H61E28)<->text608.htm#6564<->Multilinear_TenCat_Const (Example H61E28)
4<->Example-TenCat_Const :<->text608.htm#6564<->Example-TenCat_Const :: Multilinear_TenCat_Const (Example H61E28)
3<->Creating-tensor-categories :<->text608.htm#6558<->Creating-tensor-categories :: Creating Tensor Categories (MULTILINEAR ALGEBRA)
3<->Operations-on-tensor-categories :<->text608.htm#6565<->Operations-on-tensor-categories :: Operations on Tensor Categories (MULTILINEAR ALGEBRA)
5<->C1 eq C2 <->text608.htm#6566<->C1 eq C2 : TenCat, TenCat -&gt; BoolElt
5<->Valence(C) <->text608.htm#6567<->Valence(C) : TenCat -&gt; RngIntElt
5<->Arrows(C) <->text608.htm#6568<->Arrows(C) : TenCat -&gt; SeqEnum
5<->RepeatPartition(C) <->text608.htm#6569<->RepeatPartition(C) : TenCat -&gt; SetEnum
5<->IsContravariant :: IsCovariant(C) <->text608.htm#6570<->IsContravariant :: IsCovariant(C) : TenCat -&gt; BoolElt
5<->IsCovariant(C) <->text608.htm#6570<->IsCovariant(C) : TenCat -&gt; BoolElt
4<->Multilinear_TenCat_Prop (Example H61E29)<->text608.htm#6571<->Multilinear_TenCat_Prop (Example H61E29)
4<->Example-TenCat_Prop :<->text608.htm#6571<->Example-TenCat_Prop :: Multilinear_TenCat_Prop (Example H61E29)
3<->Operations-on-tensor-categories :<->text608.htm#6565<->Operations-on-tensor-categories :: Operations on Tensor Categories (MULTILINEAR ALGEBRA)
3<->Categorical-operations :<->text608.htm#6572<->Categorical-operations :: Categorical Operations (MULTILINEAR ALGEBRA)
3<->Categorical-operations-on-tensors :<->text608.htm#6573<->Categorical-operations-on-tensors :: Categorical Operations on Tensors (MULTILINEAR ALGEBRA)
5<->Subtensor(T, S) <->text608.htm#6574<->Subtensor(T, S) : TenSpcElt, List -&gt; TenSpcElt
5<->Subtensor(T, D, C) <->text608.htm#6575<->Subtensor(T, D, C) : TenSpcElt, List, Any -&gt; TenSpcElt
5<->IsSubtensor(T, S) <->text608.htm#6576<->IsSubtensor(T, S) : TenSpcElt, TenSpcElt -&gt; BoolElt
5<->LocalIdeal(T, S, I) <->text608.htm#6577<->LocalIdeal(T, S, I) : TenSpcElt, List, RngIntElt -&gt; TenSpcElt
5<->LocalIdeal(T, D, C, I) <->text608.htm#6578<->LocalIdeal(T, D, C, I) : TenSpcElt, List, Any, RngIntElt -&gt; TenSpcElt
5<->LocalIdeal(T, S, I) <->text608.htm#6579<->LocalIdeal(T, S, I) : TenSpcElt, TenSpcElt, RngIntElt -&gt; TenSpcElt
5<->IsLocalIdeal(T, S, I) <->text608.htm#6580<->IsLocalIdeal(T, S, I) : TenSpcElt, TenSpcElt, RngIntElt -&gt; BoolElt
5<->Ideal(T, S) <->text608.htm#6581<->Ideal(T, S) : TenSpcElt, List -&gt; TenSpcElt
5<->Ideal(T, D, C) <->text608.htm#6582<->Ideal(T, D, C) : TenSpcElt, List, Any -&gt; TenSpcElt
5<->Ideal(T, S) <->text608.htm#6583<->Ideal(T, S) : TenSpcElt, TenSpcElt -&gt; TenSpcElt
5<->IsIdeal(T, S) <->text608.htm#6584<->IsIdeal(T, S) : TenSpcElt, TenSpcElt -&gt; BoolElt
5<->LocalQuotient(T, S, I : parameters) <->text608.htm#6585<->LocalQuotient(T, S, I : parameters) : TenSpcElt, TenSpcElt, RngIntElt -&gt; TenSpcElt, Hmtp
5<->/ :: Quotient(T, S : parameters) <->text608.htm#6586<->/ :: Quotient(T, S : parameters) : TenSpcElt, TenSpcElt -&gt; TenSpcElt, Hmtp
5<->Quotient(T, S : parameters) <->text608.htm#6586<->Quotient(T, S : parameters) : TenSpcElt, TenSpcElt -&gt; TenSpcElt, Hmtp
4<->Multilinear_Ten_Cat_Ops (Example H61E30)<->text608.htm#6587<->Multilinear_Ten_Cat_Ops (Example H61E30)
4<->Example-Ten_Cat_Ops :<->text608.htm#6587<->Example-Ten_Cat_Ops :: Multilinear_Ten_Cat_Ops (Example H61E30)
3<->Categorical-operations-on-tensors :<->text608.htm#6573<->Categorical-operations-on-tensors :: Categorical Operations on Tensors (MULTILINEAR ALGEBRA)
3<->Categorical-operations-on-tensor-spaces :<->text608.htm#6588<->Categorical-operations-on-tensor-spaces :: Categorical Operations on Tensor  Spaces (MULTILINEAR ALGEBRA)
5<->SubtensorSpace(T, L) <->text608.htm#6589<->SubtensorSpace(T, L) : TenSpc, [TenSpcElt] -&gt; TenSpc
5<->SubtensorSpace(T, t) <->text608.htm#6590<->SubtensorSpace(T, t) : TenSpc, TenSpcelt -&gt; TenSpc
5<->IsSubtensorSpace(T, S) <->text608.htm#6591<->IsSubtensorSpace(T, S) : TenSpc, TenSpc -&gt; BoolElt
5<->/ :: Quotient(T, S) <->text608.htm#6592<->/ :: Quotient(T, S) : TenSpc, TenSpc -&gt; TenSpc
5<->Quotient(T, S) <->text608.htm#6592<->Quotient(T, S) : TenSpc, TenSpc -&gt; TenSpc
4<->Multilinear_TenSpc_Cat_Ops (Example H61E31)<->text608.htm#6593<->Multilinear_TenSpc_Cat_Ops (Example H61E31)
4<->Example-TenSpc_Cat_Ops :<->text608.htm#6593<->Example-TenSpc_Cat_Ops :: Multilinear_TenSpc_Cat_Ops (Example H61E31)
3<->Categorical-operations-on-tensor-spaces :<->text608.htm#6588<->Categorical-operations-on-tensor-spaces :: Categorical Operations on Tensor  Spaces (MULTILINEAR ALGEBRA)
3<->Homotopisms (MULTILINEAR ALGEBRA)<->text608.htm#6594<->Homotopisms (MULTILINEAR ALGEBRA)
3<->Constructions-of-Homotopisms :<->text608.htm#6595<->Constructions-of-Homotopisms :: Constructions of Homotopisms (MULTILINEAR ALGEBRA)
5<->Homotopism(T, S, M, C) <->text608.htm#6596<->Homotopism(T, S, M, C) : TenSpcElt, TenSpcElt, List, TenCat -> Hmtp
5<->Homotopism(T, S, M) <->text608.htm#6596<->Homotopism(T, S, M) : TenSpcElt, TenSpcElt, List -&gt; Hmtp
4<->Multilinear_Hmtp_Const (Example H61E32)<->text608.htm#6597<->Multilinear_Hmtp_Const (Example H61E32)
4<->Example-Hmtp_Const :<->text608.htm#6597<->Example-Hmtp_Const :: Multilinear_Hmtp_Const (Example H61E32)
3<->Constructions-of-Homotopisms :<->text608.htm#6595<->Constructions-of-Homotopisms :: Constructions of Homotopisms (MULTILINEAR ALGEBRA)
3<->Basic-Operations-with-Homotopisms :<->text608.htm#6598<->Basic-Operations-with-Homotopisms :: Basic Operations with Homotopisms (MULTILINEAR ALGEBRA)
5<->H1 * H2 <->text608.htm#6599<->H1 * H2 : Hmtp, Hmtp -&gt; Hmtp
5<->Domain(H) <->text608.htm#6600<->Domain(H) : Hmtp -&gt; TenSpcElt
5<->Codomain(H) <->text608.htm#6601<->Codomain(H) : Hmtp -&gt; TenSpcElt
5<->Maps(H) <->text608.htm#6602<->Maps(H) : Hmtp -&gt; List
5<->TensorCategory(H) <->text608.htm#6603<->TensorCategory(H) : Hmtp -&gt; TenCat
5<->ChangeTensorCategory(~H, C) <->text608.htm#6604<->ChangeTensorCategory(~H, C) : Hmtp, TenCat -> 
5<->ChangeTensorCategory(H, C) <->text608.htm#6604<->ChangeTensorCategory(H, C) : Hmtp, TenCat -&gt; Hmtp
5<->Kernel(H) <->text608.htm#6605<->Kernel(H) : Hmtp -&gt; TenSpcElt
5<->Image(H) <->text608.htm#6606<->Image(H) : Hmtp -&gt; TenSpcElt
4<->Multilinear_Hmtp_Ops (Example H61E33)<->text608.htm#6607<->Multilinear_Hmtp_Ops (Example H61E33)
4<->Example-Hmtp_Ops :<->text608.htm#6607<->Example-Hmtp_Ops :: Multilinear_Hmtp_Ops (Example H61E33)
3<->Basic-Operations-with-Homotopisms :<->text608.htm#6598<->Basic-Operations-with-Homotopisms :: Basic Operations with Homotopisms (MULTILINEAR ALGEBRA)
3<->Homotopisms (MULTILINEAR ALGEBRA)<->text608.htm#6594<->Homotopisms (MULTILINEAR ALGEBRA)
3<->Tensor_categories :<->text608.htm<->Tensor_categories :: Tensor Categories (MULTILINEAR ALGEBRA)
3<->Some_examples :<->text609.htm<->Some_examples :: Some Extended Examples (MULTILINEAR ALGEBRA)
3<->Distinguishing-groups :<->text609.htm#6609<->Distinguishing-groups :: Distinguishing Groups (MULTILINEAR ALGEBRA)
4<->Multilinear_Payne_Grps (Example H61E34)<->text609.htm#6610<->Multilinear_Payne_Grps (Example H61E34)
4<->Example-Payne_Grps :<->text609.htm#6610<->Example-Payne_Grps :: Multilinear_Payne_Grps (Example H61E34)
3<->Distinguishing-groups :<->text609.htm#6609<->Distinguishing-groups :: Distinguishing Groups (MULTILINEAR ALGEBRA)
3<->Simplifying-automorphism-group-computations :<->text609.htm#6611<->Simplifying-automorphism-group-computations :: Simplifying Automorphism Group  Computations (MULTILINEAR ALGEBRA)
4<->Multilinear_Ext_Over_Adj (Example H61E35)<->text609.htm#6612<->Multilinear_Ext_Over_Adj (Example H61E35)
4<->Example-Ext_Over_Adj :<->text609.htm#6612<->Example-Ext_Over_Adj :: Multilinear_Ext_Over_Adj (Example H61E35)
3<->Simplifying-automorphism-group-computations :<->text609.htm#6611<->Simplifying-automorphism-group-computations :: Simplifying Automorphism Group  Computations (MULTILINEAR ALGEBRA)
3<->Some_examples :<->text609.htm<->Some_examples :: Some Extended Examples (MULTILINEAR ALGEBRA)
3<->multilinear :<->text603.htm<->multilinear :: MULTILINEAR ALGEBRA
3<->group-overview :<->text612.htm<->group-overview :: GROUPS
3<->introduction :<->text613.htm<->introduction :: Introduction (GROUPS)
3<->category :<->text613.htm#6617<->category :: The Categories of Finite Groups (GROUPS)
3<->introduction :<->text613.htm<->introduction :: Introduction (GROUPS)
3<->creation-symmetric :<->text614.htm<->creation-symmetric :: Construction of Elements (GROUPS)
3<->element :<->text614.htm#6619<->element :: Construction of an Element (GROUPS)
5<->elt< G | L > <->text614.htm#6620<->elt&lt; G | L &gt; : Grp, List(Elt) -&gt; GrpElt
5<->G ! Q <->text614.htm#6621<->G ! Q : Grp, [ Elt ] -&gt; GrpElt
5<->Identity(G) <->text614.htm#6622<->Identity(G) : Grp -&gt; GrpElt
3<->element :<->text614.htm#6619<->element :: Construction of an Element (GROUPS)
3<->coercion :<->text614.htm#6623<->coercion :: Coercion (GROUPS)
5<->G ! g <->text614.htm#6624<->G ! g : Grp, GrpElt -&gt; GrpElt
3<->coercion :<->text614.htm#6623<->coercion :: Coercion (GROUPS)
3<->homomorphism :<->text614.htm#6625<->homomorphism :: Homomorphisms (GROUPS)
5<->hom< G -> H | L > <->text614.htm#6626<->hom&lt; G -&gt; H | L &gt; : Grp, Grp -&gt; Map
5<->hom< G -> H | x : -> e(x) > <->text614.htm#6627<->hom&lt; G -&gt; H | x : -&gt; e(x) &gt; : Grp, Grp -&gt; Map
5<->IdentityHomomorphism(G) <->text614.htm#6628<->IdentityHomomorphism(G) : Grp -&gt; Map
4<->Grp_Homomorphisms (Example H62E1)<->text614.htm#6629<->Grp_Homomorphisms (Example H62E1)
4<->Example-Homomorphisms :<->text614.htm#6629<->Example-Homomorphisms :: Grp_Homomorphisms (Example H62E1)
4<->Grp_Homomorphisms-2 (Example H62E2)<->text614.htm#6630<->Grp_Homomorphisms-2 (Example H62E2)
4<->Example-Homomorphisms-2 :<->text614.htm#6630<->Example-Homomorphisms-2 :: Grp_Homomorphisms-2 (Example H62E2)
3<->homomorphism :<->text614.htm#6625<->homomorphism :: Homomorphisms (GROUPS)
3<->arithmetic :<->text614.htm#6631<->arithmetic :: Arithmetic with Elements (GROUPS)
5<->g * h <->text614.htm#6632<->g * h : GrpElt, GrpElt -&gt; GrpElt
5<->g ^ n <->text614.htm#6633<->g ^ n : GrpElt, RngIntElt -&gt; GrpElt
5<->g / h <->text614.htm#6634<->g / h : GrpElt, GrpElt -&gt; GrpElt
5<->g ^ h <->text614.htm#6635<->g ^ h : GrpElt, GrpElt -&gt; GrpElt
5<->(,) :: (g, h) <->text614.htm#6636<->(,) :: (g, h) : GrpElt, GrpElt -&gt; GrpElt
5<->(,,) :: (g1, ..., gr) <->text614.htm#6637<->(,,) :: (g<sub>1</sub>, ..., g<sub>r</sub>) : GrpElt, ..., GrpElt -&gt; GrpElt
5<->g eq h <->text614.htm#6638<->g eq h : GrpElt, GrpElt -&gt; BoolElt
5<->g ne h <->text614.htm#6639<->g ne h : GrpElt, GrpElt -&gt; BoolElt
5<->IsIdentity :: IsId(g) <->text614.htm#6640<->IsIdentity :: IsId(g) : GrpElt -&gt; BoolElt
5<->IsId(g) <->text614.htm#6640<->IsId(g) : GrpElt -&gt; BoolElt
5<->Order(g) <->text614.htm#6641<->Order(g) : GrpElt -&gt; RngIntElt
4<->Grp_Arithmetic (Example H62E3)<->text614.htm#6642<->Grp_Arithmetic (Example H62E3)
4<->Example-Arithmetic :<->text614.htm#6642<->Example-Arithmetic :: Grp_Arithmetic (Example H62E3)
3<->arithmetic :<->text614.htm#6631<->arithmetic :: Arithmetic with Elements (GROUPS)
3<->creation-symmetric :<->text614.htm<->creation-symmetric :: Construction of Elements (GROUPS)
3<->creation-general :<->text615.htm<->creation-general :: Construction of a General Group (GROUPS)
3<->magma :<->text615.htm#6644<->magma :: The General Group Constructors (GROUPS)
5<->PermutationGroup <->text615.htm#6645<->PermutationGroup< n | L > : RngIntElt, List -> GrpPerm, Hom
5<->MatrixGroup :: PermutationGroup< X | L > <->text615.htm#6645<->MatrixGroup :: PermutationGroup&lt; X | L &gt; : Set, List -&gt; GrpPerm, Hom
5<->PermutationGroup< X | L > <->text615.htm#6645<->PermutationGroup&lt; X | L &gt; : Set, List -&gt; GrpPerm, Hom
5<->PolycyclicGroup :: Group< X | R > <->text615.htm#6646<->PolycyclicGroup :: Group&lt; X | R &gt; : List(Identifiers), List(GrpFPRel) -&gt; GrpFP, Hom(Grp)
5<->AbelianGroup :: Group< X | R > <->text615.htm#6646<->AbelianGroup :: Group&lt; X | R &gt; : List(Identifiers), List(GrpFPRel) -&gt; GrpFP, Hom(Grp)
5<->Group< X | R > <->text615.htm#6646<->Group&lt; X | R &gt; : List(Identifiers), List(GrpFPRel) -&gt; GrpFP, Hom(Grp)
4<->Grp_GroupConstructors (Example H62E4)<->text615.htm#6647<->Grp_GroupConstructors (Example H62E4)
4<->Example-GroupConstructors :<->text615.htm#6647<->Example-GroupConstructors :: Grp_GroupConstructors (Example H62E4)
4<->Grp_PolycyclicGroup (Example H62E5)<->text615.htm#6648<->Grp_PolycyclicGroup (Example H62E5)
4<->Example-PolycyclicGroup :<->text615.htm#6648<->Example-PolycyclicGroup :: Grp_PolycyclicGroup (Example H62E5)
3<->magma :<->text615.htm#6644<->magma :: The General Group Constructors (GROUPS)
3<->subgroup :<->text615.htm#6649<->subgroup :: Construction of Subgroups (GROUPS)
5<->sub<G | L> <->text615.htm#6650<->sub&lt;G | L&gt; : Grp, List -&gt; Grp
5<->ncl<G | L> <->text615.htm#6651<->ncl&lt;G | L&gt; : Grp, List -&gt; Grp
4<->Grp_Subgroup (Example H62E6)<->text615.htm#6652<->Grp_Subgroup (Example H62E6)
4<->Example-Subgroup :<->text615.htm#6652<->Example-Subgroup :: Grp_Subgroup (Example H62E6)
3<->subgroup :<->text615.htm#6649<->subgroup :: Construction of Subgroups (GROUPS)
3<->quotient :<->text615.htm#6653<->quotient :: Construction of Quotient Groups (GROUPS)
5<->quo<G | L> <->text615.htm#6654<->quo&lt;G | L&gt; : Grp, List -&gt; Grp, Map
5<->G / N <->text615.htm#6655<->G / N : Grp, Grp -&gt; Grp
4<->Grp_Quotient (Example H62E7)<->text615.htm#6656<->Grp_Quotient (Example H62E7)
4<->Example-Quotient :<->text615.htm#6656<->Example-Quotient :: Grp_Quotient (Example H62E7)
3<->quotient :<->text615.htm#6653<->quotient :: Construction of Quotient Groups (GROUPS)
3<->creation-general :<->text615.htm<->creation-general :: Construction of a General Group (GROUPS)
3<->extension-standard-group :<->text616.htm<->extension-standard-group :: Standard Groups and Extensions (GROUPS)
3<->standard :<->text616.htm#6658<->standard :: Construction of a Standard Group (GROUPS)
5<->AbelianGroup(Q) <->text616.htm#6659<->AbelianGroup(Q) : [ RngIntElt ] -> GrpAb
5<->AbelianGroup(C, Q) <->text616.htm#6659<->AbelianGroup(C, Q) : Cat, [ RngIntElt ] -&gt; GrpFin
5<->AlternatingGroup(n) <->text616.htm#6660<->AlternatingGroup(n) : RngIntElt -> GrpPerm
5<->AlternatingGroup(C, n) <->text616.htm#6660<->AlternatingGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->Alt(n) <->text616.htm#6660<->Alt(n) : RngIntElt -> GrpPerm
5<->AlternatingGroup(C, n) <->text616.htm#6660<->AlternatingGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->CyclicGroup(n) <->text616.htm#6661<->CyclicGroup(n) : RngIntElt -> GrpPerm
5<->CyclicGroup(C, n) <->text616.htm#6661<->CyclicGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->DihedralGroup(n) <->text616.htm#6662<->DihedralGroup(n) : RngIntElt -> GrpPerm
5<->DihedralGroup(C, n) <->text616.htm#6662<->DihedralGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->DicyclicGroup(A, a) <->text616.htm#6663<->DicyclicGroup(A, a) : GrpAb, GrpAbElt -> GrpFP
5<->DicyclicGroup(n) <->text616.htm#6663<->DicyclicGroup(n) : RngIntElt -&gt; GrpFP
5<->SymmetricGroup(n) <->text616.htm#6664<->SymmetricGroup(n) : RngIntElt -> GrpPerm
5<->SymmetricGroup(C, n) <->text616.htm#6664<->SymmetricGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->Sym(n) <->text616.htm#6664<->Sym(n) : RngIntElt -> GrpPerm
5<->SymmetricGroup(C, n) <->text616.htm#6664<->SymmetricGroup(C, n) : Cat, RngIntElt -&gt; GrpFin
5<->ExtraSpecialGroup(p, n $\colon$ \parameters) <->text616.htm#6665<->ExtraSpecialGroup(p, n $\colon$ \parameters) : RngIntElt, RngIntElt -> GrpPerm
5<->ExtraSpecialGroup(C, p, n : parameters) <->text616.htm#6665<->ExtraSpecialGroup(C, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpFin
4<->Grp_StandardGroups (Example H62E8)<->text616.htm#6666<->Grp_StandardGroups (Example H62E8)
4<->Example-StandardGroups :<->text616.htm#6666<->Example-StandardGroups :: Grp_StandardGroups (Example H62E8)
3<->standard :<->text616.htm#6658<->standard :: Construction of a Standard Group (GROUPS)
3<->extension :<->text616.htm#6667<->extension :: Construction of Extensions (GROUPS)
5<->DirectProduct(G, H) <->text616.htm#6668<->DirectProduct(G, H) : Grp, Grp -&gt; Grp
5<->DirectProduct(Q) <->text616.htm#6669<->DirectProduct(Q) : [ Grp ] -&gt; Grp
5<->SemidirectProduct(K, H, f: parameters) <->text616.htm#6670<->SemidirectProduct(K, H, f: parameters) : Grp, Grp, Map -&gt; Grp, Map, Map
4<->Grp_Extensions (Example H62E9)<->text616.htm#6671<->Grp_Extensions (Example H62E9)
4<->Example-Extensions :<->text616.htm#6671<->Example-Extensions :: Grp_Extensions (Example H62E9)
3<->extension :<->text616.htm#6667<->extension :: Construction of Extensions (GROUPS)
3<->extension-standard-group :<->text616.htm<->extension-standard-group :: Standard Groups and Extensions (GROUPS)
3<->category-transfer :<->text617.htm<->category-transfer :: Transfer Functions Between  Group Categories (GROUPS)
5<->pQuotient(F, p, c: parameters) <->text617.htm#6673<->pQuotient(F, p, c: parameters) : GrpFP, RngIntElt, RngIntElt -&gt; GrpPC, Map
5<->RegularRepresentation :: CosetAction(G, H) <->text617.htm#6674<->RegularRepresentation :: CosetAction(G, H) : Grp, Grp -&gt; Hom(Grp), GrpPerm, Grp
5<->CosetAction(G, H) <->text617.htm#6674<->CosetAction(G, H) : Grp, Grp -&gt; Hom(Grp), GrpPerm, Grp
5<->CosetImage(G, H) <->text617.htm#6675<->CosetImage(G, H) : Grp, Grp -&gt; GrpPerm
5<->CosetKernel(G, H) <->text617.htm#6676<->CosetKernel(G, H) : Grp, Grp -&gt; Grp
5<->GPCGroup(G) <->text617.htm#6677<->GPCGroup(G) : Grp -&gt; GrpGPC, Hom(Grp)
5<->PCGroup(G) <->text617.htm#6678<->PCGroup(G) : Grp -&gt; GrpPC, Hom(Grp)
5<->FPGroup(G: parameters) : GrpPerm <->text617.htm#6679<->FPGroup(G: parameters) : GrpPerm :-&gt; GrpFP, Hom(Grp)
4<->Grp_CosetAction (Example H62E10)<->text617.htm#6680<->Grp_CosetAction (Example H62E10)
4<->Example-CosetAction :<->text617.htm#6680<->Example-CosetAction :: Grp_CosetAction (Example H62E10)
4<->Grp_CosetAction-2 (Example H62E11)<->text617.htm#6681<->Grp_CosetAction-2 (Example H62E11)
4<->Example-CosetAction-2 :<->text617.htm#6681<->Example-CosetAction-2 :: Grp_CosetAction-2 (Example H62E11)
4<->Grp_FPGroup (Example H62E12)<->text617.htm#6682<->Grp_FPGroup (Example H62E12)
4<->Example-FPGroup :<->text617.htm#6682<->Example-FPGroup :: Grp_FPGroup (Example H62E12)
3<->category-transfer :<->text617.htm<->category-transfer :: Transfer Functions Between  Group Categories (GROUPS)
3<->operation :<->text618.htm<->operation :: Basic Operations (GROUPS)
3<->access :<->text618.htm#6684<->access :: Accessing Group Information (GROUPS)
5<->G . i <->text618.htm#6685<->G . i : Grp, RngIntElt -&gt; GrpElt
5<->Generators(G) <->text618.htm#6686<->Generators(G) : Grp -&gt; { GrpFinElt }
5<->Ngens :: NumberOfGenerators(G) <->text618.htm#6687<->Ngens :: NumberOfGenerators(G) : Grp -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text618.htm#6687<->NumberOfGenerators(G) : Grp -&gt; RngIntElt
5<->Generic(G) <->text618.htm#6688<->Generic(G) : Grp -&gt; Grp
5<->Parent(g) <->text618.htm#6689<->Parent(g) : GrpElt -&gt; Grp
4<->Grp_Generators (Example H62E13)<->text618.htm#6690<->Grp_Generators (Example H62E13)
4<->Example-Generators :<->text618.htm#6690<->Example-Generators :: Grp_Generators (Example H62E13)
5<->Orbit(G, M, x) <->text618.htm#6691<->Orbit(G, M, x) : Grp, Any, Any -&gt; Any
5<->OrbitClosure(G, M, S) <->text618.htm#6692<->OrbitClosure(G, M, S) : Grp, Any, Any -&gt; Any
3<->access :<->text618.htm#6684<->access :: Accessing Group Information (GROUPS)
3<->groupname :<->text618.htm#6693<->groupname :: Names of Finite Groups (GROUPS)
5<->GroupName(G) <->text618.htm#6694<->GroupName(G) : Grp -&gt; MonStgElt
4<->Grp_grp-groupname (Example H62E14)<->text618.htm#6695<->Grp_grp-groupname (Example H62E14)
4<->Example-grp-groupname :<->text618.htm#6695<->Example-grp-groupname :: Grp_grp-groupname (Example H62E14)
5<->Group(s) <->text618.htm#6696<->Group(s) : MonStgElt -&gt; Grp
4<->Grp_grp-group (Example H62E15)<->text618.htm#6697<->Grp_grp-group (Example H62E15)
4<->Example-grp-group :<->text618.htm#6697<->Example-grp-group :: Grp_grp-group (Example H62E15)
3<->groupname :<->text618.htm#6693<->groupname :: Names of Finite Groups (GROUPS)
3<->operation :<->text618.htm<->operation :: Basic Operations (GROUPS)
3<->element :<->text619.htm<->element :: Operations on the Set of Elements (GROUPS)
3<->order-index :<->text619.htm#6699<->order-index :: Order and Index Functions (GROUPS)
5<-># :: Order(G) <->text619.htm#6700<-># :: Order(G) : GrpFin -&gt; RngIntElt
5<->Order(G) <->text619.htm#6700<->Order(G) : GrpFin -&gt; RngIntElt
5<->FactoredOrder(G) <->text619.htm#6701<->FactoredOrder(G) : GrpFin -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->Index(G, H) <->text619.htm#6702<->Index(G, H) : GrpFin, GrpFin -&gt; RngIntElt
5<->FactoredIndex(G, H) <->text619.htm#6703<->FactoredIndex(G, H) : GrpFin, GrpFin -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
4<->Grp_Order (Example H62E16)<->text619.htm#6704<->Grp_Order (Example H62E16)
4<->Example-Order :<->text619.htm#6704<->Example-Order :: Grp_Order (Example H62E16)
3<->order-index :<->text619.htm#6699<->order-index :: Order and Index Functions (GROUPS)
3<->Boolean :<->text619.htm#6705<->Boolean :: Membership and Equality (GROUPS)
5<->g in G <->text619.htm#6706<->g in G : GrpFinElt, GrpFin -&gt; BoolElt
5<->g notin G <->text619.htm#6707<->g notin G : GrpFinElt, GrpFin -&gt; BoolElt
5<->S subset G <->text619.htm#6708<->S subset G : { GrpFinElt }, GrpFin -&gt; BoolElt
5<->S notsubset G <->text619.htm#6709<->S notsubset G : { GrpFinElt }, GrpFin -&gt; BoolElt
5<->H subset G <->text619.htm#6710<->H subset G : GrpFin, GrpFin -&gt; BoolElt
5<->H notsubset G <->text619.htm#6711<->H notsubset G : GrpFin, GrpFin -&gt; BoolElt
5<->H eq G <->text619.htm#6712<->H eq G : GrpFin, GrpFin -&gt; BoolElt
5<->H ne G <->text619.htm#6713<->H ne G : GrpFin, GrpFin -&gt; BoolElt
3<->Boolean :<->text619.htm#6705<->Boolean :: Membership and Equality (GROUPS)
3<->set :<->text619.htm#6714<->set :: Set Operations (GROUPS)
5<->NumberingMap(G) <->text619.htm#6715<->NumberingMap(G) : GrpFin -&gt; Map
5<->Representative(G) <->text619.htm#6716<->Representative(G) : GrpFin -&gt; GrpFinElt
4<->Grp_SetOperations (Example H62E17)<->text619.htm#6717<->Grp_SetOperations (Example H62E17)
4<->Example-SetOperations :<->text619.htm#6717<->Example-SetOperations :: Grp_SetOperations (Example H62E17)
3<->set :<->text619.htm#6714<->set :: Set Operations (GROUPS)
3<->set :<->text619.htm#6718<->set :: Random Elements (GROUPS)
5<->Random(G: parameters) <->text619.htm#6719<->Random(G: parameters) : GrpFin -&gt; GrpFinElt
4<->Grp_RandomOperations (Example H62E18)<->text619.htm#6720<->Grp_RandomOperations (Example H62E18)
4<->Example-RandomOperations :<->text619.htm#6720<->Example-RandomOperations :: Grp_RandomOperations (Example H62E18)
5<->RandomProcessWithWords :: RandomProcess(G) <->text619.htm#6721<->RandomProcessWithWords :: RandomProcess(G) : GrpFin -&gt; Process
5<->RandomProcessWithValues :: RandomProcess(G) <->text619.htm#6721<->RandomProcessWithValues :: RandomProcess(G) : GrpFin -&gt; Process
5<->RandomProcessWithWordsAndValues :: RandomProcess(G) <->text619.htm#6721<->RandomProcessWithWordsAndValues :: RandomProcess(G) : GrpFin -&gt; Process
5<->RandomProcess(G) <->text619.htm#6721<->RandomProcess(G) : GrpFin -&gt; Process
5<->Random(P) <->text619.htm#6722<->Random(P) : Process -&gt; GrpFinElt
5<->Random(P) <->text619.htm#6723<->Random(P) : Process -&gt; GrpFinElt
5<->InitialiseProspector(G$\colon$\parameters)<->text619.htm#6724<->InitialiseProspector(G$\colon$\parameters): GrpPerm ->
5<->InitialiseProspector(G:parameters)<->text619.htm#6724<->InitialiseProspector(G:parameters): GrpMat -&gt;
5<->Prospector(G, f:parameters)<->text619.htm#6725<->Prospector(G, f:parameters): Grp, UserProgram -&gt; BoolElt, GrpElt, GrpSLPElt
4<->Grp_RandomProspector (Example H62E19)<->text619.htm#6726<->Grp_RandomProspector (Example H62E19)
4<->Example-RandomProspector :<->text619.htm#6726<->Example-RandomProspector :: Grp_RandomProspector (Example H62E19)
3<->set :<->text619.htm#6718<->set :: Random Elements (GROUPS)
3<->coset-space-action :<->text619.htm#6727<->coset-space-action :: Action on a Coset Space (GROUPS)
5<->CosetTable(G, H) <->text619.htm#6728<->CosetTable(G, H) : GrpFin, GrpFin -&gt; Map
5<->[Future release] CosetTable(G, f) <->text619.htm#6729<->[Future release] CosetTable(G, f) : GrpFin, Hom(GrpFin) -&gt; Hom(GrpFin)
5<->RightTransversal :: Transversal(G, H) <->text619.htm#6730<->RightTransversal :: Transversal(G, H) : Grp, Grp -&gt; {@ GrpElt  @}, Map
5<->Transversal(G, H) <->text619.htm#6730<->Transversal(G, H) : Grp, Grp -&gt; {@ GrpElt  @}, Map
5<->CosetAction(G, H) <->text619.htm#6731<->CosetAction(G, H) : Grp, Grp -&gt; Hom(Grp), GrpPerm, Grp
5<->CosetImage(G, H) <->text619.htm#6732<->CosetImage(G, H) : Grp, Grp -&gt; GrpPerm
5<->CosetKernel(G, H) <->text619.htm#6733<->CosetKernel(G, H) : Grp, Grp -&gt; Grp
3<->coset-space-action :<->text619.htm#6727<->coset-space-action :: Action on a Coset Space (GROUPS)
3<->element :<->text619.htm<->element :: Operations on the Set of Elements (GROUPS)
3<->operation-subgroup :<->text620.htm<->operation-subgroup :: Standard Subgroup  Constructions (GROUPS)
5<->Conjugate :: H ^ g <->text620.htm#6735<->Conjugate :: H ^ g : GrpFin, GrpFinElt -&gt; GrpFin
5<->H ^ g <->text620.htm#6735<->H ^ g : GrpFin, GrpFinElt -&gt; GrpFin
5<->H meet K <->text620.htm#6736<->H meet K : GrpFin, GrpFin -&gt; GrpFin
5<->CommutatorSubgroup(H, K) <->text620.htm#6737<->CommutatorSubgroup(H, K) : GrpFin, GrpFin -> GrpFin
5<->CommutatorSubgroup(G, H, K) <->text620.htm#6737<->CommutatorSubgroup(G, H, K) : GrpFin, GrpFin, GrpFin -&gt; GrpFin
5<->Centraliser :: Centralizer(G, g) <->text620.htm#6738<->Centraliser :: Centralizer(G, g) : GrpFin, GrpFinElt -&gt; GrpFin
5<->Centralizer(G, g) <->text620.htm#6738<->Centralizer(G, g) : GrpFin, GrpFinElt -&gt; GrpFin
5<->Centraliser :: Centralizer(G, H) <->text620.htm#6739<->Centraliser :: Centralizer(G, H) : GrpFin, GrpFin -&gt; GrpFin
5<->Centralizer(G, H) <->text620.htm#6739<->Centralizer(G, H) : GrpFin, GrpFin -&gt; GrpFin
5<->Core(G, H) <->text620.htm#6740<->Core(G, H) : GrpFin, GrpFin -&gt; GrpFin
5<->NormalClosure :: H ^ G <->text620.htm#6741<->NormalClosure :: H ^ G : GrpFin, GrpFin -&gt; GrpFin
5<->H ^ G <->text620.htm#6741<->H ^ G : GrpFin, GrpFin -&gt; GrpFin
5<->Normaliser :: Normalizer(G, H) <->text620.htm#6742<->Normaliser :: Normalizer(G, H) : GrpFin, GrpFin -&gt; GrpFin
5<->Normalizer(G, H) <->text620.htm#6742<->Normalizer(G, H) : GrpFin, GrpFin -&gt; GrpFin
5<->pCore(G, p) <->text620.htm#6743<->pCore(G, p) : GrpFin, RngIntElt -&gt; GrpFin
5<->SylowSubgroup(G, p) <->text620.htm#6744<->SylowSubgroup(G, p) : GrpFin, RngIntElt -&gt; GrpFin
3<->abstract-group :<->text620.htm#6745<->abstract-group :: Abstract Group Predicates (GROUPS)
5<->IsAbelian(G) <->text620.htm#6746<->IsAbelian(G) : GrpFin -&gt; BoolElt
5<->IsCyclic(G) <->text620.htm#6747<->IsCyclic(G) : GrpFin -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text620.htm#6748<->IsElementaryAbelian(G) : GrpFin -&gt; BoolElt
5<->IsCentral(G, H) <->text620.htm#6749<->IsCentral(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsConjugate(G, g, h) <->text620.htm#6750<->IsConjugate(G, g, h) : GrpFin, GrpFinElt, GrpFinElt -&gt; BoolElt, GrpFinElt
5<->IsConjugate(G, H, K) <->text620.htm#6751<->IsConjugate(G, H, K) : GrpFin, GrpFin, GrpFin -&gt; BoolElt, GrpFinElt
5<->IsExtraSpecial(G) <->text620.htm#6752<->IsExtraSpecial(G) : GrpFin -&gt; BoolElt
5<->IsHyperelementary(G) <->text620.htm#6753<->IsHyperelementary(G) : Grp -&gt; BoolElt,Grp,Grp
4<->Grp_grp-ishyperelementary (Example H62E20)<->text620.htm#6754<->Grp_grp-ishyperelementary (Example H62E20)
4<->Example-grp-ishyperelementary :<->text620.htm#6754<->Example-grp-ishyperelementary :: Grp_grp-ishyperelementary (Example H62E20)
5<->IsMaximal(G, H) <->text620.htm#6755<->IsMaximal(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsNilpotent(G) <->text620.htm#6756<->IsNilpotent(G) : GrpFin -&gt; BoolElt
5<->IsNormal(G, H) <->text620.htm#6757<->IsNormal(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsPerfect(G) <->text620.htm#6758<->IsPerfect(G) : GrpFin -&gt; BoolElt
5<->IsQGroup(G) <->text620.htm#6759<->IsQGroup(G) : Grp -&gt; BoolElt
4<->Grp_grp-isqgroup (Example H62E21)<->text620.htm#6760<->Grp_grp-isqgroup (Example H62E21)
4<->Example-grp-isqgroup :<->text620.htm#6760<->Example-grp-isqgroup :: Grp_grp-isqgroup (Example H62E21)
5<->IsSelfNormalising :: IsSelfNormalizing(G, H) <->text620.htm#6761<->IsSelfNormalising :: IsSelfNormalizing(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsSelfNormalizing(G, H) <->text620.htm#6761<->IsSelfNormalizing(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsSimple(G) <->text620.htm#6762<->IsSimple(G) : GrpFin -&gt; BoolElt
5<->IsSolvable :: IsSoluble(G) <->text620.htm#6763<->IsSolvable :: IsSoluble(G) : GrpFin -&gt; BoolElt
5<->IsSoluble(G) <->text620.htm#6763<->IsSoluble(G) : GrpFin -&gt; BoolElt
5<->IsSpecial(G) <->text620.htm#6764<->IsSpecial(G) : GrpFin -&gt; BoolElt
5<->IsSubnormal(G, H) <->text620.htm#6765<->IsSubnormal(G, H) : GrpFin, GrpFin -&gt; BoolElt
5<->IsTrivial(G) <->text620.htm#6766<->IsTrivial(G) : Grp -&gt; BoolElt
3<->abstract-group :<->text620.htm#6745<->abstract-group :: Abstract Group Predicates (GROUPS)
3<->operation-subgroup :<->text620.htm<->operation-subgroup :: Standard Subgroup  Constructions (GROUPS)
3<->characteristic-subgroup-normal-structure :<->text621.htm<->characteristic-subgroup-normal-structure :: Characteristic Subgroups and  Normal Structure (GROUPS)
3<->subgroup-series :<->text621.htm#6768<->subgroup-series :: Characteristic Subgroups and  Subgroup Series (GROUPS)
5<->Center :: Centre(G) <->text621.htm#6769<->Center :: Centre(G) : GrpFin -&gt; GrpFin
5<->Centre(G) <->text621.htm#6769<->Centre(G) : GrpFin -&gt; GrpFin
5<->Hypercenter :: Hypercentre(G) <->text621.htm#6770<->Hypercenter :: Hypercentre(G) : GrpFin -&gt; GrpFin
5<->Hypercentre(G) <->text621.htm#6770<->Hypercentre(G) : GrpFin -&gt; GrpFin
5<->DerivedLength(G) <->text621.htm#6771<->DerivedLength(G) : GrpFin -&gt; RngIntElt
5<->DerivedSeries(G) <->text621.htm#6772<->DerivedSeries(G) : GrpFin -&gt; [ GrpFin ]
5<->DerivedGroup :: DerivedSubgroup(G) <->text621.htm#6773<->DerivedGroup :: DerivedSubgroup(G) : GrpFin -&gt; GrpFin
5<->DerivedSubgroup(G) <->text621.htm#6773<->DerivedSubgroup(G) : GrpFin -&gt; GrpFin
5<->FittingSubgroup(G) <->text621.htm#6774<->FittingSubgroup(G) : GrpFin -&gt; GrpFin
5<->FrattiniSubgroup(G) <->text621.htm#6775<->FrattiniSubgroup(G) : GrpFin -&gt; GrpFin
5<->JenningsSeries(G) <->text621.htm#6776<->JenningsSeries(G) : GrpFin -&gt; [ GrpFin ]
5<->LowerCentralSeries(G) <->text621.htm#6777<->LowerCentralSeries(G) : GrpFin -&gt; [ GrpFin ]
5<->NilpotencyClass(G) <->text621.htm#6778<->NilpotencyClass(G) : GrpFin -&gt; RngIntElt
5<->NormalClosure :: H ^ G <->text621.htm#6779<->NormalClosure :: H ^ G : GrpFin -&gt; GrpFin
5<->H ^ G <->text621.htm#6779<->H ^ G : GrpFin -&gt; GrpFin
5<->NormalLattice(G) <->text621.htm#6780<->NormalLattice(G) : GrpFin -&gt; NormalLattice
5<->NormalSubgroups(G) <->text621.htm#6781<->NormalSubgroups(G) : GrpFin -&gt; [ Rec ]
5<->pCentralSeries(G, p) <->text621.htm#6782<->pCentralSeries(G, p) : GrpFin, RngIntElt -&gt; [ GrpFin ]
5<->Radical(G) <->text621.htm#6783<->Radical(G) : GrpFin -&gt; GrpFin
5<->SolvableResidual :: SolubleResidual(G) <->text621.htm#6784<->SolvableResidual :: SolubleResidual(G) : GrpFin -&gt; GrpFin
5<->SolubleResidual(G) <->text621.htm#6784<->SolubleResidual(G) : GrpFin -&gt; GrpFin
5<->SubnormalSeries(G, H) <->text621.htm#6785<->SubnormalSeries(G, H) : GrpFin, GrpFin -&gt; [ GrpFin ]
5<->UpperCentralSeries(G) <->text621.htm#6786<->UpperCentralSeries(G) : GrpFin -&gt; [ GrpFin ]
3<->subgroup-series :<->text621.htm#6768<->subgroup-series :: Characteristic Subgroups and  Subgroup Series (GROUPS)
3<->abstract-structure :<->text621.htm#6787<->abstract-structure :: The Abstract Structure of a Group (GROUPS)
5<->CompositionFactors(G) <->text621.htm#6788<->CompositionFactors(G) : GrpFin -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->PrimaryAbelianInvariants(G) <->text621.htm#6789<->PrimaryAbelianInvariants(G) : GrpFin -&gt; [ RngIntElt ]
5<->PrimaryAbelianBasis(G) <->text621.htm#6790<->PrimaryAbelianBasis(G) : GrpFin -&gt; [ GrpFinElt ], [ RngIntElt ]
3<->abstract-structure :<->text621.htm#6787<->abstract-structure :: The Abstract Structure of a Group (GROUPS)
3<->characteristic-subgroup-normal-structure :<->text621.htm<->characteristic-subgroup-normal-structure :: Characteristic Subgroups and  Normal Structure (GROUPS)
3<->conjugate :<->text622.htm<->conjugate :: Conjugacy Classes of Elements (GROUPS)
5<->Conjugates :: Class(H, x) <->text622.htm#6792<->Conjugates :: Class(H, x) : GrpFin, GrpFinElt -&gt; { GrpFinElt }
5<->Class(H, x) <->text622.htm#6792<->Class(H, x) : GrpFin, GrpFinElt -&gt; { GrpFinElt }
5<->ClassMap(G: parameters) <->text622.htm#6793<->ClassMap(G: parameters) : GrpFin -&gt; Map
5<->ConjugacyClasses(G: parameters) <->text622.htm#6794<->ConjugacyClasses(G: parameters) : GrpFin -&gt; [ &lt;RngIntElt, RngIntElt, GrpFinElt&gt; ]
5<->ClassesData(G: parameters) <->text622.htm#6795<->ClassesData(G: parameters) : GrpFin -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->ClassRepresentative(G, x) <->text622.htm#6796<->ClassRepresentative(G, x) : GrpFin, GrpFinElt -&gt; GrpFinElt
5<->IsConjugate(G, g, h) <->text622.htm#6797<->IsConjugate(G, g, h) : GrpFin, GrpFinElt, GrpFinElt -&gt; BoolElt, GrpFinElt
5<->IsConjugate(G, H, K) <->text622.htm#6798<->IsConjugate(G, H, K) : GrpFin, GrpFin, GrpFin -&gt; BoolElt, GrpFinElt
5<->Exponent(G) <->text622.htm#6799<->Exponent(G) : GrpFin -&gt; RngIntElt
5<->Nclasses :: NumberOfClasses(G) <->text622.htm#6800<->Nclasses :: NumberOfClasses(G) : GrpFin -&gt; RngIntElt
5<->NumberOfClasses(G) <->text622.htm#6800<->NumberOfClasses(G) : GrpFin -&gt; RngIntElt
5<->PowerMap(G) <->text622.htm#6801<->PowerMap(G) : GrpFin -&gt; Map
4<->Grp_Classes (Example H62E22)<->text622.htm#6802<->Grp_Classes (Example H62E22)
4<->Example-Classes :<->text622.htm#6802<->Example-Classes :: Grp_Classes (Example H62E22)
3<->conjugate :<->text622.htm<->conjugate :: Conjugacy Classes of Elements (GROUPS)
3<->subgroup :<->text623.htm<->subgroup :: Conjugacy Classes of  Subgroups (GROUPS)
3<->subgroup-classes :<->text623.htm#6804<->subgroup-classes :: Conjugacy Classes of Subgroups (GROUPS)
5<->Subgroups :: SubgroupClasses(G: parameters) <->text623.htm#6805<->Subgroups :: SubgroupClasses(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->Subgroups(G, N$\colon$ \parameters) : GrpFin, GrpFin -> [ rec ] :: SubgroupClasses(G: parameters) <->text623.htm#6805<->Subgroups(G, N$\colon$ \parameters) : GrpFin, GrpFin -> [ rec< Grp, RngIntElt, RngIntElt, GrpFP> ] :: SubgroupClasses(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SubgroupClasses(G: parameters) <->text623.htm#6805<->SubgroupClasses(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->ElementaryAbelianSubgroups(G: parameters) <->text623.htm#6806<->ElementaryAbelianSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->AbelianSubgroups(G: parameters) <->text623.htm#6807<->AbelianSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->CyclicSubgroups(G: parameters) <->text623.htm#6808<->CyclicSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->NilpotentSubgroups(G: parameters) <->text623.htm#6809<->NilpotentSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SolvableSubgroups :: SolubleSubgroups(G: parameters) <->text623.htm#6810<->SolvableSubgroups :: SolubleSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SolubleSubgroups(G: parameters) <->text623.htm#6810<->SolubleSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->NonsolvableSubgroups(G: parameters) <->text623.htm#6811<->NonsolvableSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->PerfectSubgroups(G: parameters) <->text623.htm#6812<->PerfectSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SimpleSubgroups(G: parameters) <->text623.htm#6813<->SimpleSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->RegularSubgroups(G: parameters) <->text623.htm#6814<->RegularSubgroups(G: parameters) : GrpFin -&gt; [ rec&lt; Grp, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SetVerbose("SubgroupLattice", i) <->text623.htm#6815<->SetVerbose("SubgroupLattice", i) : MonStgElt, RngIntElt -&gt;
5<->Conjugates :: Class(G, H) <->text623.htm#6816<->Conjugates :: Class(G, H) : GrpFin, GrpFin -&gt; { GrpFin }
5<->Class(G, H) <->text623.htm#6816<->Class(G, H) : GrpFin, GrpFin -&gt; { GrpFin }
4<->Grp_Subgroups (Example H62E23)<->text623.htm#6817<->Grp_Subgroups (Example H62E23)
4<->Example-Subgroups :<->text623.htm#6817<->Example-Subgroups :: Grp_Subgroups (Example H62E23)
3<->subgroup-classes :<->text623.htm#6804<->subgroup-classes :: Conjugacy Classes of Subgroups (GROUPS)
3<->subgroup-poset :<->text623.htm#6818<->subgroup-poset :: The Poset of Subgroup Classes (GROUPS)
3<->creation :<->text623.htm#6819<->creation :: Creating the Poset of Subgroup Classes (GROUPS)
5<->SubgroupLattice(G) <->text623.htm#6820<->SubgroupLattice(G) : GrpFin -&gt; SubGrpLat
4<->Grp_CreateSubgroupPoset (Example H62E24)<->text623.htm#6821<->Grp_CreateSubgroupPoset (Example H62E24)
4<->Example-CreateSubgroupPoset :<->text623.htm#6821<->Example-CreateSubgroupPoset :: Grp_CreateSubgroupPoset (Example H62E24)
3<->creation :<->text623.htm#6819<->creation :: Creating the Poset of Subgroup Classes (GROUPS)
3<->poset-operation :<->text623.htm#6822<->poset-operation :: Operations on Subgroup Class Posets (GROUPS)
5<-># L <->text623.htm#6823<-># L : SubGrpLat -&gt; RngIntElt
5<->L ! i<->text623.htm#6824<->L ! i: SubGrpLat, RngIntElt -&gt; SubGrpLatElt
5<->L ! H<->text623.htm#6825<->L ! H: SubGrpLat, GrpFin -&gt; SubGrpLatElt
5<->Bottom(L)<->text623.htm#6826<->Bottom(L): SubGrpLat -&gt; SubGrpLatElt
5<->Top(L)<->text623.htm#6827<->Top(L): SubGrpLat -&gt; SubGrpLatElt
5<->Random(L)<->text623.htm#6828<->Random(L): SubGrpLat -&gt; SubGrpLatElt
4<->Grp_LatticeOperations (Example H62E25)<->text623.htm#6829<->Grp_LatticeOperations (Example H62E25)
4<->Example-LatticeOperations :<->text623.htm#6829<->Example-LatticeOperations :: Grp_LatticeOperations (Example H62E25)
3<->poset-operation :<->text623.htm#6822<->poset-operation :: Operations on Subgroup Class Posets (GROUPS)
3<->poset-element :<->text623.htm#6830<->poset-element :: Operations on Poset Elements (GROUPS)
5<->IntegerRing() ! e <->text623.htm#6831<->IntegerRing() ! e : SubGrpLatElt -&gt; RngIntElt
5<->e eq f <->text623.htm#6832<->e eq f : SubGrpLatElt, SubGrpLatElt -&gt; SubGrpLatElt
5<->e ge f <->text623.htm#6833<->e ge f : SubGrpLatElt, SubGrpLatElt -&gt; BoolElt
5<->e ge f <->text623.htm#6834<->e ge f : SubGrpLatElt, SubGrpLatElt -&gt; BoolElt
5<->subset :: e le f <->text623.htm#6835<->subset :: e le f : SubGrpLatElt, SubGrpLatElt -&gt; BoolElt
5<->e le f <->text623.htm#6835<->e le f : SubGrpLatElt, SubGrpLatElt -&gt; BoolElt
5<->e lt f <->text623.htm#6836<->e lt f : SubGrpLatElt, SubGrpLatElt -&gt; BoolElt
3<->poset-element :<->text623.htm#6830<->poset-element :: Operations on Poset Elements (GROUPS)
3<->class-information :<->text623.htm#6837<->class-information :: Class Information from a Conjugacy Class Poset (GROUPS)
5<->Group(e) <->text623.htm#6838<->Group(e) : SubGrpLatElt -&gt; GrpFin
5<->Centralizer :: Centraliser(e, f) <->text623.htm#6839<->Centralizer :: Centraliser(e, f) : SubGrpLatElt, SubGrpLatElt -&gt; SubGrpLatElt
5<->Centraliser(e, f) <->text623.htm#6839<->Centraliser(e, f) : SubGrpLatElt, SubGrpLatElt -&gt; SubGrpLatElt
5<->Normalizer :: Normaliser(e, f) <->text623.htm#6840<->Normalizer :: Normaliser(e, f) : SubGrpLatElt, SubGrpLatElt -&gt; SubGrpLatElt
5<->Normaliser(e, f) <->text623.htm#6840<->Normaliser(e, f) : SubGrpLatElt, SubGrpLatElt -&gt; SubGrpLatElt
5<->Length(e) <->text623.htm#6841<->Length(e) : SubGrpLatElt -&gt; RngIntElt
5<->Order(e) <->text623.htm#6842<->Order(e) : SubGrpLatElt -&gt; RngIntElt
5<->MaximalSubgroups(e) <->text623.htm#6843<->MaximalSubgroups(e) : SubGrpLatElt -&gt; { SubGrpLatElt }
5<->MinimalOvergroups(e) <->text623.htm#6844<->MinimalOvergroups(e) : SubGrpLatElt -&gt; { SubGrpLatElt }
5<->NumberOfInclusions(e, f) <->text623.htm#6845<->NumberOfInclusions(e, f) : SubGrpLatElt, SubGrpLatElt -&gt; RngIntElt
3<->class-information :<->text623.htm#6837<->class-information :: Class Information from a Conjugacy Class Poset (GROUPS)
3<->subgroup-poset :<->text623.htm#6818<->subgroup-poset :: The Poset of Subgroup Classes (GROUPS)
3<->subgroup :<->text623.htm<->subgroup :: Conjugacy Classes of  Subgroups (GROUPS)
3<->cohomology :<->text624.htm<->cohomology :: Cohomology (GROUPS)
5<->pMultiplicator(G, p) <->text624.htm#6847<->pMultiplicator(G, p) : GrpFin, RngIntElt -&gt; [ RngIntElt ]
5<->pCover(G, F, p) <->text624.htm#6848<->pCover(G, F, p) : GrpPerm, GrpFP, RngIntElt -&gt; GrpFinFP
5<->CohomologicalDimension(G, M, i) <->text624.htm#6849<->CohomologicalDimension(G, M, i) : GrpFin, ModRng, RngIntElt -&gt; RngIntElt
5<->ExtensionProcess(G, M, F) <->text624.htm#6850<->ExtensionProcess(G, M, F) : GrpPerm, ModRng, GrpFP -&gt; GrpFPExtProc
5<->NextExtension :: Extension(P, Q) <->text624.htm#6851<->NextExtension :: Extension(P, Q) : Process -&gt; GrpFinFP
5<->Extension(P, Q) <->text624.htm#6851<->Extension(P, Q) : Process -&gt; GrpFinFP
5<->SplitExtension(G, M, F) <->text624.htm#6852<->SplitExtension(G, M, F) : GrpPerm, ModRng, GrpFP -&gt; GrpFP
3<->cohomology :<->text624.htm<->cohomology :: Cohomology (GROUPS)
3<->character-representation :<->text625.htm<->character-representation :: Characters and  Representations (GROUPS)
3<->character :<->text625.htm#6854<->character :: Character Theory (GROUPS)
5<->CharacterDegrees(G) <->text625.htm#6855<->CharacterDegrees(G) : GrpPC -&gt; [ Tup ]
5<->CharacterTable(G) <->text625.htm#6856<->CharacterTable(G) : GrpFin -&gt; TabChtr
5<->PermutationCharacter(G) <->text625.htm#6857<->PermutationCharacter(G) : GrpPerm -&gt; AlgChtrElt
5<->PermutationCharacter(G, H) <->text625.htm#6858<->PermutationCharacter(G, H) : GrpFin, GrpFin -&gt; AlgChtrElt
5<->BurnsideCokernel(G) <->text625.htm#6859<->BurnsideCokernel(G) : Grp -&gt; GrpAb, UserProgram, SeqEnum[AlgChtrElt]
4<->Grp_grp-burnsidecokernel (Example H62E26)<->text625.htm#6860<->Grp_grp-burnsidecokernel (Example H62E26)
4<->Example-grp-burnsidecokernel :<->text625.htm#6860<->Example-grp-burnsidecokernel :: Grp_grp-burnsidecokernel (Example H62E26)
3<->character :<->text625.htm#6854<->character :: Character Theory (GROUPS)
3<->modular-representation :<->text625.htm#6861<->modular-representation :: Representation Theory (GROUPS)
5<->GModule(G, S) <->text625.htm#6862<->GModule(G, S) : GrpFin, AlgMat -&gt; ModGrpFin
5<->GModule(G, A, B) <->text625.htm#6863<->GModule(G, A, B) : GrpFin, GrpFin, GrpFin -&gt; ModGrpFin, Map
5<->PermutationModule(G, H, R) <->text625.htm#6864<->PermutationModule(G, H, R) : GrpFin, GrpFin, Rng -&gt; ModGrpFin
5<->PermutationModule(G, R) <->text625.htm#6865<->PermutationModule(G, R) : GrpPerm, Rng -&gt; ModGrpFin
4<->Grp_Modules (Example H62E27)<->text625.htm#6866<->Grp_Modules (Example H62E27)
4<->Example-Modules :<->text625.htm#6866<->Example-Modules :: Grp_Modules (Example H62E27)
4<->Grp_Modules-2 (Example H62E28)<->text625.htm#6867<->Grp_Modules-2 (Example H62E28)
4<->Example-Modules-2 :<->text625.htm#6867<->Example-Modules-2 :: Grp_Modules-2 (Example H62E28)
3<->modular-representation :<->text625.htm#6861<->modular-representation :: Representation Theory (GROUPS)
3<->character-representation :<->text625.htm<->character-representation :: Characters and  Representations (GROUPS)
3<->databases :<->text626.htm<->databases :: Databases of Groups (GROUPS)
3<->group-overview :<->text612.htm<->group-overview :: GROUPS
3<->permutation :<->text629.htm<->permutation :: PERMUTATION GROUPS
3<->introduction :<->text630.htm<->introduction :: Introduction (PERMUTATION GROUPS)
3<->definition :<->text630.htm#6873<->definition :: Terminology (PERMUTATION GROUPS)
3<->GrpPerm :<->text630.htm#6874<->GrpPerm :: The Category of Permutation Groups (PERMUTATION GROUPS)
3<->category :<->text630.htm#6874<->category :: The Category of Permutation Groups (PERMUTATION GROUPS)
3<->creation :<->text630.htm#6875<->creation :: The Construction of a Permutation Group (PERMUTATION GROUPS)
3<->introduction :<->text630.htm<->introduction :: Introduction (PERMUTATION GROUPS)
3<->creation-symmetric :<->text631.htm<->creation-symmetric :: Creation of a Permutation Group (PERMUTATION GROUPS)
3<->magma :<->text631.htm#6877<->magma :: Construction of the Symmetric  Group (PERMUTATION GROUPS)
5<->SymmetricGroup :: Sym(n) <->text631.htm#6878<->SymmetricGroup :: Sym(n) : RngIntElt -&gt; GrpPerm
5<->Sym(n) <->text631.htm#6878<->Sym(n) : RngIntElt -&gt; GrpPerm
5<->SymmetricGroup :: Sym(X) <->text631.htm#6879<->SymmetricGroup :: Sym(X) : Set -&gt; GrpPerm
5<->Sym(X) <->text631.htm#6879<->Sym(X) : Set -&gt; GrpPerm
5<->StandardGroup(G) <->text631.htm#6880<->StandardGroup(G) : GrpPerm -&gt; GrpPerm, Map
4<->GrpPerm_Sym (Example H63E1)<->text631.htm#6881<->GrpPerm_Sym (Example H63E1)
4<->Example-Sym :<->text631.htm#6881<->Example-Sym :: GrpPerm_Sym (Example H63E1)
3<->magma :<->text631.htm#6877<->magma :: Construction of the Symmetric  Group (PERMUTATION GROUPS)
3<->element :<->text631.htm#6882<->element :: Construction of a Permutation (PERMUTATION GROUPS)
5<->elt< G | L > <->text631.htm#6883<->elt&lt; G | L &gt; : GrpPerm, List(Elt) -&gt; GrpPermElt
5<->G ! Q <->text631.htm#6884<->G ! Q : GrpPerm, [ Elt ] -&gt; GrpPermElt
5<->G ! (...)(...)...(...) <->text631.htm#6885<->G ! (...)(...)...(...) : GrpPerm, Cycles -&gt; GrpPermElt
5<->G ! \(...)(...)...(...) <->text631.htm#6886<->G ! \(...)(...)...(...) : GrpPerm, LiteralCycles -&gt; GrpPermElt
5<->G ! Q <->text631.htm#6887<->G ! Q : GrpPerm, SeqEnum[SetIndx] -&gt; GrpPermElt
5<->Eltseq :: ElementToSequence(g) <->text631.htm#6888<->Eltseq :: ElementToSequence(g) : GrpPermElt -&gt; [ Elt ]
5<->ElementToSequence(g) <->text631.htm#6888<->ElementToSequence(g) : GrpPermElt -&gt; [ Elt ]
5<->Identity(G) <->text631.htm#6889<->Identity(G) : Grp -&gt; GrpPermElt
5<->! :: Identity(G) <->text631.htm#6889<->! :: Identity(G) : Grp -&gt; GrpPermElt
5<->Identity(G) <->text631.htm#6889<->Identity(G) : Grp -&gt; GrpPermElt
4<->GrpPerm_Permutations (Example H63E2)<->text631.htm#6890<->GrpPerm_Permutations (Example H63E2)
4<->Example-Permutations :<->text631.htm#6890<->Example-Permutations :: GrpPerm_Permutations (Example H63E2)
3<->element :<->text631.htm#6882<->element :: Construction of a Permutation (PERMUTATION GROUPS)
3<->creation-general :<->text631.htm#6891<->creation-general :: Construction of a General Permutation Group (PERMUTATION GROUPS)
5<->PermutationGroup< X | L > <->text631.htm#6892<->PermutationGroup&lt; X | L &gt; : Set, List -&gt; GrpPerm
5<->PermutationGroup< n | L > <->text631.htm#6893<->PermutationGroup&lt; n | L &gt; : RngIntElt, List -&gt; GrpPerm
4<->GrpPerm_Hessian (Example H63E3)<->text631.htm#6894<->GrpPerm_Hessian (Example H63E3)
4<->Example-Hessian :<->text631.htm#6894<->Example-Hessian :: GrpPerm_Hessian (Example H63E3)
3<->creation-general :<->text631.htm#6891<->creation-general :: Construction of a General Permutation Group (PERMUTATION GROUPS)
3<->creation-symmetric :<->text631.htm<->creation-symmetric :: Creation of a Permutation Group (PERMUTATION GROUPS)
3<->operation :<->text632.htm<->operation :: Elementary Properties of a  Group (PERMUTATION GROUPS)
3<->access :<->text632.htm#6896<->access :: Accessing Group Information (PERMUTATION GROUPS)
5<->G . i <->text632.htm#6897<->G . i : GrpPerm, RngIntElt -&gt; GrpPermElt
5<->Degree(G) <->text632.htm#6898<->Degree(G) : GrpPermElt -&gt; RngIntElt
5<->Generators(G) <->text632.htm#6899<->Generators(G) : GrpPerm -&gt; { GrpPermElt }
5<->GeneratorsSequence(G) <->text632.htm#6900<->GeneratorsSequence(G) : GrpPerm -&gt; [ GrpPermElt ]
5<->Ngens :: NumberOfGenerators(G) <->text632.htm#6901<->Ngens :: NumberOfGenerators(G) : GrpPerm -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text632.htm#6901<->NumberOfGenerators(G) : GrpPerm -&gt; RngIntElt
5<->FewGenerators(G) <->text632.htm#6902<->FewGenerators(G) : GrpPerm -&gt; [GrpPermElt]
5<->Generic(G) <->text632.htm#6903<->Generic(G) : GrpPerm -&gt; GrpPerm
5<->Parent(g) <->text632.htm#6904<->Parent(g) : GrpPermElt -&gt; GrpPerm
5<->GSet(G) <->text632.htm#6905<->GSet(G) : GrpPerm -&gt; GSet
4<->GrpPerm_BasicAccess (Example H63E4)<->text632.htm#6906<->GrpPerm_BasicAccess (Example H63E4)
4<->Example-BasicAccess :<->text632.htm#6906<->Example-BasicAccess :: GrpPerm_BasicAccess (Example H63E4)
3<->access :<->text632.htm#6896<->access :: Accessing Group Information (PERMUTATION GROUPS)
3<->group-order :<->text632.htm#6907<->group-order :: Group Order (PERMUTATION GROUPS)
5<-># :: Order(G) <->text632.htm#6908<-># :: Order(G) : GrpPerm -&gt; RngIntElt
5<->Order(G) <->text632.htm#6908<->Order(G) : GrpPerm -&gt; RngIntElt
5<->FactoredOrder(G) <->text632.htm#6909<->FactoredOrder(G) : GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
3<->group-order :<->text632.htm#6907<->group-order :: Group Order (PERMUTATION GROUPS)
3<->abstract-group-properties :<->text632.htm#6910<->abstract-group-properties :: Abstract Properties of a Group (PERMUTATION GROUPS)
5<->IsAbelian(G) <->text632.htm#6911<->IsAbelian(G) : GrpPerm -&gt; BoolElt
5<->IsCyclic(G) <->text632.htm#6912<->IsCyclic(G) : GrpPerm -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text632.htm#6913<->IsElementaryAbelian(G) : GrpPerm -&gt; BoolElt
5<->IsSpecial(G) <->text632.htm#6914<->IsSpecial(G) : GrpPerm -&gt; BoolElt
5<->IsExtraSpecial(G) <->text632.htm#6915<->IsExtraSpecial(G) : GrpPerm -&gt; BoolElt
5<->IsNilpotent(G) <->text632.htm#6916<->IsNilpotent(G) : GrpPerm -&gt; BoolElt
5<->IsSolvable :: IsSoluble(G) <->text632.htm#6917<->IsSolvable :: IsSoluble(G) : GrpPerm -&gt; BoolElt
5<->IsSoluble(G) <->text632.htm#6917<->IsSoluble(G) : GrpPerm -&gt; BoolElt
5<->IsPerfect(G) <->text632.htm#6918<->IsPerfect(G) : GrpPerm -&gt; BoolElt
5<->IsSimple(G) <->text632.htm#6919<->IsSimple(G) : GrpPerm -&gt; BoolElt
5<->IsWreathProduct(G) <->text632.htm#6920<->IsWreathProduct(G) : GrpPerm -&gt; BoolElt, GrpPerm, GrpPerm, GrpPerm
4<->GrpPerm_BasicProperties (Example H63E5)<->text632.htm#6921<->GrpPerm_BasicProperties (Example H63E5)
4<->Example-BasicProperties :<->text632.htm#6921<->Example-BasicProperties :: GrpPerm_BasicProperties (Example H63E5)
3<->abstract-group-properties :<->text632.htm#6910<->abstract-group-properties :: Abstract Properties of a Group (PERMUTATION GROUPS)
3<->operation :<->text632.htm<->operation :: Elementary Properties of a  Group (PERMUTATION GROUPS)
3<->homomorphism :<->text633.htm<->homomorphism :: Homomorphisms (PERMUTATION GROUPS)
5<->hom<G -> H | L> <->text633.htm#6923<->hom&lt;G -&gt; H | L&gt; : GrpPerm, List -&gt; Map
5<->Domain(f) <->text633.htm#6924<->Domain(f) : Map -&gt; Grp
5<->Codomain(f) <->text633.htm#6925<->Codomain(f) : Map -&gt; Grp
5<->Image(f) <->text633.htm#6926<->Image(f) : Map -&gt; Grp
5<->Kernel(f) <->text633.htm#6927<->Kernel(f) : Map -&gt; Grp
5<->IsHomomorphism(G, H, Q) <->text633.htm#6928<->IsHomomorphism(G, H, Q) : GrpPerm, GrpPerm, SeqEnum[GrpPermElt] -&gt; Bool, Map
4<->GrpPerm_Homomorphism (Example H63E6)<->text633.htm#6929<->GrpPerm_Homomorphism (Example H63E6)
4<->Example-Homomorphism :<->text633.htm#6929<->Example-Homomorphism :: GrpPerm_Homomorphism (Example H63E6)
3<->homomorphism :<->text633.htm<->homomorphism :: Homomorphisms (PERMUTATION GROUPS)
3<->building-groups :<->text634.htm<->building-groups :: Building Permutation Groups (PERMUTATION GROUPS)
3<->standard :<->text634.htm#6931<->standard :: Some Standard Permutation Groups (PERMUTATION GROUPS)
5<->AbelianGroup(GrpPerm, Q) <->text634.htm#6932<->AbelianGroup(GrpPerm, Q) : Cat, [ RngIntElt ] -&gt; GrpPerm
5<->AlternatingGroup(n) <->text634.htm#6933<->AlternatingGroup(n) : RngIntElt -> GrpPerm
5<->AlternatingGroup(GrpPerm, n) <->text634.htm#6933<->AlternatingGroup(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->CyclicGroup(n) <->text634.htm#6934<->CyclicGroup(n) : RngIntElt -> GrpPerm
5<->CyclicGroup(GrpPerm, n) <->text634.htm#6934<->CyclicGroup(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->DihedralGroup(n) <->text634.htm#6935<->DihedralGroup(n) : RngIntElt -> GrpPerm
5<->DihedralGroup(GrpPerm, n) <->text634.htm#6935<->DihedralGroup(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->SymmetricGroup :: Sym(GrpPerm, n) <->text634.htm#6936<->SymmetricGroup :: Sym(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->Sym(n) <->text634.htm#6936<->Sym(n) : RngIntElt -> GrpPerm
5<->SymmetricGroup(n) : RngIntElt -> GrpPerm :: Sym(GrpPerm, n) <->text634.htm#6936<->SymmetricGroup(n) : RngIntElt -> GrpPerm :: Sym(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->Sym(GrpPerm, n) <->text634.htm#6936<->Sym(GrpPerm, n) : Cat, RngIntElt -&gt; GrpPerm
5<->ExtraSpecialGroup(p, n $\colon$ \parameters) <->text634.htm#6937<->ExtraSpecialGroup(p, n $\colon$ \parameters) : RngIntElt, RngIntElt -> GrpPerm
5<->ExtraSpecialGroup(GrpPerm, p, n : parameters) <->text634.htm#6937<->ExtraSpecialGroup(GrpPerm, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpPerm
5<->YoungSubgroup(L) <->text634.htm#6938<->YoungSubgroup(L) : [RngIntElt] -&gt; GrpPerm
4<->GrpPerm_StandardGroups (Example H63E7)<->text634.htm#6939<->GrpPerm_StandardGroups (Example H63E7)
4<->Example-StandardGroups :<->text634.htm#6939<->Example-StandardGroups :: GrpPerm_StandardGroups (Example H63E7)
3<->standard :<->text634.htm#6931<->standard :: Some Standard Permutation Groups (PERMUTATION GROUPS)
3<->products :<->text634.htm#6940<->products :: Direct Products and Wreath Products (PERMUTATION GROUPS)
5<->DirectProduct(G, H) <->text634.htm#6941<->DirectProduct(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm, [ Hom(Grp) ], [ Hom(Grp) ]
5<->DirectProduct(Q) <->text634.htm#6942<->DirectProduct(Q) : [ GrpPerm ] -&gt; GrpPerm, [ Hom(Grp) ], [ Hom(Grp) ]
5<->PrimitiveWreathProduct(G, H) <->text634.htm#6943<->PrimitiveWreathProduct(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->PrimitiveWreathProduct(Q) <->text634.htm#6944<->PrimitiveWreathProduct(Q) : [ GrpPerm ] -&gt; GrpPerm
5<->WreathProduct(G, H) <->text634.htm#6945<->WreathProduct(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm, SeqEnum[Map], Map, Map
5<->WreathProduct(Q) <->text634.htm#6946<->WreathProduct(Q) : [ GrpPerm ] -&gt; GrpPerm
5<->WreathProduct(B) <->text634.htm#6947<->WreathProduct(B) : GSet -&gt; GrpPerm, GrpPerm, GrpPerm
5<->WreathProduct(G, B) <->text634.htm#6948<->WreathProduct(G, B) : GrpPerm, GSet -&gt; GrpPerm, GrpPerm, GrpPerm
4<->GrpPerm_Products (Example H63E8)<->text634.htm#6949<->GrpPerm_Products (Example H63E8)
4<->Example-Products :<->text634.htm#6949<->Example-Products :: GrpPerm_Products (Example H63E8)
3<->products :<->text634.htm#6940<->products :: Direct Products and Wreath Products (PERMUTATION GROUPS)
3<->building-groups :<->text634.htm<->building-groups :: Building Permutation Groups (PERMUTATION GROUPS)
3<->permutations :<->text635.htm<->permutations :: Permutations (PERMUTATION GROUPS)
3<->coercion :<->text635.htm#6951<->coercion :: Coercion (PERMUTATION GROUPS)
5<->G ! g <->text635.htm#6952<->G ! g : GrpPerm, GrpPermElt -&gt; GrpPermElt
5<->G !! H <->text635.htm#6953<->G !! H : GrpPerm, GrpPerm -&gt; GrpPerm
3<->coercion :<->text635.htm#6951<->coercion :: Coercion (PERMUTATION GROUPS)
3<->arithmetic :<->text635.htm#6954<->arithmetic :: Arithmetic with Permutations (PERMUTATION GROUPS)
5<->g * h <->text635.htm#6955<->g * h : GrpPermElt, GrpPermElt -&gt; GrpPermElt
5<->g ^ n <->text635.htm#6956<->g ^ n : GrpPermElt, RngIntElt -&gt; GrpPermElt
5<->g / h <->text635.htm#6957<->g / h : GrpPermElt, GrpPermElt -&gt; GrpPermElt
5<->g ^ h <->text635.htm#6958<->g ^ h : GrpPermElt, GrpPermElt -&gt; GrpPermElt
5<->(,) :: (g, h) <->text635.htm#6959<->(,) :: (g, h) : GrpPermElt, GrpPermElt -&gt; GrpPermElt
5<->(,,) :: (g1, ..., gr) <->text635.htm#6960<->(,,) :: (g<sub>1</sub>, ..., g<sub>r</sub>) : GrpPermElt, ..., GrpPermElt -&gt; GrpPermElt
3<->arithmetic :<->text635.htm#6954<->arithmetic :: Arithmetic with Permutations (PERMUTATION GROUPS)
3<->coercion :<->text635.htm#6961<->coercion :: Properties of Permutations (PERMUTATION GROUPS)
5<->CycleStructure(g) <->text635.htm#6962<->CycleStructure(g) : GrpPermElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->Degree(g) <->text635.htm#6963<->Degree(g) : GrpPermElt -&gt; RngIntElt
5<->IsEven(g) <->text635.htm#6964<->IsEven(g) : GrpPermElt -&gt; BoolElt
5<->Sign(g) <->text635.htm#6965<->Sign(g) : GrpPermElt -&gt; RngIntElt
5<->Order(g) <->text635.htm#6966<->Order(g) : GrpPermElt -&gt; RngIntElt
3<->coercion :<->text635.htm#6961<->coercion :: Properties of Permutations (PERMUTATION GROUPS)
3<->coercion :<->text635.htm#6967<->coercion :: Predicates for Permutations (PERMUTATION GROUPS)
5<->g eq h <->text635.htm#6968<->g eq h : GrpPermElt, GrpPermElt -&gt; BoolElt
5<->g ne h <->text635.htm#6969<->g ne h : GrpPermElt, GrpPermElt -&gt; BoolElt
5<->IsIdentity :: IsId(g) <->text635.htm#6970<->IsIdentity :: IsId(g) : GrpPermElt -&gt; BoolElt
5<->IsId(g) <->text635.htm#6970<->IsId(g) : GrpPermElt -&gt; BoolElt
4<->GrpPerm_Arithmetic (Example H63E9)<->text635.htm#6971<->GrpPerm_Arithmetic (Example H63E9)
4<->Example-Arithmetic :<->text635.htm#6971<->Example-Arithmetic :: GrpPerm_Arithmetic (Example H63E9)
3<->coercion :<->text635.htm#6967<->coercion :: Predicates for Permutations (PERMUTATION GROUPS)
3<->set :<->text635.htm#6972<->set :: Set Operations (PERMUTATION GROUPS)
5<->G * H <->text635.htm#6973<->G * H : GrpPerm, GrpPerm -&gt; { GrpPermElt }
5<->ElementSet(G, H) <->text635.htm#6974<->ElementSet(G, H) : GrpPerm, GrpPerm -&gt; { GrpPermElt }
5<->NumberingMap(G) <->text635.htm#6975<->NumberingMap(G) : GrpPerm -&gt; Map
5<->RandomProcess(G) <->text635.htm#6976<->RandomProcess(G) : GrpPerm -&gt; Process
5<->Random(G: parameters) <->text635.htm#6977<->Random(G: parameters) : GrpPerm -&gt; GrpPermElt
5<->Random(P) <->text635.htm#6978<->Random(P) : Process -&gt; GrpPermElt
5<->Representative(G) <->text635.htm#6979<->Representative(G) : GrpPerm -&gt; GrpPermElt
4<->GrpPerm_SetOperations (Example H63E10)<->text635.htm#6980<->GrpPerm_SetOperations (Example H63E10)
4<->Example-SetOperations :<->text635.htm#6980<->Example-SetOperations :: GrpPerm_SetOperations (Example H63E10)
4<->GrpPerm_SetOperations-2 (Example H63E11)<->text635.htm#6981<->GrpPerm_SetOperations-2 (Example H63E11)
4<->Example-SetOperations-2 :<->text635.htm#6981<->Example-SetOperations-2 :: GrpPerm_SetOperations-2 (Example H63E11)
3<->set :<->text635.htm#6972<->set :: Set Operations (PERMUTATION GROUPS)
3<->permutations :<->text635.htm<->permutations :: Permutations (PERMUTATION GROUPS)
3<->conjugate :<->text636.htm<->conjugate :: Conjugacy (PERMUTATION GROUPS)
5<->Conjugates :: Class(H, x) <->text636.htm#6983<->Conjugates :: Class(H, x) : GrpPerm, GrpPermElt -&gt; { GrpPermElt }
5<->Class(H, x) <->text636.htm#6983<->Class(H, x) : GrpPerm, GrpPermElt -&gt; { GrpPermElt }
5<->ConjugacyClasses(G: parameters) <->text636.htm#6984<->ConjugacyClasses(G: parameters) : GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt, GrpPermElt&gt; ]
5<->ClassRepresentative(G, i) <->text636.htm#6985<->ClassRepresentative(G, i) : GrpPerm, RngIntElt -> GrpPermElt
5<->ClassRepresentative(G, x) <->text636.htm#6985<->ClassRepresentative(G, x) : GrpPerm, GrpPermElt -&gt; GrpPermElt
5<->ClassCentralizer :: ClassCentraliser(G, i) <->text636.htm#6986<->ClassCentralizer :: ClassCentraliser(G, i) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->ClassCentraliser(G, i) <->text636.htm#6986<->ClassCentraliser(G, i) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->ClassMap(G: parameters) <->text636.htm#6987<->ClassMap(G: parameters) : GrpPerm -&gt; Map
5<->IsConjugate(G, g, h: parameters) <->text636.htm#6988<->IsConjugate(G, g, h: parameters) : GrpPerm, GrpPermElt, GrpPermElt -&gt; BoolElt, GrpPermElt
5<->IsConjugate(G, H, K: parameters) <->text636.htm#6989<->IsConjugate(G, H, K: parameters) : GrpPerm, GrpPerm, GrpPerm -&gt; BoolElt, GrpPermElt
5<->Exponent(G) <->text636.htm#6990<->Exponent(G) : GrpPerm -&gt; RngIntElt
5<->Nclasses :: NumberOfClasses(G) <->text636.htm#6991<->Nclasses :: NumberOfClasses(G) : GrpPerm -&gt; RngIntElt
5<->NumberOfClasses(G) <->text636.htm#6991<->NumberOfClasses(G) : GrpPerm -&gt; RngIntElt
5<->PowerMap(G) <->text636.htm#6992<->PowerMap(G) : GrpPerm -&gt; Map
5<->AssertAttribute(G, "Classes", Q) <->text636.htm#6993<->AssertAttribute(G, "Classes", Q) : GrpPerm, MonStgElt, SeqEnum -&gt;
4<->GrpPerm_Classes (Example H63E12)<->text636.htm#6994<->GrpPerm_Classes (Example H63E12)
4<->Example-Classes :<->text636.htm#6994<->Example-Classes :: GrpPerm_Classes (Example H63E12)
4<->GrpPerm_Classes-2 (Example H63E13)<->text636.htm#6995<->GrpPerm_Classes-2 (Example H63E13)
4<->Example-Classes-2 :<->text636.htm#6995<->Example-Classes-2 :: GrpPerm_Classes-2 (Example H63E13)
3<->conjugate :<->text636.htm<->conjugate :: Conjugacy (PERMUTATION GROUPS)
3<->subgroup :<->text637.htm<->subgroup :: Subgroups (PERMUTATION GROUPS)
3<->construction-subgroup :<->text637.htm#6997<->construction-subgroup :: Construction of a Subgroup (PERMUTATION GROUPS)
5<->sub<G | L> <->text637.htm#6998<->sub&lt;G | L&gt; : GrpPerm, List -&gt; GrpPerm
5<->ncl<G | L> <->text637.htm#6999<->ncl&lt;G | L&gt; : GrpPerm, List -&gt; GrpPerm
4<->GrpPerm_Constructors (Example H63E14)<->text637.htm#7000<->GrpPerm_Constructors (Example H63E14)
4<->Example-Constructors :<->text637.htm#7000<->Example-Constructors :: GrpPerm_Constructors (Example H63E14)
4<->GrpPerm_Constructors-2 (Example H63E15)<->text637.htm#7001<->GrpPerm_Constructors-2 (Example H63E15)
4<->Example-Constructors-2 :<->text637.htm#7001<->Example-Constructors-2 :: GrpPerm_Constructors-2 (Example H63E15)
4<->GrpPerm_Constructors-3 (Example H63E16)<->text637.htm#7002<->GrpPerm_Constructors-3 (Example H63E16)
4<->Example-Constructors-3 :<->text637.htm#7002<->Example-Constructors-3 :: GrpPerm_Constructors-3 (Example H63E16)
3<->construction-subgroup :<->text637.htm#6997<->construction-subgroup :: Construction of a Subgroup (PERMUTATION GROUPS)
3<->Boolean :<->text637.htm#7003<->Boolean :: Membership and Equality (PERMUTATION GROUPS)
5<->g in G <->text637.htm#7004<->g in G : GrpPermElt, GrpPerm -&gt; BoolElt
5<->g notin G <->text637.htm#7005<->g notin G : GrpPermElt, GrpPerm -&gt; BoolElt
5<->S subset G <->text637.htm#7006<->S subset G : { GrpPermElt }, GrpPerm -&gt; BoolElt
5<->S notsubset G <->text637.htm#7007<->S notsubset G : { GrpPermElt }, GrpPerm -&gt; BoolElt
5<->H subset G <->text637.htm#7008<->H subset G : GrpPerm, GrpPerm -&gt; BoolElt
5<->H notsubset G <->text637.htm#7009<->H notsubset G : GrpPerm, GrpPerm -&gt; BoolElt
5<->H eq G <->text637.htm#7010<->H eq G : GrpPerm, GrpPerm -&gt; BoolElt
5<->H ne G <->text637.htm#7011<->H ne G : GrpPerm, GrpPerm -&gt; BoolElt
3<->Boolean :<->text637.htm#7003<->Boolean :: Membership and Equality (PERMUTATION GROUPS)
3<->properties-subgroup :<->text637.htm#7012<->properties-subgroup :: Elementary Properties of a Subgroup (PERMUTATION GROUPS)
5<->Index(G, H) <->text637.htm#7013<->Index(G, H) : GrpPerm, GrpPerm -&gt; RngIntElt
5<->FactoredIndex(G, H) <->text637.htm#7014<->FactoredIndex(G, H) : GrpPerm, GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->IsCentral(G, H) <->text637.htm#7015<->IsCentral(G, H) : GrpPerm, GrpPerm -&gt; BoolElt
5<->IsNormal(G, H) <->text637.htm#7016<->IsNormal(G, H) : GrpPerm, GrpPerm -&gt; BoolElt
5<->IsSelfNormalising :: IsSelfNormalizing(G, H) <->text637.htm#7017<->IsSelfNormalising :: IsSelfNormalizing(G, H) : GrpPerm, GrpPerm -&gt; BoolElt
5<->IsSelfNormalizing(G, H) <->text637.htm#7017<->IsSelfNormalizing(G, H) : GrpPerm, GrpPerm -&gt; BoolElt
5<->IsSubnormal(G, H) <->text637.htm#7018<->IsSubnormal(G, H) : GrpPerm, GrpPerm -&gt; BoolElt
3<->properties-subgroup :<->text637.htm#7012<->properties-subgroup :: Elementary Properties of a Subgroup (PERMUTATION GROUPS)
3<->construction-standard-subgroup :<->text637.htm#7019<->construction-standard-subgroup :: Standard Subgroups (PERMUTATION GROUPS)
5<->Conjugate :: H ^ g <->text637.htm#7020<->Conjugate :: H ^ g : GrpPerm, GrpPermElt -&gt; GrpPerm
5<->H ^ g <->text637.htm#7020<->H ^ g : GrpPerm, GrpPermElt -&gt; GrpPerm
5<->H meet K <->text637.htm#7021<->H meet K : GrpPerm, GrpPerm -&gt; GrpPerm
5<->IntersectionWithNormalSubgroup(G, N: parameters) <->text637.htm#7022<->IntersectionWithNormalSubgroup(G, N: parameters) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->CommutatorSubgroup(H, K) <->text637.htm#7023<->CommutatorSubgroup(H, K) : GrpPerm, GrpPerm -> GrpPerm
5<->CommutatorSubgroup(G, H, K) <->text637.htm#7023<->CommutatorSubgroup(G, H, K) : GrpPerm, GrpPerm, GrpPerm -&gt; GrpPerm
5<->Centraliser :: Centralizer(G, g: parameters) <->text637.htm#7024<->Centraliser :: Centralizer(G, g: parameters) : GrpPerm, GrpPermElt -&gt; GrpPerm
5<->Centralizer(G, g: parameters) <->text637.htm#7024<->Centralizer(G, g: parameters) : GrpPerm, GrpPermElt -&gt; GrpPerm
5<->Centraliser :: Centralizer(G, H) <->text637.htm#7025<->Centraliser :: Centralizer(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->Centralizer(G, H) <->text637.htm#7025<->Centralizer(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->CentralizerOfNormalSubgroup(G, H) <->text637.htm#7026<->CentralizerOfNormalSubgroup(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->SectionCentralizer :: SectionCentraliser(G, H, K) <->text637.htm#7027<->SectionCentralizer :: SectionCentraliser(G, H, K) : GrpPerm, GrpPerm, GrpPerm -&gt; GrpPerm
5<->SectionCentraliser(G, H, K) <->text637.htm#7027<->SectionCentraliser(G, H, K) : GrpPerm, GrpPerm, GrpPerm -&gt; GrpPerm
5<->Core(G, H) <->text637.htm#7028<->Core(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->NormalClosure :: H ^ G <->text637.htm#7029<->NormalClosure :: H ^ G : GrpPerm, GrpPerm -&gt; GrpPerm
5<->H ^ G <->text637.htm#7029<->H ^ G : GrpPerm, GrpPerm -&gt; GrpPerm
5<->Normaliser :: Normalizer(G, H: parameters) <->text637.htm#7030<->Normaliser :: Normalizer(G, H: parameters) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->Normalizer(G, H: parameters) <->text637.htm#7030<->Normalizer(G, H: parameters) : GrpPerm, GrpPerm -&gt; GrpPerm
5<->SymmetricNormaliser :: SymmetricNormalizer(G) <->text637.htm#7031<->SymmetricNormaliser :: SymmetricNormalizer(G) : GrpPerm -&gt; GrpPerm
5<->SymmetricNormalizer(G) <->text637.htm#7031<->SymmetricNormalizer(G) : GrpPerm -&gt; GrpPerm
5<->SylowSubgroup(G, p) <->text637.htm#7032<->SylowSubgroup(G, p) : GrpPerm, RngIntElt -&gt; GrpPerm
4<->GrpPerm_SubgroupConstructions (Example H63E17)<->text637.htm#7033<->GrpPerm_SubgroupConstructions (Example H63E17)
4<->Example-SubgroupConstructions :<->text637.htm#7033<->Example-SubgroupConstructions :: GrpPerm_SubgroupConstructions (Example H63E17)
3<->construction-standard-subgroup :<->text637.htm#7019<->construction-standard-subgroup :: Standard Subgroups (PERMUTATION GROUPS)
3<->maximals :<->text637.htm#7034<->maximals :: Maximal Subgroups (PERMUTATION GROUPS)
5<->IsMaximal(G, H: parameters) <->text637.htm#7035<->IsMaximal(G, H: parameters) : GrpPerm, GrpPerm -&gt; BoolElt
5<->IsProbablyMaximal(G, H: parameters) <->text637.htm#7036<->IsProbablyMaximal(G, H: parameters) : GrpPerm, GrpPerm -&gt; BoolElt
5<->MaximalSubgroups(G: parameters) <->text637.htm#7037<->MaximalSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
4<->GrpPerm_Maximals (Example H63E18)<->text637.htm#7038<->GrpPerm_Maximals (Example H63E18)
4<->Example-Maximals :<->text637.htm#7038<->Example-Maximals :: GrpPerm_Maximals (Example H63E18)
5<->MaximalSubgroups(G,N: parameters) <->text637.htm#7039<->MaximalSubgroups(G,N: parameters) : GrpPerm, GrpPerm -&gt;                           [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
3<->maximals :<->text637.htm#7034<->maximals :: Maximal Subgroups (PERMUTATION GROUPS)
3<->maximals :<->text637.htm#7040<->maximals :: Conjugacy Classes of Subgroups (PERMUTATION GROUPS)
5<->Subgroups :: SubgroupClasses(G: parameters) <->text637.htm#7041<->Subgroups :: SubgroupClasses(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SubgroupClasses(G: parameters) <->text637.htm#7041<->SubgroupClasses(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SubgroupsLift(G, A, B, Q: parameters) <->text637.htm#7042<->SubgroupsLift(G, A, B, Q: parameters) : GrpPerm, GrpPerm, GrpPerm, SeqEnum -&gt; SeqEnum
5<->LowIndexSubgroups(G, t$\colon$ \parameters) <->text637.htm#7043<->LowIndexSubgroups(G, t$\colon$ \parameters) : GrpPerm, Tup -> SeqEnum
5<->LowIndexSubgroups(G, n: parameters) <->text637.htm#7043<->LowIndexSubgroups(G, n: parameters) : GrpPerm, RngIntElt -&gt; SeqEnum
5<->LowIndexSubgroups(G, N, t$\colon$ \parameters) <->text637.htm#7044<->LowIndexSubgroups(G, N, t$\colon$ \parameters) : GrpPerm, Tup -> SeqEnum
5<->LowIndexSubgroups(G, N, n: parameters) <->text637.htm#7044<->LowIndexSubgroups(G, N, n: parameters) : GrpPerm, RngIntElt -&gt; SeqEnum
4<->GrpPerm_Subgroups (Example H63E19)<->text637.htm#7045<->GrpPerm_Subgroups (Example H63E19)
4<->Example-Subgroups :<->text637.htm#7045<->Example-Subgroups :: GrpPerm_Subgroups (Example H63E19)
4<->GrpPerm_Subgroups-2 (Example H63E20)<->text637.htm#7046<->GrpPerm_Subgroups-2 (Example H63E20)
4<->Example-Subgroups-2 :<->text637.htm#7046<->Example-Subgroups-2 :: GrpPerm_Subgroups-2 (Example H63E20)
5<->SubgroupLattice(G) <->text637.htm#7047<->SubgroupLattice(G) : GrpPerm -&gt; SubGrpLat
5<->BurnsideMatrix(G) <->text637.htm#7048<->BurnsideMatrix(G) : GrpPerm -&gt; AlgMatElt
5<->DisplayBurnsideMatrix(G) <->text637.htm#7049<->DisplayBurnsideMatrix(G) : GrpPerm -&gt;
5<->TableOfMarks(G) <->text637.htm#7050<->TableOfMarks(G) : GrpPerm -&gt; AlgMatElt
3<->maximals :<->text637.htm#7040<->maximals :: Conjugacy Classes of Subgroups (PERMUTATION GROUPS)
3<->subgroups-conditional :<->text637.htm#7051<->subgroups-conditional :: Classes of Subgroups Satisfying a  Condition (PERMUTATION GROUPS)
5<->NormalSubgroups(G: parameters) <->text637.htm#7052<->NormalSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->ElementaryAbelianSubgroups(G: parameters) <->text637.htm#7053<->ElementaryAbelianSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->CyclicSubgroups(G: parameters) <->text637.htm#7054<->CyclicSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->AbelianSubgroups(G: parameters) <->text637.htm#7055<->AbelianSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->NilpotentSubgroups(G: parameters) <->text637.htm#7056<->NilpotentSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SolvableSubgroups(G: parameters) <->text637.htm#7057<->SolvableSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->PerfectSubgroups(G: parameters) <->text637.htm#7058<->PerfectSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->NonsolvableSubgroups(G: parameters) <->text637.htm#7059<->NonsolvableSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SimpleSubgroups(G: parameters) <->text637.htm#7060<->SimpleSubgroups(G: parameters) : GrpPerm -&gt; [ rec&lt; GrpPerm, RngIntElt, RngIntElt, GrpFP&gt; ]
3<->subgroups-conditional :<->text637.htm#7051<->subgroups-conditional :: Classes of Subgroups Satisfying a  Condition (PERMUTATION GROUPS)
3<->subgroup :<->text637.htm<->subgroup :: Subgroups (PERMUTATION GROUPS)
3<->quotient :<->text638.htm<->quotient :: Quotient Groups (PERMUTATION GROUPS)
3<->construction-quotient :<->text638.htm#7062<->construction-quotient :: Construction of Quotient Groups (PERMUTATION GROUPS)
5<->quo<G | L> <->text638.htm#7063<->quo&lt;G | L&gt; : GrpPerm, List -&gt; GrpPerm, Map
5<->G / N <->text638.htm#7064<->G / N : GrpPerm, GrpPerm -&gt; GrpPerm
4<->GrpPerm_Quotient (Example H63E21)<->text638.htm#7065<->GrpPerm_Quotient (Example H63E21)
4<->Example-Quotient :<->text638.htm#7065<->Example-Quotient :: GrpPerm_Quotient (Example H63E21)
3<->construction-quotient :<->text638.htm#7062<->construction-quotient :: Construction of Quotient Groups (PERMUTATION GROUPS)
3<->construction-special-quotient :<->text638.htm#7066<->construction-special-quotient :: Abelian, Nilpotent and Soluble Quotients (PERMUTATION GROUPS)
5<->AbelianQuotient(G) <->text638.htm#7067<->AbelianQuotient(G) : GrpPerm -&gt; GrpAb, Map
5<->ElementaryAbelianQuotient(G, p) <->text638.htm#7068<->ElementaryAbelianQuotient(G, p) : GrpPerm, RngIntElt -&gt; GrpAb, Map
5<->pQuotient(G, p, c) <->text638.htm#7069<->pQuotient(G, p, c) : GrpPerm, RngIntElt, RngIntElt -&gt; GrpPC, Map, SeqEnum, BoolElt
5<->NilpotentQuotient(G, c) <->text638.htm#7070<->NilpotentQuotient(G, c) : GrpPerm, RngIntElt -&gt; GrpGPC, Map
5<->SolubleQuotient :: SolvableQuotient(G)<->text638.htm#7071<->SolubleQuotient :: SolvableQuotient(G): GrpPerm -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(G)<->text638.htm#7071<->SolvableQuotient(G): GrpPerm -&gt; GrpPC, Map, SeqEnum, MonStgElt
4<->GrpPerm_SpecialQuotient (Example H63E22)<->text638.htm#7072<->GrpPerm_SpecialQuotient (Example H63E22)
4<->Example-SpecialQuotient :<->text638.htm#7072<->Example-SpecialQuotient :: GrpPerm_SpecialQuotient (Example H63E22)
3<->construction-special-quotient :<->text638.htm#7066<->construction-special-quotient :: Abelian, Nilpotent and Soluble Quotients (PERMUTATION GROUPS)
3<->quotient :<->text638.htm<->quotient :: Quotient Groups (PERMUTATION GROUPS)
3<->actions :<->text639.htm<->actions :: Permutation Group Actions (PERMUTATION GROUPS)
3<->G-sets :<->text639.htm#7074<->G-sets :: G-Sets (PERMUTATION GROUPS)
3<->creation :<->text639.htm#7075<->creation :: Creating a G-Set (PERMUTATION GROUPS)
5<->GSetFromIndexed(G, Y) <->text639.htm#7076<->GSetFromIndexed(G, Y) : GrpPerm, SetIndx -&gt; GSet
5<->GSet(G, Y) <->text639.htm#7077<->GSet(G, Y) : GrpPerm, Set -> GSet
5<->GSet(G, X, Y) <->text639.htm#7077<->GSet(G, X, Y) : GrpPerm, GSet, SetEnum -&gt; GSet
5<->GSet(G) <->text639.htm#7078<->GSet(G) : GrpPerm -&gt; GSet
5<->GSet(G, Y, f) <->text639.htm#7079<->GSet(G, Y, f) : GrpPerm, Set, Map -&gt; GSet
5<->Action(Y) <->text639.htm#7080<->Action(Y) : GSet -&gt; Map
5<->Group(Y) <->text639.htm#7081<->Group(Y) : GSet -&gt; GrpPerm
5<->Labelling(G) <->text639.htm#7082<->Labelling(G) : GrpPerm -&gt; SetIndx
5<->Degree(g) <->text639.htm#7083<->Degree(g) : GrpPermElt -> RngIntElt
5<->Degree(g, Y) <->text639.htm#7083<->Degree(g, Y) : GrpPermElt, GSet -&gt; RngIntElt
5<->Degree(G) <->text639.htm#7084<->Degree(G) : GrpPerm -> RngIntElt
5<->Degree(G, Y) <->text639.htm#7084<->Degree(G, Y) : GrpPerm, GSet -&gt; RngIntElt
5<->Support(g) <->text639.htm#7085<->Support(g) : GrpPermElt -> \brace\ Elt \rbrace
5<->Support(g, Y) <->text639.htm#7085<->Support(g, Y) : GrpPermElt, GSet -&gt; { Elt }
5<->Support(G) <->text639.htm#7086<->Support(G) : GrpPerm -> \brace\ Elt \rbrace
5<->Support(G, Y) <->text639.htm#7086<->Support(G, Y) : GrpPerm, GSet -&gt; { Elt }
4<->GrpPerm_GSets (Example H63E23)<->text639.htm#7087<->GrpPerm_GSets (Example H63E23)
4<->Example-GSets :<->text639.htm#7087<->Example-GSets :: GrpPerm_GSets (Example H63E23)
3<->creation :<->text639.htm#7075<->creation :: Creating a G-Set (PERMUTATION GROUPS)
3<->image-orbit-stabilizer :<->text639.htm#7088<->image-orbit-stabilizer :: Images, Orbits and Stabilizers (PERMUTATION GROUPS)
5<->x ^ g <->text639.htm#7089<->x ^ g : Elt, GrpPermElt -&gt; Elt
5<->Image(g, y) <->text639.htm#7090<->Image(g, y) : GrpPermElt, Elt -> Elt
5<->Image(g, Y, y) <->text639.htm#7090<->Image(g, Y, y) : GrpPermElt, GSet, Elt -&gt; Elt
5<->Fix(g)<->text639.htm#7091<->Fix(g): GrpPermElt -> $\brace$ Elt $\rbrace$
5<->Fix(g, Y)<->text639.htm#7091<->Fix(g, Y): GrpPermElt, GSet -&gt; { Elt }
5<->Fix(G) <->text639.htm#7092<->Fix(G) : GrpPerm -> $\brace$ Elt $\rbrace$
5<->Fix(G, Y) <->text639.htm#7092<->Fix(G, Y) : GrpPerm, GSet -&gt; { Elt }
5<->x ^ G <->text639.htm#7093<->x ^ G : Elt, GrpPerm -&gt; GSet
5<->Cycle(e, x) <->text639.htm#7094<->Cycle(e, x) : GrpPermElt, Elt -&gt; SetIndx
5<->CycleDecomposition(e) <->text639.htm#7095<->CycleDecomposition(e) : GrpPermElt -&gt; SeqEnum[SetIndx]
5<->Orbit(G, y) <->text639.htm#7096<->Orbit(G, y) : GrpPerm, Elt -> GSet
5<->Orbit(G, Y, y) <->text639.htm#7096<->Orbit(G, Y, y) : GrpPerm, GSet, Elt -&gt; GSet
5<->Orbits(G) <->text639.htm#7097<->Orbits(G) : GrpPerm -> [ GSet ]
5<->Orbits(G, Y) <->text639.htm#7097<->Orbits(G, Y) : GrpPerm, GSet -&gt; [ GSet ]
5<->OrbitRepresentatives(G) <->text639.htm#7098<->OrbitRepresentatives(G) : GrpPerm -&gt; SeqEnum
5<->OrbitClosure(G, S) <->text639.htm#7099<->OrbitClosure(G, S) : GrpPerm, \brace\ Elt \rbrace -> GSet
5<->OrbitClosure(G, Y, S) <->text639.htm#7099<->OrbitClosure(G, Y, S) : GrpPerm, GSet, { Elt } -&gt; GSet
5<->IsConjugate(G, y, z) <->text639.htm#7100<->IsConjugate(G, y, z) : GrpPerm, Elt, Elt -> BoolElt, GrpPermElt
5<->IsConjugate(G, Y, y, z) <->text639.htm#7100<->IsConjugate(G, Y, y, z) : GrpPerm, GSet, Elt, Elt -&gt; BoolElt, GrpPermElt
5<->Stabiliser :: Stabilizer(G, Y, y) <->text639.htm#7101<->Stabiliser :: Stabilizer(G, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->Stabilizer(G, y) <->text639.htm#7101<->Stabilizer(G, y) : GrpPerm, Elt -> GrpPerm
5<->Stabiliser(G, y) : GrpPerm, Elt -> GrpPerm :: Stabilizer(G, Y, y) <->text639.htm#7101<->Stabiliser(G, y) : GrpPerm, Elt -> GrpPerm :: Stabilizer(G, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->Stabilizer(G, Y, y) <->text639.htm#7101<->Stabilizer(G, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->IsPrimitive(G) <->text639.htm#7102<->IsPrimitive(G) : GrpPerm -> BoolElt
5<->IsPrimitive(G, Y) <->text639.htm#7102<->IsPrimitive(G, Y) : GrpPerm, GSet -&gt; BoolElt
5<->IsTransitive(G) <->text639.htm#7103<->IsTransitive(G) : GrpPerm -> BoolElt
5<->IsTransitive(G, Y) <->text639.htm#7103<->IsTransitive(G, Y) : GrpPerm, GSet -&gt; BoolElt
5<->IsTransitive(G, k) <->text639.htm#7104<->IsTransitive(G, k) : GrpPerm, RngIntElt -> BoolElt
5<->IsTransitive(G, Y, k) <->text639.htm#7104<->IsTransitive(G, Y, k) : GrpPerm, GSet, RngIntElt -&gt; BoolElt
5<->IsSharplyTransitive(G, k) <->text639.htm#7105<->IsSharplyTransitive(G, k) : GrpPerm, RngIntElt -> BoolElt
5<->IsSharplyTransitive(G, Y, k) <->text639.htm#7105<->IsSharplyTransitive(G, Y, k) : GrpPerm, GSet, RngIntElt -&gt; BoolElt
5<->Transitivity(G) <->text639.htm#7106<->Transitivity(G) : GrpPerm -> RngIntElt
5<->Transitivity(G, Y) <->text639.htm#7106<->Transitivity(G, Y) : GrpPerm, GSet -&gt; RngIntElt
5<->IsRegular(G) <->text639.htm#7107<->IsRegular(G) : GrpPerm -> BoolElt
5<->IsRegular(G, Y) <->text639.htm#7107<->IsRegular(G, Y) : GrpPerm, GSet -&gt; BoolElt
5<->IsSemiregular(G) <->text639.htm#7108<->IsSemiregular(G) : GrpPerm -> BoolElt
5<->IsSemiregular(G, Y) <->text639.htm#7108<->IsSemiregular(G, Y) : GrpPerm, GSet -&gt; BoolElt
5<->IsSemiregular(G, S) <->text639.htm#7109<->IsSemiregular(G, S) : GrpPerm, SetEnum -> BoolElt
5<->IsSemiregular(G, Y, S) <->text639.htm#7109<->IsSemiregular(G, Y, S) : GrpPerm, GSet, SetEnum -&gt; BoolElt
5<->IsFrobenius(G) <->text639.htm#7110<->IsFrobenius(G) : GrpPerm -&gt; BoolElt
4<->GrpPerm_Stabilizers (Example H63E24)<->text639.htm#7111<->GrpPerm_Stabilizers (Example H63E24)
4<->Example-Stabilizers :<->text639.htm#7111<->Example-Stabilizers :: GrpPerm_Stabilizers (Example H63E24)
3<->image-orbit-stabilizer :<->text639.htm#7088<->image-orbit-stabilizer :: Images, Orbits and Stabilizers (PERMUTATION GROUPS)
3<->induced-homomorphism :<->text639.htm#7112<->induced-homomorphism :: Action on a G-Space (PERMUTATION GROUPS)
5<->Action(G, Y) <->text639.htm#7113<->Action(G, Y) : GrpPerm, GSet -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->ActionImage(G, Y) <->text639.htm#7114<->ActionImage(G, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->ActionKernel(G, Y) <->text639.htm#7115<->ActionKernel(G, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->IsFaithful(G, Y) <->text639.htm#7116<->IsFaithful(G, Y) : GrpPerm, GSet -&gt; BoolElt
4<->GrpPerm_Actions (Example H63E25)<->text639.htm#7117<->GrpPerm_Actions (Example H63E25)
4<->Example-Actions :<->text639.htm#7117<->Example-Actions :: GrpPerm_Actions (Example H63E25)
3<->induced-homomorphism :<->text639.htm#7112<->induced-homomorphism :: Action on a G-Space (PERMUTATION GROUPS)
3<->orbit-action :<->text639.htm#7118<->orbit-action :: Action on Orbits (PERMUTATION GROUPS)
5<->OrbitAction(G, T) <->text639.htm#7119<->OrbitAction(G, T) : GrpPerm, GSet -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->OrbitImage(G, T) <->text639.htm#7120<->OrbitImage(G, T) : GrpPerm, GSet -&gt; GrpPerm
5<->OrbitKernel(G, T) <->text639.htm#7121<->OrbitKernel(G, T) : GrpPerm, GSet -&gt; GrpPerm
5<->IsOrbit(G, S) <->text639.htm#7122<->IsOrbit(G, S) : GrpPerm, { Elt } -&gt; BoolElt
4<->GrpPerm_OrbitActions (Example H63E26)<->text639.htm#7123<->GrpPerm_OrbitActions (Example H63E26)
4<->Example-OrbitActions :<->text639.htm#7123<->Example-OrbitActions :: GrpPerm_OrbitActions (Example H63E26)
3<->orbit-action :<->text639.htm#7118<->orbit-action :: Action on Orbits (PERMUTATION GROUPS)
3<->partition-action :<->text639.htm#7124<->partition-action :: Action on a G-invariant Partition (PERMUTATION GROUPS)
5<->IsBlock(G, S) <->text639.htm#7125<->IsBlock(G, S) : GrpPerm, { Elt } -&gt; BoolElt
5<->IsPrimitive(G) <->text639.htm#7126<->IsPrimitive(G) : GrpPerm -&gt; BoolElt
5<->MaximalPartition(G) <->text639.htm#7127<->MaximalPartition(G) : GrpPerm -&gt; GSet
5<->MinimalPartition(G: parameters) <->text639.htm#7128<->MinimalPartition(G: parameters) : GrpPerm -&gt; GSet
5<->MinimalPartitions(G: parameters) <->text639.htm#7129<->MinimalPartitions(G: parameters) : GrpPerm -&gt; [ GSet ]
5<->MinimalBlocks(G: parameters) <->text639.htm#7130<->MinimalBlocks(G: parameters) : GrpPerm -&gt; [ SetEnum ]
5<->AllPartitions(G) <->text639.htm#7131<->AllPartitions(G) : GrpPerm -&gt; SetEnum
5<->BlocksAction(G, P) <->text639.htm#7132<->BlocksAction(G, P) : GrpPerm, GSet -> Hom(GrpPerm), GrpPerm, GrpPerm
5<->BlocksAction(G, P) <->text639.htm#7132<->BlocksAction(G, P) : GrpPerm, SeqEnum -> Hom(GrpPerm), GrpPerm, GrpPerm
5<->BlocksAction(G, P) <->text639.htm#7132<->BlocksAction(G, P) : GrpPerm, SetIndx -> Hom(GrpPerm), GrpPerm, GrpPerm
5<->BlocksAction(G, P) <->text639.htm#7132<->BlocksAction(G, P) : GrpPerm, SetEnum -> Hom(GrpPerm), GrpPerm, GrpPerm
5<->BlocksAction(G, P) <->text639.htm#7132<->BlocksAction(G, P) : GrpPerm, Any -&gt; Hom(GrpPerm), GrpPerm, GrpPerm
5<->BlocksImage(G, P) <->text639.htm#7133<->BlocksImage(G, P) : GrpPerm, GSet -> GrpPerm
5<->BlocksImage(G, P) <->text639.htm#7133<->BlocksImage(G, P) : GrpPerm, SetIndx -> GrpPerm
5<->BlocksImage(G, P) <->text639.htm#7133<->BlocksImage(G, P) : GrpPerm, SeqEnum -> GrpPerm
5<->BlocksImage(G, P) <->text639.htm#7133<->BlocksImage(G, P) : GrpPerm, SetEnum -> GrpPerm
5<->BlocksImage(G, P) <->text639.htm#7133<->BlocksImage(G, P) : GrpPerm, Any -&gt; GrpPerm
5<->BlocksKernel(G, P) <->text639.htm#7134<->BlocksKernel(G, P) : GrpPerm, GSet -> GrpPerm
5<->BlocksKernel(G, P) <->text639.htm#7134<->BlocksKernel(G, P) : GrpPerm, SetIndx -> GrpPerm
5<->BlocksKernel(G, P) <->text639.htm#7134<->BlocksKernel(G, P) : GrpPerm, SeqEnum -> GrpPerm
5<->BlocksKernel(G, P) <->text639.htm#7134<->BlocksKernel(G, P) : GrpPerm, SetEnum -> GrpPerm
5<->BlocksKernel(G, P) <->text639.htm#7134<->BlocksKernel(G, P) : GrpPerm, Any -&gt; GrpPerm
4<->GrpPerm_BlocksActions (Example H63E27)<->text639.htm#7135<->GrpPerm_BlocksActions (Example H63E27)
4<->Example-BlocksActions :<->text639.htm#7135<->Example-BlocksActions :: GrpPerm_BlocksActions (Example H63E27)
4<->GrpPerm_BlocksActions-2 (Example H63E28)<->text639.htm#7136<->GrpPerm_BlocksActions-2 (Example H63E28)
4<->Example-BlocksActions-2 :<->text639.htm#7136<->Example-BlocksActions-2 :: GrpPerm_BlocksActions-2 (Example H63E28)
3<->partition-action :<->text639.htm#7124<->partition-action :: Action on a G-invariant Partition (PERMUTATION GROUPS)
3<->coset-action :<->text639.htm#7137<->coset-action :: Action on a Coset Space (PERMUTATION GROUPS)
5<->RegularRepresentation :: CosetAction(G, H: parameters) <->text639.htm#7138<->RegularRepresentation :: CosetAction(G, H: parameters) : Grp, Grp -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->CosetAction(G, H: parameters) <->text639.htm#7138<->CosetAction(G, H: parameters) : Grp, Grp -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->CosetImage(G, H: parameters) <->text639.htm#7139<->CosetImage(G, H: parameters) : Grp, Grp -&gt; GrpPerm
5<->CosetKernel(G, H) <->text639.htm#7140<->CosetKernel(G, H) : Grp, Grp -&gt; Grp
3<->coset-action :<->text639.htm#7137<->coset-action :: Action on a Coset Space (PERMUTATION GROUPS)
3<->action-reductions :<->text639.htm#7141<->action-reductions :: Reduced Permutation Actions (PERMUTATION GROUPS)
5<->TransitiveQuotient(G) <->text639.htm#7142<->TransitiveQuotient(G) : GrpPerm -&gt; GrpPerm, Hom, GrpPerm
5<->PrimitiveQuotient(G) <->text639.htm#7143<->PrimitiveQuotient(G) : GrpPerm -&gt; GrpPerm, Hom, GrpPerm
5<->DegreeReduction(G) <->text639.htm#7144<->DegreeReduction(G) : GrpPerm -&gt; GrpPerm, Hom
3<->action-reductions :<->text639.htm#7141<->action-reductions :: Reduced Permutation Actions (PERMUTATION GROUPS)
3<->jellyfish :<->text639.htm#7145<->jellyfish :: The Jellyfish Algorithm (PERMUTATION GROUPS)
5<->JellyfishConstruction(G: parameters) <->text639.htm#7146<->JellyfishConstruction(G: parameters) : GrpPerm -&gt; BoolElt
5<->JellyfishImage(G) <->text639.htm#7147<->JellyfishImage(G) : GrpPerm -&gt; GrpPerm
5<->JellyfishImage(G, H$\colon$ \parameters) <->text639.htm#7148<->JellyfishImage(G, H$\colon$ \parameters) : GrpPerm, GrpPerm -> GrpPermElt
5<->JellyfishImage(G, x: parameters) <->text639.htm#7148<->JellyfishImage(G, x: parameters) : GrpPerm, GrpPermElt -&gt; GrpPermElt
5<->JellyfishPreimage(G, I$\colon$ \parameters) <->text639.htm#7149<->JellyfishPreimage(G, I$\colon$ \parameters) : GrpPerm, GrpPerm -> GrpPermElt
5<->JellyfishPreimage(G, x: parameters) <->text639.htm#7149<->JellyfishPreimage(G, x: parameters) : GrpPerm, GrpPermElt -&gt; GrpPermElt
3<->jellyfish :<->text639.htm#7145<->jellyfish :: The Jellyfish Algorithm (PERMUTATION GROUPS)
3<->actions :<->text639.htm<->actions :: Permutation Group Actions (PERMUTATION GROUPS)
3<->characteristic-subgroup-normal-structure :<->text640.htm<->characteristic-subgroup-normal-structure :: Normal and Subnormal  Subgroups (PERMUTATION GROUPS)
3<->subgroup-series :<->text640.htm#7151<->subgroup-series :: Characteristic Subgroups and Normal Series (PERMUTATION GROUPS)
5<->DerivedSeries(G) <->text640.htm#7152<->DerivedSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->CompositionSeries(G) <->text640.htm#7153<->CompositionSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->DerivedSubgroup :: CommutatorSubgroup(G) <->text640.htm#7154<->DerivedSubgroup :: CommutatorSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->DerivedGroup :: CommutatorSubgroup(G) <->text640.htm#7154<->DerivedGroup :: CommutatorSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->CommutatorSubgroup(G) <->text640.htm#7154<->CommutatorSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->SolvableResidual :: SolubleResidual(G) <->text640.htm#7155<->SolvableResidual :: SolubleResidual(G) : GrpPerm -&gt; GrpPerm
5<->SolubleResidual(G) <->text640.htm#7155<->SolubleResidual(G) : GrpPerm -&gt; GrpPerm
5<->DerivedLength(G) <->text640.htm#7156<->DerivedLength(G) : GrpPerm -&gt; RngIntElt
5<->LowerCentralSeries(G) <->text640.htm#7157<->LowerCentralSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->NilpotencyClass(G) <->text640.htm#7158<->NilpotencyClass(G) : GrpPerm -&gt; RngIntElt
5<->UpperCentralSeries(G) <->text640.htm#7159<->UpperCentralSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->Center :: Centre(G) <->text640.htm#7160<->Center :: Centre(G) : GrpPerm -&gt; GrpPerm
5<->Centre(G) <->text640.htm#7160<->Centre(G) : GrpPerm -&gt; GrpPerm
5<->Hypercenter :: Hypercentre(G) <->text640.htm#7161<->Hypercenter :: Hypercentre(G) : GrpPerm -&gt; GrpPerm
5<->Hypercentre(G) <->text640.htm#7161<->Hypercentre(G) : GrpPerm -&gt; GrpPerm
5<->pCore(G, p) <->text640.htm#7162<->pCore(G, p) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->pCoreQuotient(G, p) <->text640.htm#7163<->pCoreQuotient(G, p) : GrpPerm, RngIntElt -&gt; GrpPerm, Map, GrpPerm
5<->FittingSubgroup :: FittingGroup(G) <->text640.htm#7164<->FittingSubgroup :: FittingGroup(G) : GrpPerm -&gt; GrpPerm
5<->FittingGroup(G) <->text640.htm#7164<->FittingGroup(G) : GrpPerm -&gt; GrpPerm
5<->FrattiniSubgroup(G) <->text640.htm#7165<->FrattiniSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->JenningsSeries(G) <->text640.htm#7166<->JenningsSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->pCentralSeries(G, p) <->text640.htm#7167<->pCentralSeries(G, p) : GrpPerm, RngIntElt -&gt; [ GrpPerm ]
5<->SubnormalSeries(G, H) <->text640.htm#7168<->SubnormalSeries(G, H) : GrpPerm, GrpPerm -&gt; [ GrpPerm ]
4<->GrpPerm_Series (Example H63E29)<->text640.htm#7169<->GrpPerm_Series (Example H63E29)
4<->Example-Series :<->text640.htm#7169<->Example-Series :: GrpPerm_Series (Example H63E29)
3<->subgroup-series :<->text640.htm#7151<->subgroup-series :: Characteristic Subgroups and Normal Series (PERMUTATION GROUPS)
3<->normal-subgroups :<->text640.htm#7170<->normal-subgroups :: Maximal and Minimal Normal  Subgroups (PERMUTATION GROUPS)
5<->MaximalNormalSubgroup(G) <->text640.htm#7171<->MaximalNormalSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->MinimalNormalSubgroups(G) <->text640.htm#7172<->MinimalNormalSubgroups(G) : GrpPerm -&gt; [ GrpPerm ]
3<->normal-subgroups :<->text640.htm#7170<->normal-subgroups :: Maximal and Minimal Normal  Subgroups (PERMUTATION GROUPS)
3<->normal-subgroups :<->text640.htm#7173<->normal-subgroups :: Lattice of Normal Subgroups (PERMUTATION GROUPS)
5<->NormalSubgroups(G) <->text640.htm#7174<->NormalSubgroups(G) : GrpPerm -&gt; [ Rec ]
5<->NormalLattice(G) <->text640.htm#7175<->NormalLattice(G) : GrpPerm -&gt; SubGrpLat
4<->GrpPerm_NormalSubgroups (Example H63E30)<->text640.htm#7176<->GrpPerm_NormalSubgroups (Example H63E30)
4<->Example-NormalSubgroups :<->text640.htm#7176<->Example-NormalSubgroups :: GrpPerm_NormalSubgroups (Example H63E30)
3<->normal-subgroups :<->text640.htm#7173<->normal-subgroups :: Lattice of Normal Subgroups (PERMUTATION GROUPS)
3<->composition-series :<->text640.htm#7177<->composition-series :: Composition and Chief Series (PERMUTATION GROUPS)
5<->ChiefFactors(G) <->text640.htm#7178<->ChiefFactors(G) : GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->ChiefSeries(G) <->text640.htm#7179<->ChiefSeries(G) : GrpPerm -&gt; [ GrpPerm ], [ &lt;RngIntElt, RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->CompositionFactors(G) <->text640.htm#7180<->CompositionFactors(G) : GrpPerm -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt&gt; ]
4<->GrpPerm_CompFactors (Example H63E31)<->text640.htm#7181<->GrpPerm_CompFactors (Example H63E31)
4<->Example-CompFactors :<->text640.htm#7181<->Example-CompFactors :: GrpPerm_CompFactors (Example H63E31)
5<->PrimaryAbelianInvariants(G) <->text640.htm#7182<->PrimaryAbelianInvariants(G) : GrpPerm -&gt; [ RngIntElt ]
5<->PrimaryAbelianBasis(G) <->text640.htm#7183<->PrimaryAbelianBasis(G) : GrpPerm -&gt; [ GrpPermElt ], [ RngIntElt ]
3<->composition-series :<->text640.htm#7177<->composition-series :: Composition and Chief Series (PERMUTATION GROUPS)
3<->socle :<->text640.htm#7184<->socle :: The Socle (PERMUTATION GROUPS)
5<->Socle(G) <->text640.htm#7185<->Socle(G) : GrpPerm -&gt; GrpPerm
5<->SocleFactor(G) <->text640.htm#7186<->SocleFactor(G) : GrpPerm -&gt; GrpPerm
5<->SocleFactors(G) <->text640.htm#7187<->SocleFactors(G) : GrpPerm -&gt; [ GrpPerm ]
5<->SocleSeries(G) <->text640.htm#7188<->SocleSeries(G) : GrpPerm -&gt; [ GrpPerm ]
5<->EARNS(G) <->text640.htm#7189<->EARNS(G) : GrpPerm -&gt; GrpPerm
5<->AGL :: AffineGeneralLinearGroup(E) <->text640.htm#7190<->AGL :: AffineGeneralLinearGroup(E) : GrpPerm -&gt; GrpPerm
5<->AffineGeneralLinearGroup(E) <->text640.htm#7190<->AffineGeneralLinearGroup(E) : GrpPerm -&gt; GrpPerm
5<->IsAffine(G) <->text640.htm#7191<->IsAffine(G) : GrpPerm -&gt; BoolElt, GrpPerm
5<->AffineAction(G) <->text640.htm#7192<->AffineAction(G) : GrpPerm -&gt; Hom, GrpPerm, GrpPerm
5<->AffineImage(G) <->text640.htm#7193<->AffineImage(G) : GrpPerm -&gt; GrpPerm
5<->AffineKernel(G) <->text640.htm#7194<->AffineKernel(G) : GrpPerm -&gt; GrpPerm
5<->SocleAction(G) <->text640.htm#7195<->SocleAction(G) : GrpPerm -&gt; Hom, GrpPerm, GrpPerm
5<->SocleImage(G) <->text640.htm#7196<->SocleImage(G) : GrpPerm -&gt; GrpPerm
5<->SocleKernel(G) <->text640.htm#7197<->SocleKernel(G) : GrpPerm -&gt; GrpPerm
5<->SocleQuotient(G) <->text640.htm#7198<->SocleQuotient(G) : GrpPerm -&gt; GrpPerm, Hom, GrpPerm
5<->RefineSection(G, M, N) <->text640.htm#7199<->RefineSection(G, M, N) : GrpPerm, GrpPerm, GrpPerm -&gt; [ GrpPerm ]
4<->GrpPerm_PrimitiveStructure (Example H63E32)<->text640.htm#7200<->GrpPerm_PrimitiveStructure (Example H63E32)
4<->Example-PrimitiveStructure :<->text640.htm#7200<->Example-PrimitiveStructure :: GrpPerm_PrimitiveStructure (Example H63E32)
3<->socle :<->text640.htm#7184<->socle :: The Socle (PERMUTATION GROUPS)
3<->soluble-radical :<->text640.htm#7201<->soluble-radical :: The Soluble Radical and its Quotient (PERMUTATION GROUPS)
5<->SolubleRadical :: Radical(G) <->text640.htm#7202<->SolubleRadical :: Radical(G) : GrpPerm -&gt; GrpPerm
5<->SolvableRadical :: Radical(G) <->text640.htm#7202<->SolvableRadical :: Radical(G) : GrpPerm -&gt; GrpPerm
5<->Radical(G) <->text640.htm#7202<->Radical(G) : GrpPerm -&gt; GrpPerm
5<->RadicalQuotient(G) <->text640.htm#7203<->RadicalQuotient(G) : GrpPerm -&gt; GrpPerm, Hom(GrpPerm), GrpPerm
5<->ElementaryAbelianSeries(G, N$\colon$ \parameters) <->text640.htm#7204<->ElementaryAbelianSeries(G, N$\colon$ \parameters) : GrpPerm, GrpPerm -> [ GrpPerm ]
5<->ElementaryAbelianSeries(G: parameters) <->text640.htm#7204<->ElementaryAbelianSeries(G: parameters) : GrpPerm -&gt; [ GrpPerm ]
5<->ElementaryAbelianSeriesCanonical(G) <->text640.htm#7205<->ElementaryAbelianSeriesCanonical(G) : GrpPerm -&gt; [ GrpPerm ]
4<->GrpPerm_Radical (Example H63E33)<->text640.htm#7206<->GrpPerm_Radical (Example H63E33)
4<->Example-Radical :<->text640.htm#7206<->Example-Radical :: GrpPerm_Radical (Example H63E33)
3<->soluble-radical :<->text640.htm#7201<->soluble-radical :: The Soluble Radical and its Quotient (PERMUTATION GROUPS)
3<->complements :<->text640.htm#7207<->complements :: Complements and Supplements (PERMUTATION GROUPS)
5<->Complements(G, M) <->text640.htm#7208<->Complements(G, M) : GrpPerm, GrpPerm -&gt; [ GrpPerm ]
5<->Complements(G, M, N) <->text640.htm#7209<->Complements(G, M, N) : GrpPerm, GrpPerm, GrpPerm -&gt; [ GrpPerm ]
5<->HasComplement(G, M) <->text640.htm#7210<->HasComplement(G, M) : GrpPerm, GrpPerm -&gt; BoolElt, GrpPerm
5<->Supplements(G, M) <->text640.htm#7211<->Supplements(G, M) : GrpPerm, GrpPerm -&gt; [ GrpPerm ]
5<->Supplements(G, M, N) <->text640.htm#7212<->Supplements(G, M, N) : GrpPerm, GrpPerm, GrpPerm -&gt; [ GrpPerm ]
5<->HasSupplement(G, M) <->text640.htm#7213<->HasSupplement(G, M) : GrpPerm, GrpPerm -&gt; BoolElt, GrpPerm
4<->GrpPerm_Complements (Example H63E34)<->text640.htm#7214<->GrpPerm_Complements (Example H63E34)
4<->Example-Complements :<->text640.htm#7214<->Example-Complements :: GrpPerm_Complements (Example H63E34)
3<->complements :<->text640.htm#7207<->complements :: Complements and Supplements (PERMUTATION GROUPS)
3<->normal-subgroups :<->text640.htm#7215<->normal-subgroups :: Abelian Normal Subgroups (PERMUTATION GROUPS)
5<->AbelianNormalSubgroup(G) <->text640.htm#7216<->AbelianNormalSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->AbelianNormalQuotient(G, H) <->text640.htm#7217<->AbelianNormalQuotient(G, H) : GrpPerm, GrpPerm -&gt; GrpPerm, Hom(GrpPerm), GrpPerm
5<->SolubleNormalQuotient(G, H) <->text640.htm#7218<->SolubleNormalQuotient(G, H) : GrpPerm -&gt; GrpPerm, Hom(GrpPerm), GrpPerm
5<->ElementaryAbelianNormalSubgroup(G) <->text640.htm#7219<->ElementaryAbelianNormalSubgroup(G) : GrpPerm -&gt; GrpPerm
5<->pElementaryAbelianNormalSubgroup(G, p) <->text640.htm#7220<->pElementaryAbelianNormalSubgroup(G, p) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->MEANS(G) <->text640.htm#7221<->MEANS(G) : GrpPerm -&gt; GrpPerm
5<->MEANS(G, N) <->text640.htm#7222<->MEANS(G, N) : GrpPerm, GrpPerm -&gt; GrpPerm
3<->normal-subgroups :<->text640.htm#7215<->normal-subgroups :: Abelian Normal Subgroups (PERMUTATION GROUPS)
3<->characteristic-subgroup-normal-structure :<->text640.htm<->characteristic-subgroup-normal-structure :: Normal and Subnormal  Subgroups (PERMUTATION GROUPS)
3<->cosets-transversals :<->text641.htm<->cosets-transversals :: Cosets and Transversals (PERMUTATION GROUPS)
3<->cosets :<->text641.htm#7224<->cosets :: Cosets (PERMUTATION GROUPS)
5<->H * g <->text641.htm#7225<->H * g : GrpPerm, GrpPermElt -&gt; Elt
5<->DoubleCoset(G, H, g, K) <->text641.htm#7226<->DoubleCoset(G, H, g, K) : GrpPerm, GrpPerm, GrpPermElt, GrpPerm -&gt; GrpPermDcosElt
5<->DoubleCosetRepresentatives(G, H, K) <->text641.htm#7227<->DoubleCosetRepresentatives(G, H, K) : GrpPerm, GrpPerm, GrpPerm -&gt; SeqEnum, SeqEnum
5<->DoubleCosetCanonical(G, H, g, K: parameters) <->text641.htm#7228<->DoubleCosetCanonical(G, H, g, K: parameters) : GrpPerm, GrpPerm, GrpPermElt, GrpPerm -&gt; SeqEnum, SeqEnum
5<->ProcessLadder(L, G, U) <->text641.htm#7229<->ProcessLadder(L, G, U) : [GrpPerm], GrpPerm, GrpPerm -&gt; Rec
5<->GetRep(p, R) <->text641.htm#7230<->GetRep(p, R) : GrpPermElt, Rec -&gt; GrpPermElt
5<->DeleteData(R) <->text641.htm#7231<->DeleteData(R) : Rec -&gt;
5<->YoungSubgroupLadder(L) <->text641.htm#7232<->YoungSubgroupLadder(L) : [RngIntElt] -&gt; [GrpPerm]
5<->StabilizerLadder(G, d) <->text641.htm#7233<->StabilizerLadder(G, d) : GrpPerm, RngMPolElt -&gt; [GrpPerm]
5<->x in C <->text641.htm#7234<->x in C : GrpPermElt, Elt -&gt; BoolElt
5<->x notin C <->text641.htm#7235<->x notin C : GrpPermElt, Elt -&gt; BoolElt
5<->C1 eq C2 <->text641.htm#7236<->C<sub>1</sub> eq C<sub>2</sub> : Elt, Elt -&gt; BoolElt
5<->C1 ne C2 <->text641.htm#7237<->C<sub>1</sub> ne C<sub>2</sub> : Elt, Elt -&gt; BoolElt
5<-># C <->text641.htm#7238<-># C : Elt -&gt; RngIntElt
5<->CosetTable(G, H) <->text641.htm#7239<->CosetTable(G, H) : Grp, Grp -&gt; Map
5<->[Future release] CosetTable(G, f) <->text641.htm#7240<->[Future release] CosetTable(G, f) : Grp, Map -&gt; Map
3<->cosets :<->text641.htm#7224<->cosets :: Cosets (PERMUTATION GROUPS)
3<->transversals :<->text641.htm#7241<->transversals :: Transversals (PERMUTATION GROUPS)
5<->RightTransversal :: Transversal(G, H) <->text641.htm#7242<->RightTransversal :: Transversal(G, H) : GrpPerm, GrpPerm -&gt; {@ GrpPermElt  atbrace, Map
5<->Transversal(G, H) <->text641.htm#7242<->Transversal(G, H) : GrpPerm, GrpPerm -&gt; {@ GrpPermElt  atbrace, Map
5<->TransversalProcess(G, H) <->text641.htm#7243<->TransversalProcess(G, H) : GrpPerm, GrpPerm -&gt; GrpPermTransProc
5<->TransversalProcessRemaining(P) <->text641.htm#7244<->TransversalProcessRemaining(P) : GrpPermTransProc -&gt; RngIntElt
5<->TransversalProcessNext(P) <->text641.htm#7245<->TransversalProcessNext(P) : GrpPermTransProc -&gt; GrpPermElt
5<->ShortCosets(p, H, G) <->text641.htm#7246<->ShortCosets(p, H, G) : GrpPermElt, GrpPerm, GrpPerm -&gt; [GrpPermElt]
3<->transversals :<->text641.htm#7241<->transversals :: Transversals (PERMUTATION GROUPS)
3<->cosets-transversals :<->text641.htm<->cosets-transversals :: Cosets and Transversals (PERMUTATION GROUPS)
3<->presentations :<->text642.htm<->presentations :: Presentations (PERMUTATION GROUPS)
3<->fp-group :<->text642.htm#7248<->fp-group :: Generators and Relations (PERMUTATION GROUPS)
5<->FPGroup(G) : GrpPerm <->text642.htm#7249<->FPGroup(G) : GrpPerm :-&gt; GrpFP, Hom(Grp)
5<->FPQuotient :: FPGroup(G, N) : GrpPerm, GrpPerm <->text642.htm#7250<->FPQuotient :: FPGroup(G, N) : GrpPerm, GrpPerm :-&gt; GrpFP, Hom(Grp)
5<->FPGroup(G, N) : GrpPerm, GrpPerm <->text642.htm#7250<->FPGroup(G, N) : GrpPerm, GrpPerm :-&gt; GrpFP, Hom(Grp)
5<->FPGroupStrong(G: parameters) : GrpPerm <->text642.htm#7251<->FPGroupStrong(G: parameters) : GrpPerm :-&gt; GrpFP, Hom(Grp)
3<->fp-group :<->text642.htm#7248<->fp-group :: Generators and Relations (PERMUTATION GROUPS)
3<->word-group :<->text642.htm#7252<->word-group :: Permutations as Words (PERMUTATION GROUPS)
5<->WordGroup(G) <->text642.htm#7253<->WordGroup(G) : GrpPerm -&gt; GrpBB, Map
5<->InverseWordMap(G) <->text642.htm#7254<->InverseWordMap(G) : GrpPerm -&gt; Map
5<->ActingWord(G, x, y) <->text642.htm#7255<->ActingWord(G, x, y) : GrpPerm, Elt, Elt -&gt; GrpFPElt
3<->word-group :<->text642.htm#7252<->word-group :: Permutations as Words (PERMUTATION GROUPS)
3<->presentations :<->text642.htm<->presentations :: Presentations (PERMUTATION GROUPS)
3<->automorphisms :<->text643.htm<->automorphisms :: Automorphism Groups (PERMUTATION GROUPS)
5<->AutomorphismGroup(G: parameters) <->text643.htm#7257<->AutomorphismGroup(G: parameters) : GrpPerm -&gt; GrpAuto
5<->IsIsomorphic(G, H: parameters) <->text643.htm#7258<->IsIsomorphic(G, H: parameters) : GrpPerm, GrpPerm -&gt; BoolElt, Hom(Grp)
4<->GrpPerm_Automorphisms (Example H63E35)<->text643.htm#7259<->GrpPerm_Automorphisms (Example H63E35)
4<->Example-Automorphisms :<->text643.htm#7259<->Example-Automorphisms :: GrpPerm_Automorphisms (Example H63E35)
3<->automorphisms :<->text643.htm<->automorphisms :: Automorphism Groups (PERMUTATION GROUPS)
3<->cohomology :<->text644.htm<->cohomology :: Cohomology (PERMUTATION GROUPS)
5<->pMultiplicator(G, p) <->text644.htm#7261<->pMultiplicator(G, p) : GrpPerm, RngIntElt -&gt; [ RngIntElt ]
5<->pCover(G, F, p) <->text644.htm#7262<->pCover(G, F, p) : GrpPerm, GrpFP, RngIntElt -&gt; GrpFP
5<->CohomologicalDimension(G, M, i) <->text644.htm#7263<->CohomologicalDimension(G, M, i) : GrpPerm, ModRng, RngIntElt -&gt; RngIntElt
5<->ExtensionProcess(G, M, F) <->text644.htm#7264<->ExtensionProcess(G, M, F) : GrpPerm, ModRng, GrpFP -&gt; Process
5<->NextExtension :: Extension(P, Q) <->text644.htm#7265<->NextExtension :: Extension(P, Q) : Process -&gt; GrpFP
5<->Extension(P, Q) <->text644.htm#7265<->Extension(P, Q) : Process -&gt; GrpFP
5<->SplitExtension(G, M, F) <->text644.htm#7266<->SplitExtension(G, M, F) : GrpPerm, ModRng, GrpFP -&gt; GrpFP
4<->GrpPerm_Cohomology (Example H63E36)<->text644.htm#7267<->GrpPerm_Cohomology (Example H63E36)
4<->Example-Cohomology :<->text644.htm#7267<->Example-Cohomology :: GrpPerm_Cohomology (Example H63E36)
4<->GrpPerm_Cohomology-2 (Example H63E37)<->text644.htm#7268<->GrpPerm_Cohomology-2 (Example H63E37)
4<->Example-Cohomology-2 :<->text644.htm#7268<->Example-Cohomology-2 :: GrpPerm_Cohomology-2 (Example H63E37)
3<->cohomology :<->text644.htm<->cohomology :: Cohomology (PERMUTATION GROUPS)
3<->character-representation :<->text645.htm<->character-representation :: Representation Theory (PERMUTATION GROUPS)
5<->CharacterTable(G: parameters) <->text645.htm#7270<->CharacterTable(G: parameters) : GrpPerm -&gt; TabChtr
5<->PermutationCharacter(G) <->text645.htm#7271<->PermutationCharacter(G) : GrpPerm -&gt; AlgChtrElt
5<->PermutationCharacter(G, H) <->text645.htm#7272<->PermutationCharacter(G, H) : GrpPerm, GrpPerm -&gt; AlgChtrElt
5<->GModule(G, S) <->text645.htm#7273<->GModule(G, S) : Grp, AlgMat -&gt; ModGrp
5<->GModule(G, A, B) <->text645.htm#7274<->GModule(G, A, B) : Grp, Grp, Grp -&gt; ModGrp, Map
5<->PermutationModule(G, H, R) <->text645.htm#7275<->PermutationModule(G, H, R) : Grp, Grp, Rng -&gt; ModGrp
5<->PermutationModule(G, R) <->text645.htm#7276<->PermutationModule(G, R) : GrpPerm, Rng -&gt; ModGrp
4<->GrpPerm_GModule (Example H63E38)<->text645.htm#7277<->GrpPerm_GModule (Example H63E38)
4<->Example-GModule :<->text645.htm#7277<->Example-GModule :: GrpPerm_GModule (Example H63E38)
3<->character-representation :<->text645.htm<->character-representation :: Representation Theory (PERMUTATION GROUPS)
3<->identification :<->text646.htm<->identification :: Identification (PERMUTATION GROUPS)
3<->identification-abstract :<->text646.htm#7279<->identification-abstract :: Identification as an Abstract  Group (PERMUTATION GROUPS)
5<->NameSimple(G) <->text646.htm#7280<->NameSimple(G) : GrpPerm -&gt; &lt;RngIntElt, RngIntElt, RngIntElt&gt;
3<->identification-abstract :<->text646.htm#7279<->identification-abstract :: Identification as an Abstract  Group (PERMUTATION GROUPS)
3<->identification-permutation :<->text646.htm#7281<->identification-permutation :: Identification as a Permutation  Group (PERMUTATION GROUPS)
5<->IsAlternating(G) <->text646.htm#7282<->IsAlternating(G) : GrpPerm -&gt; BoolElt
5<->IsSymmetric(G) <->text646.htm#7283<->IsSymmetric(G) : GrpPerm -&gt; BoolElt
5<->IsAltsym(G) <->text646.htm#7284<->IsAltsym(G) : GrpPerm -&gt; BoolElt
5<->TwoTransitiveGroupIdentification(G) <->text646.htm#7285<->TwoTransitiveGroupIdentification(G) : GrpPerm  -&gt; Tup
5<->IsEven(G)<->text646.htm#7286<->IsEven(G): GrpPerm -&gt; BoolElt
5<->RecogniseAlternatingOrSymmetric(G : parameters) <->text646.htm#7287<->RecogniseAlternatingOrSymmetric(G : parameters) : Grp, RngIntElt -&gt; BoolElt, Map, Map, Map, Map, BoolElt
5<->AlternatingOrSymmetricElementToWord(G, g)<->text646.htm#7288<->AlternatingOrSymmetricElementToWord(G, g): Grp, GrpElt -&gt; BoolElt, GrpSLPElt
4<->GrpPerm_RecogniseAltsym2 (Example H63E39)<->text646.htm#7289<->GrpPerm_RecogniseAltsym2 (Example H63E39)
4<->Example-RecogniseAltsym2 :<->text646.htm#7289<->Example-RecogniseAltsym2 :: GrpPerm_RecogniseAltsym2 (Example H63E39)
5<->RecogniseSymmetric(G, n: parameters) <->text646.htm#7290<->RecogniseSymmetric(G, n: parameters) : Grp, RngIntElt -&gt;    BoolElt, Map, Map, Map, Map, BoolElt
5<->SymmetricElementToWord (G, g) <->text646.htm#7291<->SymmetricElementToWord (G, g) : Grp, GrpElt -&gt; BoolElt, GrpSLPElt
5<->RecogniseAlternating(G, n: parameters) <->text646.htm#7292<->RecogniseAlternating(G, n: parameters) : Grp, RngIntElt -&gt;    BoolElt, Map, Map, Map, Map, BoolElt
5<->AlternatingElementToWord (G, g) <->text646.htm#7293<->AlternatingElementToWord (G, g) : Grp, GrpElt -&gt; BoolElt, GrpSLPElt
5<->GuessAltsymDegree(G: parameters) <->text646.htm#7294<->GuessAltsymDegree(G: parameters) : Grp -&gt; BoolElt, MonStgElt, RngIntElt
4<->GrpPerm_RecogniseAltsym2 (Example H63E40)<->text646.htm#7295<->GrpPerm_RecogniseAltsym2 (Example H63E40)
4<->Example-RecogniseAltsym2 :<->text646.htm#7295<->Example-RecogniseAltsym2 :: GrpPerm_RecogniseAltsym2 (Example H63E40)
3<->identification-permutation :<->text646.htm#7281<->identification-permutation :: Identification as a Permutation  Group (PERMUTATION GROUPS)
3<->identification :<->text646.htm<->identification :: Identification (PERMUTATION GROUPS)
3<->BSGS-base-strong-generator :<->text647.htm<->BSGS-base-strong-generator :: Base and Strong Generating Set (PERMUTATION GROUPS)
3<->construction-base-strong-generator :<->text647.htm#7297<->construction-base-strong-generator :: Construction of a Base and Strong Generating Set (PERMUTATION GROUPS)
5<->BSGS(G) <->text647.htm#7298<->BSGS(G) : GrpPerm -&gt;
5<->SimsSchreier(G: parameters) <->text647.htm#7299<->SimsSchreier(G: parameters) : GrpPerm -&gt;
5<->RandomSchreier(G: parameters) <->text647.htm#7300<->RandomSchreier(G: parameters) : GrpPerm -&gt;
5<->ToddCoxeterSchreier(G: parameters) <->text647.htm#7301<->ToddCoxeterSchreier(G: parameters) : GrpPerm -&gt;
5<->SolvableSchreier :: SolubleSchreier(G: parameters) <->text647.htm#7302<->SolvableSchreier :: SolubleSchreier(G: parameters) : GrpPerm -&gt;
5<->SolubleSchreier(G: parameters) <->text647.htm#7302<->SolubleSchreier(G: parameters) : GrpPerm -&gt;
5<->Verify(G: parameters ) <->text647.htm#7303<->Verify(G: parameters ) : RngIntElt  -&gt;
4<->GrpPerm_BSGS (Example H63E41)<->text647.htm#7304<->GrpPerm_BSGS (Example H63E41)
4<->Example-BSGS :<->text647.htm#7304<->Example-BSGS :: GrpPerm_BSGS (Example H63E41)
4<->GrpPerm_BSFS-2 (Example H63E42)<->text647.htm#7305<->GrpPerm_BSFS-2 (Example H63E42)
4<->Example-BSFS-2 :<->text647.htm#7305<->Example-BSFS-2 :: GrpPerm_BSFS-2 (Example H63E42)
3<->construction-base-strong-generator :<->text647.htm#7297<->construction-base-strong-generator :: Construction of a Base and Strong Generating Set (PERMUTATION GROUPS)
3<->attribute :<->text647.htm#7306<->attribute :: Defining Values for Attributes (PERMUTATION GROUPS)
5<->AssertAttribute(G, "Order", n) <->text647.htm#7307<->AssertAttribute(G, "Order", n) : GrpPerm, MonStgElt, RngIntElt -&gt;
5<->AssertAttribute(G, "Order", Q) <->text647.htm#7308<->AssertAttribute(G, "Order", Q) : GrpPerm, MonStgElt, [&lt;RngIntElt, RngIntElt&gt;] -&gt;
5<->[Future release] AssertAttribute(G, "BSGS", S) <->text647.htm#7309<->[Future release] AssertAttribute(G, "BSGS", S) : GrpPerm, MonStgElt, GrpPermBSGS -&gt;
4<->GrpPerm_RandomSchreier (Example H63E43)<->text647.htm#7310<->GrpPerm_RandomSchreier (Example H63E43)
4<->Example-RandomSchreier :<->text647.htm#7310<->Example-RandomSchreier :: GrpPerm_RandomSchreier (Example H63E43)
3<->attribute :<->text647.htm#7306<->attribute :: Defining Values for Attributes (PERMUTATION GROUPS)
3<->access :<->text647.htm#7311<->access :: Accessing the Base and Strong  Generating Set (PERMUTATION GROUPS)
5<->Base(G) <->text647.htm#7312<->Base(G) : GrpPerm -&gt; [Elt]
5<->BasePoint(G, i) <->text647.htm#7313<->BasePoint(G, i) : GrpPerm, RngIntElt -&gt; Elt
5<->BasicOrbit(G, i) <->text647.htm#7314<->BasicOrbit(G, i) : GrpPerm, RngIntElt -&gt; SetIndx
5<->BasicOrbits(G) <->text647.htm#7315<->BasicOrbits(G) : GrpPerm -&gt; [SetIndx]
5<->BasicOrbitLength(G, i) <->text647.htm#7316<->BasicOrbitLength(G, i) : GrpPerm, RngIntElt -&gt; RngIntElt
5<->BasicOrbitLengths(G) <->text647.htm#7317<->BasicOrbitLengths(G) : GrpPerm -&gt; [RngIntElt]
5<->BasicStabiliser :: BasicStabilizer(G, i) <->text647.htm#7318<->BasicStabiliser :: BasicStabilizer(G, i) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->BasicStabilizer(G, i) <->text647.htm#7318<->BasicStabilizer(G, i) : GrpPerm, RngIntElt -&gt; GrpPerm
5<->BasicStabiliserChain :: BasicStabilizerChain(G) <->text647.htm#7319<->BasicStabiliserChain :: BasicStabilizerChain(G) : GrpPerm -&gt; [GrpPerm]
5<->BasicStabilizerChain(G) <->text647.htm#7319<->BasicStabilizerChain(G) : GrpPerm -&gt; [GrpPerm]
5<->IsMemberBasicOrbit(G, i, a) <->text647.htm#7320<->IsMemberBasicOrbit(G, i, a) : GrpPerm, RngIntElt, Elt -&gt; BoolElt
5<->Nsgens :: NumberOfStrongGenerators(G) <->text647.htm#7321<->Nsgens :: NumberOfStrongGenerators(G) : GrpPerm -&gt; RngIntElt
5<->NumberOfStrongGenerators(G) <->text647.htm#7321<->NumberOfStrongGenerators(G) : GrpPerm -&gt; RngIntElt
5<->Nsgens :: NumberOfStrongGenerators(G, i) <->text647.htm#7322<->Nsgens :: NumberOfStrongGenerators(G, i) : GrpPerm, RngIntElt -&gt; RngIntElt
5<->NumberOfStrongGenerators(G, i) <->text647.htm#7322<->NumberOfStrongGenerators(G, i) : GrpPerm, RngIntElt -&gt; RngIntElt
5<->SchreierVectors(G) <->text647.htm#7323<->SchreierVectors(G) : GrpPerm -&gt; [ [RngIntElt] ]
5<->SchreierVector(G, i) <->text647.htm#7324<->SchreierVector(G, i) : GrpPerm, RngIntElt -&gt; [RngIntElt]
5<->StrongGenerators(G) <->text647.htm#7325<->StrongGenerators(G) : GrpPerm -&gt; SetIndx(GrpPermElt)
5<->StrongGenerators(G, i) <->text647.htm#7326<->StrongGenerators(G, i) : GrpPerm, RngIntElt -&gt; SetIndx(GrpPermElt)
3<->access :<->text647.htm#7311<->access :: Accessing the Base and Strong  Generating Set (PERMUTATION GROUPS)
3<->operation :<->text647.htm#7327<->operation :: Working with a Base and Strong Generating Set (PERMUTATION GROUPS)
5<->BaseImage(x) <->text647.htm#7328<->BaseImage(x) : GrpPermElt -&gt; [Elt]
5<->Permutation(G, Q) <->text647.htm#7329<->Permutation(G, Q) : GrpPerm, [Elt] -&gt; GrpPermElt
5<->SVPermutation(G, i, a) <->text647.htm#7330<->SVPermutation(G, i, a) : GrpPerm, RngIntElt, Elt -&gt; GrpPermElt
5<->SVWord(G, i, a) <->text647.htm#7331<->SVWord(G, i, a) : GrpPerm, RngIntElt, Elt -&gt; GrpFPElt
5<->Strip(H, x) <->text647.htm#7332<->Strip(H, x) : GrpPerm, GrpPermElt -&gt; BoolElt, GrpPermElt, RngIntElt
5<->WordStrip(H, x) <->text647.htm#7333<->WordStrip(H, x) : GrpPerm, GrpPermElt -&gt; BoolElt, GrpFPElt, RngIntElt
5<->BaseImageWordStrip(H, x) <->text647.htm#7334<->BaseImageWordStrip(H, x) : GrpPerm, GrpPermElt -&gt; BoolElt, GrpFPElt, RngIntElt
5<->WordInStrongGenerators(H, x) <->text647.htm#7335<->WordInStrongGenerators(H, x) : GrpPerm, GrpPermElt -&gt; GrpFPElt
3<->operation :<->text647.htm#7327<->operation :: Working with a Base and Strong Generating Set (PERMUTATION GROUPS)
3<->modification :<->text647.htm#7336<->modification :: Modifying a Base and Strong Generating Set (PERMUTATION GROUPS)
5<->ChangeBase(~G, Q) <->text647.htm#7337<->ChangeBase(~G, Q) : GrpPerm, [Elt] -&gt;
5<->AddNormalizingGenerator(~H, x) <->text647.htm#7338<->AddNormalizingGenerator(~H, x) : GrpPerm, GrpPermElt -&gt;
5<->ReduceGenerators(~G) <->text647.htm#7339<->ReduceGenerators(~G) : GrpPerm -&gt;
3<->modification :<->text647.htm#7336<->modification :: Modifying a Base and Strong Generating Set (PERMUTATION GROUPS)
3<->BSGS-base-strong-generator :<->text647.htm<->BSGS-base-strong-generator :: Base and Strong Generating Set (PERMUTATION GROUPS)
3<->linear-group :<->text648.htm<->linear-group :: Permutation Representations  of Linear Groups (PERMUTATION GROUPS)
5<->AGL :<->text648.htm#7341<->AGL :: AffineGeneralLinearGroup(arguments)
5<->AffineGeneralLinearGroup(n, q) <->text648.htm#7341<->AffineGeneralLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineGeneralLinearGroup(n, K) <->text648.htm#7341<->AffineGeneralLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineGeneralLinearGroup(V) <->text648.htm#7341<->AffineGeneralLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AGL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7341<->AGL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGeneralLinearGroup(arguments)
5<->AGL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7341<->AGL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGeneralLinearGroup(arguments)
5<->AGL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7341<->AGL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGeneralLinearGroup(arguments)
5<->AffineGeneralLinearGroup(arguments)<->text648.htm#7341<->AffineGeneralLinearGroup(arguments)
5<->ASL :<->text648.htm#7342<->ASL :: AffineSpecialLinearGroup(arguments)
5<->AffineSpecialLinearGroup(n, q) <->text648.htm#7342<->AffineSpecialLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSpecialLinearGroup(n, K) <->text648.htm#7342<->AffineSpecialLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSpecialLinearGroup(V) <->text648.htm#7342<->AffineSpecialLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ASL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7342<->ASL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSpecialLinearGroup(arguments)
5<->ASL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7342<->ASL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSpecialLinearGroup(arguments)
5<->ASL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7342<->ASL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSpecialLinearGroup(arguments)
5<->AffineSpecialLinearGroup(arguments)<->text648.htm#7342<->AffineSpecialLinearGroup(arguments)
5<->AGammaL :<->text648.htm#7343<->AGammaL :: AffineGammaLinearGroup(arguments)
5<->AffineGammaLinearGroup(n, q) <->text648.htm#7343<->AffineGammaLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineGammaLinearGroup(n, K) <->text648.htm#7343<->AffineGammaLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineGammaLinearGroup(V) <->text648.htm#7343<->AffineGammaLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AGammaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7343<->AGammaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGammaLinearGroup(arguments)
5<->AGammaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7343<->AGammaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGammaLinearGroup(arguments)
5<->AGammaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7343<->AGammaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineGammaLinearGroup(arguments)
5<->AffineGammaLinearGroup(arguments)<->text648.htm#7343<->AffineGammaLinearGroup(arguments)
5<->ASigmaL :<->text648.htm#7344<->ASigmaL :: AffineSigmaLinearGroup(arguments)
5<->AffineSigmaLinearGroup(n, q) <->text648.htm#7344<->AffineSigmaLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSigmaLinearGroup(n, K) <->text648.htm#7344<->AffineSigmaLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSigmaLinearGroup(V) <->text648.htm#7344<->AffineSigmaLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ASigmaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7344<->ASigmaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaLinearGroup(arguments)
5<->ASigmaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7344<->ASigmaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaLinearGroup(arguments)
5<->ASigmaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7344<->ASigmaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaLinearGroup(arguments)
5<->AffineSigmaLinearGroup(arguments)<->text648.htm#7344<->AffineSigmaLinearGroup(arguments)
5<->ASp :<->text648.htm#7345<->ASp :: AffineSymplecticGroup(arguments)
5<->AffineSymplecticGroup(n, q) <->text648.htm#7345<->AffineSymplecticGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSymplecticGroup(n, K) <->text648.htm#7345<->AffineSymplecticGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSymplecticGroup(V) <->text648.htm#7345<->AffineSymplecticGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ASp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7345<->ASp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSymplecticGroup(arguments)
5<->ASp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7345<->ASp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSymplecticGroup(arguments)
5<->ASp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7345<->ASp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSymplecticGroup(arguments)
5<->AffineSymplecticGroup(arguments)<->text648.htm#7345<->AffineSymplecticGroup(arguments)
5<->ASigmaSp :<->text648.htm#7346<->ASigmaSp :: AffineSigmaSymplecticGroup(arguments)
5<->AffineSigmaSymplecticGroup(n, q) <->text648.htm#7346<->AffineSigmaSymplecticGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSigmaSymplecticGroup(n, K) <->text648.htm#7346<->AffineSigmaSymplecticGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->AffineSigmaSymplecticGroup(V) <->text648.htm#7346<->AffineSigmaSymplecticGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ASigmaSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7346<->ASigmaSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaSymplecticGroup(arguments)
5<->ASigmaSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7346<->ASigmaSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaSymplecticGroup(arguments)
5<->ASigmaSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7346<->ASigmaSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: AffineSigmaSymplecticGroup(arguments)
5<->AffineSigmaSymplecticGroup(arguments)<->text648.htm#7346<->AffineSigmaSymplecticGroup(arguments)
5<->PGL :<->text648.htm#7347<->PGL :: ProjectiveGeneralLinearGroup(arguments)
5<->ProjectiveGeneralLinearGroup(n, q) <->text648.htm#7347<->ProjectiveGeneralLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGeneralLinearGroup(n, K) <->text648.htm#7347<->ProjectiveGeneralLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGeneralLinearGroup(V) <->text648.htm#7347<->ProjectiveGeneralLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7347<->PGL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralLinearGroup(arguments)
5<->PGL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7347<->PGL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralLinearGroup(arguments)
5<->PGL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7347<->PGL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralLinearGroup(arguments)
5<->ProjectiveGeneralLinearGroup(arguments)<->text648.htm#7347<->ProjectiveGeneralLinearGroup(arguments)
5<->PSL :<->text648.htm#7348<->PSL :: ProjectiveSpecialLinearGroup(arguments)
5<->ProjectiveSpecialLinearGroup(n, q) <->text648.htm#7348<->ProjectiveSpecialLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSpecialLinearGroup(n, K) <->text648.htm#7348<->ProjectiveSpecialLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSpecialLinearGroup(V) <->text648.htm#7348<->ProjectiveSpecialLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7348<->PSL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialLinearGroup(arguments)
5<->PSL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7348<->PSL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialLinearGroup(arguments)
5<->PSL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7348<->PSL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialLinearGroup(arguments)
5<->ProjectiveSpecialLinearGroup(arguments)<->text648.htm#7348<->ProjectiveSpecialLinearGroup(arguments)
5<->PGammaL :<->text648.htm#7349<->PGammaL :: ProjectiveGammaLinearGroup(arguments)
5<->ProjectiveGammaLinearGroup(n, q) <->text648.htm#7349<->ProjectiveGammaLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGammaLinearGroup(n, K) <->text648.htm#7349<->ProjectiveGammaLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGammaLinearGroup(V) <->text648.htm#7349<->ProjectiveGammaLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGammaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7349<->PGammaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaLinearGroup(arguments)
5<->PGammaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7349<->PGammaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaLinearGroup(arguments)
5<->PGammaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7349<->PGammaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaLinearGroup(arguments)
5<->ProjectiveGammaLinearGroup(arguments)<->text648.htm#7349<->ProjectiveGammaLinearGroup(arguments)
5<->PSigmaL :<->text648.htm#7350<->PSigmaL :: ProjectiveSigmaLinearGroup(arguments)
5<->ProjectiveSigmaLinearGroup(n, q) <->text648.htm#7350<->ProjectiveSigmaLinearGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaLinearGroup(n, K) <->text648.htm#7350<->ProjectiveSigmaLinearGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaLinearGroup(V) <->text648.htm#7350<->ProjectiveSigmaLinearGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSigmaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7350<->PSigmaL(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaLinearGroup(arguments)
5<->PSigmaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7350<->PSigmaL(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaLinearGroup(arguments)
5<->PSigmaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7350<->PSigmaL(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaLinearGroup(arguments)
5<->ProjectiveSigmaLinearGroup(arguments)<->text648.htm#7350<->ProjectiveSigmaLinearGroup(arguments)
5<->PGU :<->text648.htm#7351<->PGU :: ProjectiveGeneralUnitaryGroup(arguments)
5<->ProjectiveGeneralUnitaryGroup(n, q) <->text648.htm#7351<->ProjectiveGeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGeneralUnitaryGroup(n, K) <->text648.htm#7351<->ProjectiveGeneralUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGeneralUnitaryGroup(V)<->text648.htm#7351<->ProjectiveGeneralUnitaryGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7351<->PGU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralUnitaryGroup(arguments)
5<->PGU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7351<->PGU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralUnitaryGroup(arguments)
5<->PGU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7351<->PGU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGeneralUnitaryGroup(arguments)
5<->ProjectiveGeneralUnitaryGroup(arguments)<->text648.htm#7351<->ProjectiveGeneralUnitaryGroup(arguments)
5<->PSU :<->text648.htm#7352<->PSU :: ProjectiveSpecialUnitaryGroup(arguments)
5<->ProjectiveSpecialUnitaryGroup(n, q) <->text648.htm#7352<->ProjectiveSpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSpecialUnitaryGroup(n, K) <->text648.htm#7352<->ProjectiveSpecialUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSpecialUnitaryGroup(V)<->text648.htm#7352<->ProjectiveSpecialUnitaryGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7352<->PSU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialUnitaryGroup(arguments)
5<->PSU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7352<->PSU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialUnitaryGroup(arguments)
5<->PSU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7352<->PSU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSpecialUnitaryGroup(arguments)
5<->ProjectiveSpecialUnitaryGroup(arguments)<->text648.htm#7352<->ProjectiveSpecialUnitaryGroup(arguments)
5<->PGammaU :<->text648.htm#7353<->PGammaU :: ProjectiveGammaUnitaryGroup(arguments)
5<->ProjectiveGammaUnitaryGroup(n, q) <->text648.htm#7353<->ProjectiveGammaUnitaryGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGammaUnitaryGroup(n, K) <->text648.htm#7353<->ProjectiveGammaUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveGammaUnitaryGroup(V)<->text648.htm#7353<->ProjectiveGammaUnitaryGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGammaU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7353<->PGammaU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaUnitaryGroup(arguments)
5<->PGammaU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7353<->PGammaU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaUnitaryGroup(arguments)
5<->PGammaU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7353<->PGammaU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveGammaUnitaryGroup(arguments)
5<->ProjectiveGammaUnitaryGroup(arguments)<->text648.htm#7353<->ProjectiveGammaUnitaryGroup(arguments)
5<->PSigmaU :<->text648.htm#7354<->PSigmaU :: ProjectiveSigmaUnitaryGroup(arguments)
5<->ProjectiveSigmaUnitaryGroup(n, q) <->text648.htm#7354<->ProjectiveSigmaUnitaryGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaUnitaryGroup(n, K) <->text648.htm#7354<->ProjectiveSigmaUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaUnitaryGroup(V)<->text648.htm#7354<->ProjectiveSigmaUnitaryGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSigmaU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7354<->PSigmaU(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaUnitaryGroup(arguments)
5<->PSigmaU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7354<->PSigmaU(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaUnitaryGroup(arguments)
5<->PSigmaU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7354<->PSigmaU(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaUnitaryGroup(arguments)
5<->ProjectiveSigmaUnitaryGroup(arguments)<->text648.htm#7354<->ProjectiveSigmaUnitaryGroup(arguments)
5<->PSp :<->text648.htm#7355<->PSp :: ProjectiveSymplecticGroup(arguments)
5<->ProjectiveSymplecticGroup(n, q) <->text648.htm#7355<->ProjectiveSymplecticGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSymplecticGroup(n, K) <->text648.htm#7355<->ProjectiveSymplecticGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSymplecticGroup(V) <->text648.htm#7355<->ProjectiveSymplecticGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7355<->PSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSymplecticGroup(arguments)
5<->PSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7355<->PSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSymplecticGroup(arguments)
5<->PSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7355<->PSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSymplecticGroup(arguments)
5<->ProjectiveSymplecticGroup(arguments)<->text648.htm#7355<->ProjectiveSymplecticGroup(arguments)
5<->PSigmaSp :<->text648.htm#7356<->PSigmaSp :: ProjectiveSigmaSymplecticGroup(arguments)
5<->ProjectiveSigmaSymplecticGroup(n, q) <->text648.htm#7356<->ProjectiveSigmaSymplecticGroup(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaSymplecticGroup(n, K) <->text648.htm#7356<->ProjectiveSigmaSymplecticGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSigmaSymplecticGroup(V) <->text648.htm#7356<->ProjectiveSigmaSymplecticGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSigmaSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7356<->PSigmaSp(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaSymplecticGroup(arguments)
5<->PSigmaSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7356<->PSigmaSp(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaSymplecticGroup(arguments)
5<->PSigmaSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7356<->PSigmaSp(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSigmaSymplecticGroup(arguments)
5<->ProjectiveSigmaSymplecticGroup(arguments)<->text648.htm#7356<->ProjectiveSigmaSymplecticGroup(arguments)
5<->ProjectiveGeneralOrthogonalGroup :<->text648.htm#7357<->ProjectiveGeneralOrthogonalGroup :: PGO(arguments)
5<->ProjectiveGeneralOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7357<->ProjectiveGeneralOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGO(arguments)
5<->ProjectiveGeneralOrthogonalGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7357<->ProjectiveGeneralOrthogonalGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGO(arguments)
5<->PGO(n, q) <->text648.htm#7357<->PGO(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGO(n, K) <->text648.htm#7357<->PGO(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGO(V)<->text648.htm#7357<->PGO(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGO(arguments)<->text648.htm#7357<->PGO(arguments)
5<->ProjectiveGeneralOrthogonalGroupPlus :<->text648.htm#7358<->ProjectiveGeneralOrthogonalGroupPlus :: PGOPlus(arguments)
5<->ProjectiveGeneralOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7358<->ProjectiveGeneralOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGOPlus(arguments)
5<->ProjectiveGeneralOrthogonalGroupPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7358<->ProjectiveGeneralOrthogonalGroupPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGOPlus(arguments)
5<->PGOPlus(n, q) <->text648.htm#7358<->PGOPlus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOPlus(n, K) <->text648.htm#7358<->PGOPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOPlus(V)<->text648.htm#7358<->PGOPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOPlus(arguments)<->text648.htm#7358<->PGOPlus(arguments)
5<->ProjectiveGeneralOrthogonalGroupMinus :<->text648.htm#7359<->ProjectiveGeneralOrthogonalGroupMinus :: PGOMinus(arguments)
5<->ProjectiveGeneralOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7359<->ProjectiveGeneralOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGOMinus(arguments)
5<->ProjectiveGeneralOrthogonalGroupMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7359<->ProjectiveGeneralOrthogonalGroupMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PGOMinus(arguments)
5<->PGOMinus(n, q) <->text648.htm#7359<->PGOMinus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOMinus(n, K) <->text648.htm#7359<->PGOMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOMinus(V)<->text648.htm#7359<->PGOMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PGOMinus(arguments)<->text648.htm#7359<->PGOMinus(arguments)
5<->ProjectiveSpecialOrthogonalGroup :<->text648.htm#7360<->ProjectiveSpecialOrthogonalGroup :: PSO(arguments)
5<->ProjectiveSpecialOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7360<->ProjectiveSpecialOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSO(arguments)
5<->ProjectiveSpecialOrthogonalGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7360<->ProjectiveSpecialOrthogonalGroup(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSO(arguments)
5<->PSO(n, q) <->text648.htm#7360<->PSO(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSO(n, K) <->text648.htm#7360<->PSO(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSO(V)<->text648.htm#7360<->PSO(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSO(arguments)<->text648.htm#7360<->PSO(arguments)
5<->ProjectiveSpecialOrthogonalGroupPlus :<->text648.htm#7361<->ProjectiveSpecialOrthogonalGroupPlus :: PSOPlus(arguments)
5<->ProjectiveSpecialOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7361<->ProjectiveSpecialOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSOPlus(arguments)
5<->ProjectiveSpecialOrthogonalGroupPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7361<->ProjectiveSpecialOrthogonalGroupPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSOPlus(arguments)
5<->PSOPlus(n, q) <->text648.htm#7361<->PSOPlus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOPlus(n, K) <->text648.htm#7361<->PSOPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOPlus(V)<->text648.htm#7361<->PSOPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOPlus(arguments)<->text648.htm#7361<->PSOPlus(arguments)
5<->ProjectiveSpecialOrthogonalGroupMinus :<->text648.htm#7362<->ProjectiveSpecialOrthogonalGroupMinus :: PSOMinus(arguments)
5<->ProjectiveSpecialOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7362<->ProjectiveSpecialOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSOMinus(arguments)
5<->ProjectiveSpecialOrthogonalGroupMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7362<->ProjectiveSpecialOrthogonalGroupMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: PSOMinus(arguments)
5<->PSOMinus(n, q) <->text648.htm#7362<->PSOMinus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOMinus(n, K) <->text648.htm#7362<->PSOMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOMinus(V)<->text648.htm#7362<->PSOMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSOMinus(arguments)<->text648.htm#7362<->PSOMinus(arguments)
5<->POmega :<->text648.htm#7363<->POmega :: ProjectiveOmega(arguments)
5<->ProjectiveOmega(n, q) <->text648.htm#7363<->ProjectiveOmega(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmega(n, K) <->text648.htm#7363<->ProjectiveOmega(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmega(V)<->text648.htm#7363<->ProjectiveOmega(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->POmega(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7363<->POmega(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmega(arguments)
5<->POmega(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7363<->POmega(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmega(arguments)
5<->POmega(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7363<->POmega(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmega(arguments)
5<->ProjectiveOmega(arguments)<->text648.htm#7363<->ProjectiveOmega(arguments)
5<->POmegaPlus :<->text648.htm#7364<->POmegaPlus :: ProjectiveOmegaPlus(arguments)
5<->ProjectiveOmegaPlus(n, q) <->text648.htm#7364<->ProjectiveOmegaPlus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmegaPlus(n, K) <->text648.htm#7364<->ProjectiveOmegaPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmegaPlus(V)<->text648.htm#7364<->ProjectiveOmegaPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->POmegaPlus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7364<->POmegaPlus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaPlus(arguments)
5<->POmegaPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7364<->POmegaPlus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaPlus(arguments)
5<->POmegaPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7364<->POmegaPlus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaPlus(arguments)
5<->ProjectiveOmegaPlus(arguments)<->text648.htm#7364<->ProjectiveOmegaPlus(arguments)
5<->POmegaMinus :<->text648.htm#7365<->POmegaMinus :: ProjectiveOmegaMinus(arguments)
5<->ProjectiveOmegaMinus(n, q) <->text648.htm#7365<->ProjectiveOmegaMinus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmegaMinus(n, K) <->text648.htm#7365<->ProjectiveOmegaMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveOmegaMinus(V)<->text648.htm#7365<->ProjectiveOmegaMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->POmegaMinus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7365<->POmegaMinus(n, q) : RngIntElt, RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaMinus(arguments)
5<->POmegaMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7365<->POmegaMinus(n, K) : RngIntElt, FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaMinus(arguments)
5<->POmegaMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7365<->POmegaMinus(V): ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveOmegaMinus(arguments)
5<->ProjectiveOmegaMinus(arguments)<->text648.htm#7365<->ProjectiveOmegaMinus(arguments)
5<->PSz :<->text648.htm#7366<->PSz :: ProjectiveSuzukiGroup(arguments)
5<->ProjectiveSuzukiGroup(q) <->text648.htm#7366<->ProjectiveSuzukiGroup(q) : RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSuzukiGroup(K) <->text648.htm#7366<->ProjectiveSuzukiGroup(K) : FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->ProjectiveSuzukiGroup(V) <->text648.htm#7366<->ProjectiveSuzukiGroup(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace
5<->PSz(q): RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7366<->PSz(q): RngIntElt -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSuzukiGroup(arguments)
5<->PSz(K) : FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7366<->PSz(K) : FldFin -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSuzukiGroup(arguments)
5<->PSz(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :<->text648.htm#7366<->PSz(V) : ModTupRng -> GrpPerm, \braceat\ ModTupFldElt  \atbrace :: ProjectiveSuzukiGroup(arguments)
5<->ProjectiveSuzukiGroup(arguments)<->text648.htm#7366<->ProjectiveSuzukiGroup(arguments)
5<->AffineGroup(M) <->text648.htm#7367<->AffineGroup(M) : GrpMat[FldFin] -&gt; GrpPerm, { at ModTupFldElt  atbrace
3<->linear-group :<->text648.htm<->linear-group :: Permutation Representations  of Linear Groups (PERMUTATION GROUPS)
3<->databases :<->text649.htm<->databases :: Permutation Group Databases (PERMUTATION GROUPS)
3<->ordered-partn-stack :<->text650.htm<->ordered-partn-stack :: Ordered Partition Stacks (PERMUTATION GROUPS)
3<->OPS-create :<->text650.htm#7370<->OPS-create :: Construction of Ordered Partition Stacks (PERMUTATION GROUPS)
5<->OrderedPartitionStack(n) <->text650.htm#7371<->OrderedPartitionStack(n) : RngIntElt -&gt; StkPtnOrd
5<->OrderedPartitionStackZero(n, h) <->text650.htm#7372<->OrderedPartitionStackZero(n, h) : RngIntElt, RngIntElt -&gt; StkPtnOrd
3<->OPS-create :<->text650.htm#7370<->OPS-create :: Construction of Ordered Partition Stacks (PERMUTATION GROUPS)
3<->OPS-get-info :<->text650.htm#7373<->OPS-get-info :: Properties of Ordered Partition  Stacks (PERMUTATION GROUPS)
5<->Degree(P) <->text650.htm#7374<->Degree(P) : StkPtnOrd -&gt; RngIntElt
5<->Height(P) <->text650.htm#7375<->Height(P) : StkPtnOrd -&gt; RngIntElt
5<->NumberOfCells(P) <->text650.htm#7376<->NumberOfCells(P) : StkPtnOrd -> RngIntElt
5<->NumberOfCells(P, h) <->text650.htm#7376<->NumberOfCells(P, h) : StkPtnOrd, RngIntElt -&gt; RngIntElt
5<->CellNumber(P, x) <->text650.htm#7377<->CellNumber(P, x) : StkPtnOrd, RngIntElt -> RngIntElt
5<->CellNumber(P, h, x) <->text650.htm#7377<->CellNumber(P, h, x) : StkPtnOrd, RngIntElt, RngIntElt -&gt; RngIntElt
5<->CellSize(P, i) <->text650.htm#7378<->CellSize(P, i) : StkPtnOrd, RngIntElt -> RngIntElt
5<->CellSize(P, h, i) <->text650.htm#7378<->CellSize(P, h, i) : StkPtnOrd, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Cell(P, i) <->text650.htm#7379<->Cell(P, i) : StkPtnOrd, RngIntElt -> SeqEnum
5<->Cell(P, h, i)<->text650.htm#7379<->Cell(P, h, i):  StkPtnOrd, RngIntElt, RngIntElt -&gt; SeqEnum
5<->Random(P, i) <->text650.htm#7380<->Random(P, i) : StkPtnOrd, RngIntElt -&gt; RngIntElt
5<->Representative(P, i) <->text650.htm#7381<->Representative(P, i) : StkPtnOrd, RngIntElt -&gt; RngIntElt
5<->ParentCell(P, i) <->text650.htm#7382<->ParentCell(P, i) : StkPtnOrd, RngIntElt -&gt; RngIntElt
3<->OPS-get-info :<->text650.htm#7373<->OPS-get-info :: Properties of Ordered Partition  Stacks (PERMUTATION GROUPS)
3<->OPS-ops :<->text650.htm#7383<->OPS-ops :: Operations on Ordered Partition Stacks (PERMUTATION GROUPS)
5<->SplitCell(P, i, Q) <->text650.htm#7384<->SplitCell(P, i, Q) : StkPtnOrd, RngIntElt, SeqEnum[RngIntElt] -> BoolElt
5<->SplitCell(P, i, x) <->text650.htm#7384<->SplitCell(P, i, x) : StkPtnOrd, RngIntElt, RngIntElt -&gt; BoolElt
5<->SplitAllByValues(P, V) <->text650.htm#7385<->SplitAllByValues(P, V) : StkPtnOrd, SeqEnum[RngIntElt] -&gt; BoolElt, RngIntElt
5<->SplitCellsByValues(P, i, V) <->text650.htm#7386<->SplitCellsByValues(P, i, V) : StkPtnOrd, RngIntElt, SeqEnum[RngIntElt] -> BoolElt, RngIntElt
5<->SplitCellsByValues(P, C, V) <->text650.htm#7386<->SplitCellsByValues(P, C, V) : StkPtnOrd, SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; BoolElt, RngIntElt
5<->Pop(P, h) <->text650.htm#7387<->Pop(P, h) : StkPtnOrd, RngIntElt ->
5<->Pop(P) <->text650.htm#7387<->Pop(P) : StkPtnOrd -&gt;
5<->Advance(X, L, P, h) <->text650.htm#7388<->Advance(X, L, P, h) : StkPtnOrd, seqEnum[RngIntElt], StkPtnOrd, RngIntElt -&gt;
4<->GrpPerm_OrderedPartitionStack (Example H63E44)<->text650.htm#7389<->GrpPerm_OrderedPartitionStack (Example H63E44)
4<->Example-OrderedPartitionStack :<->text650.htm#7389<->Example-OrderedPartitionStack :: GrpPerm_OrderedPartitionStack (Example H63E44)
3<->OPS-ops :<->text650.htm#7383<->OPS-ops :: Operations on Ordered Partition Stacks (PERMUTATION GROUPS)
3<->ordered-partn-stack :<->text650.htm<->ordered-partn-stack :: Ordered Partition Stacks (PERMUTATION GROUPS)
3<->permutation :<->text629.htm<->permutation :: PERMUTATION GROUPS
3<->matrix :<->text653.htm<->matrix :: MATRIX GROUPS OVER GENERAL RINGS
3<->introduction :<->text654.htm<->introduction :: Introduction (MATRIX GROUPS OVER GENERAL RINGS)
3<->restriction :<->text654.htm#7394<->restriction :: Introduction to Matrix Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->support :<->text654.htm#7395<->support :: The Support (MATRIX GROUPS OVER GENERAL RINGS)
3<->GrpMat :<->text654.htm#7396<->GrpMat :: The Category of Matrix Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->category :<->text654.htm#7396<->category :: The Category of Matrix Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->creation :<->text654.htm#7397<->creation :: The Construction of a Matrix Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->introduction :<->text654.htm<->introduction :: Introduction (MATRIX GROUPS OVER GENERAL RINGS)
3<->creation-general-linear-group :<->text655.htm<->creation-general-linear-group :: Creation of a Matrix Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->magma :<->text655.htm#7399<->magma :: Construction of the General Linear Group (MATRIX GROUPS OVER GENERAL RINGS)
5<->GL :: GeneralLinearGroup(n, R) <->text655.htm#7400<->GL :: GeneralLinearGroup(n, R) : RngIntElt, Rng -&gt; GrpMat
5<->GeneralLinearGroup(n, R) <->text655.htm#7400<->GeneralLinearGroup(n, R) : RngIntElt, Rng -&gt; GrpMat
4<->GrpMatGen_Create (Example H64E1)<->text655.htm#7401<->GrpMatGen_Create (Example H64E1)
4<->Example-Create :<->text655.htm#7401<->Example-Create :: GrpMatGen_Create (Example H64E1)
3<->magma :<->text655.htm#7399<->magma :: Construction of the General Linear Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->element :<->text655.htm#7402<->element :: Construction of a Matrix Group Element (MATRIX GROUPS OVER GENERAL RINGS)
5<->elt< G | L > <->text655.htm#7403<->elt&lt; G | L &gt; : GrpMat, List(RngElt) -&gt; GrpMatElt
5<->G ! Q <->text655.htm#7404<->G ! Q : GrpMat, [ RngElt ] -&gt; GrpMatElt
5<->Eltseq :: ElementToSequence(g) <->text655.htm#7405<->Eltseq :: ElementToSequence(g) : GrpMatElt -&gt; [ RngElt ]
5<->ElementToSequence(g) <->text655.htm#7405<->ElementToSequence(g) : GrpMatElt -&gt; [ RngElt ]
5<->Identity(G) <->text655.htm#7406<->Identity(G) : GrpMat -&gt; GrpMatElt
5<->! :: Identity(G) <->text655.htm#7406<->! :: Identity(G) : GrpMat -&gt; GrpMatElt
5<->Identity(G) <->text655.htm#7406<->Identity(G) : GrpMat -&gt; GrpMatElt
4<->GrpMatGen_Matrices (Example H64E2)<->text655.htm#7407<->GrpMatGen_Matrices (Example H64E2)
4<->Example-Matrices :<->text655.htm#7407<->Example-Matrices :: GrpMatGen_Matrices (Example H64E2)
3<->element :<->text655.htm#7402<->element :: Construction of a Matrix Group Element (MATRIX GROUPS OVER GENERAL RINGS)
3<->creation-general-matrix-group :<->text655.htm#7408<->creation-general-matrix-group :: Construction of a General Matrix  Group (MATRIX GROUPS OVER GENERAL RINGS)
5<->MatrixGroup< n, R | L > <->text655.htm#7409<->MatrixGroup&lt; n, R | L &gt; : RngIntElt, Rng, List -&gt; GrpMat
4<->GrpMatGen_Constructor (Example H64E3)<->text655.htm#7410<->GrpMatGen_Constructor (Example H64E3)
4<->Example-Constructor :<->text655.htm#7410<->Example-Constructor :: GrpMatGen_Constructor (Example H64E3)
4<->GrpMatGen_GLSylow (Example H64E4)<->text655.htm#7411<->GrpMatGen_GLSylow (Example H64E4)
4<->Example-GLSylow :<->text655.htm#7411<->Example-GLSylow :: GrpMatGen_GLSylow (Example H64E4)
3<->creation-general-matrix-group :<->text655.htm#7408<->creation-general-matrix-group :: Construction of a General Matrix  Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->change-ring :<->text655.htm#7412<->change-ring :: Changing Rings (MATRIX GROUPS OVER GENERAL RINGS)
5<->ChangeRing(G, S) <->text655.htm#7413<->ChangeRing(G, S) : GrpMat, Rng -&gt; GrpMat, Map
5<->ChangeRing(G, S, f) <->text655.htm#7414<->ChangeRing(G, S, f) : GrpMat, Rng, Map -&gt; GrpMat, Map
5<->RestrictField(G, S) <->text655.htm#7415<->RestrictField(G, S) : GrpMat, FldFin -&gt; GrpMat, Map
5<->ExtendField(G, L) <->text655.htm#7416<->ExtendField(G, L) : GrpMat, FldFin -&gt; GrpMat, Map
3<->change-ring :<->text655.htm#7412<->change-ring :: Changing Rings (MATRIX GROUPS OVER GENERAL RINGS)
3<->coercion :<->text655.htm#7417<->coercion :: Coercion between Matrix Structures (MATRIX GROUPS OVER GENERAL RINGS)
5<->R ! g <->text655.htm#7418<->R ! g : AlgMat, GrpMatElt -&gt; RngMatElt
5<->G ! r <->text655.htm#7419<->G ! r : GrpMat, AlgMatElt -&gt; GrpMatElt
5<->M ! g <->text655.htm#7420<->M ! g : ModMatRng, GrpMatElt -&gt; ModMatRngElt
5<->G ! m <->text655.htm#7421<->G ! m : GrpMat, ModMatRngElt -&gt; GrpMatElt
3<->coercion :<->text655.htm#7417<->coercion :: Coercion between Matrix Structures (MATRIX GROUPS OVER GENERAL RINGS)
3<->access :<->text655.htm#7422<->access :: Accessing Associated Structures (MATRIX GROUPS OVER GENERAL RINGS)
5<->G . i <->text655.htm#7423<->G . i : GrpMat, RngIntElt -&gt; GrpMatElt
5<->Degree(G) <->text655.htm#7424<->Degree(G) : GrpMat -&gt; RngIntElt
5<->Generators(G) <->text655.htm#7425<->Generators(G) : GrpMat -&gt; { GrpMatElt }
5<->Ngens :: NumberOfGenerators(G) <->text655.htm#7426<->Ngens :: NumberOfGenerators(G) : GrpMat -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text655.htm#7426<->NumberOfGenerators(G) : GrpMat -&gt; RngIntElt
5<->BaseRing :: CoefficientRing(G) <->text655.htm#7427<->BaseRing :: CoefficientRing(G) : GrpMat -&gt; Rng
5<->CoefficientRing(G) <->text655.htm#7427<->CoefficientRing(G) : GrpMat -&gt; Rng
5<->RSpace(G) <->text655.htm#7428<->RSpace(G) : GrpMat -&gt; ModTupRng
5<->VectorSpace(G) <->text655.htm#7429<->VectorSpace(G) : GrpMat -&gt; ModTupFld
5<->GModule(G) <->text655.htm#7430<->GModule(G) : GrpMat -&gt; ModGrp
5<->Generic(G) <->text655.htm#7431<->Generic(G) : GrpMat -&gt; GrpMat
5<->Parent(G) <->text655.htm#7432<->Parent(G) : GrpMatElt -&gt; GrpMat
3<->access :<->text655.htm#7422<->access :: Accessing Associated Structures (MATRIX GROUPS OVER GENERAL RINGS)
3<->creation-general-linear-group :<->text655.htm<->creation-general-linear-group :: Creation of a Matrix Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->homomorphism :<->text656.htm<->homomorphism :: Homomorphisms (MATRIX GROUPS OVER GENERAL RINGS)
5<->hom<G -> H | L> <->text656.htm#7434<->hom&lt;G -&gt; H | L&gt; : GrpMat, Grp, List -&gt; Map
5<->Domain(f) <->text656.htm#7435<->Domain(f) : Map -&gt; Grp
5<->Codomain(f) <->text656.htm#7436<->Codomain(f) : Map -&gt; Grp
5<->Image(f) <->text656.htm#7437<->Image(f) : Map -&gt; Grp
5<->Kernel(f) <->text656.htm#7438<->Kernel(f) : Map -&gt; Grp
5<->IsHomomorphism(G, H, Q) <->text656.htm#7439<->IsHomomorphism(G, H, Q) : GrpMat, GrpMat, SeqEnum[GrpMatElt] -&gt; Bool, Map
4<->GrpMatGen_Homomorphism (Example H64E5)<->text656.htm#7440<->GrpMatGen_Homomorphism (Example H64E5)
4<->Example-Homomorphism :<->text656.htm#7440<->Example-Homomorphism :: GrpMatGen_Homomorphism (Example H64E5)
3<->extension :<->text656.htm#7441<->extension :: Construction of Extensions (MATRIX GROUPS OVER GENERAL RINGS)
5<->DirectProduct(G, H) <->text656.htm#7442<->DirectProduct(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->DirectProduct(Q) <->text656.htm#7443<->DirectProduct(Q) : [ GrpMat ] -&gt; GrpMat
5<->SemiLinearGroup(G, S) <->text656.htm#7444<->SemiLinearGroup(G, S) : GrpMat, FldFin -&gt; GrpMat
5<->TensorWreathProduct(G, H) <->text656.htm#7445<->TensorWreathProduct(G, H) : GrpMat, GrpPerm -&gt; GrpMat
5<->WreathProduct(G, H) <->text656.htm#7446<->WreathProduct(G, H) : GrpMat, GrpPerm -&gt; GrpMat
4<->GrpMatGen_Constructions (Example H64E6)<->text656.htm#7447<->GrpMatGen_Constructions (Example H64E6)
4<->Example-Constructions :<->text656.htm#7447<->Example-Constructions :: GrpMatGen_Constructions (Example H64E6)
3<->extension :<->text656.htm#7441<->extension :: Construction of Extensions (MATRIX GROUPS OVER GENERAL RINGS)
3<->homomorphism :<->text656.htm<->homomorphism :: Homomorphisms (MATRIX GROUPS OVER GENERAL RINGS)
3<->operation-element :<->text657.htm<->operation-element :: Operations on Matrices (MATRIX GROUPS OVER GENERAL RINGS)
3<->arithmetic :<->text657.htm#7449<->arithmetic :: Arithmetic with Matrices (MATRIX GROUPS OVER GENERAL RINGS)
5<->g * h <->text657.htm#7450<->g * h : GrpMatElt, GrpMatElt -&gt; GrpMatElt
5<->g ^ n <->text657.htm#7451<->g ^ n : GrpMatElt, RngIntElt -&gt; GrpMatElt
5<->g / h <->text657.htm#7452<->g / h : GrpMatElt, GrpMatElt -&gt; GrpMatElt
5<->g ^ h <->text657.htm#7453<->g ^ h : GrpMatElt, GrpMatElt -&gt; GrpMatElt
5<->(,) :: (g, h) <->text657.htm#7454<->(,) :: (g, h) : GrpMatElt, GrpMatElt -&gt; GrpMatElt
5<->(,,) :: (g1, ..., gr) <->text657.htm#7455<->(,,) :: (g<sub>1</sub>, ..., g<sub>r</sub>) : GrpMatElt, ..., GrpMatElt -&gt; GrpMatElt
4<->GrpMatGen_Arithmetic (Example H64E7)<->text657.htm#7456<->GrpMatGen_Arithmetic (Example H64E7)
4<->Example-Arithmetic :<->text657.htm#7456<->Example-Arithmetic :: GrpMatGen_Arithmetic (Example H64E7)
3<->arithmetic :<->text657.htm#7449<->arithmetic :: Arithmetic with Matrices (MATRIX GROUPS OVER GENERAL RINGS)
3<->Boolean :<->text657.htm#7457<->Boolean :: Predicates for Matrices (MATRIX GROUPS OVER GENERAL RINGS)
5<->g eq h <->text657.htm#7458<->g eq h : GrpMatElt, GrpMatElt -&gt; BoolElt
5<->g ne h <->text657.htm#7459<->g ne h : GrpMatElt, GrpMatElt -&gt; BoolElt
5<->IsIdentity(g) <->text657.htm#7460<->IsIdentity(g) : GrpMatElt -&gt; BoolElt
5<->IsScalar(g) <->text657.htm#7461<->IsScalar(g) : GrpMatElt -&gt; BoolElt
3<->Boolean :<->text657.htm#7457<->Boolean :: Predicates for Matrices (MATRIX GROUPS OVER GENERAL RINGS)
3<->invariant :<->text657.htm#7462<->invariant :: Matrix Invariants (MATRIX GROUPS OVER GENERAL RINGS)
5<->Degree(g) <->text657.htm#7463<->Degree(g) : GrpMatElt -&gt; RngIntElt
5<->HasFiniteOrder(g) <->text657.htm#7464<->HasFiniteOrder(g) : GrpMatElt -&gt; BoolElt, RngIntElt
5<->Order(g) <->text657.htm#7465<->Order(g) : GrpMatElt -&gt; RngIntElt, BoolElt
5<->FactoredOrder(g) <->text657.htm#7466<->FactoredOrder(g) : GrpMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ], BoolElt
5<->ProjectiveOrder(g) <->text657.htm#7467<->ProjectiveOrder(g) : GrpMatElt -&gt; RngIntElt, RngElt
5<->FactoredProjectiveOrder(A) <->text657.htm#7468<->FactoredProjectiveOrder(A) : AlgMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ], RngElt
5<->CentralOrder(g) <->text657.htm#7469<->CentralOrder(g) : GrpPermElt -> RngIntElt
5<->CentralOrder(g : parameters) <->text657.htm#7469<->CentralOrder(g : parameters) : GrpMatElt -&gt; RngIntElt, BoolElt
5<->Determinant(g) <->text657.htm#7470<->Determinant(g) : GrpMatElt -&gt; RngElt
5<->Trace(g) <->text657.htm#7471<->Trace(g) : GrpMatElt -&gt; RngElt
5<->CharacteristicPolynomial(g: parameters) <->text657.htm#7472<->CharacteristicPolynomial(g: parameters) : GrpMatElt -&gt; RngPolElt
5<->MinimalPolynomial(g) <->text657.htm#7473<->MinimalPolynomial(g) : GrpMatElt -&gt; RngPolElt
4<->GrpMatGen_Invariants (Example H64E8)<->text657.htm#7474<->GrpMatGen_Invariants (Example H64E8)
4<->Example-Invariants :<->text657.htm#7474<->Example-Invariants :: GrpMatGen_Invariants (Example H64E8)
3<->invariant :<->text657.htm#7462<->invariant :: Matrix Invariants (MATRIX GROUPS OVER GENERAL RINGS)
3<->operation-element :<->text657.htm<->operation-element :: Operations on Matrices (MATRIX GROUPS OVER GENERAL RINGS)
3<->global-properties :<->text658.htm<->global-properties :: Global Properties (MATRIX GROUPS OVER GENERAL RINGS)
3<->group-order :<->text658.htm#7476<->group-order :: Group Order (MATRIX GROUPS OVER GENERAL RINGS)
5<->IsFinite(G) <->text658.htm#7477<->IsFinite(G) : GrpMat -&gt; Bool, RngIntElt
5<-># :: Order(G) <->text658.htm#7478<-># :: Order(G) : GrpMat -&gt; RngIntElt
5<->Order(G) <->text658.htm#7478<->Order(G) : GrpMat -&gt; RngIntElt
5<->FactoredOrder(G) <->text658.htm#7479<->FactoredOrder(G) : GrpMat -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
4<->GrpMatGen_Order (Example H64E9)<->text658.htm#7480<->GrpMatGen_Order (Example H64E9)
4<->Example-Order :<->text658.htm#7480<->Example-Order :: GrpMatGen_Order (Example H64E9)
3<->group-order :<->text658.htm#7476<->group-order :: Group Order (MATRIX GROUPS OVER GENERAL RINGS)
3<->Boolean :<->text658.htm#7481<->Boolean :: Membership and Equality (MATRIX GROUPS OVER GENERAL RINGS)
5<->g in G <->text658.htm#7482<->g in G : GrpMatElt, GrpMat -&gt; BoolElt
5<->g notin G <->text658.htm#7483<->g notin G : GrpMatElt, GrpMat -&gt; BoolElt
5<->S subset G <->text658.htm#7484<->S subset G : { GrpMatElt }, GrpMat -&gt; BoolElt
5<->H subset G <->text658.htm#7485<->H subset G : GrpMat, GrpMat -&gt; BoolElt
5<->S notsubset G <->text658.htm#7486<->S notsubset G : { GrpMatElt }, GrpMat -&gt; BoolElt
5<->H notsubset G <->text658.htm#7487<->H notsubset G : GrpMat, GrpMat -&gt; BoolElt
5<->H eq G <->text658.htm#7488<->H eq G : GrpMat, GrpMat -&gt; BoolElt
5<->H ne G <->text658.htm#7489<->H ne G : GrpMat, GrpMat -&gt; BoolElt
3<->Boolean :<->text658.htm#7481<->Boolean :: Membership and Equality (MATRIX GROUPS OVER GENERAL RINGS)
3<->set :<->text658.htm#7490<->set :: Set Operations (MATRIX GROUPS OVER GENERAL RINGS)
5<->NumberingMap(G) <->text658.htm#7491<->NumberingMap(G) : GrpMat -&gt; Map
5<->RandomProcess(G) <->text658.htm#7492<->RandomProcess(G) : GrpMat -&gt; Process
5<->Random(G: parameters) <->text658.htm#7493<->Random(G: parameters) : GrpMat -&gt; GrpMatElt
5<->Random(P) <->text658.htm#7494<->Random(P) : Process -&gt; GrpMatElt
4<->GrpMatGen_Random (Example H64E10)<->text658.htm#7495<->GrpMatGen_Random (Example H64E10)
4<->Example-Random :<->text658.htm#7495<->Example-Random :: GrpMatGen_Random (Example H64E10)
3<->set :<->text658.htm#7490<->set :: Set Operations (MATRIX GROUPS OVER GENERAL RINGS)
3<->global-properties :<->text658.htm<->global-properties :: Global Properties (MATRIX GROUPS OVER GENERAL RINGS)
3<->abstract-group :<->text659.htm<->abstract-group :: Abstract Group Predicates (MATRIX GROUPS OVER GENERAL RINGS)
5<->IsAbelian(G) <->text659.htm#7497<->IsAbelian(G) : GrpMat -&gt; BoolElt
5<->IsCyclic(G) <->text659.htm#7498<->IsCyclic(G) : GrpMat -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text659.htm#7499<->IsElementaryAbelian(G) : GrpMat -&gt; BoolElt
5<->IsNilpotent(G) <->text659.htm#7500<->IsNilpotent(G) : GrpMat -&gt; BoolElt
5<->IsSolvable :: IsSoluble(G) <->text659.htm#7501<->IsSolvable :: IsSoluble(G) : GrpMat -&gt; BoolElt
5<->IsSoluble(G) <->text659.htm#7501<->IsSoluble(G) : GrpMat -&gt; BoolElt
5<->IsPerfect(G) <->text659.htm#7502<->IsPerfect(G) : GrpMat -&gt; BoolElt
5<->IsSimple(G) <->text659.htm#7503<->IsSimple(G) : GrpMat -&gt; BoolElt
4<->GrpMatGen_Order (Example H64E11)<->text659.htm#7504<->GrpMatGen_Order (Example H64E11)
4<->Example-Order :<->text659.htm#7504<->Example-Order :: GrpMatGen_Order (Example H64E11)
3<->abstract-group :<->text659.htm<->abstract-group :: Abstract Group Predicates (MATRIX GROUPS OVER GENERAL RINGS)
3<->conjugate :<->text660.htm<->conjugate :: Conjugacy (MATRIX GROUPS OVER GENERAL RINGS)
5<->Conjugates :: Class(H, x) <->text660.htm#7506<->Conjugates :: Class(H, x) : GrpMat, GrpMatElt -&gt; { GrpMatElt }
5<->Class(H, x) <->text660.htm#7506<->Class(H, x) : GrpMat, GrpMatElt -&gt; { GrpMatElt }
5<->ClassMap(G) <->text660.htm#7507<->ClassMap(G) : GrpMat -&gt; Map
5<->ConjugacyClasses(G: parameters) <->text660.htm#7508<->ConjugacyClasses(G: parameters) : GrpMat -&gt; [ &lt; RngIntElt, RngIntElt, GrpMatElt &gt; ]
5<->ClassRepresentative(G, i) <->text660.htm#7509<->ClassRepresentative(G, i) : GrpMat, RngIntElt -> GrpMatElt
5<->ClassRepresentative(G, x) <->text660.htm#7509<->ClassRepresentative(G, x) : GrpMat, GrpMatElt -&gt; GrpMatElt
5<->ClassCentralizer :: ClassCentraliser(G, i) <->text660.htm#7510<->ClassCentralizer :: ClassCentraliser(G, i) : GrpMat, RngIntElt -&gt; GrpMat
5<->ClassCentraliser(G, i) <->text660.htm#7510<->ClassCentraliser(G, i) : GrpMat, RngIntElt -&gt; GrpMat
5<->ClassRepresentativeFromInvariants(G, p, h, t) <->text660.htm#7511<->ClassRepresentativeFromInvariants(G, p, h, t) : GrpMat, SeqEnum, SeqEnum, FldFinElt -&gt; GrpMatElt
5<->IsConjugate(G, g, h) <->text660.htm#7512<->IsConjugate(G, g, h) : GrpMat, GrpMatElt, GrpMatElt -&gt; BoolElt, GrpMatElt | Unass
5<->IsConjugate(G, H, K) <->text660.htm#7513<->IsConjugate(G, H, K) : GrpMat, GrpMat, GrpMat -&gt; BoolElt, GrpMatElt | Unass
5<->IsGLConjugate(H, K) <->text660.htm#7514<->IsGLConjugate(H, K) : GrpMat, GrpMat -&gt; BoolElt, GrpMatElt | Unass
5<->Exponent(G) <->text660.htm#7515<->Exponent(G) : GrpMat -&gt; RngIntElt
5<->Nclasses :: NumberOfClasses(G) <->text660.htm#7516<->Nclasses :: NumberOfClasses(G) : GrpMat -&gt; RngIntElt
5<->NumberOfClasses(G) <->text660.htm#7516<->NumberOfClasses(G) : GrpMat -&gt; RngIntElt
5<->PowerMap(G) <->text660.htm#7517<->PowerMap(G) : GrpMat -&gt; Map
5<->AssertAttribute(G, "Classes", Q) <->text660.htm#7518<->AssertAttribute(G, "Classes", Q) : GrpMat, MonStgElt, SeqEnum -&gt;
4<->GrpMatGen_RationalMatrixGroupDatabase (Example H64E12)<->text660.htm#7519<->GrpMatGen_RationalMatrixGroupDatabase (Example H64E12)
4<->Example-RationalMatrixGroupDatabase :<->text660.htm#7519<->Example-RationalMatrixGroupDatabase :: GrpMatGen_RationalMatrixGroupDatabase (Example H64E12)
3<->classical-groups :<->text660.htm#7520<->classical-groups :: Conjugacy in Classical Groups (MATRIX GROUPS OVER GENERAL RINGS)
5<->DualPolynomial(f) <->text660.htm#7521<->DualPolynomial(f) : RngUPolElt -&gt; RngUPolElt
5<->StarIredduciblePolynomials(F,d) <->text660.htm#7522<->StarIredduciblePolynomials(F,d) : FldFin, RngIntElt -&gt; SeqEnum
5<->RepresentativeMatrixSp(inv) <->text660.htm#7523<->RepresentativeMatrixSp(inv) : SetIndx[Tup] -&gt; GrpMatElt
5<->ConjugacyInvariantSp(g) <->text660.htm#7524<->ConjugacyInvariantSp(g) : GrpMatElt -&gt; SetIndx[Tup]
4<->GrpMatGen_ccinvariant (Example H64E13)<->text660.htm#7525<->GrpMatGen_ccinvariant (Example H64E13)
4<->Example-ccinvariant :<->text660.htm#7525<->Example-ccinvariant :: GrpMatGen_ccinvariant (Example H64E13)
4<->GrpMatGen_conjtest (Example H64E14)<->text660.htm#7526<->GrpMatGen_conjtest (Example H64E14)
4<->Example-conjtest :<->text660.htm#7526<->Example-conjtest :: GrpMatGen_conjtest (Example H64E14)
5<->ClassInvariantsSp(d,q) <->text660.htm#7527<->ClassInvariantsSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->CentraliserOrderSp(inv) <->text660.htm#7528<->CentraliserOrderSp(inv) : SetIndx[Tup] -&gt; RngIntElt
5<->ClassesSp(d,q) <->text660.htm#7529<->ClassesSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassRepresentativesSp(d,q) <->text660.htm#7530<->ClassRepresentativesSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum
5<->PhiDual(f,phi) <->text660.htm#7531<->PhiDual(f,phi) : RngUPolElt -&gt; RngUPolElt
5<->PhiIredduciblePolynomials(F,d) <->text660.htm#7532<->PhiIredduciblePolynomials(F,d) : FldFin, RngIntElt -&gt; SeqEnum[Tup]
5<->RepresentativeMatrixCSp(inv) <->text660.htm#7533<->RepresentativeMatrixCSp(inv) : SetIndx[Tup] -&gt; GrpMatElt
5<->ConjugacyInvariantCSp(g) <->text660.htm#7534<->ConjugacyInvariantCSp(g) : GrpMatElt -&gt; SetIndx[Tup]
5<->ClassInvariantsCSp(d,q) <->text660.htm#7535<->ClassInvariantsCSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->CentraliserOrderCSp(inv) <->text660.htm#7536<->CentraliserOrderCSp(inv) : SetIndx[Tup] -&gt; RngIntElt
5<->ClassesCSp(d,q) <->text660.htm#7537<->ClassesCSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassRepresentativesCSp(d,q) <->text660.htm#7538<->ClassRepresentativesCSp(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum,SeqEnum
5<->ExtendedSp :: ExtendedSymplecticGroup(n,q,m) <->text660.htm#7539<->ExtendedSp :: ExtendedSymplecticGroup(n,q,m) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat
5<->ExtendedSymplecticGroup(n,q,m) <->text660.htm#7539<->ExtendedSymplecticGroup(n,q,m) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat
5<->IndexOfSp(G) <->text660.htm#7540<->IndexOfSp(G) : GrpMat -&gt; RngIntElt
5<->ClassInvariantsExtSp(n,q,m) <->text660.htm#7541<->ClassInvariantsExtSp(n,q,m) : RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassRepresentativesExtSp(n,q,m) <->text660.htm#7542<->ClassRepresentativesExtSp(n,q,m) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum
5<->ClassesExtSp(n,q,m) <->text660.htm#7543<->ClassesExtSp(n,q,m) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->RepresentativeMatrixO(inv) <->text660.htm#7544<->RepresentativeMatrixO(inv) : SetIndx[Tup] -&gt; GrpMatElt
5<->ConjugacyInvariantO(g) <->text660.htm#7545<->ConjugacyInvariantO(g) : GrpMatElt -&gt; SetIndx[Tup]
5<->ClassInvariantsGO(d,q) <->text660.htm#7546<->ClassInvariantsGO(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassInvariantsGOPlus(d,q) <->text660.htm#7547<->ClassInvariantsGOPlus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassInvariantsGOMinus(d,q) <->text660.htm#7548<->ClassInvariantsGOMinus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->CentraliserOrderO(inv) <->text660.htm#7549<->CentraliserOrderO(inv) : SetIndx[Tup] -&gt; RngIntElt
5<->ClassesGO(d,q) <->text660.htm#7550<->ClassesGO(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassesGOPlus(d,q) <->text660.htm#7551<->ClassesGOPlus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassesGOMinus(d,q) <->text660.htm#7552<->ClassesGOMinus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ClassRepresentativesGO(d,q) <->text660.htm#7553<->ClassRepresentativesGO(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum
5<->ClassRepresentativesGOPlus(d,q) <->text660.htm#7554<->ClassRepresentativesGOPlus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum
5<->ClassRepresentativesGOMinus(d,q) <->text660.htm#7555<->ClassRepresentativesGOMinus(d,q) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum
3<->classical-groups :<->text660.htm#7520<->classical-groups :: Conjugacy in Classical Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->conjugate :<->text660.htm<->conjugate :: Conjugacy (MATRIX GROUPS OVER GENERAL RINGS)
3<->subgroups :<->text661.htm<->subgroups :: Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->construction-subgroup :<->text661.htm#7557<->construction-subgroup :: Construction of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
5<->sub<G | L> <->text661.htm#7558<->sub&lt;G | L&gt; : GrpMat, List -&gt; GrpMat
5<->ncl<G | L> <->text661.htm#7559<->ncl&lt;G | L&gt; : GrpMat, List -&gt; GrpMat
4<->GrpMatGen_Subgroups (Example H64E15)<->text661.htm#7560<->GrpMatGen_Subgroups (Example H64E15)
4<->Example-Subgroups :<->text661.htm#7560<->Example-Subgroups :: GrpMatGen_Subgroups (Example H64E15)
3<->construction-subgroup :<->text661.htm#7557<->construction-subgroup :: Construction of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->subgroup-properties :<->text661.htm#7561<->subgroup-properties :: Elementary Properties of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
5<->Index(G, H) <->text661.htm#7562<->Index(G, H) : GrpMat, GrpMat -&gt; RngIntElt
5<->FactoredIndex(G, H) <->text661.htm#7563<->FactoredIndex(G, H) : GrpMat, GrpMat -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->IsCentral(G, H) <->text661.htm#7564<->IsCentral(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->IsMaximal(G, H) <->text661.htm#7565<->IsMaximal(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->IsNormal(G, H) <->text661.htm#7566<->IsNormal(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->IsSubnormal(G, H) <->text661.htm#7567<->IsSubnormal(G, H) : GrpMat, GrpMat -&gt; BoolElt
3<->subgroup-properties :<->text661.htm#7561<->subgroup-properties :: Elementary Properties of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->subgroup-constructions :<->text661.htm#7568<->subgroup-constructions :: Standard Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
5<->Conjugate :: H ^ g <->text661.htm#7569<->Conjugate :: H ^ g : GrpMat, GrpMatElt -&gt; GrpMat
5<->H ^ g <->text661.htm#7569<->H ^ g : GrpMat, GrpMatElt -&gt; GrpMat
5<->H meet K <->text661.htm#7570<->H meet K : GrpMat, GrpMat -&gt; GrpMat
5<->CommutatorSubgroup(H, K) <->text661.htm#7571<->CommutatorSubgroup(H, K) : GrpMat, GrpMat -> GrpMat
5<->CommutatorSubgroup(G, H, K) <->text661.htm#7571<->CommutatorSubgroup(G, H, K) : GrpMat, GrpMat, GrpMat -&gt; GrpMat
5<->Centralizer :: Centraliser(G, g) <->text661.htm#7572<->Centralizer :: Centraliser(G, g) : GrpMat, GrpMatElt -&gt; GrpMat
5<->Centraliser(G, g) <->text661.htm#7572<->Centraliser(G, g) : GrpMat, GrpMatElt -&gt; GrpMat
5<->Centralizer :: Centraliser(G, H) <->text661.htm#7573<->Centralizer :: Centraliser(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->Centraliser(G, H) <->text661.htm#7573<->Centraliser(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->Core(G, H) <->text661.htm#7574<->Core(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->NormalClosure :: H ^ G <->text661.htm#7575<->NormalClosure :: H ^ G : GrpMat, GrpMat -&gt; GrpMat
5<->H ^ G <->text661.htm#7575<->H ^ G : GrpMat, GrpMat -&gt; GrpMat
5<->Normalizer(G, H) <->text661.htm#7576<->Normalizer(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->SylowSubgroup(G, p) <->text661.htm#7577<->SylowSubgroup(G, p) : GrpMat, RngIntElt -&gt; GrpMat
5<->pCore(G, p) <->text661.htm#7578<->pCore(G, p) : GrpMat, RngIntElt -&gt; GrpMat
3<->subgroup-constructions :<->text661.htm#7568<->subgroup-constructions :: Standard Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->quotient :<->text661.htm#7579<->quotient :: Low Index Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
5<->LowIndexSubgroups(G,t$\colon$ \parameters) <->text661.htm#7580<->LowIndexSubgroups(G,t$\colon$ \parameters) : GrpMat, Tup -> SeqEnum
5<->LowIndexSubgroups(G,n: parameters) <->text661.htm#7580<->LowIndexSubgroups(G,n: parameters) : GrpMat, RngIntElt -&gt; SeqEnum
5<->LowIndexSubgroups(G, N, t$\colon$ \parameters) <->text661.htm#7581<->LowIndexSubgroups(G, N, t$\colon$ \parameters) : GrpMat, Tup -> SeqEnum
5<->LowIndexSubgroups(G, N, n: parameters) <->text661.htm#7581<->LowIndexSubgroups(G, N, n: parameters) : GrpMat, RngIntElt -&gt; SeqEnum
5<->LowIndexSubgroupsCT(G, R$\colon$ \parameters) <->text661.htm#7582<->LowIndexSubgroupsCT(G, R$\colon$ \parameters) : GrpMat, <RngIntElt, RngIntElt> -> [ GrpMat ]
5<->LowIndexSubgroupsCT(G, R : parameters) <->text661.htm#7582<->LowIndexSubgroupsCT(G, R : parameters) : GrpMat, RngIntElt -&gt; [ GrpMat ]
4<->GrpMatGen_LowIndexMatrixGroup (Example H64E16)<->text661.htm#7583<->GrpMatGen_LowIndexMatrixGroup (Example H64E16)
4<->Example-LowIndexMatrixGroup :<->text661.htm#7583<->Example-LowIndexMatrixGroup :: GrpMatGen_LowIndexMatrixGroup (Example H64E16)
3<->quotient :<->text661.htm#7579<->quotient :: Low Index Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->maximals :<->text661.htm#7584<->maximals :: Conjugacy Classes of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
5<->Subgroups :: SubgroupClasses(G: parameters) <->text661.htm#7585<->Subgroups :: SubgroupClasses(G: parameters) : GrpMat -&gt; [ rec&lt; GrpMat, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SubgroupClasses(G: parameters) <->text661.htm#7585<->SubgroupClasses(G: parameters) : GrpMat -&gt; [ rec&lt; GrpMat, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->MaximalSubgroups(G: parameters) <->text661.htm#7586<->MaximalSubgroups(G: parameters) : GrpMat -&gt; [ rec&lt; GrpMat, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->MaximalSubgroups(G,N: parameters) <->text661.htm#7587<->MaximalSubgroups(G,N: parameters) : GrpMat, GrpMat -&gt;                           [ rec&lt; GrpMat, RngIntElt, RngIntElt, GrpFP&gt; ]
5<->SubgroupsLift(G, A, B, Q: parameters) <->text661.htm#7588<->SubgroupsLift(G, A, B, Q: parameters) : GrpMat, GrpMat, GrpMat, SeqEnum -&gt; SeqEnum
3<->maximals :<->text661.htm#7584<->maximals :: Conjugacy Classes of Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->subgroups :<->text661.htm<->subgroups :: Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->quotient :<->text662.htm<->quotient :: Quotient Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->construction-quotient :<->text662.htm#7590<->construction-quotient :: Construction of Quotient Groups (MATRIX GROUPS OVER GENERAL RINGS)
5<->quo<G | L> <->text662.htm#7591<->quo&lt;G | L&gt; : GrpMat, List -&gt; GrpPerm, Map
5<->G / N <->text662.htm#7592<->G / N : GrpMat, GrpMat -&gt; GrpPerm
4<->GrpMatGen_Quotient (Example H64E17)<->text662.htm#7593<->GrpMatGen_Quotient (Example H64E17)
4<->Example-Quotient :<->text662.htm#7593<->Example-Quotient :: GrpMatGen_Quotient (Example H64E17)
3<->construction-quotient :<->text662.htm#7590<->construction-quotient :: Construction of Quotient Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->construction-special-quotient :<->text662.htm#7594<->construction-special-quotient :: Abelian, Nilpotent and Soluble Quotients (MATRIX GROUPS OVER GENERAL RINGS)
5<->AbelianQuotient(G) <->text662.htm#7595<->AbelianQuotient(G) : GrpMat -&gt; GrpAb, Map
5<->ElementaryAbelianQuotient(G, p) <->text662.htm#7596<->ElementaryAbelianQuotient(G, p) : GrpMat, RngIntElt -&gt; GrpAb, Map
5<->pQuotient(G, p, c) <->text662.htm#7597<->pQuotient(G, p, c) : GrpMat, RngIntElt, RngIntElt -&gt; GrpPC, Map, SeqEnum, BoolElt
5<->NilpotentQuotient(G, c) <->text662.htm#7598<->NilpotentQuotient(G, c) : GrpMat, RngIntElt -&gt; GrpGPC, Map
5<->SolubleQuotient :: SolvableQuotient(G)<->text662.htm#7599<->SolubleQuotient :: SolvableQuotient(G): GrpMat -&gt; GrpPC, Map
5<->SolvableQuotient(G)<->text662.htm#7599<->SolvableQuotient(G): GrpMat -&gt; GrpPC, Map
5<->PCGroup(G)<->text662.htm#7600<->PCGroup(G): GrpMat -&gt; GrpPC, Map
4<->GrpMatGen_SpecialQuotient (Example H64E18)<->text662.htm#7601<->GrpMatGen_SpecialQuotient (Example H64E18)
4<->Example-SpecialQuotient :<->text662.htm#7601<->Example-SpecialQuotient :: GrpMatGen_SpecialQuotient (Example H64E18)
3<->construction-special-quotient :<->text662.htm#7594<->construction-special-quotient :: Abelian, Nilpotent and Soluble Quotients (MATRIX GROUPS OVER GENERAL RINGS)
3<->quotient :<->text662.htm<->quotient :: Quotient Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->actions :<->text663.htm<->actions :: Matrix Group Actions (MATRIX GROUPS OVER GENERAL RINGS)
3<->image-orbit-stabilizer :<->text663.htm#7603<->image-orbit-stabilizer :: Orbits and Stabilizers (MATRIX GROUPS OVER GENERAL RINGS)
5<->u * g <->text663.htm#7604<->u * g : ModTupRngElt, GrpMatElt -&gt; ModTupRngElt
5<->y ^ g <->text663.htm#7605<->y ^ g : Elt, GrpMatElt -&gt; Elt
5<->Orbit :: y ^ G <->text663.htm#7606<->Orbit :: y ^ G : Elt, GrpMat -&gt; SetEnum
5<->y ^ G <->text663.htm#7606<->y ^ G : Elt, GrpMat -&gt; SetEnum
5<->OrbitBounded(G, y, b) <->text663.htm#7607<->OrbitBounded(G, y, b) : GrpMat, Elt, RngIntElt -&gt; BoolElt, SetEnum
5<->Orbits(G) <->text663.htm#7608<->Orbits(G) : GrpMat -&gt; [ SetIndx ]
5<->LineOrbits(G) <->text663.htm#7609<->LineOrbits(G) : GrpMat -&gt; [ SetIndx ]
5<->OrbitClosure(G, S) <->text663.htm#7610<->OrbitClosure(G, S) : GrpMat, { Elt } -&gt; GSet
5<->Stabilizer(G, y) <->text663.htm#7611<->Stabilizer(G, y) : GrpMat, Elt -&gt; GrpMat
4<->GrpMatGen_Orbits (Example H64E19)<->text663.htm#7612<->GrpMatGen_Orbits (Example H64E19)
4<->Example-Orbits :<->text663.htm#7612<->Example-Orbits :: GrpMatGen_Orbits (Example H64E19)
3<->image-orbit-stabilizer :<->text663.htm#7603<->image-orbit-stabilizer :: Orbits and Stabilizers (MATRIX GROUPS OVER GENERAL RINGS)
3<->image-orbit-stabilizer-large :<->text663.htm#7613<->image-orbit-stabilizer-large :: Orbit and Stabilizer Functions for Large Groups (MATRIX GROUPS OVER GENERAL RINGS)
5<->OrbitsOfSpaces(G, k) <->text663.htm#7614<->OrbitsOfSpaces(G, k) : GrpMat, RngIntElt -&gt; SeqEnum
5<->NumberOfFixedSpaces(x, s) <->text663.htm#7615<->NumberOfFixedSpaces(x, s) : AlgMatElt, RngIntElt ->  RngIntElt
5<->NumberOfFixedSpaces(x, s) <->text663.htm#7615<->NumberOfFixedSpaces(x, s) : GrpMatElt, RngIntElt -&gt;  RngIntElt
4<->GrpMatGen_OrbitsOfSpaces (Example H64E20)<->text663.htm#7616<->GrpMatGen_OrbitsOfSpaces (Example H64E20)
4<->Example-OrbitsOfSpaces :<->text663.htm#7616<->Example-OrbitsOfSpaces :: GrpMatGen_OrbitsOfSpaces (Example H64E20)
5<->EstimateOrbit(G, U: \parameters) <->text663.htm#7617<->EstimateOrbit(G, U: \parameters) : GrpMat, ModTupFld -> RngIntElt, RngIntElt, RngIntElt
5<->EstimateOrbit(G, v: parameters) <->text663.htm#7617<->EstimateOrbit(G, v: parameters) : GrpMat, ModTupFldElt -&gt; RngIntElt, RngIntElt, RngIntElt
5<->ApproximateStabiliser(G, A, U: parameters) <->text663.htm#7618<->ApproximateStabiliser(G, A, U: parameters) : GrpMat, GrpMat, ModTupFld -&gt; GrpMat, GrpMat, RngIntElt, RngIntElt, RngIntElt
4<->GrpMatGen_OrbitsOfSpaces (Example H64E21)<->text663.htm#7619<->GrpMatGen_OrbitsOfSpaces (Example H64E21)
4<->Example-OrbitsOfSpaces :<->text663.htm#7619<->Example-OrbitsOfSpaces :: GrpMatGen_OrbitsOfSpaces (Example H64E21)
5<->StabiliserOfSpaces(Q) <->text663.htm#7620<->StabiliserOfSpaces(Q) : SeqEnum -&gt; GrpMat, SeqEnum
4<->GrpMatGen_StabiliserOfSpaces (Example H64E22)<->text663.htm#7621<->GrpMatGen_StabiliserOfSpaces (Example H64E22)
4<->Example-StabiliserOfSpaces :<->text663.htm#7621<->Example-StabiliserOfSpaces :: GrpMatGen_StabiliserOfSpaces (Example H64E22)
5<->IsUnipotent(G) <->text663.htm#7622<->IsUnipotent(G) : GrpMat -&gt; BoolElt
5<->UnipotentStabiliser(G, U: parameters) <->text663.htm#7623<->UnipotentStabiliser(G, U: parameters) : GrpMat, ModTupFld -&gt; GrpMat, ModTupFld, GrpMatElt, GrpSLPElt
4<->GrpMatGen_UnipotentStabiliser (Example H64E23)<->text663.htm#7624<->GrpMatGen_UnipotentStabiliser (Example H64E23)
4<->Example-UnipotentStabiliser :<->text663.htm#7624<->Example-UnipotentStabiliser :: GrpMatGen_UnipotentStabiliser (Example H64E23)
3<->image-orbit-stabilizer-large :<->text663.htm#7613<->image-orbit-stabilizer-large :: Orbit and Stabilizer Functions for Large Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->orbit-action :<->text663.htm#7625<->orbit-action :: Action on Orbits (MATRIX GROUPS OVER GENERAL RINGS)
5<->OrbitAction(G, T) <->text663.htm#7626<->OrbitAction(G, T) : GrpMat, Elt -&gt; Hom(Grp), GrpPerm, GrpMat
5<->OrbitActionBounded(G, T, b) <->text663.htm#7627<->OrbitActionBounded(G, T, b) : GrpMat, Elt, RngIntElt -&gt; BoolElt, Hom(Grp), GrpPerm, GrpMat
5<->OrbitImage(G, T) <->text663.htm#7628<->OrbitImage(G, T) : GrpMat, Set -&gt; GrpPerm
5<->OrbitImageBounded(G, T, b) <->text663.htm#7629<->OrbitImageBounded(G, T, b) : GrpMat, Set, RngIntElt -&gt; BoolElt, GrpPerm
5<->OrbitKernel(G, T) <->text663.htm#7630<->OrbitKernel(G, T) : GrpMat, Set -&gt; GrpMat
5<->OrbitKernelBounded(G, T, b) <->text663.htm#7631<->OrbitKernelBounded(G, T, b) : GrpMat, Set, RngIntElt -&gt; BoolElt, GrpMat
4<->GrpMatGen_Actions (Example H64E24)<->text663.htm#7632<->GrpMatGen_Actions (Example H64E24)
4<->Example-Actions :<->text663.htm#7632<->Example-Actions :: GrpMatGen_Actions (Example H64E24)
3<->orbit-action :<->text663.htm#7625<->orbit-action :: Action on Orbits (MATRIX GROUPS OVER GENERAL RINGS)
3<->action-coset-spaces :<->text663.htm#7633<->action-coset-spaces :: Action on a Coset Space (MATRIX GROUPS OVER GENERAL RINGS)
5<->CosetAction(G, H) <->text663.htm#7634<->CosetAction(G, H) : GrpMat, GrpMat -&gt; Hom(Grp), GrpPerm, GrpMat
5<->CosetImage(G, H) <->text663.htm#7635<->CosetImage(G, H) : GrpMat, GrpMat -&gt; GrpPerm
5<->CosetKernel(G, H) <->text663.htm#7636<->CosetKernel(G, H) : GrpMat, GrpMat -&gt; GrpMat
4<->GrpMatGen_CosetAction (Example H64E25)<->text663.htm#7637<->GrpMatGen_CosetAction (Example H64E25)
4<->Example-CosetAction :<->text663.htm#7637<->Example-CosetAction :: GrpMatGen_CosetAction (Example H64E25)
3<->action-coset-spaces :<->text663.htm#7633<->action-coset-spaces :: Action on a Coset Space (MATRIX GROUPS OVER GENERAL RINGS)
3<->natural-module :<->text663.htm#7638<->natural-module :: Action on the Natural G-Module (MATRIX GROUPS OVER GENERAL RINGS)
5<->GModule(G) <->text663.htm#7639<->GModule(G) : GrpMat -&gt; ModGrp
5<->IsIrreducible(G) <->text663.htm#7640<->IsIrreducible(G) : GrpMat -&gt; BoolElt, ModGrp
5<->SubmoduleAction(G, S) <->text663.htm#7641<->SubmoduleAction(G, S) : GrpMat -&gt; Map, GrpMat
5<->SubmoduleImage(G, S) <->text663.htm#7642<->SubmoduleImage(G, S) : GrpMat -&gt; GrpMat
5<->QuotientModuleAction(G, S) <->text663.htm#7643<->QuotientModuleAction(G, S) : GrpMat -&gt; Map, GrpMat
5<->QuotientModuleImage(G, S) <->text663.htm#7644<->QuotientModuleImage(G, S) : GrpMat -&gt; GrpMat
5<->IsAbsolutelyIrreducible(G) <->text663.htm#7645<->IsAbsolutelyIrreducible(G) : GrpMat -&gt; BoolElt
5<->AbsoluteRepresentation(G) <->text663.htm#7646<->AbsoluteRepresentation(G) : GrpMat -&gt; GrpMat, Map
5<->MinimalField(G) <->text663.htm#7647<->MinimalField(G) : GrpMat -&gt; FldFin
3<->natural-module :<->text663.htm#7638<->natural-module :: Action on the Natural G-Module (MATRIX GROUPS OVER GENERAL RINGS)
3<->actions :<->text663.htm<->actions :: Matrix Group Actions (MATRIX GROUPS OVER GENERAL RINGS)
3<->characteristic-subgroup-normal-structure :<->text664.htm<->characteristic-subgroup-normal-structure :: Normal and Subnormal  Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->subgroup-series :<->text664.htm#7649<->subgroup-series :: Characteristic Subgroups and Subgroup Series (MATRIX GROUPS OVER GENERAL RINGS)
5<->Center :: Centre(G) <->text664.htm#7650<->Center :: Centre(G) : GrpMat -&gt; GrpMat
5<->Centre(G) <->text664.htm#7650<->Centre(G) : GrpMat -&gt; GrpMat
5<->DerivedLength(G) <->text664.htm#7651<->DerivedLength(G) : GrpMat -&gt; RngIntElt
5<->DerivedSeries(G) <->text664.htm#7652<->DerivedSeries(G) : GrpMat -&gt; [ GrpMat ]
5<->DerivedSubgroup :: CommutatorSubgroup(G) <->text664.htm#7653<->DerivedSubgroup :: CommutatorSubgroup(G) : GrpMat -&gt; GrpMat
5<->DerivedGroup :: CommutatorSubgroup(G) <->text664.htm#7653<->DerivedGroup :: CommutatorSubgroup(G) : GrpMat -&gt; GrpMat
5<->CommutatorSubgroup(G) <->text664.htm#7653<->CommutatorSubgroup(G) : GrpMat -&gt; GrpMat
5<->[Future release] FittingSubgroup(G) <->text664.htm#7654<->[Future release] FittingSubgroup(G) : GrpMat -&gt; GrpMat
5<->LowerCentralSeries(G) <->text664.htm#7655<->LowerCentralSeries(G) : GrpMat -&gt; [ GrpMat ]
5<->NilpotencyClass(G) <->text664.htm#7656<->NilpotencyClass(G) : GrpMat -&gt; RngIntElt
5<->NormalClosure :: H ^ G <->text664.htm#7657<->NormalClosure :: H ^ G : GrpMat -&gt; GrpMat
5<->H ^ G <->text664.htm#7657<->H ^ G : GrpMat -&gt; GrpMat
5<->SolvableResidual :: SolubleResidual(G) <->text664.htm#7658<->SolvableResidual :: SolubleResidual(G) : GrpMat -&gt; GrpMat
5<->SolubleResidual(G) <->text664.htm#7658<->SolubleResidual(G) : GrpMat -&gt; GrpMat
5<->SubnormalSeries(G, H) <->text664.htm#7659<->SubnormalSeries(G, H) : GrpMat, GrpMat -&gt; [ GrpMat ]
5<->UpperCentralSeries(G) <->text664.htm#7660<->UpperCentralSeries(G) : GrpMat -&gt; [ GrpMat ]
4<->GrpMatGen_Series (Example H64E26)<->text664.htm#7661<->GrpMatGen_Series (Example H64E26)
4<->Example-Series :<->text664.htm#7661<->Example-Series :: GrpMatGen_Series (Example H64E26)
3<->subgroup-series :<->text664.htm#7649<->subgroup-series :: Characteristic Subgroups and Subgroup Series (MATRIX GROUPS OVER GENERAL RINGS)
3<->soluble-radical :<->text664.htm#7662<->soluble-radical :: The Soluble Radical and its Quotient (MATRIX GROUPS OVER GENERAL RINGS)
5<->SolubleRadical :: Radical(G) <->text664.htm#7663<->SolubleRadical :: Radical(G) : GrpMat -&gt; GrpMat
5<->SolvableRadical :: Radical(G) <->text664.htm#7663<->SolvableRadical :: Radical(G) : GrpMat -&gt; GrpMat
5<->Radical(G) <->text664.htm#7663<->Radical(G) : GrpMat -&gt; GrpMat
5<->RadicalQuotient(G) <->text664.htm#7664<->RadicalQuotient(G) : GrpMat -&gt; GrpPerm, Hom(Grp), GrpMat
5<->ElementaryAbelianSeries(G: parameters) <->text664.htm#7665<->ElementaryAbelianSeries(G: parameters) : GrpMat -&gt; [ GrpMat ]
5<->ElementaryAbelianSeriesCanonical(G) <->text664.htm#7666<->ElementaryAbelianSeriesCanonical(G) : GrpMat -&gt; [ GrpMat ]
3<->soluble-radical :<->text664.htm#7662<->soluble-radical :: The Soluble Radical and its Quotient (MATRIX GROUPS OVER GENERAL RINGS)
3<->composition-factors :<->text664.htm#7667<->composition-factors :: Composition and Chief Factors (MATRIX GROUPS OVER GENERAL RINGS)
5<->CompositionFactors(G) <->text664.htm#7668<->CompositionFactors(G) : GrpMat -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->ChiefFactors(G) <->text664.htm#7669<->ChiefFactors(G) : GrpMat -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->ChiefSeries(G) <->text664.htm#7670<->ChiefSeries(G) : GrpMat -&gt; [ GrpMat ], [ &lt;RngIntElt, RngIntElt, RngIntElt, RngIntElt&gt; ]
4<->GrpMatGen_CompositionFactors (Example H64E27)<->text664.htm#7671<->GrpMatGen_CompositionFactors (Example H64E27)
4<->Example-CompositionFactors :<->text664.htm#7671<->Example-CompositionFactors :: GrpMatGen_CompositionFactors (Example H64E27)
3<->composition-factors :<->text664.htm#7667<->composition-factors :: Composition and Chief Factors (MATRIX GROUPS OVER GENERAL RINGS)
3<->characteristic-subgroup-normal-structure :<->text664.htm<->characteristic-subgroup-normal-structure :: Normal and Subnormal  Subgroups (MATRIX GROUPS OVER GENERAL RINGS)
3<->coset-table-transversal :<->text665.htm<->coset-table-transversal :: Coset Tables and Transversals (MATRIX GROUPS OVER GENERAL RINGS)
5<->CosetTable(G, H) <->text665.htm#7673<->CosetTable(G, H) : Grp, Grp -&gt; Hom(Grp)
5<->RightTransversal :: Transversal(G, H) <->text665.htm#7674<->RightTransversal :: Transversal(G, H) : GrpMat, GrpMat -&gt; {@ GrpMatElt  @}, Map
5<->Transversal(G, H) <->text665.htm#7674<->Transversal(G, H) : GrpMat, GrpMat -&gt; {@ GrpMatElt  @}, Map
3<->coset-table-transversal :<->text665.htm<->coset-table-transversal :: Coset Tables and Transversals (MATRIX GROUPS OVER GENERAL RINGS)
3<->finitely_presented_group :<->text666.htm<->finitely_presented_group :: Presentations (MATRIX GROUPS OVER GENERAL RINGS)
3<->presentation :<->text666.htm#7676<->presentation :: Presentations (MATRIX GROUPS OVER GENERAL RINGS)
5<->FPGroup(G) <->text666.htm#7677<->FPGroup(G) : GrpMat -&gt; GrpFP, Hom(Grp)
5<->FPGroupStrong(G) <->text666.htm#7678<->FPGroupStrong(G) : GrpMat -&gt; GrpFP, Hom(Grp)
3<->presentation :<->text666.htm#7676<->presentation :: Presentations (MATRIX GROUPS OVER GENERAL RINGS)
3<->matrices-words :<->text666.htm#7679<->matrices-words :: Matrices as Words (MATRIX GROUPS OVER GENERAL RINGS)
5<->WordGroup(G) <->text666.htm#7680<->WordGroup(G) : GrpMat -&gt; GrpSLP, Map
5<->InverseWordMap(G) <->text666.htm#7681<->InverseWordMap(G) : GrpMat -&gt; Map
3<->matrices-words :<->text666.htm#7679<->matrices-words :: Matrices as Words (MATRIX GROUPS OVER GENERAL RINGS)
3<->finitely_presented_group :<->text666.htm<->finitely_presented_group :: Presentations (MATRIX GROUPS OVER GENERAL RINGS)
3<->automorphisms :<->text667.htm<->automorphisms :: Automorphism Groups (MATRIX GROUPS OVER GENERAL RINGS)
5<->AutomorphismGroup(G: parameters) <->text667.htm#7683<->AutomorphismGroup(G: parameters) : GrpMat -&gt; GrpAuto
4<->GrpMatGen_Automorphisms (Example H64E28)<->text667.htm#7684<->GrpMatGen_Automorphisms (Example H64E28)
4<->Example-Automorphisms :<->text667.htm#7684<->Example-Automorphisms :: GrpMatGen_Automorphisms (Example H64E28)
5<->IsIsomorphic(G, H$\colon$ \parameters) <->text667.htm#7685<->IsIsomorphic(G, H$\colon$ \parameters) : GrpMat, GrpPerm -> BoolElt, Hom(Grp)
5<->IsIsomorphic(G, H$\colon$ \parameters) <->text667.htm#7685<->IsIsomorphic(G, H$\colon$ \parameters) : GrpPerm, GrpMat -> BoolElt, Hom(Grp)
5<->IsIsomorphic(G, H: parameters) <->text667.htm#7685<->IsIsomorphic(G, H: parameters) : GrpMat, GrpMat -&gt; BoolElt, Hom(Grp)
4<->GrpMatGen_Isomorphism (Example H64E29)<->text667.htm#7686<->GrpMatGen_Isomorphism (Example H64E29)
4<->Example-Isomorphism :<->text667.htm#7686<->Example-Isomorphism :: GrpMatGen_Isomorphism (Example H64E29)
3<->automorphisms :<->text667.htm<->automorphisms :: Automorphism Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->character-representation :<->text668.htm<->character-representation :: Representation Theory (MATRIX GROUPS OVER GENERAL RINGS)
5<->LinearCharacters(G) <->text668.htm#7688<->LinearCharacters(G) : GrpMat -&gt; [ Chtr ]
5<->CharacterTable(G: parameters) <->text668.htm#7689<->CharacterTable(G: parameters) : GrpMat -&gt; TabChtr
5<->PermutationCharacter(G, H) <->text668.htm#7690<->PermutationCharacter(G, H) : GrpMat, GrpMat -&gt; AlgChtrElt
5<->GModule(G) <->text668.htm#7691<->GModule(G) : GrpMat -&gt; ModGrp
5<->GModule(G, A) <->text668.htm#7692<->GModule(G, A) : GrpMat, AlgMat -&gt; ModGrp
5<->GModule(G, Q) <->text668.htm#7693<->GModule(G, Q) : GrpMat, [ AlgMatElt ] -&gt; ModGrp
5<->GModule(G, A, B) <->text668.htm#7694<->GModule(G, A, B) : GrpMat, GrpMat, GrpMat -&gt; ModGrp, Map
5<->PermutationModule(G, H, R) <->text668.htm#7695<->PermutationModule(G, H, R) : GrpMat, GrpMat, Rng -&gt; ModGrp
5<->ChangeOfBasisMatrix(G, S) <->text668.htm#7696<->ChangeOfBasisMatrix(G, S) : GrpMat, ModGrp -&gt; AlgMatElt
4<->GrpMatGen_GModule (Example H64E30)<->text668.htm#7697<->GrpMatGen_GModule (Example H64E30)
4<->Example-GModule :<->text668.htm#7697<->Example-GModule :: GrpMatGen_GModule (Example H64E30)
3<->character-representation :<->text668.htm<->character-representation :: Representation Theory (MATRIX GROUPS OVER GENERAL RINGS)
3<->BSGS-base-strong-generator :<->text669.htm<->BSGS-base-strong-generator :: Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
3<->introduction :<->text669.htm#7699<->introduction :: Introduction (MATRIX GROUPS OVER GENERAL RINGS)
3<->control :<->text669.htm#7700<->control :: Controlling Selection of a Base (MATRIX GROUPS OVER GENERAL RINGS)
5<->GoodBasePoints(G: parameters) <->text669.htm#7701<->GoodBasePoints(G: parameters) : GrpMat -&gt; []
5<->AssertAttribute(G, "Base", B) <->text669.htm#7702<->AssertAttribute(G, "Base", B) : GrpMat, MonStgElt, Tup -&gt;
5<->HasAttribute(G, "Base") <->text669.htm#7703<->HasAttribute(G, "Base") : GrpMat, MonStgElt -&gt; BoolElt, Tup
5<->AssertAttribute(GrpMat, "FirstBasicOrbitBound", n) <->text669.htm#7704<->AssertAttribute(GrpMat, "FirstBasicOrbitBound", n) : Cat, MonStgElt, RngIntElt -&gt;
5<->HasAttribute(GrpMat, "FirstBasicOrbitBound") <->text669.htm#7705<->HasAttribute(GrpMat, "FirstBasicOrbitBound") : Cat, MonStgElt -&gt; BoolElt, RngIntElt
3<->control :<->text669.htm#7700<->control :: Controlling Selection of a Base (MATRIX GROUPS OVER GENERAL RINGS)
3<->creation :<->text669.htm#7706<->creation :: Construction of a Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
5<->BSGS(G, str) <->text669.htm#7707<->BSGS(G, str) : GrpMat, MonStgElt ->
5<->BSGS(G) <->text669.htm#7707<->BSGS(G) : GrpMat -&gt;
5<->RandomSchreier(G, str $\colon$ \parameters) <->text669.htm#7708<->RandomSchreier(G, str $\colon$ \parameters) : GrpMat, MonStgElt ->
5<->RandomSchreier(G: parameters) <->text669.htm#7708<->RandomSchreier(G: parameters) : GrpMat -&gt;
5<->RandomSchreierBounded(G, L: parameters) <->text669.htm#7709<->RandomSchreierBounded(G, L: parameters) : GrpMat, RngIntElt -&gt; BoolElt
5<->ToddCoxeterSchreier(G) : GrpMat <->text669.htm#7710<->ToddCoxeterSchreier(G) : GrpMat : -&gt;
5<->Verify(G) <->text669.htm#7711<->Verify(G) : GrpMat -&gt;
3<->creation :<->text669.htm#7706<->creation :: Construction of a Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
3<->attribute :<->text669.htm#7712<->attribute :: Defining Values for Attributes (MATRIX GROUPS OVER GENERAL RINGS)
5<->AssertAttribute(G, "Order", Q) <->text669.htm#7713<->AssertAttribute(G, "Order", Q) : GrpMat, MonStgElt, [Tup(RngIntElt, RngIntElt)] ->
5<->AssertAttribute(G, "Order", n) <->text669.htm#7713<->AssertAttribute(G, "Order", n) : GrpMat, MonStgElt, RngIntElt -&gt;
5<->AssertAttribute(G, "IsVerified", b) <->text669.htm#7714<->AssertAttribute(G, "IsVerified", b) : GrpMat, MonStgElt, BoolElt -&gt;
5<->HasAttribute(G, "FactoredOrder") <->text669.htm#7715<->HasAttribute(G, "FactoredOrder") : GrpMat, MonStgElt -> [Tup(RngIntElt, RngIntElt)]
5<->HasAttribute(G, "Order") <->text669.htm#7715<->HasAttribute(G, "Order") : GrpMat, MonStgElt -&gt; RngIntElt
5<->HasAttribute(G, "IsVerified") <->text669.htm#7716<->HasAttribute(G, "IsVerified") : GrpMat, MonStgElt -&gt; BoolElt
3<->attribute :<->text669.htm#7712<->attribute :: Defining Values for Attributes (MATRIX GROUPS OVER GENERAL RINGS)
3<->access :<->text669.htm#7717<->access :: Accessing the Base and Strong  Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
5<->Base(G) <->text669.htm#7718<->Base(G) : GrpMat -&gt; [Elt]
5<->BasePoint(G, i) <->text669.htm#7719<->BasePoint(G, i) : GrpMat, RngIntElt -&gt; Elt
5<->BasicOrbit(G, i) <->text669.htm#7720<->BasicOrbit(G, i) : GrpMat, RngIntElt -&gt; SetIndx
5<->BasicOrbitLength(G, i) <->text669.htm#7721<->BasicOrbitLength(G, i) : GrpMat, RngIntElt -&gt; RngIntElt
5<->BasicOrbitLengths(G) <->text669.htm#7722<->BasicOrbitLengths(G) : GrpMat -&gt; [RngIntElt]
5<->BasicStabiliser :: BasicStabilizer(G, i) <->text669.htm#7723<->BasicStabiliser :: BasicStabilizer(G, i) : GrpMat, RngIntElt -&gt; GrpMat
5<->BasicStabilizer(G, i) <->text669.htm#7723<->BasicStabilizer(G, i) : GrpMat, RngIntElt -&gt; GrpMat
5<->BasicStabiliserChain :: BasicStabilizerChain(G) <->text669.htm#7724<->BasicStabiliserChain :: BasicStabilizerChain(G) : GrpMat -&gt; [GrpMat]
5<->BasicStabilizerChain(G) <->text669.htm#7724<->BasicStabilizerChain(G) : GrpMat -&gt; [GrpMat]
5<->Nsgens :: NumberOfStrongGenerators(G) <->text669.htm#7725<->Nsgens :: NumberOfStrongGenerators(G) : GrpMat -&gt; RngIntElt
5<->NumberOfStrongGenerators(G) <->text669.htm#7725<->NumberOfStrongGenerators(G) : GrpMat -&gt; RngIntElt
5<->StrongGenerators(G) <->text669.htm#7726<->StrongGenerators(G) : GrpMat -&gt; SetIndx(GrpMat)
3<->access :<->text669.htm#7717<->access :: Accessing the Base and Strong  Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
3<->BSGS-base-strong-generator :<->text669.htm<->BSGS-base-strong-generator :: Base and Strong Generating Set (MATRIX GROUPS OVER GENERAL RINGS)
3<->soluble-matrix-group :<->text670.htm<->soluble-matrix-group :: Soluble Matrix Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->conversion :<->text670.htm#7728<->conversion :: Conversion to a PC-Group (MATRIX GROUPS OVER GENERAL RINGS)
5<->PolycyclicGenerators(G) <->text670.htm#7729<->PolycyclicGenerators(G) : GrpMat -&gt; [ GrpPCElt ]
5<->PCGroup(G) <->text670.htm#7730<->PCGroup(G) : GrpMat -&gt; GrpPC, Map
3<->conversion :<->text670.htm#7728<->conversion :: Conversion to a PC-Group (MATRIX GROUPS OVER GENERAL RINGS)
3<->operation :<->text670.htm#7731<->operation :: Soluble Group Functions (MATRIX GROUPS OVER GENERAL RINGS)
5<->pCentralSeries(G, p) <->text670.htm#7732<->pCentralSeries(G, p) : GrpMat, RngIntElt -&gt; [ GrpMat ]
3<->operation :<->text670.htm#7731<->operation :: Soluble Group Functions (MATRIX GROUPS OVER GENERAL RINGS)
3<->p-group Functions (MATRIX GROUPS OVER GENERAL RINGS)<->text670.htm#7733<->p-group Functions (MATRIX GROUPS OVER GENERAL RINGS)
5<->IsSpecial(G) <->text670.htm#7734<->IsSpecial(G) : GrpMat -&gt; BoolElt
5<->IsExtraSpecial(G) <->text670.htm#7735<->IsExtraSpecial(G) : GrpMat -&gt; BoolElt
5<->FrattiniSubgroup(G) <->text670.htm#7736<->FrattiniSubgroup(G) : GrpMat -&gt; GrpMat
5<->JenningsSeries(G) <->text670.htm#7737<->JenningsSeries(G) : GrpMat -&gt; [ GrpMat ]
3<->p-group Functions (MATRIX GROUPS OVER GENERAL RINGS)<->text670.htm#7733<->p-group Functions (MATRIX GROUPS OVER GENERAL RINGS)
3<->abelian-group :<->text670.htm#7738<->abelian-group :: Abelian Group Functions (MATRIX GROUPS OVER GENERAL RINGS)
5<->PrimaryAbelianInvariants(G) <->text670.htm#7739<->PrimaryAbelianInvariants(G) : GrpMat -&gt; [ RngIntElt ]
5<->PrimaryAbelianBasis(G) <->text670.htm#7740<->PrimaryAbelianBasis(G) : GrpMat -&gt; [ GrpMatElt ], [ RngIntElt ]
3<->abelian-group :<->text670.htm#7738<->abelian-group :: Abelian Group Functions (MATRIX GROUPS OVER GENERAL RINGS)
3<->soluble-matrix-group :<->text670.htm<->soluble-matrix-group :: Soluble Matrix Groups (MATRIX GROUPS OVER GENERAL RINGS)
3<->matrix :<->text653.htm<->matrix :: MATRIX GROUPS OVER GENERAL RINGS
3<->matrix-ff :<->text673.htm<->matrix-ff :: MATRIX GROUPS OVER FINITE FIELDS
3<->introduction :<->text674.htm<->introduction :: Introduction (MATRIX GROUPS OVER FINITE FIELDS)
3<->element-order :<->text675.htm<->element-order :: Finding Elements with  Prescribed Properties (MATRIX GROUPS OVER FINITE FIELDS)
5<->RandomElementOfOrder(G, n : parameters) <->text675.htm#7746<->RandomElementOfOrder(G, n : parameters) : GrpMat, RngIntElt-&gt; BoolElt, GrpMatElt, GrpSLPElt, BoolElt
5<->RandomElementOfNormalClosure(G, N)<->text675.htm#7747<->RandomElementOfNormalClosure(G, N): Grp -&gt; GrpElt
5<->InvolutionClassicalGroupEven(G : parameters) <->text675.htm#7748<->InvolutionClassicalGroupEven(G : parameters) : GrpMat[FldFin] -&gt;GrpMatElt[FldFin], GrpSLPElt, RngIntElt
3<->element-order :<->text675.htm<->element-order :: Finding Elements with  Prescribed Properties (MATRIX GROUPS OVER FINITE FIELDS)
3<->monte-carlo :<->text676.htm<->monte-carlo :: Monte Carlo Algorithms for  Subgroups (MATRIX GROUPS OVER FINITE FIELDS)
5<->CentraliserOfInvolution(G, g : parameters) <->text676.htm#7750<->CentraliserOfInvolution(G, g : parameters) : GrpMat,GrpMatElt -&gt; GrpMat
5<->CentraliserOfInvolution(G, g, w : parameters) <->text676.htm#7751<->CentraliserOfInvolution(G, g, w : parameters) : GrpMat,GrpMatElt, GrpSLPElt -&gt; GrpMat, []
5<->AreInvolutionsConjugate(G, x, wx, y, wy : parameters) <->text676.htm#7752<->AreInvolutionsConjugate(G, x, wx, y, wy : parameters) : GrpMat,GrpMatElt, GrpSLPElt, GrpMatElt, GrpSLPElt -&gt; BoolElt, GrpMatElt, GrpSLPElt
5<->NormalClosureMonteCarlo(G, H $\colon$ \parameters) <->text676.htm#7753<->NormalClosureMonteCarlo(G, H $\colon$ \parameters) : GrpPerm, GrpPerm -> GrpMat
5<->NormalClosureMonteCarlo(G, H ) <->text676.htm#7753<->NormalClosureMonteCarlo(G, H ) : GrpMat, GrpMat -&gt; GrpMat
5<->DerivedGroupMonteCarlo(G : parameters) <->text676.htm#7754<->DerivedGroupMonteCarlo(G : parameters) : GrpMat -&gt; GrpMat
5<->IsProbablyPerfect(G : parameters)<->text676.htm#7755<->IsProbablyPerfect(G : parameters): Grp -&gt; BoolElt
4<->GrpMatFF_IsProbablyPerfect (Example H65E1)<->text676.htm#7756<->GrpMatFF_IsProbablyPerfect (Example H65E1)
4<->Example-IsProbablyPerfect :<->text676.htm#7756<->Example-IsProbablyPerfect :: GrpMatFF_IsProbablyPerfect (Example H65E1)
3<->monte-carlo :<->text676.htm<->monte-carlo :: Monte Carlo Algorithms for  Subgroups (MATRIX GROUPS OVER FINITE FIELDS)
3<->aschbacher-reduction :<->text677.htm<->aschbacher-reduction :: Aschbacher Reduction (MATRIX GROUPS OVER FINITE FIELDS)
3<->aschbacher :<->text677.htm#7758<->aschbacher :: Introduction (MATRIX GROUPS OVER FINITE FIELDS)
3<->primitivity :<->text677.htm#7759<->primitivity :: Primitivity (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsPrimitive(G: parameters) <->text677.htm#7760<->IsPrimitive(G: parameters) : GrpMat -&gt; BoolElt
5<->ImprimitiveBasis(G) <->text677.htm#7761<->ImprimitiveBasis(G) : GrpMat -&gt; SeqEnum
5<->Blocks(G) <->text677.htm#7762<->Blocks(G) : GrpMat -&gt; SeqEnum
5<->BlocksImage(G) <->text677.htm#7763<->BlocksImage(G) : GrpMat -&gt; GrpPerm
5<->ImprimitiveAction(G, g) <->text677.htm#7764<->ImprimitiveAction(G, g) : GrpMat, GrpMatElt  -&gt; GrpPermElt
4<->GrpMatFF_IsPrimitive (Example H65E2)<->text677.htm#7765<->GrpMatFF_IsPrimitive (Example H65E2)
4<->Example-IsPrimitive :<->text677.htm#7765<->Example-IsPrimitive :: GrpMatFF_IsPrimitive (Example H65E2)
3<->primitivity :<->text677.htm#7759<->primitivity :: Primitivity (MATRIX GROUPS OVER FINITE FIELDS)
3<->semilinearity :<->text677.htm#7766<->semilinearity :: Semilinearity (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsSemiLinear(G) <->text677.htm#7767<->IsSemiLinear(G) : GrpMat -&gt; BoolElt
5<->DegreeOfFieldExtension(G) <->text677.htm#7768<->DegreeOfFieldExtension(G) : GrpMat -&gt; RngIntElt
5<->CentralisingMatrix(G) <->text677.htm#7769<->CentralisingMatrix(G) : GrpMat -&gt; AlgMatElt
5<->FrobeniusAutomorphisms(G) <->text677.htm#7770<->FrobeniusAutomorphisms(G) : GrpMat -&gt; SeqEnum
5<->WriteOverLargerField(G) <->text677.htm#7771<->WriteOverLargerField(G) : GrpMat -&gt; GrpMat, GrpAb, SeqEnum
4<->GrpMatFF_Semilinearity (Example H65E3)<->text677.htm#7772<->GrpMatFF_Semilinearity (Example H65E3)
4<->Example-Semilinearity :<->text677.htm#7772<->Example-Semilinearity :: GrpMatFF_Semilinearity (Example H65E3)
3<->semilinearity :<->text677.htm#7766<->semilinearity :: Semilinearity (MATRIX GROUPS OVER FINITE FIELDS)
3<->tensor-product :<->text677.htm#7773<->tensor-product :: Tensor Products (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsTensor(G: parameters) <->text677.htm#7774<->IsTensor(G: parameters) : GrpMat -&gt; BoolElt
5<->TensorBasis(G) <->text677.htm#7775<->TensorBasis(G) : GrpMat -&gt; GrpMatElt
5<->TensorFactors(G) <->text677.htm#7776<->TensorFactors(G) : GrpMat -&gt; GrpMat, GrpMat
5<->IsProportional(X, k) <->text677.htm#7777<->IsProportional(X, k) : Mtrx, RngIntElt -&gt; BoolElt, Tup
4<->GrpMatFF_Tensor (Example H65E4)<->text677.htm#7778<->GrpMatFF_Tensor (Example H65E4)
4<->Example-Tensor :<->text677.htm#7778<->Example-Tensor :: GrpMatFF_Tensor (Example H65E4)
3<->tensor-product :<->text677.htm#7773<->tensor-product :: Tensor Products (MATRIX GROUPS OVER FINITE FIELDS)
3<->tensor-induction :<->text677.htm#7779<->tensor-induction :: Tensor-induced Groups (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsTensorInduced(G : parameters) <->text677.htm#7780<->IsTensorInduced(G : parameters) : GrpMat -&gt; BoolElt
5<->TensorInducedBasis(G) <->text677.htm#7781<->TensorInducedBasis(G) : GrpMat -&gt; GrpMatElt
5<->TensorInducedPermutations(G) <->text677.htm#7782<->TensorInducedPermutations(G) : GrpMat -&gt; SeqEnum
5<->TensorInducedAction(G, g) <->text677.htm#7783<->TensorInducedAction(G, g) : GrpMat, GrpMatElt -&gt; GrpPermElt
4<->GrpMatFF_TensorInduced (Example H65E5)<->text677.htm#7784<->GrpMatFF_TensorInduced (Example H65E5)
4<->Example-TensorInduced :<->text677.htm#7784<->Example-TensorInduced :: GrpMatFF_TensorInduced (Example H65E5)
3<->tensor-induction :<->text677.htm#7779<->tensor-induction :: Tensor-induced Groups (MATRIX GROUPS OVER FINITE FIELDS)
3<->extraspecial :<->text677.htm#7785<->extraspecial :: Normalisers of Extraspecial r-groups and Symplectic 2-groups (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsExtraSpecialNormaliser(G) <->text677.htm#7786<->IsExtraSpecialNormaliser(G) : GrpMat -&gt; BoolElt
5<->ExtraSpecialParameters(G) <->text677.htm#7787<->ExtraSpecialParameters(G) : GrpMat -&gt; [RngIntElt, RngIntElt]
5<->ExtraSpecialGroup(G) <->text677.htm#7788<->ExtraSpecialGroup(G) : GrpMat -&gt; GrpMat
5<->ExtraSpecialNormaliser(G) <->text677.htm#7789<->ExtraSpecialNormaliser(G) : GrpMat -&gt; SeqEnum
5<->ExtraSpecialAction(G, g) <->text677.htm#7790<->ExtraSpecialAction(G, g) : GrpMat, GrpMatElt -&gt; GrpMatElt
5<->ExtraSpecialBasis(G) <->text677.htm#7791<->ExtraSpecialBasis(G) : GrpMat -&gt; GrpMatElt
4<->GrpMatFF_ExtraSpecialNormaliser (Example H65E6)<->text677.htm#7792<->GrpMatFF_ExtraSpecialNormaliser (Example H65E6)
4<->Example-ExtraSpecialNormaliser :<->text677.htm#7792<->Example-ExtraSpecialNormaliser :: GrpMatFF_ExtraSpecialNormaliser (Example H65E6)
3<->extraspecial :<->text677.htm#7785<->extraspecial :: Normalisers of Extraspecial r-groups and Symplectic 2-groups (MATRIX GROUPS OVER FINITE FIELDS)
3<->equivalent-rep :<->text677.htm#7793<->equivalent-rep :: Writing Representations over  Subfields (MATRIX GROUPS OVER FINITE FIELDS)
5<->IsOverSmallerField(G : parameters) <->text677.htm#7794<->IsOverSmallerField(G : parameters) : GrpMat -&gt; BoolElt, GrpMat
5<->IsOverSmallerField(G, k : parameters) <->text677.htm#7795<->IsOverSmallerField(G, k : parameters) : GrpMat -&gt; BoolElt, GrpMat
5<->SmallerField(G) <->text677.htm#7796<->SmallerField(G) : GrpMat -&gt; FLdFin
5<->SmallerFieldBasis(G) <->text677.htm#7797<->SmallerFieldBasis(G) : GrpMat -&gt; GrpMatElt
5<->SmallerFieldImage(G, g) <->text677.htm#7798<->SmallerFieldImage(G, g) : GrpMat, GrpMatElt -&gt; GrpMatElt
4<->GrpMatFF_IsOverSmallerField (Example H65E7)<->text677.htm#7799<->GrpMatFF_IsOverSmallerField (Example H65E7)
4<->Example-IsOverSmallerField :<->text677.htm#7799<->Example-IsOverSmallerField :: GrpMatFF_IsOverSmallerField (Example H65E7)
5<->WriteOverSmallerField(G, F) <->text677.htm#7800<->WriteOverSmallerField(G, F) : GrpMat, FldFin -&gt; GrpMat, Map
4<->GrpMatFF_WriteOverSmallerField (Example H65E8)<->text677.htm#7801<->GrpMatFF_WriteOverSmallerField (Example H65E8)
4<->Example-WriteOverSmallerField :<->text677.htm#7801<->Example-WriteOverSmallerField :: GrpMatFF_WriteOverSmallerField (Example H65E8)
3<->equivalent-rep :<->text677.htm#7793<->equivalent-rep :: Writing Representations over  Subfields (MATRIX GROUPS OVER FINITE FIELDS)
3<->decomposition :<->text677.htm#7802<->decomposition :: Decompositions with Respect to a  Normal Subgroup (MATRIX GROUPS OVER FINITE FIELDS)
5<->SearchForDecomposition(G, S) <->text677.htm#7803<->SearchForDecomposition(G, S) : GrpMat, [GrpMatElt] -&gt; BoolElt
3<->decomposition :<->text677.htm#7804<->decomposition :: Accessing the Decomposition  Information (MATRIX GROUPS OVER FINITE FIELDS)
4<->GrpMatFF_Decompose (Example H65E9)<->text677.htm#7805<->GrpMatFF_Decompose (Example H65E9)
4<->Example-Decompose :<->text677.htm#7805<->Example-Decompose :: GrpMatFF_Decompose (Example H65E9)
3<->decomposition :<->text677.htm#7804<->decomposition :: Accessing the Decomposition  Information (MATRIX GROUPS OVER FINITE FIELDS)
3<->decomposition :<->text677.htm#7802<->decomposition :: Decompositions with Respect to a  Normal Subgroup (MATRIX GROUPS OVER FINITE FIELDS)
3<->aschbacher-reduction :<->text677.htm<->aschbacher-reduction :: Aschbacher Reduction (MATRIX GROUPS OVER FINITE FIELDS)
3<->natural-copy-classical :<->text678.htm<->natural-copy-classical :: Constructive Recognition for  Simple Groups (MATRIX GROUPS OVER FINITE FIELDS)
5<->ClassicalStandardGenerators(type, d, q) <->text678.htm#7807<->ClassicalStandardGenerators(type, d, q) : MonStgElt, RngIntElt, RngIntElt -&gt; []
5<->ClassicalConstructiveRecognition(G) <->text678.htm#7808<->ClassicalConstructiveRecognition(G) : GrpMat[FldFin] ->BoolElt, SeqEnum, SeqEnum
5<->ClassicalConstructiveRecognition(G, type, d, q) <->text678.htm#7808<->ClassicalConstructiveRecognition(G, type, d, q) : GrpMat[FldFin], MonStgElt, RngIntElt, RngIntElt -&gt;BoolElt, Map, Map, Map, Map, SeqEnum, SeqEnum
4<->GrpMatFF_ClassicalConstructiveRecognition (Example H65E10)<->text678.htm#7809<->GrpMatFF_ClassicalConstructiveRecognition (Example H65E10)
4<->Example-ClassicalConstructiveRecognition :<->text678.htm#7809<->Example-ClassicalConstructiveRecognition :: GrpMatFF_ClassicalConstructiveRecognition (Example H65E10)
5<->ClassicalChangeOfBasis(G)<->text678.htm#7810<->ClassicalChangeOfBasis(G): GrpMat[FldFin] -&gt; GrpMatElt[FldFin]
5<->ClassicalRewrite(G, gens, type, dim, q, g : parameters)<->text678.htm#7811<->ClassicalRewrite(G, gens, type, dim, q, g : parameters): Grp, SeqEnum, MonStgElt, RngIntElt, RngIntElt, GrpElt -&gt; BoolElt, GrpElt
5<->ClassicalRewriteNatural(G, type, {CB, g})<->text678.htm#7812<->ClassicalRewriteNatural(G, type, {CB, g}): MonStgElt, GrpMatElt, GrpMatElt-> BoolElt, GrpElt
5<->ClassicalRewriteNatural(type, CB, g)<->text678.htm#7812<->ClassicalRewriteNatural(type, CB, g): MonStgElt, GrpMatElt, GrpMatElt-&gt; BoolElt, GrpElt
5<->ClassicalStandardPresentation (type, d, q : parameters) <->text678.htm#7813<->ClassicalStandardPresentation (type, d, q : parameters) : MonStgElt, RngIntElt, RngIntElt -&gt; SLPGroup, []
4<->GrpMatFF_ClassicalConstructiveRecognition (Example H65E11)<->text678.htm#7814<->GrpMatFF_ClassicalConstructiveRecognition (Example H65E11)
4<->Example-ClassicalConstructiveRecognition :<->text678.htm#7814<->Example-ClassicalConstructiveRecognition :: GrpMatFF_ClassicalConstructiveRecognition (Example H65E11)
3<->natural-copy-classical :<->text678.htm<->natural-copy-classical :: Constructive Recognition for  Simple Groups (MATRIX GROUPS OVER FINITE FIELDS)
3<->composition-tree :<->text679.htm<->composition-tree :: Composition Trees for Matrix  Groups (MATRIX GROUPS OVER FINITE FIELDS)
5<->CompositionTree(G) <->text679.htm#7816<->CompositionTree(G) : GrpMat[FldFin] -&gt; []
4<->GrpMatFF_CompositionTree (Example H65E12)<->text679.htm#7817<->GrpMatFF_CompositionTree (Example H65E12)
4<->Example-CompositionTree :<->text679.htm#7817<->Example-CompositionTree :: GrpMatFF_CompositionTree (Example H65E12)
5<->CompositionTree(G : parameters) <->text679.htm#7818<->CompositionTree(G : parameters) : GrpMat[FldFin] -&gt; []
5<->CompositionTreeFastVerification(G) <->text679.htm#7819<->CompositionTreeFastVerification(G) : Grp -&gt; BoolElt
5<->CompositionTreeVerify(G) <->text679.htm#7820<->CompositionTreeVerify(G) : Grp -&gt; BoolElt, []
4<->GrpMatFF_CompositionTreeVerify (Example H65E13)<->text679.htm#7821<->GrpMatFF_CompositionTreeVerify (Example H65E13)
4<->Example-CompositionTreeVerify :<->text679.htm#7821<->Example-CompositionTreeVerify :: GrpMatFF_CompositionTreeVerify (Example H65E13)
4<->GrpMatFF_CompTreeJ4 (Example H65E14)<->text679.htm#7822<->GrpMatFF_CompTreeJ4 (Example H65E14)
4<->Example-CompTreeJ4 :<->text679.htm#7822<->Example-CompTreeJ4 :: GrpMatFF_CompTreeJ4 (Example H65E14)
5<->CompositionTreeNiceGroup(G) <->text679.htm#7823<->CompositionTreeNiceGroup(G) : Grp -&gt; GrpMat[FldFin]
5<->CompositionTreeSLPGroup(G) <->text679.htm#7824<->CompositionTreeSLPGroup(G) : Grp -&gt; GrpSLP, Map
5<->DisplayCompTreeNodes(G : parameters) <->text679.htm#7825<->DisplayCompTreeNodes(G : parameters) : Grp  -&gt;
5<->CompositionTreeNiceToUser(G) <->text679.htm#7826<->CompositionTreeNiceToUser(G) : Grp -&gt; Map, []
5<->CompositionTreeFactoredOrder :: CompositionTreeOrder(G) <->text679.htm#7827<->CompositionTreeFactoredOrder :: CompositionTreeOrder(G) : Grp -&gt; RngIntElt
5<->CompositionTreeOrder(G) <->text679.htm#7827<->CompositionTreeOrder(G) : Grp -&gt; RngIntElt
5<->CompositionTreeElementToWord(G, g) <->text679.htm#7828<->CompositionTreeElementToWord(G, g) : Grp, GrpElt -&gt; BoolElt, GrpSLPElt
5<->CompositionTreeNonAbelianFactors(G) <->text679.htm#7829<->CompositionTreeNonAbelianFactors(G) : GrpMat[FldFin] -&gt; List
5<->CompositionTreeCBM(G) <->text679.htm#7830<->CompositionTreeCBM(G) : GrpMat[FldFin -&gt; GrpMatElt
5<->CompositionTreeReductionInfo(G, t) <->text679.htm#7831<->CompositionTreeReductionInfo(G, t) : Grp, RngIntElt -&gt; MonStgElt,Grp, Grp
5<->CompositionTreeSeries(G) <->text679.htm#7832<->CompositionTreeSeries(G) : Grp -&gt; SeqEnum, List, List, List, BoolElt, []
5<->CompositionTreeFactorNumber(G, g) <->text679.htm#7833<->CompositionTreeFactorNumber(G, g) : Grp, GrpElt -&gt; RngIntElt
5<->HasCompositionTree(G) <->text679.htm#7834<->HasCompositionTree(G) : Grp -&gt; BoolElt
5<->CleanCompositionTree(G) <->text679.htm#7835<->CleanCompositionTree(G) : Grp  -&gt;
4<->GrpMatFF_CompTree1 (Example H65E15)<->text679.htm#7836<->GrpMatFF_CompTree1 (Example H65E15)
4<->Example-CompTree1 :<->text679.htm#7836<->Example-CompTree1 :: GrpMatFF_CompTree1 (Example H65E15)
4<->GrpMatFF_CompTree2 (Example H65E16)<->text679.htm#7837<->GrpMatFF_CompTree2 (Example H65E16)
4<->Example-CompTree2 :<->text679.htm#7837<->Example-CompTree2 :: GrpMatFF_CompTree2 (Example H65E16)
3<->composition-tree :<->text679.htm<->composition-tree :: Composition Trees for Matrix  Groups (MATRIX GROUPS OVER FINITE FIELDS)
3<->The LMG functions (MATRIX GROUPS OVER FINITE FIELDS)<->text680.htm<->The LMG functions (MATRIX GROUPS OVER FINITE FIELDS)
5<->SetLMGSchreierBound(n) <->text680.htm#7839<->SetLMGSchreierBound(n) : RngIntElt -&gt;
5<->LMGInitialise :: LMGInitialize(G : parameters) <->text680.htm#7840<->LMGInitialise :: LMGInitialize(G : parameters) : GrpMat -&gt;
5<->LMGInitialize(G : parameters) <->text680.htm#7840<->LMGInitialize(G : parameters) : GrpMat -&gt;
5<->LMGOrder(G) <->text680.htm#7841<->LMGOrder(G) : GrpMat[FldFin] -&gt;  RngIntElt
5<->LMGFactoredOrder(G) <->text680.htm#7842<->LMGFactoredOrder(G) : GrpMat[FldFin] -&gt;  SeqEnum
5<->LMGIsIn(G, x) <->text680.htm#7843<->LMGIsIn(G, x) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
5<->LMGIsSubgroup(G, H) <->text680.htm#7844<->LMGIsSubgroup(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->LMGEqual(G, H) <->text680.htm#7845<->LMGEqual(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->LMGIndex(G, H) <->text680.htm#7846<->LMGIndex(G, H) : GrpMat, GrpMat -&gt; RngIntElt
5<->LMGIsNormal(G, H) <->text680.htm#7847<->LMGIsNormal(G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->LMGNormalClosure(G, H) <->text680.htm#7848<->LMGNormalClosure(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->LMGDerivedGroup(G) <->text680.htm#7849<->LMGDerivedGroup(G) : GrpMat -&gt; GrpMat
5<->LMGCommutatorSubgroup(G, H) <->text680.htm#7850<->LMGCommutatorSubgroup(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->LMGIsSolvable :: LMGIsSoluble(G) <->text680.htm#7851<->LMGIsSolvable :: LMGIsSoluble(G) : GrpMat -&gt; BoolElt
5<->LMGIsSoluble(G) <->text680.htm#7851<->LMGIsSoluble(G) : GrpMat -&gt; BoolElt
5<->LMGIsNilpotent(G) <->text680.htm#7852<->LMGIsNilpotent(G) : GrpMat -&gt; BoolElt
5<->LMGCompositionSeries(G) <->text680.htm#7853<->LMGCompositionSeries(G) : GrpMat[FldFin] -&gt;  SeqEnum
5<->LMGCompositionFactors(G) <->text680.htm#7854<->LMGCompositionFactors(G) : GrpMat[FldFin] -&gt;  SeqEnum
5<->LMGChiefSeries(G) <->text680.htm#7855<->LMGChiefSeries(G) : GrpMat[FldFin] -&gt;  SeqEnum
5<->LMGChiefFactors(G) <->text680.htm#7856<->LMGChiefFactors(G) : GrpMat[FldFin] -&gt;  SeqEnum
5<->LMGUnipotentRadical(G) <->text680.htm#7857<->LMGUnipotentRadical(G) : GrpMat -&gt; GrpMat, GrpPC, Map
5<->LMGSolvableRadical :: LMGSolubleRadical(G) <->text680.htm#7858<->LMGSolvableRadical :: LMGSolubleRadical(G) : GrpMat -&gt; GrpMat, GrpPC, Map
5<->LMGSolubleRadical(G) <->text680.htm#7858<->LMGSolubleRadical(G) : GrpMat -&gt; GrpMat, GrpPC, Map
5<->LMGFittingSubgroup(G) <->text680.htm#7859<->LMGFittingSubgroup(G) : GrpMat -&gt; GrpMat, GrpPC, Map
5<->LMGCenter :: LMGCentre(G) <->text680.htm#7860<->LMGCenter :: LMGCentre(G) : GrpMat -&gt; GrpMat
5<->LMGCentre(G) <->text680.htm#7860<->LMGCentre(G) : GrpMat -&gt; GrpMat
5<->LMGSylow(G,p) <->text680.htm#7861<->LMGSylow(G,p) : GrpMat, RngIntElt -&gt; GrpMat
5<->LMGSocleStar(G) <->text680.htm#7862<->LMGSocleStar(G) : GrpMat -&gt; GrpMat
5<->LMGSocleStarFactors(G) <->text680.htm#7863<->LMGSocleStarFactors(G) : GrpMat -&gt; SeqEnum, SeqEnum
5<->LMGSocleStarAction(G) <->text680.htm#7864<->LMGSocleStarAction(G) : GrpMat -&gt; Map, GrpPerm, GrpMat
5<->LMGSocleStarActionKernel(G) <->text680.htm#7865<->LMGSocleStarActionKernel(G) : GrpMat -&gt; GrpMat, GrpPC, Map
5<->LMGSocleStarQuotient(G) <->text680.htm#7866<->LMGSocleStarQuotient(G) : GrpMat -&gt; GrpPerm, Map, GrpMat
4<->GrpMatFF_LMGex (Example H65E17)<->text680.htm#7867<->GrpMatFF_LMGex (Example H65E17)
4<->Example-LMGex :<->text680.htm#7867<->Example-LMGex :: GrpMatFF_LMGex (Example H65E17)
5<->LMGRadicalQuotient(G) <->text680.htm#7868<->LMGRadicalQuotient(G) : GrpMat -&gt; GrpPerm, Map, GrpMat
5<->LMGCentralizer :: LMGCentraliser(G, g) <->text680.htm#7869<->LMGCentralizer :: LMGCentraliser(G, g) : GrpMat, GrpMatElt -&gt; GrpMat
5<->LMGCentraliser(G, g) <->text680.htm#7869<->LMGCentraliser(G, g) : GrpMat, GrpMatElt -&gt; GrpMat
5<->LMGIsConjugate(G, g, h) <->text680.htm#7870<->LMGIsConjugate(G, g, h) : GrpMat, GrpMatElt, GrpMatElt -&gt; BoolElt, GrpMatElt
5<->LMGConjugacyClasses :: LMGClasses(G) <->text680.htm#7871<->LMGConjugacyClasses :: LMGClasses(G) : GrpMat -&gt; SeqEnum
5<->LMGClasses(G) <->text680.htm#7871<->LMGClasses(G) : GrpMat -&gt; SeqEnum
5<->LMGNormalizer :: LMGNormaliser(G, H) <->text680.htm#7872<->LMGNormalizer :: LMGNormaliser(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->LMGNormaliser(G, H) <->text680.htm#7872<->LMGNormaliser(G, H) : GrpMat, GrpMat -&gt; GrpMat
5<->LMGIsConjugate(G, H, K) <->text680.htm#7873<->LMGIsConjugate(G, H, K) : GrpMat, GrpMat, GrpMat -&gt; BoolElt, GrpMatElt
5<->LMGMeet(G, H, K) <->text680.htm#7874<->LMGMeet(G, H, K) : GrpMat, GrpMat, GrpMat -&gt;  GrpMat
5<->LMGMaximalSubgroups(G) <->text680.htm#7875<->LMGMaximalSubgroups(G) : GrpMat -&gt; SeqEnum
5<->LMGNormalSubgroups(G) <->text680.htm#7876<->LMGNormalSubgroups(G) : GrpMat -&gt; SeqEnum
5<->LMGLowIndexSubgroups(G,n) <->text680.htm#7877<->LMGLowIndexSubgroups(G,n) : GrpMat, RngIntElt -&gt; SeqEnum
5<->LMGCosetAction(G,H : parameters) <->text680.htm#7878<->LMGCosetAction(G,H : parameters) : GrpMat, GrpMat -&gt;                                                   Map, GrpPerm, GrpMat
5<->LMGCosetImage(G,H) <->text680.htm#7879<->LMGCosetImage(G,H) : GrpMat, GrpMat -&gt; GrpPerm
5<->LMGCosetActionInverseImage(G, f, i) <->text680.htm#7880<->LMGCosetActionInverseImage(G, f, i) : GrpMat, Map, RngIntElt -&gt; GrpMatElt
5<->LMGRightTransversal(G,H : parameters) <->text680.htm#7881<->LMGRightTransversal(G,H : parameters) : GrpMat, GrpMat -&gt; SeqEnum
5<->LMGIsPrimitive(G) <->text680.htm#7882<->LMGIsPrimitive(G) : GrpMat -&gt; BoolElt
5<->LMGCharacterTable(G : parameters) <->text680.htm#7883<->LMGCharacterTable(G : parameters) : GrpMat -&gt; SeqEnum
4<->GrpMatFF_LMGex2 (Example H65E18)<->text680.htm#7884<->GrpMatFF_LMGex2 (Example H65E18)
4<->Example-LMGex2 :<->text680.htm#7884<->Example-LMGex2 :: GrpMatFF_LMGex2 (Example H65E18)
3<->The LMG functions (MATRIX GROUPS OVER FINITE FIELDS)<->text680.htm<->The LMG functions (MATRIX GROUPS OVER FINITE FIELDS)
3<->UnipPC :<->text681.htm<->UnipPC :: Unipotent Matrix Groups (MATRIX GROUPS OVER FINITE FIELDS)
5<->UnipotentMatrixGroup(G) <->text681.htm#7886<->UnipotentMatrixGroup(G) : GrpMat -&gt; GrpMatUnip
5<->WordMap(G) <->text681.htm#7887<->WordMap(G) : GrpMatUnip -&gt; Map
4<->GrpMatFF_UnipPCWordMap (Example H65E19)<->text681.htm#7888<->GrpMatFF_UnipPCWordMap (Example H65E19)
4<->Example-UnipPCWordMap :<->text681.htm#7888<->Example-UnipPCWordMap :: GrpMatFF_UnipPCWordMap (Example H65E19)
5<->PCPresentation(G) <->text681.htm#7889<->PCPresentation(G) : GrpMatUnip -&gt; GrpPC, Map, Map
5<-># :: Order(G) <->text681.htm#7890<-># :: Order(G) : GrpMatUnip -&gt; RngIntElt
5<->FactoredOrder :: Order(G) <->text681.htm#7890<->FactoredOrder :: Order(G) : GrpMatUnip -&gt; RngIntElt
5<->Order(G) <->text681.htm#7890<->Order(G) : GrpMatUnip -&gt; RngIntElt
5<->g in G <->text681.htm#7891<->g in G : GrpMatElt, GrpMatUnip -&gt; BoolElt
4<->GrpMatFF_UnipPCPres (Example H65E20)<->text681.htm#7892<->GrpMatFF_UnipPCPres (Example H65E20)
4<->Example-UnipPCPres :<->text681.htm#7892<->Example-UnipPCPres :: GrpMatFF_UnipPCPres (Example H65E20)
3<->UnipPC :<->text681.htm<->UnipPC :: Unipotent Matrix Groups (MATRIX GROUPS OVER FINITE FIELDS)
3<->matrix-ff :<->text673.htm<->matrix-ff :: MATRIX GROUPS OVER FINITE FIELDS
3<->matrix-group-inf :<->text684.htm<->matrix-group-inf :: MATRIX GROUPS OVER INFINITE FIELDS
3<->Overview (MATRIX GROUPS OVER INFINITE FIELDS)<->text685.htm<->Overview (MATRIX GROUPS OVER INFINITE FIELDS)
3<->congruence :<->text686.htm<->congruence :: Construction of Congruence Homomorphisms (MATRIX GROUPS OVER INFINITE FIELDS)
5<->CongruenceImage(G : parameters) <->text686.htm#7898<->CongruenceImage(G : parameters) : GrpMat -&gt; GrpMat,HomGrp, []
3<->congruence :<->text686.htm<->congruence :: Construction of Congruence Homomorphisms (MATRIX GROUPS OVER INFINITE FIELDS)
3<->finite-test :<->text687.htm<->finite-test :: Testing Finiteness (MATRIX GROUPS OVER INFINITE FIELDS)
5<->IsFinite(G : parameters) <->text687.htm#7900<->IsFinite(G : parameters) : GrpMat -&gt; BoolElt, RngIntElt
5<->IsomorphicCopy(G : parameters) <->text687.htm#7901<->IsomorphicCopy(G : parameters) : GrpMat -&gt; BoolElt, GrpMat, HomGrp
5<->Order(G : parameters) <->text687.htm#7902<->Order(G : parameters) : GrpMat -&gt; RngIntElt
3<->finite-test :<->text687.htm<->finite-test :: Testing Finiteness (MATRIX GROUPS OVER INFINITE FIELDS)
3<->virtual_tests :<->text688.htm<->virtual_tests :: Deciding Virtual Properties of Linear Groups (MATRIX GROUPS OVER INFINITE FIELDS)
5<->IsSolubleByFinite(G : parameters) <->text688.htm#7904<->IsSolubleByFinite(G : parameters) : GrpMat -&gt; BoolElt
5<->IsPolycyclicByFinite(G : parameters) <->text688.htm#7905<->IsPolycyclicByFinite(G : parameters) : GrpMat -&gt; BoolElt
5<->IsNilpotentByFinite(G : parameters) <->text688.htm#7906<->IsNilpotentByFinite(G : parameters) : GrpMat -&gt; BoolElt
5<->IsAbelianByFinite(G : parameters) <->text688.htm#7907<->IsAbelianByFinite(G : parameters) : GrpMat -&gt; BoolElt
5<->IsCentralByFinite(G : parameters) <->text688.htm#7908<->IsCentralByFinite(G : parameters) : GrpMat -&gt; BoolElt
3<->virtual_tests :<->text688.htm<->virtual_tests :: Deciding Virtual Properties of Linear Groups (MATRIX GROUPS OVER INFINITE FIELDS)
3<->hirsch_rank :<->text689.htm<->hirsch_rank :: Hirsch Number and Pr{&uuml;fer Rank (MATRIX GROUPS OVER INFINITE FIELDS)
5<->HasFiniteRank (G) <->text689.htm#7910<->HasFiniteRank (G) : GrpMat -&gt; BoolElt
5<->HirschNumber (G) <->text689.htm#7911<->HirschNumber (G) : GrpMat -&gt; RngIntElt
5<->HasFiniteIndex (G, H) <->text689.htm#7912<->HasFiniteIndex (G, H) : GrpMat, GrpMat -&gt; BoolElt
5<->PrueferRankBound (G) <->text689.htm#7913<->PrueferRankBound (G) : GrpMat -&gt; BoolElt
3<->hirsch_rank :<->text689.htm<->hirsch_rank :: Hirsch Number and Pr{&uuml;fer Rank (MATRIX GROUPS OVER INFINITE FIELDS)
3<->other-properties :<->text690.htm<->other-properties :: Other Properties of Linear  Groups (MATRIX GROUPS OVER INFINITE FIELDS)
5<->IsCompletelyReducible(G : parameters) <->text690.htm#7915<->IsCompletelyReducible(G : parameters) : GrpMat -&gt; BoolElt
5<->CompletelyReduciblePart (G) <->text690.htm#7916<->CompletelyReduciblePart (G) : GrpMat -&gt; GrpMat, GrpMatElt
5<->IsUnipotent(G) <->text690.htm#7917<->IsUnipotent(G) : GrpMat -&gt; BoolElt, GrpMatElt
5<->IsNilpotent(G) <->text690.htm#7918<->IsNilpotent(G) : GrpMat -&gt; BoolElt
5<->IsSoluble(G : parameters) <->text690.htm#7919<->IsSoluble(G : parameters) : GrpMat -&gt; BoolElt
5<->IsPolycyclic(G : parameters) <->text690.htm#7920<->IsPolycyclic(G : parameters) : GrpMat -&gt; BoolElt
5<->HasFiniteOrder (g : parameters ) <->text690.htm#7921<->HasFiniteOrder (g : parameters ) : GrpMatElt -&gt; BoolElt, RngIntElt
3<->other-properties :<->text690.htm<->other-properties :: Other Properties of Linear  Groups (MATRIX GROUPS OVER INFINITE FIELDS)
3<->nilpotent_groups :<->text691.htm<->nilpotent_groups :: Other Functions for Nilpotent  Matrix Groups (MATRIX GROUPS OVER INFINITE FIELDS)
5<->RecogniseAbelian (G) <->text691.htm#7923<->RecogniseAbelian (G) : GrpMat -&gt; GrpGPC, Map, Map
5<->SylowSystem(G : parameters) <->text691.htm#7924<->SylowSystem(G : parameters) : GrpMat[FldFin] -&gt; []
5<->IsIrreducibleFiniteNilpotent(G : parameters)<->text691.htm#7925<->IsIrreducibleFiniteNilpotent(G : parameters): GrpMat -&gt; BoolElt, Any
5<->IsPrimitiveFiniteNilpotent(G : parameters)<->text691.htm#7926<->IsPrimitiveFiniteNilpotent(G : parameters): GrpMat -&gt; BoolElt, Any
3<->nilpotent_groups :<->text691.htm<->nilpotent_groups :: Other Functions for Nilpotent  Matrix Groups (MATRIX GROUPS OVER INFINITE FIELDS)
3<->examples :<->text692.htm<->examples :: Examples (MATRIX GROUPS OVER INFINITE FIELDS)
4<->GrpMatInf_IsFiniteMatrixGroupFQ (Example H66E1)<->text692.htm#7928<->GrpMatInf_IsFiniteMatrixGroupFQ (Example H66E1)
4<->Example-IsFiniteMatrixGroupFQ :<->text692.htm#7928<->Example-IsFiniteMatrixGroupFQ :: GrpMatInf_IsFiniteMatrixGroupFQ (Example H66E1)
4<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E2)<->text692.htm#7929<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E2)
4<->Example-IsFiniteMatrixGroupFF :<->text692.htm#7929<->Example-IsFiniteMatrixGroupFF :: GrpMatInf_IsFiniteMatrixGroupFF (Example H66E2)
4<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E3)<->text692.htm#7930<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E3)
4<->Example-IsFiniteMatrixGroupFF :<->text692.htm#7930<->Example-IsFiniteMatrixGroupFF :: GrpMatInf_IsFiniteMatrixGroupFF (Example H66E3)
4<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E4)<->text692.htm#7931<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E4)
4<->Example-IsFiniteMatrixGroupFF :<->text692.htm#7931<->Example-IsFiniteMatrixGroupFF :: GrpMatInf_IsFiniteMatrixGroupFF (Example H66E4)
4<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E5)<->text692.htm#7932<->GrpMatInf_IsFiniteMatrixGroupFF (Example H66E5)
4<->Example-IsFiniteMatrixGroupFF :<->text692.htm#7932<->Example-IsFiniteMatrixGroupFF :: GrpMatInf_IsFiniteMatrixGroupFF (Example H66E5)
4<->GrpMatInf_IsFiniteMatrixGroup (Example H66E6)<->text692.htm#7933<->GrpMatInf_IsFiniteMatrixGroup (Example H66E6)
4<->Example-IsFiniteMatrixGroup :<->text692.htm#7933<->Example-IsFiniteMatrixGroup :: GrpMatInf_IsFiniteMatrixGroup (Example H66E6)
4<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E7)<->text692.htm#7934<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E7)
4<->Example-IsFiniteMatrixGroupF :<->text692.htm#7934<->Example-IsFiniteMatrixGroupF :: GrpMatInf_IsFiniteMatrixGroupF (Example H66E7)
4<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E8)<->text692.htm#7935<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E8)
4<->Example-IsFiniteMatrixGroupF :<->text692.htm#7935<->Example-IsFiniteMatrixGroupF :: GrpMatInf_IsFiniteMatrixGroupF (Example H66E8)
4<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E9)<->text692.htm#7936<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E9)
4<->Example-IsFiniteMatrixGroupF :<->text692.htm#7936<->Example-IsFiniteMatrixGroupF :: GrpMatInf_IsFiniteMatrixGroupF (Example H66E9)
4<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E10)<->text692.htm#7937<->GrpMatInf_IsFiniteMatrixGroupF (Example H66E10)
4<->Example-IsFiniteMatrixGroupF :<->text692.htm#7937<->Example-IsFiniteMatrixGroupF :: GrpMatInf_IsFiniteMatrixGroupF (Example H66E10)
4<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E11)<->text692.htm#7938<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E11)
4<->Example-IsNilpotentMatrixGroupF :<->text692.htm#7938<->Example-IsNilpotentMatrixGroupF :: GrpMatInf_IsNilpotentMatrixGroupF (Example H66E11)
4<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E12)<->text692.htm#7939<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E12)
4<->Example-IsNilpotentMatrixGroupF :<->text692.htm#7939<->Example-IsNilpotentMatrixGroupF :: GrpMatInf_IsNilpotentMatrixGroupF (Example H66E12)
4<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E13)<->text692.htm#7940<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E13)
4<->Example-IsNilpotentMatrixGroupF :<->text692.htm#7940<->Example-IsNilpotentMatrixGroupF :: GrpMatInf_IsNilpotentMatrixGroupF (Example H66E13)
4<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E14)<->text692.htm#7941<->GrpMatInf_IsNilpotentMatrixGroupF (Example H66E14)
4<->Example-IsNilpotentMatrixGroupF :<->text692.htm#7941<->Example-IsNilpotentMatrixGroupF :: GrpMatInf_IsNilpotentMatrixGroupF (Example H66E14)
3<->examples :<->text692.htm<->examples :: Examples (MATRIX GROUPS OVER INFINITE FIELDS)
3<->matrix-group-inf :<->text684.htm<->matrix-group-inf :: MATRIX GROUPS OVER INFINITE FIELDS
3<->matrix-group-qz :<->text695.htm<->matrix-group-qz :: MATRIX GROUPS OVER Q AND Z
3<->Overview (MATRIX GROUPS OVER Q AND Z)<->text696.htm<->Overview (MATRIX GROUPS OVER Q AND Z)
3<->forms :<->text697.htm<->forms :: Invariant Forms (MATRIX GROUPS OVER Q AND Z)
5<->PositiveDefiniteForm(G) <->text697.htm#7947<->PositiveDefiniteForm(G) : GrpMat -&gt; Mtrx
5<->SymmetricForms :: InvariantForms(G) <->text697.htm#7948<->SymmetricForms :: InvariantForms(G) : GrpMat -&gt; [ AlgMatElt ]
5<->AntisymmetricForms :: InvariantForms(G) <->text697.htm#7948<->AntisymmetricForms :: InvariantForms(G) : GrpMat -&gt; [ AlgMatElt ]
5<->InvariantForms(G) <->text697.htm#7948<->InvariantForms(G) : GrpMat -&gt; [ AlgMatElt ]
5<->SymmetricForms :: InvariantForms(G, n) <->text697.htm#7949<->SymmetricForms :: InvariantForms(G, n) : GrpMat, RngIntElt -&gt; [ AlgMatElt ]
5<->AntisymmetricForms :: InvariantForms(G, n) <->text697.htm#7949<->AntisymmetricForms :: InvariantForms(G, n) : GrpMat, RngIntElt -&gt; [ AlgMatElt ]
5<->InvariantForms(G, n) <->text697.htm#7949<->InvariantForms(G, n) : GrpMat, RngIntElt -&gt; [ AlgMatElt ]
5<->NumberOfSymmetricForms :: NumberOfInvariantForms(G) <->text697.htm#7950<->NumberOfSymmetricForms :: NumberOfInvariantForms(G) : GrpMat -&gt; RngIntElt, RngIntElt
5<->NumberOfAntisymmetricForms :: NumberOfInvariantForms(G) <->text697.htm#7950<->NumberOfAntisymmetricForms :: NumberOfInvariantForms(G) : GrpMat -&gt; RngIntElt, RngIntElt
5<->NumberOfInvariantForms(G) <->text697.htm#7950<->NumberOfInvariantForms(G) : GrpMat -&gt; RngIntElt, RngIntElt
3<->forms :<->text697.htm<->forms :: Invariant Forms (MATRIX GROUPS OVER Q AND Z)
3<->Endomorphisms (MATRIX GROUPS OVER Q AND Z)<->text698.htm<->Endomorphisms (MATRIX GROUPS OVER Q AND Z)
5<->EndomorphismAlgebra :: EndomorphismRing(G) <->text698.htm#7952<->EndomorphismAlgebra :: EndomorphismRing(G) : GrpMat -&gt; AlgMat
5<->EndomorphismRing(G) <->text698.htm#7952<->EndomorphismRing(G) : GrpMat -&gt; AlgMat
5<->CentreOfEndomorphismAlgebra :: CentreOfEndomorphismRing(G) <->text698.htm#7953<->CentreOfEndomorphismAlgebra :: CentreOfEndomorphismRing(G) : GrpMat -&gt; AlgMat
5<->CentreOfEndomorphismRing(G) <->text698.htm#7953<->CentreOfEndomorphismRing(G) : GrpMat -&gt; AlgMat
5<->DimensionOfEndomorphismRing(G) <->text698.htm#7954<->DimensionOfEndomorphismRing(G) : GrpMat -&gt; RngIntElt
5<->DimensionOfCentreOfEndomorphismRing(G) <->text698.htm#7955<->DimensionOfCentreOfEndomorphismRing(G) : GrpMat -&gt; RngIntElt
5<->Endomorphisms(G, n) <->text698.htm#7956<->Endomorphisms(G, n) : GrpMat, RngIntElt -&gt; [ AlgMatElt ]
5<->CentralEndomorphisms(G, n) <->text698.htm#7957<->CentralEndomorphisms(G, n) : GrpMat, RngIntElt -&gt; [ AlgMatElt ]
3<->Endomorphisms (MATRIX GROUPS OVER Q AND Z)<->text698.htm<->Endomorphisms (MATRIX GROUPS OVER Q AND Z)
3<->New Groups From Others (MATRIX GROUPS OVER Q AND Z)<->text699.htm<->New Groups From Others (MATRIX GROUPS OVER Q AND Z)
5<->BravaisGroup(G) <->text699.htm#7959<->BravaisGroup(G) : GrpMat[RngInt] -&gt; GrpMat
5<->IntegralGroup(G) <->text699.htm#7960<->IntegralGroup(G) : [Mtrx] -> [Mtrx], AlgMatElt
5<->IntegralGroup(G) <->text699.htm#7960<->IntegralGroup(G) : GrpMat -&gt; GrpMat, AlgMatElt
3<->New Groups From Others (MATRIX GROUPS OVER Q AND Z)<->text699.htm<->New Groups From Others (MATRIX GROUPS OVER Q AND Z)
3<->Perfect Forms and Normalizers (MATRIX GROUPS OVER Q AND Z)<->text700.htm<->Perfect Forms and Normalizers (MATRIX GROUPS OVER Q AND Z)
5<->PerfectForms(G) <->text700.htm#7962<->PerfectForms(G) : GrpMat[RngInt] -&gt; SeqEnum
5<->CentralizerGLZ :: NormalizerGLZ(G) <->text700.htm#7963<->CentralizerGLZ :: NormalizerGLZ(G) : GrpMat[RngInt] -&gt; GrpMat[RngInt]
5<->NormalizerGLZ(G) <->text700.htm#7963<->NormalizerGLZ(G) : GrpMat[RngInt] -&gt; GrpMat[RngInt]
3<->Perfect Forms and Normalizers (MATRIX GROUPS OVER Q AND Z)<->text700.htm<->Perfect Forms and Normalizers (MATRIX GROUPS OVER Q AND Z)
3<->Conjugacy (MATRIX GROUPS OVER Q AND Z)<->text701.htm<->Conjugacy (MATRIX GROUPS OVER Q AND Z)
5<->ZClasses(G) <->text701.htm#7965<->ZClasses(G) : GrpMat -&gt; SeqEnum, SeqEnum
5<->IsGLZConjugate(G, H) <->text701.htm#7966<->IsGLZConjugate(G, H) : GrpMat[RngInt], GrpMat[RngInt] -&gt; BoolElt, GrpMatElt
5<->IsBravaisEquivalent(G, H) <->text701.htm#7967<->IsBravaisEquivalent(G, H) : GrpMat[RngInt], GrpMat[RngInt] -&gt; BoolElt, GrpMatElt
5<->IsGLQConjugate(G, H) <->text701.htm#7968<->IsGLQConjugate(G, H) : GrpMat, GrpMat -&gt; BoolElt, GrpMatElt
3<->Conjugacy (MATRIX GROUPS OVER Q AND Z)<->text701.htm<->Conjugacy (MATRIX GROUPS OVER Q AND Z)
3<->Conjugacy_Matrices :<->text702.htm<->Conjugacy_Matrices :: Conjugacy Tests for Matrices (MATRIX GROUPS OVER Q AND Z)
5<->IsGLZConjugate(A, B) <->text702.htm#7970<->IsGLZConjugate(A, B) : GrpMatElt, GrpMatElt -> BoolElt, GrpMatElt
5<->IsSLZConjugate :: IsGLZConjugate(A, B) <->text702.htm#7970<->IsSLZConjugate :: IsGLZConjugate(A, B) : AlgMatElt, AlgMatElt -&gt; BoolElt, GrpMatElt
5<->IsSLZConjugate(A, B) : GrpMatElt, GrpMatElt -> BoolElt, GrpMatElt :: IsGLZConjugate(A, B) <->text702.htm#7970<->IsSLZConjugate(A, B) : GrpMatElt, GrpMatElt -> BoolElt, GrpMatElt :: IsGLZConjugate(A, B) : AlgMatElt, AlgMatElt -&gt; BoolElt, GrpMatElt
5<->IsGLZConjugate(A, B) <->text702.htm#7970<->IsGLZConjugate(A, B) : AlgMatElt, AlgMatElt -&gt; BoolElt, GrpMatElt
5<->CentralizerGLZ(A) <->text702.htm#7971<->CentralizerGLZ(A) : GrpMatElt -> GrpMat
5<->CentralizerGLZ(A) <->text702.htm#7971<->CentralizerGLZ(A) : AlgMatElt -&gt; GrpMat
3<->Conjugacy_Matrices :<->text702.htm<->Conjugacy_Matrices :: Conjugacy Tests for Matrices (MATRIX GROUPS OVER Q AND Z)
3<->Examples (MATRIX GROUPS OVER Q AND Z)<->text703.htm<->Examples (MATRIX GROUPS OVER Q AND Z)
4<->GrpMatQZ_ZClasses (Example H67E1)<->text703.htm#7973<->GrpMatQZ_ZClasses (Example H67E1)
4<->Example-ZClasses :<->text703.htm#7973<->Example-ZClasses :: GrpMatQZ_ZClasses (Example H67E1)
4<->GrpMatQZ_conjugacy (Example H67E2)<->text703.htm#7974<->GrpMatQZ_conjugacy (Example H67E2)
4<->Example-conjugacy :<->text703.htm#7974<->Example-conjugacy :: GrpMatQZ_conjugacy (Example H67E2)
4<->GrpMatQZ_conjugacy_matrices (Example H67E3)<->text703.htm#7975<->GrpMatQZ_conjugacy_matrices (Example H67E3)
4<->Example-conjugacy_matrices :<->text703.htm#7975<->Example-conjugacy_matrices :: GrpMatQZ_conjugacy_matrices (Example H67E3)
3<->Examples (MATRIX GROUPS OVER Q AND Z)<->text703.htm<->Examples (MATRIX GROUPS OVER Q AND Z)
3<->matrix-group-qz :<->text695.htm<->matrix-group-qz :: MATRIX GROUPS OVER Q AND Z
3<->soluble :<->text706.htm<->soluble :: FINITE SOLUBLE GROUPS
3<->GrpPC :<->text707.htm<->GrpPC :: Introduction (FINITE SOLUBLE GROUPS)
3<->introduction :<->text707.htm<->introduction :: Introduction (FINITE SOLUBLE GROUPS)
3<->pc-presentations :<->text707.htm#7980<->pc-presentations :: Power-Conjugate Presentations (FINITE SOLUBLE GROUPS)
3<->introduction :<->text707.htm<->introduction :: Introduction (FINITE SOLUBLE GROUPS)
3<->definition :<->text708.htm<->definition :: Creation of a Group (FINITE SOLUBLE GROUPS)
3<->construction-functions :<->text708.htm#7982<->construction-functions :: Construction Functions (FINITE SOLUBLE GROUPS)
5<->CyclicGroup(GrpPC, n) <->text708.htm#7983<->CyclicGroup(GrpPC, n) : Cat, RngIntElt -&gt; GrpPC
5<->AbelianGroup(GrpPC, Q) <->text708.htm#7984<->AbelianGroup(GrpPC, Q) : Cat, [RngIntElt] -&gt; GrpPC
5<->DihedralGroup(GrpPC, n) <->text708.htm#7985<->DihedralGroup(GrpPC, n) : Cat, RngIntElt -&gt; GrpPC
5<->ExtraSpecialGroup(GrpPC, p, n : parameters) <->text708.htm#7986<->ExtraSpecialGroup(GrpPC, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpPC
4<->GrpPC_Standard (Example H68E1)<->text708.htm#7987<->GrpPC_Standard (Example H68E1)
4<->Example-Standard :<->text708.htm#7987<->Example-Standard :: GrpPC_Standard (Example H68E1)
3<->construction-functions :<->text708.htm#7982<->construction-functions :: Construction Functions (FINITE SOLUBLE GROUPS)
3<->constructor :<->text708.htm#7988<->constructor :: Definition by Presentation (FINITE SOLUBLE GROUPS)
5<->PolycyclicGroup< x1, ..., xn | R : parameters > <->text708.htm#7989<->PolycyclicGroup&lt; x<sub>1</sub>, ..., x<sub>n</sub> | R : parameters &gt; : List(Identifiers), List(GrpFPRel) -&gt; GrpPC, Map
5<->quo< GrpPC : F | R : parameters > <->text708.htm#7990<->quo&lt; GrpPC : F | R : parameters &gt; : GrpFP, List(GrpFPRel) -&gt; GrpPC, Map
4<->GrpPC_PolycyclicGroup (Example H68E2)<->text708.htm#7991<->GrpPC_PolycyclicGroup (Example H68E2)
4<->Example-PolycyclicGroup :<->text708.htm#7991<->Example-PolycyclicGroup :: GrpPC_PolycyclicGroup (Example H68E2)
3<->constructor :<->text708.htm#7988<->constructor :: Definition by Presentation (FINITE SOLUBLE GROUPS)
3<->isconsistent :<->text708.htm#7992<->isconsistent :: Possibly Inconsistent Presentations (FINITE SOLUBLE GROUPS)
5<->IsConsistent(G) <->text708.htm#7993<->IsConsistent(G) : GrpPC -&gt; BoolElt
4<->GrpPC_IsConsistent (Example H68E3)<->text708.htm#7994<->GrpPC_IsConsistent (Example H68E3)
4<->Example-IsConsistent :<->text708.htm#7994<->Example-IsConsistent :: GrpPC_IsConsistent (Example H68E3)
3<->isconsistent :<->text708.htm#7992<->isconsistent :: Possibly Inconsistent Presentations (FINITE SOLUBLE GROUPS)
3<->definition :<->text708.htm<->definition :: Creation of a Group (FINITE SOLUBLE GROUPS)
3<->group-properties :<->text709.htm<->group-properties :: Basic Group Properties (FINITE SOLUBLE GROUPS)
3<->infrastructure :<->text709.htm#7996<->infrastructure :: Infrastructure (FINITE SOLUBLE GROUPS)
5<->G . i <->text709.htm#7997<->G . i : GrpPC, RngIntElt -&gt; GrpPCElt
5<->Generators(G) <->text709.htm#7998<->Generators(G) : GrpPC -&gt; SetEnum
5<->Ngens :: NumberOfGenerators(G) <->text709.htm#7999<->Ngens :: NumberOfGenerators(G) : GrpPC -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text709.htm#7999<->NumberOfGenerators(G) : GrpPC -&gt; RngIntElt
5<->PCGenerators(G) <->text709.htm#8000<->PCGenerators(G) : GrpPC -&gt; SetIndx
5<->NPCGenerators :: NumberOfPCGenerators(G) <->text709.htm#8001<->NPCGenerators :: NumberOfPCGenerators(G) : GrpPC -&gt; RngIntElt
5<->NPCgens :: NumberOfPCGenerators(G) <->text709.htm#8001<->NPCgens :: NumberOfPCGenerators(G) : GrpPC -&gt; RngIntElt
5<->NumberOfPCGenerators(G) <->text709.htm#8001<->NumberOfPCGenerators(G) : GrpPC -&gt; RngIntElt
5<->PCPrimes(G) <->text709.htm#8002<->PCPrimes(G) : GrpPC -&gt; [RngIntElt]
3<->infrastructure :<->text709.htm#7996<->infrastructure :: Infrastructure (FINITE SOLUBLE GROUPS)
3<->invariants :<->text709.htm#8003<->invariants :: Numerical Invariants (FINITE SOLUBLE GROUPS)
5<-># :: Order(G) <->text709.htm#8004<-># :: Order(G) : GrpPC -&gt; RngIntElt
5<->Order(G) <->text709.htm#8004<->Order(G) : GrpPC -&gt; RngIntElt
5<->FactoredOrder(G) <->text709.htm#8005<->FactoredOrder(G) : GrpPC -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->Exponent(G) <->text709.htm#8006<->Exponent(G) : GrpPC -&gt; RngIntElt
3<->invariants :<->text709.htm#8003<->invariants :: Numerical Invariants (FINITE SOLUBLE GROUPS)
3<->predicates :<->text709.htm#8007<->predicates :: Predicates (FINITE SOLUBLE GROUPS)
5<->IsAbelian(G) <->text709.htm#8008<->IsAbelian(G) : GrpPC -&gt; BoolElt
5<->IsCyclic(G) <->text709.htm#8009<->IsCyclic(G) : GrpPC -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text709.htm#8010<->IsElementaryAbelian(G) : GrpPC -&gt; BoolElt
5<->IsNilpotent(G) <->text709.htm#8011<->IsNilpotent(G) : GrpPC -&gt; BoolElt
5<->IsPerfect(G) <->text709.htm#8012<->IsPerfect(G) : GrpPC -&gt; BoolElt
5<->IsSimple(G) <->text709.htm#8013<->IsSimple(G) : GrpPC -&gt; BoolElt
5<->IsSolvable :: IsSoluble(G) <->text709.htm#8014<->IsSolvable :: IsSoluble(G) : GrpPC -&gt; BoolElt
5<->IsSoluble(G) <->text709.htm#8014<->IsSoluble(G) : GrpPC -&gt; BoolElt
5<->IsTrivial(G) <->text709.htm#8015<->IsTrivial(G) : GrpPC -&gt; BoolElt
5<->IsSpecial(G) <->text709.htm#8016<->IsSpecial(G) : GrpPC -&gt; BoolElt
5<->IsExtraSpecial(G) <->text709.htm#8017<->IsExtraSpecial(G) : GrpPC -&gt; BoolElt
4<->GrpPC_group-props (Example H68E4)<->text709.htm#8018<->GrpPC_group-props (Example H68E4)
4<->Example-group-props :<->text709.htm#8018<->Example-group-props :: GrpPC_group-props (Example H68E4)
3<->predicates :<->text709.htm#8007<->predicates :: Predicates (FINITE SOLUBLE GROUPS)
3<->group-properties :<->text709.htm<->group-properties :: Basic Group Properties (FINITE SOLUBLE GROUPS)
3<->homomorphisms :<->text710.htm<->homomorphisms :: Homomorphisms (FINITE SOLUBLE GROUPS)
5<->hom< G -> H | L > <->text710.htm#8020<->hom&lt; G -&gt; H | L &gt; : GrpPC, GrpPC, List -&gt; Map
5<->IsHomomorphism(G, H, L) <->text710.htm#8021<->IsHomomorphism(G, H, L) : GrpPC, GrpPC, SetEnum[Tup] -> BoolElt, Map
5<->IsHomomorphism(G, H, L) <->text710.htm#8021<->IsHomomorphism(G, H, L) : GrpPC, GrpPC, SeqEnum -&gt; BoolElt, Map
5<->IdentityHomomorphism(G) <->text710.htm#8022<->IdentityHomomorphism(G) : GrpPC -&gt; Map
5<->Kernel(f) <->text710.htm#8023<->Kernel(f) : Map -&gt; GrpPC
5<->Homomorphisms(G, H) <->text710.htm#8024<->Homomorphisms(G, H) : GrpPC, GrpPC -&gt; SeqEnum
4<->GrpPC_pc_hom (Example H68E5)<->text710.htm#8025<->GrpPC_pc_hom (Example H68E5)
4<->Example-pc_hom :<->text710.htm#8025<->Example-pc_hom :: GrpPC_pc_hom (Example H68E5)
3<->homomorphisms :<->text710.htm<->homomorphisms :: Homomorphisms (FINITE SOLUBLE GROUPS)
3<->extension :<->text711.htm<->extension :: New Groups from Existing (FINITE SOLUBLE GROUPS)
5<->DirectProduct(G, H) <->text711.htm#8027<->DirectProduct(G, H) : GrpPC, GrpPC -&gt; GrpPC, [Map], [Map]
5<->DirectProduct(Q) <->text711.htm#8028<->DirectProduct(Q) : [GrpPC] -&gt; GrpPC, [ Map ], [ Map ]
5<->Extension(G, H, f) <->text711.htm#8029<->Extension(G, H, f) : GrpPC, GrpPC, [Map] -&gt; GrpPC
5<->Extension(M, H) <->text711.htm#8030<->Extension(M, H) : ModGrp, GrpPC -&gt; GrpPC
5<->Extension(G, H, f, t) <->text711.htm#8031<->Extension(G, H, f, t) : GrpPC, GrpPC, [Map], Tup -> GrpPC
5<->Extension(G, H, f, t) <->text711.htm#8031<->Extension(G, H, f, t) : GrpPC, GrpPC, [Map], [GrpPCElt] -&gt; GrpPC
5<->Extension(M, H, t) <->text711.htm#8032<->Extension(M, H, t) : ModGrp, GrpPC, [ModGrpElt] -&gt; GrpPC
5<->IsExtension(M, H) <->text711.htm#8033<->IsExtension(M, H) : ModGrp, GrpPC -> BoolElt, GrpPC
5<->IsExtension(G, H, f, t) <->text711.htm#8033<->IsExtension(G, H, f, t) : GrpPC, GrpPC, [Map], [GrpPCElt] -> BoolElt, GrpPC
5<->IsExtension(G, H, f, t) <->text711.htm#8033<->IsExtension(G, H, f, t) : GrpPC, GrpPC, [Map], Tup -> BoolElt, GrpPC
5<->IsExtension(M, H, t) <->text711.htm#8033<->IsExtension(M, H, t) : ModGrp, GrpPC, [ModGrpElt] -> BoolElt, GrpPC
5<->IsExtension(G, H, f) <->text711.htm#8033<->IsExtension(G, H, f) : GrpPC, GrpPC, [Map] -&gt; BoolElt, GrpPC
5<->WreathProduct(G, H) <->text711.htm#8034<->WreathProduct(G, H) : GrpPC, GrpPC -&gt; GrpPC
5<->WreathProduct(G, H, f) <->text711.htm#8035<->WreathProduct(G, H, f) : GrpPC, GrpPC, [GrpPermElt] -> GrpPC
5<->WreathProduct(G, H, f) <->text711.htm#8035<->WreathProduct(G, H, f) : GrpPC, GrpPC, Map -&gt; GrpPC
4<->GrpPC_extension (Example H68E6)<->text711.htm#8036<->GrpPC_extension (Example H68E6)
4<->Example-extension :<->text711.htm#8036<->Example-extension :: GrpPC_extension (Example H68E6)
4<->GrpPC_cossey_hawkes (Example H68E7)<->text711.htm#8037<->GrpPC_cossey_hawkes (Example H68E7)
4<->Example-cossey_hawkes :<->text711.htm#8037<->Example-cossey_hawkes :: GrpPC_cossey_hawkes (Example H68E7)
3<->extension :<->text711.htm<->extension :: New Groups from Existing (FINITE SOLUBLE GROUPS)
3<->elements :<->text712.htm<->elements :: Elements (FINITE SOLUBLE GROUPS)
3<->definition :<->text712.htm#8039<->definition :: Definition of Elements (FINITE SOLUBLE GROUPS)
5<->G ! Q <->text712.htm#8040<->G ! Q : GrpPC, [RngIntElt] -&gt; GrpPCElt
5<->Eltseq :: ElementToSequence(x) <->text712.htm#8041<->Eltseq :: ElementToSequence(x) : GrpPCElt -&gt; [RngIntElt]
5<->ElementToSequence(x) <->text712.htm#8041<->ElementToSequence(x) : GrpPCElt -&gt; [RngIntElt]
5<->Identity(G) <->text712.htm#8042<->Identity(G) : GrpPC -&gt; GrpPCElt
5<->! :: Identity(G) <->text712.htm#8042<->! :: Identity(G) : GrpPC -&gt; GrpPCElt
5<->Identity(G) <->text712.htm#8042<->Identity(G) : GrpPC -&gt; GrpPCElt
4<->GrpPC_elt-definition (Example H68E8)<->text712.htm#8043<->GrpPC_elt-definition (Example H68E8)
4<->Example-elt-definition :<->text712.htm#8043<->Example-elt-definition :: GrpPC_elt-definition (Example H68E8)
3<->definition :<->text712.htm#8039<->definition :: Definition of Elements (FINITE SOLUBLE GROUPS)
3<->arithmetic :<->text712.htm#8044<->arithmetic :: Arithmetic Operations on Elements (FINITE SOLUBLE GROUPS)
5<->g * h <->text712.htm#8045<->g * h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->g *:= h <->text712.htm#8046<->g *:= h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->g ^ n<->text712.htm#8047<->g ^ n: GrpPCElt, RngIntElt -&gt; GrpPCElt
5<->g ^:= n<->text712.htm#8048<->g ^:= n: GrpPCElt, RngIntElt -&gt; GrpPCElt
5<->g / h <->text712.htm#8049<->g / h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->g /:= h <->text712.htm#8050<->g /:= h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->g ^ h <->text712.htm#8051<->g ^ h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->g ^:= h <->text712.htm#8052<->g ^:= h : GrpPCElt, GrpPCElt -&gt; GrpPCElt
5<->(,,) :: (g1, ..., gn) <->text712.htm#8053<->(,,) :: (g<sub>1</sub>, ..., g<sub>n</sub>) : List(GrpPCElt) -&gt; GrpPCElt
3<->arithmetic :<->text712.htm#8044<->arithmetic :: Arithmetic Operations on Elements (FINITE SOLUBLE GROUPS)
3<->properties :<->text712.htm#8054<->properties :: Properties of Elements (FINITE SOLUBLE GROUPS)
5<->Order(x) <->text712.htm#8055<->Order(x) : GrpPCElt -&gt; RngIntElt
5<->Parent(x) <->text712.htm#8056<->Parent(x) : GrpPCElt -&gt; GrpPC
3<->properties :<->text712.htm#8054<->properties :: Properties of Elements (FINITE SOLUBLE GROUPS)
3<->predicates :<->text712.htm#8057<->predicates :: Predicates for Elements (FINITE SOLUBLE GROUPS)
5<->g eq h <->text712.htm#8058<->g eq h : GrpPCElt, GrpPCElt -&gt; BoolElt
5<->g ne h <->text712.htm#8059<->g ne h : GrpPCElt, GrpPCElt -&gt; BoolElt
5<->IsIdentity(g) <->text712.htm#8060<->IsIdentity(g) : GrpPCElt -&gt; BoolElt
5<->IsConjugate(G, g, h) <->text712.htm#8061<->IsConjugate(G, g, h) : GrpPC, GrpPCElt, GrpPCElt -&gt; BoolElt, GrpPCElt
4<->GrpPC_elt_predicates (Example H68E9)<->text712.htm#8062<->GrpPC_elt_predicates (Example H68E9)
4<->Example-elt_predicates :<->text712.htm#8062<->Example-elt_predicates :: GrpPC_elt_predicates (Example H68E9)
3<->predicates :<->text712.htm#8057<->predicates :: Predicates for Elements (FINITE SOLUBLE GROUPS)
3<->set-ops :<->text712.htm#8063<->set-ops :: Set Operations (FINITE SOLUBLE GROUPS)
5<->NumberingMap(G) <->text712.htm#8064<->NumberingMap(G) : GrpPC -&gt; Map
5<->Random(G) <->text712.htm#8065<->Random(G) : GrpPC -&gt; GrpPCElt
5<->RandomProcess(G) <->text712.htm#8066<->RandomProcess(G) : GrpPC -&gt; Process
5<->Random(P) <->text712.htm#8067<->Random(P) : Process -&gt; GrpPCElt
5<->Representative(G) <->text712.htm#8068<->Representative(G) : GrpPC -&gt; GrpPCElt
4<->GrpPC_set_ops (Example H68E10)<->text712.htm#8069<->GrpPC_set_ops (Example H68E10)
4<->Example-set_ops :<->text712.htm#8069<->Example-set_ops :: GrpPC_set_ops (Example H68E10)
4<->GrpPC_Set (Example H68E11)<->text712.htm#8070<->GrpPC_Set (Example H68E11)
4<->Example-Set :<->text712.htm#8070<->Example-Set :: GrpPC_Set (Example H68E11)
3<->set-ops :<->text712.htm#8063<->set-ops :: Set Operations (FINITE SOLUBLE GROUPS)
3<->elements :<->text712.htm<->elements :: Elements (FINITE SOLUBLE GROUPS)
3<->elt-conjugacy :<->text713.htm<->elt-conjugacy :: Conjugacy (FINITE SOLUBLE GROUPS)
5<->Conjugates :: Class(H, g) <->text713.htm#8072<->Conjugates :: Class(H, g) : GrpPC, GrpPCElt -&gt; { GrpPCElt }
5<->^ :: Class(H, g) <->text713.htm#8072<->^ :: Class(H, g) : GrpPC, GrpPCElt -&gt; { GrpPCElt }
5<->Class(H, g) <->text713.htm#8072<->Class(H, g) : GrpPC, GrpPCElt -&gt; { GrpPCElt }
5<->ConjugacyClasses(G) <->text713.htm#8073<->ConjugacyClasses(G) : GrpPC -&gt; [ &lt;RngIntElt, RngIntElt, GrpPCElt&gt; ]
5<->ClassMap(G) <->text713.htm#8074<->ClassMap(G) : GrpPC -&gt; Map
5<->ClassRepresentative(G, i) <->text713.htm#8075<->ClassRepresentative(G, i) : GrpPC, RngIntElt -> GrpPCElt
5<->ClassRepresentative(G, x) <->text713.htm#8075<->ClassRepresentative(G, x) : GrpPC, GrpPCElt -&gt; GrpPCElt
5<->ClassCentralizer :: ClassCentraliser(G, i) <->text713.htm#8076<->ClassCentralizer :: ClassCentraliser(G, i) : GrpPC, RngIntElt -&gt; GrpPCElt
5<->ClassCentraliser(G, i) <->text713.htm#8076<->ClassCentraliser(G, i) : GrpPC, RngIntElt -&gt; GrpPCElt
5<->IsConjugate(G, g, h) <->text713.htm#8077<->IsConjugate(G, g, h) : GrpPC, GrpPCElt, GrpPCElt -&gt; BoolElt, GrpPCElt
5<->Nclasses :: NumberOfClasses(G) <->text713.htm#8078<->Nclasses :: NumberOfClasses(G) : GrpPC -&gt; RngIntElt
5<->NumberOfClasses(G) <->text713.htm#8078<->NumberOfClasses(G) : GrpPC -&gt; RngIntElt
5<->PowerMap(G) <->text713.htm#8079<->PowerMap(G) : GrpPC -&gt; Map
4<->GrpPC_class_map (Example H68E12)<->text713.htm#8080<->GrpPC_class_map (Example H68E12)
4<->Example-class_map :<->text713.htm#8080<->Example-class_map :: GrpPC_class_map (Example H68E12)
3<->elt-conjugacy :<->text713.htm<->elt-conjugacy :: Conjugacy (FINITE SOLUBLE GROUPS)
3<->subgroups :<->text714.htm<->subgroups :: Subgroups (FINITE SOLUBLE GROUPS)
3<->def-by-gens :<->text714.htm#8082<->def-by-gens :: Definition of Subgroups by Generators (FINITE SOLUBLE GROUPS)
5<->sub<G | L> <->text714.htm#8083<->sub&lt;G | L&gt; : GrpPC, List -&gt; GrpPC, Map
5<->ncl<G | L> <->text714.htm#8084<->ncl&lt;G | L&gt; : GrpPC, List -&gt; GrpPC, Map
4<->GrpPC_sub_creation (Example H68E13)<->text714.htm#8085<->GrpPC_sub_creation (Example H68E13)
4<->Example-sub_creation :<->text714.htm#8085<->Example-sub_creation :: GrpPC_sub_creation (Example H68E13)
3<->def-by-gens :<->text714.htm#8082<->def-by-gens :: Definition of Subgroups by Generators (FINITE SOLUBLE GROUPS)
3<->membership-coercion :<->text714.htm#8086<->membership-coercion :: Membership and Coercion (FINITE SOLUBLE GROUPS)
5<->g in G <->text714.htm#8087<->g in G : GrpPCElt, GrpPC -&gt; BoolElt
5<->g notin G <->text714.htm#8088<->g notin G : GrpPCElt, GrpPC -&gt; BoolElt
5<->G ! g <->text714.htm#8089<->G ! g : GrpPC, GrpPCElt -&gt; GrpPCElt
5<->H ! g <->text714.htm#8090<->H ! g : GrpPC, GrpPCElt -&gt; GrpPCElt
5<->K ! g <->text714.htm#8091<->K ! g : GrpPC, GrpPCElt -&gt; GrpPCElt
4<->GrpPC_coercion (Example H68E14)<->text714.htm#8092<->GrpPC_coercion (Example H68E14)
4<->Example-coercion :<->text714.htm#8092<->Example-coercion :: GrpPC_coercion (Example H68E14)
3<->membership-coercion :<->text714.htm#8086<->membership-coercion :: Membership and Coercion (FINITE SOLUBLE GROUPS)
3<->inclusion-equality :<->text714.htm#8093<->inclusion-equality :: Inclusion and Equality (FINITE SOLUBLE GROUPS)
5<->S subset G <->text714.htm#8094<->S subset G : { GrpPCElt } , GrpPC -&gt; BoolElt
5<->S notsubset G <->text714.htm#8095<->S notsubset G : { GrpPCElt } , GrpPC -&gt; BoolElt
5<->H subset G <->text714.htm#8096<->H subset G : GrpPC, GrpPC -&gt; BoolElt
5<->H notsubset G <->text714.htm#8097<->H notsubset G : GrpPC, GrpPC -&gt; BoolElt
5<->G eq H <->text714.htm#8098<->G eq H : GrpPC, GrpPC -&gt; BoolElt
5<->G ne H <->text714.htm#8099<->G ne H : GrpPC, GrpPC -&gt; BoolElt
5<->InclusionMap(G, H) <->text714.htm#8100<->InclusionMap(G, H) : GrpPC, GrpPC -&gt; Map
3<->inclusion-equality :<->text714.htm#8093<->inclusion-equality :: Inclusion and Equality (FINITE SOLUBLE GROUPS)
3<->constructions :<->text714.htm#8101<->constructions :: Standard Subgroup Constructions (FINITE SOLUBLE GROUPS)
5<->Conjugate :: H ^ g <->text714.htm#8102<->Conjugate :: H ^ g : GrpPC, GrpPCElt -&gt; GrpPC
5<->H ^ g <->text714.htm#8102<->H ^ g : GrpPC, GrpPCElt -&gt; GrpPC
5<->H meet K <->text714.htm#8103<->H meet K : GrpPC, GrpPC -&gt; GrpPC
5<->H meet:= K <->text714.htm#8104<->H meet:= K : GrpPC, GrpPC -&gt; GrpPC
5<->CommutatorSubgroup(H, K) <->text714.htm#8105<->CommutatorSubgroup(H, K) : GrpPC, GrpPC -> GrpPC
5<->CommutatorSubgroup(G, H, K) <->text714.htm#8105<->CommutatorSubgroup(G, H, K) : GrpPC, GrpPC, GrpPC -&gt; GrpPC
5<->Centraliser :: Centralizer(G, g) <->text714.htm#8106<->Centraliser :: Centralizer(G, g) : GrpPC, GrpPCElt -&gt; GrpPC
5<->Centralizer(G, g) <->text714.htm#8106<->Centralizer(G, g) : GrpPC, GrpPCElt -&gt; GrpPC
5<->Centraliser :: Centralizer(G, H) <->text714.htm#8107<->Centraliser :: Centralizer(G, H) : GrpPC, GrpPC -&gt; GrpPC
5<->Centralizer(G, H) <->text714.htm#8107<->Centralizer(G, H) : GrpPC, GrpPC -&gt; GrpPC
5<->Core(G, H) <->text714.htm#8108<->Core(G, H) : GrpPC, GrpPC -&gt; GrpPC
5<->NormalClosure :: H ^ G <->text714.htm#8109<->NormalClosure :: H ^ G : GrpPC, GrpPC -&gt; GrpPC
5<->H ^ G <->text714.htm#8109<->H ^ G : GrpPC, GrpPC -&gt; GrpPC
5<->Normaliser :: Normalizer(G, H) <->text714.htm#8110<->Normaliser :: Normalizer(G, H) : GrpPC, GrpPC -&gt; GrpPC
5<->Normalizer(G, H) <->text714.htm#8110<->Normalizer(G, H) : GrpPC, GrpPC -&gt; GrpPC
4<->GrpPC_subgroup-constructions (Example H68E15)<->text714.htm#8111<->GrpPC_subgroup-constructions (Example H68E15)
4<->Example-subgroup-constructions :<->text714.htm#8111<->Example-subgroup-constructions :: GrpPC_subgroup-constructions (Example H68E15)
3<->constructions :<->text714.htm#8101<->constructions :: Standard Subgroup Constructions (FINITE SOLUBLE GROUPS)
3<->subgroup-properties :<->text714.htm#8112<->subgroup-properties :: Properties of Subgroups (FINITE SOLUBLE GROUPS)
5<->Index(G, H) <->text714.htm#8113<->Index(G, H) : GrpPC, GrpPC -&gt; RngIntElt
5<->FactoredIndex(G, H) <->text714.htm#8114<->FactoredIndex(G, H) : GrpPC, GrpPC -&gt; [&lt;RngIntElt, RngIntElt&gt;]
3<->subgroup-properties :<->text714.htm#8112<->subgroup-properties :: Properties of Subgroups (FINITE SOLUBLE GROUPS)
3<->subgroup-predicates :<->text714.htm#8115<->subgroup-predicates :: Predicates for Subgroups (FINITE SOLUBLE GROUPS)
5<->IsCentral(G, H) <->text714.htm#8116<->IsCentral(G, H) : GrpPC, GrpPC -&gt; BoolElt
5<->IsConjugate(G, H, K) <->text714.htm#8117<->IsConjugate(G, H, K) : GrpPC, GrpPC, GrpPC -&gt; BoolElt, GrpPCElt
5<->IsMaximal(G, H) <->text714.htm#8118<->IsMaximal(G, H) : GrpPC, GrpPC -&gt; BoolElt
5<->IsNormal(G, H) <->text714.htm#8119<->IsNormal(G, H) : GrpPC, GrpPC -&gt; BoolElt
5<->IsSelfNormalizing(G, H) <->text714.htm#8120<->IsSelfNormalizing(G, H) : GrpPC, GrpPC -&gt; BoolElt
5<->IsSubnormal(G, H) <->text714.htm#8121<->IsSubnormal(G, H) : GrpPC, GrpPC -&gt; BoolElt
4<->GrpPC_sub-predicates (Example H68E16)<->text714.htm#8122<->GrpPC_sub-predicates (Example H68E16)
4<->Example-sub-predicates :<->text714.htm#8122<->Example-sub-predicates :: GrpPC_sub-predicates (Example H68E16)
3<->subgroup-predicates :<->text714.htm#8115<->subgroup-predicates :: Predicates for Subgroups (FINITE SOLUBLE GROUPS)
3<->Hall-pi-Sylow :<->text714.htm#8123<->Hall-pi-Sylow :: Hall &pi;-Subgroups and Sylow Systems (FINITE SOLUBLE GROUPS)
5<->ComplementBasis(G) <->text714.htm#8124<->ComplementBasis(G) : GrpPC -&gt; [GrpPC]
5<->HallSubgroup(G, S) <->text714.htm#8125<->HallSubgroup(G, S) : GrpPC, RngIntElt -> GrpPC
5<->HallSubgroup(G, S) <->text714.htm#8125<->HallSubgroup(G, S) : GrpPC, { RngIntElt }  -&gt; GrpPC
5<->pCore(G, S) <->text714.htm#8126<->pCore(G, S) : GrpPC, RngIntElt -> GrpPC
5<->pCore(G, S) <->text714.htm#8126<->pCore(G, S) : GrpPC, { RngIntElt }  -&gt; GrpPC
5<->SylowBasis(G) <->text714.htm#8127<->SylowBasis(G) : GrpPC -&gt; [GrpPC]
5<->SylowSubgroup(G, p) <->text714.htm#8128<->SylowSubgroup(G, p) : GrpPC, RngIntElt -&gt; GrpPC
5<->SystemNormaliser :: SystemNormalizer(G) <->text714.htm#8129<->SystemNormaliser :: SystemNormalizer(G) : GrpPC -&gt; GrpPC
5<->SystemNormalizer(G) <->text714.htm#8129<->SystemNormalizer(G) : GrpPC -&gt; GrpPC
4<->GrpPC_Hall (Example H68E17)<->text714.htm#8130<->GrpPC_Hall (Example H68E17)
4<->Example-Hall :<->text714.htm#8130<->Example-Hall :: GrpPC_Hall (Example H68E17)
3<->Hall-pi-Sylow :<->text714.htm#8123<->Hall-pi-Sylow :: Hall &pi;-Subgroups and Sylow Systems (FINITE SOLUBLE GROUPS)
3<->subgroup-classes :<->text714.htm#8131<->subgroup-classes :: Conjugacy Classes of Subgroups (FINITE SOLUBLE GROUPS)
5<->Subgroups :: SubgroupClasses(G) <->text714.htm#8132<->Subgroups :: SubgroupClasses(G) : GrpPC -&gt; SeqEnum
5<->SubgroupClasses(G) <->text714.htm#8132<->SubgroupClasses(G) : GrpPC -&gt; SeqEnum
5<->CyclicSubgroups :: AbelianSubgroups(G) <->text714.htm#8133<->CyclicSubgroups :: AbelianSubgroups(G) : GrpPC -&gt; SeqEnum
5<->ElementaryAbelianSubgroups :: AbelianSubgroups(G) <->text714.htm#8133<->ElementaryAbelianSubgroups :: AbelianSubgroups(G) : GrpPC -&gt; SeqEnum
5<->NilpotentSubgroups :: AbelianSubgroups(G) <->text714.htm#8133<->NilpotentSubgroups :: AbelianSubgroups(G) : GrpPC -&gt; SeqEnum
5<->AbelianSubgroups(G) <->text714.htm#8133<->AbelianSubgroups(G) : GrpPC -&gt; SeqEnum
5<->LowIndexSubgroups(G, n) <->text714.htm#8134<->LowIndexSubgroups(G, n) : GrpPC, RngIntElt -&gt; []
5<->MaximalSubgroups(G) <->text714.htm#8135<->MaximalSubgroups(G) : GrpPC -&gt; [GrpPC]
5<->SubgroupLattice(G) <->text714.htm#8136<->SubgroupLattice(G) : GrpPC -&gt; SubGrpLat
5<->BurnsideMatrix(G) <->text714.htm#8137<->BurnsideMatrix(G) : GrpPC -&gt; AlgMatElt
5<->TableOfMarks(G) <->text714.htm#8138<->TableOfMarks(G) : GrpPC -&gt; AlgMatElt
5<->DisplayBurnsideMatrix(G) <->text714.htm#8139<->DisplayBurnsideMatrix(G) : GrpPC -&gt;
4<->GrpPC_SubgroupClasses (Example H68E18)<->text714.htm#8140<->GrpPC_SubgroupClasses (Example H68E18)
4<->Example-SubgroupClasses :<->text714.htm#8140<->Example-SubgroupClasses :: GrpPC_SubgroupClasses (Example H68E18)
3<->subgroup-classes :<->text714.htm#8131<->subgroup-classes :: Conjugacy Classes of Subgroups (FINITE SOLUBLE GROUPS)
3<->subgroups :<->text714.htm<->subgroups :: Subgroups (FINITE SOLUBLE GROUPS)
3<->quotient :<->text715.htm<->quotient :: Quotient Groups (FINITE SOLUBLE GROUPS)
3<->construction-quotient :<->text715.htm#8142<->construction-quotient :: Construction of Quotient Groups (FINITE SOLUBLE GROUPS)
5<->quo<G | L> <->text715.htm#8143<->quo&lt;G | L&gt; : GrpPC, List -&gt; GrpPC, Map
5<->G / N <->text715.htm#8144<->G / N : GrpPC, GrpPC -&gt; GrpPC
4<->GrpPC_pc_quotient (Example H68E19)<->text715.htm#8145<->GrpPC_pc_quotient (Example H68E19)
4<->Example-pc_quotient :<->text715.htm#8145<->Example-pc_quotient :: GrpPC_pc_quotient (Example H68E19)
3<->construction-quotient :<->text715.htm#8142<->construction-quotient :: Construction of Quotient Groups (FINITE SOLUBLE GROUPS)
3<->construction-special-quotient :<->text715.htm#8146<->construction-special-quotient :: Abelian and  p-Quotients (FINITE SOLUBLE GROUPS)
5<->AbelianQuotient(G) <->text715.htm#8147<->AbelianQuotient(G) : GrpPC -&gt; GrpAb, Map
5<->AQInvariants :: AbelianQuotientInvariants(G) <->text715.htm#8148<->AQInvariants :: AbelianQuotientInvariants(G) : GrpPC -&gt; SeqEnum
5<->AbelianQuotientInvariants(G) <->text715.htm#8148<->AbelianQuotientInvariants(G) : GrpPC -&gt; SeqEnum
5<->ElementaryAbelianQuotient(G, p) <->text715.htm#8149<->ElementaryAbelianQuotient(G, p) : GrpPC, RngIntElt -&gt; GrpAb, Map
5<->pQuotient(G, p, c : parameters ) <->text715.htm#8150<->pQuotient(G, p, c : parameters ) : GrpPC, RngIntElt, RngIntElt -&gt; GrpPC, Map
3<->construction-special-quotient :<->text715.htm#8146<->construction-special-quotient :: Abelian and  p-Quotients (FINITE SOLUBLE GROUPS)
3<->quotient :<->text715.htm<->quotient :: Quotient Groups (FINITE SOLUBLE GROUPS)
3<->normal-series :<->text716.htm<->normal-series :: Normal Subgroups and  Subgroup Series (FINITE SOLUBLE GROUPS)
3<->characteristic-subgroups :<->text716.htm#8152<->characteristic-subgroups :: Characteristic Subgroups (FINITE SOLUBLE GROUPS)
5<->Center :: Centre(G) <->text716.htm#8153<->Center :: Centre(G) : GrpPC -&gt; GrpPC
5<->Centre(G) <->text716.htm#8153<->Centre(G) : GrpPC -&gt; GrpPC
5<->DerivedSubgroup :: CommutatorSubgroup(G) <->text716.htm#8154<->DerivedSubgroup :: CommutatorSubgroup(G) : GrpPC -&gt; GrpPC
5<->DerivedGroup :: CommutatorSubgroup(G) <->text716.htm#8154<->DerivedGroup :: CommutatorSubgroup(G) : GrpPC -&gt; GrpPC
5<->CommutatorSubgroup(G) <->text716.htm#8154<->CommutatorSubgroup(G) : GrpPC -&gt; GrpPC
5<->FittingGroup :: FittingSubgroup(G) <->text716.htm#8155<->FittingGroup :: FittingSubgroup(G) : GrpPC -&gt; GrpPC
5<->FittingSubgroup(G) <->text716.htm#8155<->FittingSubgroup(G) : GrpPC -&gt; GrpPC
5<->FrattiniSubgroup(G) <->text716.htm#8156<->FrattiniSubgroup(G) : GrpPC -&gt; GrpPC
5<->FrattiniQuotientRank(G) <->text716.htm#8157<->FrattiniQuotientRank(G) : GrpPC -&gt; GrpPC
5<->Hypercenter :: Hypercentre(G) <->text716.htm#8158<->Hypercenter :: Hypercentre(G) : GrpPC -&gt; GrpPC
5<->Hypercentre(G) <->text716.htm#8158<->Hypercentre(G) : GrpPC -&gt; GrpPC
5<->MinimalNormalSubgroups(G) <->text716.htm#8159<->MinimalNormalSubgroups(G) : GrpPC -&gt; [GrpPC]
5<->pCore(G, S) <->text716.htm#8160<->pCore(G, S) : GrpPC, RngIntElt -> GrpPC
5<->pCore(G, S) <->text716.htm#8160<->pCore(G, S) : GrpPC, { RngIntElt }  -&gt; GrpPC
5<->Socle(G) <->text716.htm#8161<->Socle(G) : GrpPC -&gt; GrpPC
3<->characteristic-subgroups :<->text716.htm#8152<->characteristic-subgroups :: Characteristic Subgroups (FINITE SOLUBLE GROUPS)
3<->subgroup-series :<->text716.htm#8162<->subgroup-series :: Subgroup Series (FINITE SOLUBLE GROUPS)
5<->PrimaryAbelianBasis(G) <->text716.htm#8163<->PrimaryAbelianBasis(G) : GrpPC -&gt; [ GrpPCElt ], [ RngIntElt ]
5<->PrimaryAbelianInvariants(G) <->text716.htm#8164<->PrimaryAbelianInvariants(G) : GrpPC -&gt; [RngIntElt]
5<->ChiefSeries(G) <->text716.htm#8165<->ChiefSeries(G) : GrpPC -&gt; [GrpPC]
5<->CompositionSeries(G) <->text716.htm#8166<->CompositionSeries(G) : GrpPC -&gt; [GrpPC]
5<->CompositionFactors(G) <->text716.htm#8167<->CompositionFactors(G) : GrpPC -&gt; SeqEnum
5<->CompositionSeries(G, i) <->text716.htm#8168<->CompositionSeries(G, i) : GrpPC, RngIntElt -&gt; [GrpPC]
5<->DerivedSeries(G) <->text716.htm#8169<->DerivedSeries(G) : GrpPC -&gt; [GrpPC]
5<->DerivedLength(G) <->text716.htm#8170<->DerivedLength(G) : GrpPC -&gt; RngIntElt
5<->ElementaryAbelianSeries(G) <->text716.htm#8171<->ElementaryAbelianSeries(G) : GrpPC -&gt; [GrpPC]
5<->ElementaryAbelianSeriesCanonical(G) <->text716.htm#8172<->ElementaryAbelianSeriesCanonical(G) : GrpPC -&gt; [GrpPC]
5<->LowerCentralSeries(G) <->text716.htm#8173<->LowerCentralSeries(G) : GrpPC -&gt; [GrpPC]
5<->NilpotencyClass(G) <->text716.htm#8174<->NilpotencyClass(G) : GrpPC -&gt; RngIntElt
5<->pCentralSeries(G, p) <->text716.htm#8175<->pCentralSeries(G, p) : GrpPC, RngIntElt -&gt; [GrpPC]
5<->SubnormalSeries(G, H) <->text716.htm#8176<->SubnormalSeries(G, H) : GrpPC, GrpPC -&gt; [GrpPC]
5<->UpperCentralSeries(G) <->text716.htm#8177<->UpperCentralSeries(G) : GrpPC -&gt; [GrpPC]
4<->GrpPC_EAS (Example H68E20)<->text716.htm#8178<->GrpPC_EAS (Example H68E20)
4<->Example-EAS :<->text716.htm#8178<->Example-EAS :: GrpPC_EAS (Example H68E20)
3<->subgroup-series :<->text716.htm#8162<->subgroup-series :: Subgroup Series (FINITE SOLUBLE GROUPS)
3<->char-series-pgroups :<->text716.htm#8179<->char-series-pgroups :: Series for p-groups (FINITE SOLUBLE GROUPS)
5<->Agemo(G, i) <->text716.htm#8180<->Agemo(G, i) : GrpPC, RngIntElt -&gt; GrpPC
5<->Omega(G, i) <->text716.htm#8181<->Omega(G, i) : GrpPC, RngIntElt -&gt; GrpPC
5<->JenningsSeries(G) <->text716.htm#8182<->JenningsSeries(G) : GrpPC -&gt; [GrpPC]
5<->pClass(G) <->text716.htm#8183<->pClass(G) : GrpPC  -&gt; RngIntElt
5<->pRanks(G) <->text716.htm#8184<->pRanks(G) : GrpPC-&gt; [ RngIntElt ]
3<->char-series-pgroups :<->text716.htm#8179<->char-series-pgroups :: Series for p-groups (FINITE SOLUBLE GROUPS)
3<->normals :<->text716.htm#8185<->normals :: Normal Subgroups and  Complements (FINITE SOLUBLE GROUPS)
5<->NormalSubgroups(G) <->text716.htm#8186<->NormalSubgroups(G) : GrpPC -&gt; SeqEnum
5<->NormalLattice(G) <->text716.htm#8187<->NormalLattice(G) : GrpPC -&gt; SubGrpLat
5<->MinimalNormalSubgroup(G) <->text716.htm#8188<->MinimalNormalSubgroup(G) : GrpPC -&gt; GrpPC
5<->MinimalNormalSubgroup(G, N) <->text716.htm#8189<->MinimalNormalSubgroup(G, N) : GrpPC -&gt; GrpPC
5<->Complements(G, N) <->text716.htm#8190<->Complements(G, N) : GrpPC, GrpPC -&gt; SeqEnum
5<->NormalComplements(G, N) <->text716.htm#8191<->NormalComplements(G, N) : GrpPC, GrpPC -&gt; SeqEnum
5<->NormalComplements(G, H, N) <->text716.htm#8192<->NormalComplements(G, H, N) : GrpPC, GrpPC, GrpPC -&gt; SeqEnum
4<->GrpPC_NormalComplements (Example H68E21)<->text716.htm#8193<->GrpPC_NormalComplements (Example H68E21)
4<->Example-NormalComplements :<->text716.htm#8193<->Example-NormalComplements :: GrpPC_NormalComplements (Example H68E21)
3<->normals :<->text716.htm#8185<->normals :: Normal Subgroups and  Complements (FINITE SOLUBLE GROUPS)
3<->normal-series :<->text716.htm<->normal-series :: Normal Subgroups and  Subgroup Series (FINITE SOLUBLE GROUPS)
3<->cosets :<->text717.htm<->cosets :: Cosets (FINITE SOLUBLE GROUPS)
3<->coset-table-transversals :<->text717.htm#8195<->coset-table-transversals :: Coset Tables and Transversals (FINITE SOLUBLE GROUPS)
5<->RightTransversal :: Transversal(G, H) <->text717.htm#8196<->RightTransversal :: Transversal(G, H) : GrpPC, GrpPC -&gt; {@ GrpPCElt  @}, Map
5<->Transversal(G, H) <->text717.htm#8196<->Transversal(G, H) : GrpPC, GrpPC -&gt; {@ GrpPCElt  @}, Map
5<->CosetTable(G, H) <->text717.htm#8197<->CosetTable(G, H) : GrpPC, GrpPC -&gt; Map
5<->Transversal(G, H, K) <->text717.htm#8198<->Transversal(G, H, K) : GrpPC, GrpPC, GrpPC -&gt; {@ GrpPCElt  @}, Map
5<->ShortCosets(p, H, G) <->text717.htm#8199<->ShortCosets(p, H, G) : GrpPCElt, GrpPC, GrpPC -&gt; [GrpPCElt]
3<->coset-table-transversals :<->text717.htm#8195<->coset-table-transversals :: Coset Tables and Transversals (FINITE SOLUBLE GROUPS)
3<->cosets-action :<->text717.htm#8200<->cosets-action :: Action on a Coset Space (FINITE SOLUBLE GROUPS)
5<->CosetAction(G, H) <->text717.htm#8201<->CosetAction(G, H) : Grp, Grp -&gt; Hom(Grp), GrpPerm, GrpPC
5<->CosetImage(G, H) <->text717.htm#8202<->CosetImage(G, H) : Grp, Grp -&gt; GrpPerm
5<->CosetKernel(G, H) <->text717.htm#8203<->CosetKernel(G, H) : Grp, Grp -&gt; Grp
3<->cosets-action :<->text717.htm#8200<->cosets-action :: Action on a Coset Space (FINITE SOLUBLE GROUPS)
3<->cosets :<->text717.htm<->cosets :: Cosets (FINITE SOLUBLE GROUPS)
3<->automorphism-group :<->text718.htm<->automorphism-group :: Automorphism Group (FINITE SOLUBLE GROUPS)
3<->auto-soluble-group :<->text718.htm#8205<->auto-soluble-group :: General Soluble Group (FINITE SOLUBLE GROUPS)
3<->lifting-auto-soluble-group :<->text718.htm#8206<->lifting-auto-soluble-group :: Lifting Algorithm (FINITE SOLUBLE GROUPS)
5<->AutomorphismGroup(G)<->text718.htm#8207<->AutomorphismGroup(G): GrpPC -&gt; GrpAuto
5<->HasAttribute(A, "GenWeights") <->text718.htm#8208<->HasAttribute(A, "GenWeights") : GrpAuto, MonStgElt -&gt; BoolElt, [ RngIntElt ]
5<->HasAttribute(A, "WeightSubgroupOrders") <->text718.htm#8209<->HasAttribute(A, "WeightSubgroupOrders") : GrpAuto, MonStgElt -&gt; BoolElt, [ RngIntElt ]
4<->GrpPC_AutomorphismGroup (Example H68E22)<->text718.htm#8210<->GrpPC_AutomorphismGroup (Example H68E22)
4<->Example-AutomorphismGroup :<->text718.htm#8210<->Example-AutomorphismGroup :: GrpPC_AutomorphismGroup (Example H68E22)
3<->lifting-auto-soluble-group :<->text718.htm#8206<->lifting-auto-soluble-group :: Lifting Algorithm (FINITE SOLUBLE GROUPS)
3<->auto-p-group-soluble-group :<->text718.htm#8211<->auto-p-group-soluble-group :: Lifting from the Automorphism Group of a Sylow p-subgroup (FINITE SOLUBLE GROUPS)
5<->AutomorphismGroupSolubleGroup(G: parameters)<->text718.htm#8212<->AutomorphismGroupSolubleGroup(G: parameters): GrpPC -&gt; GrpAuto
5<->IsIsomorphicSolubleGroup(G, H: parameters) <->text718.htm#8213<->IsIsomorphicSolubleGroup(G, H: parameters) : GrpPC, GrpPC -&gt; BoolElt, Map
4<->GrpPC_AutomorphismGroupSolubleGroup (Example H68E23)<->text718.htm#8214<->GrpPC_AutomorphismGroupSolubleGroup (Example H68E23)
4<->Example-AutomorphismGroupSolubleGroup :<->text718.htm#8214<->Example-AutomorphismGroupSolubleGroup :: GrpPC_AutomorphismGroupSolubleGroup (Example H68E23)
3<->auto-p-group-soluble-group :<->text718.htm#8211<->auto-p-group-soluble-group :: Lifting from the Automorphism Group of a Sylow p-subgroup (FINITE SOLUBLE GROUPS)
3<->auto-soluble-group :<->text718.htm#8205<->auto-soluble-group :: General Soluble Group (FINITE SOLUBLE GROUPS)
3<->auto-p-group :<->text718.htm#8215<->auto-p-group :: p-group (FINITE SOLUBLE GROUPS)
5<->AutomorphismGroup(G: parameters)<->text718.htm#8216<->AutomorphismGroup(G: parameters): GrpPC -&gt; GrpAuto
4<->GrpPC_pAutomorphismGroup (Example H68E24)<->text718.htm#8217<->GrpPC_pAutomorphismGroup (Example H68E24)
4<->Example-pAutomorphismGroup :<->text718.htm#8217<->Example-pAutomorphismGroup :: GrpPC_pAutomorphismGroup (Example H68E24)
5<->OrderAutomorphismGroupAbelianPGroup (A) <->text718.htm#8218<->OrderAutomorphismGroupAbelianPGroup (A) : SeqEnum -&gt;  RngIntElt
4<->GrpPC_subgroupsabelianpgroups (Example H68E25)<->text718.htm#8219<->GrpPC_subgroupsabelianpgroups (Example H68E25)
4<->Example-subgroupsabelianpgroups :<->text718.htm#8219<->Example-subgroupsabelianpgroups :: GrpPC_subgroupsabelianpgroups (Example H68E25)
3<->auto-p-group :<->text718.htm#8215<->auto-p-group :: p-group (FINITE SOLUBLE GROUPS)
3<->standard-presentation :<->text718.htm#8220<->standard-presentation :: Isomorphism and  Standard Presentations (FINITE SOLUBLE GROUPS)
5<->StandardPresentation(G: \parameters)<->text718.htm#8221<->StandardPresentation(G: \parameters): GrpPC -> GrpAuto
5<->StandardPresentation(G)<->text718.htm#8221<->StandardPresentation(G): GrpPC -&gt; GrpPC, Map
5<->IsIdenticalPresentation(G, H) <->text718.htm#8222<->IsIdenticalPresentation(G, H) : GrpPC, GrpPC -&gt; BoolElt
5<->IsIsomorphic(G, H) <->text718.htm#8223<->IsIsomorphic(G, H) : GrpPC, GrpPC -&gt; BoolElt, Map, GrpPC
4<->GrpPC_StandardPresentation (Example H68E26)<->text718.htm#8224<->GrpPC_StandardPresentation (Example H68E26)
4<->Example-StandardPresentation :<->text718.htm#8224<->Example-StandardPresentation :: GrpPC_StandardPresentation (Example H68E26)
3<->standard-presentation :<->text718.htm#8220<->standard-presentation :: Isomorphism and  Standard Presentations (FINITE SOLUBLE GROUPS)
3<->automorphism-group :<->text718.htm<->automorphism-group :: Automorphism Group (FINITE SOLUBLE GROUPS)
3<->Generating p-groups (FINITE SOLUBLE GROUPS)<->text719.htm<->Generating p-groups (FINITE SOLUBLE GROUPS)
5<->GeneratepGroups (p, d, c : parameters) <->text719.htm#8226<->GeneratepGroups (p, d, c : parameters) : RngIntElt, RngIntElt,RngIntElt -&gt; [GrpPC], RngIntElt
5<->Descendants(G, c : \parameters) <->text719.htm#8227<->Descendants(G, c : \parameters) : GrpPC, RngIntElt -> [GrpPC], RngIntElt
5<->Descendants(G : parameters) <->text719.htm#8227<->Descendants(G : parameters) : GrpPC -&gt; [GrpPC], RngIntElt
4<->GrpPC_Generating_p_groups (Example H68E27)<->text719.htm#8228<->GrpPC_Generating_p_groups (Example H68E27)
4<->Example-Generating_p_groups :<->text719.htm#8228<->Example-Generating_p_groups :: GrpPC_Generating_p_groups (Example H68E27)
4<->GrpPC_GeneratepGroups (Example H68E28)<->text719.htm#8229<->GrpPC_GeneratepGroups (Example H68E28)
4<->Example-GeneratepGroups :<->text719.htm#8229<->Example-GeneratepGroups :: GrpPC_GeneratepGroups (Example H68E28)
4<->GrpPC_IsGood (Example H68E29)<->text719.htm#8230<->GrpPC_IsGood (Example H68E29)
4<->Example-IsGood :<->text719.htm#8230<->Example-IsGood :: GrpPC_IsGood (Example H68E29)
5<->ClassTwo(p, d, Step : \parameters) <->text719.htm#8231<->ClassTwo(p, d, Step : \parameters) : RngIntElt, RngIntElt, SeqEnum -> SeqEnum
5<->ClassTwo(p, d, s : \parameters) <->text719.htm#8231<->ClassTwo(p, d, s : \parameters) : RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->ClassTwo(p, d : parameters) <->text719.htm#8231<->ClassTwo(p, d : parameters) : RngIntElt, RngIntElt -&gt; SeqEnum
4<->GrpPC_ClassTwo (Example H68E30)<->text719.htm#8232<->GrpPC_ClassTwo (Example H68E30)
4<->Example-ClassTwo :<->text719.htm#8232<->Example-ClassTwo :: GrpPC_ClassTwo (Example H68E30)
3<->Generating p-groups (FINITE SOLUBLE GROUPS)<->text719.htm<->Generating p-groups (FINITE SOLUBLE GROUPS)
3<->character-representation :<->text720.htm<->character-representation :: Representation Theory (FINITE SOLUBLE GROUPS)
5<->CharacterDegrees(G, z, p) <->text720.htm#8234<->CharacterDegrees(G, z, p) : GrpPC, GrpPCElt, RngIntElt -> [ Tup ]
5<->CharacterDegrees(G) <->text720.htm#8234<->CharacterDegrees(G) : GrpPC -&gt; [ Tup ]
5<->CharacterDegrees(G) <->text720.htm#8235<->CharacterDegrees(G) : GrpFin -&gt; [ Tup ]
5<->CharacterDegreesPGroup(G) <->text720.htm#8236<->CharacterDegreesPGroup(G) : GrpFin -&gt; [ RngIntElt ]
5<->CharacterTable(G: parameters) <->text720.htm#8237<->CharacterTable(G: parameters) : GrpPC -&gt; TabChtr
5<->CharacterTableConlon(G) <->text720.htm#8238<->CharacterTableConlon(G) : GrpPC -&gt; [ AlgChtrElt ]
5<->GModule(G, M) <->text720.htm#8239<->GModule(G, M) : GrpPC, AlgMat -&gt; ModAlg
5<->GModule(G, A) <->text720.htm#8240<->GModule(G, A) : GrpPC, GrpPC -&gt; ModAlg, Map
5<->GModule(G, A, B) <->text720.htm#8241<->GModule(G, A, B) : GrpPC, GrpPC, GrpPC -&gt; ModAlg, Map
5<->AbsolutelyIrreducibleModulesSchur :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8242<->AbsolutelyIrreducibleModulesSchur :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->AbsolutelyIrreducibleRepresentationsSchur(G, k, i$\colon$ \parameters) <->text720.htm#8242<->AbsolutelyIrreducibleRepresentationsSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[Map]
5<->AbsolutelyIrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8242<->AbsolutelyIrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->AbsolutelyIrreducibleRepresentationsSchur(G, k, L$\colon$ \parameters) <->text720.htm#8242<->AbsolutelyIrreducibleRepresentationsSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[Map] -> List[Map]
5<->AbsolutelyIrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8242<->AbsolutelyIrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->AbsolutelyIrreducibleRepresentationsSchur(G, k, L, i$\colon$ \parameters) <->text720.htm#8242<->AbsolutelyIrreducibleRepresentationsSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, List[Map], RngIntElt -> List[Map]
5<->AbsolutelyIrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8242<->AbsolutelyIrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8242<->AbsolutelyIrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->IrreducibleModulesSchur :: IrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8243<->IrreducibleModulesSchur :: IrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->IrreducibleRepresentationsSchur(G, k, i$\colon$ \parameters) <->text720.htm#8243<->IrreducibleRepresentationsSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[Map]
5<->IrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8243<->IrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->IrreducibleRepresentationsSchur(G, k, L$\colon$ \parameters) <->text720.htm#8243<->IrreducibleRepresentationsSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[Map] -> List[Map]
5<->IrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8243<->IrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->IrreducibleRepresentationsSchur(G, k, L, i$\colon$ \parameters) <->text720.htm#8243<->IrreducibleRepresentationsSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, List[Map], RngIntElt -> List[Map]
5<->IrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, List[GModule], RngIntElt -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8243<->IrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, List[GModule], RngIntElt -> List[GModule] :: IrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
5<->IrreducibleRepresentationsSchur(G, k: parameters) <->text720.htm#8243<->IrreducibleRepresentationsSchur(G, k: parameters) : GrpPC, Rng -&gt;     List[Map]
4<->GrpPC_Reps (Example H68E31)<->text720.htm#8244<->GrpPC_Reps (Example H68E31)
4<->Example-Reps :<->text720.htm#8244<->Example-Reps :: GrpPC_Reps (Example H68E31)
3<->character-representation :<->text720.htm<->character-representation :: Representation Theory (FINITE SOLUBLE GROUPS)
3<->central-extensions :<->text721.htm<->central-extensions :: Central Extensions (FINITE SOLUBLE GROUPS)
5<->ExtGenerators(G, U) <->text721.htm#8246<->ExtGenerators(G, U) : GrpPC, GrpPC -&gt; [&lt;AlgMatElt, RngIntElt&gt;]
5<->HomGenerators(G, U) <->text721.htm#8247<->HomGenerators(G, U) : GrpPC, GrpPC -&gt; [&lt;AlgMatElt, RngIntElt&gt;]
5<->ElementSequence(G) <->text721.htm#8248<->ElementSequence(G) : GrpPC -&gt; SeqEnum
5<->RepresentativeCocycles(G, U, Ext, Hom) <->text721.htm#8249<->RepresentativeCocycles(G, U, Ext, Hom) : GrpPC, GrpPC, [AlgMatElt], [AlgMatElt]-&gt; [AlgMatElt]
5<->CentralExtension(G, U, A) <->text721.htm#8250<->CentralExtension(G, U, A) : GrpPC, GrpPC, AlgMatElt -&gt; GrpPC
5<->CentralExtensions(G, U, Q) <->text721.htm#8251<->CentralExtensions(G, U, Q) : GrpPC, GrpPC, [AlgMatElt] -&gt; [GrpPC]
5<->CentralExtensionProcess(G, U) <->text721.htm#8252<->CentralExtensionProcess(G, U) : GrpPC, GrpPC -&gt; Proc
5<->NextExtension(~P) <->text721.htm#8253<->NextExtension(~P) : Rec -&gt; GrpPC
5<->IsEmpty(P) <->text721.htm#8254<->IsEmpty(P) : Rec -&gt; BoolElt
4<->GrpPC_CentralExtension (Example H68E32)<->text721.htm#8255<->GrpPC_CentralExtension (Example H68E32)
4<->Example-CentralExtension :<->text721.htm#8255<->Example-CentralExtension :: GrpPC_CentralExtension (Example H68E32)
3<->central-extensions :<->text721.htm<->central-extensions :: Central Extensions (FINITE SOLUBLE GROUPS)
3<->transfer-functions :<->text722.htm<->transfer-functions :: Transfer Between Group Categories (FINITE SOLUBLE GROUPS)
3<->to-grp-pc :<->text722.htm#8257<->to-grp-pc :: Transfer to GrpPC (FINITE SOLUBLE GROUPS)
5<->PCGroup(G) <->text722.htm#8258<->PCGroup(G) : GrpMat -> GrpPC, Map
5<->\vapour PCGroup(G) <->text722.htm#8258<->\vapour PCGroup(G) : GrpFP -> GrpPC
5<->PCGroup(G) <->text722.htm#8258<->PCGroup(G) : GrpPerm -&gt; GrpPC, Map
5<->pQuotient(F, p, c : parameters ) <->text722.htm#8259<->pQuotient(F, p, c : parameters ) : GrpFP, RngIntElt, RngIntElt -&gt; GrpPC, Map
5<->SolvableQuotient :: SolubleQuotient(G) <->text722.htm#8260<->SolvableQuotient :: SolubleQuotient(G) : Grp -&gt; GrpPC, Map
5<->SolubleQuotient(G) <->text722.htm#8260<->SolubleQuotient(G) : Grp -&gt; GrpPC, Map
4<->GrpPC_pcgroup (Example H68E33)<->text722.htm#8261<->GrpPC_pcgroup (Example H68E33)
4<->Example-pcgroup :<->text722.htm#8261<->Example-pcgroup :: GrpPC_pcgroup (Example H68E33)
3<->to-grp-pc :<->text722.htm#8257<->to-grp-pc :: Transfer to GrpPC (FINITE SOLUBLE GROUPS)
3<->from-grp-pc :<->text722.htm#8262<->from-grp-pc :: Transfer from GrpPC (FINITE SOLUBLE GROUPS)
5<->AbelianGroup(G) <->text722.htm#8263<->AbelianGroup(G) : GrpPC -&gt; GrpAb, Map
5<->FPGroup(G) <->text722.htm#8264<->FPGroup(G) : GrpPC -&gt; GrpFP, Map
5<->GPCGroup(G) <->text722.htm#8265<->GPCGroup(G) : GrpPC -&gt; GrpGPC, Map
4<->GrpPC_pc-to-perm (Example H68E34)<->text722.htm#8266<->GrpPC_pc-to-perm (Example H68E34)
4<->Example-pc-to-perm :<->text722.htm#8266<->Example-pc-to-perm :: GrpPC_pc-to-perm (Example H68E34)
3<->from-grp-pc :<->text722.htm#8262<->from-grp-pc :: Transfer from GrpPC (FINITE SOLUBLE GROUPS)
3<->transfer-functions :<->text722.htm<->transfer-functions :: Transfer Between Group Categories (FINITE SOLUBLE GROUPS)
3<->more-presentations :<->text723.htm<->more-presentations :: More About Presentations (FINITE SOLUBLE GROUPS)
3<->conditioned-presentation :<->text723.htm#8268<->conditioned-presentation :: Conditioned Presentations (FINITE SOLUBLE GROUPS)
3<->operation-group :<->text723.htm#8269<->operation-group :: Structure Operations (FINITE SOLUBLE GROUPS)
5<->ConditionedGroup(G) <->text723.htm#8270<->ConditionedGroup(G) : GrpPC -&gt; GrpPC
5<->IsConditioned(G) <->text723.htm#8271<->IsConditioned(G) : GrpPC -&gt; BoolElt
3<->operation-group :<->text723.htm#8269<->operation-group :: Structure Operations (FINITE SOLUBLE GROUPS)
3<->operation-element :<->text723.htm#8272<->operation-element :: Element Operations (FINITE SOLUBLE GROUPS)
5<->LeadingTerm(x) <->text723.htm#8273<->LeadingTerm(x) : GrpPCElt -&gt; GrpPCElt
5<->LeadingGenerator(x) <->text723.htm#8274<->LeadingGenerator(x) : GrpPCElt -&gt; GrpPCElt
5<->LeadingExponent(x) <->text723.htm#8275<->LeadingExponent(x) : GrpPCElt -&gt; RngIntElt
5<->Depth(x) <->text723.htm#8276<->Depth(x) : GrpPCElt -&gt; RngIntElt
5<->WeightClass :: PCClass(x) <->text723.htm#8277<->WeightClass :: PCClass(x) : GrpPCElt -&gt; RngIntElt
5<->PCClass(x) <->text723.htm#8277<->PCClass(x) : GrpPCElt -&gt; RngIntElt
3<->operation-element :<->text723.htm#8272<->operation-element :: Element Operations (FINITE SOLUBLE GROUPS)
3<->conditioned-presentation :<->text723.htm#8268<->conditioned-presentation :: Conditioned Presentations (FINITE SOLUBLE GROUPS)
3<->special-presentation :<->text723.htm#8278<->special-presentation :: Special Presentations (FINITE SOLUBLE GROUPS)
5<->SpecialPresentation(G) <->text723.htm#8279<->SpecialPresentation(G) : GrpPC -&gt; GrpPC
5<->SpecialWeights(G) <->text723.htm#8280<->SpecialWeights(G) : GrpPC -&gt; [ &lt;RngIntElt, RngIntElt, RngIntElt&gt; ]
5<->NilpotentLength(G) <->text723.htm#8281<->NilpotentLength(G) : GrpPC -&gt; RngIntElt
5<->NilpotentBoundary(G,i) <->text723.htm#8282<->NilpotentBoundary(G,i) : GrpPC, RngIntElt -&gt; RngIntElt
5<->MinorLength(G,i) <->text723.htm#8283<->MinorLength(G,i) : GrpPC, RngIntElt -&gt; RngIntElt
5<->MinorBoundary(G,i,j) <->text723.htm#8284<->MinorBoundary(G,i,j) : GrpPC, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LayerLength(G,i,j) <->text723.htm#8285<->LayerLength(G,i,j) : GrpPC, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LayerBoundary(G,i,j,k) <->text723.htm#8286<->LayerBoundary(G,i,j,k) : GrpPC, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
4<->GrpPC_SpecialPresentation (Example H68E35)<->text723.htm#8287<->GrpPC_SpecialPresentation (Example H68E35)
4<->Example-SpecialPresentation :<->text723.htm#8287<->Example-SpecialPresentation :: GrpPC_SpecialPresentation (Example H68E35)
3<->special-presentation :<->text723.htm#8278<->special-presentation :: Special Presentations (FINITE SOLUBLE GROUPS)
3<->compact-presentation :<->text723.htm#8288<->compact-presentation :: CompactPresentation (FINITE SOLUBLE GROUPS)
5<->CompactPresentation(G) <->text723.htm#8289<->CompactPresentation(G) : GrpPC -&gt; [RngIntElt]
5<->PCGroup(Q : parameters ) <->text723.htm#8290<->PCGroup(Q : parameters ) : [RngIntElt] -&gt; GrpPC
4<->GrpPC_CompactPresentation (Example H68E36)<->text723.htm#8291<->GrpPC_CompactPresentation (Example H68E36)
4<->Example-CompactPresentation :<->text723.htm#8291<->Example-CompactPresentation :: GrpPC_CompactPresentation (Example H68E36)
3<->compact-presentation :<->text723.htm#8288<->compact-presentation :: CompactPresentation (FINITE SOLUBLE GROUPS)
3<->more-presentations :<->text723.htm<->more-presentations :: More About Presentations (FINITE SOLUBLE GROUPS)
3<->optimization :<->text724.htm<->optimization :: Optimizing Magma Code (FINITE SOLUBLE GROUPS)
3<->power-group :<->text724.htm#8293<->power-group :: PowerGroup (FINITE SOLUBLE GROUPS)
4<->GrpPC_PowerGroupTwo (Example H68E37)<->text724.htm#8294<->GrpPC_PowerGroupTwo (Example H68E37)
4<->Example-PowerGroupTwo :<->text724.htm#8294<->Example-PowerGroupTwo :: GrpPC_PowerGroupTwo (Example H68E37)
3<->power-group :<->text724.htm#8293<->power-group :: PowerGroup (FINITE SOLUBLE GROUPS)
3<->optimization :<->text724.htm<->optimization :: Optimizing Magma Code (FINITE SOLUBLE GROUPS)
3<->soluble :<->text706.htm<->soluble :: FINITE SOLUBLE GROUPS
3<->blackbox :<->text726.htm<->blackbox :: BLACK-BOX GROUPS
3<->introduction :<->text727.htm<->introduction :: Introduction (BLACK-BOX GROUPS)
3<->creation :<->text728.htm<->creation :: Construction of an SLP-Group  and its Elements (BLACK-BOX GROUPS)
3<->free :<->text728.htm#8299<->free :: Structure Constructors (BLACK-BOX GROUPS)
5<->NaturalBlackBoxGroup(H) <->text728.htm#8300<->NaturalBlackBoxGroup(H) : Grp -&gt; GrpBB
3<->free :<->text728.htm#8299<->free :: Structure Constructors (BLACK-BOX GROUPS)
3<->element :<->text728.htm#8301<->element :: Construction of an Element (BLACK-BOX GROUPS)
5<->Identity(G) <->text728.htm#8302<->Identity(G) : GrpBB -&gt; GrpBBElt
5<->! :: Identity(G) <->text728.htm#8302<->! :: Identity(G) : GrpBB -&gt; GrpBBElt
5<->Identity(G) <->text728.htm#8302<->Identity(G) : GrpBB -&gt; GrpBBElt
3<->element :<->text728.htm#8301<->element :: Construction of an Element (BLACK-BOX GROUPS)
3<->creation :<->text728.htm<->creation :: Construction of an SLP-Group  and its Elements (BLACK-BOX GROUPS)
3<->operation :<->text729.htm<->operation :: Arithmetic with Elements (BLACK-BOX GROUPS)
5<->u * v <->text729.htm#8304<->u * v : GrpBBElt, GrpBBElt -&gt; GrpBBElt
5<->u ^ m <->text729.htm#8305<->u ^ m : GrpBBElt, RngIntElt -&gt; GrpBBElt
5<->u ^ v <->text729.htm#8306<->u ^ v : GrpBBElt, GrpBBElt -&gt; GrpBBElt
5<->(,) :: (u, v) <->text729.htm#8307<->(,) :: (u, v) : GrpBBElt, GrpBBElt -&gt; GrpBBElt
3<->access :<->text729.htm#8308<->access :: Accessing the Defining Generators (BLACK-BOX GROUPS)
5<->G . i <->text729.htm#8309<->G . i : GrpBB, RngIntElt -&gt; GrpBBElt
5<->Generators(G) <->text729.htm#8310<->Generators(G) : GrpBB -&gt; { GrpBBElt }
5<->Ngens :: NumberOfGenerators(G) <->text729.htm#8311<->Ngens :: NumberOfGenerators(G) : GrpBB -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text729.htm#8311<->NumberOfGenerators(G) : GrpBB -&gt; RngIntElt
3<->access :<->text729.htm#8308<->access :: Accessing the Defining Generators (BLACK-BOX GROUPS)
3<->operation :<->text729.htm<->operation :: Arithmetic with Elements (BLACK-BOX GROUPS)
3<->operation-element :<->text730.htm<->operation-element :: Operations on Elements (BLACK-BOX GROUPS)
3<->Boolean :<->text730.htm#8313<->Boolean :: Equality and Comparison (BLACK-BOX GROUPS)
5<->u eq v <->text730.htm#8314<->u eq v : GrpBBElt, GrpBBElt -&gt; BoolElt
5<->u ne v <->text730.htm#8315<->u ne v : GrpBBElt, GrpBBElt -&gt; BoolElt
3<->Boolean :<->text730.htm#8313<->Boolean :: Equality and Comparison (BLACK-BOX GROUPS)
3<->element_properties :<->text730.htm#8316<->element_properties :: Attributes of Elements (BLACK-BOX GROUPS)
5<->Parent(u) <->text730.htm#8317<->Parent(u) : GrpBBElt -&gt; GrpBB
5<->UnderlyingElement(u) <->text730.htm#8318<->UnderlyingElement(u) : GrpBBElt -&gt; GrpElt
5<->Order(u) <->text730.htm#8319<->Order(u) : GrpBBElt -&gt; RngIntElt
4<->GrpBB_standard-gens (Example H69E1)<->text730.htm#8320<->GrpBB_standard-gens (Example H69E1)
4<->Example-standard-gens :<->text730.htm#8320<->Example-standard-gens :: GrpBB_standard-gens (Example H69E1)
3<->element_properties :<->text730.htm#8316<->element_properties :: Attributes of Elements (BLACK-BOX GROUPS)
3<->operation-element :<->text730.htm<->operation-element :: Operations on Elements (BLACK-BOX GROUPS)
3<->set :<->text731.htm<->set :: Set-Theoretic Operations (BLACK-BOX GROUPS)
3<->Boolean :<->text731.htm#8322<->Boolean :: Membership and Equality (BLACK-BOX GROUPS)
5<->g in G <->text731.htm#8323<->g in G : GrpBBElt, GrpBB -&gt; BoolElt
3<->Boolean :<->text731.htm#8322<->Boolean :: Membership and Equality (BLACK-BOX GROUPS)
3<->operation :<->text731.htm#8324<->operation :: Set Operations (BLACK-BOX GROUPS)
5<->PseudoRandom(G) <->text731.htm#8325<->PseudoRandom(G) : GrpBB -&gt; GrpBBElt
5<->Rep(G) <->text731.htm#8326<->Rep(G) : GrpBB -&gt; GrpBBElt
3<->operation :<->text731.htm#8324<->operation :: Set Operations (BLACK-BOX GROUPS)
3<->coercion :<->text731.htm#8327<->coercion :: Coercions Between Related Groups (BLACK-BOX GROUPS)
5<->G ! g <->text731.htm#8328<->G ! g : GrpBB, GrpBBElt -&gt; GrpBBElt
3<->coercion :<->text731.htm#8327<->coercion :: Coercions Between Related Groups (BLACK-BOX GROUPS)
3<->set :<->text731.htm<->set :: Set-Theoretic Operations (BLACK-BOX GROUPS)
3<->blackbox :<->text726.htm<->blackbox :: BLACK-BOX GROUPS
3<->group-simple :<->text734.htm<->group-simple :: ALMOST SIMPLE GROUPS
3<->introduction :<->text735.htm<->introduction :: Introduction (ALMOST SIMPLE GROUPS)
3<->overview :<->text735.htm#8333<->overview :: Overview (ALMOST SIMPLE GROUPS)
3<->introduction :<->text735.htm<->introduction :: Introduction (ALMOST SIMPLE GROUPS)
3<->standard :<->text736.htm<->standard :: Creating Finite Groups of Lie  Type (ALMOST SIMPLE GROUPS)
3<->generic :<->text736.htm#8335<->generic :: Generic Creation Function (ALMOST SIMPLE GROUPS)
5<->ChevalleyGroup(X, n, q$\colon$ \parameters) <->text736.htm#8336<->ChevalleyGroup(X, n, q$\colon$ \parameters) : MonStgElt, RngIntElt, RngIntElt -> GrpMat
5<->ChevalleyGroup(X, n, K: parameters) <->text736.htm#8336<->ChevalleyGroup(X, n, K: parameters) : MonStgElt, RngIntElt, FldFin -&gt; GrpMat
3<->generic :<->text736.htm#8335<->generic :: Generic Creation Function (ALMOST SIMPLE GROUPS)
3<->chevorder :<->text736.htm#8337<->chevorder :: The Orders of the Chevalley Groups (ALMOST SIMPLE GROUPS)
5<->ChevalleyOrderPolynomial(type, n: parameters) <->text736.htm#8338<->ChevalleyOrderPolynomial(type, n: parameters) : MonStgElt, RngIntElt -&gt; RngUPolElt
5<->FactoredChevalleyGroupOrder(type, n, q$\colon$ \parameters) <->text736.htm#8339<->FactoredChevalleyGroupOrder(type, n, q$\colon$ \parameters) : MonStgElt, RngIntElt, RngIntElt -> RngIntEltFact
5<->FactoredChevalleyGroupOrder(type, n, F: parameters) <->text736.htm#8339<->FactoredChevalleyGroupOrder(type, n, F: parameters) : MonStgElt, RngIntElt, FldFin -&gt; RngIntEltFact
5<->ChevalleyGroupOrder(type, n, q$\colon$ \parameters) <->text736.htm#8339<->ChevalleyGroupOrder(type, n, q$\colon$ \parameters) : MonStgElt, RngIntElt, RngIntElt -> RngIntEltFact
5<->FactoredChevalleyGroupOrder(type, n, F: parameters) <->text736.htm#8339<->FactoredChevalleyGroupOrder(type, n, F: parameters) : MonStgElt, RngIntElt, FldFin -&gt; RngIntEltFact
3<->chevorder :<->text736.htm#8337<->chevorder :: The Orders of the Chevalley Groups (ALMOST SIMPLE GROUPS)
3<->classical :<->text736.htm#8340<->classical :: Classical Groups (ALMOST SIMPLE GROUPS)
3<->linear :<->text736.htm#8341<->linear :: Linear Groups (ALMOST SIMPLE GROUPS)
5<->GeneralLinearGroup(n, K) <->text736.htm#8342<->GeneralLinearGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->GeneralLinearGroup(V) <->text736.htm#8342<->GeneralLinearGroup(V) : ModTupRng -> GrpMat
5<->GL :: GeneralLinearGroup(n, q) <->text736.htm#8342<->GL :: GeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GL(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralLinearGroup(n, q) <->text736.htm#8342<->GL(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GL(V) : ModTupRng -> GrpMat :: GeneralLinearGroup(n, q) <->text736.htm#8342<->GL(V) : ModTupRng -> GrpMat :: GeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralLinearGroup(n, q) <->text736.htm#8342<->GeneralLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialLinearGroup(n, K) <->text736.htm#8343<->SpecialLinearGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpecialLinearGroup(V) <->text736.htm#8343<->SpecialLinearGroup(V) : ModTupRng -> GrpMat
5<->SL :: SpecialLinearGroup(n, q) <->text736.htm#8343<->SL :: SpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SL(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialLinearGroup(n, q) <->text736.htm#8343<->SL(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SL(V) : ModTupRng -> GrpMat :: SpecialLinearGroup(n, q) <->text736.htm#8343<->SL(V) : ModTupRng -> GrpMat :: SpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialLinearGroup(n, q) <->text736.htm#8343<->SpecialLinearGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->AffineGeneralLinearGroup(GrpMat, n, K) <->text736.htm#8344<->AffineGeneralLinearGroup(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat
5<->AffineGeneralLinearGroup(GrpMat, V) <->text736.htm#8344<->AffineGeneralLinearGroup(GrpMat, V) : Cat, ModTupRng -> GrpMat
5<->AffineGeneralLinearGroup(E) <->text736.htm#8344<->AffineGeneralLinearGroup(E) : GrpPerm -> GrpPerm
5<->AGL :: AffineGeneralLinearGroup(GrpMat, n, q) <->text736.htm#8344<->AGL :: AffineGeneralLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AGL(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat :: AffineGeneralLinearGroup(GrpMat, n, q) <->text736.htm#8344<->AGL(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat :: AffineGeneralLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AGL(GrpMat, V) : Cat, ModTupRng -> GrpMat :: AffineGeneralLinearGroup(GrpMat, n, q) <->text736.htm#8344<->AGL(GrpMat, V) : Cat, ModTupRng -> GrpMat :: AffineGeneralLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AGL(E) : GrpPerm -> GrpPerm :: AffineGeneralLinearGroup(GrpMat, n, q) <->text736.htm#8344<->AGL(E) : GrpPerm -> GrpPerm :: AffineGeneralLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AffineGeneralLinearGroup(GrpMat, n, q) <->text736.htm#8344<->AffineGeneralLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AffineSpecialLinearGroup(GrpMat, n, K) <->text736.htm#8345<->AffineSpecialLinearGroup(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat
5<->AffineSpecialLinearGroup(GrpMat, V) <->text736.htm#8345<->AffineSpecialLinearGroup(GrpMat, V) : Cat, ModTupRng -> GrpMat
5<->ASL :: AffineSpecialLinearGroup(GrpMat, n, q) <->text736.htm#8345<->ASL :: AffineSpecialLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->ASL(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat :: AffineSpecialLinearGroup(GrpMat, n, q) <->text736.htm#8345<->ASL(GrpMat, n, K) : Cat, RngIntElt, FldFin -> GrpMat :: AffineSpecialLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->ASL(GrpMat, V) : Cat, ModTupRng -> GrpMat :: AffineSpecialLinearGroup(GrpMat, n, q) <->text736.htm#8345<->ASL(GrpMat, V) : Cat, ModTupRng -> GrpMat :: AffineSpecialLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
5<->AffineSpecialLinearGroup(GrpMat, n, q) <->text736.htm#8345<->AffineSpecialLinearGroup(GrpMat, n, q) : Cat, RngIntElt, RngIntElt -&gt; GrpMat
3<->linear :<->text736.htm#8341<->linear :: Linear Groups (ALMOST SIMPLE GROUPS)
3<->unitary :<->text736.htm#8346<->unitary :: Unitary Groups (ALMOST SIMPLE GROUPS)
5<->ConformalUnitaryGroup(n, K) <->text736.htm#8347<->ConformalUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->ConformalUnitaryGroup(V)<->text736.htm#8347<->ConformalUnitaryGroup(V): ModTupRng -> GrpMat
5<->CU :: ConformalUnitaryGroup(n, q) <->text736.htm#8347<->CU :: ConformalUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CU(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalUnitaryGroup(n, q) <->text736.htm#8347<->CU(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CU(V): ModTupRng -> GrpMat :: ConformalUnitaryGroup(n, q) <->text736.htm#8347<->CU(V): ModTupRng -> GrpMat :: ConformalUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalUnitaryGroup(n, q) <->text736.htm#8347<->ConformalUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralUnitaryGroup(n, K) <->text736.htm#8348<->GeneralUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->GeneralUnitaryGroup(V)<->text736.htm#8348<->GeneralUnitaryGroup(V): ModTupRng -> GrpMat
5<->GU :: GeneralUnitaryGroup(n, q) <->text736.htm#8348<->GU :: GeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GU(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralUnitaryGroup(n, q) <->text736.htm#8348<->GU(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GU(V): ModTupRng -> GrpMat :: GeneralUnitaryGroup(n, q) <->text736.htm#8348<->GU(V): ModTupRng -> GrpMat :: GeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralUnitaryGroup(n, q) <->text736.htm#8348<->GeneralUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialUnitaryGroup(n, K) <->text736.htm#8349<->SpecialUnitaryGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpecialUnitaryGroup(V)<->text736.htm#8349<->SpecialUnitaryGroup(V): ModTupRng -> GrpMat
5<->SU :: SpecialUnitaryGroup(n, q) <->text736.htm#8349<->SU :: SpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SU(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialUnitaryGroup(n, q) <->text736.htm#8349<->SU(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SU(V): ModTupRng -> GrpMat :: SpecialUnitaryGroup(n, q) <->text736.htm#8349<->SU(V): ModTupRng -> GrpMat :: SpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialUnitaryGroup(n, q) <->text736.htm#8349<->SpecialUnitaryGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
3<->unitary :<->text736.htm#8346<->unitary :: Unitary Groups (ALMOST SIMPLE GROUPS)
3<->symplectic :<->text736.htm#8350<->symplectic :: Symplectic Groups (ALMOST SIMPLE GROUPS)
5<->ConformalSymplecticGroup(n, K) <->text736.htm#8351<->ConformalSymplecticGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->ConformalSymplecticGroup(V) <->text736.htm#8351<->ConformalSymplecticGroup(V) : ModTupRng -> GrpMat
5<->CSp :: ConformalSymplecticGroup(n, q) <->text736.htm#8351<->CSp :: ConformalSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CSp(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalSymplecticGroup(n, q) <->text736.htm#8351<->CSp(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CSp(V) : ModTupRng -> GrpMat :: ConformalSymplecticGroup(n, q) <->text736.htm#8351<->CSp(V) : ModTupRng -> GrpMat :: ConformalSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalSymplecticGroup(n, q) <->text736.htm#8351<->ConformalSymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SymplecticGroup(n, K) <->text736.htm#8352<->SymplecticGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->SymplecticGroup(V) <->text736.htm#8352<->SymplecticGroup(V) : ModTupRng -> GrpMat
5<->Sp :: SymplecticGroup(n, q) <->text736.htm#8352<->Sp :: SymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->Sp(n, K) : RngIntElt, FldFin -> GrpMat :: SymplecticGroup(n, q) <->text736.htm#8352<->Sp(n, K) : RngIntElt, FldFin -> GrpMat :: SymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->Sp(V) : ModTupRng -> GrpMat :: SymplecticGroup(n, q) <->text736.htm#8352<->Sp(V) : ModTupRng -> GrpMat :: SymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SymplecticGroup(n, q) <->text736.htm#8352<->SymplecticGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
3<->symplectic :<->text736.htm#8350<->symplectic :: Symplectic Groups (ALMOST SIMPLE GROUPS)
3<->orthogonal :<->text736.htm#8353<->orthogonal :: Orthogonal and Spin Groups (ALMOST SIMPLE GROUPS)
5<->ConformalOrthogonalGroup(n, K) <->text736.htm#8354<->ConformalOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->ConformalOrthogonalGroup(V)<->text736.htm#8354<->ConformalOrthogonalGroup(V): ModTupRng -> GrpMat
5<->CO :: ConformalOrthogonalGroup(n, q) <->text736.htm#8354<->CO :: ConformalOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CO(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroup(n, q) <->text736.htm#8354<->CO(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->CO(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroup(n, q) <->text736.htm#8354<->CO(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalOrthogonalGroup(n, q) <->text736.htm#8354<->ConformalOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroup(n, K) <->text736.htm#8355<->GeneralOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->GeneralOrthogonalGroup(V)<->text736.htm#8355<->GeneralOrthogonalGroup(V): ModTupRng -> GrpMat
5<->GO :: GeneralOrthogonalGroup(n, q) <->text736.htm#8355<->GO :: GeneralOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GO(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroup(n, q) <->text736.htm#8355<->GO(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GO(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroup(n, q) <->text736.htm#8355<->GO(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroup(n, q) <->text736.htm#8355<->GeneralOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroup(n, K) <->text736.htm#8356<->SpecialOrthogonalGroup(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpecialOrthogonalGroup(V)<->text736.htm#8356<->SpecialOrthogonalGroup(V): ModTupRng -> GrpMat
5<->SO :: SpecialOrthogonalGroup(n, q) <->text736.htm#8356<->SO :: SpecialOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SO(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroup(n, q) <->text736.htm#8356<->SO(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SO(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroup(n, q) <->text736.htm#8356<->SO(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroup(n, q) <->text736.htm#8356<->SpecialOrthogonalGroup(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalOrthogonalGroupPlus(n, K) <->text736.htm#8357<->ConformalOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpMat
5<->ConformalOrthogonalGroupPlus(V)<->text736.htm#8357<->ConformalOrthogonalGroupPlus(V): ModTupRng -> GrpMat
5<->COPlus :: ConformalOrthogonalGroupPlus(n, q) <->text736.htm#8357<->COPlus :: ConformalOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->COPlus(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroupPlus(n, q) <->text736.htm#8357<->COPlus(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->COPlus(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroupPlus(n, q) <->text736.htm#8357<->COPlus(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalOrthogonalGroupPlus(n, q) <->text736.htm#8357<->ConformalOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroupPlus(n, K) <->text736.htm#8358<->GeneralOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpMat
5<->GeneralOrthogonalGroupPlus(V)<->text736.htm#8358<->GeneralOrthogonalGroupPlus(V): ModTupRng -> GrpMat
5<->GOPlus :: GeneralOrthogonalGroupPlus(n, q) <->text736.htm#8358<->GOPlus :: GeneralOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GOPlus(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroupPlus(n, q) <->text736.htm#8358<->GOPlus(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GOPlus(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroupPlus(n, q) <->text736.htm#8358<->GOPlus(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroupPlus(n, q) <->text736.htm#8358<->GeneralOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroupPlus(n, K) <->text736.htm#8359<->SpecialOrthogonalGroupPlus(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpecialOrthogonalGroupPlus(V)<->text736.htm#8359<->SpecialOrthogonalGroupPlus(V): ModTupRng -> GrpMat
5<->SOPlus :: SpecialOrthogonalGroupPlus(n, q) <->text736.htm#8359<->SOPlus :: SpecialOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SOPlus(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroupPlus(n, q) <->text736.htm#8359<->SOPlus(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SOPlus(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroupPlus(n, q) <->text736.htm#8359<->SOPlus(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroupPlus(n, q) <->text736.htm#8359<->SpecialOrthogonalGroupPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalOrthogonalGroupMinus(n, K) <->text736.htm#8360<->ConformalOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpMat
5<->ConformalOrthogonalGroupMinus(V)<->text736.htm#8360<->ConformalOrthogonalGroupMinus(V): ModTupRng -> GrpMat
5<->COMinus :: ConformalOrthogonalGroupMinus(n, q) <->text736.htm#8360<->COMinus :: ConformalOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->COMinus(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroupMinus(n, q) <->text736.htm#8360<->COMinus(n, K) : RngIntElt, FldFin -> GrpMat :: ConformalOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->COMinus(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroupMinus(n, q) <->text736.htm#8360<->COMinus(V): ModTupRng -> GrpMat :: ConformalOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->ConformalOrthogonalGroupMinus(n, q) <->text736.htm#8360<->ConformalOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroupMinus(n, K) <->text736.htm#8361<->GeneralOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpMat
5<->GeneralOrthogonalGroupMinus(V)<->text736.htm#8361<->GeneralOrthogonalGroupMinus(V): ModTupRng -> GrpMat
5<->GOMinus :: GeneralOrthogonalGroupMinus(n, q) <->text736.htm#8361<->GOMinus :: GeneralOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GOMinus(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroupMinus(n, q) <->text736.htm#8361<->GOMinus(n, K) : RngIntElt, FldFin -> GrpMat :: GeneralOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GOMinus(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroupMinus(n, q) <->text736.htm#8361<->GOMinus(V): ModTupRng -> GrpMat :: GeneralOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->GeneralOrthogonalGroupMinus(n, q) <->text736.htm#8361<->GeneralOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroupMinus(n, K) <->text736.htm#8362<->SpecialOrthogonalGroupMinus(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpecialOrthogonalGroupMinus(V)<->text736.htm#8362<->SpecialOrthogonalGroupMinus(V): ModTupRng -> GrpMat
5<->SOMinus :: SpecialOrthogonalGroupMinus(n, q) <->text736.htm#8362<->SOMinus :: SpecialOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SOMinus(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroupMinus(n, q) <->text736.htm#8362<->SOMinus(n, K) : RngIntElt, FldFin -> GrpMat :: SpecialOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SOMinus(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroupMinus(n, q) <->text736.htm#8362<->SOMinus(V): ModTupRng -> GrpMat :: SpecialOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpecialOrthogonalGroupMinus(n, q) <->text736.htm#8362<->SpecialOrthogonalGroupMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->Omega(n, K) <->text736.htm#8363<->Omega(n, K) : RngIntElt, FldFin -> GrpMat
5<->Omega(V)<->text736.htm#8363<->Omega(V): ModTupRng -> GrpMat
5<->Omega(n, q) <->text736.htm#8363<->Omega(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->OmegaPlus(n, K) <->text736.htm#8364<->OmegaPlus(n, K) : RngIntElt, FldFin -> GrpMat
5<->OmegaPlus(V)<->text736.htm#8364<->OmegaPlus(V): ModTupRng -> GrpMat
5<->OmegaPlus(n, q) <->text736.htm#8364<->OmegaPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->OmegaMinus(n, K) <->text736.htm#8365<->OmegaMinus(n, K) : RngIntElt, FldFin -> GrpMat
5<->OmegaMinus(V)<->text736.htm#8365<->OmegaMinus(V): ModTupRng -> GrpMat
5<->OmegaMinus(n, q) <->text736.htm#8365<->OmegaMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->Spin(n, K) <->text736.htm#8366<->Spin(n, K) : RngIntElt, FldFin -> GrpMat
5<->Spin(V)<->text736.htm#8366<->Spin(V): ModTupRng -> GrpMat
5<->Spin(n, q) <->text736.htm#8366<->Spin(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpinPlus(n, K) <->text736.htm#8367<->SpinPlus(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpinPlus(V)<->text736.htm#8367<->SpinPlus(V): ModTupRng -> GrpMat
5<->SpinPlus(n, q) <->text736.htm#8367<->SpinPlus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
5<->SpinMinus(n, K) <->text736.htm#8368<->SpinMinus(n, K) : RngIntElt, FldFin -> GrpMat
5<->SpinMinus(V)<->text736.htm#8368<->SpinMinus(V): ModTupRng -> GrpMat
5<->SpinMinus(n, q) <->text736.htm#8368<->SpinMinus(n, q) : RngIntElt, RngIntElt -&gt; GrpMat
3<->orthogonal :<->text736.htm#8353<->orthogonal :: Orthogonal and Spin Groups (ALMOST SIMPLE GROUPS)
3<->classical :<->text736.htm#8340<->classical :: Classical Groups (ALMOST SIMPLE GROUPS)
3<->exceptional-groups :<->text736.htm#8369<->exceptional-groups :: Exceptional Groups (ALMOST SIMPLE GROUPS)
3<->suzuki :<->text736.htm#8370<->suzuki :: Suzuki Groups (ALMOST SIMPLE GROUPS)
5<->SuzukiGroup(K) <->text736.htm#8371<->SuzukiGroup(K) : FldFin -> GrpMat
5<->SuzukiGroup(V) <->text736.htm#8371<->SuzukiGroup(V) : ModTupRng -> GrpMat
5<->SuzukiGroup(q) <->text736.htm#8371<->SuzukiGroup(q) : RngIntElt -&gt; GrpMat
4<->GrpASim_Symplectic (Example H70E1)<->text736.htm#8372<->GrpASim_Symplectic (Example H70E1)
4<->Example-Symplectic :<->text736.htm#8372<->Example-Symplectic :: GrpASim_Symplectic (Example H70E1)
4<->GrpASim_Suzuki (Example H70E2)<->text736.htm#8373<->GrpASim_Suzuki (Example H70E2)
4<->Example-Suzuki :<->text736.htm#8373<->Example-Suzuki :: GrpASim_Suzuki (Example H70E2)
3<->suzuki :<->text736.htm#8370<->suzuki :: Suzuki Groups (ALMOST SIMPLE GROUPS)
3<->small_ree :<->text736.htm#8374<->small_ree :: Small Ree Groups (ALMOST SIMPLE GROUPS)
5<->ReeGroup(K) <->text736.htm#8375<->ReeGroup(K) : FldFin -> GrpMat
5<->ReeGroup(V) <->text736.htm#8375<->ReeGroup(V) : ModTupRng -> GrpMat
5<->ReeGroup(q) <->text736.htm#8375<->ReeGroup(q) : RngIntElt -&gt; GrpMat
3<->small_ree :<->text736.htm#8374<->small_ree :: Small Ree Groups (ALMOST SIMPLE GROUPS)
3<->large_ree :<->text736.htm#8376<->large_ree :: Large Ree Groups (ALMOST SIMPLE GROUPS)
5<->LargeReeGroup(K) <->text736.htm#8377<->LargeReeGroup(K) : FldFin -> GrpMat
5<->LargeReeGroup(V) <->text736.htm#8377<->LargeReeGroup(V) : ModTupRng -> GrpMat
5<->LargeReeGroup(q) <->text736.htm#8377<->LargeReeGroup(q) : RngIntElt -&gt; GrpMat
3<->large_ree :<->text736.htm#8376<->large_ree :: Large Ree Groups (ALMOST SIMPLE GROUPS)
3<->exceptional-groups :<->text736.htm#8369<->exceptional-groups :: Exceptional Groups (ALMOST SIMPLE GROUPS)
3<->standard :<->text736.htm<->standard :: Creating Finite Groups of Lie  Type (ALMOST SIMPLE GROUPS)
3<->group-recognition :<->text737.htm<->group-recognition :: Group Recognition (ALMOST SIMPLE GROUPS)
3<->altsym :<->text737.htm#8379<->altsym :: Constructive Recognition  of Alternating Groups (ALMOST SIMPLE GROUPS)
5<->RecogniseAlternatingOrSymmetric(G : parameters) <->text737.htm#8380<->RecogniseAlternatingOrSymmetric(G : parameters) : Grp, RngIntElt -&gt; BoolElt, Map, Map, Map, Map, BoolElt
5<->AlternatingOrSymmetricElementToWord(G, g)<->text737.htm#8381<->AlternatingOrSymmetricElementToWord(G, g): Grp, GrpElt -&gt; BoolElt, GrpSLPElt
4<->GrpASim_RecogniseAltsym2 (Example H70E3)<->text737.htm#8382<->GrpASim_RecogniseAltsym2 (Example H70E3)
4<->Example-RecogniseAltsym2 :<->text737.htm#8382<->Example-RecogniseAltsym2 :: GrpASim_RecogniseAltsym2 (Example H70E3)
5<->RecogniseSymmetric(G, n: parameters) <->text737.htm#8383<->RecogniseSymmetric(G, n: parameters) : Grp, RngIntElt -&gt;     BoolElt, Map, Map, Map, Map, BoolElt
5<->SymmetricElementToWord (G, g) <->text737.htm#8384<->SymmetricElementToWord (G, g) : Grp, GrpElt -&gt; BoolElt, GrpSLPElt
5<->RecogniseAlternating(G, n: parameters) <->text737.htm#8385<->RecogniseAlternating(G, n: parameters) : Grp, RngIntElt -&gt;    BoolElt, Map, Map, Map, Map, BoolElt
5<->AlternatingElementToWord(G, g) <->text737.htm#8386<->AlternatingElementToWord(G, g) : Grp, GrpElt -&gt; BoolElt, GrpSLPElt
5<->GuessAltsymDegree(G: parameters) <->text737.htm#8387<->GuessAltsymDegree(G: parameters) : Grp -&gt; BoolElt, MonStgElt, RngIntElt
4<->GrpASim_RecogniseAltsym2 (Example H70E4)<->text737.htm#8388<->GrpASim_RecogniseAltsym2 (Example H70E4)
4<->Example-RecogniseAltsym2 :<->text737.htm#8388<->Example-RecogniseAltsym2 :: GrpASim_RecogniseAltsym2 (Example H70E4)
3<->altsym :<->text737.htm#8379<->altsym :: Constructive Recognition  of Alternating Groups (ALMOST SIMPLE GROUPS)
3<->related :<->text737.htm#8389<->related :: Determining the Type of a Finite  Group of Lie Type (ALMOST SIMPLE GROUPS)
5<->LieCharacteristic(G : parameters) <->text737.htm#8390<->LieCharacteristic(G : parameters) : Grp -&gt; RngIntElt
4<->GrpASim_WriteOverSmallerField (Example H70E5)<->text737.htm#8391<->GrpASim_WriteOverSmallerField (Example H70E5)
4<->Example-WriteOverSmallerField :<->text737.htm#8391<->Example-WriteOverSmallerField :: GrpASim_WriteOverSmallerField (Example H70E5)
5<->\nameGrpPerm:LieType{LieType}(G, p $\colon$ \parameters) <->text737.htm#8392<->\nameGrpPerm:LieType{LieType}(G, p $\colon$ \parameters) : GrpMat, RngIntElt -> BoolElt, Tup
5<->LieType(G, p : parameters) <->text737.htm#8392<->LieType(G, p : parameters) : GrpMat, RngIntElt -&gt; BoolElt, Tup
5<->SimpleGroupName(G $\colon$ \parameters)<->text737.htm#8393<->SimpleGroupName(G $\colon$ \parameters): GrpPerm -> BoolElt, List
5<->SimpleGroupName(G : parameters)<->text737.htm#8393<->SimpleGroupName(G : parameters): GrpMat -&gt; BoolElt, List
4<->GrpASim_IdentifySimple (Example H70E6)<->text737.htm#8394<->GrpASim_IdentifySimple (Example H70E6)
4<->Example-IdentifySimple :<->text737.htm#8394<->Example-IdentifySimple :: GrpASim_IdentifySimple (Example H70E6)
3<->related :<->text737.htm#8389<->related :: Determining the Type of a Finite  Group of Lie Type (ALMOST SIMPLE GROUPS)
3<->classicalforms :<->text737.htm#8395<->classicalforms :: Classical Forms (ALMOST SIMPLE GROUPS)
5<->ClassicalForms(G: parameters)<->text737.htm#8396<->ClassicalForms(G: parameters): GrpMat  -&gt; Rec
5<->SymplecticForm(G: parameters) <->text737.htm#8397<->SymplecticForm(G: parameters) : GrpMat -&gt; BoolElt, AlgMatElt [,SeqEnum]
5<->SymmetricBilinearForm(G: parameters) <->text737.htm#8398<->SymmetricBilinearForm(G: parameters) : GrpMat -&gt; BoolElt, AlgMatElt, MonStgElt [,SeqEnum]
5<->QuadraticForm(G)<->text737.htm#8399<->QuadraticForm(G): GrpMat  -&gt; BoolElt, AlgMatElt, MonStgElt [,SeqEnum]
5<->UnitaryForm(G) <->text737.htm#8400<->UnitaryForm(G) : GrpMat -&gt; BoolElt, AlgMatElt [,SeqEnum]
5<->FormType(G) <->text737.htm#8401<->FormType(G) : GrpMat -&gt; MonStgElt
4<->GrpASim_ClassicalForms (Example H70E7)<->text737.htm#8402<->GrpASim_ClassicalForms (Example H70E7)
4<->Example-ClassicalForms :<->text737.htm#8402<->Example-ClassicalForms :: GrpASim_ClassicalForms (Example H70E7)
5<->TransformForm(form, type) <->text737.htm#8403<->TransformForm(form, type) : AlgMatElt, MonStgElt -&gt; GrpMatElt
5<->TransformForm(G) <->text737.htm#8404<->TransformForm(G) : GrpMat -&gt; GrpMatElt
5<->SpinorNorm(g, form)<->text737.htm#8405<->SpinorNorm(g, form): GrpMatElt, AlgMatElt  -&gt; RngIntElt
3<->classicalforms :<->text737.htm#8395<->classicalforms :: Classical Forms (ALMOST SIMPLE GROUPS)
3<->recognition :<->text737.htm#8406<->recognition :: Recognizing Classical Groups in their Natural Representation (ALMOST SIMPLE GROUPS)
5<->RecognizeClassical( G : parameters)<->text737.htm#8407<->RecognizeClassical( G : parameters): GrpMat  -&gt; BoolElt
5<->IsLinearGroup(G) <->text737.htm#8408<->IsLinearGroup(G) : GrpMat -&gt; BoolElt
5<->IsSymplecticGroup(G) <->text737.htm#8409<->IsSymplecticGroup(G) : GrpMat -&gt; BoolElt
5<->IsOrthogonalGroup(G) <->text737.htm#8410<->IsOrthogonalGroup(G) : GrpMat -&gt;BoolElt
5<->IsUnitaryGroup(G) <->text737.htm#8411<->IsUnitaryGroup(G) : GrpMat -&gt; BoolElt
5<->ClassicalType(G) <->text737.htm#8412<->ClassicalType(G) : GrpMat -&gt; MonStgElt
4<->GrpASim_RecognizeClassical (Example H70E8)<->text737.htm#8413<->GrpASim_RecognizeClassical (Example H70E8)
4<->Example-RecognizeClassical :<->text737.htm#8413<->Example-RecognizeClassical :: GrpASim_RecognizeClassical (Example H70E8)
3<->recognition :<->text737.htm#8406<->recognition :: Recognizing Classical Groups in their Natural Representation (ALMOST SIMPLE GROUPS)
3<->constructive-recognition :<->text737.htm#8414<->constructive-recognition :: Constructive Recognition of Linear  Groups (ALMOST SIMPLE GROUPS)
5<->RecognizeSL2(G) <->text737.htm#8415<->RecognizeSL2(G) : GrpPerm -> BoolElt, Map, Map, Map, Map  
5<->RecognizeSL2(G, q) <->text737.htm#8415<->RecognizeSL2(G, q) : GrpMat, RngIntElt -> BoolElt, Map, Map, Map, Map  
5<->RecognizeSL2(G, q) <->text737.htm#8415<->RecognizeSL2(G, q) : GrpPerm, RngIntElt -> BoolElt, Map, Map, Map, Map  
5<->RecognizeSL2(G) <->text737.htm#8415<->RecognizeSL2(G) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->SL2ElementToWord(G, g) <->text737.htm#8416<->SL2ElementToWord(G, g) : GrpPerm, GrpPermElt -> BoolElt, GrpSLPElt 
5<->SL2ElementToWord(G, g) <->text737.htm#8416<->SL2ElementToWord(G, g) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
5<->SL2Characteristic(G $\colon$ \parameters) <->text737.htm#8417<->SL2Characteristic(G $\colon$ \parameters) : GrpPerm -> RngIntElt, RngIntElt 
5<->SL2Characteristic(G : parameters) <->text737.htm#8417<->SL2Characteristic(G : parameters) : GrpMat -&gt; RngIntElt, RngIntElt
4<->GrpASim_RecognizeSL2-1 (Example H70E9)<->text737.htm#8418<->GrpASim_RecognizeSL2-1 (Example H70E9)
4<->Example-RecognizeSL2-1 :<->text737.htm#8418<->Example-RecognizeSL2-1 :: GrpASim_RecognizeSL2-1 (Example H70E9)
4<->GrpASim_RecogniseSL2-2 (Example H70E10)<->text737.htm#8419<->GrpASim_RecogniseSL2-2 (Example H70E10)
4<->Example-RecogniseSL2-2 :<->text737.htm#8419<->Example-RecogniseSL2-2 :: GrpASim_RecogniseSL2-2 (Example H70E10)
5<->RecogniseSL3(G, q $\colon$ \parameters) <->text737.htm#8420<->RecogniseSL3(G, q $\colon$ \parameters) : GrpMat, RngIntElt -> BoolElt, Map, Map, Map, Map  
5<->RecogniseSL3(G) <->text737.htm#8420<->RecogniseSL3(G) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->SL3ElementToWord (G, g) <->text737.htm#8421<->SL3ElementToWord (G, g) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
4<->GrpASim_RecogniseSL3 (Example H70E11)<->text737.htm#8422<->GrpASim_RecogniseSL3 (Example H70E11)
4<->Example-RecogniseSL3 :<->text737.htm#8422<->Example-RecogniseSL3 :: GrpASim_RecogniseSL3 (Example H70E11)
5<->RecognizeSL :: RecogniseSL(G, d, q) <->text737.htm#8423<->RecognizeSL :: RecogniseSL(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecogniseSL(G, d, q) <->text737.htm#8423<->RecogniseSL(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
3<->constructive-recognition :<->text737.htm#8414<->constructive-recognition :: Constructive Recognition of Linear  Groups (ALMOST SIMPLE GROUPS)
3<->constructive-recognition-symplectic :<->text737.htm#8424<->constructive-recognition-symplectic :: Constructive Recognition of Symplectic Groups (ALMOST SIMPLE GROUPS)
5<->RecognizeSpOdd :: RecogniseSpOdd(G, d, q) <->text737.htm#8425<->RecognizeSpOdd :: RecogniseSpOdd(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecogniseSpOdd(G, d, q) <->text737.htm#8425<->RecogniseSpOdd(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecognizeSp4 :: RecogniseSp4(G, q) <->text737.htm#8426<->RecognizeSp4 :: RecogniseSp4(G, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map, Map, Map, SeqEnum, SeqEnum
5<->RecogniseSp4(G, q) <->text737.htm#8426<->RecogniseSp4(G, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map, Map, Map, SeqEnum, SeqEnum
3<->constructive-recognition-symplectic :<->text737.htm#8424<->constructive-recognition-symplectic :: Constructive Recognition of Symplectic Groups (ALMOST SIMPLE GROUPS)
3<->constructive-recognition-unitary :<->text737.htm#8427<->constructive-recognition-unitary :: Constructive Recognition of Unitary Groups (ALMOST SIMPLE GROUPS)
5<->RecognizeSU3 :: RecogniseSU3(G, d, q) <->text737.htm#8428<->RecognizeSU3 :: RecogniseSU3(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecogniseSU3(G, d, q) <->text737.htm#8428<->RecogniseSU3(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecognizeSU4 :: RecogniseSU4(G, d, q) <->text737.htm#8429<->RecognizeSU4 :: RecogniseSU4(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
5<->RecogniseSU4(G, d, q) <->text737.htm#8429<->RecogniseSU4(G, d, q) : Grp, RngIntElt, RngIntElt -&gt; BoolElt, Map, Map
3<->constructive-recognition-unitary :<->text737.htm#8427<->constructive-recognition-unitary :: Constructive Recognition of Unitary Groups (ALMOST SIMPLE GROUPS)
3<->constructive-recognition-small-modules-of-classical-group :<->text737.htm#8430<->constructive-recognition-small-modules-of-classical-group :: Constructive Recognition Of Classical Groups in Low Degree (ALMOST SIMPLE GROUPS)
5<->RecogniseSmallDegree(G, type, d, q) <->text737.htm#8431<->RecogniseSmallDegree(G, type, d, q) : GrpMat, MonStgElt, RngIntElt, RngIntElt -> BoolElt, GrpMat
5<->RecogniseSmallDegree(G) <->text737.htm#8431<->RecogniseSmallDegree(G) : GrpMat -&gt; BoolElt, GrpMat
5<->SmallDegreePreimage(G, g) <->text737.htm#8432<->SmallDegreePreimage(G, g) : GrpMat, GrpMatElt -&gt; GrpMatElt
5<->SmallDegreeImage(G, h) <->text737.htm#8433<->SmallDegreeImage(G, h) : GrpMat, GrpMatElt -&gt; GrpMatElt
4<->GrpASim_RecogniseSmallDegree (Example H70E12)<->text737.htm#8434<->GrpASim_RecogniseSmallDegree (Example H70E12)
4<->Example-RecogniseSmallDegree :<->text737.htm#8434<->Example-RecogniseSmallDegree :: GrpASim_RecogniseSmallDegree (Example H70E12)
3<->constructive-recognition-small-modules-of-classical-group :<->text737.htm#8430<->constructive-recognition-small-modules-of-classical-group :: Constructive Recognition Of Classical Groups in Low Degree (ALMOST SIMPLE GROUPS)
3<->suzuki :<->text737.htm#8435<->suzuki :: Constructive Recognition of Suzuki  Groups (ALMOST SIMPLE GROUPS)
3<->suzuki-intro :<->text737.htm#8436<->suzuki-intro :: Introduction (ALMOST SIMPLE GROUPS)
3<->suzuki-rec :<->text737.htm#8437<->suzuki-rec :: Recognition Functions (ALMOST SIMPLE GROUPS)
5<->IsSuzukiGroup(G) <->text737.htm#8438<->IsSuzukiGroup(G) : GrpMat -&gt; BoolElt, RngIntElt
5<->RecognizeSz :: RecogniseSz(G : parameters) <->text737.htm#8439<->RecognizeSz :: RecogniseSz(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->RecogniseSz(G : parameters) <->text737.htm#8439<->RecogniseSz(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->SzElementToWord(G, g) <->text737.htm#8440<->SzElementToWord(G, g) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
5<->SzPresentation(q) <->text737.htm#8441<->SzPresentation(q) : RngIntElt -&gt; GrpFP, HomGrp
5<->SatisfiesSzPresentation(G) <->text737.htm#8442<->SatisfiesSzPresentation(G) : GrpMat -&gt; BoolElt
5<->SuzukiIrreducibleRepresentation(F, twists : parameters) <->text737.htm#8443<->SuzukiIrreducibleRepresentation(F, twists : parameters) : FldFin, SeqEnum[RngIntElt] -&gt; GrpMat
4<->GrpASim_ex-1 (Example H70E13)<->text737.htm#8444<->GrpASim_ex-1 (Example H70E13)
4<->Example-ex-1 :<->text737.htm#8444<->Example-ex-1 :: GrpASim_ex-1 (Example H70E13)
4<->GrpASim_ex-2 (Example H70E14)<->text737.htm#8445<->GrpASim_ex-2 (Example H70E14)
4<->Example-ex-2 :<->text737.htm#8445<->Example-ex-2 :: GrpASim_ex-2 (Example H70E14)
4<->GrpASim_ex-3 (Example H70E15)<->text737.htm#8446<->GrpASim_ex-3 (Example H70E15)
4<->Example-ex-3 :<->text737.htm#8446<->Example-ex-3 :: GrpASim_ex-3 (Example H70E15)
4<->GrpASim_ex-4 (Example H70E16)<->text737.htm#8447<->GrpASim_ex-4 (Example H70E16)
4<->Example-ex-4 :<->text737.htm#8447<->Example-ex-4 :: GrpASim_ex-4 (Example H70E16)
3<->suzuki-rec :<->text737.htm#8437<->suzuki-rec :: Recognition Functions (ALMOST SIMPLE GROUPS)
3<->suzuki :<->text737.htm#8435<->suzuki :: Constructive Recognition of Suzuki  Groups (ALMOST SIMPLE GROUPS)
3<->small_ree :<->text737.htm#8448<->small_ree :: Constructive Recognition of Small  Ree Groups (ALMOST SIMPLE GROUPS)
3<->smallree-intro :<->text737.htm#8449<->smallree-intro :: Introduction (ALMOST SIMPLE GROUPS)
3<->intrinsics :<->text737.htm#8450<->intrinsics :: Recognition Functions (ALMOST SIMPLE GROUPS)
5<->RecognizeRee :: RecogniseRee(G : parameters) <->text737.htm#8451<->RecognizeRee :: RecogniseRee(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->RecogniseRee(G : parameters) <->text737.htm#8451<->RecogniseRee(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->ReeElementToWord(G, g) <->text737.htm#8452<->ReeElementToWord(G, g) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
5<->IsReeGroup(G) <->text737.htm#8453<->IsReeGroup(G) : GrpMat -&gt; BoolElt, RngIntElt
5<->ReeIrreducibleRepresentation(F, twists : parameters) <->text737.htm#8454<->ReeIrreducibleRepresentation(F, twists : parameters) : FldFin, SeqEnum[RngIntElt] -&gt; GrpMat
4<->GrpASim_ex-1 (Example H70E17)<->text737.htm#8455<->GrpASim_ex-1 (Example H70E17)
4<->Example-ex-1 :<->text737.htm#8455<->Example-ex-1 :: GrpASim_ex-1 (Example H70E17)
3<->intrinsics :<->text737.htm#8450<->intrinsics :: Recognition Functions (ALMOST SIMPLE GROUPS)
3<->small_ree :<->text737.htm#8448<->small_ree :: Constructive Recognition of Small  Ree Groups (ALMOST SIMPLE GROUPS)
3<->large_ree :<->text737.htm#8456<->large_ree :: Constructive Recognition of Large  Ree Groups (ALMOST SIMPLE GROUPS)
3<->largeree-intro :<->text737.htm#8457<->largeree-intro :: Introduction (ALMOST SIMPLE GROUPS)
3<->intrinsics :<->text737.htm#8458<->intrinsics :: Recognition Functions (ALMOST SIMPLE GROUPS)
5<->RecognizeLargeRee :: RecogniseLargeRee(G : parameters) <->text737.htm#8459<->RecognizeLargeRee :: RecogniseLargeRee(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->RecogniseLargeRee(G : parameters) <->text737.htm#8459<->RecogniseLargeRee(G : parameters) : GrpMat -&gt; BoolElt, Map, Map, Map, Map
5<->LargeReeElementToWord(G, g) <->text737.htm#8460<->LargeReeElementToWord(G, g) : GrpMat, GrpMatElt -&gt; BoolElt, GrpSLPElt
5<->IsLargeReeGroup(G) <->text737.htm#8461<->IsLargeReeGroup(G) : GrpMat -&gt; BoolElt, RngIntElt
3<->intrinsics :<->text737.htm#8458<->intrinsics :: Recognition Functions (ALMOST SIMPLE GROUPS)
3<->large_ree :<->text737.htm#8456<->large_ree :: Constructive Recognition of Large  Ree Groups (ALMOST SIMPLE GROUPS)
3<->group-recognition :<->text737.htm<->group-recognition :: Group Recognition (ALMOST SIMPLE GROUPS)
3<->properties-lie-groups :<->text738.htm<->properties-lie-groups :: Properties of Finite Groups Of Lie Type (ALMOST SIMPLE GROUPS)
3<->classical-maximals :<->text738.htm#8463<->classical-maximals :: Maximal Subgroups of the Classical  Groups (ALMOST SIMPLE GROUPS)
5<->ClassicalMaximals(type, d, q : parameters) <->text738.htm#8464<->ClassicalMaximals(type, d, q : parameters) : MonStgElt, RngIntElt, RngIntElt -&gt; SeqEnum
3<->classical-maximals :<->text738.htm#8463<->classical-maximals :: Maximal Subgroups of the Classical  Groups (ALMOST SIMPLE GROUPS)
3<->exceptional-maximals :<->text738.htm#8465<->exceptional-maximals :: Maximal Subgroups of the Exceptional Groups (ALMOST SIMPLE GROUPS)
5<->SuzukiMaximalSubgroups(G) <->text738.htm#8466<->SuzukiMaximalSubgroups(G) : GrpMat -&gt; SeqEnum, SeqEnum
5<->SuzukiMaximalSubgroupsConjugacy(G, R, S) <->text738.htm#8467<->SuzukiMaximalSubgroupsConjugacy(G, R, S) : GrpMat, GrpMat, GrpMat -&gt; GrpMatElt, GrpSLPElt
5<->ReeMaximalSubgroups(G) <->text738.htm#8468<->ReeMaximalSubgroups(G) : GrpMat -&gt; SeqEnum, SeqEnum
5<->ReeMaximalSubgroupsConjugacy(G, R, S) <->text738.htm#8469<->ReeMaximalSubgroupsConjugacy(G, R, S) : GrpMat, GrpMat, GrpMat -&gt; GrpMatElt, GrpSLPElt
3<->exceptional-maximals :<->text738.htm#8465<->exceptional-maximals :: Maximal Subgroups of the Exceptional Groups (ALMOST SIMPLE GROUPS)
3<->classical-sylow :<->text738.htm#8470<->classical-sylow :: Sylow Subgroups of the Classical  Groups (ALMOST SIMPLE GROUPS)
5<->ClassicalSylow(G,p) <->text738.htm#8471<->ClassicalSylow(G,p) : GrpMat, RngIntElt -&gt; GrpMat
5<->ClassicalSylowConjugation(G,P,S) <->text738.htm#8472<->ClassicalSylowConjugation(G,P,S) : GrpMat, GrpMat, GrpMat -&gt; GrpMatElt
5<->ClassicalSylowNormaliser(G,P) <->text738.htm#8473<->ClassicalSylowNormaliser(G,P) : GrpMat, GrpMat -&gt; GrpMatElt
5<->ClassicalSylowToPC(G,P) <->text738.htm#8474<->ClassicalSylowToPC(G,P) : GrpMat, GrpMat -&gt; GrpPC, UserProgram, Map
4<->GrpASim_sylow_ex (Example H70E18)<->text738.htm#8475<->GrpASim_sylow_ex (Example H70E18)
4<->Example-sylow_ex :<->text738.htm#8475<->Example-sylow_ex :: GrpASim_sylow_ex (Example H70E18)
3<->classical-sylow :<->text738.htm#8470<->classical-sylow :: Sylow Subgroups of the Classical  Groups (ALMOST SIMPLE GROUPS)
3<->exceptional-sylow :<->text738.htm#8476<->exceptional-sylow :: Sylow Subgroups of Exceptional  Groups (ALMOST SIMPLE GROUPS)
5<->SuzukiSylow(G, p) <->text738.htm#8477<->SuzukiSylow(G, p) : GrpMat, RngIntElt -&gt; GrpMat, SeqEnum
5<->SuzukiSylowConjugacy(G, R, S, p) <->text738.htm#8478<->SuzukiSylowConjugacy(G, R, S, p) : GrpMat, GrpMat, GrpMat, RngIntElt -&gt; GrpMatElt, GrpSLPElt
4<->GrpASim_sz-sylow (Example H70E19)<->text738.htm#8479<->GrpASim_sz-sylow (Example H70E19)
4<->Example-sz-sylow :<->text738.htm#8479<->Example-sz-sylow :: GrpASim_sz-sylow (Example H70E19)
5<->ReeSylow(G, p) <->text738.htm#8480<->ReeSylow(G, p) : GrpMat, RngIntElt -&gt; GrpMat, SeqEnum
5<->ReeSylowConjugacy(G, R, S, p) <->text738.htm#8481<->ReeSylowConjugacy(G, R, S, p) : GrpMat, GrpMat, GrpMat, RngIntElt -&gt; GrpMatElt, GrpSLPElt
5<->LargeReeSylow(G, p) <->text738.htm#8482<->LargeReeSylow(G, p) : GrpMat, RngIntElt -&gt; GrpMat, SeqEnum
4<->GrpASim_ree-sylow (Example H70E20)<->text738.htm#8483<->GrpASim_ree-sylow (Example H70E20)
4<->Example-ree-sylow :<->text738.htm#8483<->Example-ree-sylow :: GrpASim_ree-sylow (Example H70E20)
3<->exceptional-sylow :<->text738.htm#8476<->exceptional-sylow :: Sylow Subgroups of Exceptional  Groups (ALMOST SIMPLE GROUPS)
3<->conjugacy-of-subgroups :<->text738.htm#8484<->conjugacy-of-subgroups :: Conjugacy of Subgroups of the  Classical Groups (ALMOST SIMPLE GROUPS)
5<->IsGLConjugate(H, K) <->text738.htm#8485<->IsGLConjugate(H, K) : GrpMat, GrpMat -&gt; BoolElt, GrpMatElt | Unass
3<->conjugacy-of-subgroups :<->text738.htm#8484<->conjugacy-of-subgroups :: Conjugacy of Subgroups of the  Classical Groups (ALMOST SIMPLE GROUPS)
3<->conjugacy-of-elements :<->text738.htm#8486<->conjugacy-of-elements :: Conjugacy of Elements of the  Exceptional Groups (ALMOST SIMPLE GROUPS)
5<->SzConjugacyClasses(G) <->text738.htm#8487<->SzConjugacyClasses(G) : GrpMat -&gt; SeqEnum
5<->SzClassRepresentative(G, g) <->text738.htm#8488<->SzClassRepresentative(G, g) : GrpMat, GrpMatElt -&gt; GrpMatElt, GrpMatElt
5<->SzIsConjugate(G, g, h) <->text738.htm#8489<->SzIsConjugate(G, g, h) : GrpMat, GrpMatElt, GrpMatElt -&gt; BoolElt, GrpMatElt
5<->SzClassMap(G) <->text738.htm#8490<->SzClassMap(G) : GrpMat -&gt; Map
5<->ReeConjugacyClasses(G) <->text738.htm#8491<->ReeConjugacyClasses(G) : GrpMat -&gt; SeqEnum
3<->conjugacy-of-elements :<->text738.htm#8486<->conjugacy-of-elements :: Conjugacy of Elements of the  Exceptional Groups (ALMOST SIMPLE GROUPS)
3<->irreducible-subgroups :<->text738.htm#8492<->irreducible-subgroups :: Irreducible Subgroups of the  General Linear Group (ALMOST SIMPLE GROUPS)
5<->IrreducibleSubgroups(n, q) <->text738.htm#8493<->IrreducibleSubgroups(n, q) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->IrreducibleSolubleSubgroups(n, q) <->text738.htm#8494<->IrreducibleSolubleSubgroups(n, q) : RngIntElt,  RngIntElt -&gt; SeqEnum
4<->GrpASim_WriteOverSmallerField (Example H70E21)<->text738.htm#8495<->GrpASim_WriteOverSmallerField (Example H70E21)
4<->Example-WriteOverSmallerField :<->text738.htm#8495<->Example-WriteOverSmallerField :: GrpASim_WriteOverSmallerField (Example H70E21)
3<->irreducible-subgroups :<->text738.htm#8492<->irreducible-subgroups :: Irreducible Subgroups of the  General Linear Group (ALMOST SIMPLE GROUPS)
3<->properties-lie-groups :<->text738.htm<->properties-lie-groups :: Properties of Finite Groups Of Lie Type (ALMOST SIMPLE GROUPS)
3<->related :<->text739.htm<->related :: Atlas Data for the Sporadic  Groups (ALMOST SIMPLE GROUPS)
5<->StandardGenerators(G, str : parameters) <->text739.htm#8497<->StandardGenerators(G, str : parameters) : Grp, MonStgElt -&gt;         BoolElt, SeqEnum, SeqEnum
5<->StandardGeneratorsGroupNames() <->text739.htm#8498<->StandardGeneratorsGroupNames() : -&gt; SetIndx
5<->StandardCopy(str) <->text739.htm#8499<->StandardCopy(str) : MonStgElt -&gt; Grp, BoolElt
5<->IsomorphismToStandardCopy(G, str : parameters) <->text739.htm#8500<->IsomorphismToStandardCopy(G, str : parameters) : Grp, MonStgElt -&gt;         BoolElt, Map
5<->StandardPresentation(G, str : parameters) <->text739.htm#8501<->StandardPresentation(G, str : parameters) : Grp, MonStgElt -&gt; BoolElt, SeqEnum, SeqEnum
5<->MaximalSubgroups(G, str : parameters) <->text739.htm#8502<->MaximalSubgroups(G, str : parameters) : Grp, MonStgElt -&gt; BoolElt, SeqEnum, SeqEnum
5<->Subgroups(G, str : parameters) <->text739.htm#8503<->Subgroups(G, str : parameters) : Grp, MonStgElt -&gt; BoolElt, SeqEnum
5<->GoodBasePoints(G, str : parameters) <->text739.htm#8504<->GoodBasePoints(G, str : parameters) : Grp, MonStgElt -&gt; BoolElt, SeqEnum
5<->SubgroupsData(str) <->text739.htm#8505<->SubgroupsData(str) : MonStgElt -&gt; SeqEnum
5<->MaximalSubgroupsData (str : parameters) <->text739.htm#8506<->MaximalSubgroupsData (str : parameters) : MonStgElt -&gt; SeqEnum
4<->GrpASim_SporadicJ1 (Example H70E22)<->text739.htm#8507<->GrpASim_SporadicJ1 (Example H70E22)
4<->Example-SporadicJ1 :<->text739.htm#8507<->Example-SporadicJ1 :: GrpASim_SporadicJ1 (Example H70E22)
3<->related :<->text739.htm<->related :: Atlas Data for the Sporadic  Groups (ALMOST SIMPLE GROUPS)
3<->group-simple :<->text734.htm<->group-simple :: ALMOST SIMPLE GROUPS
3<->databases-overview :<->text742.htm<->databases-overview :: DATABASES OF GROUPS
3<->introduction :<->text743.htm<->introduction :: Introduction (DATABASES OF GROUPS)
3<->smlgps-database :<->text744.htm<->smlgps-database :: Database of Small Groups (DATABASES OF GROUPS)
3<->basic-trngps :<->text744.htm#8513<->basic-trngps :: Basic Small Group Functions (DATABASES OF GROUPS)
5<->OpenSmallGroupDatabase :: SmallGroupDatabase() <->text744.htm#8514<->OpenSmallGroupDatabase :: SmallGroupDatabase() : -&gt; DB
5<->SmallGroupDatabase() <->text744.htm#8514<->SmallGroupDatabase() : -&gt; DB
5<->delete  D <->text744.htm#8515<->delete  D : DB -&gt;
5<->SmallGroupDatabaseLimit(D) <->text744.htm#8516<->SmallGroupDatabaseLimit(D) : DB -> RngIntElt
5<->SmallGroupDatabaseLimit() <->text744.htm#8516<->SmallGroupDatabaseLimit() : -&gt; RngIntElt
5<->IsInSmallGroupDatabase(D, o) <->text744.htm#8517<->IsInSmallGroupDatabase(D, o) : DB, RngIntElt -> BoolElt
5<->IsInSmallGroupDatabase(o) <->text744.htm#8517<->IsInSmallGroupDatabase(o) : RngIntElt -&gt; BoolElt
5<->NumberOfSmallGroups(D, o) <->text744.htm#8518<->NumberOfSmallGroups(D, o) : DB, RngIntElt -> RngIntElt
5<->NumberOfSmallGroups(o) <->text744.htm#8518<->NumberOfSmallGroups(o) : RngIntElt -&gt; RngIntElt
5<->SmallGroup(D, o, n) <->text744.htm#8519<->SmallGroup(D, o, n) : DB, RngIntElt, RngIntElt -> Grp
5<->SmallGroup(o, n) <->text744.htm#8519<->SmallGroup(o, n) : RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroup(D, o: \parameters) <->text744.htm#8520<->SmallGroup(D, o: \parameters) : DB, RngIntElt -> Grp
5<->SmallGroup(o: parameters) <->text744.htm#8520<->SmallGroup(o: parameters) : RngIntElt -&gt; Grp
5<->SmallGroup(D, o, f: \parameters) <->text744.htm#8521<->SmallGroup(D, o, f: \parameters) : RngIntElt, Program -> Grp
5<->SmallGroup(o, f: parameters) <->text744.htm#8521<->SmallGroup(o, f: parameters) : RngIntElt, Program -&gt; Grp
5<->IsSolvable :: IsSoluble(D, o, n) <->text744.htm#8522<->IsSolvable :: IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsSoluble :: IsSoluble(D, o, n) <->text744.htm#8522<->SmallGroupIsSoluble :: IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: IsSoluble(D, o, n) <->text744.htm#8522<->SmallGroupIsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsSolvable :: IsSoluble(D, o, n) <->text744.htm#8522<->SmallGroupIsSolvable :: IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsSolvable(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: IsSoluble(D, o, n) <->text744.htm#8522<->SmallGroupIsSolvable(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->IsSoluble(D, o, n) <->text744.htm#8522<->IsSoluble(D, o, n) : DB, RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsInsoluble(D, o, n) <->text744.htm#8523<->SmallGroupIsInsoluble(D, o, n) : DB, RngIntElt, RngIntElt -> Grp
5<->SmallGroupIsInsolvable :: SmallGroupIsInsoluble(o, n) <->text744.htm#8523<->SmallGroupIsInsolvable :: SmallGroupIsInsoluble(o, n) : RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsInsolvable(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: SmallGroupIsInsoluble(o, n) <->text744.htm#8523<->SmallGroupIsInsolvable(D, o, n) : DB, RngIntElt, RngIntElt -> Grp :: SmallGroupIsInsoluble(o, n) : RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroupIsInsoluble(o, n) <->text744.htm#8523<->SmallGroupIsInsoluble(o, n) : RngIntElt, RngIntElt -&gt; Grp
5<->SmallGroup(S, f: \parameters) <->text744.htm#8524<->SmallGroup(S, f: \parameters) : [RngIntElt], Program -> Grp
5<->SmallGroup(D, o, f: \parameters) <->text744.htm#8524<->SmallGroup(D, o, f: \parameters) : DB, RngIntElt, Program -> Grp
5<->SmallGroup(D, S, f: \parameters) <->text744.htm#8524<->SmallGroup(D, S, f: \parameters) : DB, [RngIntElt], Program -> Grp
5<->SmallGroup(o, f: parameters) <->text744.htm#8524<->SmallGroup(o, f: parameters) : RngIntElt, Program -&gt; Grp
5<->SmallGroups(D, o$\colon$ \parameters) <->text744.htm#8525<->SmallGroups(D, o$\colon$ \parameters) : DB, RngIntElt -> [* Grp *]
5<->SmallGroups(o: parameters) <->text744.htm#8525<->SmallGroups(o: parameters) : RngIntElt -&gt; [* Grp *]
5<->SmallGroups(D, S$\colon$ \parameters) <->text744.htm#8526<->SmallGroups(D, S$\colon$ \parameters) : DB, [RngIntElt] -> [* Grp *]
5<->SmallGroups(S: parameters) <->text744.htm#8526<->SmallGroups(S: parameters) : [RngIntElt] -&gt; [* Grp *]
5<->SmallGroups(D, o, f: \parameters) <->text744.htm#8527<->SmallGroups(D, o, f: \parameters) : DB, RngIntElt, Program -> [* Grp *]
5<->SmallGroups(o, f: parameters) <->text744.htm#8527<->SmallGroups(o, f: parameters) : RngIntElt, Program -&gt; [* Grp *]
5<->SmallGroups(D, S, f: \parameters) <->text744.htm#8528<->SmallGroups(D, S, f: \parameters) : DB, [RngIntElt], Program -> [* Grp *]
5<->SmallGroups(S, f: parameters) <->text744.htm#8528<->SmallGroups(S, f: parameters) : [RngIntElt], Program -&gt; [* Grp *]
4<->GrpData_SmallGroups (Example H71E1)<->text744.htm#8529<->GrpData_SmallGroups (Example H71E1)
4<->Example-SmallGroups :<->text744.htm#8529<->Example-SmallGroups :: GrpData_SmallGroups (Example H71E1)
3<->basic-trngps :<->text744.htm#8513<->basic-trngps :: Basic Small Group Functions (DATABASES OF GROUPS)
3<->process :<->text744.htm#8530<->process :: Processes (DATABASES OF GROUPS)
5<->SmallGroupProcess(o: parameters) <->text744.htm#8531<->SmallGroupProcess(o: parameters) : RngIntElt -&gt; Process
5<->SmallGroupProcess(S: parameters) <->text744.htm#8532<->SmallGroupProcess(S: parameters) : [RngIntElt] -&gt; Process
5<->SmallGroupProcess(o, f: parameters) <->text744.htm#8533<->SmallGroupProcess(o, f: parameters) : RngIntElt, Program -&gt; Process
5<->SmallGroupProcess(S, f: parameters) <->text744.htm#8534<->SmallGroupProcess(S, f: parameters) : [RngIntElt], Program -&gt; Process
5<->IsEmpty(p) <->text744.htm#8535<->IsEmpty(p) : Process -&gt; BoolElt
5<->Current(p) <->text744.htm#8536<->Current(p) : Process -&gt; Grp
5<->CurrentLabel(p) <->text744.htm#8537<->CurrentLabel(p) : Process -&gt; RngIntElt, RngIntElt
5<->Advance(~p) <->text744.htm#8538<->Advance(~p) : Process -&gt;
4<->GrpData_sg-process (Example H71E2)<->text744.htm#8539<->GrpData_sg-process (Example H71E2)
4<->Example-sg-process :<->text744.htm#8539<->Example-sg-process :: GrpData_sg-process (Example H71E2)
3<->process :<->text744.htm#8530<->process :: Processes (DATABASES OF GROUPS)
3<->identify :<->text744.htm#8540<->identify :: Small Group Identification (DATABASES OF GROUPS)
5<->IdentifyGroup(D, G)<->text744.htm#8541<->IdentifyGroup(D, G): DB, Grp -> Tup
5<->IdentifyGroup(G)<->text744.htm#8541<->IdentifyGroup(G): Grp -&gt; Tup
5<->CanIdentifyGroup(D, o) <->text744.htm#8542<->CanIdentifyGroup(D, o) : DB, RngIntElt -> BoolElt
5<->CanIdentifyGroup(o) <->text744.htm#8542<->CanIdentifyGroup(o) : RngIntElt -&gt; BoolElt
4<->GrpData_SmallIdentify (Example H71E3)<->text744.htm#8543<->GrpData_SmallIdentify (Example H71E3)
4<->Example-SmallIdentify :<->text744.htm#8543<->Example-SmallIdentify :: GrpData_SmallIdentify (Example H71E3)
3<->identify :<->text744.htm#8540<->identify :: Small Group Identification (DATABASES OF GROUPS)
3<->internal :<->text744.htm#8544<->internal :: Accessing Internal Data (DATABASES OF GROUPS)
5<->Data(D, o, n) <->text744.htm#8545<->Data(D, o, n) : DB, RngIntElt, RngIntElt -&gt; List
5<->SmallGroupEncoding(G) <->text744.htm#8546<->SmallGroupEncoding(G) : GrpPC -&gt; RngIntElt, RngIntElt
5<->SmallGroupDecoding(c, o) <->text744.htm#8547<->SmallGroupDecoding(c, o) : RngIntElt, RngIntElt -&gt; GrpPC
4<->GrpData_SmallInternal (Example H71E4)<->text744.htm#8548<->GrpData_SmallInternal (Example H71E4)
4<->Example-SmallInternal :<->text744.htm#8548<->Example-SmallInternal :: GrpData_SmallInternal (Example H71E4)
3<->internal :<->text744.htm#8544<->internal :: Accessing Internal Data (DATABASES OF GROUPS)
3<->smlgps-database :<->text744.htm<->smlgps-database :: Database of Small Groups (DATABASES OF GROUPS)
3<->The p-groups of Order Dividing p7 (DATABASES OF GROUPS)<->text745.htm<->The p-groups of Order Dividing p<sup>7</sup> (DATABASES OF GROUPS)
5<->SearchPGroups(p, n: parameters) <->text745.htm#8550<->SearchPGroups(p, n: parameters) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->CountPGroups(p, n: parameters) <->text745.htm#8551<->CountPGroups(p, n: parameters) : RngIntElt, RngIntElt -&gt; SeqEnum
4<->GrpData_p7 (Example H71E5)<->text745.htm#8552<->GrpData_p7 (Example H71E5)
4<->Example-p7 :<->text745.htm#8552<->Example-p7 :: GrpData_p7 (Example H71E5)
3<->The p-groups of Order Dividing p7 (DATABASES OF GROUPS)<->text745.htm<->The p-groups of Order Dividing p<sup>7</sup> (DATABASES OF GROUPS)
3<->search :<->text746.htm<->search :: Metacyclic p-groups (DATABASES OF GROUPS)
5<->MetacyclicPGroups(p, n: parameters) <->text746.htm#8554<->MetacyclicPGroups(p, n: parameters) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->IsMetacyclicPGroup(P) <->text746.htm#8555<->IsMetacyclicPGroup(P) : Grp -&gt; BoolElt
5<->InvariantsMetacyclicPGroup(P) <->text746.htm#8556<->InvariantsMetacyclicPGroup(P) : Grp -&gt; Tup
5<->StandardMetacyclicPGroup(P)<->text746.htm#8557<->StandardMetacyclicPGroup(P): Grp -&gt; GrpPC
5<->NumberOfMetacyclicPGroups(p, n)<->text746.htm#8558<->NumberOfMetacyclicPGroups(p, n): RngIntElt, RngIntElt -&gt; SeqEnum
5<->HasAllPQuotientsMetacyclic(G, p)<->text746.htm#8559<->HasAllPQuotientsMetacyclic(G, p): GrpFP -> BoolElt
5<->HasAllPQuotientsMetacyclic(G)<->text746.htm#8559<->HasAllPQuotientsMetacyclic(G): GrpFP -&gt; BoolElt, SeqEnum
4<->GrpData_meta (Example H71E6)<->text746.htm#8560<->GrpData_meta (Example H71E6)
4<->Example-meta :<->text746.htm#8560<->Example-meta :: GrpData_meta (Example H71E6)
3<->search :<->text746.htm<->search :: Metacyclic p-groups (DATABASES OF GROUPS)
3<->pfgps :<->text747.htm<->pfgps :: Database of Perfect Groups (DATABASES OF GROUPS)
3<->entry_keys :<->text747.htm#8562<->entry_keys :: Specifying an Entry of the Database (DATABASES OF GROUPS)
3<->creation :<->text747.htm#8563<->creation :: Creating the Database (DATABASES OF GROUPS)
5<->PerfectGroupDatabase() <->text747.htm#8564<->PerfectGroupDatabase() : -&gt; DB
3<->creation :<->text747.htm#8563<->creation :: Creating the Database (DATABASES OF GROUPS)
3<->access :<->text747.htm#8565<->access :: Accessing the Database (DATABASES OF GROUPS)
5<->Group(D, o, i)<->text747.htm#8566<->Group(D, o, i): DB, RngIntElt, RngIntElt -> GrpFP, SeqEnum
5<->Group(D, Q)<->text747.htm#8566<->Group(D, Q): DB, MonStgElt -> GrpFP, SeqEnum
5<->Group(D, Q, p, r, n$\colon$ \parameters)<->text747.htm#8566<->Group(D, Q, p, r, n$\colon$ \parameters): DB, MonStgElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt -> GrpFP, SeqEnum
5<->Group(D, i)<->text747.htm#8566<->Group(D, i): DB, RngIntElt -&gt; GrpFP, SeqEnum
5<->IdentificationNumber(D, o, i)<->text747.htm#8567<->IdentificationNumber(D, o, i): DB, RngIntElt, RngIntElt -> RngIntElt
5<->IdentificationNumber(D, Q)<->text747.htm#8567<->IdentificationNumber(D, Q): DB, MonStgElt -> RngIntElt
5<->IdentificationNumber(D, Q, p, r, {n$\colon$ \parameters})<->text747.htm#8567<->IdentificationNumber(D, Q, p, r, {n$\colon$ \parameters}): DB, MonStgElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->IdentificationNumber(D, i)<->text747.htm#8567<->IdentificationNumber(D, i): DB, RngIntElt -&gt; RngIntElt
5<->NumberOfRepresentations(D, o, i)<->text747.htm#8568<->NumberOfRepresentations(D, o, i): DB, RngIntElt, RngIntElt -> RngIntElt
5<->NumberOfRepresentations(D, Q)<->text747.htm#8568<->NumberOfRepresentations(D, Q): DB, MonStgElt -> RngIntElt
5<->NumberOfRepresentations(D, Q, p, {r, n$\colon$ \parameters})<->text747.htm#8568<->NumberOfRepresentations(D, Q, p, {r, n$\colon$ \parameters}): DB, MonStgElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->NumberOfRepresentations(D, i)<->text747.htm#8568<->NumberOfRepresentations(D, i): DB, RngIntElt -&gt; RngIntElt
5<->PermutationRepresentation(D, o, {i$\colon$ \parameters}) <->text747.htm#8569<->PermutationRepresentation(D, o, {i$\colon$ \parameters}) : DB, RngIntElt, RngIntElt -> Hom(Grp), GrpFP, GrpPerm
5<->PermutationRepresentation(D, Q$\colon$ \parameters)<->text747.htm#8569<->PermutationRepresentation(D, Q$\colon$ \parameters): DB, MonStgElt -> Hom(Grp), GrpFP, GrpPerm
5<->PermutationRepresentation(D, Q, {p, r, n$\colon$ \parameters})<->text747.htm#8569<->PermutationRepresentation(D, Q, {p, r, n$\colon$ \parameters}): DB, MonStgElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt -> Hom(Grp), GrpFP, GrpPerm
5<->PermutationRepresentation(D, i: parameters)<->text747.htm#8569<->PermutationRepresentation(D, i: parameters): DB, RngIntElt -&gt; Hom(Grp), GrpFP, GrpPerm
5<->PermutationGroup(D, o, i$\colon$ \parameters)<->text747.htm#8570<->PermutationGroup(D, o, i$\colon$ \parameters): DB, RngIntElt, RngIntElt -> GrpPerm
5<->PermutationGroup(D, Q$\colon$ \parameters)<->text747.htm#8570<->PermutationGroup(D, Q$\colon$ \parameters): DB, MonStgElt -> GrpPerm
5<->PermutationGroup(D, Q, p, r, n$\colon$ \parameters)<->text747.htm#8570<->PermutationGroup(D, Q, p, r, n$\colon$ \parameters): DB, MonStgElt, RngIntElt, RngIntElt, RngIntElt, RngIntElt -> GrpPerm
5<->PermutationGroup(D, i: parameters)<->text747.htm#8570<->PermutationGroup(D, i: parameters): DB, RngIntElt -&gt; GrpPerm
3<->access :<->text747.htm#8565<->access :: Accessing the Database (DATABASES OF GROUPS)
3<->find_keys :<->text747.htm#8571<->find_keys :: Finding Legal Keys (DATABASES OF GROUPS)
5<->NumberOfGroups :: # D <->text747.htm#8572<->NumberOfGroups :: # D : DB -&gt; RngIntElt
5<-># D <->text747.htm#8572<-># D : DB -&gt; RngIntElt
5<->NumberOfGroups(D, o) <->text747.htm#8573<->NumberOfGroups(D, o) : DB, RngIntElt -&gt; RngIntElt
5<->TopQuotients(D) <->text747.htm#8574<->TopQuotients(D) : DB -&gt; SetIndx
5<->ExtensionPrimes(D, Q) <->text747.htm#8575<->ExtensionPrimes(D, Q) : DB, MonStgElt -&gt; SetEnum
5<->ExtensionExponents(D, Q, p) <->text747.htm#8576<->ExtensionExponents(D, Q, p) : DB, MonStgElt, RngIntElt -&gt; SetEnum
5<->ExtensionNumbers(D, Q, p, r) <->text747.htm#8577<->ExtensionNumbers(D, Q, p, r) : DB, MonStgElt, RngIntElt, RngIntElt -&gt; SetEnum
5<->ExtensionClasses(D, Q) <->text747.htm#8578<->ExtensionClasses(D, Q) : DB, MonStgElt -&gt; SetEnum
4<->GrpData_perfgps (Example H71E7)<->text747.htm#8579<->GrpData_perfgps (Example H71E7)
4<->Example-perfgps :<->text747.htm#8579<->Example-perfgps :: GrpData_perfgps (Example H71E7)
3<->find_keys :<->text747.htm#8571<->find_keys :: Finding Legal Keys (DATABASES OF GROUPS)
3<->pfgps :<->text747.htm<->pfgps :: Database of Perfect Groups (DATABASES OF GROUPS)
3<->sgdb :<->text748.htm<->sgdb :: Database of Almost-Simple  Groups (DATABASES OF GROUPS)
3<->fields :<->text748.htm#8581<->fields :: The Record Fields (DATABASES OF GROUPS)
3<->creation :<->text748.htm#8582<->creation :: Creating the Database (DATABASES OF GROUPS)
5<->AlmostSimpleGroupDatabase() <->text748.htm#8583<->AlmostSimpleGroupDatabase() : -&gt; DB
3<->creation :<->text748.htm#8582<->creation :: Creating the Database (DATABASES OF GROUPS)
3<->access :<->text748.htm#8584<->access :: Accessing the Database (DATABASES OF GROUPS)
5<-># D <->text748.htm#8585<-># D : DB -&gt; RngIntElt
5<->GroupData(D, o1, o2, k)<->text748.htm#8586<->GroupData(D, o1, o2, k): DB, RngIntElt, RngIntElt, RngIntElt -> Rec
5<->GroupData(D, i)<->text748.htm#8586<->GroupData(D, i): DB, RngIntElt -&gt; Rec
5<->ExistsGroupData(D, o1, o2, i)<->text748.htm#8587<->ExistsGroupData(D, o1, o2, i): DB, RngIntElt, RngIntElt, RngIntElt -> BoolElt, Rec
5<->ExistsGroupData(D, o1, o2)<->text748.htm#8587<->ExistsGroupData(D, o1, o2): DB, RngIntElt, RngIntElt -&gt; BoolElt
5<->NumberOfGroups(D, o1, o2)<->text748.htm#8588<->NumberOfGroups(D, o1, o2): DB, RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->IdentifyAlmostSimpleGroup(G) <->text748.htm#8589<->IdentifyAlmostSimpleGroup(G) : GrpMat -> Map, GrpPerm
5<->IdentifyAlmostSimpleGroup(G) <->text748.htm#8589<->IdentifyAlmostSimpleGroup(G) : GrpPerm -&gt; Map, GrpPerm
4<->GrpData_sgdb (Example H71E8)<->text748.htm#8590<->GrpData_sgdb (Example H71E8)
4<->Example-sgdb :<->text748.htm#8590<->Example-sgdb :: GrpData_sgdb (Example H71E8)
3<->access :<->text748.htm#8584<->access :: Accessing the Database (DATABASES OF GROUPS)
3<->sgdb :<->text748.htm<->sgdb :: Database of Almost-Simple  Groups (DATABASES OF GROUPS)
3<->transgp-data :<->text749.htm<->transgp-data :: Database of Transitive Groups (DATABASES OF GROUPS)
3<->database-access :<->text749.htm#8592<->database-access :: Accessing the Databases (DATABASES OF GROUPS)
5<->TransitiveGroupDatabaseLimit() <->text749.htm#8593<->TransitiveGroupDatabaseLimit() : -&gt; RngIntElt
5<->NumberOfTransitiveGroups(d) <->text749.htm#8594<->NumberOfTransitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->TransitiveGroup(d, n) <->text749.htm#8595<->TransitiveGroup(d, n) : RngIntElt, RngIntElt -&gt; GrpPerm, MonStgElt
5<->TransitiveGroupDescription(d, n) <->text749.htm#8596<->TransitiveGroupDescription(d, n) : RngIntElt, RngIntElt -&gt; MonStgElt
5<->TransitiveGroupDescription(G) <->text749.htm#8597<->TransitiveGroupDescription(G) : GrpPerm -&gt; MonStgElt
5<->TransitiveGroup(d) <->text749.htm#8598<->TransitiveGroup(d) : RngIntElt -&gt; GrpPerm, MonStgElt
5<->TransitiveGroup(d, f) <->text749.htm#8599<->TransitiveGroup(d, f) : RngIntElt, Program -&gt; GrpPerm, MonStgElt
5<->TransitiveGroup(S, f) <->text749.htm#8600<->TransitiveGroup(S, f) : [RngIntElt], Program -&gt; GrpPerm, MonStgElt
5<->TransitiveGroups(d: parameters) <->text749.htm#8601<->TransitiveGroups(d: parameters) : RngIntElt -&gt; [GrpPerm]
5<->TransitiveGroups(S: parameters) <->text749.htm#8602<->TransitiveGroups(S: parameters) : [RngIntElt] -&gt; [GrpPerm]
5<->TransitiveGroups(d, f) <->text749.htm#8603<->TransitiveGroups(d, f) : RngIntElt, Program -&gt; [GrpPerm]
5<->TransitiveGroups(S, f) <->text749.htm#8604<->TransitiveGroups(S, f) : [RngIntElt], Program -&gt; [GrpPerm]
4<->GrpData_Transitive (Example H71E9)<->text749.htm#8605<->GrpData_Transitive (Example H71E9)
4<->Example-Transitive :<->text749.htm#8605<->Example-Transitive :: GrpData_Transitive (Example H71E9)
3<->database-access :<->text749.htm#8592<->database-access :: Accessing the Databases (DATABASES OF GROUPS)
3<->process :<->text749.htm#8606<->process :: Processes (DATABASES OF GROUPS)
5<->TransitiveGroupProcess(d) <->text749.htm#8607<->TransitiveGroupProcess(d) : RngIntElt -&gt; Process
5<->TransitiveGroupProcess(S) <->text749.htm#8608<->TransitiveGroupProcess(S) : [RngIntElt] -&gt; Process
5<->TransitiveGroupProcess(d, f) <->text749.htm#8609<->TransitiveGroupProcess(d, f) : RngIntElt, Program -&gt; Process
5<->TransitiveGroupProcess(S, f) <->text749.htm#8610<->TransitiveGroupProcess(S, f) : [RngIntElt], Program -&gt; Process
5<->IsEmpty(p) <->text749.htm#8611<->IsEmpty(p) : Process -&gt; BoolElt
5<->Current(p) <->text749.htm#8612<->Current(p) : Process -&gt; GrpPerm, MonStgElt
5<->CurrentLabel(p) <->text749.htm#8613<->CurrentLabel(p) : Process -&gt; RngIntElt, RngIntElt
5<->Advance(~p) <->text749.htm#8614<->Advance(~p) : Process -&gt;
4<->GrpData_TransitiveProcess (Example H71E10)<->text749.htm#8615<->GrpData_TransitiveProcess (Example H71E10)
4<->Example-TransitiveProcess :<->text749.htm#8615<->Example-TransitiveProcess :: GrpData_TransitiveProcess (Example H71E10)
3<->process :<->text749.htm#8606<->process :: Processes (DATABASES OF GROUPS)
3<->trngp_id :<->text749.htm#8616<->trngp_id :: Transitive Group Identification (DATABASES OF GROUPS)
5<->TransitiveGroupIdentification(G) <->text749.htm#8617<->TransitiveGroupIdentification(G) : GrpPerm -&gt; RngIntElt, RngIntElt
4<->GrpData_TransitiveId (Example H71E11)<->text749.htm#8618<->GrpData_TransitiveId (Example H71E11)
4<->Example-TransitiveId :<->text749.htm#8618<->Example-TransitiveId :: GrpData_TransitiveId (Example H71E11)
3<->trngp_id :<->text749.htm#8616<->trngp_id :: Transitive Group Identification (DATABASES OF GROUPS)
3<->transgp-data :<->text749.htm<->transgp-data :: Database of Transitive Groups (DATABASES OF GROUPS)
3<->primgp-data :<->text750.htm<->primgp-data :: Database of Primitive Groups (DATABASES OF GROUPS)
3<->database-access :<->text750.htm#8620<->database-access :: Accessing the Databases (DATABASES OF GROUPS)
5<->PrimitiveGroupDatabaseLimit() <->text750.htm#8621<->PrimitiveGroupDatabaseLimit() : -&gt; RngIntElt
5<->NumberOfPrimitiveSolubleGroups :: NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveSolubleGroups :: NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->NumberOfPrimitiveAffineGroups :: NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveAffineGroups :: NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->NumberOfPrimitiveDiagonalGroups :: NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveDiagonalGroups :: NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->NumberOfPrimitiveProductGroups :: NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveProductGroups :: NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->NumberOfPrimitiveAlmostSimpleGroups :: NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveAlmostSimpleGroups :: NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->NumberOfPrimitiveGroups(d) <->text750.htm#8622<->NumberOfPrimitiveGroups(d) : RngIntElt -&gt; RngIntElt
5<->PrimitiveGroup(d, n) <->text750.htm#8623<->PrimitiveGroup(d, n) : RngIntElt, RngIntElt -&gt; GrpPerm, MonStgElt, MonStgElt
5<->PrimitiveGroupDescription(d, n) <->text750.htm#8624<->PrimitiveGroupDescription(d, n) : RngIntElt, RngIntElt -&gt; MonStgElt
5<->PrimitiveGroup(d) <->text750.htm#8625<->PrimitiveGroup(d) : RngIntElt -&gt; GrpPerm, MonStgElt, MonStgElt
5<->PrimitiveGroup(d, f) <->text750.htm#8626<->PrimitiveGroup(d, f) : RngIntElt, Program -&gt; GrpPerm, MonStgElt
5<->PrimitiveGroup(S, f) <->text750.htm#8627<->PrimitiveGroup(S, f) : [RngIntElt], Program -&gt; GrpPerm, MonStgElt
5<->PrimitiveGroups(d: parameters) <->text750.htm#8628<->PrimitiveGroups(d: parameters) : RngIntElt -&gt; [GrpPerm]
5<->PrimitiveGroups( $\colon$ \parameters) <->text750.htm#8629<->PrimitiveGroups( $\colon$ \parameters) :  -> [GrpPerm]
5<->PrimitiveGroups(S: parameters) <->text750.htm#8629<->PrimitiveGroups(S: parameters) : [RngIntElt] -&gt; [GrpPerm]
5<->PrimitiveGroups(S, f) <->text750.htm#8630<->PrimitiveGroups(S, f) : [RngIntElt], Program -> [GrpPerm]
5<->PrimitiveGroups(f) <->text750.htm#8630<->PrimitiveGroups(f) : Program -> [GrpPerm]
5<->PrimitiveGroups(d, f: parameters) <->text750.htm#8630<->PrimitiveGroups(d, f: parameters) : RngIntElt, Program -&gt; [GrpPerm]
4<->GrpData_Primitive (Example H71E12)<->text750.htm#8631<->GrpData_Primitive (Example H71E12)
4<->Example-Primitive :<->text750.htm#8631<->Example-Primitive :: GrpData_Primitive (Example H71E12)
3<->database-access :<->text750.htm#8620<->database-access :: Accessing the Databases (DATABASES OF GROUPS)
3<->process :<->text750.htm#8632<->process :: Processes (DATABASES OF GROUPS)
5<->PrimitiveGroupProcess(S$\colon$ \parameters) <->text750.htm#8633<->PrimitiveGroupProcess(S$\colon$ \parameters) : [RngIntElt] -> Process
5<->PrimitiveGroupProcess($\colon$ \parameters) <->text750.htm#8633<->PrimitiveGroupProcess($\colon$ \parameters) :  -> Process
5<->PrimitiveGroupProcess(d: parameters) <->text750.htm#8633<->PrimitiveGroupProcess(d: parameters) : RngIntElt -&gt; Process
5<->PrimitiveGroupProcess(S, f$\colon$ \parameters) <->text750.htm#8634<->PrimitiveGroupProcess(S, f$\colon$ \parameters) : [RngIntElt], Program -> Process
5<->PrimitiveGroupProcess(f$\colon$ \parameters) <->text750.htm#8634<->PrimitiveGroupProcess(f$\colon$ \parameters) : Program -> Process
5<->PrimitiveGroupProcess(d, f: parameters) <->text750.htm#8634<->PrimitiveGroupProcess(d, f: parameters) : RngIntElt, Program -&gt; Process
5<->IsEmpty(p) <->text750.htm#8635<->IsEmpty(p) : Process -&gt; BoolElt
5<->Current(p) <->text750.htm#8636<->Current(p) : Process -&gt; GrpPerm, MonStgElt
5<->CurrentLabel(p) <->text750.htm#8637<->CurrentLabel(p) : Process -&gt; RngIntElt, RngIntElt
5<->Advance(~p) <->text750.htm#8638<->Advance(~p) : Process -&gt;
4<->GrpData_PrimitiveProcess (Example H71E13)<->text750.htm#8639<->GrpData_PrimitiveProcess (Example H71E13)
4<->Example-PrimitiveProcess :<->text750.htm#8639<->Example-PrimitiveProcess :: GrpData_PrimitiveProcess (Example H71E13)
3<->process :<->text750.htm#8632<->process :: Processes (DATABASES OF GROUPS)
3<->trngp_id :<->text750.htm#8640<->trngp_id :: Primitive Group Identification (DATABASES OF GROUPS)
5<->PrimitiveGroupIdentification(G) <->text750.htm#8641<->PrimitiveGroupIdentification(G) : GrpPerm -&gt; RngIntElt, RngIntElt
4<->GrpData_PrimitiveId (Example H71E14)<->text750.htm#8642<->GrpData_PrimitiveId (Example H71E14)
4<->Example-PrimitiveId :<->text750.htm#8642<->Example-PrimitiveId :: GrpData_PrimitiveId (Example H71E14)
3<->trngp_id :<->text750.htm#8640<->trngp_id :: Primitive Group Identification (DATABASES OF GROUPS)
3<->primgp-data :<->text750.htm<->primgp-data :: Database of Primitive Groups (DATABASES OF GROUPS)
3<->ratgps :<->text751.htm<->ratgps :: Database of Rational Maximal Finite Matrix Groups (DATABASES OF GROUPS)
5<->RationalMatrixGroupDatabase() <->text751.htm#8644<->RationalMatrixGroupDatabase() : -&gt; DB
5<->LargestDimension(D) <->text751.htm#8645<->LargestDimension(D) : DB -&gt; RngIntElt
5<->NumberOfGroups :: # D <->text751.htm#8646<->NumberOfGroups :: # D : DB -&gt; RngIntElt
5<->NumberOfLattices :: # D <->text751.htm#8646<->NumberOfLattices :: # D : DB -&gt; RngIntElt
5<-># D <->text751.htm#8646<-># D : DB -&gt; RngIntElt
5<->NumberOfLattices :: NumberOfGroups(D, d) <->text751.htm#8647<->NumberOfLattices :: NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->NumberOfGroups(D, d) <->text751.htm#8647<->NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->Group(D, i)<->text751.htm#8648<->Group(D, i): DB, RngIntElt -&gt; GrpMat
5<->Lattice(D, i)<->text751.htm#8649<->Lattice(D, i): DB, RngIntElt -&gt; Lat
5<->Group(D, d, i)<->text751.htm#8650<->Group(D, d, i): DB, RngIntElt, RngIntElt -&gt; GrpMat
5<->Lattice(D, d, i)<->text751.htm#8651<->Lattice(D, d, i): DB, RngIntElt, RngIntElt -&gt; Lat
4<->GrpData_ratgps1 (Example H71E15)<->text751.htm#8652<->GrpData_ratgps1 (Example H71E15)
4<->Example-ratgps1 :<->text751.htm#8652<->Example-ratgps1 :: GrpData_ratgps1 (Example H71E15)
3<->ratgps :<->text751.htm<->ratgps :: Database of Rational Maximal Finite Matrix Groups (DATABASES OF GROUPS)
3<->intgps :<->text752.htm<->intgps :: Database of Integral Maximal Finite Matrix Groups (DATABASES OF GROUPS)
5<->IntegralMatrixGroupDatabase() <->text752.htm#8654<->IntegralMatrixGroupDatabase() : -&gt; DB
5<->LargestDimension(D) <->text752.htm#8655<->LargestDimension(D) : DB -&gt; RngIntElt
5<->NumberOfGroups :: # D <->text752.htm#8656<->NumberOfGroups :: # D : DB -&gt; RngIntElt
5<->NumberOfLattices :: # D <->text752.htm#8656<->NumberOfLattices :: # D : DB -&gt; RngIntElt
5<-># D <->text752.htm#8656<-># D : DB -&gt; RngIntElt
5<->NumberOfLattices :: NumberOfGroups(D, d) <->text752.htm#8657<->NumberOfLattices :: NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->NumberOfGroups(D, d) <->text752.htm#8657<->NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->Group(D, i)<->text752.htm#8658<->Group(D, i): DB, RngIntElt -&gt; GrpMat
5<->Lattice(D, i)<->text752.htm#8659<->Lattice(D, i): DB, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, i)<->text752.htm#8660<->Construction(D, i): DB, RngIntElt -&gt; MonStgElt, SeqEnum
5<->Group(D, d, i)<->text752.htm#8661<->Group(D, d, i): DB, RngIntElt, RngIntElt -&gt; GrpMat
5<->Lattice(D, d, i)<->text752.htm#8662<->Lattice(D, d, i): DB, RngIntElt, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, d, i)<->text752.htm#8663<->Construction(D, d, i): DB, RngIntElt, RngIntElt -&gt; MonStgElt, SeqEnum
4<->GrpData_Integral (Example H71E16)<->text752.htm#8664<->GrpData_Integral (Example H71E16)
4<->Example-Integral :<->text752.htm#8664<->Example-Integral :: GrpData_Integral (Example H71E16)
3<->intgps :<->text752.htm<->intgps :: Database of Integral Maximal Finite Matrix Groups (DATABASES OF GROUPS)
3<->quatgps :<->text753.htm<->quatgps :: Database of Finite  Quaternionic Matrix Groups (DATABASES OF GROUPS)
5<->QuaternionicMatrixGroupDatabase() <->text753.htm#8666<->QuaternionicMatrixGroupDatabase() : -&gt; DB
5<->LargestDimension(D) <->text753.htm#8667<->LargestDimension(D) : DB -&gt; RngIntElt
5<->NumberOfGroups :: # D <->text753.htm#8668<->NumberOfGroups :: # D : DB -&gt; RngIntElt
5<->NumberOfLattices :: # D <->text753.htm#8668<->NumberOfLattices :: # D : DB -&gt; RngIntElt
5<-># D <->text753.htm#8668<-># D : DB -&gt; RngIntElt
5<->NumberOfLattices :: NumberOfGroups(D, d) <->text753.htm#8669<->NumberOfLattices :: NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->NumberOfGroups(D, d) <->text753.htm#8669<->NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->Group(D, i)<->text753.htm#8670<->Group(D, i): DB, RngIntElt -&gt; GrpMat
5<->Lattice(D, i)<->text753.htm#8671<->Lattice(D, i): DB, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, i)<->text753.htm#8672<->Construction(D, i): DB, RngIntElt -&gt; MonStgElt, RngIntElt
5<->Group(D, d, i)<->text753.htm#8673<->Group(D, d, i): DB, RngIntElt, RngIntElt -&gt; GrpMat
5<->Lattice(D, d, i)<->text753.htm#8674<->Lattice(D, d, i): DB, RngIntElt, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, d, i)<->text753.htm#8675<->Construction(D, d, i): DB, RngIntElt, RngIntElt -&gt; MonStgElt, RngIntElt
4<->GrpData_Quaternionic (Example H71E17)<->text753.htm#8676<->GrpData_Quaternionic (Example H71E17)
4<->Example-Quaternionic :<->text753.htm#8676<->Example-Quaternionic :: GrpData_Quaternionic (Example H71E17)
3<->quatgps :<->text753.htm<->quatgps :: Database of Finite  Quaternionic Matrix Groups (DATABASES OF GROUPS)
3<->symplgps :<->text754.htm<->symplgps :: Database of Finite Symplectic Matrix Groups (DATABASES OF GROUPS)
5<->SymplecticMatrixGroupDatabase() <->text754.htm#8678<->SymplecticMatrixGroupDatabase() : -&gt; DB
5<->LargestDimension(D) <->text754.htm#8679<->LargestDimension(D) : DB -&gt; RngIntElt
5<->NumberOfGroups :: # D <->text754.htm#8680<->NumberOfGroups :: # D : DB -&gt; RngIntElt
5<->NumberOfLattices :: # D <->text754.htm#8680<->NumberOfLattices :: # D : DB -&gt; RngIntElt
5<-># D <->text754.htm#8680<-># D : DB -&gt; RngIntElt
5<->NumberOfLattices :: NumberOfGroups(D, d) <->text754.htm#8681<->NumberOfLattices :: NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->NumberOfGroups(D, d) <->text754.htm#8681<->NumberOfGroups(D, d) : DB, RngIntElt -&gt; RngIntElt
5<->Group(D, i)<->text754.htm#8682<->Group(D, i): DB, RngIntElt -&gt; GrpMat
5<->Lattice(D, i)<->text754.htm#8683<->Lattice(D, i): DB, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, i)<->text754.htm#8684<->Construction(D, i): DB, RngIntElt -&gt; MonStgElt
5<->Group(D, d, i)<->text754.htm#8685<->Group(D, d, i): DB, RngIntElt, RngIntElt -&gt; GrpMat
5<->Lattice(D, d, i)<->text754.htm#8686<->Lattice(D, d, i): DB, RngIntElt, RngIntElt -&gt; Lat, SeqEnum
5<->Construction(D, d, i)<->text754.htm#8687<->Construction(D, d, i): DB, RngIntElt, RngIntElt -&gt; MonStgElt
4<->GrpData_Symplectic (Example H71E18)<->text754.htm#8688<->GrpData_Symplectic (Example H71E18)
4<->Example-Symplectic :<->text754.htm#8688<->Example-Symplectic :: GrpData_Symplectic (Example H71E18)
3<->symplgps :<->text754.htm<->symplgps :: Database of Finite Symplectic Matrix Groups (DATABASES OF GROUPS)
3<->irrgp-data :<->text755.htm<->irrgp-data :: Database of Irreducible Matrix  Groups (DATABASES OF GROUPS)
3<->database-access :<->text755.htm#8690<->database-access :: Accessing the Database (DATABASES OF GROUPS)
5<->NumberOfSolubleIrreducibleMatrixGroups :: NumberOfIrreducibleMatrixGroups(k, p) <->text755.htm#8691<->NumberOfSolubleIrreducibleMatrixGroups :: NumberOfIrreducibleMatrixGroups(k, p) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->NumberOfIrreducibleMatrixGroups(k, p) <->text755.htm#8691<->NumberOfIrreducibleMatrixGroups(k, p) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->IrreducibleMatrixGroup(k, p, n) <->text755.htm#8692<->IrreducibleMatrixGroup(k, p, n) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat
4<->GrpData_IrredMat (Example H71E19)<->text755.htm#8693<->GrpData_IrredMat (Example H71E19)
4<->Example-IrredMat :<->text755.htm#8693<->Example-IrredMat :: GrpData_IrredMat (Example H71E19)
3<->database-access :<->text755.htm#8690<->database-access :: Accessing the Database (DATABASES OF GROUPS)
3<->irrgp-data :<->text755.htm<->irrgp-data :: Database of Irreducible Matrix  Groups (DATABASES OF GROUPS)
3<->quasisimplematgp-data :<->text756.htm<->quasisimplematgp-data :: Database of Quasisimple Matrix Groups (DATABASES OF GROUPS)
5<->QuasisimpleMatrixGroup(N, d, p : parameters) <->text756.htm#8695<->QuasisimpleMatrixGroup(N, d, p : parameters) : MonStgElt, RngIntElt, RngIntElt -&gt;GrpMat
5<->QuasisimpleMatrixGroups()<->text756.htm#8696<->QuasisimpleMatrixGroups(): -&gt; SeqEnum
3<->quasisimplematgp-data :<->text756.htm<->quasisimplematgp-data :: Database of Quasisimple Matrix Groups (DATABASES OF GROUPS)
3<->isolgps-database :<->text757.htm<->isolgps-database :: Database of Soluble  Irreducible Groups (DATABASES OF GROUPS)
3<->basic-isolgps :<->text757.htm#8698<->basic-isolgps :: Basic Functions (DATABASES OF GROUPS)
5<->IsolGroupDatabase() <->text757.htm#8699<->IsolGroupDatabase() : -&gt; DB
5<->IsolGroup(n, p, i) <->text757.htm#8700<->IsolGroup(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat
5<->IsolNumberOfDegreeField(n, p) <->text757.htm#8701<->IsolNumberOfDegreeField(n, p) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsolInfo(n, p, i) <->text757.htm#8702<->IsolInfo(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; MonStgElt
5<->IsolOrder(n, p, i) <->text757.htm#8703<->IsolOrder(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsolMinBlockSize(n, p, i) <->text757.htm#8704<->IsolMinBlockSize(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsolIsPrimitive(n, p, i) <->text757.htm#8705<->IsolIsPrimitive(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; BoolElt
5<->IsolGuardian(n, p, i) <->text757.htm#8706<->IsolGuardian(n, p, i) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat
4<->GrpData_IsolGroup (Example H71E20)<->text757.htm#8707<->GrpData_IsolGroup (Example H71E20)
4<->Example-IsolGroup :<->text757.htm#8707<->Example-IsolGroup :: GrpData_IsolGroup (Example H71E20)
3<->basic-isolgps :<->text757.htm#8698<->basic-isolgps :: Basic Functions (DATABASES OF GROUPS)
3<->searching :<->text757.htm#8708<->searching :: Searching with Predicates (DATABASES OF GROUPS)
5<->IsolGroupSatisfying(f) <->text757.htm#8709<->IsolGroupSatisfying(f) : Any -&gt; GrpMat
5<->IsolGroupOfDegreeSatisfying(d, f) <->text757.htm#8710<->IsolGroupOfDegreeSatisfying(d, f) : RngIntElt, Any -&gt; GrpMat
5<->IsolGroupOfDegreeFieldSatisfying(d, p, f) <->text757.htm#8711<->IsolGroupOfDegreeFieldSatisfying(d, p, f) : RngIntElt, RngIntElt, Any -&gt; GrpMat
5<->IsolGroupsSatisfying(f) <->text757.htm#8712<->IsolGroupsSatisfying(f) : Any -&gt; SeqEnum
5<->IsolGroupsOfDegreeSatisfying(d, f) <->text757.htm#8713<->IsolGroupsOfDegreeSatisfying(d, f) : RngIntElt, Any -&gt; SeqEnum
5<->IsolGroupsOfDegreeFieldSatisfying(d, p, f) <->text757.htm#8714<->IsolGroupsOfDegreeFieldSatisfying(d, p, f) : RngIntElt, RngIntElt, Any -&gt; SeqEnum
3<->searching :<->text757.htm#8708<->searching :: Searching with Predicates (DATABASES OF GROUPS)
3<->associated-fns :<->text757.htm#8715<->associated-fns :: Associated Functions (DATABASES OF GROUPS)
5<->Getvecs(G) <->text757.htm#8716<->Getvecs(G) : GrpMat -&gt; SeqEnum
5<->Semidir(G, Q) <->text757.htm#8717<->Semidir(G, Q) : GrpMat, SeqEnum  -&gt; GrpPerm
3<->associated-fns :<->text757.htm#8715<->associated-fns :: Associated Functions (DATABASES OF GROUPS)
3<->process :<->text757.htm#8718<->process :: Processes (DATABASES OF GROUPS)
5<->IsolProcess() <->text757.htm#8719<->IsolProcess() : -&gt; Process
5<->IsolProcessOfDegree(d) <->text757.htm#8720<->IsolProcessOfDegree(d) : . -&gt; Process
5<->IsolProcessOfField(p) <->text757.htm#8721<->IsolProcessOfField(p) : . -&gt; Process
5<->IsolProcessOfDegreeField(d, p) <->text757.htm#8722<->IsolProcessOfDegreeField(d, p) : ., . -&gt; Process
5<->IsEmpty(p) <->text757.htm#8723<->IsEmpty(p) : Process -&gt; BoolElt
5<->Current(p) <->text757.htm#8724<->Current(p) : Process -&gt; GrpMat
5<->CurrentLabel(p) <->text757.htm#8725<->CurrentLabel(p) : Process -&gt; RngIntElt, RngIntElt, RngIntElt
5<->Advance(~p) <->text757.htm#8726<->Advance(~p) : Process -&gt;
4<->GrpData_sg-process (Example H71E21)<->text757.htm#8727<->GrpData_sg-process (Example H71E21)
4<->Example-sg-process :<->text757.htm#8727<->Example-sg-process :: GrpData_sg-process (Example H71E21)
3<->process :<->text757.htm#8718<->process :: Processes (DATABASES OF GROUPS)
3<->isolgps-database :<->text757.htm<->isolgps-database :: Database of Soluble  Irreducible Groups (DATABASES OF GROUPS)
3<->ATLAS-database :<->text758.htm<->ATLAS-database :: Database of ATLAS Groups (DATABASES OF GROUPS)
4<->GrpData_ATLAS-names (Example H71E22)<->text758.htm#8729<->GrpData_ATLAS-names (Example H71E22)
4<->Example-ATLAS-names :<->text758.htm#8729<->Example-ATLAS-names :: GrpData_ATLAS-names (Example H71E22)
3<->database-access :<->text758.htm#8730<->database-access :: Accessing the Database (DATABASES OF GROUPS)
5<->ATLASGroupNames() <->text758.htm#8731<->ATLASGroupNames() : -&gt; SetIndx[MonStgElt]
5<->ATLASGroup(N) <->text758.htm#8732<->ATLASGroup(N) : MonStgElt -&gt; GrpAtlas
3<->database-access :<->text758.htm#8730<->database-access :: Accessing the Database (DATABASES OF GROUPS)
3<->atlas-group-access :<->text758.htm#8733<->atlas-group-access :: Accessing the ATLAS Groups (DATABASES OF GROUPS)
5<-># :: Order(A) <->text758.htm#8734<-># :: Order(A) : GrpAtlas -&gt; RngIntElt
5<->Order(A) <->text758.htm#8734<->Order(A) : GrpAtlas -&gt; RngIntElt
5<->Multiplier(A) <->text758.htm#8735<->Multiplier(A) : GrpAtlas -&gt; RngIntElt
5<->MatRepKeys(A) <->text758.htm#8736<->MatRepKeys(A) : GrpAtlas -&gt; SeqEnum[DBAtlasKeyMatRep]
5<->MatRepDegrees(A) <->text758.htm#8737<->MatRepDegrees(A) : GrpAtlas -&gt; SetEnum[RngIntElt]
5<->Degree(K) <->text758.htm#8738<->Degree(K) : DBAtlasKeyMatRep -&gt; RngIntElt
5<->MatRepFieldSizes(A) <->text758.htm#8739<->MatRepFieldSizes(A) : GrpAtlas -&gt; SetEnum[RngIntElt]
5<->MatRepCharacteristics(A) <->text758.htm#8740<->MatRepCharacteristics(A) : GrpAtlas -&gt; SetEnum[RngIntElt]
5<->Field(K) <->text758.htm#8741<->Field(K) : DBAtlasKeyMatRep -&gt; FldFin
5<->PermRepKeys(A) <->text758.htm#8742<->PermRepKeys(A) : GrpAtlas -&gt; SeqEnum[DBAtlasKeyPermRep]
5<->PermRepDegrees(A) <->text758.htm#8743<->PermRepDegrees(A) : GrpAtlas -&gt; SetEnum[RngIntElt]
5<->Degree(K) <->text758.htm#8744<->Degree(K) : DBAtlasKeyPermRep -&gt; RngIntElt
3<->atlas-group-access :<->text758.htm#8733<->atlas-group-access :: Accessing the ATLAS Groups (DATABASES OF GROUPS)
3<->constructing-representations :<->text758.htm#8745<->constructing-representations :: Representations of the ATLAS  Groups (DATABASES OF GROUPS)
5<->MatrixGroup(K) <->text758.htm#8746<->MatrixGroup(K) : DBAtlasKeyMatRep -&gt; GrpMat
5<->MatRep(K) <->text758.htm#8747<->MatRep(K) : DBAtlasKeyMatRep -&gt; SeqEnum[GrpMatElt]
5<->PermutationGroup(K) <->text758.htm#8748<->PermutationGroup(K) : DBAtlasKeyPermRep -&gt; GrpPerm
5<->PermRep(K) <->text758.htm#8749<->PermRep(K) : DBAtlasKeyPermRep -&gt; SeqEnum[GrpPermElt]
4<->GrpData_J2 (Example H71E23)<->text758.htm#8750<->GrpData_J2 (Example H71E23)
4<->Example-J2 :<->text758.htm#8750<->Example-J2 :: GrpData_J2 (Example H71E23)
3<->constructing-representations :<->text758.htm#8745<->constructing-representations :: Representations of the ATLAS  Groups (DATABASES OF GROUPS)
3<->ATLAS-database :<->text758.htm<->ATLAS-database :: Database of ATLAS Groups (DATABASES OF GROUPS)
3<->3-manifolds-database :<->text759.htm<->3-manifolds-database :: Fundamental Groups of  3-Manifolds (DATABASES OF GROUPS)
3<->basic-manifolds :<->text759.htm#8752<->basic-manifolds :: Basic Functions (DATABASES OF GROUPS)
5<->ManifoldDatabase() <->text759.htm#8753<->ManifoldDatabase() : -&gt; DB
5<->Manifold(D, i) <->text759.htm#8754<->Manifold(D, i) : DB, RngIntElt -&gt; Rec
3<->basic-manifolds :<->text759.htm#8752<->basic-manifolds :: Basic Functions (DATABASES OF GROUPS)
3<->other-access :<->text759.htm#8755<->other-access :: Accessing the Data (DATABASES OF GROUPS)
4<->GrpData_manifolds (Example H71E24)<->text759.htm#8756<->GrpData_manifolds (Example H71E24)
4<->Example-manifolds :<->text759.htm#8756<->Example-manifolds :: GrpData_manifolds (Example H71E24)
3<->other-access :<->text759.htm#8755<->other-access :: Accessing the Data (DATABASES OF GROUPS)
3<->3-manifolds-database :<->text759.htm<->3-manifolds-database :: Fundamental Groups of  3-Manifolds (DATABASES OF GROUPS)
3<->databases-overview :<->text742.htm<->databases-overview :: DATABASES OF GROUPS
3<->grp-auto :<->text762.htm<->grp-auto :: AUTOMORPHISM GROUPS
3<->GrpAuto :<->text763.htm<->GrpAuto :: Introduction (AUTOMORPHISM GROUPS)
3<->introduction :<->text763.htm<->introduction :: Introduction (AUTOMORPHISM GROUPS)
3<->creation :<->text764.htm<->creation :: Creation of Automorphism  Groups (AUTOMORPHISM GROUPS)
5<->AutomorphismGroup(G)<->text764.htm#8762<->AutomorphismGroup(G): Grp -&gt; GrpAuto
4<->GrpAuto_autogp-full (Example H72E1)<->text764.htm#8763<->GrpAuto_autogp-full (Example H72E1)
4<->Example-autogp-full :<->text764.htm#8763<->Example-autogp-full :: GrpAuto_autogp-full (Example H72E1)
5<->AutomorphismGroup(G, Q, I)<->text764.htm#8764<->AutomorphismGroup(G, Q, I): Grp, SeqEnum[GrpElt], SeqEnum[SeqEnum[GrpElt]] -&gt; GrpAuto
3<->creation :<->text764.htm<->creation :: Creation of Automorphism  Groups (AUTOMORPHISM GROUPS)
3<->access :<->text765.htm<->access :: Access Functions (AUTOMORPHISM GROUPS)
5<->Group(A) <->text765.htm#8766<->Group(A) : GrpAuto -&gt; Grp
5<->Ngens :: NumberOfGenerators(A) <->text765.htm#8767<->Ngens :: NumberOfGenerators(A) : GrpAuto -&gt; RngIntElt
5<->NumberOfGenerators(A) <->text765.htm#8767<->NumberOfGenerators(A) : GrpAuto -&gt; RngIntElt
5<->NPCGenerators :: NumberOfPCGenerators(A) <->text765.htm#8768<->NPCGenerators :: NumberOfPCGenerators(A) : GrpAuto -&gt; RngIntElt
5<->NPCgens :: NumberOfPCGenerators(A) <->text765.htm#8768<->NPCgens :: NumberOfPCGenerators(A) : GrpAuto -&gt; RngIntElt
5<->NumberOfPCGenerators(A) <->text765.htm#8768<->NumberOfPCGenerators(A) : GrpAuto -&gt; RngIntElt
5<->Generators(A) <->text765.htm#8769<->Generators(A) : GrpAuto -&gt; SetEnum
5<->PCGenerators(A) <->text765.htm#8770<->PCGenerators(A) : GrpAuto -&gt; SetIndx
5<->InnerGenerators(A) <->text765.htm#8771<->InnerGenerators(A) : GrpAuto -&gt; SeqEnum
5<->CharacteristicSeries(A) <->text765.htm#8772<->CharacteristicSeries(A) : GrpAuto -&gt; SeqEnum
5<->IsSolvable :: IsSoluble(A) <->text765.htm#8773<->IsSolvable :: IsSoluble(A) : GrpAuto -&gt; BoolElt
5<->IsSoluble(A) <->text765.htm#8773<->IsSoluble(A) : GrpAuto -&gt; BoolElt
5<->IsSolvableAutomorphismGroupPGroup :: IsSolubleAutomorphismGroupPGroup(A) <->text765.htm#8774<->IsSolvableAutomorphismGroupPGroup :: IsSolubleAutomorphismGroupPGroup(A) : GrpAuto -&gt; BoolElt
5<->IsSolubleAutomorphismGroupPGroup(A) <->text765.htm#8774<->IsSolubleAutomorphismGroupPGroup(A) : GrpAuto -&gt; BoolElt
3<->access :<->text765.htm<->access :: Access Functions (AUTOMORPHISM GROUPS)
3<->order :<->text766.htm<->order :: Order Functions (AUTOMORPHISM GROUPS)
5<-># :: Order(A) <->text766.htm#8776<-># :: Order(A) : GrpAuto -&gt; RngIntElt
5<->Order(A) <->text766.htm#8776<->Order(A) : GrpAuto -&gt; RngIntElt
5<->FactoredOrder(A) <->text766.htm#8777<->FactoredOrder(A) : GrpAuto -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->OuterOrder(A) <->text766.htm#8778<->OuterOrder(A) : GrpAuto -&gt; RngIntElt
4<->GrpAuto_autogp-order (Example H72E2)<->text766.htm#8779<->GrpAuto_autogp-order (Example H72E2)
4<->Example-autogp-order :<->text766.htm#8779<->Example-autogp-order :: GrpAuto_autogp-order (Example H72E2)
3<->order :<->text766.htm<->order :: Order Functions (AUTOMORPHISM GROUPS)
3<->representations :<->text767.htm<->representations :: Representations of an Automorphism Group (AUTOMORPHISM GROUPS)
5<->PermutationRepresentation(A) <->text767.htm#8781<->PermutationRepresentation(A) : GrpAuto -&gt; Map, GrpPerm, SetIndx
5<->PermutationGroup(A) <->text767.htm#8782<->PermutationGroup(A) : GrpAuto -&gt; GrpPerm
5<->PermutationSupport(A) <->text767.htm#8783<->PermutationSupport(A) : GrpAuto -&gt; SetIndx
5<->PCGroupAutomorphismGroupPGroup(A) <->text767.htm#8784<->PCGroupAutomorphismGroupPGroup(A) : GrpAuto -&gt; BoolElt, Map, GrpPC
5<->FPGroup(A) <->text767.htm#8785<->FPGroup(A) : GrpAuto -&gt; GrpFP, Map
5<->OuterFPGroup(A) <->text767.htm#8786<->OuterFPGroup(A) : GrpAuto -&gt; GrpFP, Map
4<->GrpAuto_autogp-rep1 (Example H72E3)<->text767.htm#8787<->GrpAuto_autogp-rep1 (Example H72E3)
4<->Example-autogp-rep1 :<->text767.htm#8787<->Example-autogp-rep1 :: GrpAuto_autogp-rep1 (Example H72E3)
4<->GrpAuto_autogp-rep2 (Example H72E4)<->text767.htm#8788<->GrpAuto_autogp-rep2 (Example H72E4)
4<->Example-autogp-rep2 :<->text767.htm#8788<->Example-autogp-rep2 :: GrpAuto_autogp-rep2 (Example H72E4)
3<->representations :<->text767.htm<->representations :: Representations of an Automorphism Group (AUTOMORPHISM GROUPS)
3<->element :<->text768.htm<->element :: Automorphisms (AUTOMORPHISM GROUPS)
5<->A . i <->text768.htm#8790<->A . i : GrpAuto, RngIntElt -&gt; GrpAutoElt
5<->Identity(A) <->text768.htm#8791<->Identity(A) : GrpAuto -&gt; GrpAutoElt
5<->! :: Identity(A) <->text768.htm#8791<->! :: Identity(A) : GrpAuto -&gt; GrpAutoElt
5<->Identity(A) <->text768.htm#8791<->Identity(A) : GrpAuto -&gt; GrpAutoElt
5<->A ! f <->text768.htm#8792<->A ! f : GrpAuto, Map -&gt; GrpAutoElt
5<->Order(f) <->text768.htm#8793<->Order(f) : GrpAutoElt -&gt; RngIntElt
5<->f * g <->text768.htm#8794<->f * g : GrpAutoElt, GrpAutoElt -&gt; GrpAutoElt
5<->f ^ n <->text768.htm#8795<->f ^ n : GrpAutoElt, RngIntElt -&gt; GrpAutoElt
5<->(,,) :: (g1, ..., gr) <->text768.htm#8796<->(,,) :: (g<sub>1</sub>, ..., g<sub>r</sub>) : GrpAutoElt, ..., GrpAutoElt -&gt; GrpAutoElt
5<->g eq h <->text768.htm#8797<->g eq h : GrpAutoElt, GrpAutoElt -&gt; BoolElt
5<->g ne h <->text768.htm#8798<->g ne h : GrpAutoElt, GrpAutoElt -&gt; BoolElt
5<->IsInner(f) <->text768.htm#8799<->IsInner(f) : GrpAutoElt -&gt; BoolElt, GrpElt
4<->GrpAuto_autogp-elts (Example H72E5)<->text768.htm#8800<->GrpAuto_autogp-elts (Example H72E5)
4<->Example-autogp-elts :<->text768.htm#8800<->Example-autogp-elts :: GrpAuto_autogp-elts (Example H72E5)
4<->GrpAuto_characteristic-subgroups (Example H72E6)<->text768.htm#8801<->GrpAuto_characteristic-subgroups (Example H72E6)
4<->Example-characteristic-subgroups :<->text768.htm#8801<->Example-characteristic-subgroups :: GrpAuto_characteristic-subgroups (Example H72E6)
3<->element :<->text768.htm<->element :: Automorphisms (AUTOMORPHISM GROUPS)
3<->attributes :<->text769.htm<->attributes :: Stored Attributes of an Automorphism Group (AUTOMORPHISM GROUPS)
5<->AssertAttribute :: HasAttribute(A, s) <->text769.htm#8803<->AssertAttribute :: HasAttribute(A, s) : GrpAuto, MonStgElt -&gt; BoolElt, .
5<->HasAttribute(A, s) <->text769.htm#8803<->HasAttribute(A, s) : GrpAuto, MonStgElt -&gt; BoolElt, .
4<->GrpAuto_characteristicsubgps (Example H72E7)<->text769.htm#8804<->GrpAuto_characteristicsubgps (Example H72E7)
4<->Example-characteristicsubgps :<->text769.htm#8804<->Example-characteristicsubgps :: GrpAuto_characteristicsubgps (Example H72E7)
4<->GrpAuto_auto-maximals (Example H72E8)<->text769.htm#8805<->GrpAuto_auto-maximals (Example H72E8)
4<->Example-auto-maximals :<->text769.htm#8805<->Example-auto-maximals :: GrpAuto_auto-maximals (Example H72E8)
3<->attributes :<->text769.htm<->attributes :: Stored Attributes of an Automorphism Group (AUTOMORPHISM GROUPS)
3<->holomorphs :<->text770.htm<->holomorphs :: Holomorphs (AUTOMORPHISM GROUPS)
5<->Holomorph(GrpFP, G) <->text770.htm#8807<->Holomorph(GrpFP, G) : Grp -> Cat[GrpFP], GrpFP, HomGrp, HomGrp
5<->Holomorph(G) <->text770.htm#8807<->Holomorph(G) : Grp -&gt; GrpPerm, HomGrp, HomGrp
5<->Holomorph(GrpFP, G, A) <->text770.htm#8808<->Holomorph(GrpFP, G, A) : Cat[GrpFP], Grp, GrpAuto -> GrpFP, HomGrp, HomGrp
5<->Holomorph(G, A) <->text770.htm#8808<->Holomorph(G, A) : Grp, GrpAuto -&gt; GrpPerm, HomGrp, HomGrp
4<->GrpAuto_holomorph (Example H72E9)<->text770.htm#8809<->GrpAuto_holomorph (Example H72E9)
4<->Example-holomorph :<->text770.htm#8809<->Example-holomorph :: GrpAuto_holomorph (Example H72E9)
3<->holomorphs :<->text770.htm<->holomorphs :: Holomorphs (AUTOMORPHISM GROUPS)
3<->grp-auto :<->text762.htm<->grp-auto :: AUTOMORPHISM GROUPS
3<->cohomology :<->text773.htm<->cohomology :: COHOMOLOGY AND EXTENSIONS
3<->intro :<->text774.htm<->intro :: Introduction (COHOMOLOGY AND EXTENSIONS)
3<->creation :<->text775.htm<->creation :: Creation of a Cohomology Module (COHOMOLOGY AND EXTENSIONS)
5<->CohomologyModule(G, M) <->text775.htm#8815<->CohomologyModule(G, M) : GrpPC, ModGrp -> ModCoho
5<->CohomologyModule(G, M) <->text775.htm#8815<->CohomologyModule(G, M) : GrpMat, ModGrp -> ModCoho
5<->CohomologyModule(G, M) <->text775.htm#8815<->CohomologyModule(G, M) : GrpFP, ModGrp -> ModCoho
5<->CohomologyModule(G, M) <->text775.htm#8815<->CohomologyModule(G, M) : GrpPerm, ModGrp -&gt; ModCoho
5<->CohomologyModule(G, Q, T) <->text775.htm#8816<->CohomologyModule(G, Q, T) : GrpPC, SeqEnum, SeqEnum -> ModCoho
5<->CohomologyModule(G, Q, T) <->text775.htm#8816<->CohomologyModule(G, Q, T) : GrpMat, SeqEnum, SeqEnum -> ModCoho
5<->CohomologyModule(G, Q, T) <->text775.htm#8816<->CohomologyModule(G, Q, T) : GrpFP, SeqEnum, SeqEnum -> ModCoho
5<->CohomologyModule(G, Q, T) <->text775.htm#8816<->CohomologyModule(G, Q, T) : GrpPerm, SeqEnum, SeqEnum -&gt; ModCoho
4<->GrpCoh_coho-module1 (Example H73E1)<->text775.htm#8817<->GrpCoh_coho-module1 (Example H73E1)
4<->Example-coho-module1 :<->text775.htm#8817<->Example-coho-module1 :: GrpCoh_coho-module1 (Example H73E1)
5<->CohomologyModule(G, A, M) <->text775.htm#8818<->CohomologyModule(G, A, M) : GrpPerm, GrpAb, Any -&gt; ModCoho
3<->creation :<->text775.htm<->creation :: Creation of a Cohomology Module (COHOMOLOGY AND EXTENSIONS)
3<->structure-invar :<->text776.htm<->structure-invar :: Accessing Properties of the Cohomology Module (COHOMOLOGY AND EXTENSIONS)
5<->Module(CM) <->text776.htm#8820<->Module(CM) : ModCoho -&gt; ModGrp
5<->Invariants(CM) <->text776.htm#8821<->Invariants(CM) : ModCoho -&gt; SeqEnum
5<->Dimension(CM) <->text776.htm#8822<->Dimension(CM) : ModCoho -&gt; RngIntElt
5<->Ring(CM) <->text776.htm#8823<->Ring(CM) : ModCoho -&gt; ModGrp
5<->Group(CM) <->text776.htm#8824<->Group(CM) : ModCoho -&gt; Grp
5<->FPGroup(CM) <->text776.htm#8825<->FPGroup(CM) : ModCoho -&gt; Grp, HomGrp
5<->MatrixOfElement(CM, g) <->text776.htm#8826<->MatrixOfElement(CM, g) : ModCoho, GrpElt -&gt; AlgMatElt
3<->structure-invar :<->text776.htm<->structure-invar :: Accessing Properties of the Cohomology Module (COHOMOLOGY AND EXTENSIONS)
3<->cohomology-groups :<->text777.htm<->cohomology-groups :: Calculating Cohomology (COHOMOLOGY AND EXTENSIONS)
5<->CohomologyGroup(CM, n) <->text777.htm#8828<->CohomologyGroup(CM, n) : ModCoho, RngIntElt -&gt; ModTupRng
5<->CohomologicalDimension(CM, n) <->text777.htm#8829<->CohomologicalDimension(CM, n) : ModCoho, RngIntElt -&gt; RngIntElt
5<->CohomologicalDimension(M, n) <->text777.htm#8830<->CohomologicalDimension(M, n) : ModGrp, n -&gt; RngIntElt
5<->CohomologicalDimensions(M, n) <->text777.htm#8831<->CohomologicalDimensions(M, n) : ModGrp, n -&gt; RngIntElt
5<->CohomologicalDimension(G, M, n) <->text777.htm#8832<->CohomologicalDimension(G, M, n) : GrpPerm, ModRng, RngIntElt -&gt; RngIntElt
4<->GrpCoh_coho-example (Example H73E2)<->text777.htm#8833<->GrpCoh_coho-example (Example H73E2)
4<->Example-coho-example :<->text777.htm#8833<->Example-coho-example :: GrpCoh_coho-example (Example H73E2)
4<->GrpCoh_more-difficult (Example H73E3)<->text777.htm#8834<->GrpCoh_more-difficult (Example H73E3)
4<->Example-more-difficult :<->text777.htm#8834<->Example-more-difficult :: GrpCoh_more-difficult (Example H73E3)
3<->cohomology-groups :<->text777.htm<->cohomology-groups :: Calculating Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->cocycles :<->text778.htm<->cocycles :: Cocycles (COHOMOLOGY AND EXTENSIONS)
5<->ZeroCocycle(CM, s) <->text778.htm#8836<->ZeroCocycle(CM, s) : ModCoho, ModTupRngElt -> UserProgram
5<->ZeroCocycle(CM, s) <->text778.htm#8836<->ZeroCocycle(CM, s) : ModCoho, SeqEnum -&gt; UserProgram
5<->IdentifyZeroCocycle(CM, s) <->text778.htm#8837<->IdentifyZeroCocycle(CM, s) : ModCoho, UserProgram -> ModTupRngElt
5<->IdentifyZeroCocycle(CM, s) <->text778.htm#8837<->IdentifyZeroCocycle(CM, s) : ModCoho, UserProgram -&gt; ModTupRngElt
5<->OneCocycle(CM, s) <->text778.htm#8838<->OneCocycle(CM, s) : ModCoho, ModTupRngElt -> UserProgram
5<->OneCocycle(CM, s) <->text778.htm#8838<->OneCocycle(CM, s) : ModCoho, SeqEnum -&gt; UserProgram
5<->IdentifyOneCocycle(CM, s) <->text778.htm#8839<->IdentifyOneCocycle(CM, s) : ModCoho, UserProgram -&gt; ModTupRngElt
5<->IsOneCoboundary(CM, s) <->text778.htm#8840<->IsOneCoboundary(CM, s) : ModCoho, UserProgram -&gt; BoolElt, UserProgram
5<->TwoCocycle(CM, s) <->text778.htm#8841<->TwoCocycle(CM, s) : ModCoho, ModTupRngElt -> UserProgram
5<->TwoCocycle(CM, s) <->text778.htm#8841<->TwoCocycle(CM, s) : ModCoho, SeqEnum -&gt; UserProgram
5<->IdentifyTwoCocycle(CM, s) <->text778.htm#8842<->IdentifyTwoCocycle(CM, s) : ModCoho, UserProgram -&gt; ModTupRngElt
5<->IsTwoCoboundary(CM, s) <->text778.htm#8843<->IsTwoCoboundary(CM, s) : ModCoho, UserProgram -&gt; BoolElt, UserProgram
4<->GrpCoh_cocycles (Example H73E4)<->text778.htm#8844<->GrpCoh_cocycles (Example H73E4)
4<->Example-cocycles :<->text778.htm#8844<->Example-cocycles :: GrpCoh_cocycles (Example H73E4)
3<->cocycles :<->text778.htm<->cocycles :: Cocycles (COHOMOLOGY AND EXTENSIONS)
3<->restriction :<->text779.htm<->restriction :: The Restriction to a Subgroup (COHOMOLOGY AND EXTENSIONS)
5<->Restriction(CM, H) <->text779.htm#8846<->Restriction(CM, H) : ModCoho, Grp -&gt; ModCoho
4<->GrpCoh_restriction (Example H73E5)<->text779.htm#8847<->GrpCoh_restriction (Example H73E5)
4<->Example-restriction :<->text779.htm#8847<->Example-restriction :: GrpCoh_restriction (Example H73E5)
3<->restriction :<->text779.htm<->restriction :: The Restriction to a Subgroup (COHOMOLOGY AND EXTENSIONS)
3<->other-operations :<->text780.htm<->other-operations :: Other Operations on Cohomology Modules (COHOMOLOGY AND EXTENSIONS)
5<->CorestrictCocycle :: CorestrictionMapImage(G, C, c, i) <->text780.htm#8849<->CorestrictCocycle :: CorestrictionMapImage(G, C, c, i) : Grp, ModCoho, UserProgram, RngIntElt -&gt; UserProgram
5<->CorestrictionMapImage(G, C, c, i) <->text780.htm#8849<->CorestrictionMapImage(G, C, c, i) : Grp, ModCoho, UserProgram, RngIntElt -&gt; UserProgram
5<->LiftCocycle :: InflationMapImage(M, c) <->text780.htm#8850<->LiftCocycle :: InflationMapImage(M, c) : Map, UserProgram -&gt; UserProgram
5<->InflationMapImage(M, c) <->text780.htm#8850<->InflationMapImage(M, c) : Map, UserProgram -&gt; UserProgram
5<->CoboundaryMapImage(M, i, c) <->text780.htm#8851<->CoboundaryMapImage(M, i, c) : ModCoho, RngIntElt, UserProgram -&gt; UserProgram
3<->other-operations :<->text780.htm<->other-operations :: Other Operations on Cohomology Modules (COHOMOLOGY AND EXTENSIONS)
3<->extensions :<->text781.htm<->extensions :: Constructing Extensions (COHOMOLOGY AND EXTENSIONS)
5<->Extension(CM, s) <->text781.htm#8853<->Extension(CM, s) : ModCoho, ModTupRngElt -> Grp, HomGrp, Map
5<->Extension(CM, s) <->text781.htm#8853<->Extension(CM, s) : ModCoho, SeqEnum -&gt; Grp, HomGrp, Map
5<->SplitExtension(CM) <->text781.htm#8854<->SplitExtension(CM) : ModCoho -&gt; Grp, HomGrp, Map
5<->pMultiplicator(G, p) <->text781.htm#8855<->pMultiplicator(G, p) : GrpPerm, RngIntElt -&gt; [ RngIntElt ]
5<->pCover(G, F, p) <->text781.htm#8856<->pCover(G, F, p) : GrpPerm, GrpFP, RngIntElt -&gt; GrpFP
4<->GrpCoh_straightforward (Example H73E6)<->text781.htm#8857<->GrpCoh_straightforward (Example H73E6)
4<->Example-straightforward :<->text781.htm#8857<->Example-straightforward :: GrpCoh_straightforward (Example H73E6)
4<->GrpCoh_module-integers (Example H73E7)<->text781.htm#8858<->GrpCoh_module-integers (Example H73E7)
4<->Example-module-integers :<->text781.htm#8858<->Example-module-integers :: GrpCoh_module-integers (Example H73E7)
3<->extensions :<->text781.htm<->extensions :: Constructing Extensions (COHOMOLOGY AND EXTENSIONS)
3<->extensions :<->text782.htm<->extensions :: Constructing Distinct Extensions (COHOMOLOGY AND EXTENSIONS)
5<->DistinctExtensions(CM) <->text782.htm#8860<->DistinctExtensions(CM) : ModCoho -&gt; SeqEnum
4<->GrpCoh_distinct-extensions (Example H73E8)<->text782.htm#8861<->GrpCoh_distinct-extensions (Example H73E8)
4<->Example-distinct-extensions :<->text782.htm#8861<->Example-distinct-extensions :: GrpCoh_distinct-extensions (Example H73E8)
5<->ExtensionsOfElementaryAbelianGroup(p, d, G) <->text782.htm#8862<->ExtensionsOfElementaryAbelianGroup(p, d, G) : RngIntElt, RngIntElt, GrpPerm -&gt; SeqEnum
4<->GrpCoh_extensions-abelian (Example H73E9)<->text782.htm#8863<->GrpCoh_extensions-abelian (Example H73E9)
4<->Example-extensions-abelian :<->text782.htm#8863<->Example-extensions-abelian :: GrpCoh_extensions-abelian (Example H73E9)
5<->ExtensionsOfSolubleGroup(H, G) <->text782.htm#8864<->ExtensionsOfSolubleGroup(H, G) : GrpPerm, GrpPerm -&gt; SeqEnum
4<->GrpCoh_extensions-soluble (Example H73E10)<->text782.htm#8865<->GrpCoh_extensions-soluble (Example H73E10)
4<->Example-extensions-soluble :<->text782.htm#8865<->Example-extensions-soluble :: GrpCoh_extensions-soluble (Example H73E10)
4<->GrpCoh_distinct-extensions (Example H73E11)<->text782.htm#8866<->GrpCoh_distinct-extensions (Example H73E11)
4<->Example-distinct-extensions :<->text782.htm#8866<->Example-distinct-extensions :: GrpCoh_distinct-extensions (Example H73E11)
5<->IsExtensionOf(G) <->text782.htm#8867<->IsExtensionOf(G) : GrpPerm -&gt; [], 
5<->IsExtensionOf(L) <->text782.htm#8868<->IsExtensionOf(L) : [GrpPerm] -&gt; [], []
3<->extensions :<->text782.htm<->extensions :: Constructing Distinct Extensions (COHOMOLOGY AND EXTENSIONS)
3<->cohomology :<->text783.htm<->cohomology :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->Gamma-group@$\Gamma$-group :<->text783.htm<->Gamma-group@$\Gamma$-group :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->$1$-cocycle :<->text783.htm<->$1$-cocycle :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->cocycle!$1$-cocycle :<->text783.htm<->cocycle!$1$-cocycle :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->cohomologous!$1$-cocycles :<->text783.htm<->cohomologous!$1$-cocycles :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->pointed set :<->text783.htm<->pointed set :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->trivial $1$-cocycle :<->text783.htm<->trivial $1$-cocycle :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->group-cohomology :<->text783.htm<->group-cohomology :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->gamma-groups :<->text783.htm#8870<->gamma-groups :: Creation of Gamma-groups (COHOMOLOGY AND EXTENSIONS)
5<->GammaGroup(Gamma, A, action) <->text783.htm#8871<->GammaGroup(Gamma, A, action) : Grp, Grp, Map[Grp, GrpAuto] -&gt; GGrp
5<->InducedGammaGroup(A, B) <->text783.htm#8872<->InducedGammaGroup(A, B) : GGrp, Grp -&gt; GGrp
4<->GrpCoh_createGGrp (Example H73E12)<->text783.htm#8873<->GrpCoh_createGGrp (Example H73E12)
4<->Example-createGGrp :<->text783.htm#8873<->Example-createGGrp :: GrpCoh_createGGrp (Example H73E12)
5<->IsNormalised(B, action) <->text783.htm#8874<->IsNormalised(B, action) : Grp, Map -&gt; BoolElt
5<->IsInduced(AmodB) <->text783.htm#8875<->IsInduced(AmodB) : GGrp -&gt; BoolElt, GGrp, GGrp, Map, Map
3<->gamma-groups :<->text783.htm#8870<->gamma-groups :: Creation of Gamma-groups (COHOMOLOGY AND EXTENSIONS)
3<->access :<->text783.htm#8876<->access :: Accessing Information (COHOMOLOGY AND EXTENSIONS)
5<->Group(A) <->text783.htm#8877<->Group(A) : GGrp -&gt; Grp
5<->GammaAction(A) <->text783.htm#8878<->GammaAction(A) : GGrp -&gt; Map[Grp, GrpAuto]
5<->ActingGroup(A) <->text783.htm#8879<->ActingGroup(A) : GGrp -&gt; Grp
3<->access :<->text783.htm#8876<->access :: Accessing Information (COHOMOLOGY AND EXTENSIONS)
3<->one-cocycles :<->text783.htm#8880<->one-cocycles :: One Cocycles (COHOMOLOGY AND EXTENSIONS)
5<->OneCocycle(A, alpha) <->text783.htm#8881<->OneCocycle(A, alpha) : GGrp, Map[Grp,Grp] -> OneCoC
5<->OneCocycle(A, imgs) <->text783.htm#8881<->OneCocycle(A, imgs) : GGrp, SeqEnum[GrpElt] -&gt; OneCoC
5<->TrivialOneCocycle(A) <->text783.htm#8882<->TrivialOneCocycle(A) : GGrp -&gt; OneCoC
5<->IsOneCocycle(A, alpha) <->text783.htm#8883<->IsOneCocycle(A, alpha) : GGrp, Map[Grp,Grp] -> BoolElt, OneCoC
5<->IsOneCocycle(A, imgs) <->text783.htm#8883<->IsOneCocycle(A, imgs) : GGrp, SeqEnum[GrpElt] -&gt; BoolElt, OneCoC
5<->AreCohomologous(alpha, beta) <->text783.htm#8884<->AreCohomologous(alpha, beta) : OneCoC, OneCoC -&gt; BoolElt, GrpElt
5<->CohomologyClass(alpha) <->text783.htm#8885<->CohomologyClass(alpha) : OneCoC -&gt; SetIndx[OneCoC]
5<->InducedOneCocycle(A, B, alpha) <->text783.htm#8886<->InducedOneCocycle(A, B, alpha) : GGrp, Grp, OneCoC -> OneCoC
5<->InducedOneCocycle(AmodB, alpha) <->text783.htm#8886<->InducedOneCocycle(AmodB, alpha) : GGrp, OneCoC -&gt; OneCoC
5<->ExtendedOneCocycle(alpha) <->text783.htm#8887<->ExtendedOneCocycle(alpha) : OneCoC -&gt; SetEnum[OneCoC]
5<->ExtendedCohomologyClass(alpha) <->text783.htm#8888<->ExtendedCohomologyClass(alpha) : OneCoC -&gt; SetEnum[OneCoC]
5<->GammaGroup(alpha) <->text783.htm#8889<->GammaGroup(alpha) : OneCoC -&gt; GGrp
5<->CocycleMap(alpha) <->text783.htm#8890<->CocycleMap(alpha) : OneCoC -&gt; Map
3<->one-cocycles :<->text783.htm#8880<->one-cocycles :: One Cocycles (COHOMOLOGY AND EXTENSIONS)
3<->one-cocycles :<->text783.htm#8891<->one-cocycles :: Group Cohomology (COHOMOLOGY AND EXTENSIONS)
5<->Cohomology(A, n) <->text783.htm#8892<->Cohomology(A, n) : GGrp, RngIntElt -&gt; SetEnum[OneCoC]
5<->OneCohomology(A) <->text783.htm#8893<->OneCohomology(A) : GGrp -&gt; SetEnum[OneCoC]
5<->TwistedGroup(A, alpha) <->text783.htm#8894<->TwistedGroup(A, alpha) : GGrp, OneCoC -&gt; GGrp
4<->GrpCoh_large example (Example H73E13)<->text783.htm#8895<->GrpCoh_large example (Example H73E13)
4<->Example-large example :<->text783.htm#8895<->Example-large example :: GrpCoh_large example (Example H73E13)
3<->one-cocycles :<->text783.htm#8891<->one-cocycles :: Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->group-cohomology :<->text783.htm<->group-cohomology :: Finite Group Cohomology (COHOMOLOGY AND EXTENSIONS)
3<->cohomology :<->text773.htm<->cohomology :: COHOMOLOGY AND EXTENSIONS
3<->abelian :<->text786.htm<->abelian :: ABELIAN GROUPS
3<->GrpAb :<->text787.htm<->GrpAb :: Introduction (ABELIAN GROUPS)
3<->GrpAbGen :<->text787.htm<->GrpAbGen :: Introduction (ABELIAN GROUPS)
3<->introduction :<->text787.htm<->introduction :: Introduction (ABELIAN GROUPS)
3<->creation :<->text788.htm<->creation :: Construction of a Finitely Presented Abelian Group and its Elements (ABELIAN GROUPS)
3<->free :<->text788.htm#8901<->free :: The Free Abelian Group (ABELIAN GROUPS)
5<->FreeAbelianGroup(n) <->text788.htm#8902<->FreeAbelianGroup(n) : RngIntElt -&gt; GrpAb
4<->GrpAb_FreeAbelianGroup (Example H74E1)<->text788.htm#8903<->GrpAb_FreeAbelianGroup (Example H74E1)
4<->Example-FreeAbelianGroup :<->text788.htm#8903<->Example-FreeAbelianGroup :: GrpAb_FreeAbelianGroup (Example H74E1)
3<->free :<->text788.htm#8901<->free :: The Free Abelian Group (ABELIAN GROUPS)
3<->relation :<->text788.htm#8904<->relation :: Relations (ABELIAN GROUPS)
5<->w1 = w2 <->text788.htm#8905<->w<sub>1</sub> = w<sub>2</sub> : GrpAbElt, GrpAbElt -&gt; Rel
5<->LHS :: r[1] <->text788.htm#8906<->LHS :: r[1] : GrpAbRel, RngIntElt -&gt; GrpAbElt
5<->r[1] <->text788.htm#8906<->r[1] : GrpAbRel, RngIntElt -&gt; GrpAbElt
5<->RHS :: r[2] <->text788.htm#8907<->RHS :: r[2] : GrpAbRel, RngIntElt -&gt; GrpAbElt
5<->r[2] <->text788.htm#8907<->r[2] : GrpAbRel, RngIntElt -&gt; GrpAbElt
5<->Parent(r) <->text788.htm#8908<->Parent(r) : RelElt -&gt; GrpAb
4<->GrpAb_Relations (Example H74E2)<->text788.htm#8909<->GrpAb_Relations (Example H74E2)
4<->Example-Relations :<->text788.htm#8909<->Example-Relations :: GrpAb_Relations (Example H74E2)
3<->relation :<->text788.htm#8904<->relation :: Relations (ABELIAN GROUPS)
3<->presentation :<->text788.htm#8910<->presentation :: Specification of a Presentation (ABELIAN GROUPS)
5<->AbelianGroup< X | R > <->text788.htm#8911<->AbelianGroup&lt; X | R &gt; : List(Var), List(GrpAbRel) -&gt; GrpAb, Hom(GrpAb)
4<->GrpAb_AbelianGroup (Example H74E3)<->text788.htm#8912<->GrpAb_AbelianGroup (Example H74E3)
4<->Example-AbelianGroup :<->text788.htm#8912<->Example-AbelianGroup :: GrpAb_AbelianGroup (Example H74E3)
5<->AbelianGroup([n1,...,nr])<->text788.htm#8913<->AbelianGroup([n<sub>1</sub>,...,n<sub>r</sub>]): [ RngIntElt ] -&gt; GrpAb
4<->GrpAb_AbelianGroup2 (Example H74E4)<->text788.htm#8914<->GrpAb_AbelianGroup2 (Example H74E4)
4<->Example-AbelianGroup2 :<->text788.htm#8914<->Example-AbelianGroup2 :: GrpAb_AbelianGroup2 (Example H74E4)
3<->presentation :<->text788.htm#8910<->presentation :: Specification of a Presentation (ABELIAN GROUPS)
3<->access :<->text788.htm#8915<->access :: Accessing the Defining Generators  and Relations (ABELIAN GROUPS)
5<->A . i <->text788.htm#8916<->A . i : GrpAb, RngIntElt -&gt; GrpAbElt
5<->Generators(A) <->text788.htm#8917<->Generators(A) : GrpAb -&gt; { GrpAbElt }
5<->Ngens :: NumberOfGenerators(A) <->text788.htm#8918<->Ngens :: NumberOfGenerators(A) : GrpAb -&gt; RngIntElt
5<->NumberOfGenerators(A) <->text788.htm#8918<->NumberOfGenerators(A) : GrpAb -&gt; RngIntElt
5<->Parent(u) <->text788.htm#8919<->Parent(u) : GrpAbElt -&gt; GrpAb
5<->Relations(A) <->text788.htm#8920<->Relations(A) : GrpAb -&gt; [ Rel ]
5<->RelationMatrix(A) <->text788.htm#8921<->RelationMatrix(A) : GrpAb -&gt; Mtrx
3<->access :<->text788.htm#8915<->access :: Accessing the Defining Generators  and Relations (ABELIAN GROUPS)
3<->creation :<->text788.htm<->creation :: Construction of a Finitely Presented Abelian Group and its Elements (ABELIAN GROUPS)
3<->generic-abelian :<->text789.htm<->generic-abelian :: Construction of a Generic  Abelian Group (ABELIAN GROUPS)
3<->generic-specification :<->text789.htm#8923<->generic-specification :: Specification of a Generic  Abelian Group (ABELIAN GROUPS)
5<->GenericAbelianGroup(U: parameters) <->text789.htm#8924<->GenericAbelianGroup(U: parameters) : . -&gt; GrpAbGen
4<->GrpAb_Creation (Example H74E5)<->text789.htm#8925<->GrpAb_Creation (Example H74E5)
4<->Example-Creation :<->text789.htm#8925<->Example-Creation :: GrpAb_Creation (Example H74E5)
3<->generic-specification :<->text789.htm#8923<->generic-specification :: Specification of a Generic  Abelian Group (ABELIAN GROUPS)
3<->generic-access :<->text789.htm#8926<->generic-access :: Accessing Generators (ABELIAN GROUPS)
5<->Universe(A) <->text789.htm#8927<->Universe(A) : GrpAbGen -&gt;
5<->A . i <->text789.htm#8928<->A . i : GrpAbGen, RngIntElt -&gt; GrpAbGenElt
5<->Generators(A) <->text789.htm#8929<->Generators(A) : GrpAbGen -&gt; [ GrpAbGenElt ]
5<->UserGenerators(A) <->text789.htm#8930<->UserGenerators(A) : GrpAbGen -&gt; [ GrpAbGenElt ]
5<->Ngens :: NumberOfGenerators(A) <->text789.htm#8931<->Ngens :: NumberOfGenerators(A) : GrpAbGen -&gt; RngIntElt
5<->NumberOfGenerators(A) <->text789.htm#8931<->NumberOfGenerators(A) : GrpAbGen -&gt; RngIntElt
3<->generic-access :<->text789.htm#8926<->generic-access :: Accessing Generators (ABELIAN GROUPS)
3<->structure :<->text789.htm#8932<->structure :: Computing Abelian Group Structure (ABELIAN GROUPS)
5<->AbelianGroup(A: parameters) <->text789.htm#8933<->AbelianGroup(A: parameters) : GrpAbGen -&gt; GrpAb, Map
4<->GrpAb_GroupComputation (Example H74E6)<->text789.htm#8934<->GrpAb_GroupComputation (Example H74E6)
4<->Example-GroupComputation :<->text789.htm#8934<->Example-GroupComputation :: GrpAb_GroupComputation (Example H74E6)
3<->structure :<->text789.htm#8932<->structure :: Computing Abelian Group Structure (ABELIAN GROUPS)
3<->generic-abelian :<->text789.htm<->generic-abelian :: Construction of a Generic  Abelian Group (ABELIAN GROUPS)
3<->elements :<->text790.htm<->elements :: Elements (ABELIAN GROUPS)
3<->element-creation :<->text790.htm#8936<->element-creation :: Construction of Elements (ABELIAN GROUPS)
5<->A ! [a$_1$, ... ,a$_n$] <->text790.htm#8937<->A ! [a$_1$, ... ,a$_n$] : GrpAbGen, [RngIntElt] -> GrpAbGenElt
5<->A ! [a1, ... ,an] <->text790.htm#8937<->A ! [a<sub>1</sub>, ... ,a<sub>n</sub>] : GrpAb, [RngIntElt] -&gt; GrpAbElt
5<->A ! e <->text790.htm#8938<->A ! e : GrpAbGen, Elt -&gt; GrpAbGenElt
5<->A ! g <->text790.htm#8939<->A ! g : GrpAbGen, GrpAbGenElt -&gt; GrpAbGenElt
5<->A ! n <->text790.htm#8940<->A ! n : GrpAb, RngIntElt -&gt; GrpAbElt
5<->Random(A) <->text790.htm#8941<->Random(A) : GrpAbGen -&gt; GrpAbGenElt
5<->Identity(A) <->text790.htm#8942<->Identity(A) : GrpAb -&gt; GrpAbElt
5<->! :: Identity(A) <->text790.htm#8942<->! :: Identity(A) : GrpAb -&gt; GrpAbElt
5<->Identity(A) <->text790.htm#8942<->Identity(A) : GrpAb -&gt; GrpAbElt
3<->element-creation :<->text790.htm#8936<->element-creation :: Construction of Elements (ABELIAN GROUPS)
3<->representation :<->text790.htm#8943<->representation :: Representation of an Element (ABELIAN GROUPS)
5<->ElementToSequence :: Representation(g) <->text790.htm#8944<->ElementToSequence :: Representation(g) : GrpAbGenElt -&gt; [RngIntElt]
5<->Eltseq :: Representation(g) <->text790.htm#8944<->Eltseq :: Representation(g) : GrpAbGenElt -&gt; [RngIntElt]
5<->Representation(g) <->text790.htm#8944<->Representation(g) : GrpAbGenElt -&gt; [RngIntElt]
5<->UserRepresentation(g) <->text790.htm#8945<->UserRepresentation(g) : GrpAbGenElt -&gt; [RngIntElt]
5<->Representation(S, g) <->text790.htm#8946<->Representation(S, g) : SeqEnum, GrpAbGenElt -&gt; [RngIntElt], RngIntElt
4<->GrpAb_ElementCreationAndRep (Example H74E7)<->text790.htm#8947<->GrpAb_ElementCreationAndRep (Example H74E7)
4<->Example-ElementCreationAndRep :<->text790.htm#8947<->Example-ElementCreationAndRep :: GrpAb_ElementCreationAndRep (Example H74E7)
3<->representation :<->text790.htm#8943<->representation :: Representation of an Element (ABELIAN GROUPS)
3<->operation :<->text790.htm#8948<->operation :: Arithmetic with Elements (ABELIAN GROUPS)
5<->u + v <->text790.htm#8949<->u + v : GrpAbElt, GrpAbElt -&gt; GrpAbElt
5<->- u <->text790.htm#8950<->- u : GrpAbElt -&gt; GrpAbElt
5<->u - v <->text790.htm#8951<->u - v : GrpAbElt, GrpAbElt -&gt; GrpAbElt
5<->u * m <->text790.htm#8952<->u * m : GrpAb, RngIntElt -> GrpAbElt
5<->m * u <->text790.htm#8952<->m * u : RngIntElt, GrpAbElt-&gt; GrpAbElt
3<->operation :<->text790.htm#8948<->operation :: Arithmetic with Elements (ABELIAN GROUPS)
3<->elements :<->text790.htm<->elements :: Elements (ABELIAN GROUPS)
3<->subgroup-quotient :<->text791.htm<->subgroup-quotient :: Construction of Subgroups and  Quotient Groups (ABELIAN GROUPS)
3<->subgroup :<->text791.htm#8954<->subgroup :: Construction of Subgroups (ABELIAN GROUPS)
5<->sub<A | L> <->text791.htm#8955<->sub&lt;A | L&gt; : GrpAb, List -&gt; GrpAb, Map
4<->GrpAb_SubgroupCreation (Example H74E8)<->text791.htm#8956<->GrpAb_SubgroupCreation (Example H74E8)
4<->Example-SubgroupCreation :<->text791.htm#8956<->Example-SubgroupCreation :: GrpAb_SubgroupCreation (Example H74E8)
5<->sub<A | L: parameters> <->text791.htm#8957<->sub&lt;A | L: parameters&gt; : GrpAbGen, List -&gt; GrpAbGen
4<->GrpAb_GenericSubgroupCreation (Example H74E9)<->text791.htm#8958<->GrpAb_GenericSubgroupCreation (Example H74E9)
4<->Example-GenericSubgroupCreation :<->text791.htm#8958<->Example-GenericSubgroupCreation :: GrpAb_GenericSubgroupCreation (Example H74E9)
3<->subgroup :<->text791.htm#8954<->subgroup :: Construction of Subgroups (ABELIAN GROUPS)
3<->quotient :<->text791.htm#8959<->quotient :: Construction of Quotient Groups (ABELIAN GROUPS)
5<->quo<F | R> <->text791.htm#8960<->quo&lt;F | R&gt; : GrpAb, List -&gt; GrpAb, Hom(GrpAb)
5<->A / B <->text791.htm#8961<->A / B : GrpAb, GrpAb -&gt; GrpAb
3<->quotient :<->text791.htm#8959<->quotient :: Construction of Quotient Groups (ABELIAN GROUPS)
3<->subgroup-quotient :<->text791.htm<->subgroup-quotient :: Construction of Subgroups and  Quotient Groups (ABELIAN GROUPS)
3<->standard-construction :<->text792.htm<->standard-construction :: Standard Constructions and  Conversions (ABELIAN GROUPS)
5<->AbelianGroup(Q) <->text792.htm#8963<->AbelianGroup(Q) : [ RngIntElt ] -> GrpAb
5<->AbelianGroup(GrpAb, Q) <->text792.htm#8963<->AbelianGroup(GrpAb, Q) : Cat, [ RngIntElt ] -&gt; GrpAb
5<->AbelianGroup(G) <->text792.htm#8964<->AbelianGroup(G) : Grp -&gt; GrpAb, Hom
5<->AbelianQuotient(G) <->text792.htm#8965<->AbelianQuotient(G) : Grp -&gt; GrpAb, Hom
5<->DirectSum(A, B) <->text792.htm#8966<->DirectSum(A, B) : GrpAb, GrpAb -&gt; GrpAb
5<->PCGroup(A) <->text792.htm#8967<->PCGroup(A) : GrpAb -&gt; GrpPC, Hom(Grp)
5<->PermutationGroup(A) <->text792.htm#8968<->PermutationGroup(A) : GrpAb -&gt; GrpPerm, Hom(Grp)
5<->FPGroup(A) <->text792.htm#8969<->FPGroup(A) : GrpAb -&gt; GrpFP, Hom(Grp)
5<->DerivedSubgroup :: CommutatorSubgroup(G) <->text792.htm#8970<->DerivedSubgroup :: CommutatorSubgroup(G) : GrpAb -&gt; GrpAb
5<->DerivedGroup :: CommutatorSubgroup(G) <->text792.htm#8970<->DerivedGroup :: CommutatorSubgroup(G) : GrpAb -&gt; GrpAb
5<->CommutatorSubgroup(G) <->text792.htm#8970<->CommutatorSubgroup(G) : GrpAb -&gt; GrpAb
5<->CommutatorSubgroup(G, H, K) <->text792.htm#8971<->CommutatorSubgroup(G, H, K) : GrpAb, GrpAb, GrpAb -> GrpAb
5<->CommutatorSubgroup(H, K) <->text792.htm#8971<->CommutatorSubgroup(H, K) : GrpAb, GrpAb -&gt; GrpAb
5<->Centraliser :: Centralizer(G, a) <->text792.htm#8972<->Centraliser :: Centralizer(G, a) : GrpAb, GrpAbElt -&gt; GrpAb
5<->Centralizer(G, a) <->text792.htm#8972<->Centralizer(G, a) : GrpAb, GrpAbElt -&gt; GrpAb
5<->Core(G, H) <->text792.htm#8973<->Core(G, H) : GrpAb, GrpAb -&gt; GrpAb
5<->Center :: Centre(G) <->text792.htm#8974<->Center :: Centre(G) : GrpAb -&gt; GrpAb
5<->Centre(G) <->text792.htm#8974<->Centre(G) : GrpAb -&gt; GrpAb
5<->FittingSubgroup :: FittingGroup(G) <->text792.htm#8975<->FittingSubgroup :: FittingGroup(G) : GrpAb -&gt; GrpAb
5<->FittingGroup(G) <->text792.htm#8975<->FittingGroup(G) : GrpAb -&gt; GrpAb
5<->Hypercenter :: Hypercentre(G) <->text792.htm#8976<->Hypercenter :: Hypercentre(G) : GrpAb -&gt; GrpAb
5<->Hypercentre(G) <->text792.htm#8976<->Hypercentre(G) : GrpAb -&gt; GrpAb
3<->standard-construction :<->text792.htm<->standard-construction :: Standard Constructions and  Conversions (ABELIAN GROUPS)
3<->operation-element :<->text793.htm<->operation-element :: Operations on Elements (ABELIAN GROUPS)
3<->order :<->text793.htm#8978<->order :: Order of an Element (ABELIAN GROUPS)
5<->Order(x) <->text793.htm#8979<->Order(x) : GrpAbElt -&gt; RngIntElt
4<->GrpAb_DiscreteLog (Example H74E10)<->text793.htm#8980<->GrpAb_DiscreteLog (Example H74E10)
4<->Example-DiscreteLog :<->text793.htm#8980<->Example-DiscreteLog :: GrpAb_DiscreteLog (Example H74E10)
5<->Order(g: parameters) <->text793.htm#8981<->Order(g: parameters) : GrpAbGenElt -&gt; RngIntElt
5<->Order(g, l, u: parameters) <->text793.htm#8982<->Order(g, l, u: parameters) : GrpAbGenElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Order(g, l, u, n, m: parameters) <->text793.htm#8983<->Order(g, l, u, n, m: parameters) : GrpAbGenElt, RngIntElt, RngIntElt ,RngIntElt, RngIntElt -&gt; RngIntElt
3<->order :<->text793.htm#8978<->order :: Order of an Element (ABELIAN GROUPS)
3<->operation-element :<->text793.htm#8984<->operation-element :: Discrete Logarithm (ABELIAN GROUPS)
5<->Log(g, d: parameters) <->text793.htm#8985<->Log(g, d: parameters) : GrpAbGenElt, GrpAbGenElt -&gt; RngIntElt
4<->GrpAb_DiscreteLog (Example H74E11)<->text793.htm#8986<->GrpAb_DiscreteLog (Example H74E11)
4<->Example-DiscreteLog :<->text793.htm#8986<->Example-DiscreteLog :: GrpAb_DiscreteLog (Example H74E11)
3<->operation-element :<->text793.htm#8984<->operation-element :: Discrete Logarithm (ABELIAN GROUPS)
3<->Boolean :<->text793.htm#8987<->Boolean :: Equality and Comparison (ABELIAN GROUPS)
5<->u eq v <->text793.htm#8988<->u eq v : GrpAbElt, GrpAbElt -&gt; BoolElt
5<->u ne v <->text793.htm#8989<->u ne v : GrpAbElt, GrpAbElt -&gt; BoolElt
5<->IsIdentity(u) <->text793.htm#8990<->IsIdentity(u) : GrpAbElt -&gt; BoolElt
3<->Boolean :<->text793.htm#8987<->Boolean :: Equality and Comparison (ABELIAN GROUPS)
3<->operation-element :<->text793.htm<->operation-element :: Operations on Elements (ABELIAN GROUPS)
3<->invariant :<->text794.htm<->invariant :: Invariants of an Abelian Group (ABELIAN GROUPS)
5<->ElementaryAbelianQuotient(G, p) <->text794.htm#8992<->ElementaryAbelianQuotient(G, p) : GrpAb, RngIntElt -&gt; GrpAb, Map
5<->FreeAbelianQuotient(G) <->text794.htm#8993<->FreeAbelianQuotient(G) : GrpAb -&gt; GrpAb, Map
5<->PrimaryAbelianInvariants(A) <->text794.htm#8994<->PrimaryAbelianInvariants(A) : GrpAb -&gt; [ RngIntElt ]
5<->PrimaryAbelianBasis(A) <->text794.htm#8995<->PrimaryAbelianBasis(A) : GrpAb -&gt; [ GrpAbElt ], [ RngIntElt ]
5<->TorsionFreeRank(A) <->text794.htm#8996<->TorsionFreeRank(A) : GrpAb -&gt; RngIntElt
5<->TorsionInvariants(A) <->text794.htm#8997<->TorsionInvariants(A) : GrpAb -&gt; [ RngIntElt ]
5<->pPrimaryInvariants(A, p) <->text794.htm#8998<->pPrimaryInvariants(A, p) : GrpAb, RngIntElt -&gt; [ RngIntElt ]
3<->invariant :<->text794.htm<->invariant :: Invariants of an Abelian Group (ABELIAN GROUPS)
3<->decomposition :<->text795.htm<->decomposition :: Canonical Decomposition (ABELIAN GROUPS)
5<->TorsionFreeSubgroup(A) <->text795.htm#9000<->TorsionFreeSubgroup(A) : GrpAb -&gt; GrpAb
5<->TorsionSubgroup(A) <->text795.htm#9001<->TorsionSubgroup(A) : GrpAb -&gt; GrpAb
5<->pPrimaryComponent(A, p) <->text795.htm#9002<->pPrimaryComponent(A, p) : GrpAb, RngIntElt -&gt; GrpAb
3<->decomposition :<->text795.htm<->decomposition :: Canonical Decomposition (ABELIAN GROUPS)
3<->set :<->text796.htm<->set :: Set-Theoretic Operations (ABELIAN GROUPS)
3<->order :<->text796.htm#9004<->order :: Functions Relating to Group Order (ABELIAN GROUPS)
5<-># :: Order(G) <->text796.htm#9005<-># :: Order(G) : GrpAb -&gt; RngIntElt
5<->Order(G) <->text796.htm#9005<->Order(G) : GrpAb -&gt; RngIntElt
5<->FactoredOrder(G) <->text796.htm#9006<->FactoredOrder(G) : GrpAb -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->Exponent(G) <->text796.htm#9007<->Exponent(G) : GrpAb -&gt; RngIntElt
5<->IsFinite(G) <->text796.htm#9008<->IsFinite(G) : GrpAb -&gt; BoolElt
5<->IsInfinite(G) <->text796.htm#9009<->IsInfinite(G) : GrpAb -&gt; BoolElt
3<->order :<->text796.htm#9004<->order :: Functions Relating to Group Order (ABELIAN GROUPS)
3<->Boolean :<->text796.htm#9010<->Boolean :: Membership and Equality (ABELIAN GROUPS)
5<->g in G <->text796.htm#9011<->g in G : GrpAbElt, GrpAb -&gt; BoolElt
5<->g notin G <->text796.htm#9012<->g notin G : GrpAbElt, GrpAb -&gt; BoolElt
5<->S subset G <->text796.htm#9013<->S subset G : { GrpAbElt } , GrpAb -&gt; BoolElt
5<->S notsubset G <->text796.htm#9014<->S notsubset G : { GrpAbElt } , GrpAb -&gt; BoolElt
5<->H subset G <->text796.htm#9015<->H subset G : GrpAb, GrpAb -&gt; BoolElt
5<->H notsubset G <->text796.htm#9016<->H notsubset G : GrpAb, GrpAb -&gt; BoolElt
5<->G eq H <->text796.htm#9017<->G eq H : GrpAb, GrpAb -&gt; BoolElt
5<->G ne H <->text796.htm#9018<->G ne H : GrpAb, GrpAb -&gt; BoolElt
3<->Boolean :<->text796.htm#9010<->Boolean :: Membership and Equality (ABELIAN GROUPS)
3<->operation :<->text796.htm#9019<->operation :: Set Operations (ABELIAN GROUPS)
5<->NumberingMap(G) <->text796.htm#9020<->NumberingMap(G) : GrpAb -&gt; Map
5<->RandomProcess(G) <->text796.htm#9021<->RandomProcess(G) : GrpAb -&gt; Process
5<->Random(P) <->text796.htm#9022<->Random(P) : Process -&gt; GrpAbElt
5<->Random(G, n) <->text796.htm#9023<->Random(G, n) : GrpAb, RngIntElt -> GrpAbElt
5<->Random(G) <->text796.htm#9023<->Random(G) : GrpAb -&gt; GrpAbElt
5<->Representative :: Rep(G) <->text796.htm#9024<->Representative :: Rep(G) : GrpAb -&gt; GrpAbElt
5<->Rep(G) <->text796.htm#9024<->Rep(G) : GrpAb -&gt; GrpAbElt
3<->operation :<->text796.htm#9019<->operation :: Set Operations (ABELIAN GROUPS)
3<->set :<->text796.htm<->set :: Set-Theoretic Operations (ABELIAN GROUPS)
3<->coset-space :<->text797.htm<->coset-space :: Coset Spaces (ABELIAN GROUPS)
5<->RightTransversal :: Transversal(G, H) <->text797.htm#9026<->RightTransversal :: Transversal(G, H) : GrpAb, GrpAb -&gt; {@ GrpAbElt @}, Map
5<->Transversal(G, H) <->text797.htm#9026<->Transversal(G, H) : GrpAb, GrpAb -&gt; {@ GrpAbElt @}, Map
3<->coercion :<->text797.htm#9027<->coercion :: Coercions Between Groups and  Subgroups (ABELIAN GROUPS)
5<->G ! g <->text797.htm#9028<->G ! g : GrpAb, GrpAbElt -&gt; GrpAbElt
5<->H ! g <->text797.htm#9029<->H ! g : GrpAb, GrpAbElt -&gt; GrpAbElt
5<->K ! g <->text797.htm#9030<->K ! g : GrpAb, GrpAbElt -&gt; GrpAbElt
5<->Morphism(H, G) <->text797.htm#9031<->Morphism(H, G) : GrpAb, GrpAb -&gt; ModMatRngElt
3<->coercion :<->text797.htm#9027<->coercion :: Coercions Between Groups and  Subgroups (ABELIAN GROUPS)
3<->coset-space :<->text797.htm<->coset-space :: Coset Spaces (ABELIAN GROUPS)
3<->subgroup-constructions :<->text798.htm<->subgroup-constructions :: Subgroup Constructions (ABELIAN GROUPS)
5<->H meet K <->text798.htm#9033<->H meet K : GrpAb, GrpAb -&gt; GrpAb
5<->H meet:= K <->text798.htm#9034<->H meet:= K : GrpAb, GrpAb -&gt; GrpAb
5<->H + K <->text798.htm#9035<->H + K : GrpAb, GrpAb -&gt; GrpAb
5<->n * G <->text798.htm#9036<->n * G : RngIntElt, GrpAb -&gt; GrpAb, Map
5<->FrattiniSubgroup(G) <->text798.htm#9037<->FrattiniSubgroup(G) : GrpAb -&gt; GrpAb
5<->SylowSubgroup(G, p : parameters) <->text798.htm#9038<->SylowSubgroup(G, p : parameters) : GrpAb, RngIntElt -&gt; GrpAb
4<->GrpAb_pSylowComputation (Example H74E12)<->text798.htm#9039<->GrpAb_pSylowComputation (Example H74E12)
4<->Example-pSylowComputation :<->text798.htm#9039<->Example-pSylowComputation :: GrpAb_pSylowComputation (Example H74E12)
3<->subgroup-constructions :<->text798.htm<->subgroup-constructions :: Subgroup Constructions (ABELIAN GROUPS)
3<->subgroup-chains :<->text799.htm<->subgroup-chains :: Subgroup Chains (ABELIAN GROUPS)
5<->CompositionSeries :: ChiefSeries(G) <->text799.htm#9041<->CompositionSeries :: ChiefSeries(G) : GrpAb -&gt; [GrpAb]
5<->ChiefSeries(G) <->text799.htm#9041<->ChiefSeries(G) : GrpAb -&gt; [GrpAb]
5<->Agemo(G, i) <->text799.htm#9042<->Agemo(G, i) : GrpAb, RngIntElt -&gt; GrpAb
5<->Omega(G, i) <->text799.htm#9043<->Omega(G, i) : GrpAb, RngIntElt -&gt; GrpAb
5<->ElementaryAbelianSeries(G) <->text799.htm#9044<->ElementaryAbelianSeries(G) : GrpAb -&gt; [ GrpAb ]
5<->LowerCentralSeries :: DerivedSeries(G) <->text799.htm#9045<->LowerCentralSeries :: DerivedSeries(G) : GrpAb -&gt; [ GrpAb ]
5<->DerivedSeries(G) <->text799.htm#9045<->DerivedSeries(G) : GrpAb -&gt; [ GrpAb ]
5<->UpperCentralSeries(G) <->text799.htm#9046<->UpperCentralSeries(G) : GrpAb -&gt; [ GrpAb ]
5<->SubnormalSeries(G, H) <->text799.htm#9047<->SubnormalSeries(G, H) : GrpAb, GrpAb -&gt; [ GrpAb ]
3<->subgroup-chains :<->text799.htm<->subgroup-chains :: Subgroup Chains (ABELIAN GROUPS)
3<->group-Boolean :<->text800.htm<->group-Boolean :: General Group Properties (ABELIAN GROUPS)
5<->IsCyclic(G) <->text800.htm#9049<->IsCyclic(G) : GrpAb -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text800.htm#9050<->IsElementaryAbelian(G) : GrpAb -&gt; BoolElt
5<->IsFree(G) <->text800.htm#9051<->IsFree(G) : GrpAb -&gt; BoolElt
5<->IsMixed(G) <->text800.htm#9052<->IsMixed(G) : GrpAb -&gt; BoolElt
5<->IspGroup(G) <->text800.htm#9053<->IspGroup(G) : GrpAb -&gt; BoolElt
5<->DerivedLength(G) <->text800.htm#9054<->DerivedLength(G) : GrpAb -&gt; RngIntElt
3<->subgroup-Boolean :<->text800.htm#9055<->subgroup-Boolean :: Properties of Subgroups (ABELIAN GROUPS)
5<->IsMaximal(G, H) <->text800.htm#9056<->IsMaximal(G, H) : GrpAb, GrpAb -&gt; BoolElt
5<->Index(G, H) <->text800.htm#9057<->Index(G, H) : GrpAb, GrpAb -&gt; RngIntElt
5<->FactoredIndex(G, H) <->text800.htm#9058<->FactoredIndex(G, H) : GrpAb, GrpAb -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->IsPure(G, H) <->text800.htm#9059<->IsPure(G, H) : GrpAb, GrpAb -&gt; BoolElt
5<->IsNeat(G, H) <->text800.htm#9060<->IsNeat(G, H) : GrpAb, GrpAb -&gt; BoolElt
3<->subgroup-Boolean :<->text800.htm#9055<->subgroup-Boolean :: Properties of Subgroups (ABELIAN GROUPS)
3<->subgroup-structure :<->text800.htm#9061<->subgroup-structure :: Enumeration of Subgroups (ABELIAN GROUPS)
5<->MaximalSubgroups(G) <->text800.htm#9062<->MaximalSubgroups(G) : GrpAb -&gt; [GrpAb]
5<->Subgroups(G:parameters) <->text800.htm#9063<->Subgroups(G:parameters) : GrpAb -&gt; [Rec]
5<->NumberOfSubgroupsAbelianPGroup (A) <->text800.htm#9064<->NumberOfSubgroupsAbelianPGroup (A) : SeqEnum -&gt; SeqEnum
5<->HasComplement(G, U) <->text800.htm#9065<->HasComplement(G, U) : GrpAb, GrpAb -&gt; BoolElt, GrpAb
4<->GrpAb_Subgroups (Example H74E13)<->text800.htm#9066<->GrpAb_Subgroups (Example H74E13)
4<->Example-Subgroups :<->text800.htm#9066<->Example-Subgroups :: GrpAb_Subgroups (Example H74E13)
3<->subgroup-structure :<->text800.htm#9061<->subgroup-structure :: Enumeration of Subgroups (ABELIAN GROUPS)
3<->group-Boolean :<->text800.htm<->group-Boolean :: General Group Properties (ABELIAN GROUPS)
3<->character-representation :<->text801.htm<->character-representation :: Representation Theory (ABELIAN GROUPS)
5<->CharacterTable(G) <->text801.htm#9068<->CharacterTable(G) : GrpAb -&gt; TabChtr
3<->character-representation :<->text801.htm<->character-representation :: Representation Theory (ABELIAN GROUPS)
3<->hom :<->text802.htm<->hom :: The Hom Functor (ABELIAN GROUPS)
5<->Hom(G, H) <->text802.htm#9070<->Hom(G, H) : GrpAb, GrpAb -> GrpAb, Map
5<->Hom(G, H) <->text802.htm#9070<->Hom(G, H) : GrpPC, GrpPC -&gt; GrpAb, Map
5<->HomGenerators(G, H) <->text802.htm#9071<->HomGenerators(G, H) : GrpAb, GrpAb -&gt; GrpAb, Map
5<->AllHomomorphisms(G, H) <->text802.htm#9072<->AllHomomorphisms(G, H) : GrpPC, GrpPC -> [Map]
5<->AllHomomorphisms(G, H) <->text802.htm#9072<->AllHomomorphisms(G, H) : GrpAb, GrpAb -&gt; [Map]
4<->GrpAb_Relations (Example H74E14)<->text802.htm#9073<->GrpAb_Relations (Example H74E14)
4<->Example-Relations :<->text802.htm#9073<->Example-Relations :: GrpAb_Relations (Example H74E14)
3<->hom :<->text802.htm<->hom :: The Hom Functor (ABELIAN GROUPS)
3<->autgp :<->text803.htm<->autgp :: Automorphism Groups (ABELIAN GROUPS)
5<->AutomorphismGroup(G) <->text803.htm#9075<->AutomorphismGroup(G) : GrpAb -&gt; GrpAuto
5<->IsIsomorphic(G, H) <->text803.htm#9076<->IsIsomorphic(G, H) : GrpAb, GrpAb -&gt; BoolElt, Hom(Grp)
3<->autgp :<->text803.htm<->autgp :: Automorphism Groups (ABELIAN GROUPS)
3<->cohomology :<->text804.htm<->cohomology :: Cohomology (ABELIAN GROUPS)
5<->Dual(G) <->text804.htm#9078<->Dual(G) : GrpAb -&gt; GrpAb, Map
5<->H2_G_QmodZ(G) <->text804.htm#9079<->H2_G_QmodZ(G) : GrpAb -&gt; GrpAb, Map
5<->Res_H2_G_QmodZ(U, H2) <->text804.htm#9080<->Res_H2_G_QmodZ(U, H2) : GrpAb, GrpAb -&gt; GrpAb, Map
3<->cohomology :<->text804.htm<->cohomology :: Cohomology (ABELIAN GROUPS)
3<->homomorphisms :<->text805.htm<->homomorphisms :: Homomorphisms (ABELIAN GROUPS)
5<->hom< A -> B | L> <->text805.htm#9082<->hom&lt; A -&gt; B | L&gt; : Grp, Grp, List -&gt; Map
5<->Homomorphism(A, B, X, Y) <->text805.htm#9083<->Homomorphism(A, B, X, Y) : Grp, Grp, [ GrpElt ], [ GrpElt ]  -&gt; Map
5<->iso< A -> B | L> <->text805.htm#9084<->iso&lt; A -&gt; B | L&gt; : Grp, Grp, List -&gt; Map
5<->Isomorphism(A, B, X, Y) <->text805.htm#9085<->Isomorphism(A, B, X, Y) : Grp, Grp, [ GrpElt ], [ GrpElt ]  -&gt; Map
4<->GrpAb_Homomorphisms (Example H74E15)<->text805.htm#9086<->GrpAb_Homomorphisms (Example H74E15)
4<->Example-Homomorphisms :<->text805.htm#9086<->Example-Homomorphisms :: GrpAb_Homomorphisms (Example H74E15)
3<->homomorphisms :<->text805.htm<->homomorphisms :: Homomorphisms (ABELIAN GROUPS)
3<->abelian :<->text786.htm<->abelian :: ABELIAN GROUPS
3<->finitely-presented :<->text808.htm<->finitely-presented :: FINITELY PRESENTED GROUPS
3<->GrpFP :<->text809.htm<->GrpFP :: Introduction (FINITELY PRESENTED GROUPS)
3<->introduction :<->text809.htm<->introduction :: Introduction (FINITELY PRESENTED GROUPS)
3<->algorithm :<->text809.htm#9091<->algorithm :: Overview of Facilities (FINITELY PRESENTED GROUPS)
3<->creation :<->text809.htm#9092<->creation :: The Construction of Finitely  Presented Groups (FINITELY PRESENTED GROUPS)
3<->introduction :<->text809.htm<->introduction :: Introduction (FINITELY PRESENTED GROUPS)
3<->creation :<->text810.htm<->creation :: Free Groups and Words (FINITELY PRESENTED GROUPS)
3<->free :<->text810.htm#9094<->free :: Construction of a Free Group (FINITELY PRESENTED GROUPS)
5<->FreeGroup(n) <->text810.htm#9095<->FreeGroup(n) : RngIntElt -&gt; GrpFP
4<->GrpFP_1_Free (Example H75E1)<->text810.htm#9096<->GrpFP_1_Free (Example H75E1)
4<->Example-Free :<->text810.htm#9096<->Example-Free :: GrpFP_1_Free (Example H75E1)
3<->free :<->text810.htm#9094<->free :: Construction of a Free Group (FINITELY PRESENTED GROUPS)
3<->word-construction :<->text810.htm#9097<->word-construction :: Construction of Words (FINITELY PRESENTED GROUPS)
5<->G ! [ i1, ..., is ] <->text810.htm#9098<->G ! [ i<sub>1</sub>, ..., i<sub>s</sub> ] : GrpFP, [ RngIntElt ] -&gt; GrpFPElt
5<->Identity(G) <->text810.htm#9099<->Identity(G) : GrpFP -&gt; GrpFPElt
5<->! :: Identity(G) <->text810.htm#9099<->! :: Identity(G) : GrpFP -&gt; GrpFPElt
5<->Identity(G) <->text810.htm#9099<->Identity(G) : GrpFP -&gt; GrpFPElt
5<->Random(G, m, n) <->text810.htm#9100<->Random(G, m, n) : GrpFP, RngIntElt, RngIntElt -&gt; GrpFPElt
3<->word-construction :<->text810.htm#9097<->word-construction :: Construction of Words (FINITELY PRESENTED GROUPS)
3<->word-access :<->text810.htm#9101<->word-access :: Access Functions for Words (FINITELY PRESENTED GROUPS)
5<-># w <->text810.htm#9102<-># w : GrpFPElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(w) <->text810.htm#9103<->Eltseq :: ElementToSequence(w) : GrpFPElt -&gt; [ RngIntElt ]
5<->ElementToSequence(w) <->text810.htm#9103<->ElementToSequence(w) : GrpFPElt -&gt; [ RngIntElt ]
5<->Weight :: ExponentSum(w, x) <->text810.htm#9104<->Weight :: ExponentSum(w, x) : GrpFPElt, GrpFPElt -&gt; RngIntElt
5<->ExponentSum(w, x) <->text810.htm#9104<->ExponentSum(w, x) : GrpFPElt, GrpFPElt -&gt; RngIntElt
5<->GeneratorNumber(w) <->text810.htm#9105<->GeneratorNumber(w) : GrpFPElt -&gt; RngIntElt
5<->LeadingGenerator(w) <->text810.htm#9106<->LeadingGenerator(w) : GrpFPElt -&gt; GrpFPElt
5<->Parent(w) <->text810.htm#9107<->Parent(w) : GrpFPElt -&gt; GrpFP
4<->GrpFP_1_WordAccess (Example H75E2)<->text810.htm#9108<->GrpFP_1_WordAccess (Example H75E2)
4<->Example-WordAccess :<->text810.htm#9108<->Example-WordAccess :: GrpFP_1_WordAccess (Example H75E2)
3<->word-access :<->text810.htm#9101<->word-access :: Access Functions for Words (FINITELY PRESENTED GROUPS)
3<->word-arithmetic :<->text810.htm#9109<->word-arithmetic :: Arithmetic Operators for Words (FINITELY PRESENTED GROUPS)
5<->u * v <->text810.htm#9110<->u * v : GrpFPElt, GrpFPElt -&gt; GrpFPElt
5<->u ^ n <->text810.htm#9111<->u ^ n : GrpFPElt, RngIntElt -&gt; GrpFPElt
5<->u ^ v <->text810.htm#9112<->u ^ v : GrpFPElt, GrpFPElt -&gt; GrpFPElt
5<->(,) :: (u, v) <->text810.htm#9113<->(,) :: (u, v) : GrpFPElt, GrpFPElt -&gt; GrpFPElt
5<->(,,) :: (u1, ..., un) <->text810.htm#9114<->(,,) :: (u<sub>1</sub>, ..., u<sub>n</sub>) : List(GrpFPElt) -&gt; GrpFPElt
3<->word-arithmetic :<->text810.htm#9109<->word-arithmetic :: Arithmetic Operators for Words (FINITELY PRESENTED GROUPS)
3<->Boolean :<->text810.htm#9115<->Boolean :: Comparison of Words (FINITELY PRESENTED GROUPS)
5<->u eq v <->text810.htm#9116<->u eq v : GrpFPElt, GrpFPElt -&gt; BoolElt
5<->u ne v <->text810.htm#9117<->u ne v : GrpFPElt, GrpFPElt -&gt; BoolElt
5<->u lt v <->text810.htm#9118<->u lt v : GrpFPElt, GrpFPElt -&gt; BoolElt
5<->u le v <->text810.htm#9119<->u le v : GrpFPElt, GrpFPElt -&gt; BoolElt
5<->u ge v <->text810.htm#9120<->u ge v : GrpFPElt, GrpFPElt -&gt; BoolElt
5<->u gt v <->text810.htm#9121<->u gt v : GrpFPElt, GrpFPElt -&gt; BoolElt
4<->GrpFP_1_Words (Example H75E3)<->text810.htm#9122<->GrpFP_1_Words (Example H75E3)
4<->Example-Words :<->text810.htm#9122<->Example-Words :: GrpFP_1_Words (Example H75E3)
3<->Boolean :<->text810.htm#9115<->Boolean :: Comparison of Words (FINITELY PRESENTED GROUPS)
3<->relation :<->text810.htm#9123<->relation :: Relations (FINITELY PRESENTED GROUPS)
5<->w1 = w2 <->text810.htm#9124<->w<sub>1</sub> = w<sub>2</sub> : GrpFPElt, GrpFPElt -&gt; GrpFPRel
5<->LHS :: r[1] <->text810.htm#9125<->LHS :: r[1] : RelElt, RngIntElt -&gt; GrpFPElt
5<->r[1] <->text810.htm#9125<->r[1] : RelElt, RngIntElt -&gt; GrpFPElt
5<->RHS :: r[2] <->text810.htm#9126<->RHS :: r[2] : RelElt, RngIntElt -&gt; GrpFPElt
5<->r[2] <->text810.htm#9126<->r[2] : RelElt, RngIntElt -&gt; GrpFPElt
5<->[] :: r[1] = w <->text810.htm#9127<->[] :: r[1] = w : GrpFPRel, RngIntElt, GrpFPElt -&gt; GrpFPRel
5<->[] :: r[2] = w <->text810.htm#9128<->[] :: r[2] = w : GrpFPRel, RngIntElt, GrpFPElt -&gt; GrpFPRel
5<->() :: f(r) <->text810.htm#9129<->() :: f(r) : Hom(GrpFP), GrpFPRel -&gt; GrpFPRel
5<->Parent(r) <->text810.htm#9130<->Parent(r) : RelElt -&gt; GrpFP
4<->GrpFP_1_Relations (Example H75E4)<->text810.htm#9131<->GrpFP_1_Relations (Example H75E4)
4<->Example-Relations :<->text810.htm#9131<->Example-Relations :: GrpFP_1_Relations (Example H75E4)
3<->relation :<->text810.htm#9123<->relation :: Relations (FINITELY PRESENTED GROUPS)
3<->creation :<->text810.htm<->creation :: Free Groups and Words (FINITELY PRESENTED GROUPS)
3<->fp-group-construction :<->text811.htm<->fp-group-construction :: Construction of an FP-Group (FINITELY PRESENTED GROUPS)
3<->fp-group-quotient :<->text811.htm#9133<->fp-group-quotient :: The Quotient Group Constructor (FINITELY PRESENTED GROUPS)
5<->quo< F | R > <->text811.htm#9134<->quo&lt; F | R &gt; : GrpFP, List -&gt; GrpFP, Hom(Grp)
5<->G / H <->text811.htm#9135<->G / H : GrpFP, GrpFP -&gt; GrpFP
4<->GrpFP_1_Symmetric1 (Example H75E5)<->text811.htm#9136<->GrpFP_1_Symmetric1 (Example H75E5)
4<->Example-Symmetric1 :<->text811.htm#9136<->Example-Symmetric1 :: GrpFP_1_Symmetric1 (Example H75E5)
4<->GrpFP_1_Symmetric2 (Example H75E6)<->text811.htm#9137<->GrpFP_1_Symmetric2 (Example H75E6)
4<->Example-Symmetric2 :<->text811.htm#9137<->Example-Symmetric2 :: GrpFP_1_Symmetric2 (Example H75E6)
4<->GrpFP_1_Modular (Example H75E7)<->text811.htm#9138<->GrpFP_1_Modular (Example H75E7)
4<->Example-Modular :<->text811.htm#9138<->Example-Modular :: GrpFP_1_Modular (Example H75E7)
3<->fp-group-quotient :<->text811.htm#9133<->fp-group-quotient :: The Quotient Group Constructor (FINITELY PRESENTED GROUPS)
3<->fp-group-constructor :<->text811.htm#9139<->fp-group-constructor :: The FP-Group Constructor (FINITELY PRESENTED GROUPS)
5<->Group< X | R > <->text811.htm#9140<->Group&lt; X | R &gt; : List(Var), List(GrpFPRel) -&gt; GrpFP, Hom(Grp)
4<->GrpFP_1_Tetrahedral (Example H75E8)<->text811.htm#9141<->GrpFP_1_Tetrahedral (Example H75E8)
4<->Example-Tetrahedral :<->text811.htm#9141<->Example-Tetrahedral :: GrpFP_1_Tetrahedral (Example H75E8)
4<->GrpFP_1_ThreeInvols (Example H75E9)<->text811.htm#9142<->GrpFP_1_ThreeInvols (Example H75E9)
4<->Example-ThreeInvols :<->text811.htm#9142<->Example-ThreeInvols :: GrpFP_1_ThreeInvols (Example H75E9)
4<->GrpFP_1_Coxeter (Example H75E10)<->text811.htm#9143<->GrpFP_1_Coxeter (Example H75E10)
4<->Example-Coxeter :<->text811.htm#9143<->Example-Coxeter :: GrpFP_1_Coxeter (Example H75E10)
3<->fp-group-constructor :<->text811.htm#9139<->fp-group-constructor :: The FP-Group Constructor (FINITELY PRESENTED GROUPS)
3<->fp-group-constructor :<->text811.htm#9144<->fp-group-constructor :: Construction from a Finite Permutation or Matrix Group (FINITELY PRESENTED GROUPS)
5<->FPGroup(G) <->text811.htm#9145<->FPGroup(G) : GrpMat -> GrpFP, Hom(Grp)
5<->FPGroup(G) <->text811.htm#9145<->FPGroup(G) : GrpPerm -&gt; GrpFP, Hom(Grp)
5<->FPGroupStrong(G) <->text811.htm#9146<->FPGroupStrong(G) : GrpPerm -&gt; GrpFP, Hom(Grp)
5<->FPGroupStrong(G, N) <->text811.htm#9147<->FPGroupStrong(G, N) : GrpPerm, GrpPerm -&gt; GrpFP, Hom(Grp)
4<->GrpFP_1_FPGroup1 (Example H75E11)<->text811.htm#9148<->GrpFP_1_FPGroup1 (Example H75E11)
4<->Example-FPGroup1 :<->text811.htm#9148<->Example-FPGroup1 :: GrpFP_1_FPGroup1 (Example H75E11)
3<->fp-group-constructor :<->text811.htm#9144<->fp-group-constructor :: Construction from a Finite Permutation or Matrix Group (FINITELY PRESENTED GROUPS)
3<->fp-group-conversion-coxeter-group :<->text811.htm#9149<->fp-group-conversion-coxeter-group :: Construction of the Standard Presentation for a Coxeter Group (FINITELY PRESENTED GROUPS)
5<->\nameGrpFP_1:CoxeterGroup_conv{CoxeterGroup}(GrpFP, W) <->text811.htm#9150<->\nameGrpFP_1:CoxeterGroup_conv{CoxeterGroup}(GrpFP, W) : Cat, GrpPermCox -> GrpFP, Map
5<->CoxeterGroup(GrpFP, W) <->text811.htm#9150<->CoxeterGroup(GrpFP, W) : Cat, GrpFPCox -&gt; GrpFP, Map
4<->GrpFP_1_FPCoxeterGroups (Example H75E12)<->text811.htm#9151<->GrpFP_1_FPCoxeterGroups (Example H75E12)
4<->Example-FPCoxeterGroups :<->text811.htm#9151<->Example-FPCoxeterGroups :: GrpFP_1_FPCoxeterGroups (Example H75E12)
3<->fp-group-conversion-coxeter-group :<->text811.htm#9149<->fp-group-conversion-coxeter-group :: Construction of the Standard Presentation for a Coxeter Group (FINITELY PRESENTED GROUPS)
3<->fp-group-conversion :<->text811.htm#9152<->fp-group-conversion :: Conversion from a Special Form of FP-Group (FINITELY PRESENTED GROUPS)
5<->FPGroup(G) <->text811.htm#9153<->FPGroup(G) : GrpGPC -> GrpFP, Hom(Grp)
5<->FPGroup(G) <->text811.htm#9153<->FPGroup(G) : GrpAb  -> GrpFP, Hom(Grp)
5<->FPGroup(G) <->text811.htm#9153<->FPGroup(G) : GrpPC  -&gt; GrpFP, Hom(Grp)
4<->GrpFP_1_FPGroup2 (Example H75E13)<->text811.htm#9154<->GrpFP_1_FPGroup2 (Example H75E13)
4<->Example-FPGroup2 :<->text811.htm#9154<->Example-FPGroup2 :: GrpFP_1_FPGroup2 (Example H75E13)
3<->fp-group-conversion :<->text811.htm#9152<->fp-group-conversion :: Conversion from a Special Form of FP-Group (FINITELY PRESENTED GROUPS)
3<->standard :<->text811.htm#9155<->standard :: Construction of a Standard Group (FINITELY PRESENTED GROUPS)
5<->AbelianGroup(GrpFP, [n1,...,nr])<->text811.htm#9156<->AbelianGroup(GrpFP, [n<sub>1</sub>,...,n<sub>r</sub>]): Cat, [ RngIntElt ] -&gt; GrpFP
5<->AlternatingGroup(GrpFP, n) <->text811.htm#9157<->AlternatingGroup(GrpFP, n) : Cat, RngIntElt -&gt; GrpFP
5<->BraidGroup(GrpFP, n) <->text811.htm#9158<->BraidGroup(GrpFP, n) : Cat, RngIntElt -&gt; GrpFP
5<->CoxeterGroup(GrpFP, t) <->text811.htm#9159<->CoxeterGroup(GrpFP, t) : Cat, MonStgElt -&gt; GrpFP
5<->CyclicGroup(GrpFP, n) <->text811.htm#9160<->CyclicGroup(GrpFP, n) : Cat, RngIntElt -&gt; GrpFP
5<->DihedralGroup(GrpFP, n) <->text811.htm#9161<->DihedralGroup(GrpFP, n) : Cat, RngIntElt -&gt; GrpFP
5<->ExtraSpecialGroup(GrpFP, p, n : parameters) <->text811.htm#9162<->ExtraSpecialGroup(GrpFP, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpFP
5<->SymmetricGroup(GrpFP, n) <->text811.htm#9163<->SymmetricGroup(GrpFP, n) : Cat, RngIntElt -&gt; GrpFP
4<->GrpFP_1_StandardGroups (Example H75E14)<->text811.htm#9164<->GrpFP_1_StandardGroups (Example H75E14)
4<->Example-StandardGroups :<->text811.htm#9164<->Example-StandardGroups :: GrpFP_1_StandardGroups (Example H75E14)
3<->standard :<->text811.htm#9155<->standard :: Construction of a Standard Group (FINITELY PRESENTED GROUPS)
3<->extension :<->text811.htm#9165<->extension :: Construction of Extensions (FINITELY PRESENTED GROUPS)
5<->Darstellungsgruppe(G) <->text811.htm#9166<->Darstellungsgruppe(G) : GrpFP -&gt; GrpFP
5<->DirectProduct(G, H) <->text811.htm#9167<->DirectProduct(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->DirectProduct(Q) <->text811.htm#9168<->DirectProduct(Q) : [ GrpFP ] -&gt; GrpFP
5<->FreeProduct(G, H) <->text811.htm#9169<->FreeProduct(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->FreeProduct(Q) <->text811.htm#9170<->FreeProduct(Q) : [ GrpFP ] -&gt; GrpFP
4<->GrpFP_1_ControlExtn (Example H75E15)<->text811.htm#9171<->GrpFP_1_ControlExtn (Example H75E15)
4<->Example-ControlExtn :<->text811.htm#9171<->Example-ControlExtn :: GrpFP_1_ControlExtn (Example H75E15)
4<->GrpFP_1_DirectProduct (Example H75E16)<->text811.htm#9172<->GrpFP_1_DirectProduct (Example H75E16)
4<->Example-DirectProduct :<->text811.htm#9172<->Example-DirectProduct :: GrpFP_1_DirectProduct (Example H75E16)
3<->extension :<->text811.htm#9165<->extension :: Construction of Extensions (FINITELY PRESENTED GROUPS)
3<->access :<->text811.htm#9173<->access :: Accessing the Defining Generators  and Relations (FINITELY PRESENTED GROUPS)
5<->G . i <->text811.htm#9174<->G . i : GrpFP, RngIntElt -&gt; GrpFPElt
5<->Generators(G) <->text811.htm#9175<->Generators(G) : GrpFP -&gt; { GrpFPElt }
5<->Ngens :: NumberOfGenerators(G) <->text811.htm#9176<->Ngens :: NumberOfGenerators(G) : GrpFP -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text811.htm#9176<->NumberOfGenerators(G) : GrpFP -&gt; RngIntElt
5<->PresentationLength(G) <->text811.htm#9177<->PresentationLength(G) : GrpFP -&gt; RngIntElt
5<->Relations(G) <->text811.htm#9178<->Relations(G) : GrpFP -&gt; [ GrpFPRel ]
3<->access :<->text811.htm#9173<->access :: Accessing the Defining Generators  and Relations (FINITELY PRESENTED GROUPS)
3<->fp-group-construction :<->text811.htm<->fp-group-construction :: Construction of an FP-Group (FINITELY PRESENTED GROUPS)
3<->homomorphism :<->text812.htm<->homomorphism :: Homomorphisms (FINITELY PRESENTED GROUPS)
3<->homomorphism_general :<->text812.htm#9180<->homomorphism_general :: General Remarks (FINITELY PRESENTED GROUPS)
3<->homomorphism_constr :<->text812.htm#9181<->homomorphism_constr :: Construction of Homomorphisms (FINITELY PRESENTED GROUPS)
5<->hom< P -> G | S > <->text812.htm#9182<->hom&lt; P -&gt; G | S &gt; : Struct , Struct -&gt; Map
5<->IsSatisfied(U, E) <->text812.htm#9183<->IsSatisfied(U, E) : $\brace$ GrpFPElt $\rbrace$, [ GrpElt ] -> BoolElt
5<->IsSatisfied(U, E) <->text812.htm#9183<->IsSatisfied(U, E) : [ RelElt ], [ GrpElt ] -> BoolElt
5<->\nameGrpFP_1:IsSatisfied{IsSatisfied}(U, E) <->text812.htm#9183<->\nameGrpFP_1:IsSatisfied{IsSatisfied}(U, E) : [ GrpFPElt ], [ GrpElt ] -> BoolElt
5<->IsSatisfied(U, E) <->text812.htm#9183<->IsSatisfied(U, E) : { RelElt }, [ GrpElt ] -&gt; BoolElt
3<->homomorphism_constr :<->text812.htm#9181<->homomorphism_constr :: Construction of Homomorphisms (FINITELY PRESENTED GROUPS)
3<->homomorphism_access :<->text812.htm#9184<->homomorphism_access :: Accessing Homomorphisms (FINITELY PRESENTED GROUPS)
5<->() :: w @ f <->text812.htm#9185<->() :: w @ f : GrpFPElt, Map -&gt; GrpElt
5<->w @ f <->text812.htm#9185<->w @ f : GrpFPElt, Map -&gt; GrpElt
5<->() :: H @ f <->text812.htm#9186<->() :: H @ f : GrpFP, Map -&gt; Grp
5<->H @ f <->text812.htm#9186<->H @ f : GrpFP, Map -&gt; Grp
5<->g @@ f <->text812.htm#9187<->g @@ f : GrpElt, Map -&gt; GrpFPElt
5<->H @@ f <->text812.htm#9188<->H @@ f : Grp, Map -&gt; GrpFP
5<->Domain(f) <->text812.htm#9189<->Domain(f) : Map -&gt; Grp
5<->Codomain(f) <->text812.htm#9190<->Codomain(f) : Map -&gt; Grp
5<->Image(f) <->text812.htm#9191<->Image(f) : Map -&gt; Grp
5<->Kernel(f) <->text812.htm#9192<->Kernel(f) : Map -&gt; Grp
4<->GrpFP_1_Homomorphism (Example H75E17)<->text812.htm#9193<->GrpFP_1_Homomorphism (Example H75E17)
4<->Example-Homomorphism :<->text812.htm#9193<->Example-Homomorphism :: GrpFP_1_Homomorphism (Example H75E17)
3<->homomorphism_access :<->text812.htm#9184<->homomorphism_access :: Accessing Homomorphisms (FINITELY PRESENTED GROUPS)
3<->homomorphism_fin :<->text812.htm#9194<->homomorphism_fin :: Computing Homomorphisms to Finite Groups (FINITELY PRESENTED GROUPS)
5<->Homomorphisms(F, G $\colon$ \parameters) <->text812.htm#9195<->Homomorphisms(F, G $\colon$ \parameters) : GrpFP, GrpPerm -> [ HomGrp ]
5<->Homomorphisms(F, G, A : parameters) <->text812.htm#9195<->Homomorphisms(F, G, A : parameters) : GrpFP, GrpPerm, GrpPerm -&gt; [ HomGrp ]
4<->GrpFP_1_Homomorphisms1 (Example H75E18)<->text812.htm#9196<->GrpFP_1_Homomorphisms1 (Example H75E18)
4<->Example-Homomorphisms1 :<->text812.htm#9196<->Example-Homomorphisms1 :: GrpFP_1_Homomorphisms1 (Example H75E18)
5<->Homomorphisms(F, G $\colon$ \parameters) <->text812.htm#9197<->Homomorphisms(F, G $\colon$ \parameters) : GrpFP, GrpPC -> [ HomGrp ]
5<->Homomorphisms(F, G, A : parameters) <->text812.htm#9197<->Homomorphisms(F, G, A : parameters) : GrpFP, GrpPC, GrpPC -&gt; [ HomGrp ]
3<->homomorphism_perm_process :<->text812.htm#9198<->homomorphism_perm_process :: Computing Homomorphisms to Permutation Groups Interactively (FINITELY PRESENTED GROUPS)
5<->HomomorphismsProcess(F, G $\colon$ \parameters) <->text812.htm#9199<->HomomorphismsProcess(F, G $\colon$ \parameters) : GrpFP, GrpPerm -> GrpFPHomsProc
5<->HomomorphismsProcess(F, G, A : parameters) <->text812.htm#9199<->HomomorphismsProcess(F, G, A : parameters) : GrpFP, GrpPerm, GrpPerm -&gt; GrpFPHomsProc
5<->NextElement(~P) <->text812.htm#9200<->NextElement(~P) : GrpFPHomsProc -&gt;
5<->IsEmpty(P) <->text812.htm#9201<->IsEmpty(P) : GrpFPHomsProc -&gt; BoolElt
5<->IsValid(P) <->text812.htm#9202<->IsValid(P) : GrpFPHomsProc -&gt; BoolElt
5<->DefinesHomomorphism(P) <->text812.htm#9203<->DefinesHomomorphism(P) : GrpFPHomsProc -&gt; BoolElt
5<->Homomorphism(P) <->text812.htm#9204<->Homomorphism(P) : GrpFPHomsProc -&gt; HomGrp
5<-># P <->text812.htm#9205<-># P : GrpFPHomsProc -&gt; RngIntElt
4<->GrpFP_1_Homomorphisms2 (Example H75E19)<->text812.htm#9206<->GrpFP_1_Homomorphisms2 (Example H75E19)
4<->Example-Homomorphisms2 :<->text812.htm#9206<->Example-Homomorphisms2 :: GrpFP_1_Homomorphisms2 (Example H75E19)
4<->GrpFP_1_Homomorphisms2-2 (Example H75E20)<->text812.htm#9207<->GrpFP_1_Homomorphisms2-2 (Example H75E20)
4<->Example-Homomorphisms2-2 :<->text812.htm#9207<->Example-Homomorphisms2-2 :: GrpFP_1_Homomorphisms2-2 (Example H75E20)
3<->homomorphism_perm_process :<->text812.htm#9198<->homomorphism_perm_process :: Computing Homomorphisms to Permutation Groups Interactively (FINITELY PRESENTED GROUPS)
3<->homomorphism_onto_simple :<->text812.htm#9208<->homomorphism_onto_simple :: Finding Homomorphisms onto Simple Groups (FINITELY PRESENTED GROUPS)
5<->SimpleQuotients(F, ord1, ord2$\colon$ \parameters) <->text812.htm#9209<->SimpleQuotients(F, ord1, ord2$\colon$ \parameters) : GrpFP, RngIntElt, RngIntElt -> List
5<->SimpleQuotients(F, ord2$\colon$ \parameters) <->text812.htm#9209<->SimpleQuotients(F, ord2$\colon$ \parameters) : GrpFP, RngIntElt -> List
5<->SimpleQuotients(F, deg1, deg2, ord1, ord2: parameters) <->text812.htm#9209<->SimpleQuotients(F, deg1, deg2, ord1, ord2: parameters) : GrpFP, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; List
5<->SimpleQuotientProcess(F, deg1, deg2, ord1, ord2: parameters) <->text812.htm#9210<->SimpleQuotientProcess(F, deg1, deg2, ord1, ord2: parameters) : GrpFP, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Rec
5<->NextSimpleQuotient(~P) <->text812.htm#9211<->NextSimpleQuotient(~P) : Rec -&gt;
5<->IsEmptySimpleQuotientProcess(P) <->text812.htm#9212<->IsEmptySimpleQuotientProcess(P) : Rec -&gt; BoolElt
5<->SimpleEpimorphisms(P) <->text812.htm#9213<->SimpleEpimorphisms(P) : Rec -&gt; SeqEnum, Tup
4<->GrpFP_1_SimpleQuotients (Example H75E21)<->text812.htm#9214<->GrpFP_1_SimpleQuotients (Example H75E21)
4<->Example-SimpleQuotients :<->text812.htm#9214<->Example-SimpleQuotients :: GrpFP_1_SimpleQuotients (Example H75E21)
3<->homomorphism_onto_simple :<->text812.htm#9208<->homomorphism_onto_simple :: Finding Homomorphisms onto Simple Groups (FINITELY PRESENTED GROUPS)
3<->homomorphism_fin :<->text812.htm#9194<->homomorphism_fin :: Computing Homomorphisms to Finite Groups (FINITELY PRESENTED GROUPS)
3<->L2_quotient :<->text812.htm#9215<->L2_quotient :: The (L)<sub>2</sub>-Quotient Algorithm (FINITELY PRESENTED GROUPS)
3<->basic-usage :<->text812.htm#9216<->basic-usage :: Basic Usage (FINITELY PRESENTED GROUPS)
5<->L2Quotients(G) <->text812.htm#9217<->L2Quotients(G) : GrpFP  -&gt; [ L2Quotient ]
4<->GrpFP_1_L2Quotient (Example H75E22)<->text812.htm#9218<->GrpFP_1_L2Quotient (Example H75E22)
4<->Example-L2Quotient :<->text812.htm#9218<->Example-L2Quotient :: GrpFP_1_L2Quotient (Example H75E22)
5<->GetMatrices(Q) <->text812.htm#9219<->GetMatrices(Q) : L2Quotient -&gt; GrpMat, SeqEnum
4<->GrpFP_1_L2QuotientGetMatrices (Example H75E23)<->text812.htm#9220<->GrpFP_1_L2QuotientGetMatrices (Example H75E23)
4<->Example-L2QuotientGetMatrices :<->text812.htm#9220<->Example-L2QuotientGetMatrices :: GrpFP_1_L2QuotientGetMatrices (Example H75E23)
4<->GrpFP_1_ModularFinite (Example H75E24)<->text812.htm#9221<->GrpFP_1_ModularFinite (Example H75E24)
4<->Example-ModularFinite :<->text812.htm#9221<->Example-ModularFinite :: GrpFP_1_ModularFinite (Example H75E24)
4<->GrpFP_1_CoxeterFinite (Example H75E25)<->text812.htm#9222<->GrpFP_1_CoxeterFinite (Example H75E25)
4<->Example-CoxeterFinite :<->text812.htm#9222<->Example-CoxeterFinite :: GrpFP_1_CoxeterFinite (Example H75E25)
3<->basic-usage :<->text812.htm#9216<->basic-usage :: Basic Usage (FINITELY PRESENTED GROUPS)
3<->intermediate-usage :<->text812.htm#9223<->intermediate-usage :: Intermediate Usage (FINITELY PRESENTED GROUPS)
5<->L2Quotients(M) <->text812.htm#9224<->L2Quotients(M) : AlgMatElt  -&gt; [ L2Quotient ]
4<->GrpFP_1_L2QuotientCoxeter (Example H75E26)<->text812.htm#9225<->GrpFP_1_L2QuotientCoxeter (Example H75E26)
4<->Example-L2QuotientCoxeter :<->text812.htm#9225<->Example-L2QuotientCoxeter :: GrpFP_1_L2QuotientCoxeter (Example H75E26)
4<->GrpFP_1_L2QuotientexactOrders (Example H75E27)<->text812.htm#9226<->GrpFP_1_L2QuotientexactOrders (Example H75E27)
4<->Example-L2QuotientexactOrders :<->text812.htm#9226<->Example-L2QuotientexactOrders :: GrpFP_1_L2QuotientexactOrders (Example H75E27)
3<->intermediate-usage :<->text812.htm#9223<->intermediate-usage :: Intermediate Usage (FINITELY PRESENTED GROUPS)
3<->advanced-usage :<->text812.htm#9227<->advanced-usage :: Advanced Usage (FINITELY PRESENTED GROUPS)
3<->infinite-quotients :<->text812.htm#9228<->infinite-quotients :: Handling Infinite (L)<sub>2</sub>-quotients (FINITELY PRESENTED GROUPS)
5<->SpecifyCharacteristic(Q, n) <->text812.htm#9229<->SpecifyCharacteristic(Q, n) : L2Quotient, RngIntElt -&gt; [ L2Quotient ]
4<->GrpFP_1_L2QuotientSpecifyCharacteristic (Example H75E28)<->text812.htm#9230<->GrpFP_1_L2QuotientSpecifyCharacteristic (Example H75E28)
4<->Example-L2QuotientSpecifyCharacteristic :<->text812.htm#9230<->Example-L2QuotientSpecifyCharacteristic :: GrpFP_1_L2QuotientSpecifyCharacteristic (Example H75E28)
5<->AddGroupRelations(Q, R) <->text812.htm#9231<->AddGroupRelations(Q, R) : L2Quotient, [ GrpFPElt ] -&gt; [ L2Quotient ]
4<->GrpFP_1_L2QuotientAddGroupRelations (Example H75E29)<->text812.htm#9232<->GrpFP_1_L2QuotientAddGroupRelations (Example H75E29)
4<->Example-L2QuotientAddGroupRelations :<->text812.htm#9232<->Example-L2QuotientAddGroupRelations :: GrpFP_1_L2QuotientAddGroupRelations (Example H75E29)
4<->GrpFP_1_L2QuotientSpecifyAddGroupRelations2 (Example H75E30)<->text812.htm#9233<->GrpFP_1_L2QuotientSpecifyAddGroupRelations2 (Example H75E30)
4<->Example-L2QuotientSpecifyAddGroupRelations2 :<->text812.htm#9233<->Example-L2QuotientSpecifyAddGroupRelations2 :: GrpFP_1_L2QuotientSpecifyAddGroupRelations2 (Example H75E30)
5<->AddRingRelations(Q, R) <->text812.htm#9234<->AddRingRelations(Q, R) : L2Quotient, [ RngMPolElt ] -&gt; [ L2Quotient ]
4<->GrpFP_1_L2QuotientSpecifyAddRingRelations (Example H75E31)<->text812.htm#9235<->GrpFP_1_L2QuotientSpecifyAddRingRelations (Example H75E31)
4<->Example-L2QuotientSpecifyAddRingRelations :<->text812.htm#9235<->Example-L2QuotientSpecifyAddRingRelations :: GrpFP_1_L2QuotientSpecifyAddRingRelations (Example H75E31)
3<->infinite-quotients :<->text812.htm#9228<->infinite-quotients :: Handling Infinite (L)<sub>2</sub>-quotients (FINITELY PRESENTED GROUPS)
3<->L2_quotient :<->text812.htm#9215<->L2_quotient :: The (L)<sub>2</sub>-Quotient Algorithm (FINITELY PRESENTED GROUPS)
3<->L2-infinite :<->text812.htm#9236<->L2-infinite :: Infinite L2 Quotients (FINITELY PRESENTED GROUPS)
5<->HasInfinitePSL2Quotient(G) :<->text812.htm#9237<->HasInfinitePSL2Quotient(G) :: GrpFP  -&gt; BoolElt, SeqEnum
4<->GrpFP_1_fp-gps<->text812.htm#9238<->GrpFP_1_fp-gps:inf-psl2-quot (Example H75E32)
4<->Example-fp-gps:inf-psl2-quot :: GrpFP_1_fp-gps<->text812.htm#9238<->Example-fp-gps:inf-psl2-quot :: GrpFP_1_fp-gps:inf-psl2-quot (Example H75E32)
3<->L2-infinite :<->text812.htm#9236<->L2-infinite :: Infinite L2 Quotients (FINITELY PRESENTED GROUPS)
3<->L3_quotient :<->text812.htm#9239<->L3_quotient :: The (L)<sub>3</sub>(U)<sub>3</sub>-Quotient Algorithm (FINITELY PRESENTED GROUPS)
5<->L3Quotients(G: parameters) <->text812.htm#9240<->L3Quotients(G: parameters) : GrpFP  -&gt; [ L3Quotient ]
5<->SpecifyCharacteristic(Q, p) <->text812.htm#9241<->SpecifyCharacteristic(Q, p) : L3Quotient, RngIntElt -> [ L3Quotient ]
5<->SpecifyCharacteristic(Q, p) <->text812.htm#9241<->SpecifyCharacteristic(Q, p) : L2Quotient, RngIntElt -&gt; [ L2Quotient ]
5<->AddGroupRelations(Q, r) <->text812.htm#9242<->AddGroupRelations(Q, r) : L3Quotient, [ GrpFPElt ] -> [ L3Quotient ]
5<->AddGroupRelations(Q, r) <->text812.htm#9242<->AddGroupRelations(Q, r) : L2Quotient, [ GrpFPElt ] -&gt; [ L2Quotient ]
5<->GetMatrices(Q) <->text812.htm#9243<->GetMatrices(Q) : L3Quotient -> GrpMat
5<->GetMatrices(Q) <->text812.htm#9243<->GetMatrices(Q) : L2Quotient -&gt; GrpMat
4<->GrpFP_1_L3Quotient (Example H75E33)<->text812.htm#9244<->GrpFP_1_L3Quotient (Example H75E33)
4<->Example-L3Quotient :<->text812.htm#9244<->Example-L3Quotient :: GrpFP_1_L3Quotient (Example H75E33)
4<->GrpFP_1_L3infinite (Example H75E34)<->text812.htm#9245<->GrpFP_1_L3infinite (Example H75E34)
4<->Example-L3infinite :<->text812.htm#9245<->Example-L3infinite :: GrpFP_1_L3infinite (Example H75E34)
3<->L3_quotient :<->text812.htm#9239<->L3_quotient :: The (L)<sub>3</sub>(U)<sub>3</sub>-Quotient Algorithm (FINITELY PRESENTED GROUPS)
3<->isomorphism_fp :<->text812.htm#9246<->isomorphism_fp :: Searching for Isomorphisms (FINITELY PRESENTED GROUPS)
5<->SearchForIsomorphism(F, G, m : parameters) <->text812.htm#9247<->SearchForIsomorphism(F, G, m : parameters) : GrpFP, GrpFP, RngIntElt -&gt; BoolElt, HomGrp, HomGrp
4<->GrpFP_1_SearchForIso1 (Example H75E35)<->text812.htm#9248<->GrpFP_1_SearchForIso1 (Example H75E35)
4<->Example-SearchForIso1 :<->text812.htm#9248<->Example-SearchForIso1 :: GrpFP_1_SearchForIso1 (Example H75E35)
4<->GrpFP_1_SearchForIso2 (Example H75E36)<->text812.htm#9249<->GrpFP_1_SearchForIso2 (Example H75E36)
4<->Example-SearchForIso2 :<->text812.htm#9249<->Example-SearchForIso2 :: GrpFP_1_SearchForIso2 (Example H75E36)
3<->isomorphism_fp :<->text812.htm#9246<->isomorphism_fp :: Searching for Isomorphisms (FINITELY PRESENTED GROUPS)
3<->homomorphism :<->text812.htm<->homomorphism :: Homomorphisms (FINITELY PRESENTED GROUPS)
3<->quotient :<->text813.htm<->quotient :: Abelian, Nilpotent and Soluble  Quotient (FINITELY PRESENTED GROUPS)
3<->abelian :<->text813.htm#9251<->abelian :: Abelian Quotient (FINITELY PRESENTED GROUPS)
5<->AbelianQuotient(G) <->text813.htm#9252<->AbelianQuotient(G) : GrpFP -&gt; GrpAb, Map
5<->ElementaryAbelianQuotient(G, p) <->text813.htm#9253<->ElementaryAbelianQuotient(G, p) : GrpFP, RngIntElt -&gt; GrpAb, Map
5<->AQInvariants :: AbelianQuotientInvariants(G) <->text813.htm#9254<->AQInvariants :: AbelianQuotientInvariants(G) : GrpFP -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(G) <->text813.htm#9254<->AbelianQuotientInvariants(G) : GrpFP -&gt; [ RngIntElt ]
5<->AQInvariants :: AbelianQuotientInvariants(H) <->text813.htm#9255<->AQInvariants :: AbelianQuotientInvariants(H) : GrpFP -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(G, T) <->text813.htm#9255<->AbelianQuotientInvariants(G, T) : GrpFP, Map -> [ RngIntElt ]
5<->AQInvariants(G, T) : GrpFP, Map -> [ RngIntElt ] :: AbelianQuotientInvariants(H) <->text813.htm#9255<->AQInvariants(G, T) : GrpFP, Map -> [ RngIntElt ] :: AbelianQuotientInvariants(H) : GrpFP -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(H) <->text813.htm#9255<->AbelianQuotientInvariants(H) : GrpFP -&gt; [ RngIntElt ]
5<->AQInvariants :: AbelianQuotientInvariants(G, n) <->text813.htm#9256<->AQInvariants :: AbelianQuotientInvariants(G, n) : GrpFP, RngIntElt -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(G, n) <->text813.htm#9256<->AbelianQuotientInvariants(G, n) : GrpFP, RngIntElt -&gt; [ RngIntElt ]
5<->AQInvariants :: AbelianQuotientInvariants(H, n) <->text813.htm#9257<->AQInvariants :: AbelianQuotientInvariants(H, n) : GrpFP, RngIntElt -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(G, T, n) <->text813.htm#9257<->AbelianQuotientInvariants(G, T, n) : GrpFP, Map, RngIntElt -> [ RngIntElt ]
5<->AQInvariants(G, T, n) : GrpFP, Map, RngIntElt -> [ RngIntElt ] :: AbelianQuotientInvariants(H, n) <->text813.htm#9257<->AQInvariants(G, T, n) : GrpFP, Map, RngIntElt -> [ RngIntElt ] :: AbelianQuotientInvariants(H, n) : GrpFP, RngIntElt -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(H, n) <->text813.htm#9257<->AbelianQuotientInvariants(H, n) : GrpFP, RngIntElt -&gt; [ RngIntElt ]
5<->HasComputableAbelianQuotient(G) <->text813.htm#9258<->HasComputableAbelianQuotient(G) : GrpFP -&gt; BoolElt, GrpAb, Map
5<->HasInfiniteComputableAbelianQuotient(G) <->text813.htm#9259<->HasInfiniteComputableAbelianQuotient(G) : GrpFP -&gt; BoolElt, GrpAb, Map
5<->IsPerfect(G) <->text813.htm#9260<->IsPerfect(G) : GrpFP -&gt; BoolElt
5<->TorsionFreeRank(G) <->text813.htm#9261<->TorsionFreeRank(G) : GrpFP -&gt; RngIntElt
4<->GrpFP_1_F27 (Example H75E37)<->text813.htm#9262<->GrpFP_1_F27 (Example H75E37)
4<->Example-F27 :<->text813.htm#9262<->Example-F27 :: GrpFP_1_F27 (Example H75E37)
4<->GrpFP_1_modular-abelian-quotient (Example H75E38)<->text813.htm#9263<->GrpFP_1_modular-abelian-quotient (Example H75E38)
4<->Example-modular-abelian-quotient :<->text813.htm#9263<->Example-modular-abelian-quotient :: GrpFP_1_modular-abelian-quotient (Example H75E38)
5<->HasFiniteAQ :: HasFiniteAbelianQuotient(G) <->text813.htm#9264<->HasFiniteAQ :: HasFiniteAbelianQuotient(G) : GrpFP -&gt; [ RngIntElt ]
5<->HasFiniteAbelianQuotient(G) <->text813.htm#9264<->HasFiniteAbelianQuotient(G) : GrpFP -&gt; [ RngIntElt ]
5<->AQPrimes(G) <->text813.htm#9265<->AQPrimes(G) : GrpFP -&gt; [ RngIntElt ]
3<->abelian :<->text813.htm#9251<->abelian :: Abelian Quotient (FINITELY PRESENTED GROUPS)
3<->p-Quotient (FINITELY PRESENTED GROUPS)<->text813.htm#9266<->p-Quotient (FINITELY PRESENTED GROUPS)
3<->creation :<->text813.htm#9267<->creation :: The Construction of a p-Quotient (FINITELY PRESENTED GROUPS)
5<->pQuotient(F, p, c: parameters) <->text813.htm#9268<->pQuotient(F, p, c: parameters) : GrpFP, RngIntElt, RngIntElt -&gt; GrpPC, Map, SeqEnum , BoolElt
4<->GrpFP_1_pQuotient1 (Example H75E39)<->text813.htm#9269<->GrpFP_1_pQuotient1 (Example H75E39)
4<->Example-pQuotient1 :<->text813.htm#9269<->Example-pQuotient1 :: GrpFP_1_pQuotient1 (Example H75E39)
4<->GrpFP_1_pQuotient2 (Example H75E40)<->text813.htm#9270<->GrpFP_1_pQuotient2 (Example H75E40)
4<->Example-pQuotient2 :<->text813.htm#9270<->Example-pQuotient2 :: GrpFP_1_pQuotient2 (Example H75E40)
4<->GrpFP_1_pQuotient3 (Example H75E41)<->text813.htm#9271<->GrpFP_1_pQuotient3 (Example H75E41)
4<->Example-pQuotient3 :<->text813.htm#9271<->Example-pQuotient3 :: GrpFP_1_pQuotient3 (Example H75E41)
4<->GrpFP_1_pQuotient4 (Example H75E42)<->text813.htm#9272<->GrpFP_1_pQuotient4 (Example H75E42)
4<->Example-pQuotient4 :<->text813.htm#9272<->Example-pQuotient4 :: GrpFP_1_pQuotient4 (Example H75E42)
5<->HaspQuotientDefinitions(G) <->text813.htm#9273<->HaspQuotientDefinitions(G) : GrpPC -&gt; BoolElt
5<->pQuotientDefinitions(G) <->text813.htm#9274<->pQuotientDefinitions(G) : GrpPC -&gt; SeqEnum
3<->creation :<->text813.htm#9267<->creation :: The Construction of a p-Quotient (FINITELY PRESENTED GROUPS)
3<->nilpotent-quotient :<->text813.htm#9275<->nilpotent-quotient :: Nilpotent Quotient (FINITELY PRESENTED GROUPS)
5<->NilpotentQuotient(G, c: parameters) <->text813.htm#9276<->NilpotentQuotient(G, c: parameters) : GrpFP, RngIntElt -&gt; GrpGPC, Map
4<->GrpFP_1_NilpotentQuotient0 (Example H75E43)<->text813.htm#9277<->GrpFP_1_NilpotentQuotient0 (Example H75E43)
4<->Example-NilpotentQuotient0 :<->text813.htm#9277<->Example-NilpotentQuotient0 :: GrpFP_1_NilpotentQuotient0 (Example H75E43)
4<->GrpFP_1_NilpotentQuotient1 (Example H75E44)<->text813.htm#9278<->GrpFP_1_NilpotentQuotient1 (Example H75E44)
4<->Example-NilpotentQuotient1 :<->text813.htm#9278<->Example-NilpotentQuotient1 :: GrpFP_1_NilpotentQuotient1 (Example H75E44)
4<->GrpFP_1_NilpotentQuotient2 (Example H75E45)<->text813.htm#9279<->GrpFP_1_NilpotentQuotient2 (Example H75E45)
4<->Example-NilpotentQuotient2 :<->text813.htm#9279<->Example-NilpotentQuotient2 :: GrpFP_1_NilpotentQuotient2 (Example H75E45)
5<->SetVerbose("NilpotentQuotient", n) <->text813.htm#9280<->SetVerbose("NilpotentQuotient", n) : MonStgElt, RngIntElt -&gt;
4<->GrpFP_1_NilpotentQuotient3 (Example H75E46)<->text813.htm#9281<->GrpFP_1_NilpotentQuotient3 (Example H75E46)
4<->Example-NilpotentQuotient3 :<->text813.htm#9281<->Example-NilpotentQuotient3 :: GrpFP_1_NilpotentQuotient3 (Example H75E46)
3<->nilpotent-quotient :<->text813.htm#9275<->nilpotent-quotient :: Nilpotent Quotient (FINITELY PRESENTED GROUPS)
3<->soluble-quotient :<->text813.htm#9282<->soluble-quotient :: Soluble Quotient (FINITELY PRESENTED GROUPS)
5<->SolubleQuotient :: SolvableQuotient(G : parameters)<->text813.htm#9283<->SolubleQuotient :: SolvableQuotient(G : parameters): GrpFP, RngIntElt                                             -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(G : parameters)<->text813.htm#9283<->SolvableQuotient(G : parameters): GrpFP, RngIntElt                                             -&gt; GrpPC, Map, SeqEnum, MonStgElt
4<->GrpFP_1_SolubleQuotient1 (Example H75E47)<->text813.htm#9284<->GrpFP_1_SolubleQuotient1 (Example H75E47)
4<->Example-SolubleQuotient1 :<->text813.htm#9284<->Example-SolubleQuotient1 :: GrpFP_1_SolubleQuotient1 (Example H75E47)
5<->SolubleQuotient :: SolvableQuotient(F, n : parameters)<->text813.htm#9285<->SolubleQuotient :: SolvableQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(F, P $\colon$ \parameters)<->text813.htm#9285<->SolvableQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt
5<->SolubleQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt :: SolvableQuotient(F, n : parameters)<->text813.htm#9285<->SolubleQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt :: SolvableQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(F, n : parameters)<->text813.htm#9285<->SolvableQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
4<->GrpFP_1_SolubleQuotient2 (Example H75E48)<->text813.htm#9286<->GrpFP_1_SolubleQuotient2 (Example H75E48)
4<->Example-SolubleQuotient2 :<->text813.htm#9286<->Example-SolubleQuotient2 :: GrpFP_1_SolubleQuotient2 (Example H75E48)
3<->soluble-quotient :<->text813.htm#9282<->soluble-quotient :: Soluble Quotient (FINITELY PRESENTED GROUPS)
3<->quotient :<->text813.htm<->quotient :: Abelian, Nilpotent and Soluble  Quotient (FINITELY PRESENTED GROUPS)
3<->subgroup :<->text814.htm<->subgroup :: Subgroups (FINITELY PRESENTED GROUPS)
3<->creation :<->text814.htm#9288<->creation :: Specification of a Subgroup (FINITELY PRESENTED GROUPS)
5<->sub< G | L > <->text814.htm#9289<->sub&lt; G | L &gt; : GrpFP, List -&gt; GrpFP
5<->sub< G | f > <->text814.htm#9290<->sub&lt; G | f &gt; : GrpFP, Hom(Grp) -&gt; GrpFP
5<->ncl< G | L > <->text814.htm#9291<->ncl&lt; G | L &gt; : GrpFP, List -&gt; GrpFP
5<->ncl<G | f> <->text814.htm#9292<->ncl&lt;G | f&gt; : GrpFP, Hom(Grp) -&gt; GrpFP
5<->DerivedSubgroup :: CommutatorSubgroup(G) <->text814.htm#9293<->DerivedSubgroup :: CommutatorSubgroup(G) : GrpFP -&gt; GrpFP
5<->DerivedGroup :: CommutatorSubgroup(G) <->text814.htm#9293<->DerivedGroup :: CommutatorSubgroup(G) : GrpFP -&gt; GrpFP
5<->CommutatorSubgroup(G) <->text814.htm#9293<->CommutatorSubgroup(G) : GrpFP -&gt; GrpFP
4<->GrpFP_1_Subgroups1 (Example H75E49)<->text814.htm#9294<->GrpFP_1_Subgroups1 (Example H75E49)
4<->Example-Subgroups1 :<->text814.htm#9294<->Example-Subgroups1 :: GrpFP_1_Subgroups1 (Example H75E49)
4<->GrpFP_1_Subgroups2 (Example H75E50)<->text814.htm#9295<->GrpFP_1_Subgroups2 (Example H75E50)
4<->Example-Subgroups2 :<->text814.htm#9295<->Example-Subgroups2 :: GrpFP_1_Subgroups2 (Example H75E50)
3<->creation :<->text814.htm#9288<->creation :: Specification of a Subgroup (FINITELY PRESENTED GROUPS)
3<->index-Todd-Coxeter :: Index of a Subgroup<->text814.htm#9296<->index-Todd-Coxeter :: Index of a Subgroup: The Todd- Coxeter Algorithm (FINITELY PRESENTED GROUPS)
5<->ToddCoxeter(G, H: parameters) <->text814.htm#9297<->ToddCoxeter(G, H: parameters) : GrpFP, GrpFP -&gt; RngIntElt, Map, RngIntElt, RngIntElt
5<->FactoredIndex :: Index(G, H: parameters) <->text814.htm#9298<->FactoredIndex :: Index(G, H: parameters) : GrpFP, GrpFP -&gt; RngIntElt
5<->Index(G, H: parameters) <->text814.htm#9298<->Index(G, H: parameters) : GrpFP, GrpFP -&gt; RngIntElt
4<->GrpFP_1_Index1 (Example H75E51)<->text814.htm#9299<->GrpFP_1_Index1 (Example H75E51)
4<->Example-Index1 :<->text814.htm#9299<->Example-Index1 :: GrpFP_1_Index1 (Example H75E51)
5<->FactoredOrder :: Order(G: parameters) <->text814.htm#9300<->FactoredOrder :: Order(G: parameters) : GrpFP -&gt; RngIntElt
5<->Order(G: parameters) <->text814.htm#9300<->Order(G: parameters) : GrpFP -&gt; RngIntElt
4<->GrpFP_1_Order11 (Example H75E52)<->text814.htm#9301<->GrpFP_1_Order11 (Example H75E52)
4<->Example-Order11 :<->text814.htm#9301<->Example-Order11 :: GrpFP_1_Order11 (Example H75E52)
4<->GrpFP_1_HN (Example H75E53)<->text814.htm#9302<->GrpFP_1_HN (Example H75E53)
4<->Example-HN :<->text814.htm#9302<->Example-HN :: GrpFP_1_HN (Example H75E53)
4<->GrpFP_1_Family (Example H75E54)<->text814.htm#9303<->GrpFP_1_Family (Example H75E54)
4<->Example-Family :<->text814.htm#9303<->Example-Family :: GrpFP_1_Family (Example H75E54)
3<->index-Todd-Coxeter :: Index of a Subgroup<->text814.htm#9296<->index-Todd-Coxeter :: Index of a Subgroup: The Todd- Coxeter Algorithm (FINITELY PRESENTED GROUPS)
3<->indirect-Todd-Coxeter :<->text814.htm#9304<->indirect-Todd-Coxeter :: Implicit Invocation of the Todd- Coxeter Algorithm (FINITELY PRESENTED GROUPS)
5<->SetGlobalTCParameters(: parameters) <->text814.htm#9305<->SetGlobalTCParameters(: parameters) : -&gt;
5<->UnsetGlobalTCParameters() <->text814.htm#9306<->UnsetGlobalTCParameters() : -&gt;
4<->GrpFP_1_ImplicitCosetEnumeration (Example H75E55)<->text814.htm#9307<->GrpFP_1_ImplicitCosetEnumeration (Example H75E55)
4<->Example-ImplicitCosetEnumeration :<->text814.htm#9307<->Example-ImplicitCosetEnumeration :: GrpFP_1_ImplicitCosetEnumeration (Example H75E55)
3<->indirect-Todd-Coxeter :<->text814.htm#9304<->indirect-Todd-Coxeter :: Implicit Invocation of the Todd- Coxeter Algorithm (FINITELY PRESENTED GROUPS)
3<->subgroup-presentation :<->text814.htm#9308<->subgroup-presentation :: Constructing a Presentation for a  Subgroup (FINITELY PRESENTED GROUPS)
3<->introduction :<->text814.htm#9309<->introduction :: Introduction (FINITELY PRESENTED GROUPS)
3<->rewriting :<->text814.htm#9310<->rewriting :: Rewriting (FINITELY PRESENTED GROUPS)
5<->Rewrite(G, H : parameters) <->text814.htm#9311<->Rewrite(G, H : parameters) : GrpFP, GrpFP -&gt; GrpFP, Map
5<->Rewrite(G, ~H : parameters) <->text814.htm#9312<->Rewrite(G, ~H : parameters) : GrpFP, GrpFP -&gt;
4<->GrpFP_1_Rewrite (Example H75E56)<->text814.htm#9313<->GrpFP_1_Rewrite (Example H75E56)
4<->Example-Rewrite :<->text814.htm#9313<->Example-Rewrite :: GrpFP_1_Rewrite (Example H75E56)
4<->GrpFP_1_Rewrite2 (Example H75E57)<->text814.htm#9314<->GrpFP_1_Rewrite2 (Example H75E57)
4<->Example-Rewrite2 :<->text814.htm#9314<->Example-Rewrite2 :: GrpFP_1_Rewrite2 (Example H75E57)
3<->rewriting :<->text814.htm#9310<->rewriting :: Rewriting (FINITELY PRESENTED GROUPS)
3<->subgroup-presentation :<->text814.htm#9308<->subgroup-presentation :: Constructing a Presentation for a  Subgroup (FINITELY PRESENTED GROUPS)
3<->subgroup :<->text814.htm<->subgroup :: Subgroups (FINITELY PRESENTED GROUPS)
3<->subgroup :<->text815.htm<->subgroup :: Subgroups of Finite Index (FINITELY PRESENTED GROUPS)
3<->low-index-subgroup :<->text815.htm#9316<->low-index-subgroup :: Low Index Subgroups (FINITELY PRESENTED GROUPS)
5<->LowIndexSubgroups(G, R $\colon$ \parameters) <->text815.htm#9317<->LowIndexSubgroups(G, R $\colon$ \parameters) : GrpFP, RngIntElt -> [ \brace GrpFPElt \rbrace ]
5<->LowIndexSubgroups(G, R$\colon$ \parameters) <->text815.htm#9317<->LowIndexSubgroups(G, R$\colon$ \parameters) : GrpFP, <RngIntElt, RngIntElt> -> [ GrpFP ]
5<->LowIndexSubgroups(G, R$\colon$ \parameters) <->text815.htm#9317<->LowIndexSubgroups(G, R$\colon$ \parameters) : GrpFP, <RngIntElt, RngIntElt> -> [ $\brace$ GrpFPElt $\rbrace$ ]
5<->LowIndexSubgroups(G, R : parameters) <->text815.htm#9317<->LowIndexSubgroups(G, R : parameters) : GrpFP, RngIntElt -&gt; [ GrpFP ]
4<->GrpFP_1_Lix1 (Example H75E58)<->text815.htm#9318<->GrpFP_1_Lix1 (Example H75E58)
4<->Example-Lix1 :<->text815.htm#9318<->Example-Lix1 :: GrpFP_1_Lix1 (Example H75E58)
4<->GrpFP_1_Lix2 (Example H75E59)<->text815.htm#9319<->GrpFP_1_Lix2 (Example H75E59)
4<->Example-Lix2 :<->text815.htm#9319<->Example-Lix2 :: GrpFP_1_Lix2 (Example H75E59)
5<->LowIndexProcess(G, R$\colon$ \parameters) <->text815.htm#9320<->LowIndexProcess(G, R$\colon$ \parameters) : GrpFP, $<$ RngIntElt, RngIntElt $>$ -> Process(Lix)
5<->LowIndexProcess(G, R : parameters) <->text815.htm#9320<->LowIndexProcess(G, R : parameters) : GrpFP, RngIntElt -&gt; Process(Lix)
5<->NextSubgroup($\sim$P, $\sim$G) <->text815.htm#9321<->NextSubgroup($\sim$P, $\sim$G) : GrpFPLixProc, GrpFP ->
5<->NextSubgroup(~P) <->text815.htm#9321<->NextSubgroup(~P) : GrpFPLixProc -&gt;
5<->ExtractGroup(P) <->text815.htm#9322<->ExtractGroup(P) : GrpFPLixProc -&gt; GrpFP
5<->ExtractGenerators(P) <->text815.htm#9323<->ExtractGenerators(P) : GrpFPLixProc -&gt; { GrpFPElt }
5<->IsEmpty(P) <->text815.htm#9324<->IsEmpty(P) : GrpFPLixProc -&gt; BoolElt
5<->IsValid(P) <->text815.htm#9325<->IsValid(P) : GrpFPLixProc -&gt; BoolElt
4<->GrpFP_1_Lix3 (Example H75E60)<->text815.htm#9326<->GrpFP_1_Lix3 (Example H75E60)
4<->Example-Lix3 :<->text815.htm#9326<->Example-Lix3 :: GrpFP_1_Lix3 (Example H75E60)
4<->GrpFP_1_Lix4 (Example H75E61)<->text815.htm#9327<->GrpFP_1_Lix4 (Example H75E61)
4<->Example-Lix4 :<->text815.htm#9327<->Example-Lix4 :: GrpFP_1_Lix4 (Example H75E61)
4<->GrpFP_1_Lix5 (Example H75E62)<->text815.htm#9328<->GrpFP_1_Lix5 (Example H75E62)
4<->Example-Lix5 :<->text815.htm#9328<->Example-Lix5 :: GrpFP_1_Lix5 (Example H75E62)
5<->LowIndexNormalSubgroups(G, n: parameters) <->text815.htm#9329<->LowIndexNormalSubgroups(G, n: parameters) : GrpFP, RngIntElt -&gt; [ Rec ]
3<->low-index-subgroup :<->text815.htm#9316<->low-index-subgroup :: Low Index Subgroups (FINITELY PRESENTED GROUPS)
3<->operation-subgroup :<->text815.htm#9330<->operation-subgroup :: Subgroup Constructions (FINITELY PRESENTED GROUPS)
5<->Conjugate :: H ^ u <->text815.htm#9331<->Conjugate :: H ^ u : GrpFP, GrpFPElt -&gt; GrpFP
5<->H ^ u <->text815.htm#9331<->H ^ u : GrpFP, GrpFPElt -&gt; GrpFP
5<->H meet K <->text815.htm#9332<->H meet K : GrpFP, GrpFP -&gt; GrpFP
5<->Core(G, H) <->text815.htm#9333<->Core(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->GeneratingWords(G, H) <->text815.htm#9334<->GeneratingWords(G, H) : GrpFP, GrpFP -&gt; { GrpFPElt }
5<->MaximalOvergroup(G, H) <->text815.htm#9335<->MaximalOvergroup(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->MinimalOvergroup(G, H) <->text815.htm#9336<->MinimalOvergroup(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->NormalClosure :: H ^ G <->text815.htm#9337<->NormalClosure :: H ^ G : GrpFP, GrpFP -&gt; GrpFP
5<->H ^ G <->text815.htm#9337<->H ^ G : GrpFP, GrpFP -&gt; GrpFP
5<->Normalizer :: Normaliser(G, H) <->text815.htm#9338<->Normalizer :: Normaliser(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->Normaliser(G, H) <->text815.htm#9338<->Normaliser(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->SchreierGenerators(G, H : parameters) <->text815.htm#9339<->SchreierGenerators(G, H : parameters) : GrpFP, GrpFP -&gt; { GrpFPElt }
5<->Transversal :: SchreierSystem(G, H) <->text815.htm#9340<->Transversal :: SchreierSystem(G, H) : GrpFP, GrpFP -&gt; {@ GrpFPElt  @}, Map
5<->SchreierSystem(G, H) <->text815.htm#9340<->SchreierSystem(G, H) : GrpFP, GrpFP -&gt; {@ GrpFPElt  @}, Map
5<->Transversal(G, H, K) <->text815.htm#9341<->Transversal(G, H, K) : GrpFP, GrpFP, GrpFP -&gt; {@ GrpFPElt  @}, Map
4<->GrpFP_1_SubgroupConstructions (Example H75E63)<->text815.htm#9342<->GrpFP_1_SubgroupConstructions (Example H75E63)
4<->Example-SubgroupConstructions :<->text815.htm#9342<->Example-SubgroupConstructions :: GrpFP_1_SubgroupConstructions (Example H75E63)
4<->GrpFP_1_SchreierGenerators (Example H75E64)<->text815.htm#9343<->GrpFP_1_SchreierGenerators (Example H75E64)
4<->Example-SchreierGenerators :<->text815.htm#9343<->Example-SchreierGenerators :: GrpFP_1_SchreierGenerators (Example H75E64)
3<->operation-subgroup :<->text815.htm#9330<->operation-subgroup :: Subgroup Constructions (FINITELY PRESENTED GROUPS)
3<->Boolean :<->text815.htm#9344<->Boolean :: Properties of Group and Subgroups (FINITELY PRESENTED GROUPS)
5<->u &isin;H <->text815.htm#9345<->u &isin;H : GrpFPElt, GrpFP -&gt; BoolElt
5<->u &notin;H <->text815.htm#9346<->u &notin;H : GrpFPElt, GrpFP -&gt; BoolElt
5<->H eq K <->text815.htm#9347<->H eq K : GrpFP, GrpFP -&gt; BoolElt
5<->H &ne;K <->text815.htm#9348<->H &ne;K : GrpFP, GrpFP -&gt; BoolElt
5<->subset :: H &sub;K <->text815.htm#9349<->subset :: H &sub;K : GrpFP, GrpFP -&gt; BoolElt
5<->H notsubset K <->text815.htm#9350<->H notsubset K : GrpFP, GrpFP -&gt; BoolElt
5<->IsConjugate(G, H, K) <->text815.htm#9351<->IsConjugate(G, H, K) : GrpFP, GrpFP, GrpFP -&gt; BoolElt, GrpFPElt
5<->IsNormal(G, H) <->text815.htm#9352<->IsNormal(G, H) : GrpFP, GrpFP -&gt; BoolElt
5<->IsMaximal(G, H) <->text815.htm#9353<->IsMaximal(G, H) : GrpFP, GrpFP -&gt; BoolElt
5<->IsSelfNormalizing(G, H) <->text815.htm#9354<->IsSelfNormalizing(G, H) : GrpFP, GrpFP -&gt; BoolElt
4<->GrpFP_1_SubgroupOps (Example H75E65)<->text815.htm#9355<->GrpFP_1_SubgroupOps (Example H75E65)
4<->Example-SubgroupOps :<->text815.htm#9355<->Example-SubgroupOps :: GrpFP_1_SubgroupOps (Example H75E65)
4<->GrpFP_1_BuildSubgroups (Example H75E66)<->text815.htm#9356<->GrpFP_1_BuildSubgroups (Example H75E66)
4<->Example-BuildSubgroups :<->text815.htm#9356<->Example-BuildSubgroups :: GrpFP_1_BuildSubgroups (Example H75E66)
5<->IsLarge(G, L, U:parameters) <->text815.htm#9357<->IsLarge(G, L, U:parameters) : GrpFP, RngIntElt, RngIntElt -&gt; BoolElt, GrpFP
3<->Boolean :<->text815.htm#9344<->Boolean :: Properties of Group and Subgroups (FINITELY PRESENTED GROUPS)
3<->subgroup :<->text815.htm<->subgroup :: Subgroups of Finite Index (FINITELY PRESENTED GROUPS)
3<->coset-space-table :<->text816.htm<->coset-space-table :: Coset Spaces and Tables (FINITELY PRESENTED GROUPS)
3<->coset-table :<->text816.htm#9359<->coset-table :: Coset Tables (FINITELY PRESENTED GROUPS)
5<->CosetTable(G, H: parameters) <->text816.htm#9360<->CosetTable(G, H: parameters) : GrpFP, GrpFP -&gt; Map
5<->CosetTableToRepresentation(G, T)<->text816.htm#9361<->CosetTableToRepresentation(G, T): GrpFP, Map -&gt; Map, GrpPerm, Grp
5<->CosetTableToPermutationGroup(G, T) <->text816.htm#9362<->CosetTableToPermutationGroup(G, T) : GrpFP, Map -&gt; GrpPerm
4<->GrpFP_1_CosetTable1 (Example H75E67)<->text816.htm#9363<->GrpFP_1_CosetTable1 (Example H75E67)
4<->Example-CosetTable1 :<->text816.htm#9363<->Example-CosetTable1 :: GrpFP_1_CosetTable1 (Example H75E67)
3<->coset-table :<->text816.htm#9359<->coset-table :: Coset Tables (FINITELY PRESENTED GROUPS)
3<->coset-space :: Coset Spaces<->text816.htm#9364<->coset-space :: Coset Spaces: Construction (FINITELY PRESENTED GROUPS)
5<->CosetSpace(G, H: parameters) : GrpFP, GrpFP<->text816.htm#9365<->CosetSpace(G, H: parameters) : GrpFP, GrpFP: -&gt; GrpFPCos
5<->LeftCosetSpace :: RightCosetSpace(G, H: parameters) <->text816.htm#9366<->LeftCosetSpace :: RightCosetSpace(G, H: parameters) : GrpFP, GrpFP -&gt; GrpFPCos
5<->RightCosetSpace(G, H: parameters) <->text816.htm#9366<->RightCosetSpace(G, H: parameters) : GrpFP, GrpFP -&gt; GrpFPCos
3<->coset-space :: Coset Spaces<->text816.htm#9364<->coset-space :: Coset Spaces: Construction (FINITELY PRESENTED GROUPS)
3<->operation :: Coset Spaces<->text816.htm#9367<->operation :: Coset Spaces: Elementary Operations (FINITELY PRESENTED GROUPS)
5<->H * g <->text816.htm#9368<->H * g : GrpFP, GrpFPElt -&gt; GrpFPCosElt
5<->C * g <->text816.htm#9369<->C * g : GrpFPCosElt, GrpFPElt -&gt; GrpFPCosElt
5<->C * D <->text816.htm#9370<->C * D : GrpFPCosElt, GrpFPCosElt -&gt; GrpFPCosElt
5<->g in C <->text816.htm#9371<->g in C : GrpFPElt, GrpFPCosElt -&gt; BoolElt
5<->g notin C <->text816.htm#9372<->g notin C : GrpFPElt, GrpFPCosElt -&gt; BoolElt
5<->C1 eq C2 <->text816.htm#9373<->C1 eq C2 : GrpFPCosElt, GrpFPCosElt -&gt; BoolElt
5<->C1 ne C2 <->text816.htm#9374<->C1 ne C2 : GrpFPCosElt, GrpFPCosElt -&gt; BoolElt
3<->operation :: Coset Spaces<->text816.htm#9367<->operation :: Coset Spaces: Elementary Operations (FINITELY PRESENTED GROUPS)
3<->access :<->text816.htm#9375<->access :: Accessing Information (FINITELY PRESENTED GROUPS)
5<-># V <->text816.htm#9376<-># V : GrpFPCos -&gt; RngIntElt
5<->Action(V) <->text816.htm#9377<->Action(V) : GrpFPCos -&gt; Map
5<->() :: <i, w> @ T <->text816.htm#9378<->() :: &lt;i, w&gt; @ T : GrpFPCosElt, GrpFPElt, Map -&gt; GrpFPElt
5<-><i, w> @ T <->text816.htm#9378<->&lt;i, w&gt; @ T : GrpFPCosElt, GrpFPElt, Map -&gt; GrpFPElt
5<->ExplicitCoset(V, i) <->text816.htm#9379<->ExplicitCoset(V, i) : GrpFPCos, RngIntElt -&gt; GrpFPCosElt
5<->IndexedCoset(V, w) <->text816.htm#9380<->IndexedCoset(V, w) : GrpFPCos, GrpFPElt -&gt; GrpFPCosElt
5<->IndexedCoset(V, C) <->text816.htm#9381<->IndexedCoset(V, C) : GrpFPCos, GrpFPCosElt -&gt; GrpFPCosElt
5<->Group(V) <->text816.htm#9382<->Group(V) : GrpFPCos -&gt; GrpFP
5<->Subgroup(V) <->text816.htm#9383<->Subgroup(V) : GrpFPCos -&gt; GrpFP
5<->IsComplete(V) <->text816.htm#9384<->IsComplete(V) : GrpFPCos -&gt; BoolElt
5<->ExcludedConjugates(T) <->text816.htm#9385<->ExcludedConjugates(T) : Map -> $\brace$ GrpFPElt $\rbrace$
5<->ExcludedConjugates(V) <->text816.htm#9385<->ExcludedConjugates(V) : GrpFPCos -&gt; { GrpFPElt }
5<->RightTransversal :: Transversal(G, H) <->text816.htm#9386<->RightTransversal :: Transversal(G, H) : GrpFP, GrpFP -&gt; {@ GrpFPElt  @}, Map
5<->Transversal(G, H) <->text816.htm#9386<->Transversal(G, H) : GrpFP, GrpFP -&gt; {@ GrpFPElt  @}, Map
4<->GrpFP_1_CosetTable2 (Example H75E68)<->text816.htm#9387<->GrpFP_1_CosetTable2 (Example H75E68)
4<->Example-CosetTable2 :<->text816.htm#9387<->Example-CosetTable2 :: GrpFP_1_CosetTable2 (Example H75E68)
4<->GrpFP_1_CosetSpace (Example H75E69)<->text816.htm#9388<->GrpFP_1_CosetSpace (Example H75E69)
4<->Example-CosetSpace :<->text816.htm#9388<->Example-CosetSpace :: GrpFP_1_CosetSpace (Example H75E69)
4<->GrpFP_1_DerSub (Example H75E70)<->text816.htm#9389<->GrpFP_1_DerSub (Example H75E70)
4<->Example-DerSub :<->text816.htm#9389<->Example-DerSub :: GrpFP_1_DerSub (Example H75E70)
4<->GrpFP_1_ExcludedConjugates (Example H75E71)<->text816.htm#9390<->GrpFP_1_ExcludedConjugates (Example H75E71)
4<->Example-ExcludedConjugates :<->text816.htm#9390<->Example-ExcludedConjugates :: GrpFP_1_ExcludedConjugates (Example H75E71)
3<->access :<->text816.htm#9375<->access :: Accessing Information (FINITELY PRESENTED GROUPS)
3<->double-cosets :: Double Coset Spaces<->text816.htm#9391<->double-cosets :: Double Coset Spaces: Construction (FINITELY PRESENTED GROUPS)
5<->DoubleCoset(G, H, g, K ) <->text816.htm#9392<->DoubleCoset(G, H, g, K ) : GrpFP, GrpFP, GrpFPElt, GrpFP -&gt; GrpFPDcosElt
5<->DoubleCosets(G, H, K) <->text816.htm#9393<->DoubleCosets(G, H, K) : GrpFP, GrpFP, GrpFP -&gt; { GrpFPDcosElt }
4<->GrpFP_1_DoubleCosets (Example H75E72)<->text816.htm#9394<->GrpFP_1_DoubleCosets (Example H75E72)
4<->Example-DoubleCosets :<->text816.htm#9394<->Example-DoubleCosets :: GrpFP_1_DoubleCosets (Example H75E72)
3<->double-cosets :: Double Coset Spaces<->text816.htm#9391<->double-cosets :: Double Coset Spaces: Construction (FINITELY PRESENTED GROUPS)
3<->element :: Coset Spaces<->text816.htm#9395<->element :: Coset Spaces: Selection of Cosets (FINITELY PRESENTED GROUPS)
5<->CosetSatisfying :: CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }<->text816.htm#9396<->CosetSatisfying :: CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }: -&gt; { GrpFPCosElt }
5<->CosetsSatisfying(V, S$\colon$ \parameters) : GrpFPCos, $\brace$ GrpFPElt $\rbrace$<->text816.htm#9396<->CosetsSatisfying(V, S$\colon$ \parameters) : GrpFPCos, $\brace$ GrpFPElt $\rbrace$: -> $\brace$ GrpFPCosElt $\rbrace$
5<->CosetSatisfying(V, S$\colon$ \parameters) : GrpFPCos, $\brace$ GrpFPElt $\rbrace$: -> $\brace$ GrpFPCosElt $\rbrace$ :: CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }<->text816.htm#9396<->CosetSatisfying(V, S$\colon$ \parameters) : GrpFPCos, $\brace$ GrpFPElt $\rbrace$: -> $\brace$ GrpFPCosElt $\rbrace$ :: CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }: -&gt; { GrpFPCosElt }
5<->CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }<->text816.htm#9396<->CosetsSatisfying(T, S: parameters) : Map, { GrpFPElt }: -&gt; { GrpFPCosElt }
4<->GrpFP_1_CosetSatisfying (Example H75E73)<->text816.htm#9397<->GrpFP_1_CosetSatisfying (Example H75E73)
4<->Example-CosetSatisfying :<->text816.htm#9397<->Example-CosetSatisfying :: GrpFP_1_CosetSatisfying (Example H75E73)
3<->element :: Coset Spaces<->text816.htm#9395<->element :: Coset Spaces: Selection of Cosets (FINITELY PRESENTED GROUPS)
3<->induced-homomorphism :: Coset Spaces<->text816.htm#9398<->induced-homomorphism :: Coset Spaces: Induced  Homomorphism (FINITELY PRESENTED GROUPS)
5<->CosetAction(G, H) <->text816.htm#9399<->CosetAction(G, H) : Grp, Grp -&gt; Hom(Grp), GrpPerm, Grp
5<->CosetAction(V) <->text816.htm#9400<->CosetAction(V) : GrpFPCos -&gt; Hom(Grp), GrpPerm
5<->CosetImage(G, H) <->text816.htm#9401<->CosetImage(G, H) : Grp, Grp -&gt; GrpPerm
5<->CosetImage(V) <->text816.htm#9402<->CosetImage(V) : GrpFPCos -&gt; GrpPerm
5<->CosetKernel(G, H) <->text816.htm#9403<->CosetKernel(G, H) : GrpFP, GrpFP -&gt; GrpFP
5<->CosetKernel(V) <->text816.htm#9404<->CosetKernel(V) : GrpFPCos -&gt; GrpFP
4<->GrpFP_1_Co1 (Example H75E74)<->text816.htm#9405<->GrpFP_1_Co1 (Example H75E74)
4<->Example-Co1 :<->text816.htm#9405<->Example-Co1 :: GrpFP_1_Co1 (Example H75E74)
4<->GrpFP_1_G23 (Example H75E75)<->text816.htm#9406<->GrpFP_1_G23 (Example H75E75)
4<->Example-G23 :<->text816.htm#9406<->Example-G23 :: GrpFP_1_G23 (Example H75E75)
3<->induced-homomorphism :: Coset Spaces<->text816.htm#9398<->induced-homomorphism :: Coset Spaces: Induced  Homomorphism (FINITELY PRESENTED GROUPS)
3<->coset-space-table :<->text816.htm<->coset-space-table :: Coset Spaces and Tables (FINITELY PRESENTED GROUPS)
3<->simplification :<->text817.htm<->simplification :: Simplification (FINITELY PRESENTED GROUPS)
3<->generator_reduction :<->text817.htm#9408<->generator_reduction :: Reducing Generating Sets (FINITELY PRESENTED GROUPS)
5<->ReduceGenerators(G) <->text817.htm#9409<->ReduceGenerators(G) : GrpFP -&gt; GrpFP, Map
3<->generator_reduction :<->text817.htm#9408<->generator_reduction :: Reducing Generating Sets (FINITELY PRESENTED GROUPS)
3<->tietze :<->text817.htm#9410<->tietze :: Tietze Transformations (FINITELY PRESENTED GROUPS)
5<->Simplify(G: parameters) <->text817.htm#9411<->Simplify(G: parameters) : GrpFP -&gt; GrpFP, Map
4<->GrpFP_1_Simplify1 (Example H75E76)<->text817.htm#9412<->GrpFP_1_Simplify1 (Example H75E76)
4<->Example-Simplify1 :<->text817.htm#9412<->Example-Simplify1 :: GrpFP_1_Simplify1 (Example H75E76)
5<->SimplifyLength(G: parameters) <->text817.htm#9413<->SimplifyLength(G: parameters) : GrpFP -&gt; GrpFP, Map
5<->TietzeProcess(G: parameters) <->text817.htm#9414<->TietzeProcess(G: parameters) : GrpFP -&gt; Process(Tietze)
5<->ShowOptions(~P : parameters) <->text817.htm#9415<->ShowOptions(~P : parameters) : GrpFPTietzeProc -&gt;
5<->SetOptions(~P : parameters) <->text817.htm#9416<->SetOptions(~P : parameters) : GrpFPTietzeProc -&gt;
5<->SimplifyPresentation :: Simplify(~P : parameters) <->text817.htm#9417<->SimplifyPresentation :: Simplify(~P : parameters) : GrpFPTietzeProc -&gt;
5<->Simplify(~P : parameters) <->text817.htm#9417<->Simplify(~P : parameters) : GrpFPTietzeProc -&gt;
5<->SimplifyLength(~P : parameters) <->text817.htm#9418<->SimplifyLength(~P : parameters) : GrpFPTietzeProc -&gt;
5<->EliminateGenerators :: Eliminate(~P: parameters) <->text817.htm#9419<->EliminateGenerators :: Eliminate(~P: parameters) : GrpFPTietzeProc -&gt;
5<->Eliminate(~P: parameters) <->text817.htm#9419<->Eliminate(~P: parameters) : GrpFPTietzeProc -&gt;
5<->Search(~P: parameters) <->text817.htm#9420<->Search(~P: parameters) : GrpFPTietzeProc -&gt;
5<->SearchEqual(~P: parameters) <->text817.htm#9421<->SearchEqual(~P: parameters) : GrpFPTietzeProc -&gt;
5<->Group(P) <->text817.htm#9422<->Group(P) : GrpFPTietzeProc -&gt; GrpFP, Map
5<->Ngens :: NumberOfGenerators(P) <->text817.htm#9423<->Ngens :: NumberOfGenerators(P) : GrpFPTietzeProc -&gt; RngIntElt
5<->NumberOfGenerators(P) <->text817.htm#9423<->NumberOfGenerators(P) : GrpFPTietzeProc -&gt; RngIntElt
5<->Nrels :: NumberOfRelations(P) <->text817.htm#9424<->Nrels :: NumberOfRelations(P) : GrpFPTietzeProc -&gt; RngIntElt
5<->NumberOfRelations(P) <->text817.htm#9424<->NumberOfRelations(P) : GrpFPTietzeProc -&gt; RngIntElt
5<->PresentationLength(P) <->text817.htm#9425<->PresentationLength(P) : GrpFPTietzeProc -&gt; RngIntElt
4<->GrpFP_1_F276 (Example H75E77)<->text817.htm#9426<->GrpFP_1_F276 (Example H75E77)
4<->Example-F276 :<->text817.htm#9426<->Example-F276 :: GrpFP_1_F276 (Example H75E77)
4<->GrpFP_1_ReduceGeneratingSet (Example H75E78)<->text817.htm#9427<->GrpFP_1_ReduceGeneratingSet (Example H75E78)
4<->Example-ReduceGeneratingSet :<->text817.htm#9427<->Example-ReduceGeneratingSet :: GrpFP_1_ReduceGeneratingSet (Example H75E78)
4<->GrpFP_1_F29 (Example H75E79)<->text817.htm#9428<->GrpFP_1_F29 (Example H75E79)
4<->Example-F29 :<->text817.htm#9428<->Example-F29 :: GrpFP_1_F29 (Example H75E79)
4<->GrpFP_1_L372 (Example H75E80)<->text817.htm#9429<->GrpFP_1_L372 (Example H75E80)
4<->Example-L372 :<->text817.htm#9429<->Example-L372 :: GrpFP_1_L372 (Example H75E80)
3<->tietze :<->text817.htm#9410<->tietze :: Tietze Transformations (FINITELY PRESENTED GROUPS)
3<->simplification :<->text817.htm<->simplification :: Simplification (FINITELY PRESENTED GROUPS)
3<->character-representation :<->text818.htm<->character-representation :: Representation Theory (FINITELY PRESENTED GROUPS)
5<->GModulePrimes(G, A) <->text818.htm#9431<->GModulePrimes(G, A) : GrpFP, GrpFP -&gt; SetMulti
5<->GModulePrimes(G, A, B) <->text818.htm#9432<->GModulePrimes(G, A, B) : GrpFP, GrpFP, GrpFP -&gt; SetMulti
5<->GModule(G, A, p) <->text818.htm#9433<->GModule(G, A, p) : GrpFP, GrpFP, RngIntElt -&gt; ModGrp, Map
5<->GModule(G, A, B) <->text818.htm#9434<->GModule(G, A, B) : GrpFP, GrpFP, GrpFP -> ModGrp, Map
5<->GModule(G, A, B, p) <->text818.htm#9434<->GModule(G, A, B, p) : GrpFP, GrpFP, GrpFP, RngIntElt -&gt; ModGrp, Map
5<->Pullback(f, N) <->text818.htm#9435<->Pullback(f, N) : Map, ModGrp -&gt; GrpFP
4<->GrpFP_1_RepresentationTheory (Example H75E81)<->text818.htm#9436<->GrpFP_1_RepresentationTheory (Example H75E81)
4<->Example-RepresentationTheory :<->text818.htm#9436<->Example-RepresentationTheory :: GrpFP_1_RepresentationTheory (Example H75E81)
4<->GrpFP_1_gmoduleprimes (Example H75E82)<->text818.htm#9437<->GrpFP_1_gmoduleprimes (Example H75E82)
4<->Example-gmoduleprimes :<->text818.htm#9437<->Example-gmoduleprimes :: GrpFP_1_gmoduleprimes (Example H75E82)
3<->character-representation :<->text818.htm<->character-representation :: Representation Theory (FINITELY PRESENTED GROUPS)
3<->group-identification :<->text819.htm<->group-identification :: Small Group Identification (FINITELY PRESENTED GROUPS)
5<->IdentifyGroup(D, G)<->text819.htm#9439<->IdentifyGroup(D, G): DB, GrpFP -> Tup
5<->IdentifyGroup(G)<->text819.htm#9439<->IdentifyGroup(G): GrpFP -&gt; Tup
4<->GrpFP_1_IdentifyGroup (Example H75E83)<->text819.htm#9440<->GrpFP_1_IdentifyGroup (Example H75E83)
4<->Example-IdentifyGroup :<->text819.htm#9440<->Example-IdentifyGroup :: GrpFP_1_IdentifyGroup (Example H75E83)
3<->concrete-small :<->text819.htm#9441<->concrete-small :: Concrete Representations of Small Groups (FINITELY PRESENTED GROUPS)
5<->PermutationGroup(G) <->text819.htm#9442<->PermutationGroup(G) : GrpFP -&gt; GrpPerm, GrpHom
5<->PCGroup(G) <->text819.htm#9443<->PCGroup(G) : GrpFP -&gt; GrpPC, GrpHom
3<->concrete-small :<->text819.htm#9441<->concrete-small :: Concrete Representations of Small Groups (FINITELY PRESENTED GROUPS)
3<->group-identification :<->text819.htm<->group-identification :: Small Group Identification (FINITELY PRESENTED GROUPS)
3<->subfree :<->text820.htm<->subfree :: Finitely Generated Subgroups of Free Groups (FINITELY PRESENTED GROUPS)
5<->FSSupergroup(F) <->text820.htm#9445<->FSSupergroup(F) : GrpFP -&gt; GrpFP
5<->FSIsIn(H,x) <->text820.htm#9446<->FSIsIn(H,x) : GrpFP, GrpFPElt -&gt; BoolElt
5<->FSIsSubgroup(H,K) <->text820.htm#9447<->FSIsSubgroup(H,K) : GrpFP, GrpFP -&gt; BoolElt
5<->FSEqual(H,K) <->text820.htm#9448<->FSEqual(H,K) : GrpFP, GrpFP -&gt; BoolElt
5<->FSIndex(F,H) <->text820.htm#9449<->FSIndex(F,H) : GrpFP, GrpFP -&gt; RngIntElt
5<->FSFiniteIndex(F,H) <->text820.htm#9450<->FSFiniteIndex(F,H) : GrpFP, GrpFP -&gt; BoolElt
5<->FSFreeGenerators(H) <->text820.htm#9451<->FSFreeGenerators(H) : GrpFP -&gt; SeqEnum, GrpFP
5<->FSMeet(H,K) <->text820.htm#9452<->FSMeet(H,K) : GrpFP, GrpFP -&gt; GrpFP
5<->FSCentralizer :: FSCentraliser(F,x) <->text820.htm#9453<->FSCentralizer :: FSCentraliser(F,x) : GrpFP, GrpFPElt -&gt; GrpFP
5<->FSCentraliser(F,x) <->text820.htm#9453<->FSCentraliser(F,x) : GrpFP, GrpFPElt -&gt; GrpFP
5<->FSIsConjugate(F,x,y) <->text820.htm#9454<->FSIsConjugate(F,x,y) : GrpFP, GrpFPElt, GrpFPElt -&gt; BoolElt, GrpFPElt
5<->FSCentralizer :: FSCentraliser(F,H) <->text820.htm#9455<->FSCentralizer :: FSCentraliser(F,H) : GrpFP, GrpFP -&gt; GrpFP
5<->FSCentraliser(F,H) <->text820.htm#9455<->FSCentraliser(F,H) : GrpFP, GrpFP -&gt; GrpFP
5<->FSNormalizer :: FSNormaliser(F,H) <->text820.htm#9456<->FSNormalizer :: FSNormaliser(F,H) : GrpFP, GrpFP -&gt; GrpFP
5<->FSNormaliser(F,H) <->text820.htm#9456<->FSNormaliser(F,H) : GrpFP, GrpFP -&gt; GrpFP
5<->FSIsConjugate(F,H,K) <->text820.htm#9457<->FSIsConjugate(F,H,K) : GrpFP, GrpFP, GrpFP -&gt; BoolElt, GrpFPElt
3<->subfree :<->text820.htm<->subfree :: Finitely Generated Subgroups of Free Groups (FINITELY PRESENTED GROUPS)
3<->finitely-presented :<->text808.htm<->finitely-presented :: FINITELY PRESENTED GROUPS
3<->finitely-presented-groups-advanced :: FINITELY PRESENTED GROUPS<->text823.htm<->finitely-presented-groups-advanced :: FINITELY PRESENTED GROUPS: ADVANCED
3<->introduction :: Introduction (FINITELY PRESENTED GROUPS<->text824.htm<->introduction :: Introduction (FINITELY PRESENTED GROUPS: ADVANCED)
3<->low-level :: Low Level Operations on Presentations and Words (FINITELY PRESENTED GROUPS<->text825.htm<->low-level :: Low Level Operations on Presentations and Words (FINITELY PRESENTED GROUPS: ADVANCED)
3<->modifying-presentations :: Modifying Presentations (FINITELY PRESENTED GROUPS<->text825.htm#9463<->modifying-presentations :: Modifying Presentations (FINITELY PRESENTED GROUPS: ADVANCED)
5<->AddGenerator(G) <->text825.htm#9464<->AddGenerator(G) : GrpFP -&gt; GrpFP
5<->AddGenerator(G, w) <->text825.htm#9465<->AddGenerator(G, w) : GrpFP, GrpFPElt -&gt; GrpFP
5<->AddRelation(G, r) <->text825.htm#9466<->AddRelation(G, r) : GrpFP, RelElt -&gt; GrpFP
5<->AddRelation(G, g) <->text825.htm#9467<->AddRelation(G, g) : GrpFP, GrpFPElt -&gt; GrpFP
5<->AddRelation(G, r, i) <->text825.htm#9468<->AddRelation(G, r, i) : GrpFP, RelElt, RngIntElt -&gt; GrpFP
5<->AddRelation(G, g, i) <->text825.htm#9469<->AddRelation(G, g, i) : GrpFP, GrpFPElt, RngIntElt -&gt; GrpFP
5<->DeleteGenerator(G, x) <->text825.htm#9470<->DeleteGenerator(G, x) : GrpFP, GrpFPElt -&gt; GrpFP
5<->DeleteRelation(G, r) <->text825.htm#9471<->DeleteRelation(G, r) : GrpFP, RelElt -&gt; GrpFP
5<->DeleteRelation(G, g) <->text825.htm#9472<->DeleteRelation(G, g) : GrpFP, GrpFPElt -&gt; GrpFP
5<->DeleteRelation(G, i) <->text825.htm#9473<->DeleteRelation(G, i) : GrpFP, RngIntElt -&gt; GrpFP
5<->ReplaceRelation(G, h, r) <->text825.htm#9474<->ReplaceRelation(G, h, r) : GrpFP, GrpFPElt, RelElt -> GrpFP
5<->ReplaceRelation(G, s, g) <->text825.htm#9474<->ReplaceRelation(G, s, g) : GrpFP, RelElt, GrpFPElt -> GrpFP
5<->ReplaceRelation(G, h, g) <->text825.htm#9474<->ReplaceRelation(G, h, g) : GrpFP, GrpFPElt, GrpFPElt -> GrpFP
5<->ReplaceRelation(G, s, r) <->text825.htm#9474<->ReplaceRelation(G, s, r) : GrpFP, RelElt, RelElt -&gt; GrpFP
5<->ReplaceRelation(G, i, r) <->text825.htm#9475<->ReplaceRelation(G, i, r) : GrpFP, RngIntElt, RelElt -&gt; GrpFP
5<->ReplaceRelation(G, i, g) <->text825.htm#9476<->ReplaceRelation(G, i, g) : GrpFP, RngIntElt, GrpFPElt -&gt; GrpFP
4<->GrpFP_2_Replace (Example H76E1)<->text825.htm#9477<->GrpFP_2_Replace (Example H76E1)
4<->Example-Replace :<->text825.htm#9477<->Example-Replace :: GrpFP_2_Replace (Example H76E1)
3<->modifying-presentations :: Modifying Presentations (FINITELY PRESENTED GROUPS<->text825.htm#9463<->modifying-presentations :: Modifying Presentations (FINITELY PRESENTED GROUPS: ADVANCED)
3<->low-level-words :: Low Level Operations on Words (FINITELY PRESENTED GROUPS<->text825.htm#9478<->low-level-words :: Low Level Operations on Words (FINITELY PRESENTED GROUPS: ADVANCED)
5<->Eliminate(u, x, v) <->text825.htm#9479<->Eliminate(u, x, v) : GrpFPElt, GrpFPElt, GrpFPElt -&gt; GrpFPElt
5<->Eliminate(U, x, v) <->text825.htm#9480<->Eliminate(U, x, v) : { GrpFPElt }, GrpFPElt, GrpFPElt -&gt; { GrpFPElt }
5<->Match(u, v, f) <->text825.htm#9481<->Match(u, v, f) : GrpFPElt, GrpFPElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->RotateWord(u, n) <->text825.htm#9482<->RotateWord(u, n) : GrpFPElt, RngIntElt -&gt; GrpFPElt
5<->Substitute(u, f, n, v) <->text825.htm#9483<->Substitute(u, f, n, v) : GrpFPElt, RngIntElt, RngIntElt, GrpFPElt -&gt; GrpFPElt
5<->Subword(u, f, n) <->text825.htm#9484<->Subword(u, f, n) : GrpFPElt, RngIntElt, RngIntElt -&gt; GrpFPElt
4<->GrpFP_2_WordOps (Example H76E2)<->text825.htm#9485<->GrpFP_2_WordOps (Example H76E2)
4<->Example-WordOps :<->text825.htm#9485<->Example-WordOps :: GrpFP_2_WordOps (Example H76E2)
3<->low-level-words :: Low Level Operations on Words (FINITELY PRESENTED GROUPS<->text825.htm#9478<->low-level-words :: Low Level Operations on Words (FINITELY PRESENTED GROUPS: ADVANCED)
3<->low-level :: Low Level Operations on Presentations and Words (FINITELY PRESENTED GROUPS<->text825.htm<->low-level :: Low Level Operations on Presentations and Words (FINITELY PRESENTED GROUPS: ADVANCED)
3<->coset-enumeration :: Interactive Coset Enumeration (FINITELY PRESENTED GROUPS<->text826.htm<->coset-enumeration :: Interactive Coset Enumeration (FINITELY PRESENTED GROUPS: ADVANCED)
3<->introduction :: Introduction (FINITELY PRESENTED GROUPS<->text826.htm#9487<->introduction :: Introduction (FINITELY PRESENTED GROUPS: ADVANCED)
3<->construction :: Constructing and Modifying a Coset Enumeration Process (FINITELY PRESENTED GROUPS<->text826.htm#9488<->construction :: Constructing and Modifying a Coset Enumeration Process (FINITELY PRESENTED GROUPS: ADVANCED)
5<->CosetEnumerationProcess(G, H: parameters) <->text826.htm#9489<->CosetEnumerationProcess(G, H: parameters) : GrpFP, GrpFP -&gt; GrpFPCosetEnumProc
5<->AddRelator(~P, w) <->text826.htm#9490<->AddRelator(~P, w) : GrpFPCosetEnumProc, GrpFPElt -&gt;
5<->AddSubgroupGenerator(~P, w) <->text826.htm#9491<->AddSubgroupGenerator(~P, w) : GrpFPCosetEnumProc, GrpFPElt -&gt;
5<->SetProcessParameters(~P: parameters) <->text826.htm#9492<->SetProcessParameters(~P: parameters) : GrpFPCosetEnumProc -&gt;
3<->construction :: Constructing and Modifying a Coset Enumeration Process (FINITELY PRESENTED GROUPS<->text826.htm#9488<->construction :: Constructing and Modifying a Coset Enumeration Process (FINITELY PRESENTED GROUPS: ADVANCED)
3<->Starting and Restarting an Enumeration (FINITELY PRESENTED GROUPS<->text826.htm#9493<->Starting and Restarting an Enumeration (FINITELY PRESENTED GROUPS: ADVANCED)
5<->StartEnumeration(~P: parameters) <->text826.htm#9494<->StartEnumeration(~P: parameters) : GrpFPCosetEnumProc -&gt;
5<->RedoEnumeration(~P: parameters) <->text826.htm#9495<->RedoEnumeration(~P: parameters) : GrpFPCosetEnumProc -&gt;
5<->CanRedoEnumeration(P) <->text826.htm#9496<->CanRedoEnumeration(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->ContinueEnumeration(~P: parameters) <->text826.htm#9497<->ContinueEnumeration(~P: parameters) : GrpFPCosetEnumProc -&gt;
5<->CanContinueEnumeration(P) <->text826.htm#9498<->CanContinueEnumeration(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->ResumeEnumeration(~P: parameters) <->text826.htm#9499<->ResumeEnumeration(~P: parameters) : GrpFPCosetEnumProc -&gt;
3<->Starting and Restarting an Enumeration (FINITELY PRESENTED GROUPS<->text826.htm#9493<->Starting and Restarting an Enumeration (FINITELY PRESENTED GROUPS: ADVANCED)
3<->access :: Accessing Information (FINITELY PRESENTED GROUPS<->text826.htm#9500<->access :: Accessing Information (FINITELY PRESENTED GROUPS: ADVANCED)
5<->CosetSatisfying :: CosetsSatisfying(P : parameters) <->text826.htm#9501<->CosetSatisfying :: CosetsSatisfying(P : parameters) : GrpFPCosetEnumProc -&gt; { GrpFPElt }
5<->CosetsSatisfying(P : parameters) <->text826.htm#9501<->CosetsSatisfying(P : parameters) : GrpFPCosetEnumProc -&gt; { GrpFPElt }
5<->CosetTable(P) <->text826.htm#9502<->CosetTable(P) : GrpFPCosetEnumProc -&gt; Map
5<->HasValidCosetTable(P) <->text826.htm#9503<->HasValidCosetTable(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->HasCompleteCosetTable :: HasClosedCosetTable(P) <->text826.htm#9504<->HasCompleteCosetTable :: HasClosedCosetTable(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->HasClosedCosetTable(P) <->text826.htm#9504<->HasClosedCosetTable(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->ExcludedConjugates :: ExcludedConjugate(P) <->text826.htm#9505<->ExcludedConjugates :: ExcludedConjugate(P) : GrpFPCosetEnumProc -&gt; GrpFPElt
5<->ExcludedConjugate(P) <->text826.htm#9505<->ExcludedConjugate(P) : GrpFPCosetEnumProc -&gt; GrpFPElt
5<->ExistsCosetSatisfying(P : parameters) <->text826.htm#9506<->ExistsCosetSatisfying(P : parameters) : GrpFPCosetEnumProc -&gt; BoolElt, GrpFPElt
5<->ExistsExcludedConjugate(P) <->text826.htm#9507<->ExistsExcludedConjugate(P) : GrpFPCosetEnumProc -&gt; BoolElt, GrpFPElt
5<->ExistsNormalizingCoset :: ExistsNormalisingCoset(P) <->text826.htm#9508<->ExistsNormalizingCoset :: ExistsNormalisingCoset(P) : GrpFPCosetEnumProc -&gt; BoolElt, GrpFPElt
5<->ExistsNormalisingCoset(P) <->text826.htm#9508<->ExistsNormalisingCoset(P) : GrpFPCosetEnumProc -&gt; BoolElt, GrpFPElt
5<->Group(P) <->text826.htm#9509<->Group(P) : GrpFPCosetEnumProc -&gt; GrpFP
5<->Index(P) <->text826.htm#9510<->Index(P) : GrpFPCosetEnumProc -&gt; RngIntElt
5<->HasValidIndex(P) <->text826.htm#9511<->HasValidIndex(P) : GrpFPCosetEnumProc -&gt; BoolElt
5<->MaximalNumberOfCosets(P) <->text826.htm#9512<->MaximalNumberOfCosets(P) : GrpFPCosetEnumProc -&gt; RngIntElt
5<->Subgroup(P) <->text826.htm#9513<->Subgroup(P) : GrpFPCosetEnumProc -&gt; GrpFP
5<->TotalNumberOfCosets(P) <->text826.htm#9514<->TotalNumberOfCosets(P) : GrpFPCosetEnumProc -&gt; RngIntElt
4<->GrpFP_2_ACEProc1 (Example H76E3)<->text826.htm#9515<->GrpFP_2_ACEProc1 (Example H76E3)
4<->Example-ACEProc1 :<->text826.htm#9515<->Example-ACEProc1 :: GrpFP_2_ACEProc1 (Example H76E3)
4<->GrpFP_2_ACEProc2 (Example H76E4)<->text826.htm#9516<->GrpFP_2_ACEProc2 (Example H76E4)
4<->Example-ACEProc2 :<->text826.htm#9516<->Example-ACEProc2 :: GrpFP_2_ACEProc2 (Example H76E4)
4<->GrpFP_2_ACEProc3 (Example H76E5)<->text826.htm#9517<->GrpFP_2_ACEProc3 (Example H76E5)
4<->Example-ACEProc3 :<->text826.htm#9517<->Example-ACEProc3 :: GrpFP_2_ACEProc3 (Example H76E5)
4<->GrpFP_2_ACEProc4 (Example H76E6)<->text826.htm#9518<->GrpFP_2_ACEProc4 (Example H76E6)
4<->Example-ACEProc4 :<->text826.htm#9518<->Example-ACEProc4 :: GrpFP_2_ACEProc4 (Example H76E6)
3<->access :: Accessing Information (FINITELY PRESENTED GROUPS<->text826.htm#9500<->access :: Accessing Information (FINITELY PRESENTED GROUPS: ADVANCED)
3<->permreps :: Induced Permutation  Representations (FINITELY PRESENTED GROUPS<->text826.htm#9519<->permreps :: Induced Permutation  Representations (FINITELY PRESENTED GROUPS: ADVANCED)
5<->CosetAction(P) <->text826.htm#9520<->CosetAction(P) : GrpFPCosetEnumProc -&gt; Map, GrpPerm, GrpFP
5<->CosetImage(P) <->text826.htm#9521<->CosetImage(P) : GrpFPCosetEnumProc -&gt; GrpPerm
5<->CosetKernel(P) <->text826.htm#9522<->CosetKernel(P) : GrpFPCosetEnumProc -&gt; GrpFP
3<->permreps :: Induced Permutation  Representations (FINITELY PRESENTED GROUPS<->text826.htm#9519<->permreps :: Induced Permutation  Representations (FINITELY PRESENTED GROUPS: ADVANCED)
3<->cosetspaces :: Coset Spaces and Transversals (FINITELY PRESENTED GROUPS<->text826.htm#9523<->cosetspaces :: Coset Spaces and Transversals (FINITELY PRESENTED GROUPS: ADVANCED)
5<->CosetSpace(P) <->text826.htm#9524<->CosetSpace(P) : GrpFPCosetEnumProc -&gt; GrpFPCos
5<->LeftCosetSpace :: RightCosetSpace(P) <->text826.htm#9525<->LeftCosetSpace :: RightCosetSpace(P) : GrpFPCosetEnumProc -&gt; GrpFPCos
5<->RightCosetSpace(P) <->text826.htm#9525<->RightCosetSpace(P) : GrpFPCosetEnumProc -&gt; GrpFPCos
5<->RightTransversal :: Transversal(P) <->text826.htm#9526<->RightTransversal :: Transversal(P) : GrpFPCosetEnumProc -&gt; {@ GrpFPElt  @}, Map
5<->Transversal(P) <->text826.htm#9526<->Transversal(P) : GrpFPCosetEnumProc -&gt; {@ GrpFPElt  @}, Map
4<->GrpFP_2_ACEProcTransversal (Example H76E7)<->text826.htm#9527<->GrpFP_2_ACEProcTransversal (Example H76E7)
4<->Example-ACEProcTransversal :<->text826.htm#9527<->Example-ACEProcTransversal :: GrpFP_2_ACEProcTransversal (Example H76E7)
4<->GrpFP_2_ACEProcCosetSpace (Example H76E8)<->text826.htm#9528<->GrpFP_2_ACEProcCosetSpace (Example H76E8)
4<->Example-ACEProcCosetSpace :<->text826.htm#9528<->Example-ACEProcCosetSpace :: GrpFP_2_ACEProcCosetSpace (Example H76E8)
3<->cosetspaces :: Coset Spaces and Transversals (FINITELY PRESENTED GROUPS<->text826.htm#9523<->cosetspaces :: Coset Spaces and Transversals (FINITELY PRESENTED GROUPS: ADVANCED)
3<->coset-enumeration :: Interactive Coset Enumeration (FINITELY PRESENTED GROUPS<->text826.htm<->coset-enumeration :: Interactive Coset Enumeration (FINITELY PRESENTED GROUPS: ADVANCED)
3<->p-Quotients (Process Version) (FINITELY PRESENTED GROUPS<->text827.htm<->p-Quotients (Process Version) (FINITELY PRESENTED GROUPS: ADVANCED)
3<->process :: The p-Quotient Process (FINITELY PRESENTED GROUPS<->text827.htm#9530<->process :: The p-Quotient Process (FINITELY PRESENTED GROUPS: ADVANCED)
5<->pQuotientProcess(F, p, c: parameters) <->text827.htm#9531<->pQuotientProcess(F, p, c: parameters) : GrpFP, RngIntElt, RngIntElt -&gt; Process
5<->NextClass($\sim$P, k $\colon$ \parameters) <->text827.htm#9532<->NextClass($\sim$P, k $\colon$ \parameters) : GrpPCpQuotientProc, RngIntElt ->
5<->NextClass(~P : parameters) <->text827.htm#9532<->NextClass(~P : parameters) : GrpPCpQuotientProc -&gt;
3<->process :: The p-Quotient Process (FINITELY PRESENTED GROUPS<->text827.htm#9530<->process :: The p-Quotient Process (FINITELY PRESENTED GROUPS: ADVANCED)
3<->interactive :: Using p-Quotient Interactively (FINITELY PRESENTED GROUPS<->text827.htm#9533<->interactive :: Using p-Quotient Interactively (FINITELY PRESENTED GROUPS: ADVANCED)
5<->StartNewClass(~P: parameters) <->text827.htm#9534<->StartNewClass(~P: parameters) : GrpPCpQuotientProc -&gt;
5<->Tails($\sim$P, k$\colon$ \parameters) <->text827.htm#9535<->Tails($\sim$P, k$\colon$ \parameters) : GrpPCpQuotientProc, RngIntElt ->
5<->Tails(~P: parameters) <->text827.htm#9535<->Tails(~P: parameters) : GrpPCpQuotientProc -&gt;
5<->Consistency($\sim$P, k$\colon$ \parameters) <->text827.htm#9536<->Consistency($\sim$P, k$\colon$ \parameters) : GrpPCpQuotientProc ->
5<->Consistency(~P: parameters) <->text827.htm#9536<->Consistency(~P: parameters) : GrpPCpQuotientProc -&gt;
5<->CollectRelations(~P) <->text827.htm#9537<->CollectRelations(~P) : GrpPCpQuotientProc -&gt;
5<->ExponentLaw($\sim$P, Start, Fin$\colon$ \parameters) <->text827.htm#9538<->ExponentLaw($\sim$P, Start, Fin$\colon$ \parameters) : GrpPCpQuotientProc, RngIntElt, RngIntElt ->
5<->ExponentLaw(~P : parameters) <->text827.htm#9538<->ExponentLaw(~P : parameters) : GrpPCpQuotientProc -&gt;
5<->EliminateRedundancy(~P) <->text827.htm#9539<->EliminateRedundancy(~P) : GrpPCpQuotientProc -&gt;
5<->Display(P, DisplayLevel)<->text827.htm#9540<->Display(P, DisplayLevel): GrpPCpQuotientProc, RngIntElt ->
5<->Display(P) <->text827.htm#9540<->Display(P) : GrpPCpQuotientProc -&gt;
5<->RevertClass(~P) <->text827.htm#9541<->RevertClass(~P) : GrpPCpQuotientProc -&gt;
5<->pCoveringGroup($G$) <->text827.htm#9542<->pCoveringGroup($G$) : GrpPC -> GrpPC
5<->pCoveringGroup(~P) <->text827.htm#9542<->pCoveringGroup(~P) : GrpPCpQuotientProc -&gt;
5<->GeneratorStructure(P, Start, Fin) <->text827.htm#9543<->GeneratorStructure(P, Start, Fin) : GrpPCpQuotientProc, RngIntElt, RngIntElt ->
5<->GeneratorStructure(P) <->text827.htm#9543<->GeneratorStructure(P) : GrpPCpQuotientProc -&gt;
5<->Jacobi($\sim$P, c, b, a) <->text827.htm#9544<->Jacobi($\sim$P, c, b, a) : GrpPCpQuotientProc, RngIntElt, RngIntElt, RngIntElt -> RngIntElt ->
5<->Jacobi(~P, c, b, a, ~r) <->text827.htm#9544<->Jacobi(~P, c, b, a, ~r) : GrpPCpQuotientProc, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt -&gt;
5<->Collect(P, Q) <->text827.htm#9545<->Collect(P, Q) : GrpPCpQuotientProc, [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; [ RngIntElt ] -&gt;
5<->EcheloniseWord($\sim$P) <->text827.htm#9546<->EcheloniseWord($\sim$P) : GrpPCpQuotientProc -> RngIntElt
5<->EcheloniseWord(~P, ~r) <->text827.htm#9546<->EcheloniseWord(~P, ~r) : GrpPCpQuotientProc -&gt; RngIntElt
5<->SetDisplayLevel(~P, Level) <->text827.htm#9547<->SetDisplayLevel(~P, Level) : GrpPCpQuotientProc, RngIntElt -&gt;
5<->ExtractGroup(P) <->text827.htm#9548<->ExtractGroup(P) : GrpPCpQuotientProc -&gt; GrpPC
5<->Order(P) <->text827.htm#9549<->Order(P) : GrpPCpQuotientProc -&gt; RngIntElt
5<->FactoredOrder(P) <->text827.htm#9550<->FactoredOrder(P) : GrpPCpQuotientProc -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->NumberOfPCGenerators(P) <->text827.htm#9551<->NumberOfPCGenerators(P) : GrpPCpQuotientProc -&gt; RngIntElt
5<->pClass(P) <->text827.htm#9552<->pClass(P) : GrpPCpQuotientProc -&gt; RngIntElt
5<->NuclearRank(P) <->text827.htm#9553<->NuclearRank(P) : GrpPCpQuotientProc -> RngIntElt
5<->NuclearRank(G) <->text827.htm#9553<->NuclearRank(G) : GrpPC -&gt; RngIntElt
5<->pMultiplicatorRank(P) <->text827.htm#9554<->pMultiplicatorRank(P) : GrpPCpQuotientProc -> RngIntElt
5<->pMultiplicatorRank(G) <->text827.htm#9554<->pMultiplicatorRank(G) : GrpPC -&gt; RngIntElt
4<->GrpFP_2_pQuotient5 (Example H76E9)<->text827.htm#9555<->GrpFP_2_pQuotient5 (Example H76E9)
4<->Example-pQuotient5 :<->text827.htm#9555<->Example-pQuotient5 :: GrpFP_2_pQuotient5 (Example H76E9)
4<->GrpFP_2_pQuotient6 (Example H76E10)<->text827.htm#9556<->GrpFP_2_pQuotient6 (Example H76E10)
4<->Example-pQuotient6 :<->text827.htm#9556<->Example-pQuotient6 :: GrpFP_2_pQuotient6 (Example H76E10)
4<->GrpFP_2_pQuotient7 (Example H76E11)<->text827.htm#9557<->GrpFP_2_pQuotient7 (Example H76E11)
4<->Example-pQuotient7 :<->text827.htm#9557<->Example-pQuotient7 :: GrpFP_2_pQuotient7 (Example H76E11)
4<->GrpFP_2_pQuotient8 (Example H76E12)<->text827.htm#9558<->GrpFP_2_pQuotient8 (Example H76E12)
4<->Example-pQuotient8 :<->text827.htm#9558<->Example-pQuotient8 :: GrpFP_2_pQuotient8 (Example H76E12)
3<->interactive :: Using p-Quotient Interactively (FINITELY PRESENTED GROUPS<->text827.htm#9533<->interactive :: Using p-Quotient Interactively (FINITELY PRESENTED GROUPS: ADVANCED)
3<->p-Quotients (Process Version) (FINITELY PRESENTED GROUPS<->text827.htm<->p-Quotients (Process Version) (FINITELY PRESENTED GROUPS: ADVANCED)
3<->soluble-quotients :: Soluble Quotients (FINITELY PRESENTED GROUPS<->text828.htm<->soluble-quotients :: Soluble Quotients (FINITELY PRESENTED GROUPS: ADVANCED)
3<->introduction :: Introduction (FINITELY PRESENTED GROUPS<->text828.htm#9560<->introduction :: Introduction (FINITELY PRESENTED GROUPS: ADVANCED)
3<->construction :: Construction (FINITELY PRESENTED GROUPS<->text828.htm#9561<->construction :: Construction (FINITELY PRESENTED GROUPS: ADVANCED)
3<->relevant-primes :: Calculating the Relevant Primes (FINITELY PRESENTED GROUPS<->text828.htm#9562<->relevant-primes :: Calculating the Relevant Primes (FINITELY PRESENTED GROUPS: ADVANCED)
3<->functions :: The Functions (FINITELY PRESENTED GROUPS<->text828.htm#9563<->functions :: The Functions (FINITELY PRESENTED GROUPS: ADVANCED)
5<->SolvableQuotient :: SolubleQuotient(F, n : parameters)<->text828.htm#9564<->SolvableQuotient :: SolubleQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolubleQuotient(F $\colon$ \parameters)<->text828.htm#9564<->SolubleQuotient(F $\colon$ \parameters): GrpFP, RngIntElt -> GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(F $\colon$ \parameters): GrpFP, RngIntElt -> GrpPC, Map, SeqEnum, MonStgElt :: SolubleQuotient(F, n : parameters)<->text828.htm#9564<->SolvableQuotient(F $\colon$ \parameters): GrpFP, RngIntElt -> GrpPC, Map, SeqEnum, MonStgElt :: SolubleQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolubleQuotient(F, P $\colon$ \parameters)<->text828.htm#9564<->SolubleQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt
5<->SolvableQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt :: SolubleQuotient(F, n : parameters)<->text828.htm#9564<->SolvableQuotient(F, P $\colon$ \parameters): GrpFP, Set -> GrpPC, Map, SeqEnum, MonStgElt :: SolubleQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
5<->SolubleQuotient(F, n : parameters)<->text828.htm#9564<->SolubleQuotient(F, n : parameters): GrpFP, RngIntElt -&gt; GrpPC, Map, SeqEnum, MonStgElt
3<->functions :: The Functions (FINITELY PRESENTED GROUPS<->text828.htm#9563<->functions :: The Functions (FINITELY PRESENTED GROUPS: ADVANCED)
3<->soluble-quotients :: Soluble Quotients (FINITELY PRESENTED GROUPS<->text828.htm<->soluble-quotients :: Soluble Quotients (FINITELY PRESENTED GROUPS: ADVANCED)
3<->finitely-presented-groups-advanced :: FINITELY PRESENTED GROUPS<->text823.htm<->finitely-presented-groups-advanced :: FINITELY PRESENTED GROUPS: ADVANCED
3<->polycyclic :<->text831.htm<->polycyclic :: POLYCYCLIC GROUPS
3<->GrpGPC :<->text832.htm<->GrpGPC :: Introduction (POLYCYCLIC GROUPS)
3<->introduction :<->text832.htm<->introduction :: Introduction (POLYCYCLIC GROUPS)
3<->polycyclic-groups :<->text833.htm<->polycyclic-groups :: Polycyclic Groups and Polycyclic Presentations (POLYCYCLIC GROUPS)
3<->polycyclic-groups-introduction :<->text833.htm#9570<->polycyclic-groups-introduction :: Introduction (POLYCYCLIC GROUPS)
3<->element-definition :<->text833.htm#9571<->element-definition :: Specification of Elements (POLYCYCLIC GROUPS)
5<->G ! Q <->text833.htm#9572<->G ! Q : GrpGPC, [RngIntElt] -&gt; GrpGPCElt
5<->Identity(G) <->text833.htm#9573<->Identity(G) : GrpGPC -&gt; GrpGPCElt
5<->! :: Identity(G) <->text833.htm#9573<->! :: Identity(G) : GrpGPC -&gt; GrpGPCElt
5<->Identity(G) <->text833.htm#9573<->Identity(G) : GrpGPC -&gt; GrpGPCElt
3<->element-definition :<->text833.htm#9571<->element-definition :: Specification of Elements (POLYCYCLIC GROUPS)
3<->element-access :<->text833.htm#9574<->element-access :: Access Functions for Elements (POLYCYCLIC GROUPS)
5<->Eltseq :: ElementToSequence(x) <->text833.htm#9575<->Eltseq :: ElementToSequence(x) : GrpGPCElt -&gt; [RngIntElt]
5<->ElementToSequence(x) <->text833.htm#9575<->ElementToSequence(x) : GrpGPCElt -&gt; [RngIntElt]
5<->LeadingTerm(x) <->text833.htm#9576<->LeadingTerm(x) : GrpGPCElt -&gt; GrpGPCElt
5<->LeadingGenerator(x) <->text833.htm#9577<->LeadingGenerator(x) : GrpGPCElt -&gt; GrpGPCElt
5<->LeadingExponent(x) <->text833.htm#9578<->LeadingExponent(x) : GrpGPCElt -&gt; RngIntElt
5<->Depth(x) <->text833.htm#9579<->Depth(x) : GrpGPCElt -&gt; RngIntElt
3<->element-access :<->text833.htm#9574<->element-access :: Access Functions for Elements (POLYCYCLIC GROUPS)
3<->arithmetic :<->text833.htm#9580<->arithmetic :: Arithmetic Operations on Elements (POLYCYCLIC GROUPS)
5<->g * h <->text833.htm#9581<->g * h : GrpGPCElt, GrpGPCElt -&gt; GrpGPCElt
5<->g *:= h <->text833.htm#9582<->g *:= h : GrpGPCElt, GrpGPCElt -&gt;
5<->g ^ n<->text833.htm#9583<->g ^ n: GrpGPCElt, RngIntElt -&gt; GrpGPCElt
5<->g ^:= n<->text833.htm#9584<->g ^:= n: GrpGPCElt, RngIntElt -&gt;
5<->g / h <->text833.htm#9585<->g / h : GrpGPCElt, GrpGPCElt -&gt; GrpGPCElt
5<->g /:= h <->text833.htm#9586<->g /:= h : GrpGPCElt, GrpGPCElt -&gt;
5<->g ^ h <->text833.htm#9587<->g ^ h : GrpGPCElt, GrpGPCElt -&gt; GrpGPCElt
5<->g ^:= h <->text833.htm#9588<->g ^:= h : GrpGPCElt, GrpGPCElt -&gt;
5<->(,,) :: (g1, ..., gn) <->text833.htm#9589<->(,,) :: (g<sub>1</sub>, ..., g<sub>n</sub>) : List(GrpGPCElt) -&gt; GrpGPCElt
3<->arithmetic :<->text833.htm#9580<->arithmetic :: Arithmetic Operations on Elements (POLYCYCLIC GROUPS)
3<->operation :<->text833.htm#9590<->operation :: Operators for Elements (POLYCYCLIC GROUPS)
5<->Order(x) <->text833.htm#9591<->Order(x) : GrpGPCElt -&gt; RngIntElt
5<->IsFinite(x) <->text833.htm#9592<->IsFinite(x) : GrpGPCElt -&gt; BoolElt
5<->Parent(x) <->text833.htm#9593<->Parent(x) : GrpGPCElt -&gt; GrpGPC
3<->operation :<->text833.htm#9590<->operation :: Operators for Elements (POLYCYCLIC GROUPS)
3<->boolean :<->text833.htm#9594<->boolean :: Comparison Operators for Elements (POLYCYCLIC GROUPS)
5<->g eq h <->text833.htm#9595<->g eq h : GrpGPCElt, GrpGPCElt -&gt; BoolElt
5<->g ne h <->text833.htm#9596<->g ne h : GrpGPCElt, GrpGPCElt -&gt; BoolElt
5<->IsIdentity(g) <->text833.htm#9597<->IsIdentity(g) : GrpGPCElt -&gt; BoolElt
3<->boolean :<->text833.htm#9594<->boolean :: Comparison Operators for Elements (POLYCYCLIC GROUPS)
3<->magma :<->text833.htm#9598<->magma :: Specification of a Polycyclic Presentation (POLYCYCLIC GROUPS)
5<->quo< GrpGPC : F | R : parameters > <->text833.htm#9599<->quo&lt; GrpGPC : F | R : parameters &gt; : GrpFP, List(GrpFPRel) -&gt; GrpGPC, Map
5<->PolycyclicGroup< x1, ..., xn | R : parameters > <->text833.htm#9600<->PolycyclicGroup&lt; x<sub>1</sub>, ..., x<sub>n</sub> | R : parameters &gt; : List(Identifiers), List(GrpFPRel) -&gt; GrpGPC, Map
4<->GrpGPC_Constructor (Example H77E1)<->text833.htm#9601<->GrpGPC_Constructor (Example H77E1)
4<->Example-Constructor :<->text833.htm#9601<->Example-Constructor :: GrpGPC_Constructor (Example H77E1)
4<->GrpGPC_PolycyclicGroup (Example H77E2)<->text833.htm#9602<->GrpGPC_PolycyclicGroup (Example H77E2)
4<->Example-PolycyclicGroup :<->text833.htm#9602<->Example-PolycyclicGroup :: GrpGPC_PolycyclicGroup (Example H77E2)
3<->magma :<->text833.htm#9598<->magma :: Specification of a Polycyclic Presentation (POLYCYCLIC GROUPS)
3<->presentation-properties :<->text833.htm#9603<->presentation-properties :: Properties of a Polycyclic Presentation (POLYCYCLIC GROUPS)
5<->IsConsistent(G) <->text833.htm#9604<->IsConsistent(G) : GrpGPC -&gt; BoolElt
5<->IsIdenticalPresentation(G, H) <->text833.htm#9605<->IsIdenticalPresentation(G, H) : GrpGPC, GrpGPC -&gt; BoolElt
5<->PresentationIsSmall(G) <->text833.htm#9606<->PresentationIsSmall(G) : GrpGPC -&gt; BoolElt
3<->presentation-properties :<->text833.htm#9603<->presentation-properties :: Properties of a Polycyclic Presentation (POLYCYCLIC GROUPS)
3<->polycyclic-groups :<->text833.htm<->polycyclic-groups :: Polycyclic Groups and Polycyclic Presentations (POLYCYCLIC GROUPS)
3<->subgroup-quotient-homomorphism-extension :<->text834.htm<->subgroup-quotient-homomorphism-extension :: Subgroups, Quotient Groups,  Homomorphisms and Extensions (POLYCYCLIC GROUPS)
3<->subgroup :<->text834.htm#9608<->subgroup :: Construction of Subgroups (POLYCYCLIC GROUPS)
5<->sub<G | L> <->text834.htm#9609<->sub&lt;G | L&gt; : GrpGPC, List -&gt; GrpGPC, Map
5<->ncl<G | L> <->text834.htm#9610<->ncl&lt;G | L&gt; : GrpGPC, List -&gt; GrpGPC, Map
3<->subgroup :<->text834.htm#9608<->subgroup :: Construction of Subgroups (POLYCYCLIC GROUPS)
3<->coercion :<->text834.htm#9611<->coercion :: Coercions Between Groups and Subgroups (POLYCYCLIC GROUPS)
5<->G ! g <->text834.htm#9612<->G ! g : GrpGPC, GrpGPCElt -&gt; GrpGPCElt
5<->H ! g <->text834.htm#9613<->H ! g : GrpGPC, GrpGPCElt -&gt; GrpGPCElt
5<->K ! g <->text834.htm#9614<->K ! g : GrpGPC, GrpGPCElt -&gt; GrpGPCElt
5<->InclusionMap(G, H) <->text834.htm#9615<->InclusionMap(G, H) : GrpGPC, GrpGPC -&gt; Map
4<->GrpGPC_Subgroup (Example H77E3)<->text834.htm#9616<->GrpGPC_Subgroup (Example H77E3)
4<->Example-Subgroup :<->text834.htm#9616<->Example-Subgroup :: GrpGPC_Subgroup (Example H77E3)
3<->coercion :<->text834.htm#9611<->coercion :: Coercions Between Groups and Subgroups (POLYCYCLIC GROUPS)
3<->quotient :<->text834.htm#9617<->quotient :: Construction of Quotient Groups (POLYCYCLIC GROUPS)
5<->quo<G | L> <->text834.htm#9618<->quo&lt;G | L&gt; : GrpGPC, List -&gt; GrpGPC, Map
5<->G / N <->text834.htm#9619<->G / N : GrpGPC, GrpGPC -&gt; GrpGPC
3<->quotient :<->text834.htm#9617<->quotient :: Construction of Quotient Groups (POLYCYCLIC GROUPS)
3<->homomorphism :<->text834.htm#9620<->homomorphism :: Homomorphisms (POLYCYCLIC GROUPS)
3<->homomorphism_general :<->text834.htm#9621<->homomorphism_general :: General remarks (POLYCYCLIC GROUPS)
3<->homomorphism_constr :<->text834.htm#9622<->homomorphism_constr :: Construction of Homomorphisms (POLYCYCLIC GROUPS)
5<->hom< P -> G | S : parameters> <->text834.htm#9623<->hom&lt; P -&gt; G | S : parameters&gt; : Struct , Struct -&gt; Map
3<->homomorphism_constr :<->text834.htm#9622<->homomorphism_constr :: Construction of Homomorphisms (POLYCYCLIC GROUPS)
3<->homomorphism :<->text834.htm#9620<->homomorphism :: Homomorphisms (POLYCYCLIC GROUPS)
3<->extension :<->text834.htm#9624<->extension :: Construction of Extensions (POLYCYCLIC GROUPS)
5<->DirectProduct(G, H) <->text834.htm#9625<->DirectProduct(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC, [Map], [Map]
3<->extension :<->text834.htm#9624<->extension :: Construction of Extensions (POLYCYCLIC GROUPS)
3<->standard-group :<->text834.htm#9626<->standard-group :: Construction of Standard Groups (POLYCYCLIC GROUPS)
5<->AbelianGroup(GrpGPC, Q) <->text834.htm#9627<->AbelianGroup(GrpGPC, Q) : Cat, [RngIntElt] -&gt; GrpGPC
5<->CyclicGroup(GrpGPC, n) <->text834.htm#9628<->CyclicGroup(GrpGPC, n) : Cat, RngIntElt -&gt; GrpGPC
5<->DihedralGroup(GrpGPC, n) <->text834.htm#9629<->DihedralGroup(GrpGPC, n) : Cat, RngIntElt -&gt; GrpGPC
5<->ElementaryAbelianGroup(GrpGPC, p, n) <->text834.htm#9630<->ElementaryAbelianGroup(GrpGPC, p, n) : Cat, RngIntElt, RngIntElt -&gt; GrpGPC
5<->ExtraSpecialGroup(GrpGPC, p, n : parameters) <->text834.htm#9631<->ExtraSpecialGroup(GrpGPC, p, n : parameters) : Cat, RngIntElt, RngIntElt -&gt; GrpGPC
5<->FreeAbelianGroup(GrpGPC, n) <->text834.htm#9632<->FreeAbelianGroup(GrpGPC, n) : Cat, RngIntElt -&gt; GrpGPC
5<->FreeNilpotentGroup(r, e) <->text834.htm#9633<->FreeNilpotentGroup(r, e) : RngIntElt, RngIntElt -&gt; GrpGPC
4<->GrpGPC_Homomorphism (Example H77E4)<->text834.htm#9634<->GrpGPC_Homomorphism (Example H77E4)
4<->Example-Homomorphism :<->text834.htm#9634<->Example-Homomorphism :: GrpGPC_Homomorphism (Example H77E4)
4<->GrpGPC_Symmetric2 (Example H77E5)<->text834.htm#9635<->GrpGPC_Symmetric2 (Example H77E5)
4<->Example-Symmetric2 :<->text834.htm#9635<->Example-Symmetric2 :: GrpGPC_Symmetric2 (Example H77E5)
3<->standard-group :<->text834.htm#9626<->standard-group :: Construction of Standard Groups (POLYCYCLIC GROUPS)
3<->subgroup-quotient-homomorphism-extension :<->text834.htm<->subgroup-quotient-homomorphism-extension :: Subgroups, Quotient Groups,  Homomorphisms and Extensions (POLYCYCLIC GROUPS)
3<->conversion :<->text835.htm<->conversion :: Conversion between Categories (POLYCYCLIC GROUPS)
5<->AbelianGroup(G) <->text835.htm#9637<->AbelianGroup(G) : GrpGPC -&gt; GrpAb, Map
5<->FPGroup(G) <->text835.htm#9638<->FPGroup(G) : GrpGPC -&gt; GrpFP, Map
5<->PCGroup(G) <->text835.htm#9639<->PCGroup(G) : GrpGPC -&gt; GrpPC, Map
5<->GPCGroup(G) <->text835.htm#9640<->GPCGroup(G) : GrpMat -> GrpGPC, Map
5<->GPCGroup(G) <->text835.htm#9640<->GPCGroup(G) : GrpAb -> GrpGPC, Map
5<->GPCGroup(G) <->text835.htm#9640<->GPCGroup(G) : GrpPC -> GrpGPC, Map
5<->GPCGroup(G) <->text835.htm#9640<->GPCGroup(G) : GrpPerm -&gt; GrpGPC, Map
4<->GrpGPC_SubgroupsQuotientsTransfer (Example H77E6)<->text835.htm#9641<->GrpGPC_SubgroupsQuotientsTransfer (Example H77E6)
4<->Example-SubgroupsQuotientsTransfer :<->text835.htm#9641<->Example-SubgroupsQuotientsTransfer :: GrpGPC_SubgroupsQuotientsTransfer (Example H77E6)
3<->conversion :<->text835.htm<->conversion :: Conversion between Categories (POLYCYCLIC GROUPS)
3<->access :<->text836.htm<->access :: Access Functions for Groups (POLYCYCLIC GROUPS)
5<->G . i <->text836.htm#9643<->G . i : GrpGPC, RngIntElt -&gt; GrpGPCElt
5<->PCGenerators :: Generators(G) <->text836.htm#9644<->PCGenerators :: Generators(G) : GrpGPC -&gt; {@ GrpGPCElt @}
5<->Generators(G) <->text836.htm#9644<->Generators(G) : GrpGPC -&gt; {@ GrpGPCElt @}
5<->PCGenerators :: Generators(H, G) <->text836.htm#9645<->PCGenerators :: Generators(H, G) : GrpGPC, GrpGPC -&gt; {@ GrpGPCElt @}
5<->Generators(H, G) <->text836.htm#9645<->Generators(H, G) : GrpGPC, GrpGPC -&gt; {@ GrpGPCElt @}
5<->Ngens :: NumberOfGenerators(G) <->text836.htm#9646<->Ngens :: NumberOfGenerators(G) : GrpGPC -&gt; RngIntElt
5<->NumberOfPCGenerators :: NumberOfGenerators(G) <->text836.htm#9646<->NumberOfPCGenerators :: NumberOfGenerators(G) : GrpGPC -&gt; RngIntElt
5<->NPCgens :: NumberOfGenerators(G) <->text836.htm#9646<->NPCgens :: NumberOfGenerators(G) : GrpGPC -&gt; RngIntElt
5<->NPCGenerators :: NumberOfGenerators(G) <->text836.htm#9646<->NPCGenerators :: NumberOfGenerators(G) : GrpGPC -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text836.htm#9646<->NumberOfGenerators(G) : GrpGPC -&gt; RngIntElt
5<->PCExponents(G) <->text836.htm#9647<->PCExponents(G) : GrpGPC -&gt; [RngIntElt]
5<->HirschNumber(G) <->text836.htm#9648<->HirschNumber(G) : GrpGPC -&gt; RngIntElt
3<->access :<->text836.htm<->access :: Access Functions for Groups (POLYCYCLIC GROUPS)
3<->set :<->text837.htm<->set :: Set-Theoretic Operations in a  Group (POLYCYCLIC GROUPS)
3<->order :<->text837.htm#9650<->order :: Functions Relating to Group Order (POLYCYCLIC GROUPS)
5<->FactoredIndex(G, H) <->text837.htm#9651<->FactoredIndex(G, H) : GrpGPC, GrpGPC -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->FactoredOrder(G) <->text837.htm#9652<->FactoredOrder(G) : GrpGPC -&gt; [&lt;RngIntElt, RngIntElt&gt;]
5<->Index(G, H) <->text837.htm#9653<->Index(G, H) : GrpGPC, GrpGPC -&gt; RngIntElt
5<-># :: Order(G) <->text837.htm#9654<-># :: Order(G) : GrpGPC -&gt; RngIntElt
5<->Order(G) <->text837.htm#9654<->Order(G) : GrpGPC -&gt; RngIntElt
3<->order :<->text837.htm#9650<->order :: Functions Relating to Group Order (POLYCYCLIC GROUPS)
3<->boolean :<->text837.htm#9655<->boolean :: Membership and Equality (POLYCYCLIC GROUPS)
5<->g in G <->text837.htm#9656<->g in G : GrpGPCElt, GrpGPC -&gt; BoolElt
5<->g notin G <->text837.htm#9657<->g notin G : GrpGPCElt, GrpGPC -&gt; BoolElt
5<->S subset G <->text837.htm#9658<->S subset G : { GrpGPCElt } , GrpGPC -&gt; BoolElt
5<->S notsubset G <->text837.htm#9659<->S notsubset G : { GrpGPCElt } , GrpGPC -&gt; BoolElt
5<->H subset G <->text837.htm#9660<->H subset G : GrpGPC, GrpGPC -&gt; BoolElt
5<->H notsubset G <->text837.htm#9661<->H notsubset G : GrpGPC, GrpGPC -&gt; BoolElt
5<->G eq H <->text837.htm#9662<->G eq H : GrpGPC, GrpGPC -&gt; BoolElt
5<->G ne H <->text837.htm#9663<->G ne H : GrpGPC, GrpGPC -&gt; BoolElt
3<->boolean :<->text837.htm#9655<->boolean :: Membership and Equality (POLYCYCLIC GROUPS)
3<->operation :<->text837.htm#9664<->operation :: Set Operations (POLYCYCLIC GROUPS)
5<->Representative(G) <->text837.htm#9665<->Representative(G) : GrpGPC -&gt; GrpGPCElt
5<->RandomProcess(G) <->text837.htm#9666<->RandomProcess(G) : GrpGPC -&gt; Process
5<->Random(P) <->text837.htm#9667<->Random(P) : Process -&gt; GrpGPCElt
5<->Random(G, max) <->text837.htm#9668<->Random(G, max) : GrpGPC, RngIntElt -> GrpGPCElt
5<->Random(G) <->text837.htm#9668<->Random(G) : GrpGPC -&gt; GrpGPCElt
3<->operation :<->text837.htm#9664<->operation :: Set Operations (POLYCYCLIC GROUPS)
3<->set :<->text837.htm<->set :: Set-Theoretic Operations in a  Group (POLYCYCLIC GROUPS)
3<->coset-space :<->text838.htm<->coset-space :: Coset Spaces (POLYCYCLIC GROUPS)
5<->CosetTable(G, H) <->text838.htm#9670<->CosetTable(G, H) : GrpGPC, GrpGPC -&gt; Map
5<->RightTransversal :: Transversal(G, H) <->text838.htm#9671<->RightTransversal :: Transversal(G, H) : GrpGPC, GrpGPC -&gt; {@ GrpGPCElt  @}, Map
5<->Transversal(G, H) <->text838.htm#9671<->Transversal(G, H) : GrpGPC, GrpGPC -&gt; {@ GrpGPCElt  @}, Map
4<->GrpGPC_CosetTable (Example H77E7)<->text838.htm#9672<->GrpGPC_CosetTable (Example H77E7)
4<->Example-CosetTable :<->text838.htm#9672<->Example-CosetTable :: GrpGPC_CosetTable (Example H77E7)
5<->CosetAction(G, H) <->text838.htm#9673<->CosetAction(G, H) : GrpGPC, GrpGPC -&gt; Map, GrpPerm, GrpGPC
5<->CosetImage(G, H) <->text838.htm#9674<->CosetImage(G, H) : GrpGPC, GrpGPC -&gt; GrpPerm
5<->CosetKernel(G, H) <->text838.htm#9675<->CosetKernel(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
4<->GrpGPC_CosetAction (Example H77E8)<->text838.htm#9676<->GrpGPC_CosetAction (Example H77E8)
4<->Example-CosetAction :<->text838.htm#9676<->Example-CosetAction :: GrpGPC_CosetAction (Example H77E8)
3<->coset-space :<->text838.htm<->coset-space :: Coset Spaces (POLYCYCLIC GROUPS)
3<->subgroup-structure :<->text839.htm<->subgroup-structure :: The Subgroup Structure (POLYCYCLIC GROUPS)
3<->operation-subgroup :<->text839.htm#9678<->operation-subgroup :: General Subgroup Constructions (POLYCYCLIC GROUPS)
5<->Conjugate :: H ^ g <->text839.htm#9679<->Conjugate :: H ^ g : GrpGPC, GrpGPCElt -&gt; GrpGPC
5<->H ^ g <->text839.htm#9679<->H ^ g : GrpGPC, GrpGPCElt -&gt; GrpGPC
5<->ncl :: H ^ G <->text839.htm#9680<->ncl :: H ^ G : GrpGPC, GrpGPC -&gt; GrpGPC
5<->NormalClosure :: H ^ G <->text839.htm#9680<->NormalClosure :: H ^ G : GrpGPC, GrpGPC -&gt; GrpGPC
5<->H ^ G <->text839.htm#9680<->H ^ G : GrpGPC, GrpGPC -&gt; GrpGPC
5<->CommutatorSubgroup(H, K) <->text839.htm#9681<->CommutatorSubgroup(H, K) : GrpGPC, GrpGPC -> GrpGPC
5<->CommutatorSubgroup(G, H, K) <->text839.htm#9681<->CommutatorSubgroup(G, H, K) : GrpGPC, GrpGPC, GrpGPC -&gt; GrpGPC
3<->operation-subgroup :<->text839.htm#9678<->operation-subgroup :: General Subgroup Constructions (POLYCYCLIC GROUPS)
3<->operation-subgroup-nilpotent :<->text839.htm#9682<->operation-subgroup-nilpotent :: Subgroup Constructions Requiring a Nil-po-tent Covering Group (POLYCYCLIC GROUPS)
5<->H meet K <->text839.htm#9683<->H meet K : GrpGPC, GrpGPC -&gt; GrpGPC
5<->H meet:= K <->text839.htm#9684<->H meet:= K : GrpGPC, GrpGPC -&gt; GrpGPC
5<->Centralizer :: Centraliser(G, g) <->text839.htm#9685<->Centralizer :: Centraliser(G, g) : GrpGPC, GrpGPCElt -&gt; GrpGPC
5<->Centraliser(G, g) <->text839.htm#9685<->Centraliser(G, g) : GrpGPC, GrpGPCElt -&gt; GrpGPC
5<->Centralizer :: Centraliser(G, H) <->text839.htm#9686<->Centralizer :: Centraliser(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
5<->Centraliser(G, H) <->text839.htm#9686<->Centraliser(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
5<->Core(G, H) <->text839.htm#9687<->Core(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
5<->Normalizer :: Normaliser(G, H) <->text839.htm#9688<->Normalizer :: Normaliser(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
5<->Normaliser(G, H) <->text839.htm#9688<->Normaliser(G, H) : GrpGPC, GrpGPC -&gt; GrpGPC
3<->operation-subgroup-nilpotent :<->text839.htm#9682<->operation-subgroup-nilpotent :: Subgroup Constructions Requiring a Nil-po-tent Covering Group (POLYCYCLIC GROUPS)
3<->subgroup-structure :<->text839.htm<->subgroup-structure :: The Subgroup Structure (POLYCYCLIC GROUPS)
3<->group-boolean :<->text840.htm<->group-boolean :: General Group Properties (POLYCYCLIC GROUPS)
5<->IsAbelian(G) <->text840.htm#9690<->IsAbelian(G) : GrpGPC -&gt; BoolElt
5<->IsCyclic(G) <->text840.htm#9691<->IsCyclic(G) : GrpGPC -&gt; BoolElt
5<->IsElementaryAbelian(G) <->text840.htm#9692<->IsElementaryAbelian(G) : GrpGPC -&gt; BoolElt
5<->IsFinite(G) <->text840.htm#9693<->IsFinite(G) : GrpGPC -&gt; BoolElt
5<->IsNilpotent(G) <->text840.htm#9694<->IsNilpotent(G) : GrpGPC -&gt; BoolElt
5<->IsPerfect(G) <->text840.htm#9695<->IsPerfect(G) : GrpGPC -&gt; BoolElt
5<->IsSimple(G) <->text840.htm#9696<->IsSimple(G) : GrpGPC -&gt; BoolElt
5<->IsSolvable :: IsSoluble(G) <->text840.htm#9697<->IsSolvable :: IsSoluble(G) : GrpGPC -&gt; BoolElt
5<->IsSoluble(G) <->text840.htm#9697<->IsSoluble(G) : GrpGPC -&gt; BoolElt
3<->subgroup-boolean :<->text840.htm#9698<->subgroup-boolean :: General Properties of Subgroups (POLYCYCLIC GROUPS)
5<->IsCentral(G, H) <->text840.htm#9699<->IsCentral(G, H) : GrpGPC, GrpGPC -&gt; BoolElt
5<->IsNormal(G, H) <->text840.htm#9700<->IsNormal(G, H) : GrpGPC, GrpGPC -&gt; BoolElt
3<->subgroup-boolean :<->text840.htm#9698<->subgroup-boolean :: General Properties of Subgroups (POLYCYCLIC GROUPS)
3<->subgroup-boolean-nilpotent :<->text840.htm#9701<->subgroup-boolean-nilpotent :: Properties of Subgroups Requiring a Nil-po-tent Covering Group (POLYCYCLIC GROUPS)
5<->IsConjugate(G, H, K) <->text840.htm#9702<->IsConjugate(G, H, K) : GrpGPC, GrpGPC, GrpGPC -&gt; BoolElt, GrpGPCElt
5<->IsSelfNormalizing :: IsSelfNormalising(G, H) <->text840.htm#9703<->IsSelfNormalizing :: IsSelfNormalising(G, H) : GrpGPC, GrpGPC -&gt; BoolElt
5<->IsSelfNormalising(G, H) <->text840.htm#9703<->IsSelfNormalising(G, H) : GrpGPC, GrpGPC -&gt; BoolElt
4<->GrpGPC_SubgroupStructure (Example H77E9)<->text840.htm#9704<->GrpGPC_SubgroupStructure (Example H77E9)
4<->Example-SubgroupStructure :<->text840.htm#9704<->Example-SubgroupStructure :: GrpGPC_SubgroupStructure (Example H77E9)
4<->GrpGPC_SubgroupStructure2 (Example H77E10)<->text840.htm#9705<->GrpGPC_SubgroupStructure2 (Example H77E10)
4<->Example-SubgroupStructure2 :<->text840.htm#9705<->Example-SubgroupStructure2 :: GrpGPC_SubgroupStructure2 (Example H77E10)
3<->subgroup-boolean-nilpotent :<->text840.htm#9701<->subgroup-boolean-nilpotent :: Properties of Subgroups Requiring a Nil-po-tent Covering Group (POLYCYCLIC GROUPS)
3<->group-boolean :<->text840.htm<->group-boolean :: General Group Properties (POLYCYCLIC GROUPS)
3<->characteristic-subgroup-normal-structure :<->text841.htm<->characteristic-subgroup-normal-structure :: Normal Structure and Characteristic Subgroups (POLYCYCLIC GROUPS)
3<->subgroup-series :<->text841.htm#9707<->subgroup-series :: Characteristic Subgroups and Subgroup Series (POLYCYCLIC GROUPS)
5<->Center :: Centre(G) <->text841.htm#9708<->Center :: Centre(G) : GrpGPC -&gt; GrpGPC
5<->Centre(G) <->text841.htm#9708<->Centre(G) : GrpGPC -&gt; GrpGPC
5<->DerivedLength(G) <->text841.htm#9709<->DerivedLength(G) : GrpGPC -&gt; RngIntElt
5<->DerivedSeries(G) <->text841.htm#9710<->DerivedSeries(G) : GrpGPC -&gt; [GrpGPC]
5<->DerivedGroup :: DerivedSubgroup(G) <->text841.htm#9711<->DerivedGroup :: DerivedSubgroup(G) : GrpGPC -&gt; GrpGPC
5<->DerivedSubgroup(G) <->text841.htm#9711<->DerivedSubgroup(G) : GrpGPC -&gt; GrpGPC
5<->EFASeries(G) <->text841.htm#9712<->EFASeries(G) : GrpGPC -&gt; [GrpGPC]
5<->FittingLength(G) <->text841.htm#9713<->FittingLength(G) : GrpGPC -&gt; RngIntElt
5<->FittingSeries(G) <->text841.htm#9714<->FittingSeries(G) : GrpGPC -&gt; [GrpGPC]
5<->FittingGroup :: FittingSubgroup(G) <->text841.htm#9715<->FittingGroup :: FittingSubgroup(G) : GrpGPC -&gt; GrpGPC
5<->FittingSubgroup(G) <->text841.htm#9715<->FittingSubgroup(G) : GrpGPC -&gt; GrpGPC
5<->HasComputableLCS(G) <->text841.htm#9716<->HasComputableLCS(G) : GrpGPC -&gt; BoolElt
5<->LowerCentralSeries(G) <->text841.htm#9717<->LowerCentralSeries(G) : GrpGPC -&gt; [GrpGPC]
5<->NilpotencyClass(G) <->text841.htm#9718<->NilpotencyClass(G) : GrpGPC -&gt; RngIntElt
5<->NilpotentPresentation(G) <->text841.htm#9719<->NilpotentPresentation(G) : GrpGPC -&gt; GrpGPC, Map
5<->SemisimpleEFASeries(G) <->text841.htm#9720<->SemisimpleEFASeries(G) : GrpGPC -&gt; [GrpGPC]
5<->UpperCentralSeries(G) <->text841.htm#9721<->UpperCentralSeries(G) : GrpGPC -&gt; [GrpGPC]
4<->GrpGPC_NormalStructure (Example H77E11)<->text841.htm#9722<->GrpGPC_NormalStructure (Example H77E11)
4<->Example-NormalStructure :<->text841.htm#9722<->Example-NormalStructure :: GrpGPC_NormalStructure (Example H77E11)
3<->subgroup-series :<->text841.htm#9707<->subgroup-series :: Characteristic Subgroups and Subgroup Series (POLYCYCLIC GROUPS)
3<->abelian-structure :<->text841.htm#9723<->abelian-structure :: The Abelian Quotient Structure of a Group (POLYCYCLIC GROUPS)
5<->AbelianQuotient(G) <->text841.htm#9724<->AbelianQuotient(G) : GrpGPC -&gt; GrpAb, Map
5<->AQInvariants :: AbelianQuotientInvariants(G) <->text841.htm#9725<->AQInvariants :: AbelianQuotientInvariants(G) : GrpGPC -&gt; [ RngIntElt ]
5<->AbelianQuotientInvariants(G) <->text841.htm#9725<->AbelianQuotientInvariants(G) : GrpGPC -&gt; [ RngIntElt ]
5<->ElementaryAbelianQuotient(G, p) <->text841.htm#9726<->ElementaryAbelianQuotient(G, p) : GrpGPC, RngIntElt -&gt; GrpAb, Map
5<->FreeAbelianQuotient(G) <->text841.htm#9727<->FreeAbelianQuotient(G) : GrpGPC -&gt; GrpAb, Map
3<->abelian-structure :<->text841.htm#9723<->abelian-structure :: The Abelian Quotient Structure of a Group (POLYCYCLIC GROUPS)
3<->characteristic-subgroup-normal-structure :<->text841.htm<->characteristic-subgroup-normal-structure :: Normal Structure and Characteristic Subgroups (POLYCYCLIC GROUPS)
3<->conjugate :<->text842.htm<->conjugate :: Conjugacy (POLYCYCLIC GROUPS)
5<->IsConjugate(G, g, h) <->text842.htm#9729<->IsConjugate(G, g, h) : GrpGPC, GrpGPCElt, GrpGPCElt -&gt; BoolElt, GrpGPCElt
5<->IsConjugate(G, H, K) <->text842.htm#9730<->IsConjugate(G, H, K) : GrpGPC, GrpGPC, GrpGPC -&gt; BoolElt, GrpGPCElt
4<->GrpGPC_Conjugacy (Example H77E12)<->text842.htm#9731<->GrpGPC_Conjugacy (Example H77E12)
4<->Example-Conjugacy :<->text842.htm#9731<->Example-Conjugacy :: GrpGPC_Conjugacy (Example H77E12)
3<->conjugate :<->text842.htm<->conjugate :: Conjugacy (POLYCYCLIC GROUPS)
3<->representation-theory :<->text843.htm<->representation-theory :: Representation Theory (POLYCYCLIC GROUPS)
5<->EFAModuleMaps(G) <->text843.htm#9733<->EFAModuleMaps(G) : GrpGPC -&gt; [ModGrp]
5<->EFAModules(G) <->text843.htm#9734<->EFAModules(G) : GrpGPC -&gt; [ModGrp]
5<->GModule(G, A) <->text843.htm#9735<->GModule(G, A) : GrpGPC, GrpGPC -> ModGrp, Map
5<->GModule(G, A, p) <->text843.htm#9735<->GModule(G, A, p) : GrpGPC, GrpGPC, RngIntElt -&gt; ModGrp, Map
5<->GModule(G, A, B) <->text843.htm#9736<->GModule(G, A, B) : GrpGPC, GrpGPC, GrpGPC -> ModGrp, Map
5<->GModule(G, A, B, p) <->text843.htm#9736<->GModule(G, A, B, p) : GrpGPC, GrpGPC, GrpGPC, RngIntElt -&gt; ModGrp, Map
5<->GModulePrimes(G, A) <->text843.htm#9737<->GModulePrimes(G, A) : GrpGPC, GrpGPC -&gt; SetMulti
5<->GModulePrimes(G, A, B) <->text843.htm#9738<->GModulePrimes(G, A, B) : GrpGPC, GrpGPC, GrpGPC -&gt; SetMulti
5<->SemisimpleEFAModuleMaps(G) <->text843.htm#9739<->SemisimpleEFAModuleMaps(G) : GrpGPC -&gt; [ModGrp]
5<->SemisimpleEFAModules(G) <->text843.htm#9740<->SemisimpleEFAModules(G) : GrpGPC -&gt; [ModGrp]
4<->GrpGPC_RepresentationTheory (Example H77E13)<->text843.htm#9741<->GrpGPC_RepresentationTheory (Example H77E13)
4<->Example-RepresentationTheory :<->text843.htm#9741<->Example-RepresentationTheory :: GrpGPC_RepresentationTheory (Example H77E13)
4<->GrpGPC_gmoduleprimes (Example H77E14)<->text843.htm#9742<->GrpGPC_gmoduleprimes (Example H77E14)
4<->Example-gmoduleprimes :<->text843.htm#9742<->Example-gmoduleprimes :: GrpGPC_gmoduleprimes (Example H77E14)
4<->GrpGPC_FittingSubgroup (Example H77E15)<->text843.htm#9743<->GrpGPC_FittingSubgroup (Example H77E15)
4<->Example-FittingSubgroup :<->text843.htm#9743<->Example-FittingSubgroup :: GrpGPC_FittingSubgroup (Example H77E15)
4<->GrpGPC_ModuleMaps (Example H77E16)<->text843.htm#9744<->GrpGPC_ModuleMaps (Example H77E16)
4<->Example-ModuleMaps :<->text843.htm#9744<->Example-ModuleMaps :: GrpGPC_ModuleMaps (Example H77E16)
3<->representation-theory :<->text843.htm<->representation-theory :: Representation Theory (POLYCYCLIC GROUPS)
3<->power-group :<->text844.htm<->power-group :: Power Groups (POLYCYCLIC GROUPS)
5<->Parent(G) <->text844.htm#9746<->Parent(G) : GrpGPC -&gt; PowStr
5<->PowerGroup(G) <->text844.htm#9747<->PowerGroup(G) : GrpPC -&gt; PowerGroup
3<->power-group :<->text844.htm<->power-group :: Power Groups (POLYCYCLIC GROUPS)
3<->polycyclic :<->text831.htm<->polycyclic :: POLYCYCLIC GROUPS
3<->braid :<->text847.htm<->braid :: BRAID GROUPS
3<->GrpBrd :<->text848.htm<->GrpBrd :: Introduction (BRAID GROUPS)
3<->braid-groups-introduction :<->text848.htm<->braid-groups-introduction :: Introduction (BRAID GROUPS)
3<->braid-groups-introduction-lattice :<->text848.htm#9752<->braid-groups-introduction-lattice :: Lattice Structure and Simple Elements (BRAID GROUPS)
3<->braid-groups-introduction-internal :<->text848.htm#9753<->braid-groups-introduction-internal :: Representing Elements of a Braid  Group (BRAID GROUPS)
3<->braid-groups-introduction-internal-conversion :<->text848.htm#9754<->braid-groups-introduction-internal-conversion :: Automatic Conversions (BRAID GROUPS)
3<->braid-groups-introduction-internal-default :<->text848.htm#9755<->braid-groups-introduction-internal-default :: Default Presentations (BRAID GROUPS)
3<->braid-groups-introduction-internal-cfp :<->text848.htm#9756<->braid-groups-introduction-internal-cfp :: Representation Used for Group Operations (BRAID GROUPS)
3<->braid-groups-introduction-internal-printing :<->text848.htm#9757<->braid-groups-introduction-internal-printing :: Printing of Elements (BRAID GROUPS)
3<->braid-groups-introduction-internal :<->text848.htm#9753<->braid-groups-introduction-internal :: Representing Elements of a Braid  Group (BRAID GROUPS)
3<->braid-groups-introduction-normal-form :<->text848.htm#9758<->braid-groups-introduction-normal-form :: Normal Form for Elements of a Braid Group (BRAID GROUPS)
3<->braid-groups-introduction-mixed-canonical-form :<->text848.htm#9759<->braid-groups-introduction-mixed-canonical-form :: Mixed Canonical Form and Lattice Operations (BRAID GROUPS)
3<->braid-groups-introduction-conjugacy :<->text848.htm#9760<->braid-groups-introduction-conjugacy :: Conjugacy Testing and Conjugacy  Search (BRAID GROUPS)
3<->braid-groups-introduction-conjugacy-defs :<->text848.htm#9761<->braid-groups-introduction-conjugacy-defs :: Definition of the Class Invariants (BRAID GROUPS)
3<->braid-groups-introduction-conjugacy-algorithm :<->text848.htm#9762<->braid-groups-introduction-conjugacy-algorithm :: Computing the Class Invariants (BRAID GROUPS)
3<->braid-groups-introduction-conjugacy-conjugacy :<->text848.htm#9763<->braid-groups-introduction-conjugacy-conjugacy :: Conjugacy Testing and Conjugacy Search (BRAID GROUPS)
3<->braid-groups-introduction-conjugacy :<->text848.htm#9760<->braid-groups-introduction-conjugacy :: Conjugacy Testing and Conjugacy  Search (BRAID GROUPS)
3<->braid-groups-introduction :<->text848.htm<->braid-groups-introduction :: Introduction (BRAID GROUPS)
3<->braid-groups-construction :<->text849.htm<->braid-groups-construction :: Constructing and Accessing  Braid Groups (BRAID GROUPS)
5<->BraidGroup(GrpBrd, n$\colon$ \parameters) <->text849.htm#9765<->BraidGroup(GrpBrd, n$\colon$ \parameters) : Cat, RngIntElt -> GrpBrd
5<->BraidGroup(n: parameters) <->text849.htm#9765<->BraidGroup(n: parameters) : RngIntElt -&gt; GrpBrd
5<->GetPresentation(B) <->text849.htm#9766<->GetPresentation(B) : GrpBrd -&gt; MonStgElt
5<->SetPresentation(~B, s) <->text849.htm#9767<->SetPresentation(~B, s) : GrpBrd, MonStgElt -&gt;
5<->GetForceCFP(B) <->text849.htm#9768<->GetForceCFP(B) : GrpBrd -&gt; BoolElt
5<->SetForceCFP(~B, b) <->text849.htm#9769<->SetForceCFP(~B, b) : GrpBrd, BoolElt -&gt;
5<->GetElementPrintFormat(B) <->text849.htm#9770<->GetElementPrintFormat(B) : GrpBrd -&gt; MonStgElt
5<->SetElementPrintFormat(~B, s) <->text849.htm#9771<->SetElementPrintFormat(~B, s) : GrpBrd, MonStgElt -&gt;
5<->NumberOfStrings(B) <->text849.htm#9772<->NumberOfStrings(B) : GrpBrd -&gt; RngIntElt
5<->Ngens :: NumberOfGenerators(B) <->text849.htm#9773<->Ngens :: NumberOfGenerators(B) : GrpBrd -&gt; RngIntElt
5<->NumberOfGenerators(B) <->text849.htm#9773<->NumberOfGenerators(B) : GrpBrd -&gt; RngIntElt
3<->braid-groups-construction :<->text849.htm<->braid-groups-construction :: Constructing and Accessing  Braid Groups (BRAID GROUPS)
3<->braid-groups-element-creation :<->text850.htm<->braid-groups-element-creation :: Creating Elements of a Braid  Group (BRAID GROUPS)
5<->Representative(B) <->text850.htm#9775<->Representative(B) : GrpBrd -&gt; GrpBrdElt
5<->Identity(B) <->text850.htm#9776<->Identity(B) : GrpBrd -&gt; GrpBrdElt
5<->! :: Identity(B) <->text850.htm#9776<->! :: Identity(B) : GrpBrd -&gt; GrpBrdElt
5<->Identity(B) <->text850.htm#9776<->Identity(B) : GrpBrd -&gt; GrpBrdElt
5<->FundamentalElement(B: parameters) <->text850.htm#9777<->FundamentalElement(B: parameters) : GrpBrd -&gt; GrpBrdElt
5<->Generators(B: parameters) <->text850.htm#9778<->Generators(B: parameters) : GrpBrd -&gt; [ GrpBrd ]
5<->B . i <->text850.htm#9779<->B . i : GrpBrd, RngIntElt -&gt; GrpBrdElt
5<->B . T <->text850.htm#9780<->B . T : GrpBrd, Tup -&gt; GrpBrdElt
5<->B ! [ i1, ..., ik ] <->text850.htm#9781<->B ! [ i<sub>1</sub>, ..., i<sub>k</sub> ] : GrpBrd, [ RngIntElt ] -&gt; GrpBrdElt
5<->B ! [ T1, ..., Tk ] <->text850.htm#9782<->B ! [ T<sub>1</sub>, ..., T<sub>k</sub> ] : GrpBrd, [ Tup ] -&gt; GrpBrdElt
5<->! :: B  p <->text850.htm#9783<->! :: B  p : GrpBrd, GrpPermElt -&gt; GrpBrdElt
5<->B ! [ p1, ...,pk ]<->text850.htm#9784<->B ! [ p<sub>1</sub>, ...,p<sub>k</sub> ]: GrpBrd, [ GrpPermElt ] -&gt; GrpBrdElt
5<->! :: B  T <->text850.htm#9785<->! :: B  T : GrpBrd, Tup -&gt; GrpBrdElt
5<->IsProductOfParallelDescendingCycles(p) <->text850.htm#9786<->IsProductOfParallelDescendingCycles(p) : GrpPermElt -&gt; BoolElt
5<->RandomCFP :: Random(B, r, s, m, n: parameters) <->text850.htm#9787<->RandomCFP :: Random(B, r, s, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; GrpBrdElt
5<->Random(B$\colon$ \parameters) <->text850.htm#9787<->Random(B$\colon$ \parameters) : GrpBrd -> GrpBrdElt
5<->RandomCFP(B$\colon$ \parameters) : GrpBrd -> GrpBrdElt :: Random(B, r, s, m, n: parameters) <->text850.htm#9787<->RandomCFP(B$\colon$ \parameters) : GrpBrd -> GrpBrdElt :: Random(B, r, s, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; GrpBrdElt
5<->Random(B, r, s, m, n: parameters) <->text850.htm#9787<->Random(B, r, s, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; GrpBrdElt
5<->RandomWord :: Random(B, m, n: parameters) <->text850.htm#9788<->RandomWord :: Random(B, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt -&gt; GrpBrdElt
5<->RandomWord(B$\colon$ \parameters) : GrpBrd -> GrpBrdElt :: Random(B, m, n: parameters) <->text850.htm#9788<->RandomWord(B$\colon$ \parameters) : GrpBrd -> GrpBrdElt :: Random(B, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt -&gt; GrpBrdElt
5<->Random(B, m, n: parameters) <->text850.htm#9788<->Random(B, m, n: parameters) : GrpBrd, RngIntElt, RngIntElt -&gt; GrpBrdElt
4<->GrpBrd_Constructor (Example H78E1)<->text850.htm#9789<->GrpBrd_Constructor (Example H78E1)
4<->Example-Constructor :<->text850.htm#9789<->Example-Constructor :: GrpBrd_Constructor (Example H78E1)
3<->braid-groups-element-creation :<->text850.htm<->braid-groups-element-creation :: Creating Elements of a Braid  Group (BRAID GROUPS)
3<->braid-groups-elements :<->text851.htm<->braid-groups-elements :: Working with Elements of a  Braid Group (BRAID GROUPS)
3<->braid-groups-elements-access :<->text851.htm#9791<->braid-groups-elements-access :: Accessing Information (BRAID GROUPS)
5<->Parent(u) <->text851.htm#9792<->Parent(u) : GrpBrdElt -&gt; GrpBrd
5<-># u <->text851.htm#9793<-># u : GrpBrdElt -&gt; RngIntElt
5<->CFP :: CanonicalFactorRepresentation(u: parameters) <->text851.htm#9794<->CFP :: CanonicalFactorRepresentation(u: parameters) : GrpBrdElt -&gt; Tup
5<->CanonicalFactorRepresentation(u: parameters) <->text851.htm#9794<->CanonicalFactorRepresentation(u: parameters) : GrpBrdElt -&gt; Tup
5<->ElementToSequence :: WordToSequence(u: parameters) <->text851.htm#9795<->ElementToSequence :: WordToSequence(u: parameters) : GrpBrdElt -&gt; SeqEnum
5<->Eltseq :: WordToSequence(u: parameters) <->text851.htm#9795<->Eltseq :: WordToSequence(u: parameters) : GrpBrdElt -&gt; SeqEnum
5<->WordToSequence(u: parameters) <->text851.htm#9795<->WordToSequence(u: parameters) : GrpBrdElt -&gt; SeqEnum
5<->InducedPermutation(u) <->text851.htm#9796<->InducedPermutation(u) : GrpBrdElt -&gt; GrpPermElt
5<->CanonicalLength(u: parameters) <->text851.htm#9797<->CanonicalLength(u: parameters) : GrpBrdElt -&gt; RngIntElt
5<->Infimum(u: parameters) <->text851.htm#9798<->Infimum(u: parameters) : GrpBrdElt -&gt; RngIntElt
5<->Supremum(u: parameters) <->text851.htm#9799<->Supremum(u: parameters) : GrpBrdElt -&gt; RngIntElt
5<->SuperSummitCanonicalLength(u: parameters) <->text851.htm#9800<->SuperSummitCanonicalLength(u: parameters) : GrpBrdElt -&gt; RngIntElt
5<->SuperSummitInfimum(u: parameters) <->text851.htm#9801<->SuperSummitInfimum(u: parameters) : GrpBrdElt -&gt; RngIntElt
5<->SuperSummitSupremum(u: parameters) <->text851.htm#9802<->SuperSummitSupremum(u: parameters) : GrpBrdElt -&gt; RngIntElt
4<->GrpBrd_Access (Example H78E2)<->text851.htm#9803<->GrpBrd_Access (Example H78E2)
4<->Example-Access :<->text851.htm#9803<->Example-Access :: GrpBrd_Access (Example H78E2)
3<->braid-groups-elements-access :<->text851.htm#9791<->braid-groups-elements-access :: Accessing Information (BRAID GROUPS)
3<->braid-groups-normal-form :<->text851.htm#9804<->braid-groups-normal-form :: Computing Normal Forms of  Elements (BRAID GROUPS)
5<->LeftNormalForm(u: parameters) <->text851.htm#9805<->LeftNormalForm(u: parameters) : GrpBrdElt -&gt; GrpBrdElt
5<->LeftNormalForm(~u: parameters) <->text851.htm#9806<->LeftNormalForm(~u: parameters) : GrpBrdElt -&gt;
5<->RightNormalForm(u: parameters) <->text851.htm#9807<->RightNormalForm(u: parameters) : GrpBrdElt -&gt; GrpBrdElt
5<->RightNormalForm(~u: parameters) <->text851.htm#9808<->RightNormalForm(~u: parameters) : GrpBrdElt -&gt;
5<->LeftMixedCanonicalForm(u: parameters) <->text851.htm#9809<->LeftMixedCanonicalForm(u: parameters) : GrpBrdElt -&gt; Tup, Tup
5<->RightMixedCanonicalForm(u: parameters) <->text851.htm#9810<->RightMixedCanonicalForm(u: parameters) : GrpBrdElt -&gt; Tup, Tup
4<->GrpBrd_NormalForm (Example H78E3)<->text851.htm#9811<->GrpBrd_NormalForm (Example H78E3)
4<->Example-NormalForm :<->text851.htm#9811<->Example-NormalForm :: GrpBrd_NormalForm (Example H78E3)
3<->braid-groups-normal-form :<->text851.htm#9804<->braid-groups-normal-form :: Computing Normal Forms of  Elements (BRAID GROUPS)
3<->braid-groups-arithmetic :<->text851.htm#9812<->braid-groups-arithmetic :: Arithmetic Operators and Functions for Elements (BRAID GROUPS)
5<->u * v <->text851.htm#9813<->u * v : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->u *:= v <->text851.htm#9814<->u *:= v : GrpBrdElt, GrpBrdElt -&gt;
5<->u / v <->text851.htm#9815<->u / v : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->u /:= v <->text851.htm#9816<->u /:= v : GrpBrdElt, GrpBrdElt -&gt;
5<->u ^ n <->text851.htm#9817<->u ^ n : GrpBrdElt, RngIntElt -&gt; GrpBrdElt
5<->u ^:= n <->text851.htm#9818<->u ^:= n : GrpBrdElt, RngIntElt -&gt;
5<->u ^ v <->text851.htm#9819<->u ^ v : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->u ^:= v <->text851.htm#9820<->u ^:= v : GrpBrdElt, GrpBrdElt -&gt;
5<->Inverse(u) <->text851.htm#9821<->Inverse(u) : GrpBrdElt -&gt; GrpBrdElt
5<->Inverse(~u) <->text851.htm#9822<->Inverse(~u) : GrpBrdElt -&gt;
5<->LeftConjugate(u, v) <->text851.htm#9823<->LeftConjugate(u, v) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftConjugate(~u, v) <->text851.htm#9824<->LeftConjugate(~u, v) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftDiv(u, v) <->text851.htm#9825<->LeftDiv(u, v) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftDiv(u, ~v) <->text851.htm#9826<->LeftDiv(u, ~v) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->Cycle(u: parameters) <->text851.htm#9827<->Cycle(u: parameters) : GrpBrdElt -&gt; GrpBrdElt
5<->Cycle(~u: parameters) <->text851.htm#9828<->Cycle(~u: parameters) : GrpBrdElt -&gt;
5<->Decycle(u: parameters) <->text851.htm#9829<->Decycle(u: parameters) : GrpBrdElt -&gt; GrpBrdElt
5<->Decycle(~u: parameters) <->text851.htm#9830<->Decycle(~u: parameters) : GrpBrdElt -&gt;
4<->GrpBrd_Arithmetic (Example H78E4)<->text851.htm#9831<->GrpBrd_Arithmetic (Example H78E4)
4<->Example-Arithmetic :<->text851.htm#9831<->Example-Arithmetic :: GrpBrd_Arithmetic (Example H78E4)
3<->braid-groups-arithmetic :<->text851.htm#9812<->braid-groups-arithmetic :: Arithmetic Operators and Functions for Elements (BRAID GROUPS)
3<->braid-groups-boolean :<->text851.htm#9832<->braid-groups-boolean :: Boolean Predicates for Elements (BRAID GROUPS)
5<->u in B <->text851.htm#9833<->u in B : GrpBrdElt, GrpBrd -&gt; BoolElt
5<->u notin B <->text851.htm#9834<->u notin B : GrpBrdElt, GrpBrd -&gt; BoolElt
5<->IsEmptyWord(u: parameters) <->text851.htm#9835<->IsEmptyWord(u: parameters) : GrpBrdElt -&gt; BoolElt
5<->AreIdentical(u, v: parameters) <->text851.htm#9836<->AreIdentical(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsSimple(u: parameters) <->text851.htm#9837<->IsSimple(u: parameters) : GrpBrdElt -&gt; BoolElt
5<->IsSuperSummitRepresentative(u: parameters) <->text851.htm#9838<->IsSuperSummitRepresentative(u: parameters) : GrpBrdElt -&gt; BoolElt
5<->IsUltraSummitRepresentative(u: parameters) <->text851.htm#9839<->IsUltraSummitRepresentative(u: parameters) : GrpBrdElt -&gt; BoolElt
5<->IsIdentity(u: parameters) <->text851.htm#9840<->IsIdentity(u: parameters) : GrpBrdElt -&gt; BoolElt
5<->u eq v <->text851.htm#9841<->u eq v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->u ne v <->text851.htm#9842<->u ne v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsLE :: u &le;v <->text851.htm#9843<->IsLE :: u &le;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsLe :: u &le;v <->text851.htm#9843<->IsLe :: u &le;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->u &le;v <->text851.htm#9843<->u &le;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsGE :: u &ge;v <->text851.htm#9844<->IsGE :: u &ge;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsGe :: u &ge;v <->text851.htm#9844<->IsGe :: u &ge;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->u &ge;v <->text851.htm#9844<->u &ge;v : GrpBrdElt, GrpBrdElt -&gt; BoolElt
5<->IsConjugate(u, v: parameters) <->text851.htm#9845<->IsConjugate(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; BoolElt, GrpBrdElt
4<->GrpBrd_Boolean (Example H78E5)<->text851.htm#9846<->GrpBrd_Boolean (Example H78E5)
4<->Example-Boolean :<->text851.htm#9846<->Example-Boolean :: GrpBrd_Boolean (Example H78E5)
3<->braid-groups-boolean :<->text851.htm#9832<->braid-groups-boolean :: Boolean Predicates for Elements (BRAID GROUPS)
3<->braid-groups-lattice :<->text851.htm#9847<->braid-groups-lattice :: Lattice Operations (BRAID GROUPS)
5<->LeftGcd :: LeftGCD(u, v: parameters) <->text851.htm#9848<->LeftGcd :: LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftGreatestCommonDivisor :: LeftGCD(u, v: parameters) <->text851.htm#9848<->LeftGreatestCommonDivisor :: LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftGCD(u, v: parameters) <->text851.htm#9848<->LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->Gcd :: LeftGCD(u, v: parameters) <->text851.htm#9848<->Gcd :: LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->GreatestCommonDivisor :: LeftGCD(u, v: parameters) <->text851.htm#9848<->GreatestCommonDivisor :: LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftGCD(u, v: parameters) <->text851.htm#9848<->LeftGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightGcd :: RightGCD(u, v: parameters) <->text851.htm#9849<->RightGcd :: RightGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightGreatestCommonDivisor :: RightGCD(u, v: parameters) <->text851.htm#9849<->RightGreatestCommonDivisor :: RightGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightGCD(u, v: parameters) <->text851.htm#9849<->RightGCD(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftGcd :: LeftGCD(S: parameters) <->text851.htm#9850<->LeftGcd :: LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftGreatestCommonDivisor :: LeftGCD(S: parameters) <->text851.htm#9850<->LeftGreatestCommonDivisor :: LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftGCD(S: parameters) <->text851.htm#9850<->LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->Gcd :: LeftGCD(S: parameters) <->text851.htm#9850<->Gcd :: LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->GreatestCommonDivisor :: LeftGCD(S: parameters) <->text851.htm#9850<->GreatestCommonDivisor :: LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftGCD(S: parameters) <->text851.htm#9850<->LeftGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightGcd :: RightGCD(S: parameters) <->text851.htm#9851<->RightGcd :: RightGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightGreatestCommonDivisor :: RightGCD(S: parameters) <->text851.htm#9851<->RightGreatestCommonDivisor :: RightGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightGCD(S: parameters) <->text851.htm#9851<->RightGCD(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftLcm :: LeftLCM(u, v: parameters) <->text851.htm#9852<->LeftLcm :: LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftLeastCommonMultiple :: LeftLCM(u, v: parameters) <->text851.htm#9852<->LeftLeastCommonMultiple :: LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftLCM(u, v: parameters) <->text851.htm#9852<->LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->Lcm :: LeftLCM(u, v: parameters) <->text851.htm#9852<->Lcm :: LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeastCommonMultiple :: LeftLCM(u, v: parameters) <->text851.htm#9852<->LeastCommonMultiple :: LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftLCM(u, v: parameters) <->text851.htm#9852<->LeftLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightLcm :: RightLCM(u, v: parameters) <->text851.htm#9853<->RightLcm :: RightLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightLeastCommonMultiple :: RightLCM(u, v: parameters) <->text851.htm#9853<->RightLeastCommonMultiple :: RightLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->RightLCM(u, v: parameters) <->text851.htm#9853<->RightLCM(u, v: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->LeftLcm :: LeftLCM(S: parameters) <->text851.htm#9854<->LeftLcm :: LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftLeastCommonMultiple :: LeftLCM(S: parameters) <->text851.htm#9854<->LeftLeastCommonMultiple :: LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftLCM(S: parameters) <->text851.htm#9854<->LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->Lcm :: LeftLCM(S: parameters) <->text851.htm#9854<->Lcm :: LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeastCommonMultiple :: LeftLCM(S: parameters) <->text851.htm#9854<->LeastCommonMultiple :: LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->LeftLCM(S: parameters) <->text851.htm#9854<->LeftLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightLcm :: RightLCM(S: parameters) <->text851.htm#9855<->RightLcm :: RightLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightLeastCommonMultiple :: RightLCM(S: parameters) <->text851.htm#9855<->RightLeastCommonMultiple :: RightLCM(S: parameters) : Setq -&gt; GrpBrdElt
5<->RightLCM(S: parameters) <->text851.htm#9855<->RightLCM(S: parameters) : Setq -&gt; GrpBrdElt
4<->GrpBrd_Boolean (Example H78E6)<->text851.htm#9856<->GrpBrd_Boolean (Example H78E6)
4<->Example-Boolean :<->text851.htm#9856<->Example-Boolean :: GrpBrd_Boolean (Example H78E6)
3<->braid-groups-lattice :<->text851.htm#9847<->braid-groups-lattice :: Lattice Operations (BRAID GROUPS)
3<->braid-groups-sss :<->text851.htm#9857<->braid-groups-sss :: Invariants of Conjugacy Classes (BRAID GROUPS)
5<->PositiveConjugates(u: parameters) <->text851.htm#9858<->PositiveConjugates(u: parameters) : GrpBrdElt -&gt; SetIndx
5<->SuperSummitRepresentative(u: parameters) <->text851.htm#9859<->SuperSummitRepresentative(u: parameters) : GrpBrdElt -&gt; GrpBrdElt, GrpBrdElt
5<->SuperSummitSet(u: parameters) <->text851.htm#9860<->SuperSummitSet(u: parameters) : GrpBrdElt -&gt; SetIndx
5<->UltraSummitRepresentative(u: parameters) <->text851.htm#9861<->UltraSummitRepresentative(u: parameters) : GrpBrdElt -&gt; GrpBrdElt, GrpBrdElt
5<->UltraSummitSet(u: parameters) <->text851.htm#9862<->UltraSummitSet(u: parameters) : GrpBrdElt -&gt; SetIndx
4<->GrpBrd_Conjugates (Example H78E7)<->text851.htm#9863<->GrpBrd_Conjugates (Example H78E7)
4<->Example-Conjugates :<->text851.htm#9863<->Example-Conjugates :: GrpBrd_Conjugates (Example H78E7)
3<->braid-groups-sss-process :<->text851.htm#9864<->braid-groups-sss-process :: Computing Class Invariants Interactively (BRAID GROUPS)
5<->PositiveConjugatesProcess(u: parameters) <->text851.htm#9865<->PositiveConjugatesProcess(u: parameters) : GrpBrdElt -&gt; GrpBrdClassProc
5<->SuperSummitProcess(u: parameters) <->text851.htm#9866<->SuperSummitProcess(u: parameters) : GrpBrdElt -&gt; GrpBrdClassProc
5<->UltraSummitProcess(u: parameters) <->text851.htm#9867<->UltraSummitProcess(u: parameters) : GrpBrdElt -&gt; GrpBrdClassProc
5<->BaseElement(P) <->text851.htm#9868<->BaseElement(P) : GrpBrdClassProc -&gt; GrpBrdElt
5<-># P <->text851.htm#9869<-># P : GrpBrdClassProc -&gt; RngIntElt
5<->Representative(P) <->text851.htm#9870<->Representative(P) : GrpBrdClassProc -&gt; GrpBrdElt
5<->IsEmpty(P) <->text851.htm#9871<->IsEmpty(P) : GrpBrdClassProc -&gt; BoolElt
5<->Elements(P) <->text851.htm#9872<->Elements(P) : GrpBrdClassProc -&gt; SetIndx
5<->u in P <->text851.htm#9873<->u in P : GrpBrdElt, GrpBrdClassProc -&gt; BoolElt, GrpBrdElt
5<->u notin P <->text851.htm#9874<->u notin P : GrpBrdElt, GrpBrdClassProc -&gt; BoolElt
5<->NextElement(~P) <->text851.htm#9875<->NextElement(~P) : GrpBrdClassProc -&gt;
5<->Complete(~P) <->text851.htm#9876<->Complete(~P) : GrpBrdClassProc -&gt;
4<->GrpBrd_ConjugatesProcess (Example H78E8)<->text851.htm#9877<->GrpBrd_ConjugatesProcess (Example H78E8)
4<->Example-ConjugatesProcess :<->text851.htm#9877<->Example-ConjugatesProcess :: GrpBrd_ConjugatesProcess (Example H78E8)
3<->braid-groups-sss-process :<->text851.htm#9864<->braid-groups-sss-process :: Computing Class Invariants Interactively (BRAID GROUPS)
3<->braid-groups-minimal-simple :<->text851.htm#9878<->braid-groups-minimal-simple :: Computing Minimal Simple Elements (BRAID GROUPS)
5<->MinimalElementConjugatingToPositive(x, s: parameters) <->text851.htm#9879<->MinimalElementConjugatingToPositive(x, s: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->MinimalElementConjugatingToSuperSummit(x, s: parameters) <->text851.htm#9880<->MinimalElementConjugatingToSuperSummit(x, s: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->MinimalElementConjugatingToUltraSummit(x, s: parameters) <->text851.htm#9881<->MinimalElementConjugatingToUltraSummit(x, s: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->Transport(x, s: parameters) <->text851.htm#9882<->Transport(x, s: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
5<->Pullback(x, s: parameters) <->text851.htm#9883<->Pullback(x, s: parameters) : GrpBrdElt, GrpBrdElt -&gt; GrpBrdElt
4<->GrpBrd_MinimalSimpleElements (Example H78E9)<->text851.htm#9884<->GrpBrd_MinimalSimpleElements (Example H78E9)
4<->Example-MinimalSimpleElements :<->text851.htm#9884<->Example-MinimalSimpleElements :: GrpBrd_MinimalSimpleElements (Example H78E9)
3<->braid-groups-minimal-simple :<->text851.htm#9878<->braid-groups-minimal-simple :: Computing Minimal Simple Elements (BRAID GROUPS)
3<->braid-groups-sss :<->text851.htm#9857<->braid-groups-sss :: Invariants of Conjugacy Classes (BRAID GROUPS)
3<->braid-groups-elements :<->text851.htm<->braid-groups-elements :: Working with Elements of a  Braid Group (BRAID GROUPS)
3<->homomorphism :<->text852.htm<->homomorphism :: Homomorphisms (BRAID GROUPS)
3<->homomorphism_general :<->text852.htm#9886<->homomorphism_general :: General Remarks (BRAID GROUPS)
3<->homomorphism_constr :<->text852.htm#9887<->homomorphism_constr :: Constructing Homomorphisms (BRAID GROUPS)
5<->hom< B -> G | S : parameters > <->text852.htm#9888<->hom&lt; B -&gt; G | S : parameters &gt; : Struct , Struct -&gt; Map
3<->homomorphism_constr :<->text852.htm#9887<->homomorphism_constr :: Constructing Homomorphisms (BRAID GROUPS)
3<->homomorphism_access :<->text852.htm#9889<->homomorphism_access :: Accessing Homomorphisms (BRAID GROUPS)
5<->() :: e @ f <->text852.htm#9890<->() :: e @ f : GrpBrdElt, Map -&gt; GrpElt
5<->e @ f <->text852.htm#9890<->e @ f : GrpBrdElt, Map -&gt; GrpElt
5<->() :: B @ f <->text852.htm#9891<->() :: B @ f : GrpBrd, Map -&gt; Grp
5<->B @ f <->text852.htm#9891<->B @ f : GrpBrd, Map -&gt; Grp
5<->u @@ f <->text852.htm#9892<->u @@ f : GrpElt, Map -&gt; GrpBrdElt
5<->Domain(f) <->text852.htm#9893<->Domain(f) : Map -&gt; Grp
5<->Codomain(f) <->text852.htm#9894<->Codomain(f) : Map -&gt; Grp
5<->Image(f) <->text852.htm#9895<->Image(f) : Map -&gt; Grp
4<->GrpBrd_Homomorphisms (Example H78E10)<->text852.htm#9896<->GrpBrd_Homomorphisms (Example H78E10)
4<->Example-Homomorphisms :<->text852.htm#9896<->Example-Homomorphisms :: GrpBrd_Homomorphisms (Example H78E10)
3<->homomorphism_access :<->text852.htm#9889<->homomorphism_access :: Accessing Homomorphisms (BRAID GROUPS)
3<->homomorphism_representations :<->text852.htm#9897<->homomorphism_representations :: Representations of Braid Groups (BRAID GROUPS)
5<->SymmetricRepresentation(B) <->text852.htm#9898<->SymmetricRepresentation(B) : GrpBrd -&gt; Map
5<->BurauRepresentation(B) <->text852.htm#9899<->BurauRepresentation(B) : GrpBrd -&gt; Map
5<->BurauRepresentation(B, p) <->text852.htm#9900<->BurauRepresentation(B, p) : GrpBrd, RngIntElt -&gt; Map
4<->GrpBrd_Representations (Example H78E11)<->text852.htm#9901<->GrpBrd_Representations (Example H78E11)
4<->Example-Representations :<->text852.htm#9901<->Example-Representations :: GrpBrd_Representations (Example H78E11)
3<->homomorphism_representations :<->text852.htm#9897<->homomorphism_representations :: Representations of Braid Groups (BRAID GROUPS)
3<->homomorphism :<->text852.htm<->homomorphism :: Homomorphisms (BRAID GROUPS)
3<->braid :<->text847.htm<->braid :: BRAID GROUPS
3<->rewrite-system :<->text855.htm<->rewrite-system :: GROUPS DEFINED BY REWRITE SYSTEMS
3<->introduction :<->text856.htm<->introduction :: Introduction (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->terminology :<->text856.htm#9906<->terminology :: Terminology (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->GrpRWS :<->text856.htm#9907<->GrpRWS :: The Category of Rewrite Groups (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->GrpRWSElt :<->text856.htm#9907<->GrpRWSElt :: The Category of Rewrite Groups (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->category :<->text856.htm#9907<->category :: The Category of Rewrite Groups (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->creation :<->text856.htm#9908<->creation :: The Construction of a Rewrite Group (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->introduction :<->text856.htm<->introduction :: Introduction (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->creation :<->text857.htm<->creation :: Constructing Confluent Presentations (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->magma :<->text857.htm#9910<->magma :: The Knuth-Bendix Procedure (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->RWSGroup(F: parameters) <->text857.htm#9911<->RWSGroup(F: parameters) : MonFP -&gt; MonRWS
4<->GrpRWS_RWSGroup (Example H79E1)<->text857.htm#9912<->GrpRWS_RWSGroup (Example H79E1)
4<->Example-RWSGroup :<->text857.htm#9912<->Example-RWSGroup :: GrpRWS_RWSGroup (Example H79E1)
3<->magma :<->text857.htm#9910<->magma :: The Knuth-Bendix Procedure (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->magma :<->text857.htm#9913<->magma :: Defining Orderings (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->RWSGroup(F: parameters) <->text857.htm#9914<->RWSGroup(F: parameters) : MonFP -&gt; MonRWS
4<->GrpRWS_RWSGroup-2 (Example H79E2)<->text857.htm#9915<->GrpRWS_RWSGroup-2 (Example H79E2)
4<->Example-RWSGroup-2 :<->text857.htm#9915<->Example-RWSGroup-2 :: GrpRWS_RWSGroup-2 (Example H79E2)
4<->GrpRWS_RWSGroup-3 (Example H79E3)<->text857.htm#9916<->GrpRWS_RWSGroup-3 (Example H79E3)
4<->Example-RWSGroup-3 :<->text857.htm#9916<->Example-RWSGroup-3 :: GrpRWS_RWSGroup-3 (Example H79E3)
3<->magma :<->text857.htm#9913<->magma :: Defining Orderings (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->magma :<->text857.htm#9917<->magma :: Setting Limits (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->RWSMonoid(F: parameters) <->text857.htm#9918<->RWSMonoid(F: parameters) : MonFP -&gt; MonRWS
5<->SetVerbose("KBMAG", v) <->text857.htm#9919<->SetVerbose("KBMAG", v) : MonStgElt, RngIntElt -&gt;
3<->magma :<->text857.htm#9917<->magma :: Setting Limits (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->access :<->text857.htm#9920<->access :: Accessing Group Information (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->G . i <->text857.htm#9921<->G . i : GrpRWS, RngIntElt -&gt; GrpRWSElt
5<->Generators(G) <->text857.htm#9922<->Generators(G) : GrpRWS -&gt; [GrpRWSElt]
5<->Ngens :: NumberOfGenerators(G) <->text857.htm#9923<->Ngens :: NumberOfGenerators(G) : GrpRWS -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text857.htm#9923<->NumberOfGenerators(G) : GrpRWS -&gt; RngIntElt
5<->Relations(G) <->text857.htm#9924<->Relations(G) : GrpRWS -&gt; [GrpFPRel]
5<->Nrels :: NumberOfRelations(G) <->text857.htm#9925<->Nrels :: NumberOfRelations(G) : GrpRWS -&gt; RngIntElt
5<->NumberOfRelations(G) <->text857.htm#9925<->NumberOfRelations(G) : GrpRWS -&gt; RngIntElt
5<->Ordering(G) <->text857.htm#9926<->Ordering(G) : GrpRWS -&gt; String
4<->GrpRWS_BasicAccess (Example H79E4)<->text857.htm#9927<->GrpRWS_BasicAccess (Example H79E4)
4<->Example-BasicAccess :<->text857.htm#9927<->Example-BasicAccess :: GrpRWS_BasicAccess (Example H79E4)
3<->access :<->text857.htm#9920<->access :: Accessing Group Information (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->creation :<->text857.htm<->creation :: Constructing Confluent Presentations (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->properties :<->text858.htm<->properties :: Properties of a Rewrite Group (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->IsConfluent(G) <->text858.htm#9929<->IsConfluent(G) : GrpRWS -&gt; BoolElt
5<->IsFinite(G) <->text858.htm#9930<->IsFinite(G) : GrpRWS -&gt; BoolElt, RngIntElt
5<-># :: Order(G) <->text858.htm#9931<-># :: Order(G) : GrpRWS -&gt; RngIntElt
5<->Order(G) <->text858.htm#9931<->Order(G) : GrpRWS -&gt; RngIntElt
4<->GrpRWS_IsConfluent (Example H79E5)<->text858.htm#9932<->GrpRWS_IsConfluent (Example H79E5)
4<->Example-IsConfluent :<->text858.htm#9932<->Example-IsConfluent :: GrpRWS_IsConfluent (Example H79E5)
4<->GrpRWS_Order (Example H79E6)<->text858.htm#9933<->GrpRWS_Order (Example H79E6)
4<->Example-Order :<->text858.htm#9933<->Example-Order :: GrpRWS_Order (Example H79E6)
3<->properties :<->text858.htm<->properties :: Properties of a Rewrite Group (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->arithmetic :<->text859.htm<->arithmetic :: Arithmetic with Words (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->element :<->text859.htm#9935<->element :: Construction of a Word (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->Identity(G) <->text859.htm#9936<->Identity(G) : GrpRWS -&gt; GrpRWSElt
5<->! :: Identity(G) <->text859.htm#9936<->! :: Identity(G) : GrpRWS -&gt; GrpRWSElt
5<->Identity(G) <->text859.htm#9936<->Identity(G) : GrpRWS -&gt; GrpRWSElt
5<->G ! [ i1, ..., is ] <->text859.htm#9937<->G ! [ i<sub>1</sub>, ..., i<sub>s</sub> ] : GrpRWS, [ RngIntElt ] -&gt; GrpRWSElt
5<->Parent(w) <->text859.htm#9938<->Parent(w) : GrpRWSElt -&gt; GrpRWS
4<->GrpRWS_Words (Example H79E7)<->text859.htm#9939<->GrpRWS_Words (Example H79E7)
4<->Example-Words :<->text859.htm#9939<->Example-Words :: GrpRWS_Words (Example H79E7)
3<->element :<->text859.htm#9935<->element :: Construction of a Word (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->arithmetic :<->text859.htm#9940<->arithmetic :: Element Operations (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->u * v <->text859.htm#9941<->u * v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->u / v <->text859.htm#9942<->u / v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->u ^ n <->text859.htm#9943<->u ^ n : GrpRWSElt, RngIntElt -&gt; GrpRWSElt
5<->u ^ v <->text859.htm#9944<->u ^ v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->Inverse(w) <->text859.htm#9945<->Inverse(w) : GrpRWSElt -&gt; GrpRWSElt
5<->(,) :: (u, v) <->text859.htm#9946<->(,) :: (u, v) : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->(,,) :: (u1, ..., ur) <->text859.htm#9947<->(,,) :: (u<sub>1</sub>, ..., u<sub>r</sub>) : GrpRWSElt, ..., GrpRWSElt -&gt; GrpRWSElt
5<->u eq v <->text859.htm#9948<->u eq v : GrpRWSElt, GrpRWSElt -&gt; BoolElt
5<->u ne v <->text859.htm#9949<->u ne v : GrpRWSElt, GrpRWSElt -&gt; BoolElt
5<->IsIdentity :: IsId(w) <->text859.htm#9950<->IsIdentity :: IsId(w) : GrpRWSElt -&gt; BoolElt
5<->IsId(w) <->text859.htm#9950<->IsId(w) : GrpRWSElt -&gt; BoolElt
5<-># u <->text859.htm#9951<-># u : GrpRWSElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(u) <->text859.htm#9952<->Eltseq :: ElementToSequence(u) : GrpRWSElt -&gt; [ RngIntElt ]
5<->ElementToSequence(u) <->text859.htm#9952<->ElementToSequence(u) : GrpRWSElt -&gt; [ RngIntElt ]
4<->GrpRWS_Arithmetic (Example H79E8)<->text859.htm#9953<->GrpRWS_Arithmetic (Example H79E8)
4<->Example-Arithmetic :<->text859.htm#9953<->Example-Arithmetic :: GrpRWS_Arithmetic (Example H79E8)
3<->arithmetic :<->text859.htm#9940<->arithmetic :: Element Operations (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->arithmetic :<->text859.htm<->arithmetic :: Arithmetic with Words (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->Operations on the Set of Group Elements (GROUPS DEFINED BY REWRITE SYSTEMS)<->text860.htm<->Operations on the Set of Group Elements (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->Random(G, n) <->text860.htm#9955<->Random(G, n) : GrpRWS, RngIntElt -&gt; GrpRWSElt
5<->Random(G) <->text860.htm#9956<->Random(G) : GrpRWS -&gt; GrpRWSElt
5<->Representative(G) <->text860.htm#9957<->Representative(G) : GrpRWS -&gt; GrpRWSElt
5<->Set(G, a, b) <->text860.htm#9958<->Set(G, a, b) : GrpRWS, RngIntElt, RngIntElt -&gt; SetEnum
5<->Set(G) <->text860.htm#9959<->Set(G) : GrpRWS -&gt; SetEnum
5<->Seq(G, a, b) <->text860.htm#9960<->Seq(G, a, b) : GrpRWS, RngIntElt, RngIntElt -&gt; SeqEnum
5<->Seq(G) <->text860.htm#9961<->Seq(G) : GrpRWS -&gt; SeqEnum
4<->GrpRWS_Set (Example H79E9)<->text860.htm#9962<->GrpRWS_Set (Example H79E9)
4<->Example-Set :<->text860.htm#9962<->Example-Set :: GrpRWS_Set (Example H79E9)
3<->Operations on the Set of Group Elements (GROUPS DEFINED BY REWRITE SYSTEMS)<->text860.htm<->Operations on the Set of Group Elements (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->homomorphism :<->text861.htm<->homomorphism :: Homomorphisms (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->homomorphism_general :<->text861.htm#9964<->homomorphism_general :: General Remarks (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->homomorphism_constr :<->text861.htm#9965<->homomorphism_constr :: Construction of Homomorphisms (GROUPS DEFINED BY REWRITE SYSTEMS)
5<->hom< R -> G | S > <->text861.htm#9966<->hom&lt; R -&gt; G | S &gt; : Struct , Struct -&gt; Map
3<->homomorphism_constr :<->text861.htm#9965<->homomorphism_constr :: Construction of Homomorphisms (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->homomorphism :<->text861.htm<->homomorphism :: Homomorphisms (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->conversion :<->text862.htm<->conversion :: Conversion to a Finitely  Presented Group (GROUPS DEFINED BY REWRITE SYSTEMS)
4<->GrpRWS_Conversion (Example H79E10)<->text862.htm#9968<->GrpRWS_Conversion (Example H79E10)
4<->Example-Conversion :<->text862.htm#9968<->Example-Conversion :: GrpRWS_Conversion (Example H79E10)
3<->conversion :<->text862.htm<->conversion :: Conversion to a Finitely  Presented Group (GROUPS DEFINED BY REWRITE SYSTEMS)
3<->rewrite-system :<->text855.htm<->rewrite-system :: GROUPS DEFINED BY REWRITE SYSTEMS
3<->automatic :<->text865.htm<->automatic :: AUTOMATIC GROUPS
3<->introduction :<->text866.htm<->introduction :: Introduction (AUTOMATIC GROUPS)
3<->terminology :<->text866.htm#9973<->terminology :: Terminology (AUTOMATIC GROUPS)
3<->GrpAtc :<->text866.htm#9974<->GrpAtc :: The Category of Automatic Groups (AUTOMATIC GROUPS)
3<->GrpAtcElt :<->text866.htm#9974<->GrpAtcElt :: The Category of Automatic Groups (AUTOMATIC GROUPS)
3<->category :<->text866.htm#9974<->category :: The Category of Automatic Groups (AUTOMATIC GROUPS)
3<->creation :<->text866.htm#9975<->creation :: The Construction of an Automatic Group (AUTOMATIC GROUPS)
3<->introduction :<->text866.htm<->introduction :: Introduction (AUTOMATIC GROUPS)
3<->creation :<->text867.htm<->creation :: Creation of Automatic Groups (AUTOMATIC GROUPS)
3<->construction :<->text867.htm#9977<->construction :: Construction of an Automatic Group (AUTOMATIC GROUPS)
5<->IsAutomaticGroup :: AutomaticGroup(F: parameters) <->text867.htm#9978<->IsAutomaticGroup :: AutomaticGroup(F: parameters) : GrpFP -&gt; GrpAtc
5<->AutomaticGroup(F: parameters) <->text867.htm#9978<->AutomaticGroup(F: parameters) : GrpFP -&gt; GrpAtc
4<->GrpAtc_AutomaticGroup (Example H80E1)<->text867.htm#9979<->GrpAtc_AutomaticGroup (Example H80E1)
4<->Example-AutomaticGroup :<->text867.htm#9979<->Example-AutomaticGroup :: GrpAtc_AutomaticGroup (Example H80E1)
3<->construction :<->text867.htm#9977<->construction :: Construction of an Automatic Group (AUTOMATIC GROUPS)
3<->limits :<->text867.htm#9980<->limits :: Modifying Limits (AUTOMATIC GROUPS)
5<->IsAutomaticGroup :: AutomaticGroup(F: parameters) <->text867.htm#9981<->IsAutomaticGroup :: AutomaticGroup(F: parameters) : GrpFP -&gt; GrpAtc
5<->AutomaticGroup(F: parameters) <->text867.htm#9981<->AutomaticGroup(F: parameters) : GrpFP -&gt; GrpAtc
5<->SetVerbose("KBMAG", v) <->text867.htm#9982<->SetVerbose("KBMAG", v) : MonStgElt, RngIntElt -&gt;
4<->GrpAtc_AutomaticGroup-3 (Example H80E2)<->text867.htm#9983<->GrpAtc_AutomaticGroup-3 (Example H80E2)
4<->Example-AutomaticGroup-3 :<->text867.htm#9983<->Example-AutomaticGroup-3 :: GrpAtc_AutomaticGroup-3 (Example H80E2)
4<->GrpAtc_AutomaticGroup-4 (Example H80E3)<->text867.htm#9984<->GrpAtc_AutomaticGroup-4 (Example H80E3)
4<->Example-AutomaticGroup-4 :<->text867.htm#9984<->Example-AutomaticGroup-4 :: GrpAtc_AutomaticGroup-4 (Example H80E3)
3<->limits :<->text867.htm#9980<->limits :: Modifying Limits (AUTOMATIC GROUPS)
3<->access :<->text867.htm#9985<->access :: Accessing Group Information (AUTOMATIC GROUPS)
5<->G . i <->text867.htm#9986<->G . i : GrpRWS, RngIntElt -&gt; GrpRWSElt
5<->Generators(G) <->text867.htm#9987<->Generators(G) : GrpRWS -&gt; [GrpRWSElt]
5<->Ngens :: NumberOfGenerators(G) <->text867.htm#9988<->Ngens :: NumberOfGenerators(G) : GrpRWS -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text867.htm#9988<->NumberOfGenerators(G) : GrpRWS -&gt; RngIntElt
4<->GrpAtc_BasicAccess (Example H80E4)<->text867.htm#9989<->GrpAtc_BasicAccess (Example H80E4)
4<->Example-BasicAccess :<->text867.htm#9989<->Example-BasicAccess :: GrpAtc_BasicAccess (Example H80E4)
5<->FPGroup(G) <->text867.htm#9990<->FPGroup(G) : GrpAtc -&gt; GrpFP, Map
5<->WordAcceptor(G) <->text867.htm#9991<->WordAcceptor(G) : GrpAtc -&gt; Rec
5<->WordAcceptorSize(G) <->text867.htm#9992<->WordAcceptorSize(G) : GrpAtc -&gt; RngIntElt, RngIntElt
5<->WordDifferenceAutomaton(G) <->text867.htm#9993<->WordDifferenceAutomaton(G) : GrpAtc -&gt; Rec
5<->WordDifferenceSize(G) <->text867.htm#9994<->WordDifferenceSize(G) : GrpAtc -&gt; RngIntElt, RngIntElt
5<->WordDifferences(G) <->text867.htm#9995<->WordDifferences(G) : GrpAtc -&gt; SeqEnum
5<->GeneratorOrder(G) <->text867.htm#9996<->GeneratorOrder(G) : GrpAtc -&gt; SeqEnum
3<->access :<->text867.htm#9985<->access :: Accessing Group Information (AUTOMATIC GROUPS)
3<->creation :<->text867.htm<->creation :: Creation of Automatic Groups (AUTOMATIC GROUPS)
3<->properties :<->text868.htm<->properties :: Properties of an Automatic  Group (AUTOMATIC GROUPS)
5<->IsFinite(G) <->text868.htm#9998<->IsFinite(G) : GrpRWS -&gt; BoolElt, RngIntElt
5<-># :: Order(G) <->text868.htm#9999<-># :: Order(G) : GrpRWS -&gt; RngIntElt
5<->Order(G) <->text868.htm#9999<->Order(G) : GrpRWS -&gt; RngIntElt
4<->GrpAtc_Order (Example H80E5)<->text868.htm#10000<->GrpAtc_Order (Example H80E5)
4<->Example-Order :<->text868.htm#10000<->Example-Order :: GrpAtc_Order (Example H80E5)
4<->GrpAtc_Order-2 (Example H80E6)<->text868.htm#10001<->GrpAtc_Order-2 (Example H80E6)
4<->Example-Order-2 :<->text868.htm#10001<->Example-Order-2 :: GrpAtc_Order-2 (Example H80E6)
3<->properties :<->text868.htm<->properties :: Properties of an Automatic  Group (AUTOMATIC GROUPS)
3<->arithmetic :<->text869.htm<->arithmetic :: Arithmetic with Words (AUTOMATIC GROUPS)
3<->element :<->text869.htm#10003<->element :: Construction of a Word (AUTOMATIC GROUPS)
5<->G ! [ i1, ..., is ] <->text869.htm#10004<->G ! [ i<sub>1</sub>, ..., i<sub>s</sub> ] : GrpAtc, [ RngIntElt ] -&gt; GrpAtcElt
5<->Identity(G) <->text869.htm#10005<->Identity(G) : GrpAtc -&gt; GrpAtcElt
5<->! :: Identity(G) <->text869.htm#10005<->! :: Identity(G) : GrpAtc -&gt; GrpAtcElt
5<->Identity(G) <->text869.htm#10005<->Identity(G) : GrpAtc -&gt; GrpAtcElt
5<->Parent(w) <->text869.htm#10006<->Parent(w) : GrpAtcElt -&gt; GrpAtc
4<->GrpAtc_Words (Example H80E7)<->text869.htm#10007<->GrpAtc_Words (Example H80E7)
4<->Example-Words :<->text869.htm#10007<->Example-Words :: GrpAtc_Words (Example H80E7)
3<->element :<->text869.htm#10003<->element :: Construction of a Word (AUTOMATIC GROUPS)
3<->arithmetic :<->text869.htm#10008<->arithmetic :: Operations on Elements (AUTOMATIC GROUPS)
5<->u * v <->text869.htm#10009<->u * v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->u / v <->text869.htm#10010<->u / v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->u ^ n <->text869.htm#10011<->u ^ n : GrpRWSElt, RngIntElt -&gt; GrpRWSElt
5<->u ^ v <->text869.htm#10012<->u ^ v : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->Inverse(w) <->text869.htm#10013<->Inverse(w) : GrpRWSElt -&gt; GrpRWSElt
5<->(,) :: (u, v) <->text869.htm#10014<->(,) :: (u, v) : GrpRWSElt, GrpRWSElt -&gt; GrpRWSElt
5<->(,,) :: (u1, ..., ur) <->text869.htm#10015<->(,,) :: (u<sub>1</sub>, ..., u<sub>r</sub>) : GrpRWSElt, ..., GrpRWSElt -&gt; GrpRWSElt
5<->u eq v <->text869.htm#10016<->u eq v : GrpRWSElt, GrpRWSElt -&gt; BoolElt
5<->u ne v <->text869.htm#10017<->u ne v : GrpRWSElt, GrpRWSElt -&gt; BoolElt
5<->IsIdentity :: IsId(w) <->text869.htm#10018<->IsIdentity :: IsId(w) : GrpRWSElt -&gt; BoolElt
5<->IsId(w) <->text869.htm#10018<->IsId(w) : GrpRWSElt -&gt; BoolElt
5<-># u <->text869.htm#10019<-># u : GrpRWSElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(u) <->text869.htm#10020<->Eltseq :: ElementToSequence(u) : GrpRWSElt -&gt; [ RngIntElt ]
5<->ElementToSequence(u) <->text869.htm#10020<->ElementToSequence(u) : GrpRWSElt -&gt; [ RngIntElt ]
4<->GrpAtc_Arithmetic (Example H80E8)<->text869.htm#10021<->GrpAtc_Arithmetic (Example H80E8)
4<->Example-Arithmetic :<->text869.htm#10021<->Example-Arithmetic :: GrpAtc_Arithmetic (Example H80E8)
3<->arithmetic :<->text869.htm#10008<->arithmetic :: Operations on Elements (AUTOMATIC GROUPS)
3<->arithmetic :<->text869.htm<->arithmetic :: Arithmetic with Words (AUTOMATIC GROUPS)
3<->homomorphism :<->text870.htm<->homomorphism :: Homomorphisms (AUTOMATIC GROUPS)
3<->homomorphism_general :<->text870.htm#10023<->homomorphism_general :: General Remarks (AUTOMATIC GROUPS)
3<->homomorphism_constr :<->text870.htm#10024<->homomorphism_constr :: Construction of Homomorphisms (AUTOMATIC GROUPS)
5<->hom< A -> G | S > <->text870.htm#10025<->hom&lt; A -&gt; G | S &gt; : Struct , Struct -&gt; Map
3<->homomorphism_constr :<->text870.htm#10024<->homomorphism_constr :: Construction of Homomorphisms (AUTOMATIC GROUPS)
3<->homomorphism :<->text870.htm<->homomorphism :: Homomorphisms (AUTOMATIC GROUPS)
3<->Set Operations (AUTOMATIC GROUPS)<->text871.htm<->Set Operations (AUTOMATIC GROUPS)
5<->Random(G, n) <->text871.htm#10027<->Random(G, n) : GrpAtc, RngIntElt -&gt; GrpAtcElt
5<->Random(G) <->text871.htm#10028<->Random(G) : GrpAtc -&gt; GrpAtcElt
5<->Representative(G) <->text871.htm#10029<->Representative(G) : GrpAtc -&gt; GrpAtcElt
5<->Set(G, a, b) <->text871.htm#10030<->Set(G, a, b) : GrpAtc, RngIntElt, RngIntElt -&gt; SetEnum
5<->Set(G) <->text871.htm#10031<->Set(G) : GrpAtc -&gt; SetEnum
5<->Seq(G, a, b) <->text871.htm#10032<->Seq(G, a, b) : GrpAtc, RngIntElt, RngIntElt -&gt; SeqEnum
5<->Seq(G) <->text871.htm#10033<->Seq(G) : GrpAtc -&gt; SeqEnum
4<->GrpAtc_Set (Example H80E9)<->text871.htm#10034<->GrpAtc_Set (Example H80E9)
4<->Example-Set :<->text871.htm#10034<->Example-Set :: GrpAtc_Set (Example H80E9)
3<->Set Operations (AUTOMATIC GROUPS)<->text871.htm<->Set Operations (AUTOMATIC GROUPS)
3<->growth-function :<->text872.htm<->growth-function :: The Growth Function (AUTOMATIC GROUPS)
5<->GrowthFunction(G) <->text872.htm#10036<->GrowthFunction(G) : GrpAtc -&gt; FldFunRatElt
4<->GrpAtc_GrowthFunction (Example H80E10)<->text872.htm#10037<->GrpAtc_GrowthFunction (Example H80E10)
4<->Example-GrowthFunction :<->text872.htm#10037<->Example-GrowthFunction :: GrpAtc_GrowthFunction (Example H80E10)
3<->growth-function :<->text872.htm<->growth-function :: The Growth Function (AUTOMATIC GROUPS)
3<->automatic :<->text865.htm<->automatic :: AUTOMATIC GROUPS
3<->blackbox :<->text875.htm<->blackbox :: GROUPS OF STRAIGHT-LINE PROGRAMS
3<->introduction :<->text876.htm<->introduction :: Introduction (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->creation :<->text877.htm<->creation :: Construction of an SLP-Group and its Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->free :<->text877.htm#10043<->free :: Structure Constructors (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->SLPGroup(n) <->text877.htm#10044<->SLPGroup(n) : RngIntElt -&gt; GrpSLP
4<->GrpSLP_SLPGroup (Example H81E1)<->text877.htm#10045<->GrpSLP_SLPGroup (Example H81E1)
4<->Example-SLPGroup :<->text877.htm#10045<->Example-SLPGroup :: GrpSLP_SLPGroup (Example H81E1)
3<->free :<->text877.htm#10043<->free :: Structure Constructors (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->element :<->text877.htm#10046<->element :: Construction of an Element (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->Identity(G) <->text877.htm#10047<->Identity(G) : GrpSLP -&gt; GrpSLPElt
5<->! :: Identity(G) <->text877.htm#10047<->! :: Identity(G) : GrpSLP -&gt; GrpSLPElt
5<->Identity(G) <->text877.htm#10047<->Identity(G) : GrpSLP -&gt; GrpSLPElt
3<->element :<->text877.htm#10046<->element :: Construction of an Element (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->creation :<->text877.htm<->creation :: Construction of an SLP-Group and its Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->operation :<->text878.htm<->operation :: Arithmetic with Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->u * v <->text878.htm#10049<->u * v : GrpSLPElt, GrpSLPElt -&gt; GrpSLPElt
5<->u ^ m <->text878.htm#10050<->u ^ m : GrpSLPElt, RngIntElt -&gt; GrpSLPElt
5<->u ^ v <->text878.htm#10051<->u ^ v : GrpSLPElt, GrpSLPElt -&gt; GrpSLPElt
5<-># u <->text878.htm#10052<-># u : GrpSLPElt -&gt; RngIntElt
3<->access :<->text878.htm#10053<->access :: Accessing the Defining Generators  and Relations (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->G . i <->text878.htm#10054<->G . i : GrpSLP, RngIntElt -&gt; GrpSLPElt
5<->Generators(G) <->text878.htm#10055<->Generators(G) : GrpSLP -&gt; { GrpSLPElt }
5<->Ngens :: NumberOfGenerators(G) <->text878.htm#10056<->Ngens :: NumberOfGenerators(G) : GrpSLP -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text878.htm#10056<->NumberOfGenerators(G) : GrpSLP -&gt; RngIntElt
5<->Parent(u) <->text878.htm#10057<->Parent(u) : GrpSLPElt -&gt; GrpSLP
3<->access :<->text878.htm#10053<->access :: Accessing the Defining Generators  and Relations (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->operation :<->text878.htm<->operation :: Arithmetic with Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->extra-generators :<->text879.htm<->extra-generators :: Addition of Extra Generators (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->AddRedundantGenerators(G, Q) <->text879.htm#10059<->AddRedundantGenerators(G, Q) : GrpSLP, [ GrpSLPElt ] -&gt; GrpSLP
3<->extra-generators :<->text879.htm<->extra-generators :: Addition of Extra Generators (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->homomorphisms :<->text880.htm<->homomorphisms :: Creating Homomorphisms (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->hom< G -> H | L: parameters> <->text880.htm#10061<->hom&lt; G -&gt; H | L: parameters&gt; : GrpSLP, Grp -&gt; Map
5<->Evaluate(u, G) <->text880.htm#10062<->Evaluate(u, G) : GrpSLPElt, Grp -> GrpElt
5<->Evaluate(v, Q) <->text880.htm#10062<->Evaluate(v, Q) : [ GrpSLPElt ], [ GrpElt ] -> GrpElt
5<->Evaluate(v, G) <->text880.htm#10062<->Evaluate(v, G) : [ GrpSLPElt ], Grp -> GrpElt
5<->Evaluate(u, Q) <->text880.htm#10062<->Evaluate(u, Q) : GrpSLPElt, [ GrpElt ] -&gt; GrpElt
4<->GrpSLP_ConstructingHomomorphisms (Example H81E2)<->text880.htm#10063<->GrpSLP_ConstructingHomomorphisms (Example H81E2)
4<->Example-ConstructingHomomorphisms :<->text880.htm#10063<->Example-ConstructingHomomorphisms :: GrpSLP_ConstructingHomomorphisms (Example H81E2)
3<->homomorphisms :<->text880.htm<->homomorphisms :: Creating Homomorphisms (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->operation-element :<->text881.htm<->operation-element :: Operations on Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->Boolean :<->text881.htm#10065<->Boolean :: Equality and Comparison (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->u eq v <->text881.htm#10066<->u eq v : GrpSLPElt, GrpSLPElt -&gt; BoolElt
5<->u ne v <->text881.htm#10067<->u ne v : GrpSLPElt, GrpSLPElt -&gt; BoolElt
3<->Boolean :<->text881.htm#10065<->Boolean :: Equality and Comparison (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->operation-element :<->text881.htm<->operation-element :: Operations on Elements (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->set :<->text882.htm<->set :: Set-Theoretic Operations (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->Boolean :<->text882.htm#10069<->Boolean :: Membership and Equality (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->g in G <->text882.htm#10070<->g in G : GrpSLPElt, GrpSLP -&gt; BoolElt
5<->g notin G <->text882.htm#10071<->g notin G : GrpSLPElt, GrpSLP -&gt; BoolElt
5<->S subset G <->text882.htm#10072<->S subset G : { GrpSLPElt } , GrpSLP -&gt; BoolElt
5<->S notsubset G <->text882.htm#10073<->S notsubset G : { GrpSLPElt } , GrpSLP -&gt; BoolElt
3<->Boolean :<->text882.htm#10069<->Boolean :: Membership and Equality (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->operation :<->text882.htm#10074<->operation :: Set Operations (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->RandomProcess(G) <->text882.htm#10075<->RandomProcess(G) : GrpSLP -&gt; Process
5<->Random(P) <->text882.htm#10076<->Random(P) : Process -&gt; GrpSLPElt
5<->Rep(G) <->text882.htm#10077<->Rep(G) : GrpSLP -&gt; GrpSLPElt
4<->GrpSLP_HomomorphismSpeed (Example H81E3)<->text882.htm#10078<->GrpSLP_HomomorphismSpeed (Example H81E3)
4<->Example-HomomorphismSpeed :<->text882.htm#10078<->Example-HomomorphismSpeed :: GrpSLP_HomomorphismSpeed (Example H81E3)
3<->operation :<->text882.htm#10074<->operation :: Set Operations (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->coercion :<->text882.htm#10079<->coercion :: Coercions Between Related Groups (GROUPS OF STRAIGHT-LINE PROGRAMS)
5<->G ! g <->text882.htm#10080<->G ! g : GrpSLP, GrpSLPElt -&gt; GrpSLPElt
3<->coercion :<->text882.htm#10079<->coercion :: Coercions Between Related Groups (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->set :<->text882.htm<->set :: Set-Theoretic Operations (GROUPS OF STRAIGHT-LINE PROGRAMS)
3<->blackbox :<->text875.htm<->blackbox :: GROUPS OF STRAIGHT-LINE PROGRAMS
3<->finitely-presented :<->text884.htm<->finitely-presented :: FINITELY PRESENTED SEMIGROUPS
3<->introduction :<->text885.htm<->introduction :: Introduction (FINITELY PRESENTED SEMIGROUPS)
3<->creation :<->text886.htm<->creation :: The Construction of Free Semigroups and their Elements (FINITELY PRESENTED SEMIGROUPS)
3<->free :<->text886.htm#10085<->free :: Structure Constructors (FINITELY PRESENTED SEMIGROUPS)
5<->FreeSemigroup(n) <->text886.htm#10086<->FreeSemigroup(n) : RngIntElt -&gt; SgpFP
5<->FreeMonoid(n) <->text886.htm#10087<->FreeMonoid(n) : RngIntElt -&gt; MonFP
4<->SgpFP_FreeSemigroup (Example H82E1)<->text886.htm#10088<->SgpFP_FreeSemigroup (Example H82E1)
4<->Example-FreeSemigroup :<->text886.htm#10088<->Example-FreeSemigroup :: SgpFP_FreeSemigroup (Example H82E1)
3<->free :<->text886.htm#10085<->free :: Structure Constructors (FINITELY PRESENTED SEMIGROUPS)
3<->element :<->text886.htm#10089<->element :: Element Constructors (FINITELY PRESENTED SEMIGROUPS)
5<->S ! [i1, ... is] <->text886.htm#10090<->S ! [i<sub>1</sub>, ... i<sub>s</sub>] : SgpFP, [RngIntElt] -&gt; SgpFPElt
5<->! :: Id(M) <->text886.htm#10091<->! :: Id(M) : MonFP -&gt; MonFPElt
5<->Id(M) <->text886.htm#10091<->Id(M) : MonFP -&gt; MonFPElt
3<->element :<->text886.htm#10089<->element :: Element Constructors (FINITELY PRESENTED SEMIGROUPS)
3<->creation :<->text886.htm<->creation :: The Construction of Free Semigroups and their Elements (FINITELY PRESENTED SEMIGROUPS)
3<->operation :<->text887.htm<->operation :: Elementary Operators for Words (FINITELY PRESENTED SEMIGROUPS)
3<->arithmetic :<->text887.htm#10093<->arithmetic :: Multiplication and Exponentiation (FINITELY PRESENTED SEMIGROUPS)
5<->u * v <->text887.htm#10094<->u * v : SgpFPElt, SgpFPElt -&gt; SgpFPElt
5<->u ^ n <->text887.htm#10095<->u ^ n : SgpFPElt, RngIntElt -&gt; SgpFPElt
5<->G ! Q <->text887.htm#10096<->G ! Q : SgpFP, [  SgpFPElt ] -&gt; SgpFPElt
3<->arithmetic :<->text887.htm#10093<->arithmetic :: Multiplication and Exponentiation (FINITELY PRESENTED SEMIGROUPS)
3<->length :<->text887.htm#10097<->length :: The Length of a Word (FINITELY PRESENTED SEMIGROUPS)
5<-># u <->text887.htm#10098<-># u : SgpFPElt -&gt; RngIntElt
3<->length :<->text887.htm#10097<->length :: The Length of a Word (FINITELY PRESENTED SEMIGROUPS)
3<->Boolean :<->text887.htm#10099<->Boolean :: Equality and Comparison (FINITELY PRESENTED SEMIGROUPS)
5<->u eq v <->text887.htm#10100<->u eq v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->u ne v <->text887.htm#10101<->u ne v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->u lt v <->text887.htm#10102<->u lt v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->u le v <->text887.htm#10103<->u le v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->u ge v <->text887.htm#10104<->u ge v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->u gt v <->text887.htm#10105<->u gt v : SgpFPElt, SgpFPElt -&gt; BoolElt
5<->IsOne(u) <->text887.htm#10106<->IsOne(u) : MonFPElt -&gt; BoolElt
3<->Boolean :<->text887.htm#10099<->Boolean :: Equality and Comparison (FINITELY PRESENTED SEMIGROUPS)
3<->operation :<->text887.htm<->operation :: Elementary Operators for Words (FINITELY PRESENTED SEMIGROUPS)
3<->presentation :<->text888.htm<->presentation :: Specification of a Presentation (FINITELY PRESENTED SEMIGROUPS)
3<->relation :<->text888.htm#10108<->relation :: Relations (FINITELY PRESENTED SEMIGROUPS)
5<->w1 = w2 <->text888.htm#10109<->w<sub>1</sub> = w<sub>2</sub> : SgpFPElt, SgpFPElt -&gt; Rel
5<->LHS(r) <->text888.htm#10110<->LHS(r) : Rel -&gt; SgpFPElt
5<->RHS(r) <->text888.htm#10111<->RHS(r) : Rel -&gt; SgpFPElt
3<->relation :<->text888.htm#10108<->relation :: Relations (FINITELY PRESENTED SEMIGROUPS)
3<->general-magma :<->text888.htm#10112<->general-magma :: Presentations (FINITELY PRESENTED SEMIGROUPS)
5<->Semigroup< generators | relations > <->text888.htm#10113<->Semigroup&lt; generators | relations &gt; : SgpFPElt, ..., SgpFPElt, Rel, ...Rel -&gt; SgpFP
5<->Monoid< generators | relations > <->text888.htm#10114<->Monoid&lt; generators | relations &gt; : MonFPElt, ..., MonFPElt, Rel, ..., Rel -&gt; MonFP
4<->SgpFP_Monoid (Example H82E2)<->text888.htm#10115<->SgpFP_Monoid (Example H82E2)
4<->Example-Monoid :<->text888.htm#10115<->Example-Monoid :: SgpFP_Monoid (Example H82E2)
3<->general-magma :<->text888.htm#10112<->general-magma :: Presentations (FINITELY PRESENTED SEMIGROUPS)
3<->access :<->text888.htm#10116<->access :: Accessing the Defining Generators  and Relations (FINITELY PRESENTED SEMIGROUPS)
5<->S . i <->text888.htm#10117<->S . i : SgpFP, RngIntElt -&gt; SgpFPElt
5<->Generators(S) <->text888.htm#10118<->Generators(S) : SgpFP -&gt; { SgpFPElt }
5<->Ngens :: NumberOfGenerators(S) <->text888.htm#10119<->Ngens :: NumberOfGenerators(S) : SgpFP -&gt; RngIntElt
5<->NumberOfGenerators(S) <->text888.htm#10119<->NumberOfGenerators(S) : SgpFP -&gt; RngIntElt
5<->Parent(u) <->text888.htm#10120<->Parent(u) : SgpFPElt -&gt; SgpFP
5<->Relations(S) <->text888.htm#10121<->Relations(S) : SgpFP -&gt; [ Rel ]
3<->access :<->text888.htm#10116<->access :: Accessing the Defining Generators  and Relations (FINITELY PRESENTED SEMIGROUPS)
3<->presentation :<->text888.htm<->presentation :: Specification of a Presentation (FINITELY PRESENTED SEMIGROUPS)
3<->subsemigroup-ideal-quotient :<->text889.htm<->subsemigroup-ideal-quotient :: Subsemigroups, Ideals and Quotients (FINITELY PRESENTED SEMIGROUPS)
3<->subsemigroup-ideal :<->text889.htm#10123<->subsemigroup-ideal :: Subsemigroups and Ideals (FINITELY PRESENTED SEMIGROUPS)
5<->sub<S | L1, ..., Lr> <->text889.htm#10124<->sub&lt;S | L<sub>1</sub>, ..., L<sub>r</sub>&gt; : SgpFP, SgpFPElt, ..., SgpFPElt -&gt; SgpFP
5<->ideal<S | L1, ..., Lr> <->text889.htm#10125<->ideal&lt;S | L<sub>1</sub>, ..., L<sub>r</sub>&gt; : SgpFP, SgpFPElt, ..., SgpFPElt -&gt; SgpFPIdl
5<->lideal<G | L1, ..., Lr> <->text889.htm#10126<->lideal&lt;G | L<sub>1</sub>, ..., L<sub>r</sub>&gt; : SgpFP, SgpFPElt, ..., SgpFPElt -&gt; SgpFPIdl
5<->rideal<G | L1, ..., Lr> <->text889.htm#10127<->rideal&lt;G | L<sub>1</sub>, ..., L<sub>r</sub>&gt; : SgpFP, SgpFPElt, ..., SgpFPElt -&gt; SgpFPIdl
3<->subsemigroup-ideal :<->text889.htm#10123<->subsemigroup-ideal :: Subsemigroups and Ideals (FINITELY PRESENTED SEMIGROUPS)
3<->quotient :<->text889.htm#10128<->quotient :: Quotients (FINITELY PRESENTED SEMIGROUPS)
5<->quo< F | relations > <->text889.htm#10129<->quo&lt; F | relations &gt; : SgpFP, Rel, ..., Rel -&gt; SgpFP
3<->quotient :<->text889.htm#10128<->quotient :: Quotients (FINITELY PRESENTED SEMIGROUPS)
3<->subsemigroup-ideal-quotient :<->text889.htm<->subsemigroup-ideal-quotient :: Subsemigroups, Ideals and Quotients (FINITELY PRESENTED SEMIGROUPS)
3<->extension :<->text890.htm<->extension :: Extensions (FINITELY PRESENTED SEMIGROUPS)
5<->DirectProduct(R, S) <->text890.htm#10131<->DirectProduct(R, S) : SgpFP, SgpFP -&gt; SgpFP
5<->FreeProduct(R, S) <->text890.htm#10132<->FreeProduct(R, S) : SgpFP, SgpFP -&gt; SgpFP
3<->extension :<->text890.htm<->extension :: Extensions (FINITELY PRESENTED SEMIGROUPS)
3<->modification-Tietze :<->text891.htm<->modification-Tietze :: Elementary Tietze  Transformations (FINITELY PRESENTED SEMIGROUPS)
5<->AddRelation(S, r, i) <->text891.htm#10134<->AddRelation(S, r, i) : SgpFP, Rel, RngIntElt -> SgpFP
5<->AddRelation(S, r) <->text891.htm#10134<->AddRelation(S, r) : SgpFP, Rel -&gt; SgpFP
5<->DeleteRelation(S, r) <->text891.htm#10135<->DeleteRelation(S, r) : SgpFP, Rel  -&gt; SgpFP
5<->DeleteRelation(S, i) <->text891.htm#10136<->DeleteRelation(S, i) : SgpFP, RngIntElt -&gt; SgpFP
5<->ReplaceRelation(S, r1, r2) <->text891.htm#10137<->ReplaceRelation(S, r<sub>1</sub>, r<sub>2</sub>) : SgpFP, Rel, Rel -&gt; SgpFP
5<->ReplaceRelation(S, i, r) <->text891.htm#10138<->ReplaceRelation(S, i, r) : SgpFP, RngIntElt, Rel -&gt; SgpFP
5<->AddGenerator(S) <->text891.htm#10139<->AddGenerator(S) : SgpFP -&gt; SgpFP
5<->AddGenerator(S, w) <->text891.htm#10140<->AddGenerator(S, w) : SgpFP, SgpFPElt -&gt; SgpFP
5<->DeleteGenerator(S, y) <->text891.htm#10141<->DeleteGenerator(S, y) : SgpFP, SgpFPElt -&gt; SgpFP
3<->modification-Tietze :<->text891.htm<->modification-Tietze :: Elementary Tietze  Transformations (FINITELY PRESENTED SEMIGROUPS)
3<->operation-element :<->text892.htm<->operation-element :: String Operations on Words (FINITELY PRESENTED SEMIGROUPS)
5<->Eliminate(u, x, v) <->text892.htm#10143<->Eliminate(u, x, v) : SgpFPElt, SgpFPElt, SgpFPElt -&gt; SgpFPElt
5<->Match(u, v, f) <->text892.htm#10144<->Match(u, v, f) : SgpFPElt, SgpFPElt, RngIntElt -&gt; BoolElt, RngIntElt
5<->Random(S, m, n) <->text892.htm#10145<->Random(S, m, n) : SgpFP, RngIntElt, RngIntElt -&gt; SgpFPElt
5<->RotateWord(u, n) <->text892.htm#10146<->RotateWord(u, n) : SgpFPElt, RngIntElt -&gt; SgpFPElt
5<->Substitute(u, f, n, v) <->text892.htm#10147<->Substitute(u, f, n, v) : SgpFPElt, RngIntElt, SgpFPElt, RngIntElt -&gt; SgpFPElt
5<->Subword(u, f, n) <->text892.htm#10148<->Subword(u, f, n) : SgpFPElt, RngIntElt, RngIntElt -&gt; SgpFPElt
5<->Eltseq :: ElementToSequence(u) <->text892.htm#10149<->Eltseq :: ElementToSequence(u) : SgpFPElt -&gt; [ SgpFPElt ]
5<->ElementToSequence(u) <->text892.htm#10149<->ElementToSequence(u) : SgpFPElt -&gt; [ SgpFPElt ]
3<->operation-element :<->text892.htm<->operation-element :: String Operations on Words (FINITELY PRESENTED SEMIGROUPS)
3<->finitely-presented :<->text884.htm<->finitely-presented :: FINITELY PRESENTED SEMIGROUPS
3<->rewrite-system :<->text895.htm<->rewrite-system :: MONOIDS GIVEN BY REWRITE SYSTEMS
3<->introduction :<->text896.htm<->introduction :: Introduction (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->terminology :<->text896.htm#10154<->terminology :: Terminology (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->MonRWS :<->text896.htm#10155<->MonRWS :: The Category of Rewrite Monoids (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->MonRWSElt :<->text896.htm#10155<->MonRWSElt :: The Category of Rewrite Monoids (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->category :<->text896.htm#10155<->category :: The Category of Rewrite Monoids (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->creation :<->text896.htm#10156<->creation :: The Construction of a Rewrite  Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->introduction :<->text896.htm<->introduction :: Introduction (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->creation :<->text897.htm<->creation :: Construction of a Rewrite  Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->RWSMonoid(Q: parameters) <->text897.htm#10158<->RWSMonoid(Q: parameters) : MonFP -&gt; MonRWS
5<->SetVerbose("KBMAG", v) <->text897.htm#10159<->SetVerbose("KBMAG", v) : MonStgElt, RngIntElt -&gt;
4<->MonRWS_RWSMonoid (Example H83E1)<->text897.htm#10160<->MonRWS_RWSMonoid (Example H83E1)
4<->Example-RWSMonoid :<->text897.htm#10160<->Example-RWSMonoid :: MonRWS_RWSMonoid (Example H83E1)
4<->MonRWS_RWSMonoid-2 (Example H83E2)<->text897.htm#10161<->MonRWS_RWSMonoid-2 (Example H83E2)
4<->Example-RWSMonoid-2 :<->text897.htm#10161<->Example-RWSMonoid-2 :: MonRWS_RWSMonoid-2 (Example H83E2)
4<->MonRWS_RWSMonoid-4 (Example H83E3)<->text897.htm#10162<->MonRWS_RWSMonoid-4 (Example H83E3)
4<->Example-RWSMonoid-4 :<->text897.htm#10162<->Example-RWSMonoid-4 :: MonRWS_RWSMonoid-4 (Example H83E3)
4<->MonRWS_RWSMonoid-5 (Example H83E4)<->text897.htm#10163<->MonRWS_RWSMonoid-5 (Example H83E4)
4<->Example-RWSMonoid-5 :<->text897.htm#10163<->Example-RWSMonoid-5 :: MonRWS_RWSMonoid-5 (Example H83E4)
3<->creation :<->text897.htm<->creation :: Construction of a Rewrite  Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->operation :<->text898.htm<->operation :: Basic Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->access :<->text898.htm#10165<->access :: Accessing Monoid Information (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->M . i <->text898.htm#10166<->M . i : MonRWS, RngIntElt -&gt; MonRWSElt
5<->Generators(M) <->text898.htm#10167<->Generators(M) : MonRWS -&gt; [ MonRWSElt]
5<->Ngens :: NumberOfGenerators(M) <->text898.htm#10168<->Ngens :: NumberOfGenerators(M) : MonRWS -&gt; RngIntElt
5<->NumberOfGenerators(M) <->text898.htm#10168<->NumberOfGenerators(M) : MonRWS -&gt; RngIntElt
5<->Relations(M) <->text898.htm#10169<->Relations(M) : MonRWS -&gt; [MonFPRel]
5<->Nrels :: NumberOfRelations(M) <->text898.htm#10170<->Nrels :: NumberOfRelations(M) : MonRWS -&gt; RngIntElt
5<->NumberOfRelations(M) <->text898.htm#10170<->NumberOfRelations(M) : MonRWS -&gt; RngIntElt
5<->Ordering(M) <->text898.htm#10171<->Ordering(M) : MonRWS -&gt; String
5<->Parent(w) <->text898.htm#10172<->Parent(w) : MonRWSElt -&gt; MonRWS
4<->MonRWS_BasicAccess (Example H83E5)<->text898.htm#10173<->MonRWS_BasicAccess (Example H83E5)
4<->Example-BasicAccess :<->text898.htm#10173<->Example-BasicAccess :: MonRWS_BasicAccess (Example H83E5)
3<->access :<->text898.htm#10165<->access :: Accessing Monoid Information (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->Boolean :<->text898.htm#10174<->Boolean :: Properties of a Rewrite Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->IsConfluent(M) <->text898.htm#10175<->IsConfluent(M) : MonRWS -&gt; BoolElt
5<->IsFinite(M) <->text898.htm#10176<->IsFinite(M) : MonRWS -&gt; BoolElt, RngIntElt
5<-># :: Order(M) <->text898.htm#10177<-># :: Order(M) : MonRWS -&gt; RngIntElt
5<->Order(M) <->text898.htm#10177<->Order(M) : MonRWS -&gt; RngIntElt
4<->MonRWS_order-finite (Example H83E6)<->text898.htm#10178<->MonRWS_order-finite (Example H83E6)
4<->Example-order-finite :<->text898.htm#10178<->Example-order-finite :: MonRWS_order-finite (Example H83E6)
4<->MonRWS_order-infinite (Example H83E7)<->text898.htm#10179<->MonRWS_order-infinite (Example H83E7)
4<->Example-order-infinite :<->text898.htm#10179<->Example-order-infinite :: MonRWS_order-infinite (Example H83E7)
4<->MonRWS_order (Example H83E8)<->text898.htm#10180<->MonRWS_order (Example H83E8)
4<->Example-order :<->text898.htm#10180<->Example-order :: MonRWS_order (Example H83E8)
3<->Boolean :<->text898.htm#10174<->Boolean :: Properties of a Rewrite Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->element :<->text898.htm#10181<->element :: Construction of a Word (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->Identity(M) <->text898.htm#10182<->Identity(M) : MonRWS -&gt; MonRWSElt
5<->! :: Identity(M) <->text898.htm#10182<->! :: Identity(M) : MonRWS -&gt; MonRWSElt
5<->Identity(M) <->text898.htm#10182<->Identity(M) : MonRWS -&gt; MonRWSElt
5<->M ! [ i1, ..., is ] <->text898.htm#10183<->M ! [ i<sub>1</sub>, ..., i<sub>s</sub> ] : MonRWS, [ RngIntElt ] -&gt; MonRWSElt
4<->MonRWS_Words (Example H83E9)<->text898.htm#10184<->MonRWS_Words (Example H83E9)
4<->Example-Words :<->text898.htm#10184<->Example-Words :: MonRWS_Words (Example H83E9)
3<->element :<->text898.htm#10181<->element :: Construction of a Word (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->arithmetic :<->text898.htm#10185<->arithmetic :: Arithmetic with Words (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->u * v <->text898.htm#10186<->u * v : MonRWSElt, MonRWSElt -&gt; MonRWSElt
5<->u ^ n <->text898.htm#10187<->u ^ n : MonRWSElt, RngIntElt -&gt; MonRWSElt
5<->u eq v <->text898.htm#10188<->u eq v : MonRWSElt, MonRWSElt -&gt; BoolElt
5<->u ne v <->text898.htm#10189<->u ne v : MonRWSElt, MonRWSElt -&gt; BoolElt
5<->IsIdentity :: IsId(w) <->text898.htm#10190<->IsIdentity :: IsId(w) : MonRWSElt -&gt; BoolElt
5<->IsId(w) <->text898.htm#10190<->IsId(w) : MonRWSElt -&gt; BoolElt
5<-># u <->text898.htm#10191<-># u : MonRWSElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(u) <->text898.htm#10192<->Eltseq :: ElementToSequence(u) : MonRWSElt -&gt; [ RngIntElt ]
5<->ElementToSequence(u) <->text898.htm#10192<->ElementToSequence(u) : MonRWSElt -&gt; [ RngIntElt ]
4<->MonRWS_Arithmetic (Example H83E10)<->text898.htm#10193<->MonRWS_Arithmetic (Example H83E10)
4<->Example-Arithmetic :<->text898.htm#10193<->Example-Arithmetic :: MonRWS_Arithmetic (Example H83E10)
3<->arithmetic :<->text898.htm#10185<->arithmetic :: Arithmetic with Words (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->operation :<->text898.htm<->operation :: Basic Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->homomorphism :<->text899.htm<->homomorphism :: Homomorphisms (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->homomorphism_general :<->text899.htm#10195<->homomorphism_general :: General Remarks (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->homomorphism_constr :<->text899.htm#10196<->homomorphism_constr :: Construction of Homomorphisms (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->hom< M -> N | S > <->text899.htm#10197<->hom&lt; M -&gt; N | S &gt; : Struct , Struct -&gt; Map
3<->homomorphism_constr :<->text899.htm#10196<->homomorphism_constr :: Construction of Homomorphisms (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->homomorphism :<->text899.htm<->homomorphism :: Homomorphisms (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->Set Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)<->text900.htm<->Set Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)
5<->Random(M, n) <->text900.htm#10199<->Random(M, n) : MonRWS, RngIntElt -&gt; MonRWSElt
5<->Random(M) <->text900.htm#10200<->Random(M) : MonRWS -&gt; MonRWSElt
5<->Representative(M) <->text900.htm#10201<->Representative(M) : MonRWS -&gt; MonRWSElt
5<->Set(M, a, b) <->text900.htm#10202<->Set(M, a, b) : MonRWS, RngIntElt, RngIntElt -&gt; SetEnum
5<->Set(M) <->text900.htm#10203<->Set(M) : MonRWS -&gt; SetEnum
5<->Seq(M, a, b) <->text900.htm#10204<->Seq(M, a, b) : MonRWS, RngIntElt, RngIntElt -&gt; SeqEnum
5<->Seq(M) <->text900.htm#10205<->Seq(M) : MonRWS -&gt; SeqEnum
4<->MonRWS_Set (Example H83E11)<->text900.htm#10206<->MonRWS_Set (Example H83E11)
4<->Example-Set :<->text900.htm#10206<->Example-Set :: MonRWS_Set (Example H83E11)
3<->Set Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)<->text900.htm<->Set Operations (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->conversion :<->text901.htm<->conversion :: Conversion to a Finitely  Presented Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
4<->MonRWS_Conversion (Example H83E12)<->text901.htm#10208<->MonRWS_Conversion (Example H83E12)
4<->Example-Conversion :<->text901.htm#10208<->Example-Conversion :: MonRWS_Conversion (Example H83E12)
3<->conversion :<->text901.htm<->conversion :: Conversion to a Finitely  Presented Monoid (MONOIDS GIVEN BY REWRITE SYSTEMS)
3<->rewrite-system :<->text895.htm<->rewrite-system :: MONOIDS GIVEN BY REWRITE SYSTEMS
3<->algebras :<->text903.htm<->algebras :: ALGEBRAS
3<->introduction :<->text904.htm<->introduction :: Introduction (ALGEBRAS)
3<->category :<->text904.htm#10212<->category :: The Categories of Algebras (ALGEBRAS)
3<->introduction :<->text904.htm<->introduction :: Introduction (ALGEBRAS)
3<->creation :<->text905.htm<->creation :: Construction of General  Algebras and their Elements (ALGEBRAS)
3<->algebras :<->text905.htm#10214<->algebras :: Construction of a General Algebra (ALGEBRAS)
5<->Algebra< R, n | Q > <->text905.htm#10215<->Algebra&lt; R, n | Q &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgGen
5<->AssociativeAlgebra< R, n | Q > <->text905.htm#10216<->AssociativeAlgebra&lt; R, n | Q &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgAss
5<->QuaternionAlgebra< K | a, b > <->text905.htm#10217<->QuaternionAlgebra&lt; K | a, b &gt; : Rng, RngElt, RngElt -&gt; AlgQuat
5<->LieAlgebra< R, n | Q > <->text905.htm#10218<->LieAlgebra&lt; R, n | Q &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgLie
5<->LieAlgebra(A) <->text905.htm#10219<->LieAlgebra(A) : AlgAss -&gt; AlgLie
5<->GroupAlgebra(R, G) <->text905.htm#10220<->GroupAlgebra(R, G) : Rng, Grp -&gt; AlgGrp
5<->MatrixAlgebra(R, n) <->text905.htm#10221<->MatrixAlgebra(R, n) : Rng, RngInt -&gt; AlgMat
3<->algebras :<->text905.htm#10214<->algebras :: Construction of a General Algebra (ALGEBRAS)
3<->elements :<->text905.htm#10222<->elements :: Construction of an Element of a General Algebra (ALGEBRAS)
5<->! :: Zero(A) <->text905.htm#10223<->! :: Zero(A) : AlgGen -&gt; AlgGenElt
5<->Zero(A) <->text905.htm#10223<->Zero(A) : AlgGen -&gt; AlgGenElt
5<->! :: One(A) <->text905.htm#10224<->! :: One(A) : AlgGen -&gt; AlgGenElt
5<->One(A) <->text905.htm#10224<->One(A) : AlgGen -&gt; AlgGenElt
5<->Random(A) <->text905.htm#10225<->Random(A) : AlgGen -&gt; AlgGenElt
3<->elements :<->text905.htm#10222<->elements :: Construction of an Element of a General Algebra (ALGEBRAS)
3<->creation :<->text905.htm<->creation :: Construction of General  Algebras and their Elements (ALGEBRAS)
3<->subs-quos :<->text906.htm<->subs-quos :: Construction of Subalgebras,  Ideals and Quotient Algebras (ALGEBRAS)
3<->subs :<->text906.htm#10227<->subs :: Subalgebras and Ideals (ALGEBRAS)
5<->sub< A | L > <->text906.htm#10228<->sub&lt; A | L &gt; : AlgGen, List -&gt; AlgGen, Map
5<->lideal< A | L > <->text906.htm#10229<->lideal&lt; A | L &gt; : AlgGen, List -&gt; AlgGen, Map
5<->rideal< A | L > <->text906.htm#10230<->rideal&lt; A | L &gt; : AlgGen, List -&gt; AlgGen, Map
5<->ideal< A | L > <->text906.htm#10231<->ideal&lt; A | L &gt; : AlgGen, List -&gt; AlgGen, Map
3<->subs :<->text906.htm#10227<->subs :: Subalgebras and Ideals (ALGEBRAS)
3<->quos :<->text906.htm#10232<->quos :: Quotient Algebras (ALGEBRAS)
5<->quo< A | L > <->text906.htm#10233<->quo&lt; A | L &gt; : AlgGen, List -&gt; AlgGen, Map
5<->A / S <->text906.htm#10234<->A / S : AlgGen, AlgGen -&gt; AlgGen
3<->quos :<->text906.htm#10232<->quos :: Quotient Algebras (ALGEBRAS)
3<->subs-quos :<->text906.htm<->subs-quos :: Construction of Subalgebras,  Ideals and Quotient Algebras (ALGEBRAS)
3<->ops :<->text907.htm<->ops :: Operations on Algebras and Subalgebras (ALGEBRAS)
3<->invar :<->text907.htm#10236<->invar :: Invariants of an Algebra (ALGEBRAS)
5<->CoefficientField :: CoefficientRing(A) <->text907.htm#10237<->CoefficientField :: CoefficientRing(A) : AlgGen -&gt; Rng
5<->BaseRing :: CoefficientRing(A) <->text907.htm#10237<->BaseRing :: CoefficientRing(A) : AlgGen -&gt; Rng
5<->BaseField :: CoefficientRing(A) <->text907.htm#10237<->BaseField :: CoefficientRing(A) : AlgGen -&gt; Rng
5<->CoefficientRing(A) <->text907.htm#10237<->CoefficientRing(A) : AlgGen -&gt; Rng
5<->Dimension(A) <->text907.htm#10238<->Dimension(A) : AlgGen -&gt; RngIntElt
5<-># A <->text907.htm#10239<-># A : AlgGen -&gt; RngIntElt
3<->invar :<->text907.htm#10236<->invar :: Invariants of an Algebra (ALGEBRAS)
3<->change-ring :<->text907.htm#10240<->change-ring :: Changing Rings (ALGEBRAS)
5<->ChangeRing(A, S) <->text907.htm#10241<->ChangeRing(A, S) : AlgGen, Rng -&gt; AlgGen, Map
5<->ChangeRing(A, S, f) <->text907.htm#10242<->ChangeRing(A, S, f) : AlgGen, Rng, Map -&gt; AlgGen, Map
3<->change-ring :<->text907.htm#10240<->change-ring :: Changing Rings (ALGEBRAS)
3<->bases :<->text907.htm#10243<->bases :: Bases (ALGEBRAS)
5<->. :: BasisElement(A, i) <->text907.htm#10244<->. :: BasisElement(A, i) : AlgGen, RngIntElt -&gt; AlgGenElt
5<->BasisElement(A, i) <->text907.htm#10244<->BasisElement(A, i) : AlgGen, RngIntElt -&gt; AlgGenElt
5<->Basis(A) <->text907.htm#10245<->Basis(A) : AlgGen -&gt; [ AlgGenElt ]
5<->IsIndependent(Q) <->text907.htm#10246<->IsIndependent(Q) : [ AlgGen ] -&gt; BoolElt
5<->ExtendBasis(Q, A) <->text907.htm#10247<->ExtendBasis(Q, A) : [ AlgGen ], AlgGen -> [ AlgElt ]
5<->ExtendBasis(S, A) <->text907.htm#10247<->ExtendBasis(S, A) : AlgGen, AlgGen -&gt; [ AlgElt ]
3<->bases :<->text907.htm#10243<->bases :: Bases (ALGEBRAS)
3<->alg-ops :<->text907.htm#10248<->alg-ops :: Decomposition of an Algebra (ALGEBRAS)
5<->CompositionSeries(A) <->text907.htm#10249<->CompositionSeries(A) : AlgGen -&gt; [ AlgGen ], [ AlgGen ], AlgMatElt
5<->CompositionFactors(A) <->text907.htm#10250<->CompositionFactors(A) : AlgGen -&gt; [ AlgGen ]
5<->MinimalRightIdeals :: MinimalLeftIdeals(A : parameters) <->text907.htm#10251<->MinimalRightIdeals :: MinimalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->MinimalIdeals :: MinimalLeftIdeals(A : parameters) <->text907.htm#10251<->MinimalIdeals :: MinimalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->MinimalLeftIdeals(A : parameters) <->text907.htm#10251<->MinimalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->MaximalRightIdeals :: MaximalLeftIdeals(A : parameters) <->text907.htm#10252<->MaximalRightIdeals :: MaximalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->MaximalIdeals :: MaximalLeftIdeals(A : parameters) <->text907.htm#10252<->MaximalIdeals :: MaximalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->MaximalLeftIdeals(A : parameters) <->text907.htm#10252<->MaximalLeftIdeals(A : parameters) : AlgGen -&gt; [ AlgGen ], BoolElt
5<->JacobsonRadical(A) <->text907.htm#10253<->JacobsonRadical(A) : AlgGen -&gt; AlgGen
5<->IsSemisimple(A) <->text907.htm#10254<->IsSemisimple(A) : AlgGen -&gt; BoolElt
5<->IsSimple(A) <->text907.htm#10255<->IsSimple(A) : AlgGen -&gt; BoolElt
4<->AlgGen_quaternions (Example H84E1)<->text907.htm#10256<->AlgGen_quaternions (Example H84E1)
4<->Example-quaternions :<->text907.htm#10256<->Example-quaternions :: AlgGen_quaternions (Example H84E1)
3<->alg-ops :<->text907.htm#10248<->alg-ops :: Decomposition of an Algebra (ALGEBRAS)
3<->alg-ops :<->text907.htm#10257<->alg-ops :: Operations on Subalgebras (ALGEBRAS)
5<->IsZero(A) <->text907.htm#10258<->IsZero(A) : AlgGen -&gt; BoolElt
5<->A eq B <->text907.htm#10259<->A eq B : AlgGen, AlgGen -&gt; BoolElt
5<->A ne B <->text907.htm#10260<->A ne B : AlgGen, AlgGen -&gt; BoolElt
5<->A subset B <->text907.htm#10261<->A subset B : AlgGen, AlgGen -&gt; BoolElt
5<->A notsubset B <->text907.htm#10262<->A notsubset B : AlgGen, AlgGen -&gt; BoolElt
5<->A meet B <->text907.htm#10263<->A meet B : AlgGen, AlgGen -&gt; AlgGen
5<->A * B <->text907.htm#10264<->A * B : AlgGen, AlgGen -&gt; AlgGen
5<->A ^ n <->text907.htm#10265<->A ^ n : AlgGen, RngIntElt -&gt; AlgGen
5<->Morphism(A, B) <->text907.htm#10266<->Morphism(A, B) : AlgGen, AlgGen -&gt; Map
3<->alg-ops :<->text907.htm#10257<->alg-ops :: Operations on Subalgebras (ALGEBRAS)
3<->ops :<->text907.htm<->ops :: Operations on Algebras and Subalgebras (ALGEBRAS)
3<->ops :<->text908.htm<->ops :: Operations on Elements of an Algebra (ALGEBRAS)
3<->alg-ops :<->text908.htm#10268<->alg-ops :: Operations on Elements (ALGEBRAS)
5<->a + b <->text908.htm#10269<->a + b : AlgGenElt, AlgGenElt -&gt; AlgGenElt
5<->- a <->text908.htm#10270<->- a : AlgGenElt -&gt; AlgGenElt
5<->a - b <->text908.htm#10271<->a - b : AlgGenElt, AlgGenElt -&gt; AlgGenElt
5<->a * b <->text908.htm#10272<->a * b : AlgGenElt, AlgGenElt -&gt; AlgGenElt
5<->r * a <->text908.htm#10273<->r * a : RngElt, AlgGenElt -> AlgGenElt
5<->a * r <->text908.htm#10273<->a * r : AlgGenElt, RngElt -&gt; AlgGenElt
5<->a / r <->text908.htm#10274<->a / r : AlgGenElt, RngElt -&gt; AlgGenElt
5<->a ^ n <->text908.htm#10275<->a ^ n : AlgGenElt, RngIntElt -&gt; AlgGenElt
5<->MinimalPolynomial(a) <->text908.htm#10276<->MinimalPolynomial(a) : AlgGenElt -&gt; RngUPolElt
5<->Parent(a) <->text908.htm#10277<->Parent(a) : AlgGenElt -&gt; AlgGen
3<->alg-ops :<->text908.htm#10268<->alg-ops :: Operations on Elements (ALGEBRAS)
3<->comparisons :<->text908.htm#10278<->comparisons :: Comparisons and Membership (ALGEBRAS)
5<->a eq b <->text908.htm#10279<->a eq b : AlgGenElt, AlgGenElt -&gt; BoolElt
5<->a ne b <->text908.htm#10280<->a ne b : AlgGenElt, AlgGenElt -&gt; BoolElt
5<->a in A <->text908.htm#10281<->a in A : AlgGenElt, AlgGen -&gt; BoolElt
5<->a notin A <->text908.htm#10282<->a notin A : AlgGenElt, AlgGen -&gt; BoolElt
3<->comparisons :<->text908.htm#10278<->comparisons :: Comparisons and Membership (ALGEBRAS)
3<->preds :<->text908.htm#10283<->preds :: Predicates on Elements (ALGEBRAS)
5<->IsZero(a) <->text908.htm#10284<->IsZero(a) : AlgGenElt -&gt; BoolElt
5<->IsOne(a) <->text908.htm#10285<->IsOne(a) : AlgGenElt -&gt; BoolElt
5<->IsMinusOne(a) <->text908.htm#10286<->IsMinusOne(a) : AlgGenElt -&gt; BoolElt
5<->IsUnit(a) <->text908.htm#10287<->IsUnit(a) : AlgGenElt -&gt; BoolElt, AlgGenElt
5<->IsRegular(a) <->text908.htm#10288<->IsRegular(a) : AlgGenElt -&gt; BoolElt
5<->IsZeroDivisor(a) <->text908.htm#10289<->IsZeroDivisor(a) : AlgGenElt -&gt; BoolElt
5<->IsIdempotent(a) <->text908.htm#10290<->IsIdempotent(a) : AlgGenElt -&gt; BoolElt
5<->IsNilpotent(a) <->text908.htm#10291<->IsNilpotent(a) : AlgGenElt -&gt; BoolElt, RngIntElt
3<->preds :<->text908.htm#10283<->preds :: Predicates on Elements (ALGEBRAS)
3<->ops :<->text908.htm<->ops :: Operations on Elements of an Algebra (ALGEBRAS)
3<->algebras :<->text903.htm<->algebras :: ALGEBRAS
3<->grp_alg :<->text910.htm<->grp_alg :: STRUCTURE CONSTANT ALGEBRAS
3<->introduction :<->text911.htm<->introduction :: Introduction (STRUCTURE CONSTANT ALGEBRAS)
3<->creation :<->text912.htm<->creation :: Construction of Structure Constant Algebras and Elements (STRUCTURE CONSTANT ALGEBRAS)
3<->algebras :<->text912.htm#10296<->algebras :: Construction of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
5<->Algebra <->text912.htm#10297<->Algebra< M | Q : \parameters > : ModTupRng, SeqEnum -> AlgGen
5<->Algebra< R, n | Q : parameters > <->text912.htm#10297<->Algebra&lt; R, n | Q : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgGen
5<->Algebra< R, n | T : parameters > <->text912.htm#10298<->Algebra&lt; R, n | T : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgGen
5<->ChangeBasis(A, B) <->text912.htm#10299<->ChangeBasis(A, B) : AlgGen, [ModTupFldElt] -> AlgGen
5<->ChangeBasis(A, B) <->text912.htm#10299<->ChangeBasis(A, B) : AlgGen, Mtrx -> AlgGen
5<->ChangeBasis(A, B) <->text912.htm#10299<->ChangeBasis(A, B) : AlgGen, [AlgGenElt] -&gt; AlgGen
3<->algebras :<->text912.htm#10296<->algebras :: Construction of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
3<->elements :<->text912.htm#10300<->elements :: Construction of Elements of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
5<->elt< A | r1, r2, ..., rn > <->text912.htm#10301<->elt&lt; A | r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>n</sub> &gt; : AlgGen, RngElt, RngElt, ..., RngElt -&gt; AlgGenElt
5<->A ! Q <->text912.htm#10302<->A ! Q : AlgGen, SeqEnum[RngElt] -&gt; AlgGenElt
5<->BasisProduct(A, i, j) <->text912.htm#10303<->BasisProduct(A, i, j) : AlgGen, RngIntElt, RngIntElt -&gt; AlgGenElt
5<->BasisProducts(A) <->text912.htm#10304<->BasisProducts(A) : AlgGen -&gt; SeqEnum
3<->elements :<->text912.htm#10300<->elements :: Construction of Elements of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
3<->creation :<->text912.htm<->creation :: Construction of Structure Constant Algebras and Elements (STRUCTURE CONSTANT ALGEBRAS)
3<->creation :<->text913.htm<->creation :: Operations on Structure  Constant Algebras and Elements (STRUCTURE CONSTANT ALGEBRAS)
3<->alg-oper :<->text913.htm#10306<->alg-oper :: Operations on Structure Constant  Algebras (STRUCTURE CONSTANT ALGEBRAS)
5<->IsCommutative(A) <->text913.htm#10307<->IsCommutative(A) : AlgGen -&gt; BoolElt
5<->IsAssociative(A) <->text913.htm#10308<->IsAssociative(A) : AlgGen -&gt; BoolElt
5<->IsLie(A) <->text913.htm#10309<->IsLie(A) : AlgGen -&gt; BoolElt
5<->DirectSum(A, B) <->text913.htm#10310<->DirectSum(A, B) : AlgGen, AlgGen -&gt; AlgGen
4<->AlgCon_jordan (Example H85E1)<->text913.htm#10311<->AlgCon_jordan (Example H85E1)
4<->Example-jordan :<->text913.htm#10311<->Example-jordan :: AlgCon_jordan (Example H85E1)
3<->alg-oper :<->text913.htm#10306<->alg-oper :: Operations on Structure Constant  Algebras (STRUCTURE CONSTANT ALGEBRAS)
3<->indexing :<->text913.htm#10312<->indexing :: Indexing Elements (STRUCTURE CONSTANT ALGEBRAS)
5<->a[i] <->text913.htm#10313<->a[i] : AlgGenElt, RngIntElt -&gt; RngElt
5<->[] :: a[i] := r <->text913.htm#10314<->[] :: a[i] := r : AlgGenElt, RngIntElt, RngElt -&gt;  AlgGenElt
3<->indexing :<->text913.htm#10312<->indexing :: Indexing Elements (STRUCTURE CONSTANT ALGEBRAS)
3<->alg-mod :<->text913.htm#10315<->alg-mod :: The Module Structure of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
5<->Module(A) <->text913.htm#10316<->Module(A) : AlgGen -&gt; ModTupRng
5<->Degree(A) <->text913.htm#10317<->Degree(A) : AlgGen -&gt; RngIntElt
5<->Degree(a) <->text913.htm#10318<->Degree(a) : AlgGenElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(a) <->text913.htm#10319<->Eltseq :: ElementToSequence(a) : AlgGenElt -&gt; SeqEnum
5<->ElementToSequence(a) <->text913.htm#10319<->ElementToSequence(a) : AlgGenElt -&gt; SeqEnum
5<->Coordinates(S, a) <->text913.htm#10320<->Coordinates(S, a) : AlgGen, AlgGenElt -&gt; SeqEnum
5<->InnerProduct(a, b) <->text913.htm#10321<->InnerProduct(a, b) : AlgGenElt, AlgGenElt -&gt; RngElt
5<->Support(a) <->text913.htm#10322<->Support(a) : AlgGenElt -&gt; SetEnum
3<->alg-mod :<->text913.htm#10315<->alg-mod :: The Module Structure of a Structure Constant Algebra (STRUCTURE CONSTANT ALGEBRAS)
3<->alg-hom :<->text913.htm#10323<->alg-hom :: Homomorphisms (STRUCTURE CONSTANT ALGEBRAS)
5<->hom <->text913.htm#10324<->hom< A \ar B | Q > : AlgGen, TupMod, [ TupModElt ] -> Map
5<->hom< A -> B | Q > <->text913.htm#10324<->hom&lt; A -&gt; B | Q &gt; : AlgGen, AlgGen, [ AlgGenElt ] -&gt; Map
4<->AlgCon_cayley (Example H85E2)<->text913.htm#10325<->AlgCon_cayley (Example H85E2)
4<->Example-cayley :<->text913.htm#10325<->Example-cayley :: AlgCon_cayley (Example H85E2)
3<->alg-hom :<->text913.htm#10323<->alg-hom :: Homomorphisms (STRUCTURE CONSTANT ALGEBRAS)
3<->creation :<->text913.htm<->creation :: Operations on Structure  Constant Algebras and Elements (STRUCTURE CONSTANT ALGEBRAS)
3<->grp_alg :<->text910.htm<->grp_alg :: STRUCTURE CONSTANT ALGEBRAS
3<->grp_alg :<->text916.htm<->grp_alg :: ASSOCIATIVE ALGEBRAS
3<->introduction :<->text917.htm<->introduction :: Introduction (ASSOCIATIVE ALGEBRAS)
3<->creation :<->text918.htm<->creation :: Construction of Associative Algebras (ASSOCIATIVE ALGEBRAS)
3<->algebras :<->text918.htm#10331<->algebras :: Construction of an Associative Structure Constant Algebra (ASSOCIATIVE ALGEBRAS)
5<->AssociativeAlgebra <->text918.htm#10332<->AssociativeAlgebra< M | Q : \parameters > : ModTupRng, SeqEnum -> AlgAss
5<->AssociativeAlgebra< R, n | Q : parameters > <->text918.htm#10332<->AssociativeAlgebra&lt; R, n | Q : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgAss
5<->AssociativeAlgebra< R, n | T : parameters > <->text918.htm#10333<->AssociativeAlgebra&lt; R, n | T : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgAss
5<->AssociativeAlgebra(A) <->text918.htm#10334<->AssociativeAlgebra(A) : AlgGen -&gt; AlgAss
5<->ChangeBasis(A, B) <->text918.htm#10335<->ChangeBasis(A, B) : AlgAss, [ModTupFldElt] -> AlgAss
5<->ChangeBasis(A, B) <->text918.htm#10335<->ChangeBasis(A, B) : AlgAss, Mtrx -> AlgAss
5<->ChangeBasis(A, B) <->text918.htm#10335<->ChangeBasis(A, B) : AlgAss, [AlgAssElt] -&gt; AlgAss
3<->algebras :<->text918.htm#10331<->algebras :: Construction of an Associative Structure Constant Algebra (ASSOCIATIVE ALGEBRAS)
3<->algebras :<->text918.htm#10336<->algebras :: Associative Structure Constant Algebras from other Algebras (ASSOCIATIVE ALGEBRAS)
5<->Algebra(A) <->text918.htm#10337<->Algebra(A) : AlgGrp -&gt; AlgAss, Map
5<->Algebra(F, E) <->text918.htm#10338<->Algebra(F, E) : FldNum, FldNum -> AlgAss, Map;
5<->Algebra(F, E) <->text918.htm#10338<->Algebra(F, E) : FldFin, FldFin -&gt; AlgAss, Map;
5<->AlgebraOverCenter(A) <->text918.htm#10339<->AlgebraOverCenter(A) : Alg -&gt; AlgAss, Map;
3<->algebras :<->text918.htm#10336<->algebras :: Associative Structure Constant Algebras from other Algebras (ASSOCIATIVE ALGEBRAS)
3<->creation :<->text918.htm<->creation :: Construction of Associative Algebras (ASSOCIATIVE ALGEBRAS)
3<->ops :<->text919.htm<->ops :: Operations on Algebras and their Elements (ASSOCIATIVE ALGEBRAS)
3<->alg-ops :<->text919.htm#10341<->alg-ops :: Operations on Algebras (ASSOCIATIVE ALGEBRAS)
5<->Centre(A) <->text919.htm#10342<->Centre(A) : AlgAss -&gt; AlgAss
5<->Centraliser :: Centralizer(A, S) <->text919.htm#10343<->Centraliser :: Centralizer(A, S) : AlgAss, AlgAss -&gt; AlgAss
5<->Centralizer(A, S) <->text919.htm#10343<->Centralizer(A, S) : AlgAss, AlgAss -&gt; AlgAss
5<->Idealiser :: Idealizer(A, B: parameters) <->text919.htm#10344<->Idealiser :: Idealizer(A, B: parameters) : AlgAss, AlgAss -&gt; AlgAss
5<->Idealizer(A, B: parameters) <->text919.htm#10344<->Idealizer(A, B: parameters) : AlgAss, AlgAss -&gt; AlgAss
5<->LieAlgebra(A) <->text919.htm#10345<->LieAlgebra(A) : AlgAss -&gt; AlgGen, Map
5<->CommutatorModule(A, B) <->text919.htm#10346<->CommutatorModule(A, B) : AlgAss, AlgAss -&gt; ModTupRng
5<->CommutatorIdeal(A, B) <->text919.htm#10347<->CommutatorIdeal(A, B) : AlgAss, AlgAss -&gt; AlgAss
5<->LeftAnnihilator(A, B) <->text919.htm#10348<->LeftAnnihilator(A, B) : AlgAss, AlgAss -&gt; AlgAss, AlgAss
5<->RightAnnihilator(A, B) <->text919.htm#10349<->RightAnnihilator(A, B) : AlgAss, AlgAss -&gt; AlgAss, AlgAss
4<->AlgAss_liealg (Example H86E1)<->text919.htm#10350<->AlgAss_liealg (Example H86E1)
4<->Example-liealg :<->text919.htm#10350<->Example-liealg :: AlgAss_liealg (Example H86E1)
5<->RestrictionOfScalars(A) <->text919.htm#10351<->RestrictionOfScalars(A) : AlgAss[FldFun] -> AlgAss, Map
5<->RestrictionOfScalars(A, F) <->text919.htm#10351<->RestrictionOfScalars(A, F) : AlgAss[FldAlg], Fld -> AlgAss, Map
5<->RestrictionOfScalars(A, F) <->text919.htm#10351<->RestrictionOfScalars(A, F) : AlgAss[FldFun], FldFunG -> AlgAss, Map
5<->RestrictionOfScalars(A) <->text919.htm#10351<->RestrictionOfScalars(A) : AlgAss[FldAlg] -&gt; AlgAss, Map
4<->AlgAss_restrict (Example H86E2)<->text919.htm#10352<->AlgAss_restrict (Example H86E2)
4<->Example-restrict :<->text919.htm#10352<->Example-restrict :: AlgAss_restrict (Example H86E2)
3<->alg-ops :<->text919.htm#10341<->alg-ops :: Operations on Algebras (ASSOCIATIVE ALGEBRAS)
3<->alg-ops :<->text919.htm#10353<->alg-ops :: Operations on Elements (ASSOCIATIVE ALGEBRAS)
5<->Centraliser :: Centralizer(A, s) <->text919.htm#10354<->Centraliser :: Centralizer(A, s) : AlgAss, AlgAssElt -&gt; AlgAss
5<->Centralizer(A, s) <->text919.htm#10354<->Centralizer(A, s) : AlgAss, AlgAssElt -&gt; AlgAss
5<->(,) :: LieBracket(a, b) <->text919.htm#10355<->(,) :: LieBracket(a, b) : AlgAssElt, AlgAssElt -&gt; AlgAssElt
5<->LieBracket(a, b) <->text919.htm#10355<->LieBracket(a, b) : AlgAssElt, AlgAssElt -&gt; AlgAssElt
5<->IsScalar(a) <->text919.htm#10356<->IsScalar(a) : AlgAssElt -&gt; BoolElt, RngElt
5<->RepresentationMatrix(a, M : parameters) <->text919.htm#10357<->RepresentationMatrix(a, M : parameters) : AlgAssElt, AlgAss -&gt; AlgMatElt
3<->alg-ops :<->text919.htm#10353<->alg-ops :: Operations on Elements (ASSOCIATIVE ALGEBRAS)
3<->alg-ops :<->text919.htm#10358<->alg-ops :: Representations (ASSOCIATIVE ALGEBRAS)
5<->MatrixAlgebra(A) <->text919.htm#10359<->MatrixAlgebra(A) : AlgAss -&gt; AlgMat
5<->MatrixAlgebra(A, M : parameters) <->text919.htm#10360<->MatrixAlgebra(A, M : parameters) : AlgAss, AlgAss -&gt; AlgMat, Map
5<->RegularRepresentation(A : parameters) <->text919.htm#10361<->RegularRepresentation(A : parameters) : AlgAss -&gt; AlgMat, Map
3<->alg-ops :<->text919.htm#10358<->alg-ops :: Representations (ASSOCIATIVE ALGEBRAS)
3<->alg-ops :<->text919.htm#10362<->alg-ops :: Decomposition of an Algebra (ASSOCIATIVE ALGEBRAS)
5<->JacobsonRadical(A) <->text919.htm#10363<->JacobsonRadical(A) : AlgAssV -&gt; AlgAssV
4<->AlgAss_jac_rad (Example H86E3)<->text919.htm#10364<->AlgAss_jac_rad (Example H86E3)
4<->Example-jac_rad :<->text919.htm#10364<->Example-jac_rad :: AlgAss_jac_rad (Example H86E3)
5<->IndecomposableSummands :: DirectSumDecomposition(A) <->text919.htm#10365<->IndecomposableSummands :: DirectSumDecomposition(A) : AlgAssV -&gt; [ AlgAssV ], [ AlgAssVElt ]
5<->DirectSumDecomposition(A) <->text919.htm#10365<->DirectSumDecomposition(A) : AlgAssV -&gt; [ AlgAssV ], [ AlgAssVElt ]
5<->CentralIdempotents(A) <->text919.htm#10366<->CentralIdempotents(A) : AlgAssV -&gt; SeqEnum, SeqEnum
4<->AlgAss_id_pots (Example H86E4)<->text919.htm#10367<->AlgAss_id_pots (Example H86E4)
4<->Example-id_pots :<->text919.htm#10367<->Example-id_pots :: AlgAss_id_pots (Example H86E4)
3<->alg-ops :<->text919.htm#10362<->alg-ops :: Decomposition of an Algebra (ASSOCIATIVE ALGEBRAS)
3<->ops :<->text919.htm<->ops :: Operations on Algebras and their Elements (ASSOCIATIVE ALGEBRAS)
3<->alg_ass_ord :<->text920.htm<->alg_ass_ord :: Orders (ASSOCIATIVE ALGEBRAS)
3<->creation :<->text920.htm#10369<->creation :: Construction of Orders (ASSOCIATIVE ALGEBRAS)
5<->Order(R, S) <->text920.htm#10370<->Order(R, S) : RngFunOrd, SeqEnum[AlgAssVElt[FldFunG]] -> AlgAssVOrd
5<->Order(R, S) <->text920.htm#10370<->Order(R, S) : Rng, SeqEnum[AlgAssVElt] -&gt; AlgAssVOrd
5<->Order(S) <->text920.htm#10371<->Order(S) : SeqEnum[AlgAssVElt[FldFun]] -> AlgAssVOrd
5<->Order(S) <->text920.htm#10371<->Order(S) : SeqEnum[AlgAssVElt[FldAlg]] -&gt; AlgAssVOrd
5<->Order(S, I) <->text920.htm#10372<->Order(S, I) : SeqEnum[AlgAssVElt[FldFunG]], SeqEnum[RngFunOrdIdl] -> AlgAssVOrd
5<->Order(S, I) <->text920.htm#10372<->Order(S, I) : SeqEnum[AlgAssVElt[FldAlg]], SeqEnum[RngOrdFracIdl] -&gt; AlgAssVOrd
5<->Order(A, m, I) <->text920.htm#10373<->Order(A, m, I) : AlgAssV[FldNum], AlgMatElt[FldNum], SeqEnum[RngOrdFracIdl] -> AlgAssVOrd, Map
5<->Order(A, m, I) <->text920.htm#10373<->Order(A, m, I) : AlgAssV[FldFun], AlgMatElt[FldFun], SeqEnum[RngFunOrdIdl] -> AlgAssVOrd
5<->Order(A, m, I) <->text920.htm#10373<->Order(A, m, I) : AlgAssV[FldOrd], AlgMatElt[FldOrd], SeqEnum[RngOrdFracIdl] -&gt; AlgAssVOrd
5<->Order(A, pm) <->text920.htm#10374<->Order(A, pm) : AlgAssV[FldNum], PMat -> AlgAssVOrd, Map
5<->Order(A, pm) <->text920.htm#10374<->Order(A, pm) : AlgAssV[FldFun], PMat -> AlgAssVOrd
5<->Order(A, pm) <->text920.htm#10374<->Order(A, pm) : AlgAssV[FldOrd], PMat -&gt; AlgAssVOrd
4<->AlgAss_ord_creat_cyc (Example H86E5)<->text920.htm#10375<->AlgAss_ord_creat_cyc (Example H86E5)
4<->Example-ord_creat_cyc :<->text920.htm#10375<->Example-ord_creat_cyc :: AlgAss_ord_creat_cyc (Example H86E5)
4<->AlgAss_ord_creat_cyc (Example H86E6)<->text920.htm#10376<->AlgAss_ord_creat_cyc (Example H86E6)
4<->Example-ord_creat_cyc :<->text920.htm#10376<->Example-ord_creat_cyc :: AlgAss_ord_creat_cyc (Example H86E6)
5<->MaximalOrder(A) <->text920.htm#10377<->MaximalOrder(A) : AlgAssV[FldRat] -&gt; AlgAssVOrd
5<->MaximalOrder(A) <->text920.htm#10378<->MaximalOrder(A) : AlgAssV[FldAlg] -&gt; AlgAssVOrd
5<->MaximalOrder(O) <->text920.htm#10379<->MaximalOrder(O) : AlgAssVOrd[RngOrd] -> AlgAssVOrd
5<->MaximalOrder(O) <->text920.htm#10379<->MaximalOrder(O) : AlgAssVOrd[RngInt] -&gt; AlgAssVOrd
5<->MaximalOrderFinite(A) <->text920.htm#10380<->MaximalOrderFinite(A) : AlgAssV[FldFunRat] -&gt; AlgAssVOrd
5<->MaximalOrderInfinite(A) <->text920.htm#10381<->MaximalOrderInfinite(A) : AlgAssV[FldFunRat] -&gt; AlgAssVOrd
5<->MaximalOrderInfinite :: MaximalOrderFinite(A) <->text920.htm#10382<->MaximalOrderInfinite :: MaximalOrderFinite(A) : AlgAssV[FldFun] -&gt; AlgAssVOrd
5<->MaximalOrderFinite(A) <->text920.htm#10382<->MaximalOrderFinite(A) : AlgAssV[FldFun] -&gt; AlgAssVOrd
5<->MaximalOrder(O) <->text920.htm#10383<->MaximalOrder(O) : AlgAssVOrd[RngVal] -> AlgAssVOrd
5<->MaximalOrder(O) <->text920.htm#10383<->MaximalOrder(O) : AlgAssVOrd[RngFunOrd] -> AlgAssVOrd
5<->MaximalOrder(O) <->text920.htm#10383<->MaximalOrder(O) : AlgAssVOrd[RngUPol] -&gt; AlgAssVOrd
4<->AlgAss_max_ord (Example H86E7)<->text920.htm#10384<->AlgAss_max_ord (Example H86E7)
4<->Example-max_ord :<->text920.htm#10384<->Example-max_ord :: AlgAss_max_ord (Example H86E7)
4<->AlgAss_max_ord_alg (Example H86E8)<->text920.htm#10385<->AlgAss_max_ord_alg (Example H86E8)
4<->Example-max_ord_alg :<->text920.htm#10385<->Example-max_ord_alg :: AlgAss_max_ord_alg (Example H86E8)
5<->RestrictionOfScalars(O) <->text920.htm#10386<->RestrictionOfScalars(O) : AlgAssVOrd[RngFunOrd] -> AlgAssVOrd, Map
5<->RestrictionOfScalars(O, C) <->text920.htm#10386<->RestrictionOfScalars(O, C) : AlgAssVOrd[RngOrd], Rng -> AlgAssVOrd, Map
5<->RestrictionOfScalars(O, C) <->text920.htm#10386<->RestrictionOfScalars(O, C) : AlgAssVOrd[RngFunOrd], Rng -> AlgAssVOrd, Map
5<->RestrictionOfScalars(O) <->text920.htm#10386<->RestrictionOfScalars(O) : AlgAssVOrd[RngOrd] -&gt; AlgAssVOrd, Map
4<->AlgAss_restrict (Example H86E9)<->text920.htm#10387<->AlgAss_restrict (Example H86E9)
4<->Example-restrict :<->text920.htm#10387<->Example-restrict :: AlgAss_restrict (Example H86E9)
3<->creation :<->text920.htm#10369<->creation :: Construction of Orders (ASSOCIATIVE ALGEBRAS)
3<->attributes :<->text920.htm#10388<->attributes :: Attributes (ASSOCIATIVE ALGEBRAS)
5<->CoefficientRing :: BaseRing(O) <->text920.htm#10389<->CoefficientRing :: BaseRing(O) : AlgAssVOrd -&gt; Rng
5<->BaseRing(O) <->text920.htm#10389<->BaseRing(O) : AlgAssVOrd -&gt; Rng
5<->Algebra(O) <->text920.htm#10390<->Algebra(O) : AlgAssVOrd -&gt; AlgAssV
5<->Dimension :: Degree(O) <->text920.htm#10391<->Dimension :: Degree(O) : AlgAssVOrd -&gt; RngIntElt
5<->Degree(O) <->text920.htm#10391<->Degree(O) : AlgAssVOrd -&gt; RngIntElt
5<->Discriminant(O) <->text920.htm#10392<->Discriminant(O) : AlgAssVOrd[RngFunOrd] -> RngOrdIdl
5<->Discriminant(O) <->text920.htm#10392<->Discriminant(O) : AlgAssVOrd[RngInt] -> RngIntElt
5<->Discriminant(O) <->text920.htm#10392<->Discriminant(O) : AlgAssVOrd[RngUPol] -> RngIntElt
5<->Discriminant(O) <->text920.htm#10392<->Discriminant(O) : AlgAssVOrd[RngVal] -> RngIntElt
5<->Discriminant(O) <->text920.htm#10392<->Discriminant(O) : AlgAssVOrd[RngOrd] -&gt; RngOrdIdl
5<->FactoredDiscriminant(O) <->text920.htm#10393<->FactoredDiscriminant(O) : AlgAssVOrd[RngOrd] -&gt; [Tup]
5<->MultiplicationTable(O) <->text920.htm#10394<->MultiplicationTable(O) : AlgAssVOrd -&gt; SeqEnum
5<->Module(O) <->text920.htm#10395<->Module(O) : AlgAssVOrd[RngOrd] -&gt; PMat
5<->TraceZeroSubspace(O) <->text920.htm#10396<->TraceZeroSubspace(O) : AlgAssVOrd -&gt; SeqEnum
3<->attributes :<->text920.htm#10388<->attributes :: Attributes (ASSOCIATIVE ALGEBRAS)
3<->order-basis :<->text920.htm#10397<->order-basis :: Bases of Orders (ASSOCIATIVE ALGEBRAS)
5<->PseudoBasis(O) <->text920.htm#10398<->PseudoBasis(O) : AlgAssVOrd[RngFunOrd] -> SeqEnum
5<->PseudoBasis(O) <->text920.htm#10398<->PseudoBasis(O) : AlgAssVOrd[RngOrd] -&gt; SeqEnum
5<->PseudoMatrix(O) <->text920.htm#10399<->PseudoMatrix(O) : AlgAssVOrd[RngFunOrd]> -> PMat
5<->PseudoMatrix(O) <->text920.htm#10399<->PseudoMatrix(O) : AlgAssVOrd[RngOrd]&gt; -&gt; PMat
5<->Basis(O) <->text920.htm#10400<->Basis(O) : AlgAssVOrd -&gt; SeqEnum
5<->ZBasis(O) <->text920.htm#10401<->ZBasis(O) : AlgAssVOrd[RngFunOrd] -> [AlgAssVElt]
5<->ZBasis(O) <->text920.htm#10401<->ZBasis(O) : AlgAssVOrd[RngOrd] -&gt; [AlgAssVElt]
5<->Generators(O) <->text920.htm#10402<->Generators(O) : AlgAssVOrd -&gt; [AlgAssVElt]
4<->AlgAss_bases (Example H86E10)<->text920.htm#10403<->AlgAss_bases (Example H86E10)
4<->Example-bases :<->text920.htm#10403<->Example-bases :: AlgAss_bases (Example H86E10)
3<->order-basis :<->text920.htm#10397<->order-basis :: Bases of Orders (ASSOCIATIVE ALGEBRAS)
3<->order-preds :<->text920.htm#10404<->order-preds :: Predicates (ASSOCIATIVE ALGEBRAS)
5<->O1 eq O2 <->text920.htm#10405<->O1 eq O2 : AlgAssVOrd, AlgAssVOrd -&gt; BoolElt
5<->notin :: x in O <->text920.htm#10406<->notin :: x in O : AlgAssVElt, AlgAssVOrd -&gt; BoolElt
5<->x in O <->text920.htm#10406<->x in O : AlgAssVElt, AlgAssVOrd -&gt; BoolElt
3<->order-preds :<->text920.htm#10404<->order-preds :: Predicates (ASSOCIATIVE ALGEBRAS)
3<->order-ops :<->text920.htm#10407<->order-ops :: Operations with Orders (ASSOCIATIVE ALGEBRAS)
5<->Adjoin(O, x, I) <->text920.htm#10408<->Adjoin(O, x, I) : AlgAssVOrd, AlgAssVElt, RngOrdFracIdl -> AlgAssVOrd
5<->Adjoin(O, x) <->text920.htm#10408<->Adjoin(O, x) : AlgAssVOrd, AlgAssVElt -&gt; AlgAssVOrd
5<->O1 + O2 <->text920.htm#10409<->O1 + O2 : AlgAssVOrd[RngOrd], AlgAssVOrd[RngOrd] -&gt; AlgAssVOrd
5<->O1 meet O2 <->text920.htm#10410<->O1 meet O2 : AlgAssVOrd[RngOrd], AlgAssVOrd[RngOrd] -&gt; AlgAssVOrd
5<->O ^ x <->text920.htm#10411<->O ^ x : AlgAssVOrd, AlgAssElt -&gt; AlgAssvOrd
4<->AlgAss_sumandadjoin (Example H86E11)<->text920.htm#10412<->AlgAss_sumandadjoin (Example H86E11)
4<->Example-sumandadjoin :<->text920.htm#10412<->Example-sumandadjoin :: AlgAss_sumandadjoin (Example H86E11)
3<->order-ops :<->text920.htm#10407<->order-ops :: Operations with Orders (ASSOCIATIVE ALGEBRAS)
3<->alg_ass_ord :<->text920.htm<->alg_ass_ord :: Orders (ASSOCIATIVE ALGEBRAS)
3<->elements :<->text921.htm<->elements :: Elements of Orders (ASSOCIATIVE ALGEBRAS)
3<->elt-ops :<->text921.htm#10414<->elt-ops :: Construction of Elements (ASSOCIATIVE ALGEBRAS)
5<->Zero :: O ! 0 <->text921.htm#10415<->Zero :: O ! 0 : AlgAssVOrd, RngIntElt -&gt; AlgAssVOrdElt
5<->O ! 0 <->text921.htm#10415<->O ! 0 : AlgAssVOrd, RngIntElt -&gt; AlgAssVOrdElt
5<->One :: O ! 1 <->text921.htm#10416<->One :: O ! 1 : AlgAssVOrd, RngIntElt -&gt; AlgAssVOrdElt
5<->O ! 1 <->text921.htm#10416<->O ! 1 : AlgAssVOrd, RngIntElt -&gt; AlgAssVOrdElt
5<->O . i <->text921.htm#10417<->O . i : AlgAssVOrd, RngIntElt -&gt; AlgAssVElt
5<->O ! x <->text921.htm#10418<->O ! x : AlgAssVOrd, Any -&gt; AlgAssVOrdElt
3<->elt-ops :<->text921.htm#10414<->elt-ops :: Construction of Elements (ASSOCIATIVE ALGEBRAS)
3<->elt-ops :<->text921.htm#10419<->elt-ops :: Arithmetic of Elements (ASSOCIATIVE ALGEBRAS)
5<->x + y <->text921.htm#10420<->x + y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; AlgAssVOrdElt
5<->x - y <->text921.htm#10421<->x - y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; AlgAssVOrdElt
5<->- x <->text921.htm#10422<->- x : AlgAssVOrdElt -&gt; AlgAssVOrdElt
5<->x * y <->text921.htm#10423<->x * y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; AlgAssVOrdElt
5<->c * u <->text921.htm#10424<->c * u : RngElt, AlgAssVOrdElt -> AlgAssVOrdElt
5<->u * c <->text921.htm#10424<->u * c : AlgAssVOrdElt, RngElt -&gt; AlgAssVOrdElt
5<->x / y <->text921.htm#10425<->x / y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; AlgAssVElt
5<->x div y <->text921.htm#10426<->x div y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; AlgAssVOrdElt
5<->x ^ n <->text921.htm#10427<->x ^ n : AlgAssVOrdElt, RngIntElt -&gt; AlgAssVOrdElt
3<->elt-ops :<->text921.htm#10419<->elt-ops :: Arithmetic of Elements (ASSOCIATIVE ALGEBRAS)
3<->elt-pred :<->text921.htm#10428<->elt-pred :: Predicates on Elements (ASSOCIATIVE ALGEBRAS)
5<->x eq y <->text921.htm#10429<->x eq y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; BoolElt
5<->x ne y <->text921.htm#10430<->x ne y : AlgAssVOrdElt, AlgAssVOrdElt -&gt; BoolElt
5<->IsZero(x) <->text921.htm#10431<->IsZero(x) : AlgAssVOrdElt -&gt; BoolElt
5<->IsUnit(a) <->text921.htm#10432<->IsUnit(a) : AlgAssVOrdElt -&gt; BoolElt
5<->IsScalar(x) <->text921.htm#10433<->IsScalar(x) : AlgAssVOrdElt -&gt; BoolElt, RngElt
3<->elt-pred :<->text921.htm#10428<->elt-pred :: Predicates on Elements (ASSOCIATIVE ALGEBRAS)
3<->elt-other :<->text921.htm#10434<->elt-other :: Other Operations with Elements (ASSOCIATIVE ALGEBRAS)
5<->Eltseq :: ElementToSequence(x) <->text921.htm#10435<->Eltseq :: ElementToSequence(x) : AlgAssVOrdElt -&gt; SeqEnum
5<->ElementToSequence(x) <->text921.htm#10435<->ElementToSequence(x) : AlgAssVOrdElt -&gt; SeqEnum
5<->Norm(x) <->text921.htm#10436<->Norm(x) : AlgAssVOrdElt -&gt; RngElt
5<->Trace(x) <->text921.htm#10437<->Trace(x) : AlgAssVOrdElt -&gt; RngElt
5<->RightRepresentationMatrix :: LeftRepresentationMatrix(e) <->text921.htm#10438<->RightRepresentationMatrix :: LeftRepresentationMatrix(e) : AlgAssVOrdElt -&gt; AlgMatElt
5<->LeftRepresentationMatrix(e) <->text921.htm#10438<->LeftRepresentationMatrix(e) : AlgAssVOrdElt -&gt; AlgMatElt
5<->RepresentationMatrix(a) <->text921.htm#10439<->RepresentationMatrix(a) : AlgAssVOrdElt -&gt; AlgMatElt
5<->CharacteristicPolynomial(x) <->text921.htm#10440<->CharacteristicPolynomial(x) : AlgAssVOrdElt -&gt; RngUPolElt
5<->MinimalPolynomial(x) <->text921.htm#10441<->MinimalPolynomial(x) : AlgAssVOrdElt -&gt; RngUPolElt
3<->elt-other :<->text921.htm#10434<->elt-other :: Other Operations with Elements (ASSOCIATIVE ALGEBRAS)
3<->elements :<->text921.htm<->elements :: Elements of Orders (ASSOCIATIVE ALGEBRAS)
3<->ideals :<->text922.htm<->ideals :: Ideals of Orders (ASSOCIATIVE ALGEBRAS)
3<->elt-ops :<->text922.htm#10443<->elt-ops :: Construction of Ideals (ASSOCIATIVE ALGEBRAS)
5<->rideal :: lideal<O | E> <->text922.htm#10444<->rideal :: lideal&lt;O | E&gt; : AlgAssVOrd, [AlgAssVOrdElt] -&gt; AlgAssVOrdIdl
5<->lideal<O | E> <->text922.htm#10444<->lideal&lt;O | E&gt; : AlgAssVOrd, [AlgAssVOrdElt] -&gt; AlgAssVOrdIdl
5<->lideal <->text922.htm#10445<->lideal<O | M> : AlgAssVOrd, Mtrx -> AlgAssVOrdIdl
5<->rideal :: lideal<O | M> <->text922.htm#10445<->rideal :: lideal&lt;O | M&gt; : AlgAssVOrd, PMat -&gt; AlgAssVOrdIdl
5<->rideal : AlgAssVOrd, Mtrx -> AlgAssVOrdIdl :: lideal<O | M> <->text922.htm#10445<->rideal<O | M> : AlgAssVOrd, Mtrx -> AlgAssVOrdIdl :: lideal&lt;O | M&gt; : AlgAssVOrd, PMat -&gt; AlgAssVOrdIdl
5<->lideal<O | M> <->text922.htm#10445<->lideal&lt;O | M&gt; : AlgAssVOrd, PMat -&gt; AlgAssVOrdIdl
5<->ideal <->text922.htm#10445<->ideal<O | M> : AlgAssVOrd, Mtrx -> AlgAssVOrdIdl
5<->lideal<O | M> <->text922.htm#10445<->lideal&lt;O | M&gt; : AlgAssVOrd, PMat -&gt; AlgAssVOrdIdl
5<->e * O <->text922.htm#10446<->e * O : RngElt, AlgAssVOrd -> AlgAssVOrdIdl
5<->O * e <->text922.htm#10446<->O * e : AlgAssVOrd, RngElt -&gt; AlgAssVOrdIdl
3<->elt-ops :<->text922.htm#10443<->elt-ops :: Construction of Ideals (ASSOCIATIVE ALGEBRAS)
3<->ideal-attributes :<->text922.htm#10447<->ideal-attributes :: Attributes of Ideals (ASSOCIATIVE ALGEBRAS)
5<->Order(I) <->text922.htm#10448<->Order(I) : AlgAssVOrdIdl -&gt; AlgAssVOrd
5<->Algebra(I) <->text922.htm#10449<->Algebra(I) : AlgAssVOrdIdl -&gt; AlgAssV
5<->RightOrder :: LeftOrder(I) <->text922.htm#10450<->RightOrder :: LeftOrder(I) : AlgAssVOrdIdl -&gt; AlgAssVOrd
5<->LeftOrder(I) <->text922.htm#10450<->LeftOrder(I) : AlgAssVOrdIdl -&gt; AlgAssVOrd
3<->ideal-attributes :<->text922.htm#10447<->ideal-attributes :: Attributes of Ideals (ASSOCIATIVE ALGEBRAS)
3<->ideal-basis :<->text922.htm#10451<->ideal-basis :: Bases of Ideals (ASSOCIATIVE ALGEBRAS)
5<->Denominator(I) <->text922.htm#10452<->Denominator(I) : AlgAssVOrdIdl -&gt; RngElt
5<->PseudoBasis(I) <->text922.htm#10453<->PseudoBasis(I) : AlgAssVOrdIdl[RngOrd] -&gt; SeqEnum
5<->PseudoMatrix(I) <->text922.htm#10454<->PseudoMatrix(I) : AlgAssVOrdIdl[RngFunOrd] -> PMat
5<->PseudoMatrix(I) <->text922.htm#10454<->PseudoMatrix(I) : AlgAssVOrdIdl[RngOrd] -&gt; PMat
5<->Basis(I) <->text922.htm#10455<->Basis(I) : AlgAssVOrdIdl -&gt; SeqEnum
5<->BasisMatrix(I) <->text922.htm#10456<->BasisMatrix(I) : AlgAssVOrdIdl -&gt; AlgMatElt
5<->ZBasis(I) <->text922.htm#10457<->ZBasis(I) : AlgAssVOrdIdl[RngOrd] -&gt; [AlgAssVOrdElt]
5<->Generators(I) <->text922.htm#10458<->Generators(I) : AlgAssVOrdIdl[RngOrd] -&gt; [AlgAssVOrdElt]
5<->PseudoMatrix :: PseudoBasis(I, R) <->text922.htm#10459<->PseudoMatrix :: PseudoBasis(I, R) : AlgAssVOrdIdl[RngOrd], Str -&gt; SeqEnum
5<->PseudoBasis(I, R) <->text922.htm#10459<->PseudoBasis(I, R) : AlgAssVOrdIdl[RngOrd], Str -&gt; SeqEnum
5<->BasisMatrix :: PseudoBasis(I, R) <->text922.htm#10459<->BasisMatrix :: PseudoBasis(I, R) : AlgAssVOrdIdl[RngOrd], Str -&gt; SeqEnum
5<->PseudoBasis(I, R) <->text922.htm#10459<->PseudoBasis(I, R) : AlgAssVOrdIdl[RngOrd], Str -&gt; SeqEnum
3<->ideal-basis :<->text922.htm#10451<->ideal-basis :: Bases of Ideals (ASSOCIATIVE ALGEBRAS)
3<->elt-ops :<->text922.htm#10460<->elt-ops :: Arithmetic for Ideals (ASSOCIATIVE ALGEBRAS)
5<->I + J <->text922.htm#10461<->I + J : AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; AlgAssVOrdIdl
5<->I * J<->text922.htm#10462<->I * J: AlgAssVOrdIdl[RngOrd], AlgAssVOrdIdl[RngOrd] -> AlgAssVOrdIdl, AlgAssVOrdIdl
5<->I * J<->text922.htm#10462<->I * J: AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; AlgAssVOrdIdl, AlgAssVOrdIdl
5<->I * a<->text922.htm#10463<->I * a: AlgAssVOrdIdl, RngElt -> AlgAssVOrdIdl
5<->a * I<->text922.htm#10463<->a * I: RngElt, AlgAssVOrdIdl -&gt; AlgAssVOrdIdl
5<->Colon(J, I)<->text922.htm#10464<->Colon(J, I): AlgAssVOrdIdl[RngOrd], AlgAssVOrdIdl[RngOrd] -&gt; PMat
5<->MultiplicatorRing(I)<->text922.htm#10465<->MultiplicatorRing(I): AlgAssVOrdIdl -&gt; AlgAssVOrd
3<->elt-ops :<->text922.htm#10460<->elt-ops :: Arithmetic for Ideals (ASSOCIATIVE ALGEBRAS)
3<->ideal-preds :<->text922.htm#10466<->ideal-preds :: Predicates on Ideals (ASSOCIATIVE ALGEBRAS)
5<->IsRightIdeal :: IsLeftIdeal(I) <->text922.htm#10467<->IsRightIdeal :: IsLeftIdeal(I) : AlgAssVOrdIdl -&gt; BoolElt
5<->IsTwoSidedIdeal :: IsLeftIdeal(I) <->text922.htm#10467<->IsTwoSidedIdeal :: IsLeftIdeal(I) : AlgAssVOrdIdl -&gt; BoolElt
5<->IsLeftIdeal(I) <->text922.htm#10467<->IsLeftIdeal(I) : AlgAssVOrdIdl -&gt; BoolElt
5<->I eq J <->text922.htm#10468<->I eq J : AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; BoolElt
5<->I subset J <->text922.htm#10469<->I subset J : AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; BoolElt
5<->notin :: a in I <->text922.htm#10470<->notin :: a in I : AlgAssVElt, AlgAssVOrdIdl -&gt; BoolElt
5<->a in I <->text922.htm#10470<->a in I : AlgAssVElt, AlgAssVOrdIdl -&gt; BoolElt
3<->ideal-preds :<->text922.htm#10466<->ideal-preds :: Predicates on Ideals (ASSOCIATIVE ALGEBRAS)
3<->ideal-other :<->text922.htm#10471<->ideal-other :: Other Operations on Ideals (ASSOCIATIVE ALGEBRAS)
5<->Norm(I) <->text922.htm#10472<->Norm(I) : AlgAssVOrdIdl[RngOrd] -&gt; RngOrdIdl
4<->AlgAss_sumandadjoin (Example H86E12)<->text922.htm#10473<->AlgAss_sumandadjoin (Example H86E12)
4<->Example-sumandadjoin :<->text922.htm#10473<->Example-sumandadjoin :: AlgAss_sumandadjoin (Example H86E12)
3<->ideal-other :<->text922.htm#10471<->ideal-other :: Other Operations on Ideals (ASSOCIATIVE ALGEBRAS)
3<->ideals :<->text922.htm<->ideals :: Ideals of Orders (ASSOCIATIVE ALGEBRAS)
3<->grp_alg :<->text916.htm<->grp_alg :: ASSOCIATIVE ALGEBRAS
3<->finitely-presented :<->text925.htm<->finitely-presented :: FINITELY PRESENTED ALGEBRAS
3<->introduction :<->text926.htm<->introduction :: Introduction (FINITELY PRESENTED ALGEBRAS)
3<->order :<->text927.htm<->order :: Representation and Monomial  Orders (FINITELY PRESENTED ALGEBRAS)
3<->exterior :<->text928.htm<->exterior :: Exterior Algebras (FINITELY PRESENTED ALGEBRAS)
3<->algebras :<->text929.htm<->algebras :: Creation of Free Algebras and Elements (FINITELY PRESENTED ALGEBRAS)
3<->AlgFr :<->text929.htm#10481<->AlgFr :: Creation of Free Algebras (FINITELY PRESENTED ALGEBRAS)
3<->AlgFrElt :<->text929.htm#10481<->AlgFrElt :: Creation of Free Algebras (FINITELY PRESENTED ALGEBRAS)
3<->free :<->text929.htm#10481<->free :: Creation of Free Algebras (FINITELY PRESENTED ALGEBRAS)
5<->FreeAlgebra(K, n) <->text929.htm#10482<->FreeAlgebra(K, n) : Fld, RngIntElt -&gt; AlgFr
5<->ExteriorAlgebra(K, n) <->text929.htm#10483<->ExteriorAlgebra(K, n) : Fld, RngIntElt -&gt; AlgExt
3<->free :<->text929.htm#10481<->free :: Creation of Free Algebras (FINITELY PRESENTED ALGEBRAS)
3<->print :<->text929.htm#10484<->print :: Print Names (FINITELY PRESENTED ALGEBRAS)
5<->AssignNames(~F, s) <->text929.htm#10485<->AssignNames(~F, s) : AlgFr, [ MonStgElt ]) -&gt;
5<->Name(F, i) <->text929.htm#10486<->Name(F, i) : AlgFr, RngIntElt -&gt; AlgFrElt
3<->print :<->text929.htm#10484<->print :: Print Names (FINITELY PRESENTED ALGEBRAS)
3<->element :<->text929.htm#10487<->element :: Creation of Polynomials (FINITELY PRESENTED ALGEBRAS)
5<->F . i <->text929.htm#10488<->F . i : AlgFr, RngInt -&gt; AlgFrElt
5<->! :: elt< R | a  > <->text929.htm#10489<->! :: elt&lt; R | a  &gt; : AlgFr, RngElt -&gt; AlgFrElt
5<->R ! s : AlgFr, [ RngElt ] -> AlgFrElt :: elt< R | a  > <->text929.htm#10489<->R ! s : AlgFr, [ RngElt ] -> AlgFrElt :: elt&lt; R | a  &gt; : AlgFr, RngElt -&gt; AlgFrElt
5<->elt <->text929.htm#10489<->elt< R | s > : AlgFr, [ RngElt ] -> AlgFrElt
5<->elt< R | a  > <->text929.htm#10489<->elt&lt; R | a  &gt; : AlgFr, RngElt -&gt; AlgFrElt
3<->element :<->text929.htm#10487<->element :: Creation of Polynomials (FINITELY PRESENTED ALGEBRAS)
3<->algebras :<->text929.htm<->algebras :: Creation of Free Algebras and Elements (FINITELY PRESENTED ALGEBRAS)
3<->operation :<->text930.htm<->operation :: Structure Operations (FINITELY PRESENTED ALGEBRAS)
3<->generic :<->text930.htm#10491<->generic :: Related Structures (FINITELY PRESENTED ALGEBRAS)
5<->CoefficientRing :: BaseRing(F) <->text930.htm#10492<->CoefficientRing :: BaseRing(F) : AlgFr -&gt; Rng
5<->BaseRing(F) <->text930.htm#10492<->BaseRing(F) : AlgFr -&gt; Rng
3<->generic :<->text930.htm#10491<->generic :: Related Structures (FINITELY PRESENTED ALGEBRAS)
3<->invariant :<->text930.htm#10493<->invariant :: Numerical Invariants (FINITELY PRESENTED ALGEBRAS)
5<->Rank(F) <->text930.htm#10494<->Rank(F) : AlgFr -&gt; RngIntElt
3<->invariant :<->text930.htm#10493<->invariant :: Numerical Invariants (FINITELY PRESENTED ALGEBRAS)
3<->homomorphism :<->text930.htm#10495<->homomorphism :: Homomorphisms (FINITELY PRESENTED ALGEBRAS)
5<->hom <->text930.htm#10496<->hom< F \ar S | y$_1$, ..., y$_n$ > : AlgFr, Rng -> Map
5<->hom< F -> S | f, y1, ..., yn > <->text930.htm#10496<->hom&lt; F -&gt; S | f, y<sub>1</sub>, ..., y<sub>n</sub> &gt; : AlgFr, Rng -&gt; Map
4<->AlgFP_Homomorphism (Example H87E1)<->text930.htm#10497<->AlgFP_Homomorphism (Example H87E1)
4<->Example-Homomorphism :<->text930.htm#10497<->Example-Homomorphism :: AlgFP_Homomorphism (Example H87E1)
3<->homomorphism :<->text930.htm#10495<->homomorphism :: Homomorphisms (FINITELY PRESENTED ALGEBRAS)
3<->operation :<->text930.htm<->operation :: Structure Operations (FINITELY PRESENTED ALGEBRAS)
3<->operation-element :<->text931.htm<->operation-element :: Element Operations (FINITELY PRESENTED ALGEBRAS)
3<->arithmetic :<->text931.htm#10499<->arithmetic :: Arithmetic Operators (FINITELY PRESENTED ALGEBRAS)
3<->equality-membership :<->text931.htm#10500<->equality-membership :: Equality and Membership (FINITELY PRESENTED ALGEBRAS)
3<->element-Boolean :<->text931.htm#10501<->element-Boolean :: Predicates on Algebra Elements (FINITELY PRESENTED ALGEBRAS)
3<->coefficient-monomial-term-degree :<->text931.htm#10502<->coefficient-monomial-term-degree :: Coefficients, Monomials, Terms and Degree (FINITELY PRESENTED ALGEBRAS)
5<->Coefficients(f) <->text931.htm#10503<->Coefficients(f) : AlgFrElt -&gt; [ RngElt ]
5<->LeadingCoefficient(f) <->text931.htm#10504<->LeadingCoefficient(f) : AlgFrElt -&gt; RngElt
5<->TrailingCoefficient(f) <->text931.htm#10505<->TrailingCoefficient(f) : AlgFrElt -&gt; RngElt
5<->MonomialCoefficient(f, m) <->text931.htm#10506<->MonomialCoefficient(f, m) : AlgFrElt, AlgFrElt -&gt; RngElt
5<->Monomials(f) <->text931.htm#10507<->Monomials(f) : AlgFrElt -&gt; [ AlgFrElt ]
5<->LeadingMonomial(f) <->text931.htm#10508<->LeadingMonomial(f) : AlgFrElt -&gt; AlgFrElt
5<->Terms(f) <->text931.htm#10509<->Terms(f) : AlgFrElt -&gt; [ AlgFrElt ]
5<->LeadingTerm(f) <->text931.htm#10510<->LeadingTerm(f) : AlgFrElt -&gt; AlgFrElt
5<->TrailingTerm(f) <->text931.htm#10511<->TrailingTerm(f) : AlgFrElt -&gt; RngElt
5<->Length(m) <->text931.htm#10512<->Length(m) : AlgFrElt -&gt; RngIntElt
5<->[] :: m[i] <->text931.htm#10513<->[] :: m[i] : AlgFrElt, RngIntElt -&gt; AlgFrElt
5<->TotalDegree(f) <->text931.htm#10514<->TotalDegree(f) : AlgFrElt -&gt; RngIntElt
5<->LeadingTotalDegree(f) <->text931.htm#10515<->LeadingTotalDegree(f) : AlgFrElt -&gt; RngIntElt
4<->AlgFP_Terms (Example H87E2)<->text931.htm#10516<->AlgFP_Terms (Example H87E2)
4<->Example-Terms :<->text931.htm#10516<->Example-Terms :: AlgFP_Terms (Example H87E2)
3<->coefficient-monomial-term-degree :<->text931.htm#10502<->coefficient-monomial-term-degree :: Coefficients, Monomials, Terms and Degree (FINITELY PRESENTED ALGEBRAS)
3<->evaluation :<->text931.htm#10517<->evaluation :: Evaluation (FINITELY PRESENTED ALGEBRAS)
5<->Evaluate(f, s) <->text931.htm#10518<->Evaluate(f, s) : AlgFrElt, < RngElt, \ldots, RngElt > -> RngElt
5<->Evaluate(f, s) <->text931.htm#10518<->Evaluate(f, s) : AlgFrElt, [ RngElt ] -&gt; RngElt
4<->AlgFP_Terms (Example H87E3)<->text931.htm#10519<->AlgFP_Terms (Example H87E3)
4<->Example-Terms :<->text931.htm#10519<->Example-Terms :: AlgFP_Terms (Example H87E3)
3<->evaluation :<->text931.htm#10517<->evaluation :: Evaluation (FINITELY PRESENTED ALGEBRAS)
3<->operation-element :<->text931.htm<->operation-element :: Element Operations (FINITELY PRESENTED ALGEBRAS)
3<->ideals :<->text932.htm<->ideals :: Ideals and Gr&ouml;bner Bases (FINITELY PRESENTED ALGEBRAS)
3<->creation :<->text932.htm#10521<->creation :: Creation of Ideals (FINITELY PRESENTED ALGEBRAS)
5<->lideal :: ideal<A | L> <->text932.htm#10522<->lideal :: ideal&lt;A | L&gt; : AlgFr, List -&gt; AlgFr
5<->rideal :: ideal<A | L> <->text932.htm#10522<->rideal :: ideal&lt;A | L&gt; : AlgFr, List -&gt; AlgFr
5<->ideal<A | L> <->text932.htm#10522<->ideal&lt;A | L&gt; : AlgFr, List -&gt; AlgFr
5<->Basis(I) <->text932.htm#10523<->Basis(I) : AlgFr -&gt; [ AlgFrElt ]
5<->BasisElement(I, i) <->text932.htm#10524<->BasisElement(I, i) : AlgFr, RngIntElt -&gt; AlgFrElt
3<->creation :<->text932.htm#10521<->creation :: Creation of Ideals (FINITELY PRESENTED ALGEBRAS)
3<->groebner :<->text932.htm#10525<->groebner :: Gr&ouml;bner Bases (FINITELY PRESENTED ALGEBRAS)
5<->Groebner(I: parameters) <->text932.htm#10526<->Groebner(I: parameters) : AlgFr -&gt;
5<->GroebnerBasis(I: parameters) <->text932.htm#10527<->GroebnerBasis(I: parameters) : AlgFr -&gt; AlgFrElt
5<->GroebnerBasis(S$\colon$ \parameters) <->text932.htm#10528<->GroebnerBasis(S$\colon$ \parameters) : \lbrace AlgFrElt \rbrace -> [ AlgFrElt ]
5<->GroebnerBasis(S: parameters) <->text932.htm#10528<->GroebnerBasis(S: parameters) : [ AlgFrElt ] -&gt; [ AlgFrElt ]
5<->GroebnerBasis(S, d: parameters) <->text932.htm#10529<->GroebnerBasis(S, d: parameters) : [ AlgFr ], RngInt -&gt; AlgFrElt
3<->groebner :<->text932.htm#10525<->groebner :: Gr&ouml;bner Bases (FINITELY PRESENTED ALGEBRAS)
3<->verbose :<->text932.htm#10530<->verbose :: Verbosity (FINITELY PRESENTED ALGEBRAS)
5<->SetVerbose("Groebner", v) <->text932.htm#10531<->SetVerbose("Groebner", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("Buchberger", v) <->text932.htm#10532<->SetVerbose("Buchberger", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("Faugere", v) <->text932.htm#10533<->SetVerbose("Faugere", v) : MonStgElt, RngIntElt -&gt;
3<->verbose :<->text932.htm#10530<->verbose :: Verbosity (FINITELY PRESENTED ALGEBRAS)
3<->related :<->text932.htm#10534<->related :: Related Functions (FINITELY PRESENTED ALGEBRAS)
5<->MarkGroebner(I) <->text932.htm#10535<->MarkGroebner(I) : AlgFr -&gt;
5<->Reduce(S) <->text932.htm#10536<->Reduce(S) : \lbrace AlgFrElt \rbrace -> [ AlgFrElt ]
5<->Reduce(S) <->text932.htm#10536<->Reduce(S) : [ AlgFrElt ] -&gt; [ AlgFrElt ]
4<->AlgFP_GB (Example H87E4)<->text932.htm#10537<->AlgFP_GB (Example H87E4)
4<->Example-GB :<->text932.htm#10537<->Example-GB :: AlgFP_GB (Example H87E4)
3<->related :<->text932.htm#10534<->related :: Related Functions (FINITELY PRESENTED ALGEBRAS)
3<->ideals :<->text932.htm<->ideals :: Ideals and Gr&ouml;bner Bases (FINITELY PRESENTED ALGEBRAS)
3<->ideal-operation :<->text933.htm<->ideal-operation :: Basic Operations on Ideals (FINITELY PRESENTED ALGEBRAS)
3<->creation-ideal :<->text933.htm#10539<->creation-ideal :: Construction of New Ideals (FINITELY PRESENTED ALGEBRAS)
5<->I + J <->text933.htm#10540<->I + J : AlgFr, AlgFr -&gt; AlgFr
5<->I * J <->text933.htm#10541<->I * J : AlgFr, AlgFr -&gt; AlgFr
5<->F / J <->text933.htm#10542<->F / J : AlgFr, AlgFr -&gt; AlgFrRes
5<->Generic(I) <->text933.htm#10543<->Generic(I) : AlgFr -&gt; AlgFr
3<->creation-ideal :<->text933.htm#10539<->creation-ideal :: Construction of New Ideals (FINITELY PRESENTED ALGEBRAS)
3<->predicate :<->text933.htm#10544<->predicate :: Ideal Predicates (FINITELY PRESENTED ALGEBRAS)
5<->I eq J <->text933.htm#10545<->I eq J : AlgFr, AlgFr -&gt; BoolElt
5<->I ne J <->text933.htm#10546<->I ne J : AlgFr, AlgFr -&gt; BoolElt
5<->I notsubset J <->text933.htm#10547<->I notsubset J : AlgFr, AlgFr -&gt; BoolElt
5<->I subset J <->text933.htm#10548<->I subset J : AlgFr, AlgFr -&gt; BoolElt
5<->IsZero(I) <->text933.htm#10549<->IsZero(I) : AlgFr -&gt; BoolElt
3<->predicate :<->text933.htm#10544<->predicate :: Ideal Predicates (FINITELY PRESENTED ALGEBRAS)
3<->operation-element :<->text933.htm#10550<->operation-element :: Operations on Elements of Ideals (FINITELY PRESENTED ALGEBRAS)
5<->f in I <->text933.htm#10551<->f in I : AlgFrElt, AlgFr -&gt; BoolElt
5<->NormalForm(f, I) <->text933.htm#10552<->NormalForm(f, I) : AlgFrElt, AlgFr -&gt; AlgFrElt
5<->NormalForm(f, S) <->text933.htm#10553<->NormalForm(f, S) : AlgFrElt, [ AlgFrElt ] -&gt; AlgFrElt
5<->f notin I <->text933.htm#10554<->f notin I : AlgFrElt, AlgFr -&gt; BoolElt
4<->AlgFP_ElementOperations (Example H87E5)<->text933.htm#10555<->AlgFP_ElementOperations (Example H87E5)
4<->Example-ElementOperations :<->text933.htm#10555<->Example-ElementOperations :: AlgFP_ElementOperations (Example H87E5)
3<->operation-element :<->text933.htm#10550<->operation-element :: Operations on Elements of Ideals (FINITELY PRESENTED ALGEBRAS)
3<->ideal-operation :<->text933.htm<->ideal-operation :: Basic Operations on Ideals (FINITELY PRESENTED ALGEBRAS)
3<->change-ring :<->text934.htm<->change-ring :: Changing Coefficient Ring (FINITELY PRESENTED ALGEBRAS)
5<->ChangeRing(I, S) <->text934.htm#10557<->ChangeRing(I, S) : AlgFr, Rng -&gt; AlgFr
3<->change-ring :<->text934.htm<->change-ring :: Changing Coefficient Ring (FINITELY PRESENTED ALGEBRAS)
3<->AlgFP :<->text935.htm<->AlgFP :: Finitely Presented Algebras (FINITELY PRESENTED ALGEBRAS)
3<->AlgFPElt :<->text935.htm<->AlgFPElt :: Finitely Presented Algebras (FINITELY PRESENTED ALGEBRAS)
3<->fp-algebra :<->text935.htm<->fp-algebra :: Finitely Presented Algebras (FINITELY PRESENTED ALGEBRAS)
3<->creation :<->text936.htm<->creation :: Creation of FP-Algebras (FINITELY PRESENTED ALGEBRAS)
5<->quo <->text936.htm#10560<->quo< F | a$_1$, ..., a$_r$ > : AlgFr, AlgFrElt, ..., AlgFrElt -> AlgFrRes, Map
5<->quo< F | J > <->text936.htm#10560<->quo&lt; F | J &gt; : AlgFr, AlgFr -&gt; AlgFP
5<->F / J <->text936.htm#10561<->F / J : AlgFr, AlgFr -&gt; AlgFP
5<->FPAlgebra< K, X | L > <->text936.htm#10562<->FPAlgebra&lt; K, X | L &gt; : Fld, List, List -&gt; AlgFP
4<->AlgFP_Creation (Example H87E6)<->text936.htm#10563<->AlgFP_Creation (Example H87E6)
4<->Example-Creation :<->text936.htm#10563<->Example-Creation :: AlgFP_Creation (Example H87E6)
3<->creation :<->text936.htm<->creation :: Creation of FP-Algebras (FINITELY PRESENTED ALGEBRAS)
3<->operations :<->text937.htm<->operations :: Operations on FP-Algebras (FINITELY PRESENTED ALGEBRAS)
5<->A . i <->text937.htm#10565<->A . i : AlgFP, RngIntElt -&gt; AlgFPElt
5<->CoefficientRing(A) <->text937.htm#10566<->CoefficientRing(A) : AlgFP -&gt; Rng
5<->Rank(A) <->text937.htm#10567<->Rank(A) : AlgFP -&gt; RngIntElt
5<->DivisorIdeal(I) <->text937.htm#10568<->DivisorIdeal(I) : AlgFP -&gt; AlgFr
5<->PreimageIdeal(I) <->text937.htm#10569<->PreimageIdeal(I) : AlgFP -&gt; AlgFr
5<->PreimageRing(A) <->text937.htm#10570<->PreimageRing(A) : AlgFP -&gt; AlgFr
5<->OriginalRing(A) <->text937.htm#10571<->OriginalRing(A) : AlgFP -&gt; Rng
5<->IsCommutative(A) <->text937.htm#10572<->IsCommutative(A) : AlgFP -&gt; BoolElt
5<->I eq J <->text937.htm#10573<->I eq J : AlgFP, AlgFP -&gt; BoolElt
5<->I subset J <->text937.htm#10574<->I subset J : AlgFP, AlgFP -&gt; BoolElt
5<->I + J <->text937.htm#10575<->I + J : AlgFP, AlgFP -&gt; AlgFP
5<->I * J <->text937.htm#10576<->I * J : AlgFP, AlgFP -&gt; AlgFP
5<->IsProper(I) <->text937.htm#10577<->IsProper(I) : AlgFP -&gt; BoolElt
5<->IsZero(I) <->text937.htm#10578<->IsZero(I) : AlgFP -&gt; BoolElt
3<->operations :<->text937.htm<->operations :: Operations on FP-Algebras (FINITELY PRESENTED ALGEBRAS)
3<->finite-dimension-quotient :<->text938.htm<->finite-dimension-quotient :: Finite Dimensional FP- Algebras (FINITELY PRESENTED ALGEBRAS)
5<->Dimension(A) <->text938.htm#10580<->Dimension(A) : AlgFP -&gt; RngIntElt
5<->VectorSpace(A) <->text938.htm#10581<->VectorSpace(A) : AlgFP -&gt; ModTupFld, Map
5<->MatrixAlgebra(A) <->text938.htm#10582<->MatrixAlgebra(A) : AlgFP -&gt; AlgMat, Map
5<->Algebra(A) <->text938.htm#10583<->Algebra(A) : AlgFP -&gt; AlgAss, Map
5<->RepresentationMatrix(f) <->text938.htm#10584<->RepresentationMatrix(f) : AlgFPElt -&gt; AlgMatElt
5<->IsUnit(f) <->text938.htm#10585<->IsUnit(f) : AlgFPElt -&gt; BoolElt
5<->IsNilpotent(f) <->text938.htm#10586<->IsNilpotent(f) : AlgFPElt -&gt; BoolElt, RngIntElt
5<->MinimalPolynomial(f) <->text938.htm#10587<->MinimalPolynomial(f) : AlgFPElt -&gt; RngUPol
4<->AlgFP_FiniteDimensional (Example H87E7)<->text938.htm#10588<->AlgFP_FiniteDimensional (Example H87E7)
4<->Example-FiniteDimensional :<->text938.htm#10588<->Example-FiniteDimensional :: AlgFP_FiniteDimensional (Example H87E7)
3<->finite-dimension-quotient :<->text938.htm<->finite-dimension-quotient :: Finite Dimensional FP- Algebras (FINITELY PRESENTED ALGEBRAS)
3<->vector-enumeration :<->text939.htm<->vector-enumeration :: Vector Enumeration (FINITELY PRESENTED ALGEBRAS)
3<->finitely-presented-module :<->text939.htm#10590<->finitely-presented-module :: Finitely Presented Modules (FINITELY PRESENTED ALGEBRAS)
3<->S-algebras (FINITELY PRESENTED ALGEBRAS)<->text939.htm#10591<->S-algebras (FINITELY PRESENTED ALGEBRAS)
3<->finitely-presented-algebra :<->text939.htm#10592<->finitely-presented-algebra :: Finitely Presented Algebras (FINITELY PRESENTED ALGEBRAS)
3<->vector-enumeration :<->text939.htm#10593<->vector-enumeration :: Vector Enumeration (FINITELY PRESENTED ALGEBRAS)
4<->AlgFP_Abstract (Example H87E8)<->text939.htm#10594<->AlgFP_Abstract (Example H87E8)
4<->Example-Abstract :<->text939.htm#10594<->Example-Abstract :: AlgFP_Abstract (Example H87E8)
3<->vector-enumeration :<->text939.htm#10593<->vector-enumeration :: Vector Enumeration (FINITELY PRESENTED ALGEBRAS)
3<->isomorphism :<->text939.htm#10595<->isomorphism :: The Isomorphism (FINITELY PRESENTED ALGEBRAS)
3<->algorithm :<->text939.htm#10596<->algorithm :: Sketch of the Algorithm (FINITELY PRESENTED ALGEBRAS)
3<->weight :<->text939.htm#10597<->weight :: Weights (FINITELY PRESENTED ALGEBRAS)
3<->Setup Functions (FINITELY PRESENTED ALGEBRAS)<->text939.htm#10598<->Setup Functions (FINITELY PRESENTED ALGEBRAS)
5<->FreeAlgebra(R, G) <->text939.htm#10599<->FreeAlgebra(R, G) : Rng, GrpFP -> AlgFPOld
5<->FreeAlgebra(R, M) <->text939.htm#10599<->FreeAlgebra(R, M) : Rng, MonFP -&gt; AlgFPOld
3<->Setup Functions (FINITELY PRESENTED ALGEBRAS)<->text939.htm#10598<->Setup Functions (FINITELY PRESENTED ALGEBRAS)
3<->QuotientModule :<->text939.htm#10600<->QuotientModule :: The Quotient Module Function (FINITELY PRESENTED ALGEBRAS)
5<->QuotientModule(A, S) <->text939.htm#10601<->QuotientModule(A, S) : AlgFPOld, AlgFPOld -&gt; [AlgMatElt], [ModTupFldElt], [AlgFPEltOld]
3<->QuotientModule :<->text939.htm#10600<->QuotientModule :: The Quotient Module Function (FINITELY PRESENTED ALGEBRAS)
3<->presentation :<->text939.htm#10602<->presentation :: Structuring Presentations (FINITELY PRESENTED ALGEBRAS)
3<->parameter :<->text939.htm#10603<->parameter :: Options and Controls (FINITELY PRESENTED ALGEBRAS)
3<->weight :<->text939.htm#10604<->weight :: Weights (FINITELY PRESENTED ALGEBRAS)
5<->QuotientModule(A, S) <->text939.htm#10605<->QuotientModule(A, S) : AlgFP, AlgFP -&gt; AlgFP
3<->weight :<->text939.htm#10604<->weight :: Weights (FINITELY PRESENTED ALGEBRAS)
3<->limit :<->text939.htm#10606<->limit :: Limits (FINITELY PRESENTED ALGEBRAS)
5<->QuotientModule(A, S) <->text939.htm#10607<->QuotientModule(A, S) : AlgFP, AlgFP -&gt; AlgFP
3<->limit :<->text939.htm#10606<->limit :: Limits (FINITELY PRESENTED ALGEBRAS)
3<->logging :<->text939.htm#10608<->logging :: Logging (FINITELY PRESENTED ALGEBRAS)
5<->QuotientModule(A, S) <->text939.htm#10609<->QuotientModule(A, S) : AlgFP, AlgFP -&gt; AlgFP
3<->logging :<->text939.htm#10608<->logging :: Logging (FINITELY PRESENTED ALGEBRAS)
3<->miscellaneous :<->text939.htm#10610<->miscellaneous :: Miscellaneous (FINITELY PRESENTED ALGEBRAS)
5<->QuotientModule(A, S) <->text939.htm#10611<->QuotientModule(A, S) : AlgFP, AlgFP -&gt; AlgFP
4<->AlgFP_PermutationActionD8 (Example H87E9)<->text939.htm#10612<->AlgFP_PermutationActionD8 (Example H87E9)
4<->Example-PermutationActionD8 :<->text939.htm#10612<->Example-PermutationActionD8 :: AlgFP_PermutationActionD8 (Example H87E9)
4<->AlgFP_Quotient (Example H87E10)<->text939.htm#10613<->AlgFP_Quotient (Example H87E10)
4<->Example-Quotient :<->text939.htm#10613<->Example-Quotient :: AlgFP_Quotient (Example H87E10)
3<->miscellaneous :<->text939.htm#10610<->miscellaneous :: Miscellaneous (FINITELY PRESENTED ALGEBRAS)
3<->vector-enumeration :<->text939.htm<->vector-enumeration :: Vector Enumeration (FINITELY PRESENTED ALGEBRAS)
3<->finitely-presented :<->text925.htm<->finitely-presented :: FINITELY PRESENTED ALGEBRAS
3<->matrix :<->text942.htm<->matrix :: MATRIX ALGEBRAS
3<->introduction :<->text943.htm<->introduction :: Introduction (MATRIX ALGEBRAS)
3<->creation :<->text944.htm<->creation :: Construction of Matrix Algebras and their Elements (MATRIX ALGEBRAS)
3<->complete-magma :<->text944.htm#10619<->complete-magma :: Construction of the Complete Matrix Algebra (MATRIX ALGEBRAS)
5<->MatrixRing :: MatrixAlgebra(S, n) <->text944.htm#10620<->MatrixRing :: MatrixAlgebra(S, n) : Rng, RngIntElt -&gt; AlgMat
5<->MatrixAlgebra(S, n) <->text944.htm#10620<->MatrixAlgebra(S, n) : Rng, RngIntElt -&gt; AlgMat
3<->complete-magma :<->text944.htm#10619<->complete-magma :: Construction of the Complete Matrix Algebra (MATRIX ALGEBRAS)
3<->element :<->text944.htm#10621<->element :: Construction of a Matrix (MATRIX ALGEBRAS)
5<->elt< R | L > <->text944.htm#10622<->elt&lt; R | L &gt; : AlgMat, RngElt -&gt; AlgMatElt
5<->R ! Q <->text944.htm#10623<->R ! Q : AlgMat, [ RngElt ] -&gt; AlgMatElt
5<->CambridgeMatrix(t, K, n, Q) <->text944.htm#10624<->CambridgeMatrix(t, K, n, Q) : RngIntElt, FldFin, RngIntElt, [ ] -&gt; AlgMatElt
5<->CompanionMatrix(p) <->text944.htm#10625<->CompanionMatrix(p) : RngUPolElt -&gt; AlgMatElt
5<->DiagonalMatrix(R, Q) <->text944.htm#10626<->DiagonalMatrix(R, Q) : AlgMat, [ RngElt ] -&gt; AlgMatElt
5<->MatrixUnit(R, i, j) <->text944.htm#10627<->MatrixUnit(R, i, j) : AlgMat, RngIntElt, RngIntElt -&gt; AlgMatElt
5<->Random(R) <->text944.htm#10628<->Random(R) : AlgMat -&gt; AlgMatElt
5<->ScalarMatrix(R, t) <->text944.htm#10629<->ScalarMatrix(R, t) : AlgMat, RngElt -&gt; AlgMatElt
5<->R ! 1 <->text944.htm#10630<->R ! 1 : AlgMat, RngIntElt -&gt; AlgMatElt
5<->R ! 0 <->text944.htm#10631<->R ! 0 : AlgMat, RngIntElt -&gt; AlgMatElt
5<->R ! t <->text944.htm#10632<->R ! t : AlgMat, RngIntElt -&gt; AlgMatElt
3<->element :<->text944.htm#10621<->element :: Construction of a Matrix (MATRIX ALGEBRAS)
3<->general-magma :<->text944.htm#10633<->general-magma :: Constructing a General Matrix Algebra (MATRIX ALGEBRAS)
5<->MatrixRing :: MatrixAlgebra<S, n | L> <->text944.htm#10634<->MatrixRing :: MatrixAlgebra&lt;S, n | L&gt; : Rng, RngIntElt, List -&gt; AlgMat
5<->MatrixAlgebra<S, n | L> <->text944.htm#10634<->MatrixAlgebra&lt;S, n | L&gt; : Rng, RngIntElt, List -&gt; AlgMat
4<->AlgMat_Creation (Example H88E1)<->text944.htm#10635<->AlgMat_Creation (Example H88E1)
4<->Example-Creation :<->text944.htm#10635<->Example-Creation :: AlgMat_Creation (Example H88E1)
4<->AlgMat_Cambridge (Example H88E2)<->text944.htm#10636<->AlgMat_Cambridge (Example H88E2)
4<->Example-Cambridge :<->text944.htm#10636<->Example-Cambridge :: AlgMat_Cambridge (Example H88E2)
5<->Algebra(R) <->text944.htm#10637<->Algebra(R) : AlgMatV -&gt; AlgGen, Map
3<->general-magma :<->text944.htm#10633<->general-magma :: Constructing a General Matrix Algebra (MATRIX ALGEBRAS)
3<->invariant :<->text944.htm#10638<->invariant :: The Invariants of a Matrix Algebra (MATRIX ALGEBRAS)
5<->R . i <->text944.htm#10639<->R . i : AlgMat, RngIntElt -&gt; AlgMatElt
5<->CoefficientRing :: BaseRing(R) <->text944.htm#10640<->CoefficientRing :: BaseRing(R) : AlgMatV -&gt; Rng
5<->BaseRing(R) <->text944.htm#10640<->BaseRing(R) : AlgMatV -&gt; Rng
5<->Degree(R) <->text944.htm#10641<->Degree(R) : AlgMatV -&gt; RngIntElt
5<->Generators(R) <->text944.htm#10642<->Generators(R) : AlgMat -&gt; { AlgMatElt }
5<->Generic(R) <->text944.htm#10643<->Generic(R) : AlgMat -&gt; AlgMat
5<->BaseModule(R) <->text944.htm#10644<->BaseModule(R) : AlgMatV -&gt; ModTup
5<->Ngens :: NumberOfGenerators(R) <->text944.htm#10645<->Ngens :: NumberOfGenerators(R) : AlgMat -&gt; { AlgMatElt }
5<->NumberOfGenerators(R) <->text944.htm#10645<->NumberOfGenerators(R) : AlgMat -&gt; { AlgMatElt }
5<->Parent(a) <->text944.htm#10646<->Parent(a) : AlgMatElt -&gt; AlgMat
4<->AlgMat_Invariants (Example H88E3)<->text944.htm#10647<->AlgMat_Invariants (Example H88E3)
4<->Example-Invariants :<->text944.htm#10647<->Example-Invariants :: AlgMat_Invariants (Example H88E3)
3<->invariant :<->text944.htm#10638<->invariant :: The Invariants of a Matrix Algebra (MATRIX ALGEBRAS)
3<->creation :<->text944.htm<->creation :: Construction of Matrix Algebras and their Elements (MATRIX ALGEBRAS)
3<->subring-ideal-quotient :<->text945.htm<->subring-ideal-quotient :: Construction of Subalgebras,  Ideals and Quotient Rings (MATRIX ALGEBRAS)
5<->sub<R | L> <->text945.htm#10649<->sub&lt;R | L&gt; : AlgMat, List -&gt; AlgMat, Hom(Alg)
5<->ideal<R | L> <->text945.htm#10650<->ideal&lt;R | L&gt; : AlgMat, List -&gt; AlgMat
5<->lideal<R | L> <->text945.htm#10651<->lideal&lt;R | L&gt; : AlgMat, List -&gt; AlgMat
5<->rideal<R | L> <->text945.htm#10652<->rideal&lt;R | L&gt; : AlgMat, List -&gt; AlgMat
4<->AlgMat_SubAlgebra (Example H88E4)<->text945.htm#10653<->AlgMat_SubAlgebra (Example H88E4)
4<->Example-SubAlgebra :<->text945.htm#10653<->Example-SubAlgebra :: AlgMat_SubAlgebra (Example H88E4)
3<->subring-ideal-quotient :<->text945.htm<->subring-ideal-quotient :: Construction of Subalgebras,  Ideals and Quotient Rings (MATRIX ALGEBRAS)
3<->extension :<->text946.htm<->extension :: The Construction of Extensions and their Elements (MATRIX ALGEBRAS)
3<->creation :<->text946.htm#10655<->creation :: The Construction of Direct Sums and Tensor Products (MATRIX ALGEBRAS)
5<->DirectSum(R, T) <->text946.htm#10656<->DirectSum(R, T) : AlgMat, AlgMat -&gt; AlgMat
5<->TensorProduct(A, B) <->text946.htm#10657<->TensorProduct(A, B) : AlgMat, AlgMat -&gt; AlgMat
4<->AlgMat_Products (Example H88E5)<->text946.htm#10658<->AlgMat_Products (Example H88E5)
4<->Example-Products :<->text946.htm#10658<->Example-Products :: AlgMat_Products (Example H88E5)
3<->creation :<->text946.htm#10655<->creation :: The Construction of Direct Sums and Tensor Products (MATRIX ALGEBRAS)
3<->element :<->text946.htm#10659<->element :: Construction of Direct Sums and  Tensor Products of Elements (MATRIX ALGEBRAS)
5<->DirectSum(a, b) <->text946.htm#10660<->DirectSum(a, b) : AlgMatElt, AlgMatElt -&gt; AlgMatElt
5<->ExteriorSquare(a) <->text946.htm#10661<->ExteriorSquare(a) : AlgMatElt -&gt; AlgMatElt
5<->ExteriorPower(a,r) <->text946.htm#10662<->ExteriorPower(a,r) : AlgMat, RngIntElt -&gt; AlgMatElt
5<->SymmetricSquare(a) <->text946.htm#10663<->SymmetricSquare(a) : AlgMatElt -&gt; AlgMatElt
5<->SymmetricPower(a,r) <->text946.htm#10664<->SymmetricPower(a,r) : AlgMatElt, RngIntElt -&gt; AlgMatElt
5<->TensorProduct(a, b) <->text946.htm#10665<->TensorProduct(a, b) : AlgMatElt, AlgMatElt -&gt; AlgMatElt
3<->element :<->text946.htm#10659<->element :: Construction of Direct Sums and  Tensor Products of Elements (MATRIX ALGEBRAS)
3<->extension :<->text946.htm<->extension :: The Construction of Extensions and their Elements (MATRIX ALGEBRAS)
3<->operation :<->text947.htm<->operation :: Operations on Matrix Algebras (MATRIX ALGEBRAS)
5<->Centre(A) <->text947.htm#10667<->Centre(A) : AlgMat -&gt; AlgMat
5<->Centraliser :: Centralizer(A, S) <->text947.htm#10668<->Centraliser :: Centralizer(A, S) : AlgMat, AlgMat -&gt; AlgMat
5<->Centralizer(A, S) <->text947.htm#10668<->Centralizer(A, S) : AlgMat, AlgMat -&gt; AlgMat
3<->operation :<->text947.htm<->operation :: Operations on Matrix Algebras (MATRIX ALGEBRAS)
3<->change-ring :<->text948.htm<->change-ring :: Changing Rings (MATRIX ALGEBRAS)
5<->ChangeRing(A, S) <->text948.htm#10670<->ChangeRing(A, S) : AlgMatV, Rng -&gt; AlgMat, Map
5<->ChangeRing(A, S, f) <->text948.htm#10671<->ChangeRing(A, S, f) : AlgMatV, Rng, Map -&gt; AlgMat, Map
5<->hom< A -> B | f > <->text948.htm#10672<->hom&lt; A -&gt; B | f &gt; : AlgMat, AlgMat, Map -&gt; Map
3<->change-ring :<->text948.htm<->change-ring :: Changing Rings (MATRIX ALGEBRAS)
3<->element :<->text949.htm<->element :: Elementary Operations on Elements (MATRIX ALGEBRAS)
3<->arithmetic :<->text949.htm#10674<->arithmetic :: Arithmetic (MATRIX ALGEBRAS)
5<->a + b <->text949.htm#10675<->a + b : AlgMatElt, AlgMatElt -&gt; AlgMatElt
5<->t + a <->text949.htm#10676<->t + a : AlgMatElt, RngElt -> AlgMatElt
5<->a + t <->text949.htm#10676<->a + t : AlgMatElt, RngElt -&gt; AlgMatElt
5<->- a <->text949.htm#10677<->- a : AlgMatElt -&gt; AlgMatElt
5<->a - b <->text949.htm#10678<->a - b : AlgMatElt, AlgMatElt -&gt; AlgMatElt
5<->t - a <->text949.htm#10679<->t - a : AlgMatElt, RngElt -> AlgMatElt
5<->a - t <->text949.htm#10679<->a - t : AlgMatElt, RngElt -&gt; AlgMatElt
5<->a * b <->text949.htm#10680<->a * b : AlgMatElt, AlgMatElt -&gt; AlgMatElt
5<->a * b <->text949.htm#10681<->a * b : AlgMatElt, Mtrx -&gt; Mtrx
5<->a * b <->text949.htm#10682<->a * b : Mtrx, AlgMatElt -&gt; Mtrx
5<->a * t <->text949.htm#10683<->a * t : AlgMatElt, RngElt -> AlgMatElt
5<->t * a <->text949.htm#10683<->t * a : RngElt, AlgMatElt -&gt; AlgMatElt
5<->u * a <->text949.htm#10684<->u * a : ModTupRngElt, AlgMatElt -&gt; ModTupElt
5<->a ^ n <->text949.htm#10685<->a ^ n : AlgMatElt, RngIntElt -&gt; AlgMatElt
5<->Ncols :: NumberOfColumns(a) <->text949.htm#10686<->Ncols :: NumberOfColumns(a) : AlgMatElt -&gt; RngIntElt
5<->NumberOfColumns(a) <->text949.htm#10686<->NumberOfColumns(a) : AlgMatElt -&gt; RngIntElt
5<->Nrows :: NumberOfRows(a) <->text949.htm#10687<->Nrows :: NumberOfRows(a) : AlgMatElt -&gt; RngIntElt
5<->NumberOfRows(a) <->text949.htm#10687<->NumberOfRows(a) : AlgMatElt -&gt; RngIntElt
3<->arithmetic :<->text949.htm#10674<->arithmetic :: Arithmetic (MATRIX ALGEBRAS)
3<->Boolean :<->text949.htm#10688<->Boolean :: Predicates (MATRIX ALGEBRAS)
3<->comparison :<->text949.htm#10689<->comparison :: Comparison (MATRIX ALGEBRAS)
5<->a eq b <->text949.htm#10690<->a eq b : AlgMatElt, AlgMatElt -&gt; BoolElt
5<->a ne b <->text949.htm#10691<->a ne b : AlgMatElt, AlgMatElt -&gt; BoolElt
3<->comparison :<->text949.htm#10689<->comparison :: Comparison (MATRIX ALGEBRAS)
3<->other :<->text949.htm#10692<->other :: Properties of Elements (MATRIX ALGEBRAS)
5<->IsDiagonal(a) <->text949.htm#10693<->IsDiagonal(a) : AlgMatElt -&gt; BoolElt
5<->IsMinusOne(a) <->text949.htm#10694<->IsMinusOne(a) : AlgMatElt -&gt; BoolElt
5<->IsOne(a) <->text949.htm#10695<->IsOne(a) : AlgMatElt -&gt; BoolElt
5<->IsScalar(a) <->text949.htm#10696<->IsScalar(a) : AlgMatElt -&gt; BoolElt
5<->IsSymmetric(a) <->text949.htm#10697<->IsSymmetric(a) : AlgMatElt -&gt; BoolElt
5<->IsUnit(a) <->text949.htm#10698<->IsUnit(a) : AlgMatElt -&gt; BoolElt
5<->IsZero(a) <->text949.htm#10699<->IsZero(a) : AlgMatElt -&gt; BoolElt
5<->IsNilpotent(a) <->text949.htm#10700<->IsNilpotent(a) : AlgMatElt -&gt; BoolElt, RngIntElt
5<->IsUnipotent(a) <->text949.htm#10701<->IsUnipotent(a) : AlgMatElt -&gt; BoolElt, RngIntElt
5<->Rank(a) <->text949.htm#10702<->Rank(a) : AlgMatElt -&gt; RngIntElt
5<->Determinant(A) <->text949.htm#10703<->Determinant(A) : AlgMatElt -&gt; RngElt
5<->Trace(a) <->text949.htm#10704<->Trace(a) : AlgMatElt -&gt; RngElt
5<->Transpose(a) <->text949.htm#10705<->Transpose(a) : AlgMatElt -&gt; AlgMatElt
5<->Order(a) <->text949.htm#10706<->Order(a) : AlgMatElt -&gt; RngIntElt
5<->FactoredOrder(a) <->text949.htm#10707<->FactoredOrder(a) : AlgMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->ProjectiveOrder(a) <->text949.htm#10708<->ProjectiveOrder(a) : AlgMatElt -&gt; RngIntElt
5<->FactoredProjectiveOrder(a) <->text949.htm#10709<->FactoredProjectiveOrder(a) : AlgMatElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->CharacteristicPolynomial(a: parameters) <->text949.htm#10710<->CharacteristicPolynomial(a: parameters) : AlgMatElt -&gt; RngUPolElt
5<->MinimalPolynomial(a) <->text949.htm#10711<->MinimalPolynomial(a) : AlgMatElt -&gt; RngUPolElt
5<->HessenbergForm(a) <->text949.htm#10712<->HessenbergForm(a) : AlgMatElt -&gt; AlgMatElt
5<->Adjoint(a) <->text949.htm#10713<->Adjoint(a) : AlgMatElt -&gt; AlgMatElt
5<->Eigenvalues(a) <->text949.htm#10714<->Eigenvalues(a) : AlgMatElt -&gt; { &lt;FldElt, RngIntElt&gt; }
5<->Eigenspace(a, e) <->text949.htm#10715<->Eigenspace(a, e) : AlgMatElt, FldElt -&gt; ModTup
3<->other :<->text949.htm#10692<->other :: Properties of Elements (MATRIX ALGEBRAS)
3<->Boolean :<->text949.htm#10688<->Boolean :: Predicates (MATRIX ALGEBRAS)
3<->element :<->text949.htm<->element :: Elementary Operations on Elements (MATRIX ALGEBRAS)
3<->homomorphism-element :<->text950.htm<->homomorphism-element :: Elements of M<sub>n</sub> as Homomorphisms (MATRIX ALGEBRAS)
5<->RowSpace :: Image(a) <->text950.htm#10717<->RowSpace :: Image(a) : AlgMatElt -&gt; ModTup
5<->Image(a) <->text950.htm#10717<->Image(a) : AlgMatElt -&gt; ModTup
5<->NullSpace :: Kernel(a) <->text950.htm#10718<->NullSpace :: Kernel(a) : AlgMatElt -&gt; ModTup
5<->Kernel(a) <->text950.htm#10718<->Kernel(a) : AlgMatElt -&gt; ModTup
5<->NullspaceOfTranspose :: RowNullSpace(a) <->text950.htm#10719<->NullspaceOfTranspose :: RowNullSpace(a) : AlgMatElt -&gt; ModTup
5<->RowNullSpace(a) <->text950.htm#10719<->RowNullSpace(a) : AlgMatElt -&gt; ModTup
3<->homomorphism-element :<->text950.htm<->homomorphism-element :: Elements of M<sub>n</sub> as Homomorphisms (MATRIX ALGEBRAS)
3<->subalgebra-ideal :<->text951.htm<->subalgebra-ideal :: Elementary Operations on Subalgebras and Ideals (MATRIX ALGEBRAS)
3<->bases :<->text951.htm#10721<->bases :: Bases (MATRIX ALGEBRAS)
5<->Dimension(R) <->text951.htm#10722<->Dimension(R) : AlgMatV -&gt; RngIntElt
5<->Basis(R) <->text951.htm#10723<->Basis(R) : AlgMatV -&gt; [ AlgMatElt ]
5<->BasisElement(R, i) <->text951.htm#10724<->BasisElement(R, i) : AlgMatV, RngIntElt -&gt; AlgMatElt
5<->Coordinates(R, X) <->text951.htm#10725<->Coordinates(R, X) : AlgMatV, AlgMatVElt -&gt; [ RngElt ]
3<->bases :<->text951.htm#10721<->bases :: Bases (MATRIX ALGEBRAS)
3<->intersection :<->text951.htm#10726<->intersection :: Intersection of Subalgebras (MATRIX ALGEBRAS)
5<->R meet T <->text951.htm#10727<->R meet T : AlgMat, AlgMat -&gt; AlgMat
3<->intersection :<->text951.htm#10726<->intersection :: Intersection of Subalgebras (MATRIX ALGEBRAS)
3<->Boolean :<->text951.htm#10728<->Boolean :: Membership and Equality (MATRIX ALGEBRAS)
5<->subset :: x in R <->text951.htm#10729<->subset :: x in R : AlgMatElt, AlgMat -&gt; BoolElt
5<->T subset R : AlgMat, AlgMat -> BoolElt :: x in R <->text951.htm#10729<->T subset R : AlgMat, AlgMat -> BoolElt :: x in R : AlgMatElt, AlgMat -&gt; BoolElt
5<->x in R <->text951.htm#10729<->x in R : AlgMatElt, AlgMat -&gt; BoolElt
5<->notsubset :: x notin R <->text951.htm#10730<->notsubset :: x notin R : AlgMatElt, AlgMat -&gt; BoolElt
5<->T notsubset R : AlgMat, AlgMat -> BoolElt :: x notin R <->text951.htm#10730<->T notsubset R : AlgMat, AlgMat -> BoolElt :: x notin R : AlgMatElt, AlgMat -&gt; BoolElt
5<->x notin R <->text951.htm#10730<->x notin R : AlgMatElt, AlgMat -&gt; BoolElt
5<->R eq T <->text951.htm#10731<->R eq T : AlgMat, AlgMat -&gt; BoolElt
5<->R ne T <->text951.htm#10732<->R ne T : AlgMat, AlgMat -&gt; BoolElt
3<->Boolean :<->text951.htm#10728<->Boolean :: Membership and Equality (MATRIX ALGEBRAS)
3<->subalgebra-ideal :<->text951.htm<->subalgebra-ideal :: Elementary Operations on Subalgebras and Ideals (MATRIX ALGEBRAS)
3<->operation-element :<->text952.htm<->operation-element :: Accessing and Modifying a  Matrix (MATRIX ALGEBRAS)
3<->index :<->text952.htm#10734<->index :: Indexing (MATRIX ALGEBRAS)
5<->a[i] <->text952.htm#10735<->a[i] : AlgMatElt, RngIntElt -&gt; ModTupElt
5<->[] :: a[i] := u <->text952.htm#10736<->[] :: a[i] := u : AlgMatElt, RngIntElt, RngElt -&gt; AlgMatElt
5<->a[i, j] <->text952.htm#10737<->a[i, j] : AlgMatElt, RngIntElt, RngIntElt -&gt; RngElt
5<->[] :: a[i, j] := t <->text952.htm#10738<->[] :: a[i, j] := t : AlgMatElt, RngIntElt, RngIntElt, RngElt -&gt; AlgMatElt
5<->Eltseq :: ElementToSequence(a) <->text952.htm#10739<->Eltseq :: ElementToSequence(a) : AlgMatElt -&gt;  [ RngElt ]
5<->ElementToSequence(a) <->text952.htm#10739<->ElementToSequence(a) : AlgMatElt -&gt;  [ RngElt ]
3<->index :<->text952.htm#10734<->index :: Indexing (MATRIX ALGEBRAS)
3<->submatrix :<->text952.htm#10740<->submatrix :: Extracting and Inserting Blocks (MATRIX ALGEBRAS)
5<->ExtractBlock :: Submatrix(a, i, j, p, q) <->text952.htm#10741<->ExtractBlock :: Submatrix(a, i, j, p, q) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->Submatrix(a, i, j, p, q) <->text952.htm#10741<->Submatrix(a, i, j, p, q) : Mtrx, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; Mtrx
5<->InsertBlock(~a, b, i, j) <->text952.htm#10742<->InsertBlock(~a, b, i, j) : Mtrx, Mtrx, RngIntElt, RngIntElt -&gt; Mtrx
3<->submatrix :<->text952.htm#10740<->submatrix :: Extracting and Inserting Blocks (MATRIX ALGEBRAS)
3<->submatrix :<->text952.htm#10743<->submatrix :: Joining Matrices (MATRIX ALGEBRAS)
5<->HorizontalJoin(X, Y) <->text952.htm#10744<->HorizontalJoin(X, Y) : Mtrx, Mtrx -&gt; Mtrx
5<->HorizontalJoin(Q) <->text952.htm#10745<->HorizontalJoin(Q) : [ ModMatRngElt ] -&gt; ModMatRngElt
5<->VerticalJoin(X, Y) <->text952.htm#10746<->VerticalJoin(X, Y) : ModMatRngElt, ModMatRngElt -&gt; ModMatRngElt
5<->VerticalJoin(Q) <->text952.htm#10747<->VerticalJoin(Q) : [ ModMatRngElt ] -&gt; ModMatRngElt
5<->DiagonalJoin(X, Y) <->text952.htm#10748<->DiagonalJoin(X, Y) : ModMatRngElt, ModMatRngElt -&gt; ModMatRngElt
5<->DiagonalJoin(Q) <->text952.htm#10749<->DiagonalJoin(Q) : [ ModMatRngElt ] -&gt; ModMatRngElt
3<->submatrix :<->text952.htm#10743<->submatrix :: Joining Matrices (MATRIX ALGEBRAS)
3<->row-column :<->text952.htm#10750<->row-column :: Row and Column Operations (MATRIX ALGEBRAS)
5<->SwapRows(~a, i, j) <->text952.htm#10751<->SwapRows(~a, i, j) : AlgMatElt, RngIntElt, RngIntElt -&gt;
5<->MultiplyRow(~a, u, j) <->text952.htm#10752<->MultiplyRow(~a, u, j) : AlgMatElt, RngElt, RngIntElt -&gt;
5<->AddRow(~a, u, i, j) <->text952.htm#10753<->AddRow(~a, u, i, j) : AlgMatElt, RngElt, RngIntElt, RngIntElt -&gt;
5<->SwapColumns(~a, i, j) <->text952.htm#10754<->SwapColumns(~a, i, j) : AlgMatElt, RngIntElt, RngIntElt -&gt;
5<->MultiplyColumn(~a, u, i) <->text952.htm#10755<->MultiplyColumn(~a, u, i) : AlgMatElt, RngElt, RngIntElt -&gt;
5<->AddColumn(~a, u, i, j) <->text952.htm#10756<->AddColumn(~a, u, i, j) : AlgMatElt, RngElt, RngIntElt, RngIntElt -&gt;
3<->row-column :<->text952.htm#10750<->row-column :: Row and Column Operations (MATRIX ALGEBRAS)
3<->operation-element :<->text952.htm<->operation-element :: Accessing and Modifying a  Matrix (MATRIX ALGEBRAS)
3<->canonical-form :<->text953.htm<->canonical-form :: Canonical Forms (MATRIX ALGEBRAS)
3<->Euclidean-domain :<->text953.htm#10758<->Euclidean-domain :: Canonical Forms for Matrices over Euclidean Domains (MATRIX ALGEBRAS)
5<->EchelonForm(a) <->text953.htm#10759<->EchelonForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt
5<->ElementaryDivisors(a) <->text953.htm#10760<->ElementaryDivisors(a) : AlgMatElt -&gt; [RngElt]
5<->HermiteForm(X) <->text953.htm#10761<->HermiteForm(X) : AlgMatElt -&gt; AlgMatElt, AlgMatElt
5<->SmithForm(a) <->text953.htm#10762<->SmithForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, AlgMatElt
4<->AlgMat_EchelonForm (Example H88E6)<->text953.htm#10763<->AlgMat_EchelonForm (Example H88E6)
4<->Example-EchelonForm :<->text953.htm#10763<->Example-EchelonForm :: AlgMat_EchelonForm (Example H88E6)
3<->Euclidean-domain :<->text953.htm#10758<->Euclidean-domain :: Canonical Forms for Matrices over Euclidean Domains (MATRIX ALGEBRAS)
3<->field :<->text953.htm#10764<->field :: Canonical Forms for Matrices over a Field (MATRIX ALGEBRAS)
5<->PrimaryRationalForm(a) <->text953.htm#10765<->PrimaryRationalForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ &lt;RngUPolElt, RngIntElt ]
5<->JordanForm(a) <->text953.htm#10766<->JordanForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ &lt;RngUPolElt, RngIntElt ]
5<->RationalForm(a) <->text953.htm#10767<->RationalForm(a) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, [ RngUPolElt ]
5<->PrimaryInvariantFactors(a) <->text953.htm#10768<->PrimaryInvariantFactors(a) : AlgMatElt -&gt; [ &lt;RngUPolElt, RngIntElt ]
5<->InvariantFactors(a) <->text953.htm#10769<->InvariantFactors(a) : AlgMatElt -&gt; [ AlgPolElt ]
5<->IsSimilar(a, b) <->text953.htm#10770<->IsSimilar(a, b) : AlgMatElt, AlgMatElt -&gt; BoolElt, AlgMatElt
4<->AlgMat_ElementaryDivisors (Example H88E7)<->text953.htm#10771<->AlgMat_ElementaryDivisors (Example H88E7)
4<->Example-ElementaryDivisors :<->text953.htm#10771<->Example-ElementaryDivisors :: AlgMat_ElementaryDivisors (Example H88E7)
4<->AlgMat_CanonicalForms (Example H88E8)<->text953.htm#10772<->AlgMat_CanonicalForms (Example H88E8)
4<->Example-CanonicalForms :<->text953.htm#10772<->Example-CanonicalForms :: AlgMat_CanonicalForms (Example H88E8)
3<->field :<->text953.htm#10764<->field :: Canonical Forms for Matrices over a Field (MATRIX ALGEBRAS)
3<->canonical-form :<->text953.htm<->canonical-form :: Canonical Forms (MATRIX ALGEBRAS)
3<->diag :<->text954.htm<->diag :: Diagonalising Commutative  Algebras over a Field (MATRIX ALGEBRAS)
5<->CommonEigenspaces(Q) <->text954.htm#10774<->CommonEigenspaces(Q) : [AlgMatElt] -&gt; [**], [[FldElt]]
5<->CommonEigenspaces(A) <->text954.htm#10775<->CommonEigenspaces(A) : AlgMat -&gt; [**], [[FldElt]]
5<->Diagonalization :: Diagonalisation(Q) <->text954.htm#10776<->Diagonalization :: Diagonalisation(Q) : [AlgMatElt] -&gt; [AlgMatElt], AlgMatElt
5<->Diagonalisation(Q) <->text954.htm#10776<->Diagonalisation(Q) : [AlgMatElt] -&gt; [AlgMatElt], AlgMatElt
5<->Diagonalization :: Diagonalisation(A) <->text954.htm#10777<->Diagonalization :: Diagonalisation(A) : AlgMat -&gt; AlgMat, AlgMatElt
5<->Diagonalisation(A) <->text954.htm#10777<->Diagonalisation(A) : AlgMat -&gt; AlgMat, AlgMatElt
4<->AlgMat_Diagonalization (Example H88E9)<->text954.htm#10778<->AlgMat_Diagonalization (Example H88E9)
4<->Example-Diagonalization :<->text954.htm#10778<->Example-Diagonalization :: AlgMat_Diagonalization (Example H88E9)
3<->diag :<->text954.htm<->diag :: Diagonalising Commutative  Algebras over a Field (MATRIX ALGEBRAS)
3<->solution-equation :<->text955.htm<->solution-equation :: Solutions of Systems of Linear Equations (MATRIX ALGEBRAS)
5<->IsConsistent(A, w) <->text955.htm#10780<->IsConsistent(A, w) : ModMatRngElt, ModTupRng -&gt; BoolElt, ModTupRngElt, ModTupRng
5<->IsConsistent(A, W) <->text955.htm#10781<->IsConsistent(A, W) : ModMatRngElt, [ ModTupRng ] -&gt; BoolElt, [ ModTupRngElt ], ModTupRng
5<->Solution(A, w) <->text955.htm#10782<->Solution(A, w) : ModMatRngElt, ModTupRng -&gt; ModTupRngElt, ModTupRng
5<->Solution(A, W) <->text955.htm#10783<->Solution(A, W) : ModMatRngElt, [ ModTupRng ] -&gt; [ ModTupRngElt ], ModTupRng
3<->solution-equation :<->text955.htm<->solution-equation :: Solutions of Systems of Linear Equations (MATRIX ALGEBRAS)
3<->presentations :<->text956.htm<->presentations :: Presentations for Matrix Algebras (MATRIX ALGEBRAS)
3<->quotients-idempotents :<->text956.htm#10785<->quotients-idempotents :: Quotients and Idempotents (MATRIX ALGEBRAS)
5<->NaturalFreeAlgebraCover(A) <->text956.htm#10786<->NaturalFreeAlgebraCover(A) : AlgMat -&gt; Map
5<->SimpleQuotientAlgebras(A) <->text956.htm#10787<->SimpleQuotientAlgebras(A) : AlgMat  -&gt; Rec
5<->PrimitiveIdempotentData(A) <->text956.htm#10788<->PrimitiveIdempotentData(A) : AlgMat  -&gt; SeqEnum, Map, SeqEnum
5<->PrimitiveIdempotents(A) <->text956.htm#10789<->PrimitiveIdempotents(A) : AlgMat -&gt; SeqEnum
5<->RanksOfPrimitiveIdempotents(A) <->text956.htm#10790<->RanksOfPrimitiveIdempotents(A) : AlgMat -&gt; SeqEnum
5<->NaturalFreeAlgebraCover(A) <->text956.htm#10791<->NaturalFreeAlgebraCover(A) : AlgMat -&gt; Map
5<->CondensedAlgebra(A) <->text956.htm#10792<->CondensedAlgebra(A) : AlgMat -&gt; AlgMat
4<->AlgMat_PrimitiveIdempotents (Example H88E10)<->text956.htm#10793<->AlgMat_PrimitiveIdempotents (Example H88E10)
4<->Example-PrimitiveIdempotents :<->text956.htm#10793<->Example-PrimitiveIdempotents :: AlgMat_PrimitiveIdempotents (Example H88E10)
3<->quotients-idempotents :<->text956.htm#10785<->quotients-idempotents :: Quotients and Idempotents (MATRIX ALGEBRAS)
3<->generators-presentations :<->text956.htm#10794<->generators-presentations :: Generators and Presentations (MATRIX ALGEBRAS)
5<->SemisimpleGeneratorData(A) <->text956.htm#10795<->SemisimpleGeneratorData(A) : AlgMat -&gt; SeqEnum
5<->AlgebraGenerators(A) <->text956.htm#10796<->AlgebraGenerators(A) : AlgMat -&gt; Rec
5<->AlgebraStructure(A) <->text956.htm#10797<->AlgebraStructure(A) : AlgMat -&gt; Rec
5<->Presentation(A) <->text956.htm#10798<->Presentation(A) : AlgMat -&gt; AlgFr, AlgFr, Map
5<->StandardFormConjugationMatrices(A) <->text956.htm#10799<->StandardFormConjugationMatrices(A) : AlgMat -&gt; Tup
5<->CondensationMatrices(A) <->text956.htm#10800<->CondensationMatrices(A) : AlgMat -&gt; Tup
5<->SequenceOfRadicalGenerators(A) <->text956.htm#10801<->SequenceOfRadicalGenerators(A) : AlgMat -&gt; SeqEnum
5<->CartanMatrix(A) <->text956.htm#10802<->CartanMatrix(A) : AlgMat -&gt; ModMatRngElt
4<->AlgMat_CondensedAlgebra (Example H88E11)<->text956.htm#10803<->AlgMat_CondensedAlgebra (Example H88E11)
4<->Example-CondensedAlgebra :<->text956.htm#10803<->Example-CondensedAlgebra :: AlgMat_CondensedAlgebra (Example H88E11)
3<->generators-presentations :<->text956.htm#10794<->generators-presentations :: Generators and Presentations (MATRIX ALGEBRAS)
3<->words :<->text956.htm#10804<->words :: Solving the Word Problem (MATRIX ALGEBRAS)
5<->WordProblemData(A) <->text956.htm#10805<->WordProblemData(A) : AlgMat -&gt; List
5<->WordProblem(A, x) <->text956.htm#10806<->WordProblem(A, x) : AlgMat, AlgMatElt -&gt; BoolElt, AlgFrElt
4<->AlgMat_Presentation (Example H88E12)<->text956.htm#10807<->AlgMat_Presentation (Example H88E12)
4<->Example-Presentation :<->text956.htm#10807<->Example-Presentation :: AlgMat_Presentation (Example H88E12)
3<->words :<->text956.htm#10804<->words :: Solving the Word Problem (MATRIX ALGEBRAS)
3<->presentations :<->text956.htm<->presentations :: Presentations for Matrix Algebras (MATRIX ALGEBRAS)
3<->matrix :<->text942.htm<->matrix :: MATRIX ALGEBRAS
3<->alg_grp :<->text958.htm<->alg_grp :: GROUP ALGEBRAS
3<->introduction :<->text959.htm<->introduction :: Introduction (GROUP ALGEBRAS)
3<->creation :<->text960.htm<->creation :: Construction of Group Algebras and their Elements (GROUP ALGEBRAS)
3<->complete-magma :<->text960.htm#10812<->complete-magma :: Construction of a Group Algebra (GROUP ALGEBRAS)
5<->GroupAlgebra <->text960.htm#10813<->GroupAlgebra< R, G: \parameters > : Rng, Grp -> AlgGrp
5<->GroupAlgebra( R, G: parameters ) <->text960.htm#10813<->GroupAlgebra( R, G: parameters ) : Rng, Grp -&gt; AlgGrp
4<->AlgGrp_creation (Example H89E1)<->text960.htm#10814<->AlgGrp_creation (Example H89E1)
4<->Example-creation :<->text960.htm#10814<->Example-creation :: AlgGrp_creation (Example H89E1)
3<->complete-magma :<->text960.htm#10812<->complete-magma :: Construction of a Group Algebra (GROUP ALGEBRAS)
3<->element :<->text960.htm#10815<->element :: Construction of a Group Algebra Element (GROUP ALGEBRAS)
5<->elt< A | r, g > <->text960.htm#10816<->elt&lt; A | r, g &gt; : AlgGrp, RngElt, GrpElt -&gt; AlgGrpElt
5<->A ! g <->text960.htm#10817<->A ! g : AlgGrp, GrpElt -&gt; AlgGrpElt
5<->A ! r <->text960.htm#10818<->A ! r : AlgGrp, RngElt -&gt; AlgGrpElt
5<->A ! [c1, ..., cn] <->text960.htm#10819<->A ! [c<sub>1</sub>, ..., c<sub>n</sub>] : AlgGrp, SeqEnum -&gt; AlgGrpElt
5<->Eta(A) <->text960.htm#10820<->Eta(A) : AlgGrp -&gt; AlgGrpElt
4<->AlgGrp_el-creation (Example H89E2)<->text960.htm#10821<->AlgGrp_el-creation (Example H89E2)
4<->Example-el-creation :<->text960.htm#10821<->Example-el-creation :: AlgGrp_el-creation (Example H89E2)
3<->element :<->text960.htm#10815<->element :: Construction of a Group Algebra Element (GROUP ALGEBRAS)
3<->creation :<->text960.htm<->creation :: Construction of Group Algebras and their Elements (GROUP ALGEBRAS)
3<->subring-ideal-quotient :<->text961.htm<->subring-ideal-quotient :: Construction of Subalgebras,  Ideals and Quotient Algebras (GROUP ALGEBRAS)
5<->sub< cat : A | L> <->text961.htm#10823<->sub&lt; cat : A | L&gt; : Cat, AlgGrp, List -&gt; AlgGrp, Map
5<->lideal< cat : A | L> <->text961.htm#10824<->lideal&lt; cat : A | L&gt; : Cat, AlgGrp, List -&gt; AlgGrp, Map
5<->rideal< cat : A | L> <->text961.htm#10825<->rideal&lt; cat : A | L&gt; : Cat, AlgGrp, List -&gt; AlgGrp, Map
5<->ideal< cat : A | L> <->text961.htm#10826<->ideal&lt; cat : A | L&gt; : Cat, AlgGrp, List -&gt; AlgGrp, Map
5<->a * I <->text961.htm#10827<->a * I : AlgGrpElt, AlgGrpSub -&gt; AlgGrpSub
5<->I * a <->text961.htm#10828<->I * a : AlgGrpSub, AlgGrpElt -&gt; AlgGrpSub
5<->quo< A | L > <->text961.htm#10829<->quo&lt; A | L &gt; : AlgGrp, List -&gt; AlgAss, Map
5<->A / S <->text961.htm#10830<->A / S : AlgGrp, AlgGrpSub -&gt; AlgAss
4<->AlgGrp_wedderburn (Example H89E3)<->text961.htm#10831<->AlgGrp_wedderburn (Example H89E3)
4<->Example-wedderburn :<->text961.htm#10831<->Example-wedderburn :: AlgGrp_wedderburn (Example H89E3)
3<->subring-ideal-quotient :<->text961.htm<->subring-ideal-quotient :: Construction of Subalgebras,  Ideals and Quotient Algebras (GROUP ALGEBRAS)
3<->grp-alg-ops :<->text962.htm<->grp-alg-ops :: Operations on Group Algebras and their Subalgebras (GROUP ALGEBRAS)
3<->grp-alg-ops :<->text962.htm#10833<->grp-alg-ops :: Operations on Group Algebras (GROUP ALGEBRAS)
5<->Algebra(A) <->text962.htm#10834<->Algebra(A) : AlgGrp -&gt; AlgAss, Map
5<->AugmentationMap(A) <->text962.htm#10835<->AugmentationMap(A) : AlgGrp -&gt; Map
5<->AugmentationIdeal(A) <->text962.htm#10836<->AugmentationIdeal(A) : AlgGrp -&gt; AlgGrpSub
5<->RepresentationType(A) <->text962.htm#10837<->RepresentationType(A) : AlgGrp -&gt; MonStgElt
5<->ChangeRepresentationType(A, Rep) <->text962.htm#10838<->ChangeRepresentationType(A, Rep) : AlgGrp, MonStgElt -&gt; AlgGrp, Map
5<->ConstructTable(A) <->text962.htm#10839<->ConstructTable(A) : AlgGrp -&gt;
5<->BaseRing :: CoefficientRing(A) <->text962.htm#10840<->BaseRing :: CoefficientRing(A) : AlgGrp -&gt; Rng
5<->CoefficientRing(A) <->text962.htm#10840<->CoefficientRing(A) : AlgGrp -&gt; Rng
3<->grp-alg-ops :<->text962.htm#10833<->grp-alg-ops :: Operations on Group Algebras (GROUP ALGEBRAS)
3<->AlgGrpSub :<->text962.htm#10841<->AlgGrpSub :: Operations on Subalgebras of Group Algebras (GROUP ALGEBRAS)
3<->subalgebra :<->text962.htm#10841<->subalgebra :: Operations on Subalgebras of Group Algebras (GROUP ALGEBRAS)
5<->S ! 1 <->text962.htm#10842<->S ! 1 : AlgGrp -> Grp
5<->S ! 1 <->text962.htm#10842<->S ! 1 : AlgGrpSub -&gt; Grp
5<->Group(S) <->text962.htm#10843<->Group(S) : AlgGrp -> Grp
5<->Group(S) <->text962.htm#10843<->Group(S) : AlgGrpSub -&gt; Grp
5<->GroupAlgebra(S) <->text962.htm#10844<->GroupAlgebra(S) : AlgGrp -> AlgGrp
5<->GroupAlgebra(S) <->text962.htm#10844<->GroupAlgebra(S) : AlgGrpSub -&gt; AlgGrp
5<->Module(S) <->text962.htm#10845<->Module(S) : AlgGrp -> ModTupRng, Map
5<->Module(S) <->text962.htm#10845<->Module(S) : AlgGrpSub -&gt; ModTupRng, Map
5<->BaseRing :: CoefficientRing(A) <->text962.htm#10846<->BaseRing :: CoefficientRing(A) : AlgGrpSub -&gt; Rng
5<->CoefficientRing(A) <->text962.htm#10846<->CoefficientRing(A) : AlgGrpSub -&gt; Rng
5<->BasisMatrix(S) <->text962.htm#10847<->BasisMatrix(S) : AlgGrp -> ModMatRngElt
5<->BasisMatrix(S) <->text962.htm#10847<->BasisMatrix(S) : AlgGrpSub -&gt; ModMatRngElt
5<->Coordinates(S, a) <->text962.htm#10848<->Coordinates(S, a) : AlgGrp, AlgGrpElt -> [ RingElt ]
5<->Coordinates(S, a) <->text962.htm#10848<->Coordinates(S, a) : AlgGrpSub, AlgGrpElt -&gt; [ RingElt ]
5<->IsLeftIdeal(S) <->text962.htm#10849<->IsLeftIdeal(S) : AlgGrp -> BoolElt
5<->IsLeftIdeal(S) <->text962.htm#10849<->IsLeftIdeal(S) : AlgGrpSub -&gt; BoolElt
5<->IsRightIdeal(S) <->text962.htm#10850<->IsRightIdeal(S) : AlgGrp -> BoolElt
5<->IsRightIdeal(S) <->text962.htm#10850<->IsRightIdeal(S) : AlgGrpSub -&gt; BoolElt
5<->IsIdeal(S) <->text962.htm#10851<->IsIdeal(S) : AlgGrp -> BoolElt
5<->IsIdeal(S) <->text962.htm#10851<->IsIdeal(S) : AlgGrpSub -&gt; BoolElt
5<->Centralizer :: Centraliser(S) <->text962.htm#10852<->Centralizer :: Centraliser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->Centraliser(S) <->text962.htm#10852<->Centraliser(S) : AlgGrp -> AlgGrpSub
5<->Centralizer(S) : AlgGrp -> AlgGrpSub :: Centraliser(S) <->text962.htm#10852<->Centralizer(S) : AlgGrp -> AlgGrpSub :: Centraliser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->Centraliser(S) <->text962.htm#10852<->Centraliser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->Idealizer :: Idealiser(S) <->text962.htm#10853<->Idealizer :: Idealiser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->Idealiser(S) <->text962.htm#10853<->Idealiser(S) : AlgGrp -> AlgGrpSub
5<->Idealizer(S) : AlgGrp -> AlgGrpSub :: Idealiser(S) <->text962.htm#10853<->Idealizer(S) : AlgGrp -> AlgGrpSub :: Idealiser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->Idealiser(S) <->text962.htm#10853<->Idealiser(S) : AlgGrpSub -&gt; AlgGrpSub
5<->LeftAnnihilator(S) <->text962.htm#10854<->LeftAnnihilator(S) : AlgGrp -> AlgGrpSub
5<->LeftAnnihilator(S) <->text962.htm#10854<->LeftAnnihilator(S) : AlgGrpSub -&gt; AlgGrpSub
5<->RightAnnihilator(S) <->text962.htm#10855<->RightAnnihilator(S) : AlgGrp -> AlgGrpSub
5<->RightAnnihilator(S) <->text962.htm#10855<->RightAnnihilator(S) : AlgGrpSub -&gt; AlgGrpSub
4<->AlgGrp_jacobson (Example H89E4)<->text962.htm#10856<->AlgGrp_jacobson (Example H89E4)
4<->Example-jacobson :<->text962.htm#10856<->Example-jacobson :: AlgGrp_jacobson (Example H89E4)
3<->subalgebra :<->text962.htm#10841<->subalgebra :: Operations on Subalgebras of Group Algebras (GROUP ALGEBRAS)
3<->grp-alg-ops :<->text962.htm<->grp-alg-ops :: Operations on Group Algebras and their Subalgebras (GROUP ALGEBRAS)
3<->elt-ops :<->text963.htm<->elt-ops :: Operations on Elements (GROUP ALGEBRAS)
5<->r + a <->text963.htm#10858<->r + a : RngElt, AlgGrpElt -> AlgGrpElt
5<->a + r <->text963.htm#10858<->a + r : AlgGrpElt, RngElt -&gt; AlgGrpElt
5<->g + a <->text963.htm#10859<->g + a : GrpElt, AlgGrpElt -> AlgGrpElt
5<->a + g <->text963.htm#10859<->a + g : AlgGrpElt, GrpElt -&gt; AlgGrpElt
5<->r - a <->text963.htm#10860<->r - a : RngElt, AlgGrpElt -> AlgGrpElt
5<->a - r <->text963.htm#10860<->a - r : AlgGrpElt, RngElt -&gt; AlgGrpElt
5<->g - a <->text963.htm#10861<->g - a : GrpElt, AlgGrpElt -> AlgGrpElt
5<->a - g <->text963.htm#10861<->a - g : AlgGrpElt, GrpElt -&gt; AlgGrpElt
5<->r * a <->text963.htm#10862<->r * a : RngElt, AlgGrpElt -> AlgGrpElt
5<->a * r <->text963.htm#10862<->a * r : AlgGrpElt, RngElt -&gt; AlgGrpElt
5<->a * g <->text963.htm#10863<->a * g : AlgGrpElt, GrpElt -> AlgGrpElt
5<->g * a <->text963.htm#10863<->g * a : GrpElt, AlgGrpElt -&gt; AlgGrpElt
5<->Support(a) <->text963.htm#10864<->Support(a) : AlgGrpElt -&gt; SeqEnum
5<->Trace(a) <->text963.htm#10865<->Trace(a) : AlgGrpElt -&gt; RngElt
5<->Augmentation(a) <->text963.htm#10866<->Augmentation(a) : AlgGrpElt -&gt; RngElt
5<->Involution(a) <->text963.htm#10867<->Involution(a) : AlgGrpElt -&gt; AlgGrpElt
5<->Coefficient(a, g) <->text963.htm#10868<->Coefficient(a, g) : AlgGrpElt, GrpElt -&gt; RngElt
5<->Eltseq :: ElementToSequence(a) <->text963.htm#10869<->Eltseq :: ElementToSequence(a) : AlgGrpElt -&gt; SeqEnum
5<->ElementToSequence(a) <->text963.htm#10869<->ElementToSequence(a) : AlgGrpElt -&gt; SeqEnum
5<->Coefficients(a) <->text963.htm#10870<->Coefficients(a) : AlgGrpElt -&gt; SeqEnum
5<->Centralizer :: Centraliser(a) <->text963.htm#10871<->Centralizer :: Centraliser(a) : AlgGrpElt -&gt; AlgGrpSub
5<->Centraliser(a) <->text963.htm#10871<->Centraliser(a) : AlgGrpElt -&gt; AlgGrpSub
5<->Centralizer :: Centraliser(S, a) <->text963.htm#10872<->Centralizer :: Centraliser(S, a) : AlgGrpSub, AlgGrpElt -&gt; AlgGrpSub
5<->Centraliser(S, a) <->text963.htm#10872<->Centraliser(S, a) : AlgGrpSub, AlgGrpElt -&gt; AlgGrpSub
4<->AlgGrp_powering (Example H89E5)<->text963.htm#10873<->AlgGrp_powering (Example H89E5)
4<->Example-powering :<->text963.htm#10873<->Example-powering :: AlgGrp_powering (Example H89E5)
4<->AlgGrp_average (Example H89E6)<->text963.htm#10874<->AlgGrp_average (Example H89E6)
4<->Example-average :<->text963.htm#10874<->Example-average :: AlgGrp_average (Example H89E6)
3<->elt-ops :<->text963.htm<->elt-ops :: Operations on Elements (GROUP ALGEBRAS)
3<->alg_grp :<->text958.htm<->alg_grp :: GROUP ALGEBRAS
3<->basic :<->text966.htm<->basic :: BASIC ALGEBRAS
3<->introduction :<->text967.htm<->introduction :: Introduction (BASIC ALGEBRAS)
3<->algebras :<->text968.htm<->algebras :: Basic Algebras (BASIC ALGEBRAS)
3<->creation :<->text968.htm#10880<->creation :: Creation (BASIC ALGEBRAS)
5<->BasicAlgebra(Q) <->text968.htm#10881<->BasicAlgebra(Q) : SeqEnum[Tup] -&gt; AlgBas
5<->BasicAlgebra(F,R,s,P)<->text968.htm#10882<->BasicAlgebra(F,R,s,P): AlgFr, SeqEnum, RngIntElt, SeqEnum -&gt; AlgBas
5<->BasicAlgebra(F,R) <->text968.htm#10883<->BasicAlgebra(F,R) : AlgFr, SeqEnum -&gt; AlgBas
5<->TensorProduct(A, B) <->text968.htm#10884<->TensorProduct(A, B) : AlgBas, AlgBas-&gt; AlgBas
5<->BasicAlgebra(G, k) <->text968.htm#10885<->BasicAlgebra(G, k) : GrpPC, FldFin -> AlgBas
5<->BasicAlgebra(G) <->text968.htm#10885<->BasicAlgebra(G) : GrpPerm -> AlgBass
5<->BasicAlgebra(G, k) <->text968.htm#10885<->BasicAlgebra(G, k) : GrpPerm, FldFin -&gt; AlgBas
3<->creation :<->text968.htm#10880<->creation :: Creation (BASIC ALGEBRAS)
3<->Special_basic_algebras :<->text968.htm#10886<->Special_basic_algebras :: Special Basic Algebras (BASIC ALGEBRAS)
5<->BasicAlgebraOfMatrixAlgebra :: BasicAlgebra(A)<->text968.htm#10887<->BasicAlgebraOfMatrixAlgebra :: BasicAlgebra(A): AlgMat -&gt; AlgBas
5<->BasicAlgebra(A)<->text968.htm#10887<->BasicAlgebra(A): AlgMat -&gt; AlgBas
5<->BasicAlgebraOfEndomorphismAlgebra(M)<->text968.htm#10888<->BasicAlgebraOfEndomorphismAlgebra(M):  ModRng -&gt; AlgBas
5<->BasicAlgebraOfHeckeAlgebra(G, H, F)<->text968.htm#10889<->BasicAlgebraOfHeckeAlgebra(G, H, F):  GrpPC, GrpPC, FldFin -> AlgBas
5<->BasicAlgebraOfHeckeAlgebra(G, H, F)<->text968.htm#10889<->BasicAlgebraOfHeckeAlgebra(G, H, F):  GrpAb, GrpAb, FldFin -> AlgBas
5<->BasicAlgebraOfHeckeAlgebra(G, H, F)<->text968.htm#10889<->BasicAlgebraOfHeckeAlgebra(G, H, F): GrpPerm, GrpPerm, FldFin) -&gt; AlgBas
5<->BasicAlgebraOfSchurAlgebra(n, r, F)<->text968.htm#10890<->BasicAlgebraOfSchurAlgebra(n, r, F):  RngIntElt, RngIntElt, FldFin -&gt; AlgBas
5<->BasicAlgebraOfGroupAlgebra(G,F)<->text968.htm#10891<->BasicAlgebraOfGroupAlgebra(G,F): GrpPC, FldFin -> AlgBas
5<->BasicAlgebraOfGroupAlgebra(G,F)<->text968.htm#10891<->BasicAlgebraOfGroupAlgebra(G,F): GrpAb, FldFin -> AlgBas
5<->BasicAlgebraOfGroupAlgebra(G,F)<->text968.htm#10891<->BasicAlgebraOfGroupAlgebra(G,F): GrpPerm, FldFin -&gt; AlgBas
5<->BasicAlgebra(S) <->text968.htm#10892<->BasicAlgebra(S) : SeqEnum -&gt; AlgBas
5<->BasicAlgebraOfBlockAlgebra(S) <->text968.htm#10893<->BasicAlgebraOfBlockAlgebra(S) : SeqEnum  -&gt; AlgBas
5<->BasicAlgebraOfPrincipalBlock(G,k) <->text968.htm#10894<->BasicAlgebraOfPrincipalBlock(G,k) : GrpPerm, FldFin -&gt; AlgBas
5<->BasicAlgebraOfExtAlgebra(A) <->text968.htm#10895<->BasicAlgebraOfExtAlgebra(A) : AlgBas -&gt; AlgBas
5<->BasicAlgebraOfExtAlgebra(A, n) <->text968.htm#10896<->BasicAlgebraOfExtAlgebra(A, n) : AlgBas, RngIntElt -&gt; AlgBas
5<->BasicAlgebraOfExtAlgebra(A) <->text968.htm#10897<->BasicAlgebraOfExtAlgebra(A) : Rec -&gt; AlgBas
5<->OppositeAlgebra(B) <->text968.htm#10898<->OppositeAlgebra(B) : AlgBas -&gt; AlgBas
4<->AlgBas_GroupAlgebra (Example H90E1)<->text968.htm#10899<->AlgBas_GroupAlgebra (Example H90E1)
4<->Example-GroupAlgebra :<->text968.htm#10899<->Example-GroupAlgebra :: AlgBas_GroupAlgebra (Example H90E1)
4<->AlgBas_SchurAlgebra (Example H90E2)<->text968.htm#10900<->AlgBas_SchurAlgebra (Example H90E2)
4<->Example-SchurAlgebra :<->text968.htm#10900<->Example-SchurAlgebra :: AlgBas_SchurAlgebra (Example H90E2)
3<->Special_basic_algebras :<->text968.htm#10886<->Special_basic_algebras :: Special Basic Algebras (BASIC ALGEBRAS)
3<->Basic_algebra_library :<->text968.htm#10901<->Basic_algebra_library :: A Database of Basic Algebras (BASIC ALGEBRAS)
5<->BasicAlgebraFromGroup(A, p, b) <->text968.htm#10902<->BasicAlgebraFromGroup(A, p, b) : MonStgElt, RngIntElt, RngIntElt -&gt; AlgBas
5<->BasicAlgebraGroupNames() <->text968.htm#10903<->BasicAlgebraGroupNames() : -&gt; SetIndx
5<->BasicAlgebraFromSchur(n, r, p) <->text968.htm#10904<->BasicAlgebraFromSchur(n, r, p) : RngIntElt, RngIntElt, RngIntElt -&gt; AlgBas
4<->AlgBas_BasicDatabase (Example H90E3)<->text968.htm#10905<->AlgBas_BasicDatabase (Example H90E3)
4<->Example-BasicDatabase :<->text968.htm#10905<->Example-BasicDatabase :: AlgBas_BasicDatabase (Example H90E3)
3<->Basic_algebra_library :<->text968.htm#10901<->Basic_algebra_library :: A Database of Basic Algebras (BASIC ALGEBRAS)
3<->access :<->text968.htm#10906<->access :: Access Functions (BASIC ALGEBRAS)
5<->B . i <->text968.htm#10907<->B . i : AlgBas, RngIntElt -&gt; AlgBasElt
5<->CoefficientRing :: BaseRing(B) <->text968.htm#10908<->CoefficientRing :: BaseRing(B) : AlgBas -&gt; Rng
5<->BaseRing(B) <->text968.htm#10908<->BaseRing(B) : AlgBas -&gt; Rng
5<->KSpace :: VectorSpace(B) <->text968.htm#10909<->KSpace :: VectorSpace(B) : AlgBas -&gt; ModTupFld
5<->VectorSpace(B) <->text968.htm#10909<->VectorSpace(B) : AlgBas -&gt; ModTupFld
5<->Dimension(B) <->text968.htm#10910<->Dimension(B) : AlgBas -&gt; RngIntElt
5<->Basis(B) <->text968.htm#10911<->Basis(B) : AlgBas -&gt; SeqEnum
5<->Generators(B) <->text968.htm#10912<->Generators(B) : AlgBas -&gt; SeqEnum
5<->IdempotentGenerators(B) <->text968.htm#10913<->IdempotentGenerators(B) : AlgBas -&gt; SeqEnum
5<->IdempotentPositions(B) <->text968.htm#10914<->IdempotentPositions(B) : AlgBas -&gt; SeqEnum
5<->NonIdempotentGenerators(B) <->text968.htm#10915<->NonIdempotentGenerators(B) : AlgBas -&gt; SeqEnum
5<->Random(B) <->text968.htm#10916<->Random(B) : AlgBas -&gt; AlgBasElt
5<->NumberOfProjectives(B) <->text968.htm#10917<->NumberOfProjectives(B) : AlgBas -&gt; RngIntElt
5<->Ngens :: NumberOfGenerators(B) <->text968.htm#10918<->Ngens :: NumberOfGenerators(B) : AlgBas -&gt; RngIntElt
5<->NumberOfGenerators(B) <->text968.htm#10918<->NumberOfGenerators(B) : AlgBas -&gt; RngIntElt
5<->DimensionsOfProjectiveModules(B) <->text968.htm#10919<->DimensionsOfProjectiveModules(B) : AlgBas -&gt; SeqEnum
5<->DimensionsOfInjectiveModules(B) <->text968.htm#10920<->DimensionsOfInjectiveModules(B) : AlgBas -&gt; SeqEnum
3<->access :<->text968.htm#10906<->access :: Access Functions (BASIC ALGEBRAS)
3<->arithmetic :<->text968.htm#10921<->arithmetic :: Elementary Operations (BASIC ALGEBRAS)
5<->a + b <->text968.htm#10922<->a + b : AlgBasElt, AlgBasElt -&gt; AlgBasElt
5<->a * b <->text968.htm#10923<->a * b : AlgBasElt, AlgBasElt -&gt; AlgBasElt
5<->a ^ n <->text968.htm#10924<->a ^ n : AlgBasElt, RngIntElt -&gt; AlgBasElt
4<->AlgBas_BasicAlgebras (Example H90E4)<->text968.htm#10925<->AlgBas_BasicAlgebras (Example H90E4)
4<->Example-BasicAlgebras :<->text968.htm#10925<->Example-BasicAlgebras :: AlgBas_BasicAlgebras (Example H90E4)
4<->AlgBas_BasicAlgebras-2 (Example H90E5)<->text968.htm#10926<->AlgBas_BasicAlgebras-2 (Example H90E5)
4<->Example-BasicAlgebras-2 :<->text968.htm#10926<->Example-BasicAlgebras-2 :: AlgBas_BasicAlgebras-2 (Example H90E5)
4<->AlgBas_BasicAlgebras-3 (Example H90E6)<->text968.htm#10927<->AlgBas_BasicAlgebras-3 (Example H90E6)
4<->Example-BasicAlgebras-3 :<->text968.htm#10927<->Example-BasicAlgebras-3 :: AlgBas_BasicAlgebras-3 (Example H90E6)
3<->arithmetic :<->text968.htm#10921<->arithmetic :: Elementary Operations (BASIC ALGEBRAS)
3<->booleans :<->text968.htm#10928<->booleans :: Boolean Functions (BASIC ALGEBRAS)
5<->IsDimensionCompatible(B) <->text968.htm#10929<->IsDimensionCompatible(B) : AlgBas -&gt; Bool
5<->IsPathTree(B) <->text968.htm#10930<->IsPathTree(B) : AlgBas -&gt; Bool
5<->IsCommutative(A) <->text968.htm#10931<->IsCommutative(A) : AlgBas -&gt; Bool
5<->IsCentral(A,x) <->text968.htm#10932<->IsCentral(A,x) : AlgBas, AlgBasElt -&gt; BoolElt
3<->booleans :<->text968.htm#10928<->booleans :: Boolean Functions (BASIC ALGEBRAS)
3<->algebras :<->text968.htm<->algebras :: Basic Algebras (BASIC ALGEBRAS)
3<->homomorphisms-algebras :<->text969.htm<->homomorphisms-algebras :: Homomorphisms (BASIC ALGEBRAS)
5<->hom<A -> B | S> <->text969.htm#10934<->hom&lt;A -&gt; B | S&gt; : AlgBas, AlgBas, ModMatFldElt -&gt; Map
5<->Kernel(phi) <->text969.htm#10935<->Kernel(phi) : Map -&gt; ModTupFld
5<->Image(phi) <->text969.htm#10936<->Image(phi) : Map -&gt; AlgBas, Map
5<->IsAlgebraHomomorphism(A, B, psi) <->text969.htm#10937<->IsAlgebraHomomorphism(A, B, psi) : AlgBas, AlgBas, Mtrx -&gt; Bool
5<->X * Y <->text969.htm#10938<->X * Y : Map, Map -&gt; Map
5<->IsAlgebraHomomorphism(A, B, psi) <->text969.htm#10939<->IsAlgebraHomomorphism(A, B, psi) :  AlgBasGrpP, AlgBasGrpP, Map -> Bool
5<->IsAlgebraHomomorphism(A, B, psi) <->text969.htm#10939<->IsAlgebraHomomorphism(A, B, psi) : AlgBasGrpP, AlgBas, Map -> Bool
5<->IsAlgebraHomomorphism(A, B, psi) <->text969.htm#10939<->IsAlgebraHomomorphism(A, B, psi) : AlgBas, AlgBasGrpP, Map -> Bool
5<->IsAlgebraHomomorphism(A, B, psi) <->text969.htm#10939<->IsAlgebraHomomorphism(A, B, psi) : AlgBas, AlgBas, Map -&gt; Bool
5<->IsAlgebraHomomorphism(psi)<->text969.htm#10940<->IsAlgebraHomomorphism(psi):  Map -&gt; Bool
3<->homomorphisms-algebras :<->text969.htm<->homomorphisms-algebras :: Homomorphisms (BASIC ALGEBRAS)
3<->sub-quo :<->text970.htm<->sub-quo :: Subalgebras and Quotient Algebras (BASIC ALGEBRAS)
3<->subalgebras :<->text970.htm#10942<->subalgebras :: Subalgebras and their Constructions (BASIC ALGEBRAS)
5<->sub<A | S> <->text970.htm#10943<->sub&lt;A | S&gt; : AlgBas, SeqEnum -&gt; AlgBas, Map
5<->SubalgebraFromBasis(A, V) <->text970.htm#10944<->SubalgebraFromBasis(A, V) : AlgBas, SeqEnum -&gt; AlgBas, Map
5<->MaximalIdempotent(A, S) <->text970.htm#10945<->MaximalIdempotent(A, S) : AlgBas, SeqEnum -&gt; AlgBasElt
5<->MinimalIdentity(A, S) <->text970.htm#10946<->MinimalIdentity(A, S) : AlgBas, SeqEnum[AlgBasElt] -&gt; AlgBasElt
5<->Centre(A) <->text970.htm#10947<->Centre(A) : AlgBas -&gt; AlgBas, Map
5<->Centralizer(A,S) <->text970.htm#10948<->Centralizer(A,S) : AlgBas, SeqEnum -&gt; AlgBas, Map
5<->MaximalCommutativeSubalgebra(A,S) <->text970.htm#10949<->MaximalCommutativeSubalgebra(A,S) : AlgBas, SeqEnum -&gt; AlgBas, Map
3<->subalgebras :<->text970.htm#10942<->subalgebras :: Subalgebras and their Constructions (BASIC ALGEBRAS)
3<->ideals :<->text970.htm#10950<->ideals :: Ideals and their Construction (BASIC ALGEBRAS)
5<->ideal <->text970.htm#10951<->ideal< A | S> : AlgBasGrpP, SeqEnum[AlgBasElt] -> ModTupFld
5<->ideal< A | S> <->text970.htm#10951<->ideal&lt; A | S&gt; : AlgBas, SeqEnum[AlgBasElt] -&gt; ModTupFld
5<->LeftAnnihilator(A, S) <->text970.htm#10952<->LeftAnnihilator(A, S) : AlgBas, SeqEnum[AlgBasElt] -&gt; SeqEnum[AlgBasElt]
5<->RightAnnihilator(A, S) <->text970.htm#10953<->RightAnnihilator(A, S) : AlgBas,  SeqEnum[AlgBasElt] -&gt; SeqEnum[AlgBaselt]
5<->Annihilator(A,S) <->text970.htm#10954<->Annihilator(A,S) : AlgBas,  SeqEnum[AlgBasElt] -&gt; SeqEnum[AlgBasElt]
5<->IsIdeal(A, S) <->text970.htm#10955<->IsIdeal(A, S) : AlgBas, ModTupFld -&gt; Bool
5<->IsLeftIdeal(A,S) <->text970.htm#10956<->IsLeftIdeal(A,S) : AlgBas, ModTupFld -&gt; Bool
5<->IsRightIdeal(A, S) <->text970.htm#10957<->IsRightIdeal(A, S) : AlgBas, ModTupFld -&gt; Bool
5<->RandomIdealGeneratedBy(A, n) <->text970.htm#10958<->RandomIdealGeneratedBy(A, n) : AlgBas, RngIntElt -&gt; ModTupFld
3<->ideals :<->text970.htm#10950<->ideals :: Ideals and their Construction (BASIC ALGEBRAS)
3<->quotient-algebras :<->text970.htm#10959<->quotient-algebras :: Quotient Algebras (BASIC ALGEBRAS)
5<->quo< A | S> <->text970.htm#10960<->quo&lt; A | S&gt; : AlgBas,  ModTupFld -&gt; AlgBas, Map
5<->CoverAlgebra(A) <->text970.htm#10961<->CoverAlgebra(A) : AlgBas -&gt; AlgBas, ModMatFldElt
5<->GradedCoverAlgebra(A) <->text970.htm#10962<->GradedCoverAlgebra(A) : AlgBas -&gt; AlgBas, ModMatFldElt
5<->TruncatedAlgebra(A,n) <->text970.htm#10963<->TruncatedAlgebra(A,n) : AlgBas, RngIntElt -&gt; AlgBas, ModMatFldElt
3<->quotient-algebras :<->text970.htm#10959<->quotient-algebras :: Quotient Algebras (BASIC ALGEBRAS)
3<->units :<->text970.htm#10964<->units :: Units (BASIC ALGEBRAS)
5<->GeneratorsOfGroupOfUnits(A) <->text970.htm#10965<->GeneratorsOfGroupOfUnits(A) : AlgBas -&gt; SeqEnum, SeqEnum
5<->NoncentralGeneratorsOfGroupOfUnits(A) <->text970.htm#10966<->NoncentralGeneratorsOfGroupOfUnits(A) : AlgBas -&gt; SeqEnum, SeqEnum
3<->units :<->text970.htm#10964<->units :: Units (BASIC ALGEBRAS)
3<->sub-quo :<->text970.htm<->sub-quo :: Subalgebras and Quotient Algebras (BASIC ALGEBRAS)
3<->forms-gradings-permute-idempotents :<->text971.htm<->forms-gradings-permute-idempotents :: Minimal Forms and Gradings (BASIC ALGEBRAS)
5<->MinimalGeneratorForm(A) <->text971.htm#10968<->MinimalGeneratorForm(A) : AlgBas -&gt;  Rec
5<->MinimalGeneratorFormAlgebra(A) <->text971.htm#10969<->MinimalGeneratorFormAlgebra(A) : AlgBas -&gt; AlgBas
5<->AssociatedGradedAlgebra(A) <->text971.htm#10970<->AssociatedGradedAlgebra(A) : AlgBas -&gt; AlgBas
5<->GradedCapHomomorphism(A) <->text971.htm#10971<->GradedCapHomomorphism(A) : AlgBas -&gt; ModMatFldElt
5<->GradedCapHomomorphism(A, B, mu) <->text971.htm#10972<->GradedCapHomomorphism(A, B, mu) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt
5<->BuildHomomorphismFromGradedCap(A, B, phi) <->text971.htm#10973<->BuildHomomorphismFromGradedCap(A, B, phi) : AlgBas, AlgBas, ModMatFldElt -&gt; ModMatFldElt
5<->ChangeIdempotents(A, S) <->text971.htm#10974<->ChangeIdempotents(A, S) : AlgBas, GrpPermElt -> AlgBas, Map
5<->ChangeIdempotents(A, S) <->text971.htm#10974<->ChangeIdempotents(A, S) : AlgBas, SeqEnum -&gt; AlgBas, Map
4<->AlgBas_GradedHomomorphism (Example H90E7)<->text971.htm#10975<->AlgBas_GradedHomomorphism (Example H90E7)
4<->Example-GradedHomomorphism :<->text971.htm#10975<->Example-GradedHomomorphism :: AlgBas_GradedHomomorphism (Example H90E7)
4<->AlgBas_GradedHomomorphisms-2 (Example H90E8)<->text971.htm#10976<->AlgBas_GradedHomomorphisms-2 (Example H90E8)
4<->Example-GradedHomomorphisms-2 :<->text971.htm#10976<->Example-GradedHomomorphisms-2 :: AlgBas_GradedHomomorphisms-2 (Example H90E8)
3<->forms-gradings-permute-idempotents :<->text971.htm<->forms-gradings-permute-idempotents :: Minimal Forms and Gradings (BASIC ALGEBRAS)
3<->automorphism :<->text972.htm<->automorphism :: Automorphisms and  Isomorphisms (BASIC ALGEBRAS)
5<->GradedAutomorphismGroupMatchingIdempotents(A) <->text972.htm#10978<->GradedAutomorphismGroupMatchingIdempotents(A) : AlgBas -&gt;                GrpMat, SeqEnum, SecEnum
5<->GradedAutomorphismGroup(A) <->text972.htm#10979<->GradedAutomorphismGroup(A) : AlgBas -&gt; GrpMat, SeqEnum[ModMatFldElt],        SeqEnum[ModMatFldElt], SeqEnum[ModMatFldElt]
5<->IsGradedIsomorphic(A, B) <->text972.htm#10980<->IsGradedIsomorphic(A, B) : AlgBas, AlgBas  -&gt; Bool, ModMatFldElt
5<->AutomorphismGroupMatchingIdempotents(A) <->text972.htm#10981<->AutomorphismGroupMatchingIdempotents(A) : AlgBas -&gt; AlgBas, ModMatFldElt
5<->AutomorphismGroup(A) <->text972.htm#10982<->AutomorphismGroup(A) : AlgBas -&gt; GrpMat, SeqEnum, SeqEnum, SeqEnum
5<->InnerAutomorphismGroup(A) <->text972.htm#10983<->InnerAutomorphismGroup(A) : AlgBas -&gt; GrpMat
5<->IsIsomorphic(A, B) <->text972.htm#10984<->IsIsomorphic(A, B) : AlgBas, AlgBas -&gt; Bool, Map
4<->AlgBas_Automorphism group (Example H90E9)<->text972.htm#10985<->AlgBas_Automorphism group (Example H90E9)
4<->Example-Automorphism group :<->text972.htm#10985<->Example-Automorphism group :: AlgBas_Automorphism group (Example H90E9)
4<->AlgBas_modify presentation (Example H90E10)<->text972.htm#10986<->AlgBas_modify presentation (Example H90E10)
4<->Example-modify presentation :<->text972.htm#10986<->Example-modify presentation :: AlgBas_modify presentation (Example H90E10)
4<->AlgBas_GradedGroupAlgebras (Example H90E11)<->text972.htm#10987<->AlgBas_GradedGroupAlgebras (Example H90E11)
4<->Example-GradedGroupAlgebras :<->text972.htm#10987<->Example-GradedGroupAlgebras :: AlgBas_GradedGroupAlgebras (Example H90E11)
3<->automorphism :<->text972.htm<->automorphism :: Automorphisms and  Isomorphisms (BASIC ALGEBRAS)
3<->quiver :<->text973.htm<->quiver :: Quiver and Relations (BASIC ALGEBRAS)
5<->Quiver(A) <->text973.htm#10989<->Quiver(A) : AlgBas -&gt; SeqEnum
5<->QuiverAndRelations(A) <->text973.htm#10990<->QuiverAndRelations(A) : AlgBas -&gt; SeqEnum, SeqEnum, SeqEnum
4<->AlgBas_Quiver (Example H90E12)<->text973.htm#10991<->AlgBas_Quiver (Example H90E12)
4<->Example-Quiver :<->text973.htm#10991<->Example-Quiver :: AlgBas_Quiver (Example H90E12)
3<->quiver :<->text973.htm<->quiver :: Quiver and Relations (BASIC ALGEBRAS)
3<->modules :<->text974.htm<->modules :: Modules over Basic Algebras (BASIC ALGEBRAS)
3<->indecomposable-projective-modules :<->text974.htm#10993<->indecomposable-projective-modules :: Indecomposable Projective Modules (BASIC ALGEBRAS)
5<->ProjectiveModule(B, i) <->text974.htm#10994<->ProjectiveModule(B, i) : AlgBas, RngIntElt -&gt; ModRng
5<->PathTree(B, i) <->text974.htm#10995<->PathTree(B, i) : AlgBas, RngIntElt -&gt; ModRng
5<->ActionGenerator(B, i) <->text974.htm#10996<->ActionGenerator(B, i) : AlgBas, RngIntElt -&gt; SeqEnum
5<->IdempotentActionGenerators(B, i) <->text974.htm#10997<->IdempotentActionGenerators(B, i) : AlgBas, RngIntElt -&gt; SeqEnum
5<->NonIdempotentActionGenerators(B, i) <->text974.htm#10998<->NonIdempotentActionGenerators(B, i) : AlgBas, RngIntElt -&gt; SeqEnum
5<->Injection(B, i, v) <->text974.htm#10999<->Injection(B, i, v) : AlgBas, RngIntElt, ModRngElt -&gt; AlgBasElt
3<->indecomposable-projective-modules :<->text974.htm#10993<->indecomposable-projective-modules :: Indecomposable Projective Modules (BASIC ALGEBRAS)
3<->creation :<->text974.htm#11000<->creation :: Creation (BASIC ALGEBRAS)
5<->AModule(B, Q) <->text974.htm#11001<->AModule(B, Q) : AlgBas, SeqEnum[AlgMatElt] -&gt; ModRng
5<->ProjectiveModule(B, S) <->text974.htm#11002<->ProjectiveModule(B, S) : AlgBas, SeqEnum[RngIntElt] -&gt; ModAlg, SeqEnum, SeqEnum
5<->SimpleModule :: IrreducibleModule(B, i) <->text974.htm#11003<->SimpleModule :: IrreducibleModule(B, i) : AlgBas, RngIntElt -&gt; ModAlg
5<->IrreducibleModule(B, i) <->text974.htm#11003<->IrreducibleModule(B, i) : AlgBas, RngIntElt -&gt; ModAlg
5<->ZeroModule(B) <->text974.htm#11004<->ZeroModule(B) : AlgBas -&gt; ModAlg
5<->RightRegularModule(B) <->text974.htm#11005<->RightRegularModule(B) : AlgBas -&gt; ModAlg
5<->RegularRepresentation(v) <->text974.htm#11006<->RegularRepresentation(v) : AlgBasElt -&gt; AlgMatElt
5<->Restriction(M, B, xi) <->text974.htm#11007<->Restriction(M, B, xi) : ModAlgBas, AlgBas, ModMatFldElt -&gt; ModAlgBas
5<->ChangeAlgebra(M, B, xi) <->text974.htm#11008<->ChangeAlgebra(M, B, xi) : ModAlgBas , AlgBas, ModMatFldElt -> ModAlgBas
5<->ChangeAlgebra(M, B, xi) <->text974.htm#11008<->ChangeAlgebra(M, B, xi) : ModAlgBas , AlgBas, Map -&gt; ModAlgBas
5<->JacobsonRadical(M) <->text974.htm#11009<->JacobsonRadical(M) : ModAlg -&gt; ModAlg
5<->Socle(M) <->text974.htm#11010<->Socle(M) : ModAlg -&gt; ModAlg
3<->creation :<->text974.htm#11000<->creation :: Creation (BASIC ALGEBRAS)
3<->access :<->text974.htm#11011<->access :: Access Functions (BASIC ALGEBRAS)
5<->Algebra(M) <->text974.htm#11012<->Algebra(M) : ModAlg -&gt; AlgBas
5<->Dimension(M) <->text974.htm#11013<->Dimension(M) : ModAlg -&gt; RngIntElt
5<->Action(M) <->text974.htm#11014<->Action(M) : ModAlg -&gt; AlgMat
5<->IsomorphismTypesOfRadicalLayers(M) <->text974.htm#11015<->IsomorphismTypesOfRadicalLayers(M) : ModAlgBas -&gt; SeqEnum
5<->IsomorphismTypesOfSocleLayers(M) <->text974.htm#11016<->IsomorphismTypesOfSocleLayers(M) : ModAlgBas -&gt; SeqEnum
5<->IsomorphismTypesOfBasicAlgebraSequence(S) <->text974.htm#11017<->IsomorphismTypesOfBasicAlgebraSequence(S) : SeqEnum -&gt; SeqEnum
4<->AlgBas_restriction-to-center (Example H90E13)<->text974.htm#11018<->AlgBas_restriction-to-center (Example H90E13)
4<->Example-restriction-to-center :<->text974.htm#11018<->Example-restriction-to-center :: AlgBas_restriction-to-center (Example H90E13)
4<->AlgBas_ChangeAlgebras-2 (Example H90E14)<->text974.htm#11019<->AlgBas_ChangeAlgebras-2 (Example H90E14)
4<->Example-ChangeAlgebras-2 :<->text974.htm#11019<->Example-ChangeAlgebras-2 :: AlgBas_ChangeAlgebras-2 (Example H90E14)
4<->AlgBas_RadicalLayers (Example H90E15)<->text974.htm#11020<->AlgBas_RadicalLayers (Example H90E15)
4<->Example-RadicalLayers :<->text974.htm#11020<->Example-RadicalLayers :: AlgBas_RadicalLayers (Example H90E15)
3<->access :<->text974.htm#11011<->access :: Access Functions (BASIC ALGEBRAS)
3<->predicates :<->text974.htm#11021<->predicates :: Predicates (BASIC ALGEBRAS)
5<->IsSemisimple(M) <->text974.htm#11022<->IsSemisimple(M) : ModAlg -&gt; BoolElt, SeqEnum
5<->IsProjective(M) <->text974.htm#11023<->IsProjective(M) : ModAlg -&gt; BoolElt, SeqEnum
5<->IsInjective(M) <->text974.htm#11024<->IsInjective(M) : ModAlg -&gt; BoolElt, SeqEnum
3<->predicates :<->text974.htm#11021<->predicates :: Predicates (BASIC ALGEBRAS)
3<->arithmetic :<->text974.htm#11025<->arithmetic :: Elementary Operations (BASIC ALGEBRAS)
5<->m * b <->text974.htm#11026<->m * b : ModAlgElt, AlgBasElt -&gt; ModAlgElt
4<->AlgBas_AModules (Example H90E16)<->text974.htm#11027<->AlgBas_AModules (Example H90E16)
4<->Example-AModules :<->text974.htm#11027<->Example-AModules :: AlgBas_AModules (Example H90E16)
4<->AlgBas_AModules-2 (Example H90E17)<->text974.htm#11028<->AlgBas_AModules-2 (Example H90E17)
4<->Example-AModules-2 :<->text974.htm#11028<->Example-AModules-2 :: AlgBas_AModules-2 (Example H90E17)
3<->arithmetic :<->text974.htm#11025<->arithmetic :: Elementary Operations (BASIC ALGEBRAS)
3<->modules :<->text974.htm<->modules :: Modules over Basic Algebras (BASIC ALGEBRAS)
3<->homomorphisms :<->text975.htm<->homomorphisms :: Homomorphisms of Modules (BASIC ALGEBRAS)
3<->creation :<->text975.htm#11030<->creation :: Creation (BASIC ALGEBRAS)
5<->AHom(M, N) <->text975.htm#11031<->AHom(M, N) : ModAlg, ModAlg -&gt; ModMatFld
5<->PHom(M,N) <->text975.htm#11032<->PHom(M,N) : ModAlg, ModAlg -&gt; ModMatFld
5<->ZeroMap(M, N) <->text975.htm#11033<->ZeroMap(M, N) : ModAlg, ModAlg -&gt; ModMatFld
5<->LiftHomomorphism(x, n) <->text975.htm#11034<->LiftHomomorphism(x, n) : ModAlgElt, RngIntElt -&gt; ModMatFldElt
5<->LiftHomomorphism(X, N) <->text975.htm#11035<->LiftHomomorphism(X, N) : SeqEnum[ModAlgElt], SeqEnum[RngIntElt] -&gt; ModMatFldElt
5<->Pushout(M, f1, N1, f2, N2) <->text975.htm#11036<->Pushout(M, f1, N1, f2, N2) : ModAlg, ModMatFldElt, ModAlg, ModMatFldElt, ModAlg		-&gt; ModAlg, ModMatFldElt, ModMatFldElt
5<->Pullback(f1, M1, f2, M2, N) <->text975.htm#11037<->Pullback(f1, M1, f2, M2, N) : ModAlg, ModMatFldElt, ModAlg, ModMatFldElt, ModAlg		-&gt; ModAlg, ModMatFldElt, ModMatFldElt
3<->creation :<->text975.htm#11030<->creation :: Creation (BASIC ALGEBRAS)
3<->access :<->text975.htm#11038<->access :: Access Functions (BASIC ALGEBRAS)
5<->IsModuleHomomorphism(f) <->text975.htm#11039<->IsModuleHomomorphism(f) : ModMatFldElt -&gt; BoolElt
5<->Domain(f) <->text975.htm#11040<->Domain(f) : ModMatFldElt -&gt; ModAlg
5<->Codomain(f) <->text975.htm#11041<->Codomain(f) : ModMatFldElt -&gt; ModAlg
5<->Kernel(f) <->text975.htm#11042<->Kernel(f) : ModMatFldElt -&gt; ModAlg,ModMatFldElt
5<->Cokernel(f) <->text975.htm#11043<->Cokernel(f) : ModMatFldElt -&gt; ModAlg,ModMatFldElt
3<->access :<->text975.htm#11038<->access :: Access Functions (BASIC ALGEBRAS)
3<->projective-covers :<->text975.htm#11044<->projective-covers :: Projective Covers and Resolutions (BASIC ALGEBRAS)
5<->ProjectiveCover(M) <->text975.htm#11045<->ProjectiveCover(M) : ModAlg -&gt; ModAlg, ModMatFldElt, SeqEnum[ModMatFldElt],                        SeqEnum[ModMatFldElt], SeqEnum[RngIntElt]
5<->ProjectiveResolution(M, n) <->text975.htm#11046<->ProjectiveResolution(M, n) : ModAlg, RngIntElt -&gt; ModCpx, ModMatFldElt
5<->CompactProjectiveResolution(M, n) <->text975.htm#11047<->CompactProjectiveResolution(M, n) : ModAlg, RngIntElt -&gt; Rec
5<->CompactProjectiveResolutionsOfSimpleModules(A,n) <->text975.htm#11048<->CompactProjectiveResolutionsOfSimpleModules(A,n) : AlgBas, RngIntElt -&gt; SeqEnum
5<->SyzygyModule(M, n) <->text975.htm#11049<->SyzygyModule(M, n) : ModAlg, RngIntElt -&gt; ModAlg
5<->SimpleHomologyDimensions(M) <->text975.htm#11050<->SimpleHomologyDimensions(M) : ModAlg -&gt; SeqEnum
4<->AlgBas_Homomorphisms (Example H90E18)<->text975.htm#11051<->AlgBas_Homomorphisms (Example H90E18)
4<->Example-Homomorphisms :<->text975.htm#11051<->Example-Homomorphisms :: AlgBas_Homomorphisms (Example H90E18)
4<->AlgBas_Homomorphisms-2 (Example H90E19)<->text975.htm#11052<->AlgBas_Homomorphisms-2 (Example H90E19)
4<->Example-Homomorphisms-2 :<->text975.htm#11052<->Example-Homomorphisms-2 :: AlgBas_Homomorphisms-2 (Example H90E19)
3<->projective-covers :<->text975.htm#11044<->projective-covers :: Projective Covers and Resolutions (BASIC ALGEBRAS)
3<->homomorphisms :<->text975.htm<->homomorphisms :: Homomorphisms of Modules (BASIC ALGEBRAS)
3<->duals-injectives :<->text976.htm<->duals-injectives :: Duals and Injectives (BASIC ALGEBRAS)
5<->Dual(M) <->text976.htm#11054<->Dual(M) : ModAlg -&gt; ModAlg
5<->BaseChangeMatrix(A) <->text976.htm#11055<->BaseChangeMatrix(A) : AlgBas -&gt; ModAlg
3<->injective-modules :<->text976.htm#11056<->injective-modules :: Injective Modules (BASIC ALGEBRAS)
5<->InjectiveModule(B, i) <->text976.htm#11057<->InjectiveModule(B, i) : AlgBas, RngIntElt -&gt; ModAlg
5<->InjectiveHull(M) <->text976.htm#11058<->InjectiveHull(M) : ModAlg -&gt; ModAlg, ModMatFldElt,             SeqEnum[ModMatFldElt], SeqEnum[ModMatFldElt], SeqEnum[RngIntElt]
5<->InjectiveResolution(M, n) <->text976.htm#11059<->InjectiveResolution(M, n) : ModAlg, RngIntElt -&gt; ModCpx, ModMatFldElt
5<->CompactInjectiveResolution(M, n) <->text976.htm#11060<->CompactInjectiveResolution(M, n) : ModAlg, RngIntElt -&gt; Rec
5<->InjectiveSyzygyModule(M, n) <->text976.htm#11061<->InjectiveSyzygyModule(M, n) : ModAlg, RngIntElt -&gt; ModAlg
5<->SimpleCohomologyDimensions(M) <->text976.htm#11062<->SimpleCohomologyDimensions(M) : ModAlg -&gt; SeqEnum
4<->AlgBas_Opposite (Example H90E20)<->text976.htm#11063<->AlgBas_Opposite (Example H90E20)
4<->Example-Opposite :<->text976.htm#11063<->Example-Opposite :: AlgBas_Opposite (Example H90E20)
3<->injective-modules :<->text976.htm#11056<->injective-modules :: Injective Modules (BASIC ALGEBRAS)
3<->duals-injectives :<->text976.htm<->duals-injectives :: Duals and Injectives (BASIC ALGEBRAS)
3<->cohomology :<->text977.htm<->cohomology :: Cohomology (BASIC ALGEBRAS)
5<->CohomologyRingGenerators(P) <->text977.htm#11065<->CohomologyRingGenerators(P) : Rec -&gt; Rec
5<->CohomologyRightModuleGenerators(P, Q, CQ) <->text977.htm#11066<->CohomologyRightModuleGenerators(P, Q, CQ) : Rec, Rec, Rec -&gt; Rec
5<->CohomologyLeftModuleGenerators(P, CP, Q) <->text977.htm#11067<->CohomologyLeftModuleGenerators(P, CP, Q) : Tup, Tup, Tup -&gt; Tup
5<->DegreesOfCohomologyGenerators(C) <->text977.htm#11068<->DegreesOfCohomologyGenerators(C) : Rec -&gt; SeqEnum
5<->CohomologyGeneratorToChainMap(P,Q,C,n) <->text977.htm#11069<->CohomologyGeneratorToChainMap(P,Q,C,n) : ModCpx, ModCpx, Rec, RngIntElt -&gt; MapChn
5<->CohomologyGeneratorToChainMap(P, C, n) <->text977.htm#11070<->CohomologyGeneratorToChainMap(P, C, n) : ModCpx, Tup, RngIntElt -&gt; MapChn
4<->AlgBas_Cohomology-2 (Example H90E21)<->text977.htm#11071<->AlgBas_Cohomology-2 (Example H90E21)
4<->Example-Cohomology-2 :<->text977.htm#11071<->Example-Cohomology-2 :: AlgBas_Cohomology-2 (Example H90E21)
3<->extalgebras :<->text977.htm#11072<->extalgebras :: Ext-Algebras (BASIC ALGEBRAS)
5<->ExtAlgebra(A, n)<->text977.htm#11073<->ExtAlgebra(A, n): AlgBas,RngIntElt  -&gt; Rec
5<->BasicAlgebraOfExtAlgebra(ext) <->text977.htm#11074<->BasicAlgebraOfExtAlgebra(ext) : Rec -&gt; AlgBas
5<->BasicAlgebraOfExtAlgebra(A)<->text977.htm#11075<->BasicAlgebraOfExtAlgebra(A): AlgBas -&gt; AlgBas
5<->BasicAlgebraOfExtAlgebra(A, n)<->text977.htm#11076<->BasicAlgebraOfExtAlgebra(A, n): AlgBas,  RngIntElt -&gt; AlgBas
5<->SumOfBettiNumbersOfSimpleModules(A, n) <->text977.htm#11077<->SumOfBettiNumbersOfSimpleModules(A, n) : AlgBas, RngIntElt -&gt; RngIntElt
4<->AlgBas_ExtAlgebra (Example H90E22)<->text977.htm#11078<->AlgBas_ExtAlgebra (Example H90E22)
4<->Example-ExtAlgebra :<->text977.htm#11078<->Example-ExtAlgebra :: AlgBas_ExtAlgebra (Example H90E22)
3<->extalgebras :<->text977.htm#11072<->extalgebras :: Ext-Algebras (BASIC ALGEBRAS)
3<->cohomology :<->text977.htm<->cohomology :: Cohomology (BASIC ALGEBRAS)
3<->Group Algebras of p-groups (BASIC ALGEBRAS)<->text978.htm<->Group Algebras of p-groups (BASIC ALGEBRAS)
3<->access :<->text978.htm#11080<->access :: Access Functions (BASIC ALGEBRAS)
5<->Group(A) <->text978.htm#11081<->Group(A) : AlgBasGrpP -&gt; Grp
5<->PCGroup(A) <->text978.htm#11082<->PCGroup(A) : AlgBasGrpP -&gt; Grp
5<->PCMap(A) <->text978.htm#11083<->PCMap(A) : AlgBasGrpP -&gt; Map
5<->AModule(M) <->text978.htm#11084<->AModule(M) : ModGrp -&gt; ModAlg
5<->GModule(M) <->text978.htm#11085<->GModule(M) : AlgBasGrpP -&gt; ModGrp, ModGrp
5<->GModule(M) <->text978.htm#11086<->GModule(M) : ModAlgBas -&gt; ModGrp
3<->access :<->text978.htm#11080<->access :: Access Functions (BASIC ALGEBRAS)
3<->projective-resolutions :<->text978.htm#11087<->projective-resolutions :: Projective Resolutions (BASIC ALGEBRAS)
5<->ResolutionData(A) <->text978.htm#11088<->ResolutionData(A) : AlgBasGrpP -&gt; Rec
5<->CompactProjectiveResolutionPGroup(M, n) <->text978.htm#11089<->CompactProjectiveResolutionPGroup(M, n) : ModAlgBas, RngIntElt -&gt; Rec
5<->ProjectiveResolutionPGroup(PR) <->text978.htm#11090<->ProjectiveResolutionPGroup(PR) : Rec -&gt; ModCpx
5<->ProjectiveResolution(M, n) <->text978.htm#11091<->ProjectiveResolution(M, n) : ModAlgBas, RngIntElt -&gt; ModCpx, ModMatFldElt
5<->ProjectiveResolution(PR) <->text978.htm#11092<->ProjectiveResolution(PR) : Rec -&gt; ModCpx, ModMatFldElt
3<->projective-resolutions :<->text978.htm#11087<->projective-resolutions :: Projective Resolutions (BASIC ALGEBRAS)
3<->cohomology-generators :<->text978.htm#11093<->cohomology-generators :: Cohomology Generators (BASIC ALGEBRAS)
5<->AllCompactChainMaps(PR) <->text978.htm#11094<->AllCompactChainMaps(PR) : Rec -&gt; Rec
5<->CohomologyElementToChainMap(P, d, n) <->text978.htm#11095<->CohomologyElementToChainMap(P, d, n) : ModCpx ,RngIntElt, RngIntElt -&gt; MapChn
5<->CohomologyElementToCompactChainMap(PR, d, n)<->text978.htm#11096<->CohomologyElementToCompactChainMap(PR, d, n): Rec, RngIntElt, RngIntElt -&gt; ModMatFldElt
3<->cohomology-generators :<->text978.htm#11093<->cohomology-generators :: Cohomology Generators (BASIC ALGEBRAS)
3<->cohomology-relations :<->text978.htm#11097<->cohomology-relations :: Cohomology Rings (BASIC ALGEBRAS)
5<->CohomologyRing(PR, AC) <->text978.htm#11098<->CohomologyRing(PR, AC) : Rec, Rec -> Rec
5<->CohomologyRing(k, n) <->text978.htm#11098<->CohomologyRing(k, n) : ModAlgBas, RngIntElt -&gt; Rec
5<->MinimalRelations(R) <->text978.htm#11099<->MinimalRelations(R) : Rec -&gt; SeqEnum
3<->cohomology-relations :<->text978.htm#11097<->cohomology-relations :: Cohomology Rings (BASIC ALGEBRAS)
3<->restrictions-inflations :<->text978.htm#11100<->restrictions-inflations :: Restrictions and Inflations (BASIC ALGEBRAS)
5<->RestrictionData(A,B) <->text978.htm#11101<->RestrictionData(A,B) : AlgBasGrpP, AlgBasGrpP -&gt; ModMatFldElt, ModMatFldElt, SeqEnum
5<->RestrictResolution(PR, RD) <->text978.htm#11102<->RestrictResolution(PR, RD) : Rec, Rec -&gt; ModCpx
5<->RestrictionChainMap(P1,P2) <->text978.htm#11103<->RestrictionChainMap(P1,P2) : Rec, Rec -&gt; MapChn
5<->RestrictionOfGenerators(PR1, PR2, AC1, AC2, REL2) <->text978.htm#11104<->RestrictionOfGenerators(PR1, PR2, AC1, AC2, REL2) : Rec, Rec, Rec, Rec, Rec -&gt; SeqEnum
5<->InflationMap(PR2, PR1, AC2, AC1, REL1, theta) <->text978.htm#11105<->InflationMap(PR2, PR1, AC2, AC1, REL1, theta) : Rec, Rec, Rec, Rec, Rec -&gt; SeqEnum
4<->AlgBas_CohomologyRing (Example H90E23)<->text978.htm#11106<->AlgBas_CohomologyRing (Example H90E23)
4<->Example-CohomologyRing :<->text978.htm#11106<->Example-CohomologyRing :: AlgBas_CohomologyRing (Example H90E23)
3<->restrictions-inflations :<->text978.htm#11100<->restrictions-inflations :: Restrictions and Inflations (BASIC ALGEBRAS)
3<->Group Algebras of p-groups (BASIC ALGEBRAS)<->text978.htm<->Group Algebras of p-groups (BASIC ALGEBRAS)
3<->a-infinity :<->text979.htm<->a-infinity :: A-infinity Algebra Structures on Group Cohomology (BASIC ALGEBRAS)
5<->AInfinityRecord(G,n) <->text979.htm#11108<->AInfinityRecord(G,n) : Grp, RngIntElt -&gt; Rec
5<->HighProduct :: MasseyProduct(Aoo,terms) <->text979.htm#11109<->HighProduct :: MasseyProduct(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; RngElt
5<->MasseyProduct(Aoo,terms) <->text979.htm#11109<->MasseyProduct(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; RngElt
5<->HighMap(Aoo,terms) <->text979.htm#11110<->HighMap(Aoo,terms) : Rec, SeqEnum[RngElt] -&gt; MapChn
4<->AlgBas_A-infinity mod 2 (Example H90E24)<->text979.htm#11111<->AlgBas_A-infinity mod 2 (Example H90E24)
4<->Example-A-infinity mod 2 :<->text979.htm#11111<->Example-A-infinity mod 2 :: AlgBas_A-infinity mod 2 (Example H90E24)
4<->AlgBas_A-infinity mod 3 (Example H90E25)<->text979.htm#11112<->AlgBas_A-infinity mod 3 (Example H90E25)
4<->Example-A-infinity mod 3 :<->text979.htm#11112<->Example-A-infinity mod 3 :: AlgBas_A-infinity mod 3 (Example H90E25)
3<->homologicalalgebra :<->text979.htm#11113<->homologicalalgebra :: Homological Algebra Toolkit (BASIC ALGEBRAS)
5<->ActionMatrix(A,x) <->text979.htm#11114<->ActionMatrix(A,x) : AlgBas, Mtrx -&gt; ModMatFldElt
5<->CohomologyRingQuotient(CR) <->text979.htm#11115<->CohomologyRingQuotient(CR) : Rec -&gt; Rng,Map
5<->LiftToChainmap(P,f,d) <->text979.htm#11116<->LiftToChainmap(P,f,d) : ModCpx, Mtrx, RngIntElt -&gt; MapChn
5<->NullHomotopy(f) <->text979.htm#11117<->NullHomotopy(f) : MapChn -&gt; MapChn
5<->IsNullHomotopy(f,H) <->text979.htm#11118<->IsNullHomotopy(f,H) : MapChn, MapChn -&gt; BoolElt
5<->ChainmapToCohomology(f,CR) <->text979.htm#11119<->ChainmapToCohomology(f,CR) : MapChn, Rec -&gt; RngElt
5<->CohomologyToChainmap(xi,CR,P) <->text979.htm#11120<->CohomologyToChainmap(xi,CR,P) : RngElt, Rec, ModCpx -&gt; MapChn
4<->AlgBas_Nullhomotopy (Example H90E26)<->text979.htm#11121<->AlgBas_Nullhomotopy (Example H90E26)
4<->Example-Nullhomotopy :<->text979.htm#11121<->Example-Nullhomotopy :: AlgBas_Nullhomotopy (Example H90E26)
3<->homologicalalgebra :<->text979.htm#11113<->homologicalalgebra :: Homological Algebra Toolkit (BASIC ALGEBRAS)
3<->a-infinity :<->text979.htm<->a-infinity :: A-infinity Algebra Structures on Group Cohomology (BASIC ALGEBRAS)
3<->basic :<->text966.htm<->basic :: BASIC ALGEBRAS
3<->alg_quat :<->text982.htm<->alg_quat :: QUATERNION ALGEBRAS
3<->introduction :<->text983.htm<->introduction :: Introduction (QUATERNION ALGEBRAS)
3<->creation :<->text984.htm<->creation :: Creation of Quaternion Algebras (QUATERNION ALGEBRAS)
5<->QuaternionAlgebra< K | a, b > <->text984.htm#11127<->QuaternionAlgebra&lt; K | a, b &gt; : Rng, RngElt, RngElt -&gt; AlgQuat
5<->AssignNames(~A, S) <->text984.htm#11128<->AssignNames(~A, S) : AlgQuat, [MonStgElt] -&gt;
4<->AlgQuat_Quaternion_Constructor (Example H91E1)<->text984.htm#11129<->AlgQuat_Quaternion_Constructor (Example H91E1)
4<->Example-Quaternion_Constructor :<->text984.htm#11129<->Example-Quaternion_Constructor :: AlgQuat_Quaternion_Constructor (Example H91E1)
4<->AlgQuat_Quaternion_Constructor_char2 (Example H91E2)<->text984.htm#11130<->AlgQuat_Quaternion_Constructor_char2 (Example H91E2)
4<->Example-Quaternion_Constructor_char2 :<->text984.htm#11130<->Example-Quaternion_Constructor_char2 :: AlgQuat_Quaternion_Constructor_char2 (Example H91E2)
5<->QuaternionAlgebra(N) <->text984.htm#11131<->QuaternionAlgebra(N) : RngIntElt -&gt; AlgQuat
5<->QuaternionAlgebra(N) <->text984.htm#11132<->QuaternionAlgebra(N) : RngUPolElt -&gt; AlgQuat
5<->QuaternionAlgebra(I) <->text984.htm#11133<->QuaternionAlgebra(I) : RngOrdIdl -&gt; AlgQuat
5<->QuaternionAlgebra(I, S) <->text984.htm#11134<->QuaternionAlgebra(I, S) : RngOrdIdl, [PlcNumElt] -&gt; AlgQuat
5<->QuaternionAlgebra(S) <->text984.htm#11135<->QuaternionAlgebra(S) : [PlcNumElt] -&gt; AlgQuat
4<->AlgQuat_Quaternion_Constructor_Over_NumberField (Example H91E3)<->text984.htm#11136<->AlgQuat_Quaternion_Constructor_Over_NumberField (Example H91E3)
4<->Example-Quaternion_Constructor_Over_NumberField :<->text984.htm#11136<->Example-Quaternion_Constructor_Over_NumberField :: AlgQuat_Quaternion_Constructor_Over_NumberField (Example H91E3)
5<->QuaternionAlgebra(D1, D2, T) <->text984.htm#11137<->QuaternionAlgebra(D1, D2, T) : RngIntElt, RngIntElt, RngIntElt -&gt; AlgQuat
4<->AlgQuat_Quaternion_Constructor_over_Rationals (Example H91E4)<->text984.htm#11138<->AlgQuat_Quaternion_Constructor_over_Rationals (Example H91E4)
4<->Example-Quaternion_Constructor_over_Rationals :<->text984.htm#11138<->Example-Quaternion_Constructor_over_Rationals :: AlgQuat_Quaternion_Constructor_over_Rationals (Example H91E4)
3<->creation :<->text984.htm<->creation :: Creation of Quaternion Algebras (QUATERNION ALGEBRAS)
3<->order-creation :<->text985.htm<->order-creation :: Creation of Quaternion Orders (QUATERNION ALGEBRAS)
3<->order-create-element :<->text985.htm#11140<->order-create-element :: Creation of Orders from Elements (QUATERNION ALGEBRAS)
5<->QuaternionOrder(S) <->text985.htm#11141<->QuaternionOrder(S) : [AlgQuatElt] -&gt; AlgQuatOrd
5<->QuaternionOrder(R, S) <->text985.htm#11142<->QuaternionOrder(R, S) : Rng, [AlgQuatElt] -&gt; AlgQuatOrd
4<->AlgQuat_Quaternion_Orders_over_Q_FqX (Example H91E5)<->text985.htm#11143<->AlgQuat_Quaternion_Orders_over_Q_FqX (Example H91E5)
4<->Example-Quaternion_Orders_over_Q_FqX :<->text985.htm#11143<->Example-Quaternion_Orders_over_Q_FqX :: AlgQuat_Quaternion_Orders_over_Q_FqX (Example H91E5)
3<->order-create-element :<->text985.htm#11140<->order-create-element :: Creation of Orders from Elements (QUATERNION ALGEBRAS)
3<->order-create-maximal :<->text985.htm#11144<->order-create-maximal :: Creation of Maximal Orders (QUATERNION ALGEBRAS)
5<->MaximalOrder(A) <->text985.htm#11145<->MaximalOrder(A) : AlgQuat[FldFunRat] -> AlgQuatOrd
5<->MaximalOrder(A) <->text985.htm#11145<->MaximalOrder(A) : AlgQuat[FldOrd] -> AlgAssVOrd
5<->MaximalOrder(A) <->text985.htm#11145<->MaximalOrder(A) : AlgQuat[FldNum] -> AlgAssVOrd
5<->MaximalOrder(A) <->text985.htm#11145<->MaximalOrder(A) : AlgQuat[FldRat] -&gt; AlgQuatOrd
4<->AlgQuat_Quaternion_MaximalOrder (Example H91E6)<->text985.htm#11146<->AlgQuat_Quaternion_MaximalOrder (Example H91E6)
4<->Example-Quaternion_MaximalOrder :<->text985.htm#11146<->Example-Quaternion_MaximalOrder :: AlgQuat_Quaternion_MaximalOrder (Example H91E6)
5<->MaximalOrder(O) <->text985.htm#11147<->MaximalOrder(O) : AlgAssVOrd[RngOrd] -> AlgAssVOrd
5<->MaximalOrder(O) <->text985.htm#11147<->MaximalOrder(O) : AlgQuatOrd -&gt; AlgQuat
5<->pMaximalOrder(O, p) <->text985.htm#11148<->pMaximalOrder(O, p) : AlgAssVOrd, RngOrdIdl -> AlgAssVOrd, RngIntElt
5<->pMaximalOrder(O, p) <->text985.htm#11148<->pMaximalOrder(O, p) : AlgQuatOrd, RngElt -&gt; AlgQuatOrd, RngIntElt
5<->TameOrder(A) <->text985.htm#11149<->TameOrder(A) : AlgQuat[FldAlg] -&gt; AlgAssVOrd
3<->order-create-maximal :<->text985.htm#11144<->order-create-maximal :: Creation of Maximal Orders (QUATERNION ALGEBRAS)
3<->order-create-disc :<->text985.htm#11150<->order-create-disc :: Creation of Orders with given Discriminant (QUATERNION ALGEBRAS)
5<->Order(O, N) <->text985.htm#11151<->Order(O, N) : AlgQuatOrd, RngElt -&gt; AlgQuatOrd
5<->Order(O, N) <->text985.htm#11152<->Order(O, N) : AlgAssVOrd, RngOrdIdl -&gt; AlgAssVOrd
5<->GorensteinClosure(O) <->text985.htm#11153<->GorensteinClosure(O) : AlgAssVOrd -&gt; AlgAssVOrd, .
4<->AlgQuat_Quaternion_Orders (Example H91E7)<->text985.htm#11154<->AlgQuat_Quaternion_Orders (Example H91E7)
4<->Example-Quaternion_Orders :<->text985.htm#11154<->Example-Quaternion_Orders :: AlgQuat_Quaternion_Orders (Example H91E7)
3<->order-create-disc :<->text985.htm#11150<->order-create-disc :: Creation of Orders with given Discriminant (QUATERNION ALGEBRAS)
3<->order-create-disc-integers :<->text985.htm#11155<->order-create-disc-integers :: Creation of Orders with given Discriminant over the Integers (QUATERNION ALGEBRAS)
5<->QuaternionOrder(A, M) <->text985.htm#11156<->QuaternionOrder(A, M) : AlgQuat[FldRat], RngIntElt -&gt; AlgQuatOrd
5<->QuaternionOrder(N, M) <->text985.htm#11157<->QuaternionOrder(N, M) : RngIntElt, RngIntElt -> AlgQuatOrd
5<->QuaternionOrder(N) <->text985.htm#11157<->QuaternionOrder(N) : RngIntElt -&gt; AlgQuatOrd
5<->QuaternionOrder(D1, D2, T) <->text985.htm#11158<->QuaternionOrder(D1, D2, T) : RngIntElt, RngIntElt, RngIntElt -&gt; AlgQuat
4<->AlgQuat_Quaternion_Orders_over_the_Integers (Example H91E8)<->text985.htm#11159<->AlgQuat_Quaternion_Orders_over_the_Integers (Example H91E8)
4<->Example-Quaternion_Orders_over_the_Integers :<->text985.htm#11159<->Example-Quaternion_Orders_over_the_Integers :: AlgQuat_Quaternion_Orders_over_the_Integers (Example H91E8)
3<->order-create-disc-integers :<->text985.htm#11155<->order-create-disc-integers :: Creation of Orders with given Discriminant over the Integers (QUATERNION ALGEBRAS)
3<->order-creation :<->text985.htm<->order-creation :: Creation of Quaternion Orders (QUATERNION ALGEBRAS)
3<->elements :<->text986.htm<->elements :: Elements of Quaternion Algebras (QUATERNION ALGEBRAS)
3<->elt-ops :<->text986.htm#11161<->elt-ops :: Creation of Elements (QUATERNION ALGEBRAS)
5<->Zero :: A ! 0 <->text986.htm#11162<->Zero :: A ! 0 : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->A ! 0 <->text986.htm#11162<->A ! 0 : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->One :: A ! 1 <->text986.htm#11163<->One :: A ! 1 : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->A ! 1 <->text986.htm#11163<->A ! 1 : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->Name :: A . i <->text986.htm#11164<->Name :: A . i : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->A . i <->text986.htm#11164<->A . i : AlgQuat, RngIntElt -&gt; AlgQuatElt
5<->A ! x <->text986.htm#11165<->A ! x : AlgQuat, Any -&gt; AlgQuatElt
3<->elt-ops :<->text986.htm#11161<->elt-ops :: Creation of Elements (QUATERNION ALGEBRAS)
3<->elt-ops :<->text986.htm#11166<->elt-ops :: Arithmetic of Elements (QUATERNION ALGEBRAS)
5<->x + y <->text986.htm#11167<->x + y : AlgQuatElt, AlgQuatElt -&gt; AlgQuatElt
5<->x - y <->text986.htm#11168<->x - y : AlgQuatElt, AlgQuatElt -&gt; AlgQuatElt
5<->x * y <->text986.htm#11169<->x * y : AlgQuatElt, AlgQuatElt -&gt; AlgQuatElt
5<->x / y <->text986.htm#11170<->x / y : AlgQuatOrdElt, AlgQuatOrdElt -> AlgQuatElt
5<->x / y <->text986.htm#11170<->x / y : AlgQuatElt, AlgQuatElt -&gt; AlgQuatElt
5<->x eq y <->text986.htm#11171<->x eq y : AlgQuatElt, AlgQuatElt -&gt; BoolElt
5<->x ne y <->text986.htm#11172<->x ne y : AlgQuatElt, AlgQuatElt -&gt; BoolElt
5<->x in A <->text986.htm#11173<->x in A : AlgQuatElt, AlgQuat -&gt; BoolElt
5<->x notin A <->text986.htm#11174<->x notin A : AlgQuatElt, AlgQuat -&gt; BoolElt
5<->Conjugate(x) <->text986.htm#11175<->Conjugate(x) : AlgQuatOrdElt -> AlgQuatOrdElt
5<->Conjugate(x) <->text986.htm#11175<->Conjugate(x) : AlgAssVOrdElt -> AlgAssVOrdElt
5<->Conjugate(x) <->text986.htm#11175<->Conjugate(x) : AlgQuatElt -&gt; AlgQuatElt
5<->Eltseq :: ElementToSequence(x) <->text986.htm#11176<->Eltseq :: ElementToSequence(x) : AlgQuatElt -&gt; SeqEnum
5<->Coordinates :: ElementToSequence(x) <->text986.htm#11176<->Coordinates :: ElementToSequence(x) : AlgQuatElt -&gt; SeqEnum
5<->ElementToSequence(x) <->text986.htm#11176<->ElementToSequence(x) : AlgQuatElt -&gt; SeqEnum
5<->Norm(x) <->text986.htm#11177<->Norm(x) : AlgQuatOrdElt -> RngElt
5<->Norm(x) <->text986.htm#11177<->Norm(x) : AlgQuatElt -&gt; FldElt
5<->Trace(x) <->text986.htm#11178<->Trace(x) : AlgQuatOrdElt -> RngElt
5<->Trace(x) <->text986.htm#11178<->Trace(x) : AlgQuatElt -&gt; FldElt
5<->CharacteristicPolynomial(x) <->text986.htm#11179<->CharacteristicPolynomial(x) : AlgQuatOrdElt -> RngUPolElt
5<->CharacteristicPolynomial(x) <->text986.htm#11179<->CharacteristicPolynomial(x) : AlgQuatElt -&gt; RngUPolElt
5<->MinimalPolynomial(x) <->text986.htm#11180<->MinimalPolynomial(x) : AlgQuatElt -&gt; RngUPolElt
4<->AlgQuat_Element_Arithmetic (Example H91E9)<->text986.htm#11181<->AlgQuat_Element_Arithmetic (Example H91E9)
4<->Example-Element_Arithmetic :<->text986.htm#11181<->Example-Element_Arithmetic :: AlgQuat_Element_Arithmetic (Example H91E9)
3<->elt-ops :<->text986.htm#11166<->elt-ops :: Arithmetic of Elements (QUATERNION ALGEBRAS)
3<->elements :<->text986.htm<->elements :: Elements of Quaternion Algebras (QUATERNION ALGEBRAS)
3<->algebra-attributes :<->text987.htm<->algebra-attributes :: Attributes of Quaternion Algebras (QUATERNION ALGEBRAS)
5<->BaseRing :: BaseField(A) <->text987.htm#11183<->BaseRing :: BaseField(A) : AlgQuat -&gt; Fld
5<->BaseField(A) <->text987.htm#11183<->BaseField(A) : AlgQuat -&gt; Fld
5<->Basis(A) <->text987.htm#11184<->Basis(A) : AlgQuat -&gt; SeqEnum
5<->RamifiedPrimes(A) <->text987.htm#11185<->RamifiedPrimes(A) : AlgQuat -&gt; SeqEnum
4<->AlgQuat_Ramified_Primes (Example H91E10)<->text987.htm#11186<->AlgQuat_Ramified_Primes (Example H91E10)
4<->Example-Ramified_Primes :<->text987.htm#11186<->Example-Ramified_Primes :: AlgQuat_Ramified_Primes (Example H91E10)
5<->FactoredDiscriminant :: RamifiedPlaces(A) <->text987.htm#11187<->FactoredDiscriminant :: RamifiedPlaces(A) : AlgQuat -&gt; SeqEnum, SeqEnum
5<->RamifiedPlaces(A) <->text987.htm#11187<->RamifiedPlaces(A) : AlgQuat -&gt; SeqEnum, SeqEnum
4<->AlgQuat_Ramified_Primes_FqX (Example H91E11)<->text987.htm#11188<->AlgQuat_Ramified_Primes_FqX (Example H91E11)
4<->Example-Ramified_Primes_FqX :<->text987.htm#11188<->Example-Ramified_Primes_FqX :: AlgQuat_Ramified_Primes_FqX (Example H91E11)
5<->Discriminant(A) <->text987.htm#11189<->Discriminant(A) : AlgQuat[FldFunRat] -> RngUPolElt
5<->Discriminant(A) <->text987.htm#11189<->Discriminant(A) : AlgQuat[FldAlg] -> RngOrdIdl, SeqEnum
5<->Discriminant(A) <->text987.htm#11189<->Discriminant(A) : AlgQuat[FldRat] -&gt; RngIntElt
5<->StandardForm(A) <->text987.htm#11190<->StandardForm(A) : AlgQuat -&gt; RngElt, RngElt, AlgQuat, Map
3<->algebra-attributes :<->text987.htm<->algebra-attributes :: Attributes of Quaternion Algebras (QUATERNION ALGEBRAS)
3<->hilbert-symbols :<->text988.htm<->hilbert-symbols :: Hilbert Symbols and  Embeddings (QUATERNION ALGEBRAS)
5<->HilbertSymbol(a, b, p) <->text988.htm#11192<->HilbertSymbol(a, b, p) : FldFunRatElt, FldFunRatElt, RngElt p -> RngIntElt
5<->HilbertSymbol(a, b, p) <->text988.htm#11192<->HilbertSymbol(a, b, p) : FldNumElt, FldNumElt, RngOrdIdl -> RngIntElt
5<->HilbertSymbol(A, p) <->text988.htm#11192<->HilbertSymbol(A, p) : AlgQuat[FldRat], RngIntElt -> RngIntElt
5<->HilbertSymbol(A, p) <->text988.htm#11192<->HilbertSymbol(A, p) : AlgQuat[FldFunRat], RngElt -> RngIntElt
5<->HilbertSymbol(A, p) <->text988.htm#11192<->HilbertSymbol(A, p) : AlgQuat, RngOrdIdl -> RngIntElt
5<->HilbertSymbol(a, b, p) <->text988.htm#11192<->HilbertSymbol(a, b, p) : FldRatElt, FldRatElt, RngIntElt -&gt; RngIntElt
5<->IsUnramified :: IsRamified(p, A) <->text988.htm#11193<->IsUnramified :: IsRamified(p, A) : RngElt, AlgQuat -&gt; BoolElt
5<->IsRamified(p, A) <->text988.htm#11193<->IsRamified(p, A) : RngUPol, AlgQuat[FldFunRat] -> BoolElt
5<->IsUnramified(p, A) : RngUPol, AlgQuat[FldFunRat] -> BoolElt :: IsRamified(p, A) <->text988.htm#11193<->IsUnramified(p, A) : RngUPol, AlgQuat[FldFunRat] -> BoolElt :: IsRamified(p, A) : RngElt, AlgQuat -&gt; BoolElt
5<->IsRamified(p, A) <->text988.htm#11193<->IsRamified(p, A) : RngOrdIdl, AlgQuat[FldAlg] -> BoolElt
5<->IsUnramified(p, A) : RngOrdIdl, AlgQuat[FldAlg] -> BoolElt :: IsRamified(p, A) <->text988.htm#11193<->IsUnramified(p, A) : RngOrdIdl, AlgQuat[FldAlg] -> BoolElt :: IsRamified(p, A) : RngElt, AlgQuat -&gt; BoolElt
5<->IsRamified(p, A) <->text988.htm#11193<->IsRamified(p, A) : RngElt, AlgQuat -&gt; BoolElt
4<->AlgQuat_Hilbert_Symbols (Example H91E12)<->text988.htm#11194<->AlgQuat_Hilbert_Symbols (Example H91E12)
4<->Example-Hilbert_Symbols :<->text988.htm#11194<->Example-Hilbert_Symbols :: AlgQuat_Hilbert_Symbols (Example H91E12)
5<->pMatrixRing(A, p) <->text988.htm#11195<->pMatrixRing(A, p) : AlgQuat, RngElt -> AlgMat, Map, Map
5<->pMatrixRing(O, p) <->text988.htm#11195<->pMatrixRing(O, p) : AlgAssVOrd, RngOrdIdl -> AlgMat, Map, Map
5<->pMatrixRing(O, p) <->text988.htm#11195<->pMatrixRing(O, p) : AlgQuatOrd, RngElt -> AlgMat, Map, Map
5<->pMatrixRing(O, p) <->text988.htm#11195<->pMatrixRing(O, p) : AlgQuatOrd[RngInt], RngInt -> AlgMat, Map, Map
5<->pMatrixRing(A, p) <->text988.htm#11195<->pMatrixRing(A, p) : AlgQuat, RngOrdIdl -&gt; AlgMat, Map, Map
5<->HasEmbedding :: IsSplittingField(K, A) <->text988.htm#11196<->HasEmbedding :: IsSplittingField(K, A) : Fld, AlgQuat -&gt; BoolElt, AlgQuatElt, Map
5<->IsSplittingField(K, A) <->text988.htm#11196<->IsSplittingField(K, A) : Fld, AlgQuat -&gt; BoolElt, AlgQuatElt, Map
5<->Embed(K, A) <->text988.htm#11197<->Embed(K, A) : Fld, AlgQuat -&gt; AlgQuatElt, Map
5<->Embed(Oc, O) <->text988.htm#11198<->Embed(Oc, O) : RngOrd, AlgAssVOrd -&gt; AlgAssVOrdElt, Map
4<->AlgQuat_Embed (Example H91E13)<->text988.htm#11199<->AlgQuat_Embed (Example H91E13)
4<->Example-Embed :<->text988.htm#11199<->Example-Embed :: AlgQuat_Embed (Example H91E13)
3<->hilbert-symbols :<->text988.htm<->hilbert-symbols :: Hilbert Symbols and  Embeddings (QUATERNION ALGEBRAS)
3<->predicates :<->text989.htm<->predicates :: Predicates on Algebras (QUATERNION ALGEBRAS)
5<->IsIndefinite :: IsDefinite(A) <->text989.htm#11201<->IsIndefinite :: IsDefinite(A) : AlgQuat -&gt; BoolElt
5<->IsDefinite(A) <->text989.htm#11201<->IsDefinite(A) : AlgQuat -&gt; BoolElt
3<->predicates :<->text989.htm<->predicates :: Predicates on Algebras (QUATERNION ALGEBRAS)
3<->matrix-ring-test :<->text990.htm<->matrix-ring-test :: Recognition Functions (QUATERNION ALGEBRAS)
5<->IsMatrixRing(A) <->text990.htm#11203<->IsMatrixRing(A) : AlgQuat -&gt; BoolElt, AlgMat, Map
5<->MatrixAlgebra :: MatrixRing(A, eps) <->text990.htm#11204<->MatrixAlgebra :: MatrixRing(A, eps) : AlgQuat, AlgQuatElt -&gt; AlgMat, Map
5<->MatrixRing(A, eps) <->text990.htm#11204<->MatrixRing(A, eps) : AlgQuat, AlgQuatElt -&gt; AlgMat, Map
4<->AlgQuat_Quaternion_MatrixRing (Example H91E14)<->text990.htm#11205<->AlgQuat_Quaternion_MatrixRing (Example H91E14)
4<->Example-Quaternion_MatrixRing :<->text990.htm#11205<->Example-Quaternion_MatrixRing :: AlgQuat_Quaternion_MatrixRing (Example H91E14)
5<->IsQuaternionAlgebra(B) <->text990.htm#11206<->IsQuaternionAlgebra(B) : AlgMat -> BoolElt, AlgQuat, Map
5<->IsQuaternionAlgebra(B) <->text990.htm#11206<->IsQuaternionAlgebra(B) : AlgAss -&gt; BoolElt, AlgQuat, Map
4<->AlgQuat_Quaternion_IsQuaternionAlgebra (Example H91E15)<->text990.htm#11207<->AlgQuat_Quaternion_IsQuaternionAlgebra (Example H91E15)
4<->Example-Quaternion_IsQuaternionAlgebra :<->text990.htm#11207<->Example-Quaternion_IsQuaternionAlgebra :: AlgQuat_Quaternion_IsQuaternionAlgebra (Example H91E15)
5<->MatrixRepresentation(R) <->text990.htm#11208<->MatrixRepresentation(R) : AlgQuatOrd -> Map
5<->MatrixRepresentation(A) <->text990.htm#11208<->MatrixRepresentation(A) : AlgQuat -&gt; Map
3<->matrix-ring-test :<->text990.htm<->matrix-ring-test :: Recognition Functions (QUATERNION ALGEBRAS)
3<->order-attributes :<->text991.htm<->order-attributes :: Attributes of Orders (QUATERNION ALGEBRAS)
5<->QuaternionAlgebra :: Algebra(S) <->text991.htm#11210<->QuaternionAlgebra :: Algebra(S) : AlgQuatOrd -&gt; AlgQuat
5<->Algebra(S) <->text991.htm#11210<->Algebra(S) : AlgQuatOrd -&gt; AlgQuat
5<->EmbeddingMatrix :: BasisMatrix(S) <->text991.htm#11211<->EmbeddingMatrix :: BasisMatrix(S) : AlgQuatOrd -&gt; AlgMatElt
5<->BasisMatrix(S) <->text991.htm#11211<->BasisMatrix(S) : AlgQuatOrd -&gt; AlgMatElt
5<->Discriminant(S) <->text991.htm#11212<->Discriminant(S) : AlgQuatOrd -&gt; RngElt
5<->FactoredDiscriminant(S) <->text991.htm#11213<->FactoredDiscriminant(S) : AlgQuatOrd -&gt; SeqEnum
5<->Level :: Conductor(S) <->text991.htm#11214<->Level :: Conductor(S) : AlgQuatOrd -&gt; RngElt
5<->Conductor(S) <->text991.htm#11214<->Conductor(S) : AlgQuatOrd -&gt; RngElt
5<->Normalizer(S) <->text991.htm#11215<->Normalizer(S) : AlgAssVOrd -&gt; Grp, Map
3<->order-attributes :<->text991.htm<->order-attributes :: Attributes of Orders (QUATERNION ALGEBRAS)
3<->order-pred :<->text992.htm<->order-pred :: Predicates of Orders (QUATERNION ALGEBRAS)
5<->IsMaximal(O) <->text992.htm#11217<->IsMaximal(O) : AlgAssVOrd -&gt; BoolElt
5<->IspMaximal(O, p) <->text992.htm#11218<->IspMaximal(O, p) : AlgQuatOrd, RngElt -> BoolElt
5<->IspMaximal(O, p) <->text992.htm#11218<->IspMaximal(O, p) : AlgAssVOrd, RngOrdIdl -&gt; BoolElt
5<->IsEichler(O) <->text992.htm#11219<->IsEichler(O) : AlgAssVOrd -&gt; BoolElt, AlgAssVOrd, AlgAssVOrd
5<->IsEichler(O, p) <->text992.htm#11220<->IsEichler(O, p) : AlgQuatOrd , RngElt -> BoolElt, AlgQuatOrd, AlgQuatOrd
5<->IsEichler(O, p) <->text992.htm#11220<->IsEichler(O, p) : AlgAssVOrd , RngOrdIdl -&gt; BoolElt, AlgAssVOrd, AlgAssVOrd
5<->EichlerInvariant(O, p) <->text992.htm#11221<->EichlerInvariant(O, p) : AlgQuatOrd , RngElt -> RngIntElt
5<->EichlerInvariant(O, p) <->text992.htm#11221<->EichlerInvariant(O, p) : AlgAssVOrd , RngOrdIdl -&gt; RngIntElt
5<->IsHereditary(O) <->text992.htm#11222<->IsHereditary(O) : AlgAssVOrd -&gt; BoolElt
5<->IsHereditary(O, p) <->text992.htm#11223<->IsHereditary(O, p) : AlgQuatOrd , RngElt -> BoolElt
5<->IsHereditary(O, p) <->text992.htm#11223<->IsHereditary(O, p) : AlgAssVOrd , RngOrdIdl -&gt; BoolElt
5<->IsGorenstein(O) <->text992.htm#11224<->IsGorenstein(O) : AlgAssVOrd -&gt; BoolElt, .
5<->IsGorenstein(O, p) <->text992.htm#11225<->IsGorenstein(O, p) : AlgQuatOrd , RngElt -> BoolElt, RngIntElt
5<->IsGorenstein(O, p) <->text992.htm#11225<->IsGorenstein(O, p) : AlgAssVOrd , RngOrdIdl -&gt; BoolElt, RngIntElt
5<->IsBass(O) <->text992.htm#11226<->IsBass(O) : AlgAssVOrd -&gt; BoolElt
5<->IsBass(O, p) <->text992.htm#11227<->IsBass(O, p) : AlgQuatOrd , RngElt -> BoolElt
5<->IsBass(O, p) <->text992.htm#11227<->IsBass(O, p) : AlgAssVOrd , RngOrdIdl -&gt; BoolElt
3<->order-pred :<->text992.htm<->order-pred :: Predicates of Orders (QUATERNION ALGEBRAS)
3<->order-ops :<->text993.htm<->order-ops :: Operations with Orders (QUATERNION ALGEBRAS)
5<->O1 meet O2 <->text993.htm#11229<->O1 meet O2 : AlgQuatOrd[RngUPol], AlgQuatOrd[RngUPol] -> AlgQuatOrd
5<->O1 meet O2 <->text993.htm#11229<->O1 meet O2 : AlgAssVOrd, AlgAssVOrd -> AlgAssVOrd
5<->O1 meet O2 <->text993.htm#11229<->O1 meet O2 : AlgQuatOrd[RngInt], AlgQuatOrd[RngInt] -&gt; AlgQuatOrd
5<->O \^ x <->text993.htm#11230<->O \^ x : AlgAssVOrd, AlgAssElt -> AlgAssvOrd
5<->O ^ x <->text993.htm#11230<->O ^ x : AlgQuatOrd, AlgQuatElt -&gt; AlgQuatOrd
3<->order-ops :<->text993.htm<->order-ops :: Operations with Orders (QUATERNION ALGEBRAS)
3<->ideal-theory :<->text994.htm<->ideal-theory :: Ideal Theory of Orders (QUATERNION ALGEBRAS)
3<->creation-access :<->text994.htm#11232<->creation-access :: Creation and Access Functions (QUATERNION ALGEBRAS)
5<->lideal :: LeftIdeal(S, X) <->text994.htm#11233<->lideal :: LeftIdeal(S, X) : AlgQuatOrd, [AlgQuatElt] -&gt; AlgQuatOrdIdl
5<->RightIdeal :: LeftIdeal(S, X) <->text994.htm#11233<->RightIdeal :: LeftIdeal(S, X) : AlgQuatOrd, [AlgQuatElt] -&gt; AlgQuatOrdIdl
5<->rideal :: LeftIdeal(S, X) <->text994.htm#11233<->rideal :: LeftIdeal(S, X) : AlgQuatOrd, [AlgQuatElt] -&gt; AlgQuatOrdIdl
5<->ideal :: LeftIdeal(S, X) <->text994.htm#11233<->ideal :: LeftIdeal(S, X) : AlgQuatOrd, [AlgQuatElt] -&gt; AlgQuatOrdIdl
5<->LeftIdeal(S, X) <->text994.htm#11233<->LeftIdeal(S, X) : AlgQuatOrd, [AlgQuatElt] -&gt; AlgQuatOrdIdl
5<->PrimeIdeal(S, p) <->text994.htm#11234<->PrimeIdeal(S, p) : AlgQuatOrd, RngElt -&gt; AlgQuatOrdIdl
5<->CommutatorIdeal(S) <->text994.htm#11235<->CommutatorIdeal(S) : AlgAssVOrd -> AlgAssVOrdIdl
5<->CommutatorIdeal(S) <->text994.htm#11235<->CommutatorIdeal(S) : AlgQuatOrd -&gt; AlgQuatOrdIdl
5<->MaximalLeftIdeals(O, p) <->text994.htm#11236<->MaximalLeftIdeals(O, p) : AlgAssVOrd, RngOrdIdl -> [AlgAssVOrdIdl]
5<->MaximalRightIdeals :: MaximalLeftIdeals(O, p) <->text994.htm#11236<->MaximalRightIdeals :: MaximalLeftIdeals(O, p) : AlgQuatOrd, RngElt -&gt; [AlgQuatOrdIdl]
5<->MaximalRightIdeals(O, p) : AlgAssVOrd, RngOrdIdl -> [AlgAssVOrdIdl] :: MaximalLeftIdeals(O, p) <->text994.htm#11236<->MaximalRightIdeals(O, p) : AlgAssVOrd, RngOrdIdl -> [AlgAssVOrdIdl] :: MaximalLeftIdeals(O, p) : AlgQuatOrd, RngElt -&gt; [AlgQuatOrdIdl]
5<->MaximalLeftIdeals(O, p) <->text994.htm#11236<->MaximalLeftIdeals(O, p) : AlgQuatOrd, RngElt -&gt; [AlgQuatOrdIdl]
4<->AlgQuat_Elementary_Ideals (Example H91E16)<->text994.htm#11237<->AlgQuat_Elementary_Ideals (Example H91E16)
4<->Example-Elementary_Ideals :<->text994.htm#11237<->Example-Elementary_Ideals :: AlgQuat_Elementary_Ideals (Example H91E16)
4<->AlgQuat_Ideal_Bases (Example H91E17)<->text994.htm#11238<->AlgQuat_Ideal_Bases (Example H91E17)
4<->Example-Ideal_Bases :<->text994.htm#11238<->Example-Ideal_Bases :: AlgQuat_Ideal_Bases (Example H91E17)
5<->LeftOrder(I) <->text994.htm#11239<->LeftOrder(I) : AlgAssVOrdIdl[RngOrd] -> AlgAssVOrd
5<->LeftOrder(I) <->text994.htm#11239<->LeftOrder(I) : AlgQuatOrdIdl -&gt; AlgQuatOrd
5<->RightOrder(I) <->text994.htm#11240<->RightOrder(I) : AlgAssVOrdIdl[RngOrd] -> AlgAssVOrd
5<->RightOrder(I) <->text994.htm#11240<->RightOrder(I) : AlgQuatOrdIdl -&gt; AlgQuatOrd
4<->AlgQuat_Left_Right_Quaternion_Ordre (Example H91E18)<->text994.htm#11241<->AlgQuat_Left_Right_Quaternion_Ordre (Example H91E18)
4<->Example-Left_Right_Quaternion_Ordre :<->text994.htm#11241<->Example-Left_Right_Quaternion_Ordre :: AlgQuat_Left_Right_Quaternion_Ordre (Example H91E18)
3<->creation-access :<->text994.htm#11232<->creation-access :: Creation and Access Functions (QUATERNION ALGEBRAS)
3<->classes :<->text994.htm#11242<->classes :: Enumeration of Ideal Classes (QUATERNION ALGEBRAS)
5<->Mass(S) <->text994.htm#11243<->Mass(S) : AlgAssVOrd -&gt; FldRatElt
5<->LeftIdealClasses(S) <->text994.htm#11244<->LeftIdealClasses(S) : AlgAssVOrd[RngOrd] -> [AlgAssVOrdIdl]
5<->RightIdealClasses :: LeftIdealClasses(S) <->text994.htm#11244<->RightIdealClasses :: LeftIdealClasses(S) : AlgQuatOrd -&gt; [AlgQuatOrdIdl]
5<->RightIdealClasses(S) : AlgAssVOrd[RngOrd] -> [AlgAssVOrdIdl] :: LeftIdealClasses(S) <->text994.htm#11244<->RightIdealClasses(S) : AlgAssVOrd[RngOrd] -> [AlgAssVOrdIdl] :: LeftIdealClasses(S) : AlgQuatOrd -&gt; [AlgQuatOrdIdl]
5<->LeftIdealClasses(S) <->text994.htm#11244<->LeftIdealClasses(S) : AlgQuatOrd -&gt; [AlgQuatOrdIdl]
5<->TwoSidedIdealClasses(S : Support) <->text994.htm#11245<->TwoSidedIdealClasses(S : Support) : AlgAssVOrd[RngOrd] -> [AlgAssVOrdIdl]
5<->TwoSidedIdealClasses(S) <->text994.htm#11245<->TwoSidedIdealClasses(S) : AlgQuatOrd -&gt; [AlgQuatOrdIdl]
5<->TwoSidedIdealClassGroup(S : Support) <->text994.htm#11246<->TwoSidedIdealClassGroup(S : Support) : AlgAssVOrd -&gt; GrpAb, Map
5<->ConjugacyClasses(S) <->text994.htm#11247<->ConjugacyClasses(S) : AlgAssVOrd -&gt; SeqEnum
4<->AlgQuat_Ideal_Enumeration (Example H91E19)<->text994.htm#11248<->AlgQuat_Ideal_Enumeration (Example H91E19)
4<->Example-Ideal_Enumeration :<->text994.htm#11248<->Example-Ideal_Enumeration :: AlgQuat_Ideal_Enumeration (Example H91E19)
4<->AlgQuat_Ideal_Enumeration (Example H91E20)<->text994.htm#11249<->AlgQuat_Ideal_Enumeration (Example H91E20)
4<->Example-Ideal_Enumeration :<->text994.htm#11249<->Example-Ideal_Enumeration :: AlgQuat_Ideal_Enumeration (Example H91E20)
4<->AlgQuat_Ideal_Enumeration (Example H91E21)<->text994.htm#11250<->AlgQuat_Ideal_Enumeration (Example H91E21)
4<->Example-Ideal_Enumeration :<->text994.htm#11250<->Example-Ideal_Enumeration :: AlgQuat_Ideal_Enumeration (Example H91E21)
3<->classes :<->text994.htm#11242<->classes :: Enumeration of Ideal Classes (QUATERNION ALGEBRAS)
3<->ord-ops :<->text994.htm#11251<->ord-ops :: Operations on Ideals (QUATERNION ALGEBRAS)
5<->I * J <->text994.htm#11252<->I * J : AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; AlgAssVOrdIdl
5<->I meet J <->text994.htm#11253<->I meet J : AlgQuatOrdIdl, AlgQuatOrdIdl -&gt; AlgQuatOrdIdl
5<->Conjugate(I) <->text994.htm#11254<->Conjugate(I) : AlgAssVOrdIdl -> AlgAssVOrdIdl
5<->Conjugate(I) <->text994.htm#11254<->Conjugate(I) : AlgQuatOrdIdl -&gt; AlgQuatOrdIdl
5<->Norm(I) <->text994.htm#11255<->Norm(I) : AlgAssVOrdIdl -> RngOrdFracIdl
5<->Norm(I) <->text994.htm#11255<->Norm(I) : AlgQuatOrdIdl -&gt; RngElt
5<->Factorization(I) <->text994.htm#11256<->Factorization(I) : AlgAssVOrdIdl -> SeqEnum
5<->Factorization(I) <->text994.htm#11256<->Factorization(I) : AlgQuatOrdIdl -&gt; SeqEnum
3<->ord-ops :<->text994.htm#11251<->ord-ops :: Operations on Ideals (QUATERNION ALGEBRAS)
3<->ideal-theory :<->text994.htm<->ideal-theory :: Ideal Theory of Orders (QUATERNION ALGEBRAS)
3<->norm-space :<->text995.htm<->norm-space :: Norm Spaces and Basis Reduction (QUATERNION ALGEBRAS)
5<->NormSpace(A) <->text995.htm#11258<->NormSpace(A) : AlgQuat -&gt; ModTupFld, Map
5<->NormModule :: NormSpace(S) <->text995.htm#11259<->NormModule :: NormSpace(S) : AlgQuatOrd -&gt; ModTupRng, Map
5<->NormSpace(S) <->text995.htm#11259<->NormSpace(S) : AlgQuatOrd -&gt; ModTupRng, Map
5<->GramMatrix(I) <->text995.htm#11260<->GramMatrix(I) : AlgQuatOrdIdl -> AlgMatElt
5<->GramMatrix(S) <->text995.htm#11260<->GramMatrix(S) : AlgQuatOrd -&gt; AlgMatElt
5<->ReducedGramMatrix(S) <->text995.htm#11261<->ReducedGramMatrix(S) : AlgQuatOrdIdl[RngInt] -> AlgMatElt
5<->ReducedGramMatrix(S) <->text995.htm#11261<->ReducedGramMatrix(S) : AlgQuatOrd[RngInt] -&gt; AlgMatElt
5<->ReducedBasis(S) <->text995.htm#11262<->ReducedBasis(S) : AlgQuatOrdIdl[RngInt] -> SeqEnum
5<->ReducedBasis(S) <->text995.htm#11262<->ReducedBasis(S) : AlgQuatOrd[RngInt] -&gt; SeqEnum
4<->AlgQuat_Basis_Reduction (Example H91E22)<->text995.htm#11263<->AlgQuat_Basis_Reduction (Example H91E22)
4<->Example-Basis_Reduction :<->text995.htm#11263<->Example-Basis_Reduction :: AlgQuat_Basis_Reduction (Example H91E22)
5<->ReducedGramMatrix(S) <->text995.htm#11264<->ReducedGramMatrix(S) : AlgQuatOrdIdl[RngUPol] -> AlgMatElt, SeqEnum
5<->ReducedBasis :: ReducedGramMatrix(S) <->text995.htm#11264<->ReducedBasis :: ReducedGramMatrix(S) : AlgQuatOrd[RngUPol] -&gt; AlgMatElt, SeqEnum
5<->ReducedBasis(S) : AlgQuatOrdIdl[RngUPol] -> SeqEnum :: ReducedGramMatrix(S) <->text995.htm#11264<->ReducedBasis(S) : AlgQuatOrdIdl[RngUPol] -> SeqEnum :: ReducedGramMatrix(S) : AlgQuatOrd[RngUPol] -&gt; AlgMatElt, SeqEnum
5<->ReducedGramMatrix(S) <->text995.htm#11264<->ReducedGramMatrix(S) : AlgQuatOrd[RngUPol] -&gt; AlgMatElt, SeqEnum
5<->ReducedBasis(I) <->text995.htm#11265<->ReducedBasis(I) : AlgAssVOrdIdl[RngOrd] -> [AlgAssVOrdElt]
5<->ReducedBasis(O) <->text995.htm#11265<->ReducedBasis(O) : AlgAssVOrd[RngOrd] -&gt; [AlgAssVElt]
5<->OptimisedRepresentation :: OptimizedRepresentation(O) <->text995.htm#11266<->OptimisedRepresentation :: OptimizedRepresentation(O) : AlgAssVOrd -&gt; AlgQuat, Map
5<->OptimizedRepresentation(O) <->text995.htm#11266<->OptimizedRepresentation(O) : AlgAssVOrd -&gt; AlgQuat, Map
5<->OptimisedRepresentation :: OptimizedRepresentation(A) <->text995.htm#11267<->OptimisedRepresentation :: OptimizedRepresentation(A) : AlgQuat -&gt; AlgQuat, Map
5<->OptimizedRepresentation(A) <->text995.htm#11267<->OptimizedRepresentation(A) : AlgQuat -&gt; AlgQuat, Map
5<->Enumerate(O, B) <->text995.htm#11268<->Enumerate(O, B) : AlgQuatOrd[RngInt], RngIntElt -> [AlgQuatOrdElt]
5<->Enumerate(O, A, B) <->text995.htm#11268<->Enumerate(O, A, B) : AlgQuatOrdIdl[RngInt], RngElt, RngElt -> [AlgQuatElt]
5<->Enumerate(O, B) <->text995.htm#11268<->Enumerate(O, B) : AlgQuatOrd[RngInt], RngElt -> [AlgQuatElt]
5<->Enumerate(O, A, B) <->text995.htm#11268<->Enumerate(O, A, B) : AlgQuatOrd[RngInt], RngIntElt, RngIntElt -&gt; [AlgQuatOrdElt]
5<->Enumerate(O, B) <->text995.htm#11269<->Enumerate(O, B) : AlgAssVOrd[RngOrd], RngElt -> [AlgAssVOrdElt]
5<->Enumerate(O, B) <->text995.htm#11269<->Enumerate(O, B) : AlgAssVOrd[RngOrd], [RngElt] -> [AlgAssVOrdElt]
5<->Enumerate(I, B) <->text995.htm#11269<->Enumerate(I, B) : AlgAssVOrdIdl[RngOrd], [RngElt] -> [AlgAssVOrdElt]
5<->Enumerate(O, A, B) <->text995.htm#11269<->Enumerate(O, A, B) : AlgAssVOrd[RngOrd], RngElt, RngElt -&gt; [AlgAssVOrdElt]
3<->norm-space :<->text995.htm<->norm-space :: Norm Spaces and Basis Reduction (QUATERNION ALGEBRAS)
3<->isomorphisms :<->text996.htm<->isomorphisms :: Isomorphisms (QUATERNION ALGEBRAS)
3<->isomorphisms-algebras :<->text996.htm#11271<->isomorphisms-algebras :: Isomorphisms of Algebras (QUATERNION ALGEBRAS)
5<->IsIsomorphic(A, B) <->text996.htm#11272<->IsIsomorphic(A, B) : AlgQuat, AlgQuat -&gt; BoolElt, Map
3<->isomorphisms-algebras :<->text996.htm#11271<->isomorphisms-algebras :: Isomorphisms of Algebras (QUATERNION ALGEBRAS)
3<->isomorphisms-orders :<->text996.htm#11273<->isomorphisms-orders :: Isomorphisms of Orders (QUATERNION ALGEBRAS)
5<->IsIsomorphic(S, T) <->text996.htm#11274<->IsIsomorphic(S, T) : AlgAssVOrd[RngOrd], AlgAssVOrd[RngOrd] -> BoolElt, Map, AlgQuatElt
5<->IsConjugate :: IsIsomorphic(S, T) <->text996.htm#11274<->IsConjugate :: IsIsomorphic(S, T) : AlgQuatOrd, AlgQuatOrd -&gt; BoolElt, Map, AlgQuatElt
5<->IsIsomorphic(S, T) <->text996.htm#11274<->IsIsomorphic(S, T) : AlgQuatOrd, AlgQuatOrd -&gt; BoolElt, Map, AlgQuatElt
5<->Isomorphism(S, T) <->text996.htm#11275<->Isomorphism(S, T) : AlgQuatOrd, AlgQuatOrd -&gt; Map
3<->isomorphisms-orders :<->text996.htm#11273<->isomorphisms-orders :: Isomorphisms of Orders (QUATERNION ALGEBRAS)
3<->isomorphisms-ideals :<->text996.htm#11276<->isomorphisms-ideals :: Isomorphisms of Ideals (QUATERNION ALGEBRAS)
5<->IsIsomorphic(I, J) <->text996.htm#11277<->IsIsomorphic(I, J) : AlgAssVOrdIdl, AlgAssVOrdIdl -&gt; BoolElt, AlgAssVElt
5<->IsPrincipal(I) <->text996.htm#11278<->IsPrincipal(I) : AlgAssVOrdIdl -&gt; BoolElt, AlgQuatElt
5<->IsRightIsomorphic :: IsLeftIsomorphic(I, J) <->text996.htm#11279<->IsRightIsomorphic :: IsLeftIsomorphic(I, J) : AlgQuatOrdIdl, AlgQuatOrdIdl -&gt; BoolElt, Map, AlgQuatElt
5<->IsLeftIsomorphic(I, J) <->text996.htm#11279<->IsLeftIsomorphic(I, J) : AlgQuatOrdIdl, AlgQuatOrdIdl -&gt; BoolElt, Map, AlgQuatElt
5<->IsRightIsomorphic :: IsLeftIsomorphic(I, J) <->text996.htm#11280<->IsRightIsomorphic :: IsLeftIsomorphic(I, J) : AlgAssVOrdIdl[RngOrd], AlgAssVOrdIdl[RngOrd] -&gt; BoolElt, AlgQuatElt
5<->IsLeftIsomorphic(I, J) <->text996.htm#11280<->IsLeftIsomorphic(I, J) : AlgAssVOrdIdl[RngOrd], AlgAssVOrdIdl[RngOrd] -&gt; BoolElt, AlgQuatElt
5<->LeftIsomorphism(I, J) <->text996.htm#11281<->LeftIsomorphism(I, J) : AlgQuatOrdIdl, AlgQuatOrdIdl -&gt;  Map, AlgQuatElt
5<->RightIsomorphism(I, J) <->text996.htm#11282<->RightIsomorphism(I, J) : AlgQuatOrdIdl, AlgQuatOrdIdl -&gt; Map, AlgQuatElt
3<->isomorphisms-ideals :<->text996.htm#11276<->isomorphisms-ideals :: Isomorphisms of Ideals (QUATERNION ALGEBRAS)
3<->Isomorphism-examples :<->text996.htm#11283<->Isomorphism-examples :: Examples (QUATERNION ALGEBRAS)
4<->AlgQuat_Isomorphism_algebras (Example H91E23)<->text996.htm#11284<->AlgQuat_Isomorphism_algebras (Example H91E23)
4<->Example-Isomorphism_algebras :<->text996.htm#11284<->Example-Isomorphism_algebras :: AlgQuat_Isomorphism_algebras (Example H91E23)
4<->AlgQuat_Isomorphism_example (Example H91E24)<->text996.htm#11285<->AlgQuat_Isomorphism_example (Example H91E24)
4<->Example-Isomorphism_example :<->text996.htm#11285<->Example-Isomorphism_example :: AlgQuat_Isomorphism_example (Example H91E24)
4<->AlgQuat_Left_Right_Isomorphisms (Example H91E25)<->text996.htm#11286<->AlgQuat_Left_Right_Isomorphisms (Example H91E25)
4<->Example-Left_Right_Isomorphisms :<->text996.htm#11286<->Example-Left_Right_Isomorphisms :: AlgQuat_Left_Right_Isomorphisms (Example H91E25)
4<->AlgQuat_Left_Right_Isomorphisms_Number_Field (Example H91E26)<->text996.htm#11287<->AlgQuat_Left_Right_Isomorphisms_Number_Field (Example H91E26)
4<->Example-Left_Right_Isomorphisms_Number_Field :<->text996.htm#11287<->Example-Left_Right_Isomorphisms_Number_Field :: AlgQuat_Left_Right_Isomorphisms_Number_Field (Example H91E26)
3<->Isomorphism-examples :<->text996.htm#11283<->Isomorphism-examples :: Examples (QUATERNION ALGEBRAS)
3<->isomorphisms :<->text996.htm<->isomorphisms :: Isomorphisms (QUATERNION ALGEBRAS)
3<->unit-group :<->text997.htm<->unit-group :: Units and Unit Groups (QUATERNION ALGEBRAS)
5<->NormOneGroup(S) <->text997.htm#11289<->NormOneGroup(S) : AlgQuatOrd -> GrpAb, Map
5<->NormOneGroup(S) <->text997.htm#11289<->NormOneGroup(S) : AlgAssVOrd -&gt; GrpPerm, Map
5<->Units(S) <->text997.htm#11290<->Units(S) : AlgAssVOrd -> SeqEnum
5<->Units(S) <->text997.htm#11290<->Units(S) : AlgQuatOrd -&gt; SeqEnum
5<->UnitGroup :: MultiplicativeGroup(S) <->text997.htm#11291<->UnitGroup :: MultiplicativeGroup(S) : AlgQuatOrd[RngInt] -&gt; GrpPerm, Map
5<->MultiplicativeGroup(S) <->text997.htm#11291<->MultiplicativeGroup(S) : AlgQuatOrd[RngUPol] -> GrpAb, Map
5<->UnitGroup(S) : AlgQuatOrd[RngUPol] -> GrpAb, Map :: MultiplicativeGroup(S) <->text997.htm#11291<->UnitGroup(S) : AlgQuatOrd[RngUPol] -> GrpAb, Map :: MultiplicativeGroup(S) : AlgQuatOrd[RngInt] -&gt; GrpPerm, Map
5<->MultiplicativeGroup(S) <->text997.htm#11291<->MultiplicativeGroup(S) : AlgAssVOrd[RngOrd] -> GrpPerm, Map
5<->UnitGroup(S) : AlgAssVOrd[RngOrd] -> GrpPerm, Map :: MultiplicativeGroup(S) <->text997.htm#11291<->UnitGroup(S) : AlgAssVOrd[RngOrd] -> GrpPerm, Map :: MultiplicativeGroup(S) : AlgQuatOrd[RngInt] -&gt; GrpPerm, Map
5<->MultiplicativeGroup(S) <->text997.htm#11291<->MultiplicativeGroup(S) : AlgQuatOrd[RngInt] -&gt; GrpPerm, Map
4<->AlgQuat_Unit_Group (Example H91E27)<->text997.htm#11292<->AlgQuat_Unit_Group (Example H91E27)
4<->Example-Unit_Group :<->text997.htm#11292<->Example-Unit_Group :: AlgQuat_Unit_Group (Example H91E27)
4<->AlgQuat_Unit_Group_NumberRing (Example H91E28)<->text997.htm#11293<->AlgQuat_Unit_Group_NumberRing (Example H91E28)
4<->Example-Unit_Group_NumberRing :<->text997.htm#11293<->Example-Unit_Group_NumberRing :: AlgQuat_Unit_Group_NumberRing (Example H91E28)
3<->unit-group :<->text997.htm<->unit-group :: Units and Unit Groups (QUATERNION ALGEBRAS)
3<->alg_quat :<->text982.htm<->alg_quat :: QUATERNION ALGEBRAS
3<->star-algebras :<->text1000.htm<->star-algebras :: ALGEBRAS WITH INVOLUTION
3<->introduction :<->text1001.htm<->introduction :: Introduction (ALGEBRAS WITH INVOLUTION)
3<->star-algebras :<->text1002.htm<->star-algebras :: Algebras with Involution (ALGEBRAS WITH INVOLUTION)
3<->reflexive :<->text1002.htm#11299<->reflexive :: Reflexive Forms (ALGEBRAS WITH INVOLUTION)
5<->IsometryGroup(F : parameters) <->text1002.htm#11300<->IsometryGroup(F : parameters) : AlgMatElt -&gt; GrpMat
5<->SimilarityGroup(F : parameters) <->text1002.htm#11301<->SimilarityGroup(F : parameters) : AlgMatElt -&gt; GrpMat
3<->reflexive :<->text1002.htm#11299<->reflexive :: Reflexive Forms (ALGEBRAS WITH INVOLUTION)
3<->system :<->text1002.htm#11302<->system :: Systems of Reflexive Forms (ALGEBRAS WITH INVOLUTION)
5<->PGroupToForms(G) <->text1002.htm#11303<->PGroupToForms(G) : GrpMat -> SeqEnum
5<->PGroupToForms(G) <->text1002.htm#11303<->PGroupToForms(G) : GrpPC -&gt; SeqEnum
4<->AlgInv_PGroupToForms (Example H92E1)<->text1002.htm#11304<->AlgInv_PGroupToForms (Example H92E1)
4<->Example-PGroupToForms :<->text1002.htm#11304<->Example-PGroupToForms :: AlgInv_PGroupToForms (Example H92E1)
3<->system :<->text1002.htm#11302<->system :: Systems of Reflexive Forms (ALGEBRAS WITH INVOLUTION)
3<->properties :<->text1002.htm#11305<->properties :: Basic Attributes of *-Algebras (ALGEBRAS WITH INVOLUTION)
5<->IsStarAlgebra(A) <->text1002.htm#11306<->IsStarAlgebra(A) : AlgGrp -> BoolElt
5<->IsStarAlgebra(A) <->text1002.htm#11306<->IsStarAlgebra(A) : AlgMat -&gt; BoolElt
5<->Star(A) <->text1002.htm#11307<->Star(A) : AlgGrp -> Map
5<->Star(A) <->text1002.htm#11307<->Star(A) : AlgMat -&gt; Map
3<->properties :<->text1002.htm#11305<->properties :: Basic Attributes of *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->adjoint :<->text1002.htm#11308<->adjoint :: Adjoint Algebras (ALGEBRAS WITH INVOLUTION)
5<->AdjointAlgebra(S : parameters) <->text1002.htm#11309<->AdjointAlgebra(S : parameters) : SeqEnum -&gt; AlgMat
4<->AlgInv_AdjointAlgebra (Example H92E2)<->text1002.htm#11310<->AlgInv_AdjointAlgebra (Example H92E2)
4<->Example-AdjointAlgebra :<->text1002.htm#11310<->Example-AdjointAlgebra :: AlgInv_AdjointAlgebra (Example H92E2)
3<->adjoint :<->text1002.htm#11308<->adjoint :: Adjoint Algebras (ALGEBRAS WITH INVOLUTION)
3<->group-algebra :<->text1002.htm#11311<->group-algebra :: Group Algebras (ALGEBRAS WITH INVOLUTION)
5<->StarOnGroupAlgebra(A) <->text1002.htm#11312<->StarOnGroupAlgebra(A) : AlgGrp -&gt; Map
5<->GroupAlgebraAsStarAlgebra(R, G) <->text1002.htm#11313<->GroupAlgebraAsStarAlgebra(R, G) : Rng, Grp -&gt; AlgGrp
4<->AlgInv_GroupAlgebraAsStarAlgebra (Example H92E3)<->text1002.htm#11314<->AlgInv_GroupAlgebraAsStarAlgebra (Example H92E3)
4<->Example-GroupAlgebraAsStarAlgebra :<->text1002.htm#11314<->Example-GroupAlgebraAsStarAlgebra :: AlgInv_GroupAlgebraAsStarAlgebra (Example H92E3)
4<->AlgInv_GroupAlgebraAsStarAlgebra2 (Example H92E4)<->text1002.htm#11315<->AlgInv_GroupAlgebraAsStarAlgebra2 (Example H92E4)
4<->Example-GroupAlgebraAsStarAlgebra2 :<->text1002.htm#11315<->Example-GroupAlgebraAsStarAlgebra2 :: AlgInv_GroupAlgebraAsStarAlgebra2 (Example H92E4)
3<->group-algebra :<->text1002.htm#11311<->group-algebra :: Group Algebras (ALGEBRAS WITH INVOLUTION)
3<->simple :<->text1002.htm#11316<->simple :: Simple *-Algebras (ALGEBRAS WITH INVOLUTION)
5<->SimpleStarAlgebra(name, d, K) <->text1002.htm#11317<->SimpleStarAlgebra(name, d, K) : MonStgElt, RngIntElt, FldFin -&gt; AlgMat
4<->AlgInv_SimpleStarAlgebra (Example H92E5)<->text1002.htm#11318<->AlgInv_SimpleStarAlgebra (Example H92E5)
4<->Example-SimpleStarAlgebra :<->text1002.htm#11318<->Example-SimpleStarAlgebra :: AlgInv_SimpleStarAlgebra (Example H92E5)
3<->simple :<->text1002.htm#11316<->simple :: Simple *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->star-algebras :<->text1002.htm<->star-algebras :: Algebras with Involution (ALGEBRAS WITH INVOLUTION)
3<->decompositions :<->text1003.htm<->decompositions :: Decompositions of *-Algebras (ALGEBRAS WITH INVOLUTION)
5<->WedderburnDecomposition(A) <->text1003.htm#11320<->WedderburnDecomposition(A) : AlgGrp -> AlgGrpSub, AlgGrpSub
5<->WedderburnDecomposition(A) <->text1003.htm#11320<->WedderburnDecomposition(A) : AlgMat -&gt; AlgMat, AlgMat
5<->TaftDecomposition(A) <->text1003.htm#11321<->TaftDecomposition(A) : AlgGrp -> AlgGrpSub, AlgGrpSub
5<->TaftDecomposition(A) <->text1003.htm#11321<->TaftDecomposition(A) : AlgMat -&gt; AlgMat, AlgMat
4<->AlgInv_TaftDcomposition (Example H92E6)<->text1003.htm#11322<->AlgInv_TaftDcomposition (Example H92E6)
4<->Example-TaftDcomposition :<->text1003.htm#11322<->Example-TaftDcomposition :: AlgInv_TaftDcomposition (Example H92E6)
3<->decompositions :<->text1003.htm<->decompositions :: Decompositions of *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->recognition :<->text1004.htm<->recognition :: Recognition of *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->simple-recog :<->text1004.htm#11324<->simple-recog :: Recognition of Simple *-Algebras (ALGEBRAS WITH INVOLUTION)
5<->RecogniseClassicalSSA(A) <->text1004.htm#11325<->RecogniseClassicalSSA(A) : AlgMat -&gt; BoolElt, AlgMat, Map, Map
5<->RecogniseExchangeSSA(A) <->text1004.htm#11326<->RecogniseExchangeSSA(A) : AlgMat -&gt; BoolElt, AlgMat, Map, Map
4<->AlgInv_RecogniseClassicalSSA (Example H92E7)<->text1004.htm#11327<->AlgInv_RecogniseClassicalSSA (Example H92E7)
4<->Example-RecogniseClassicalSSA :<->text1004.htm#11327<->Example-RecogniseClassicalSSA :: AlgInv_RecogniseClassicalSSA (Example H92E7)
3<->simple-recog :<->text1004.htm#11324<->simple-recog :: Recognition of Simple *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->gen-recog :<->text1004.htm#11328<->gen-recog :: Recognition of Arbitrary *-Algebras (ALGEBRAS WITH INVOLUTION)
5<->RecogniseStarAlgebra(A) <->text1004.htm#11329<->RecogniseStarAlgebra(A) : AlgGrp -> BoolElt
5<->RecogniseStarAlgebra(A) <->text1004.htm#11329<->RecogniseStarAlgebra(A) : AlgMat -&gt; BoolElt
5<->IsSimpleStarAlgebra(A) <->text1004.htm#11330<->IsSimpleStarAlgebra(A) : AlgGrp -> BoolElt
5<->IsSimpleStarAlgebra(A) <->text1004.htm#11330<->IsSimpleStarAlgebra(A) : AlgMat -&gt; BoolElt
5<->SimpleParameters(A) <->text1004.htm#11331<->SimpleParameters(A) : AlgGrp -> SeqEnum
5<->SimpleParameters(A) <->text1004.htm#11331<->SimpleParameters(A) : AlgMat -&gt; SeqEnum
5<->NormGroup(A) <->text1004.htm#11332<->NormGroup(A) : AlgMat -&gt; GrpMat
4<->AlgInv_Nonisomorphism1 (Example H92E8)<->text1004.htm#11333<->AlgInv_Nonisomorphism1 (Example H92E8)
4<->Example-Nonisomorphism1 :<->text1004.htm#11333<->Example-Nonisomorphism1 :: AlgInv_Nonisomorphism1 (Example H92E8)
4<->AlgInv_Nonisomorphism2 (Example H92E9)<->text1004.htm#11334<->AlgInv_Nonisomorphism2 (Example H92E9)
4<->Example-Nonisomorphism2 :<->text1004.htm#11334<->Example-Nonisomorphism2 :: AlgInv_Nonisomorphism2 (Example H92E9)
3<->gen-recog :<->text1004.htm#11328<->gen-recog :: Recognition of Arbitrary *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->recognition :<->text1004.htm<->recognition :: Recognition of *-Algebras (ALGEBRAS WITH INVOLUTION)
3<->isometry :<->text1005.htm<->isometry :: Intersections of Classical Groups (ALGEBRAS WITH INVOLUTION)
5<->IsometryGroup(S : parameters) <->text1005.htm#11336<->IsometryGroup(S : parameters) : SeqEnum -&gt; GrpMat
4<->AlgInv_IsometryGroup (Example H92E10)<->text1005.htm#11337<->AlgInv_IsometryGroup (Example H92E10)
4<->Example-IsometryGroup :<->text1005.htm#11337<->Example-IsometryGroup :: AlgInv_IsometryGroup (Example H92E10)
5<->ClassicalIntersection(S) <->text1005.htm#11338<->ClassicalIntersection(S) : SeqEnum -&gt; GrpMat
4<->AlgInv_ClassicalIntersection (Example H92E11)<->text1005.htm#11339<->AlgInv_ClassicalIntersection (Example H92E11)
4<->Example-ClassicalIntersection :<->text1005.htm#11339<->Example-ClassicalIntersection :: AlgInv_ClassicalIntersection (Example H92E11)
3<->isometry :<->text1005.htm<->isometry :: Intersections of Classical Groups (ALGEBRAS WITH INVOLUTION)
3<->star-algebras :<->text1000.htm<->star-algebras :: ALGEBRAS WITH INVOLUTION
3<->cliff_alg :<->text1008.htm<->cliff_alg :: CLIFFORD ALGEBRAS
3<->Clifford algebra :<->text1009.htm<->Clifford algebra :: Introduction (CLIFFORD ALGEBRAS)
3<->introduction :<->text1009.htm<->introduction :: Introduction (CLIFFORD ALGEBRAS)
3<->creation :<->text1010.htm<->creation :: Clifford Algebras (CLIFFORD ALGEBRAS)
5<->CliffordAlgebra(Q) <->text1010.htm#11345<->CliffordAlgebra(Q) : AlgMatElt -&gt; AlgClff, ModTupFld, Map
5<->CliffordAlgebra(V) <->text1010.htm#11346<->CliffordAlgebra(V) : ModTupFld -&gt; AlgClff, Map
4<->AlgClff_CliffQuatEx (Example H93E1)<->text1010.htm#11347<->AlgClff_CliffQuatEx (Example H93E1)
4<->Example-CliffQuatEx :<->text1010.htm#11347<->Example-CliffQuatEx :: AlgClff_CliffQuatEx (Example H93E1)
3<->print :<->text1010.htm#11348<->print :: Print Names for Generators (CLIFFORD ALGEBRAS)
5<->AssignNames(~C, S) <->text1010.htm#11349<->AssignNames(~C, S) : AlgClff, [ MonStgElt ]) -&gt;
5<->Name(C, i) <->text1010.htm#11350<->Name(C, i) : AlgClff, RngIntElt -&gt; AlgClffElt
5<->AsPolynomial(v) <->text1010.htm#11351<->AsPolynomial(v) : AlgClffElt -&gt;
4<->AlgClff_CliffordGen (Example H93E2)<->text1010.htm#11352<->AlgClff_CliffordGen (Example H93E2)
4<->Example-CliffordGen :<->text1010.htm#11352<->Example-CliffordGen :: AlgClff_CliffordGen (Example H93E2)
4<->AlgClff_CliffordNames (Example H93E3)<->text1010.htm#11353<->AlgClff_CliffordNames (Example H93E3)
4<->Example-CliffordNames :<->text1010.htm#11353<->Example-CliffordNames :: AlgClff_CliffordNames (Example H93E3)
3<->print :<->text1010.htm#11348<->print :: Print Names for Generators (CLIFFORD ALGEBRAS)
3<->elements :<->text1010.htm#11354<->elements :: Elements of a Clifford Algebra (CLIFFORD ALGEBRAS)
5<->elt< C | r1, r2, ..., rm > <->text1010.htm#11355<->elt&lt; C | r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>m</sub> &gt; : AlgClff, RngElt, RngElt, ..., RngElt -&gt; AlgClffElt
5<->C ! L <->text1010.htm#11356<->C ! L : AlgClff, SeqEnum[RngElt] -&gt; AlgGenElt
5<->SeqToClifford(C, ss) <->text1010.htm#11357<->SeqToClifford(C, ss) : AlgClff, SeqEnum -&gt; AlgClffElt
5<->SeqFromClifford(v) <->text1010.htm#11358<->SeqFromClifford(v) : AlgClffElt -&gt; SeqEnum
4<->AlgClff_Eltfromseq (Example H93E4)<->text1010.htm#11359<->AlgClff_Eltfromseq (Example H93E4)
4<->Example-Eltfromseq :<->text1010.htm#11359<->Example-Eltfromseq :: AlgClff_Eltfromseq (Example H93E4)
5<->BasisProduct(C, i, j) <->text1010.htm#11360<->BasisProduct(C, i, j) : AlgClff, RngIntElt, RngIntElt -&gt; AlgGenElt
5<->BasisProduct(C, L) <->text1010.htm#11361<->BasisProduct(C, L) : AlgClff, SeqEnum -&gt; AlgGenElt
5<->BasisElement(C, S) <->text1010.htm#11362<->BasisElement(C, S) : AlgClff, SetEnum -&gt; AlgClffElt
3<->elements :<->text1010.htm#11354<->elements :: Elements of a Clifford Algebra (CLIFFORD ALGEBRAS)
3<->creation :<->text1010.htm<->creation :: Clifford Algebras (CLIFFORD ALGEBRAS)
3<->involutions :<->text1011.htm<->involutions :: The Main Involutions (CLIFFORD ALGEBRAS)
5<->MainInvolution(C) <->text1011.htm#11364<->MainInvolution(C) : AlgClff -&gt; Map
5<->MainAntiautomorphism(C) <->text1011.htm#11365<->MainAntiautomorphism(C) : AlgClff -&gt; Map
3<->involutions :<->text1011.htm<->involutions :: The Main Involutions (CLIFFORD ALGEBRAS)
3<->operations :<->text1012.htm<->operations :: Clifford Algebra Structure (CLIFFORD ALGEBRAS)
5<->HomogeneousComponent(v,k) <->text1012.htm#11367<->HomogeneousComponent(v,k) : AlgClffElt, RngIntElt -&gt; AlgClffElt
4<->AlgClff_HomComp (Example H93E5)<->text1012.htm#11368<->AlgClff_HomComp (Example H93E5)
4<->Example-HomComp :<->text1012.htm#11368<->Example-HomComp :: AlgClff_HomComp (Example H93E5)
5<->EvenSubalgebra(C : parameters) <->text1012.htm#11369<->EvenSubalgebra(C : parameters) : AlgClff -&gt; AlgAss, Map
4<->AlgClff_CliffGenQuatEx (Example H93E6)<->text1012.htm#11370<->AlgClff_CliffGenQuatEx (Example H93E6)
4<->Example-CliffGenQuatEx :<->text1012.htm#11370<->Example-CliffGenQuatEx :: AlgClff_CliffGenQuatEx (Example H93E6)
5<->Center :: Centre(C) <->text1012.htm#11371<->Center :: Centre(C) : AlgClff -&gt; AlgAss, Map
5<->Centre(C) <->text1012.htm#11371<->Centre(C) : AlgClff -&gt; AlgAss, Map
4<->AlgClff_EvenDimPlus (Example H93E7)<->text1012.htm#11372<->AlgClff_EvenDimPlus (Example H93E7)
4<->Example-EvenDimPlus :<->text1012.htm#11372<->Example-EvenDimPlus :: AlgClff_EvenDimPlus (Example H93E7)
4<->AlgClff_EvenDimMinus (Example H93E8)<->text1012.htm#11373<->AlgClff_EvenDimMinus (Example H93E8)
4<->Example-EvenDimMinus :<->text1012.htm#11373<->Example-EvenDimMinus :: AlgClff_EvenDimMinus (Example H93E8)
4<->AlgClff_OddDim (Example H93E9)<->text1012.htm#11374<->AlgClff_OddDim (Example H93E9)
4<->Example-OddDim :<->text1012.htm#11374<->Example-OddDim :: AlgClff_OddDim (Example H93E9)
3<->operations :<->text1012.htm<->operations :: Clifford Algebra Structure (CLIFFORD ALGEBRAS)
3<->spin :<->text1013.htm<->spin :: Vector and Spin Representations (CLIFFORD ALGEBRAS)
3<->CliffGrp :<->text1013.htm#11376<->CliffGrp :: The Clifford Group (CLIFFORD ALGEBRAS)
5<->VectorAction(g) <->text1013.htm#11377<->VectorAction(g) : AlgClffElt -&gt; AlgMatElt
4<->AlgClff_ClffRef (Example H93E10)<->text1013.htm#11378<->AlgClff_ClffRef (Example H93E10)
4<->Example-ClffRef :<->text1013.htm#11378<->Example-ClffRef :: AlgClff_ClffRef (Example H93E10)
3<->CliffGrp :<->text1013.htm#11376<->CliffGrp :: The Clifford Group (CLIFFORD ALGEBRAS)
3<->sec:siegel :<->text1013.htm#11379<->sec:siegel :: Siegel Transformations and Spin  Groups (CLIFFORD ALGEBRAS)
4<->AlgClff_siegel (Example H93E11)<->text1013.htm#11380<->AlgClff_siegel (Example H93E11)
4<->Example-siegel :<->text1013.htm#11380<->Example-siegel :: AlgClff_siegel (Example H93E11)
4<->AlgClff_vecrep (Example H93E12)<->text1013.htm#11381<->AlgClff_vecrep (Example H93E12)
4<->Example-vecrep :<->text1013.htm#11381<->Example-vecrep :: AlgClff_vecrep (Example H93E12)
3<->sec:siegel :<->text1013.htm#11379<->sec:siegel :: Siegel Transformations and Spin  Groups (CLIFFORD ALGEBRAS)
3<->sec:spinrep :<->text1013.htm#11382<->sec:spinrep :: Spin Representations (CLIFFORD ALGEBRAS)
5<->ActionMatrix(S, s) <->text1013.htm#11383<->ActionMatrix(S, s) : AlgAss, AlgAssElt -&gt; AlgMatElt
4<->AlgClff_ideals (Example H93E13)<->text1013.htm#11384<->AlgClff_ideals (Example H93E13)
4<->Example-ideals :<->text1013.htm#11384<->Example-ideals :: AlgClff_ideals (Example H93E13)
4<->AlgClff_spinrep (Example H93E14)<->text1013.htm#11385<->AlgClff_spinrep (Example H93E14)
4<->Example-spinrep :<->text1013.htm#11385<->Example-spinrep :: AlgClff_spinrep (Example H93E14)
3<->sec:spinrep :<->text1013.htm#11382<->sec:spinrep :: Spin Representations (CLIFFORD ALGEBRAS)
3<->spin :<->text1013.htm<->spin :: Vector and Spin Representations (CLIFFORD ALGEBRAS)
3<->cliff_alg :<->text1008.htm<->cliff_alg :: CLIFFORD ALGEBRAS
3<->alg_non_ass :<->text1016.htm<->alg_non_ass :: NON--ASSOCIATIVE ALGEBRAS
3<->Composition-algebras :<->text1017.htm<->Composition-algebras :: Composition Algebras (NON--ASSOCIATIVE ALGEBRAS)
5<->CompositionAlgebra(K, a) <->text1017.htm#11390<->CompositionAlgebra(K, a) : Fld, [RngIntElt] -> AlgGen
5<->CompositionAlgebra(K, a) <->text1017.htm#11390<->CompositionAlgebra(K, a) : Fld, [FldElt] -&gt; AlgGen
5<->OctonionAlgebra(K, a, b, c) <->text1017.htm#11391<->OctonionAlgebra(K, a, b, c) : Fld, RngIntElt, RngIntElt, RngIntElt -> AlgGen
5<->OctonionAlgebra(K, a, b, c) <->text1017.htm#11391<->OctonionAlgebra(K, a, b, c) : Fld, FldElt, FldElt, FldElt -&gt; AlgGen
5<->SplitOctonionAlgebra(K) <->text1017.htm#11392<->SplitOctonionAlgebra(K) : Fld -&gt; AlgGen
4<->AlgNAss_Ten_Triality (Example H94E1)<->text1017.htm#11393<->AlgNAss_Ten_Triality (Example H94E1)
4<->Example-Ten_Triality :<->text1017.htm#11393<->Example-Ten_Triality :: AlgNAss_Ten_Triality (Example H94E1)
3<->Composition-algebras :<->text1017.htm<->Composition-algebras :: Composition Algebras (NON--ASSOCIATIVE ALGEBRAS)
3<->Jordan-algebras :<->text1018.htm<->Jordan-algebras :: Jordan Algebras (NON--ASSOCIATIVE ALGEBRAS)
5<->JordanTripleProduct(J) <->text1018.htm#11395<->JordanTripleProduct(J) : AlgGen -&gt; TenSpcElt
5<->JordanSpinAlgebra(F) <->text1018.htm#11396<->JordanSpinAlgebra(F) : Any -> AlgGen
5<->JordanSpinAlgebra(F) <->text1018.htm#11396<->JordanSpinAlgebra(F) : TenSpcElt -&gt; AlgGen
4<->AlgNAss_Ten_Jordan_Basic (Example H94E2)<->text1018.htm#11397<->AlgNAss_Ten_Jordan_Basic (Example H94E2)
4<->Example-Ten_Jordan_Basic :<->text1018.htm#11397<->Example-Ten_Jordan_Basic :: AlgNAss_Ten_Jordan_Basic (Example H94E2)
5<->ExceptionalJordanCSA(K) <->text1018.htm#11398<->ExceptionalJordanCSA(K) : Fld -> AlgGen
5<->ExceptionalJordanCSA(O) <->text1018.htm#11398<->ExceptionalJordanCSA(O) : AlgGen -&gt; AlgGen
4<->AlgNAss_Ten_Chevalley_Shafer_F4 (Example H94E3)<->text1018.htm#11399<->AlgNAss_Ten_Chevalley_Shafer_F4 (Example H94E3)
4<->Example-Ten_Chevalley_Shafer_F4 :<->text1018.htm#11399<->Example-Ten_Chevalley_Shafer_F4 :: AlgNAss_Ten_Chevalley_Shafer_F4 (Example H94E3)
3<->Jordan-algebras :<->text1018.htm<->Jordan-algebras :: Jordan Algebras (NON--ASSOCIATIVE ALGEBRAS)
3<->Invariants-of-nonassociative-algebras :<->text1019.htm<->Invariants-of-nonassociative-algebras :: Invariants (NON--ASSOCIATIVE ALGEBRAS)
5<->Centre :: Center(A) <->text1019.htm#11401<->Centre :: Center(A) : Alg -&gt; Alg
5<->Center(A) <->text1019.htm#11401<->Center(A) : Alg -&gt; Alg
5<->Centroid(A) <->text1019.htm#11402<->Centroid(A) : Alg -&gt; AlgMat
5<->RightNucleus :: LeftNucleus(A) <->text1019.htm#11403<->RightNucleus :: LeftNucleus(A) : Alg -&gt; AlgMat
5<->MidNucleus :: LeftNucleus(A) <->text1019.htm#11403<->MidNucleus :: LeftNucleus(A) : Alg -&gt; AlgMat
5<->LeftNucleus(A) <->text1019.htm#11403<->LeftNucleus(A) : Alg -&gt; AlgMat
5<->DerivationAlgebra(A) <->text1019.htm#11404<->DerivationAlgebra(A) : Alg -&gt; AlgMatLie
4<->AlgNAss_Alg_Invariants (Example H94E4)<->text1019.htm#11405<->AlgNAss_Alg_Invariants (Example H94E4)
4<->Example-Alg_Invariants :<->text1019.htm#11405<->Example-Alg_Invariants :: AlgNAss_Alg_Invariants (Example H94E4)
3<->Invariants-of-nonassociative-algebras :<->text1019.htm<->Invariants-of-nonassociative-algebras :: Invariants (NON--ASSOCIATIVE ALGEBRAS)
3<->Generics-for-nonassociative-algebras :<->text1020.htm<->Generics-for-nonassociative-algebras :: Generic Operations (NON--ASSOCIATIVE ALGEBRAS)
3<->Nonassociative-algebras-with-involutions :<->text1020.htm#11407<->Nonassociative-algebras-with-involutions :: Nonassociative Algebras with Involutions (NON--ASSOCIATIVE ALGEBRAS)
5<->IsStarAlgebra(A) <->text1020.htm#11408<->IsStarAlgebra(A) : AlgGen -&gt; BoolElt
5<->Star(A) <->text1020.htm#11409<->Star(A) : AlgGen -&gt; Map
4<->AlgNAss_Star_Alg (Example H94E5)<->text1020.htm#11410<->AlgNAss_Star_Alg (Example H94E5)
4<->Example-Star_Alg :<->text1020.htm#11410<->Example-Star_Alg :: AlgNAss_Star_Alg (Example H94E5)
3<->Nonassociative-algebras-with-involutions :<->text1020.htm#11407<->Nonassociative-algebras-with-involutions :: Nonassociative Algebras with Involutions (NON--ASSOCIATIVE ALGEBRAS)
3<->Operations-on-power-associative-algebras :<->text1020.htm#11411<->Operations-on-power-associative-algebras :: Operations on Power Associative Algebras (NON--ASSOCIATIVE ALGEBRAS)
5<->GenericMinimalPolynomial(x) <->text1020.htm#11412<->GenericMinimalPolynomial(x) : AlgGenElt -&gt; FldElt
5<->GenericNorm(x) <->text1020.htm#11413<->GenericNorm(x) : AlgGenElt -&gt; FldElt
5<->GenericTrace(x) <->text1020.htm#11414<->GenericTrace(x) : AlgGenElt -&gt; FldElt
5<->GenericTracelessSubspaceBasis(A) <->text1020.htm#11415<->GenericTracelessSubspaceBasis(A) : AlgGen -&gt; Any
4<->AlgNAss_Ten_Generic (Example H94E6)<->text1020.htm#11416<->AlgNAss_Ten_Generic (Example H94E6)
4<->Example-Ten_Generic :<->text1020.htm#11416<->Example-Ten_Generic :: AlgNAss_Ten_Generic (Example H94E6)
3<->Operations-on-power-associative-algebras :<->text1020.htm#11411<->Operations-on-power-associative-algebras :: Operations on Power Associative Algebras (NON--ASSOCIATIVE ALGEBRAS)
3<->Generics-for-nonassociative-algebras :<->text1020.htm<->Generics-for-nonassociative-algebras :: Generic Operations (NON--ASSOCIATIVE ALGEBRAS)
3<->alg_non_ass :<->text1016.htm<->alg_non_ass :: NON--ASSOCIATIVE ALGEBRAS
3<->general :<->text1023.htm<->general :: MODULES OVER AN ALGEBRA
3<->introduction :<->text1024.htm<->introduction :: Introduction (MODULES OVER AN ALGEBRA)
3<->modules-matrix-algebra :<->text1025.htm<->modules-matrix-algebra :: Modules over a Matrix Algebra (MODULES OVER AN ALGEBRA)
3<->A-module :<->text1025.htm#11422<->A-module :: Construction of an A-Module (MODULES OVER AN ALGEBRA)
3<->general-module-constructions :<->text1025.htm#11423<->general-module-constructions :: General Constructions (MODULES OVER AN ALGEBRA)
5<->RModule(A) <->text1025.htm#11424<->RModule(A) : AlgMat -&gt; ModRng
5<->RModule(Q) <->text1025.htm#11425<->RModule(Q) : [ MtrxS ] -&gt; ModTupRng
4<->ModAlg_CreateK6 (Example H95E1)<->text1025.htm#11426<->ModAlg_CreateK6 (Example H95E1)
4<->Example-CreateK6 :<->text1025.htm#11426<->Example-CreateK6 :: ModAlg_CreateK6 (Example H95E1)
3<->general-module-constructions :<->text1025.htm#11423<->general-module-constructions :: General Constructions (MODULES OVER AN ALGEBRA)
3<->KG-module :<->text1025.htm#11427<->KG-module :: Constructions for K[G]-Modules (MODULES OVER AN ALGEBRA)
5<->GModule(G, Q) <->text1025.htm#11428<->GModule(G, Q) : Grp, [ MtrxS ] -&gt; ModGrp
5<->PermutationModule(G, K) <->text1025.htm#11429<->PermutationModule(G, K) : GrpPerm, Fld -&gt; ModGrp
3<->KG-module :<->text1025.htm#11427<->KG-module :: Constructions for K[G]-Modules (MODULES OVER AN ALGEBRA)
3<->A-module :<->text1025.htm#11422<->A-module :: Construction of an A-Module (MODULES OVER AN ALGEBRA)
3<->access :<->text1025.htm#11430<->access :: Accessing Module Information (MODULES OVER AN ALGEBRA)
3<->access-vector-space :<->text1025.htm#11431<->access-vector-space :: The Underlying Vector Space (MODULES OVER AN ALGEBRA)
5<->M . i <->text1025.htm#11432<->M . i : ModRng, RngIntElt -&gt; ModElt
5<->BaseRing :: CoefficientRing(M) <->text1025.htm#11433<->BaseRing :: CoefficientRing(M) : ModRng -&gt; Rng
5<->CoefficientRing(M) <->text1025.htm#11433<->CoefficientRing(M) : ModRng -&gt; Rng
5<->Generators(M) <->text1025.htm#11434<->Generators(M) : ModRng -&gt; { ModRngElt }
5<->Parent(u) <->text1025.htm#11435<->Parent(u) : ModRngElt -&gt; ModRng
3<->access-vector-space :<->text1025.htm#11431<->access-vector-space :: The Underlying Vector Space (MODULES OVER AN ALGEBRA)
3<->access-algebra :<->text1025.htm#11436<->access-algebra :: The Algebra (MODULES OVER AN ALGEBRA)
5<->RightAction :: Action(M) <->text1025.htm#11437<->RightAction :: Action(M) : ModRng -&gt; AlgMat
5<->Action(M) <->text1025.htm#11437<->Action(M) : ModRng -&gt; AlgMat
5<->MatrixGroup(M) <->text1025.htm#11438<->MatrixGroup(M) : ModGrp -&gt; GrpMat
5<->ActionGenerator(M, i) <->text1025.htm#11439<->ActionGenerator(M, i) : ModRng, RngIntElt -&gt; AlgMatElt
5<->Ngens :: NumberOfActionGenerators(M) <->text1025.htm#11440<->Ngens :: NumberOfActionGenerators(M) : ModRng -&gt; RngIntElt
5<->NumberOfActionGenerators(M) <->text1025.htm#11440<->NumberOfActionGenerators(M) : ModRng -&gt; RngIntElt
5<->Group(M) <->text1025.htm#11441<->Group(M) : ModGrp -&gt; Grp
4<->ModAlg_Access (Example H95E2)<->text1025.htm#11442<->ModAlg_Access (Example H95E2)
4<->Example-Access :<->text1025.htm#11442<->Example-Access :: ModAlg_Access (Example H95E2)
3<->access-algebra :<->text1025.htm#11436<->access-algebra :: The Algebra (MODULES OVER AN ALGEBRA)
3<->access :<->text1025.htm#11430<->access :: Accessing Module Information (MODULES OVER AN ALGEBRA)
3<->operation :<->text1025.htm#11443<->operation :: Standard Constructions (MODULES OVER AN ALGEBRA)
3<->changing-ring :<->text1025.htm#11444<->changing-ring :: Changing the Coefficient Ring (MODULES OVER AN ALGEBRA)
5<->ChangeRing(M, S) <->text1025.htm#11445<->ChangeRing(M, S) : ModRng, Rng -&gt; ModRng, Map
5<->ChangeRing(M, S, f) <->text1025.htm#11446<->ChangeRing(M, S, f) : ModRng, Rng, Map -&gt; ModRng, Map
3<->changing-ring :<->text1025.htm#11444<->changing-ring :: Changing the Coefficient Ring (MODULES OVER AN ALGEBRA)
3<->direct-sum :<->text1025.htm#11447<->direct-sum :: Direct Sum (MODULES OVER AN ALGEBRA)
5<->DirectSum(M, N) <->text1025.htm#11448<->DirectSum(M, N) : ModRng, ModRng -&gt; ModRng, Map, Map, Map, Map
5<->DirectSum(Q) <->text1025.htm#11449<->DirectSum(Q) : [ ModRng ] -&gt; ModRng, [ Map ], [ Map ]
3<->direct-sum :<->text1025.htm#11447<->direct-sum :: Direct Sum (MODULES OVER AN ALGEBRA)
3<->changing-basis :<->text1025.htm#11450<->changing-basis :: Changing Basis (MODULES OVER AN ALGEBRA)
5<->M ^ T <->text1025.htm#11451<->M ^ T : ModRng, AlgMatElt -&gt; ModRng
3<->changing-basis :<->text1025.htm#11450<->changing-basis :: Changing Basis (MODULES OVER AN ALGEBRA)
3<->operation :<->text1025.htm#11443<->operation :: Standard Constructions (MODULES OVER AN ALGEBRA)
3<->element :<->text1025.htm#11452<->element :: Element Construction and  Operations (MODULES OVER AN ALGEBRA)
3<->creation :<->text1025.htm#11453<->creation :: Construction of Module Elements (MODULES OVER AN ALGEBRA)
5<->elt< M | a1, ..., an > <->text1025.htm#11454<->elt&lt; M | a<sub>1</sub>, ..., a<sub>n</sub> &gt; : ModRng, List -&gt; ModRngElt
5<->M ! Q <->text1025.htm#11455<->M ! Q : ModRng, [RngElt] -&gt; ModRngElt
5<->! :: Zero(M) <->text1025.htm#11456<->! :: Zero(M) : ModRng -&gt; ModRngElt
5<->Zero(M) <->text1025.htm#11456<->Zero(M) : ModRng -&gt; ModRngElt
5<->Random(M) <->text1025.htm#11457<->Random(M) : ModRng -&gt; ModRngElt
3<->creation :<->text1025.htm#11453<->creation :: Construction of Module Elements (MODULES OVER AN ALGEBRA)
3<->deconstruction :<->text1025.htm#11458<->deconstruction :: Deconstruction of Module Elements (MODULES OVER AN ALGEBRA)
5<->Eltseq :: ElementToSequence(u) <->text1025.htm#11459<->Eltseq :: ElementToSequence(u) : ModRngElt -&gt; [RngElt]
5<->ElementToSequence(u) <->text1025.htm#11459<->ElementToSequence(u) : ModRngElt -&gt; [RngElt]
3<->deconstruction :<->text1025.htm#11458<->deconstruction :: Deconstruction of Module Elements (MODULES OVER AN ALGEBRA)
3<->operation :<->text1025.htm#11460<->operation :: Action of the Algebra on the Module (MODULES OVER AN ALGEBRA)
5<->u * a <->text1025.htm#11461<->u * a : ModRngElt, AlgElt -&gt; ModRngElt
5<->u * g <->text1025.htm#11462<->u * g : ModGrpElt, GrpElt -&gt; ModGrpElt
3<->operation :<->text1025.htm#11460<->operation :: Action of the Algebra on the Module (MODULES OVER AN ALGEBRA)
3<->operation :<->text1025.htm#11463<->operation :: Arithmetic with Module Elements (MODULES OVER AN ALGEBRA)
5<->u + v <->text1025.htm#11464<->u + v : ModRngElt, ModRngElt -&gt; ModRngElt
5<->- u <->text1025.htm#11465<->- u : ModRngElt -&gt; ModRngElt
5<->u - v <->text1025.htm#11466<->u - v : ModRngElt, ModRngElt -&gt; ModRngElt
5<->k * u <->text1025.htm#11467<->k * u : RngElt, ModRngElt -&gt; ModRngElt
5<->u * k <->text1025.htm#11468<->u * k : ModRngElt, RngElt -&gt; ModRngElt
5<->u / k <->text1025.htm#11469<->u / k : ModRngElt, RngElt -&gt; ModRngElt
3<->operation :<->text1025.htm#11463<->operation :: Arithmetic with Module Elements (MODULES OVER AN ALGEBRA)
3<->indexing :<->text1025.htm#11470<->indexing :: Indexing (MODULES OVER AN ALGEBRA)
5<->u[i] <->text1025.htm#11471<->u[i] : ModRngElt, RngIntElt -&gt; RngElt
5<->[] :: u[i] := x <->text1025.htm#11472<->[] :: u[i] := x : ModRngElt, RngIntElt, RngElt -&gt; ModRngElt
3<->indexing :<->text1025.htm#11470<->indexing :: Indexing (MODULES OVER AN ALGEBRA)
3<->properties :<->text1025.htm#11473<->properties :: Properties of Module Elements (MODULES OVER AN ALGEBRA)
5<->IsZero(u) <->text1025.htm#11474<->IsZero(u) : ModRngElt -&gt; BoolElt
5<->Support(u) <->text1025.htm#11475<->Support(u) : ModRngElt -&gt; { RngIntElt }
3<->properties :<->text1025.htm#11473<->properties :: Properties of Module Elements (MODULES OVER AN ALGEBRA)
3<->element :<->text1025.htm#11452<->element :: Element Construction and  Operations (MODULES OVER AN ALGEBRA)
3<->submodules :<->text1025.htm#11476<->submodules :: Submodules (MODULES OVER AN ALGEBRA)
3<->submodule-construction :<->text1025.htm#11477<->submodule-construction :: Construction (MODULES OVER AN ALGEBRA)
5<->sub<M | L> <->text1025.htm#11478<->sub&lt;M | L&gt; : ModRng, List -&gt; ModRng
5<->ImageWithBasis(X, M) <->text1025.htm#11479<->ImageWithBasis(X, M) : ModMatRngElt, ModRng -&gt; ModRng
5<->Morphism(M, N) <->text1025.htm#11480<->Morphism(M, N) : ModRng, ModRng -&gt; ModMatRngElt
4<->ModAlg_Submodule (Example H95E3)<->text1025.htm#11481<->ModAlg_Submodule (Example H95E3)
4<->Example-Submodule :<->text1025.htm#11481<->Example-Submodule :: ModAlg_Submodule (Example H95E3)
3<->submodule-construction :<->text1025.htm#11477<->submodule-construction :: Construction (MODULES OVER AN ALGEBRA)
3<->Boolean :<->text1025.htm#11482<->Boolean :: Membership and Equality (MODULES OVER AN ALGEBRA)
5<->u in M <->text1025.htm#11483<->u in M : ModRngElt, ModRng -&gt; BoolElt
5<->N subset M <->text1025.htm#11484<->N subset M : ModRng, ModRng -&gt; BoolElt
5<->N eq M <->text1025.htm#11485<->N eq M : ModRng, ModRng -&gt; BoolElt
3<->Boolean :<->text1025.htm#11482<->Boolean :: Membership and Equality (MODULES OVER AN ALGEBRA)
3<->operation :<->text1025.htm#11486<->operation :: Operations on Submodules (MODULES OVER AN ALGEBRA)
5<->M + N <->text1025.htm#11487<->M + N : ModRng, ModRng -&gt; ModRng
5<->M meet N <->text1025.htm#11488<->M meet N : ModRng, ModRng -&gt; ModRng
3<->operation :<->text1025.htm#11486<->operation :: Operations on Submodules (MODULES OVER AN ALGEBRA)
3<->submodules :<->text1025.htm#11476<->submodules :: Submodules (MODULES OVER AN ALGEBRA)
3<->quotient :<->text1025.htm#11489<->quotient :: Quotient Modules (MODULES OVER AN ALGEBRA)
5<->quo<M | L> <->text1025.htm#11490<->quo&lt;M | L&gt; : ModRng, List -&gt; ModRng
5<->Morphism(M, N) <->text1025.htm#11491<->Morphism(M, N) : ModRng, ModRng -&gt; ModMatRngElt
4<->ModAlg_QuotientModule (Example H95E4)<->text1025.htm#11492<->ModAlg_QuotientModule (Example H95E4)
4<->Example-QuotientModule :<->text1025.htm#11492<->Example-QuotientModule :: ModAlg_QuotientModule (Example H95E4)
3<->quotient :<->text1025.htm#11489<->quotient :: Quotient Modules (MODULES OVER AN ALGEBRA)
3<->structure :<->text1025.htm#11493<->structure :: Structure of a Module (MODULES OVER AN ALGEBRA)
3<->splitting :<->text1025.htm#11494<->splitting :: Reducibility (MODULES OVER AN ALGEBRA)
5<->Meataxe(M) <->text1025.htm#11495<->Meataxe(M) : ModRng -&gt; ModRng, ModRng, AlgMatElt
5<->IsIrreducible(M) <->text1025.htm#11496<->IsIrreducible(M) : ModRng -&gt; BoolElt, ModRng, ModRng
5<->IsAbsolutelyIrreducible(M) <->text1025.htm#11497<->IsAbsolutelyIrreducible(M) : ModRng -&gt; BoolElt, AlgMatElt, RngIntElt
5<->AbsolutelyIrreducibleModule(M) <->text1025.htm#11498<->AbsolutelyIrreducibleModule(M) : ModRng -&gt; ModRng
4<->ModAlg_Meataxe (Example H95E5)<->text1025.htm#11499<->ModAlg_Meataxe (Example H95E5)
4<->Example-Meataxe :<->text1025.htm#11499<->Example-Meataxe :: ModAlg_Meataxe (Example H95E5)
5<->MinimalField(M) <->text1025.htm#11500<->MinimalField(M) : ModRng -&gt; FldFin
5<->IsPermutationModule(M) <->text1025.htm#11501<->IsPermutationModule(M) : ModRng -&gt; BoolElt
3<->splitting :<->text1025.htm#11494<->splitting :: Reducibility (MODULES OVER AN ALGEBRA)
3<->composition-series :<->text1025.htm#11502<->composition-series :: Composition Series (MODULES OVER AN ALGEBRA)
5<->CompositionSeries(M) <->text1025.htm#11503<->CompositionSeries(M) : ModRng -&gt; [ ModRng ], [ ModRng ], AlgMatElt
5<->CompositionFactors(M) <->text1025.htm#11504<->CompositionFactors(M) : ModRng -&gt; [ ModRng ]
5<->Constituents(M) <->text1025.htm#11505<->Constituents(M) : ModRng -&gt; [ ModRng ], [ RngIntElt ]
5<->ConstituentsWithMultiplicities(M) <->text1025.htm#11506<->ConstituentsWithMultiplicities(M) : ModRng -&gt; [ &lt;ModRng, RngIntElt&gt; ], [ RngIntElt ]
4<->ModAlg_CompSeries (Example H95E6)<->text1025.htm#11507<->ModAlg_CompSeries (Example H95E6)
4<->Example-CompSeries :<->text1025.htm#11507<->Example-CompSeries :: ModAlg_CompSeries (Example H95E6)
3<->composition-series :<->text1025.htm#11502<->composition-series :: Composition Series (MODULES OVER AN ALGEBRA)
3<->minimal-submodule-socle-series :<->text1025.htm#11508<->minimal-submodule-socle-series :: Socle Series (MODULES OVER AN ALGEBRA)
5<->IsSemisimple(M) <->text1025.htm#11509<->IsSemisimple(M) : ModAlgBas -> BoolElt
5<->IsSemisimple(M) <->text1025.htm#11509<->IsSemisimple(M) : ModGrp -&gt; BoolElt
5<->MaximalSubmodules(M) <->text1025.htm#11510<->MaximalSubmodules(M) : ModRng -&gt; [ ModRng ], BoolElt
5<->JacobsonRadical(M) <->text1025.htm#11511<->JacobsonRadical(M) : ModRng -&gt; ModRng, Map
5<->MinimalSubmodules(M) <->text1025.htm#11512<->MinimalSubmodules(M) : ModRng -&gt; [ ModRng ], BoolElt
5<->MinimalSubmodules(M, F) <->text1025.htm#11513<->MinimalSubmodules(M, F) : ModRng, ModRng -&gt; [ ModRng ], BoolElt
5<->MinimalSubmodule(M) <->text1025.htm#11514<->MinimalSubmodule(M) : ModRng -&gt; ModRng
5<->Socle(M) <->text1025.htm#11515<->Socle(M) : ModRng -&gt; ModRng, Map
5<->SocleSeries(M) <->text1025.htm#11516<->SocleSeries(M) : ModRng -&gt; [ ModRng ], [ ModRng ], AlgMatElt
5<->SocleFactors(M) <->text1025.htm#11517<->SocleFactors(M) : ModRng -&gt; [ ModRng ]
4<->ModAlg_Minimals (Example H95E7)<->text1025.htm#11518<->ModAlg_Minimals (Example H95E7)
4<->Example-Minimals :<->text1025.htm#11518<->Example-Minimals :: ModAlg_Minimals (Example H95E7)
3<->minimal-submodule-socle-series :<->text1025.htm#11508<->minimal-submodule-socle-series :: Socle Series (MODULES OVER AN ALGEBRA)
3<->structure :<->text1025.htm#11493<->structure :: Structure of a Module (MODULES OVER AN ALGEBRA)
3<->complements :<->text1025.htm#11519<->complements :: Decomposability and Complements (MODULES OVER AN ALGEBRA)
5<->IsDecomposable(M) <->text1025.htm#11520<->IsDecomposable(M) : ModRng -&gt; BoolElt, ModRng, ModRng
5<->IndecomposableSummands :: DirectSumDecomposition(M) <->text1025.htm#11521<->IndecomposableSummands :: DirectSumDecomposition(M) : ModRng -&gt; [ ModRng ]
5<->DirectSumDecomposition(M) <->text1025.htm#11521<->DirectSumDecomposition(M) : ModRng -&gt; [ ModRng ]
5<->HasComplement(M, S) <->text1025.htm#11522<->HasComplement(M, S) : ModRng, ModRng -> BoolElt, ModRng
5<->IsDirectSummand :: HasComplement(M, S) <->text1025.htm#11522<->IsDirectSummand :: HasComplement(M, S) : ModGrp, ModGrp -&gt; BoolElt, ModGrp
5<->IsDirectSummand(M, S) : ModRng, ModRng -> BoolElt, ModRng :: HasComplement(M, S) <->text1025.htm#11522<->IsDirectSummand(M, S) : ModRng, ModRng -> BoolElt, ModRng :: HasComplement(M, S) : ModGrp, ModGrp -&gt; BoolElt, ModGrp
5<->HasComplement(M, S) <->text1025.htm#11522<->HasComplement(M, S) : ModGrp, ModGrp -&gt; BoolElt, ModGrp
5<->Complements(M, S) <->text1025.htm#11523<->Complements(M, S) : ModRng, ModRng -> [ ModRng ]
5<->Complements(M, S) <->text1025.htm#11523<->Complements(M, S) : ModGrp, ModGrp -&gt; [ ModGrp ]
4<->ModAlg_Decomposable (Example H95E8)<->text1025.htm#11524<->ModAlg_Decomposable (Example H95E8)
4<->Example-Decomposable :<->text1025.htm#11524<->Example-Decomposable :: ModAlg_Decomposable (Example H95E8)
3<->complements :<->text1025.htm#11519<->complements :: Decomposability and Complements (MODULES OVER AN ALGEBRA)
3<->submodule-lattice :<->text1025.htm#11525<->submodule-lattice :: Lattice of Submodules (MODULES OVER AN ALGEBRA)
3<->create :<->text1025.htm#11526<->create :: Creating Lattices (MODULES OVER AN ALGEBRA)
5<->SubmoduleLattice(M) <->text1025.htm#11527<->SubmoduleLattice(M) : ModRng -&gt; SubModLat, BoolElt
5<->SubmoduleLatticeAbort(M, n) <->text1025.htm#11528<->SubmoduleLatticeAbort(M, n) : ModRng, RngIntElt -&gt; BoolElt, SubModLat
5<->SetVerbose("SubmoduleLattice", i) <->text1025.htm#11529<->SetVerbose("SubmoduleLattice", i) : MonStgElt, RngIntElt -&gt;
5<->Submodules(M) <->text1025.htm#11530<->Submodules(M) : ModRng -&gt; [ModRng]
4<->ModAlg_CreateLattice (Example H95E9)<->text1025.htm#11531<->ModAlg_CreateLattice (Example H95E9)
4<->Example-CreateLattice :<->text1025.htm#11531<->Example-CreateLattice :: ModAlg_CreateLattice (Example H95E9)
3<->create :<->text1025.htm#11526<->create :: Creating Lattices (MODULES OVER AN ALGEBRA)
3<->lattices :<->text1025.htm#11532<->lattices :: Operations on Lattices (MODULES OVER AN ALGEBRA)
5<-># L <->text1025.htm#11533<-># L : SubModLat -&gt; RngIntElt
5<->L ! i<->text1025.htm#11534<->L ! i: SubModLat, RngIntElt -&gt; SubModLatElt
5<->L ! S<->text1025.htm#11535<->L ! S: SubModLat, ModRng -&gt; SubModLatElt
5<->Bottom(L)<->text1025.htm#11536<->Bottom(L): SubModLat -&gt; SubModLatElt
5<->Random(L)<->text1025.htm#11537<->Random(L): SubModLat -&gt; SubModLatElt
5<->Top(L)<->text1025.htm#11538<->Top(L): SubModLat -&gt; SubModLatElt
3<->lattices :<->text1025.htm#11532<->lattices :: Operations on Lattices (MODULES OVER AN ALGEBRA)
3<->lattice-element :<->text1025.htm#11539<->lattice-element :: Operations on Lattice Elements (MODULES OVER AN ALGEBRA)
5<->IntegerRing() ! e <->text1025.htm#11540<->IntegerRing() ! e : RngInt, SubModLatElt -&gt; RngIntElt
5<->e + f <->text1025.htm#11541<->e + f : SubModLatElt, SubModLatElt -&gt; SubModLatElt
5<->e meet f <->text1025.htm#11542<->e meet f : SubModLatElt, SubModLatElt -&gt; SubModLatElt
5<->e eq f <->text1025.htm#11543<->e eq f : SubModLatElt, SubModLatElt -&gt; SubModLatElt
5<->e subset f <->text1025.htm#11544<->e subset f : SubModLatElt, SubModLatElt -&gt; SubModLatElt
5<->MaximalSubmodules(e) <->text1025.htm#11545<->MaximalSubmodules(e) : SubModLatElt -&gt; { SubModLatElt }
5<->MinimalSupermodules(e) <->text1025.htm#11546<->MinimalSupermodules(e) : SubModLatElt -&gt; { SubModLatElt }
5<->Module(e) <->text1025.htm#11547<->Module(e) : SubModLatElt -&gt; ModRng
3<->lattice-element :<->text1025.htm#11539<->lattice-element :: Operations on Lattice Elements (MODULES OVER AN ALGEBRA)
3<->lattice-element :<->text1025.htm#11548<->lattice-element :: Properties of Lattice Elements (MODULES OVER AN ALGEBRA)
5<->Dimension(e) <->text1025.htm#11549<->Dimension(e) : SubModLatElt -&gt; RngIntElt
5<->JacobsonRadical(e) <->text1025.htm#11550<->JacobsonRadical(e) : SubModLatElt -&gt; SubModLatElt
5<->Morphism(e) <->text1025.htm#11551<->Morphism(e) : SubModLatElt -&gt; ModMatRngElt
4<->ModAlg_LatticeOps (Example H95E10)<->text1025.htm#11552<->ModAlg_LatticeOps (Example H95E10)
4<->Example-LatticeOps :<->text1025.htm#11552<->Example-LatticeOps :: ModAlg_LatticeOps (Example H95E10)
3<->lattice-element :<->text1025.htm#11548<->lattice-element :: Properties of Lattice Elements (MODULES OVER AN ALGEBRA)
3<->submodule-lattice :<->text1025.htm#11525<->submodule-lattice :: Lattice of Submodules (MODULES OVER AN ALGEBRA)
3<->homomorphism :<->text1025.htm#11553<->homomorphism :: Homomorphisms (MODULES OVER AN ALGEBRA)
3<->homomorphism :<->text1025.htm#11554<->homomorphism :: Creating Homomorphisms (MODULES OVER AN ALGEBRA)
5<->hom< M -> N | X > <->text1025.htm#11555<->hom&lt; M -&gt; N | X &gt; : ModRng, ModRng, ModMatElt -&gt; Map
5<->H ! f <->text1025.htm#11556<->H ! f : ModMatRng, Map -&gt; ModMatRngElt
5<->IsModuleHomomorphism(X) <->text1025.htm#11557<->IsModuleHomomorphism(X) : ModMatFldElt -&gt; BoolElt
3<->homomorphism :<->text1025.htm#11554<->homomorphism :: Creating Homomorphisms (MODULES OVER AN ALGEBRA)
3<->homomorphism :<->text1025.htm#11558<->homomorphism :: Hom(M, N) (MODULES OVER AN ALGEBRA)
5<->Hom(M, N) <->text1025.htm#11559<->Hom(M, N) : ModRng, ModRng -&gt; ModMatRng
5<->AHom(M, N) <->text1025.htm#11560<->AHom(M, N) : ModRng, ModRng -&gt; ModMatRng
5<->GHomOverCentralizingField(M, N) <->text1025.htm#11561<->GHomOverCentralizingField(M, N) : ModRng, ModRng -> ModRng
5<->GHomOverCentralizingField(M, N) <->text1025.htm#11561<->GHomOverCentralizingField(M, N) : ModGrp, ModGrp -&gt; ModMatGrp
4<->ModAlg_EndoRing (Example H95E11)<->text1025.htm#11562<->ModAlg_EndoRing (Example H95E11)
4<->Example-EndoRing :<->text1025.htm#11562<->Example-EndoRing :: ModAlg_EndoRing (Example H95E11)
4<->ModAlg_CreateHomGHom (Example H95E12)<->text1025.htm#11563<->ModAlg_CreateHomGHom (Example H95E12)
4<->Example-CreateHomGHom :<->text1025.htm#11563<->Example-CreateHomGHom :: ModAlg_CreateHomGHom (Example H95E12)
3<->homomorphism :<->text1025.htm#11558<->homomorphism :: Hom(M, N) (MODULES OVER AN ALGEBRA)
3<->endomorphisms-automorphisms :<->text1025.htm#11564<->endomorphisms-automorphisms :: Endo-- and Automorphisms (MODULES OVER AN ALGEBRA)
5<->EndomorphismRing :: EndomorphismAlgebra(M) <->text1025.htm#11565<->EndomorphismRing :: EndomorphismAlgebra(M) : ModRng -&gt; AlgMat
5<->EndomorphismAlgebra(M) <->text1025.htm#11565<->EndomorphismAlgebra(M) : ModRng -&gt; AlgMat
5<->CentreOfEndomorphismRing(M) <->text1025.htm#11566<->CentreOfEndomorphismRing(M) : ModRng -&gt; AlgMat
5<->AutomorphismGroup(M) <->text1025.htm#11567<->AutomorphismGroup(M) : ModRng -&gt; GrpMat
5<->IsIsomorphic(M, N) <->text1025.htm#11568<->IsIsomorphic(M, N) : ModRng, ModRng -&gt; BoolElt, AlgMatElt
4<->ModAlg_EndoRing (Example H95E13)<->text1025.htm#11569<->ModAlg_EndoRing (Example H95E13)
4<->Example-EndoRing :<->text1025.htm#11569<->Example-EndoRing :: ModAlg_EndoRing (Example H95E13)
3<->endomorphisms-automorphisms :<->text1025.htm#11564<->endomorphisms-automorphisms :: Endo-- and Automorphisms (MODULES OVER AN ALGEBRA)
3<->homomorphism :<->text1025.htm#11553<->homomorphism :: Homomorphisms (MODULES OVER AN ALGEBRA)
3<->modules-matrix-algebra :<->text1025.htm<->modules-matrix-algebra :: Modules over a Matrix Algebra (MODULES OVER AN ALGEBRA)
3<->modules-matrix-algebra :<->text1026.htm<->modules-matrix-algebra :: Modules over a General Algebra (MODULES OVER AN ALGEBRA)
3<->introduction :<->text1026.htm#11571<->introduction :: Introduction (MODULES OVER AN ALGEBRA)
3<->algmod-construction :<->text1026.htm#11572<->algmod-construction :: Construction of Algebra Modules (MODULES OVER AN ALGEBRA)
5<->Module(A, m)<->text1026.htm#11573<->Module(A, m): Alg, Map[SetCart, ModRng] -&gt; ModAlg
4<->ModAlg_AlgModCreate (Example H95E14)<->text1026.htm#11574<->ModAlg_AlgModCreate (Example H95E14)
4<->Example-AlgModCreate :<->text1026.htm#11574<->Example-AlgModCreate :: ModAlg_AlgModCreate (Example H95E14)
3<->algmod-construction :<->text1026.htm#11572<->algmod-construction :: Construction of Algebra Modules (MODULES OVER AN ALGEBRA)
3<->action :<->text1026.htm#11575<->action :: The Action of an Algebra Element (MODULES OVER AN ALGEBRA)
5<->a ^ v <->text1026.htm#11576<->a ^ v : AlgElt, ModAlgElt -&gt; ModAlgElt
5<->v ^ a <->text1026.htm#11577<->v ^ a : ModAlgElt, AlgElt -&gt; ModAlgElt
5<->ActionMatrix(M, a)<->text1026.htm#11578<->ActionMatrix(M, a): ModAlg, AlgElt -&gt; AlgMatElt
4<->ModAlg_Action (Example H95E15)<->text1026.htm#11579<->ModAlg_Action (Example H95E15)
4<->Example-Action :<->text1026.htm#11579<->Example-Action :: ModAlg_Action (Example H95E15)
3<->action :<->text1026.htm#11575<->action :: The Action of an Algebra Element (MODULES OVER AN ALGEBRA)
3<->related-structures :<->text1026.htm#11580<->related-structures :: Related Structures of an Algebra  Module (MODULES OVER AN ALGEBRA)
5<->Algebra(M)<->text1026.htm#11581<->Algebra(M): ModAlg -&gt; Alg
5<->CoefficientRing(M)<->text1026.htm#11582<->CoefficientRing(M): ModAlg -&gt; Fld
5<->Basis(M)<->text1026.htm#11583<->Basis(M): ModAlg -&gt; SeqEnum
3<->related-structures :<->text1026.htm#11580<->related-structures :: Related Structures of an Algebra  Module (MODULES OVER AN ALGEBRA)
3<->properties :<->text1026.htm#11584<->properties :: Properties of an Algebra Module (MODULES OVER AN ALGEBRA)
5<->IsLeftModule(M)<->text1026.htm#11585<->IsLeftModule(M): ModAlg -&gt; BoolElt
5<->IsRightModule(M)<->text1026.htm#11586<->IsRightModule(M): ModAlg -&gt; BoolElt
5<->Dimension(M)<->text1026.htm#11587<->Dimension(M): ModAlg -&gt; RngIntElt
3<->properties :<->text1026.htm#11584<->properties :: Properties of an Algebra Module (MODULES OVER AN ALGEBRA)
3<->creation-other-modules :<->text1026.htm#11588<->creation-other-modules :: Creation of Algebra Modules from other Algebra Modules (MODULES OVER AN ALGEBRA)
5<->DirectSum(Q)<->text1026.htm#11589<->DirectSum(Q): SeqEnum -&gt; ModAlg, SeqEnum, SeqEnum
5<->SubalgebraModule(B, M)<->text1026.htm#11590<->SubalgebraModule(B, M): Alg, ModAlg -&gt; ModAlg
5<->ModuleWithBasis(Q)<->text1026.htm#11591<->ModuleWithBasis(Q): SeqEnum -&gt; ModAlg
4<->ModAlg_OtherMod (Example H95E16)<->text1026.htm#11592<->ModAlg_OtherMod (Example H95E16)
4<->Example-OtherMod :<->text1026.htm#11592<->Example-OtherMod :: ModAlg_OtherMod (Example H95E16)
5<->sub <->text1026.htm#11593<->sub< M | e1, ..., en > : ModAlg, ModAlgElt, ..., ModAlgElt -> ModAlg
5<->sub< M | S > <->text1026.htm#11593<->sub&lt; M | S &gt; : ModAlg, [ModAlgElt] -&gt; ModAlg
5<->quo <->text1026.htm#11594<->quo< M | e1, ..., en > : ModAlg, ModAlgElt, ..., ModAlgElt -> ModAlg
5<->quo <->text1026.htm#11594<->quo< M | S > : ModAlg, ModAlg -> ModAlg
5<->quo< M | S > <->text1026.htm#11594<->quo&lt; M | S &gt; : ModAlg, [ModAlgElt] -&gt; ModAlg
3<->creation-other-modules :<->text1026.htm#11588<->creation-other-modules :: Creation of Algebra Modules from other Algebra Modules (MODULES OVER AN ALGEBRA)
3<->cyc_alg_mod :<->text1026.htm#11595<->cyc_alg_mod :: Cyclic Algebras and their Modules (MODULES OVER AN ALGEBRA)
5<->IsCyclic(R) <->text1026.htm#11596<->IsCyclic(R) : AlgAss  -&gt; BoolElt, AlgAssElt
5<->IsSimilar(M, N) <->text1026.htm#11597<->IsSimilar(M, N) : ModRng, ModRng -&gt; BoolElt, Map
4<->ModAlg_Star_Alg (Example H95E17)<->text1026.htm#11598<->ModAlg_Star_Alg (Example H95E17)
4<->Example-Star_Alg :<->text1026.htm#11598<->Example-Star_Alg :: ModAlg_Star_Alg (Example H95E17)
3<->cyc_alg_mod :<->text1026.htm#11595<->cyc_alg_mod :: Cyclic Algebras and their Modules (MODULES OVER AN ALGEBRA)
3<->modules-matrix-algebra :<->text1026.htm<->modules-matrix-algebra :: Modules over a General Algebra (MODULES OVER AN ALGEBRA)
3<->general :<->text1023.htm<->general :: MODULES OVER AN ALGEBRA
3<->general :<->text1028.htm<->general :: K[G]-MODULES AND GROUP REPRESENTATIONS
3<->introduction :<->text1029.htm<->introduction :: Introduction (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->K[G]-module :<->text1030.htm<->K[G]-module :: Construction of K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->arbitrary-K[G]-module :<->text1030.htm#11603<->arbitrary-K[G]-module :: General K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->GModule(G, A) <->text1030.htm#11604<->GModule(G, A) : Grp, AlgMat -&gt; ModGrp
5<->GModule(G, Q) <->text1030.htm#11605<->GModule(G, Q) : Grp, [ GrpMatElt ] -&gt; ModGrp
5<->TrivialModule(G, K) <->text1030.htm#11606<->TrivialModule(G, K) : Grp, Fld -&gt; ModGrp
4<->ModGrp_CreateL27 (Example H96E1)<->text1030.htm#11607<->ModGrp_CreateL27 (Example H96E1)
4<->Example-CreateL27 :<->text1030.htm#11607<->Example-CreateL27 :: ModGrp_CreateL27 (Example H96E1)
4<->ModGrp_CreateMatrices (Example H96E2)<->text1030.htm#11608<->ModGrp_CreateMatrices (Example H96E2)
4<->Example-CreateMatrices :<->text1030.htm#11608<->Example-CreateMatrices :: ModGrp_CreateMatrices (Example H96E2)
3<->arbitrary-K[G]-module :<->text1030.htm#11603<->arbitrary-K[G]-module :: General K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->natural-K[G]-module :<->text1030.htm#11609<->natural-K[G]-module :: Natural K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->GModule(G, K) <->text1030.htm#11610<->GModule(G, K) : GrpPerm, Rng -&gt; ModGrp
5<->GModule(G) <->text1030.htm#11611<->GModule(G) : GrpMat -&gt; ModGrp
4<->ModGrp_CreateM11 (Example H96E3)<->text1030.htm#11612<->ModGrp_CreateM11 (Example H96E3)
4<->Example-CreateM11 :<->text1030.htm#11612<->Example-CreateM11 :: ModGrp_CreateM11 (Example H96E3)
3<->natural-K[G]-module :<->text1030.htm#11609<->natural-K[G]-module :: Natural K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->section-actions :<->text1030.htm#11613<->section-actions :: Action on an Elementary Abelian Section (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->GModule(G, A) <->text1030.htm#11614<->GModule(G, A) : Grp, Grp -> ModGrp, Map
5<->GModule(G, A, B) <->text1030.htm#11614<->GModule(G, A, B) : Grp, Grp, Grp -&gt; ModGrp, Map
4<->ModGrp_CreateA4wrC3 (Example H96E4)<->text1030.htm#11615<->ModGrp_CreateA4wrC3 (Example H96E4)
4<->Example-CreateA4wrC3 :<->text1030.htm#11615<->Example-CreateA4wrC3 :: ModGrp_CreateA4wrC3 (Example H96E4)
3<->section-actions :<->text1030.htm#11613<->section-actions :: Action on an Elementary Abelian Section (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->permutation-modules :<->text1030.htm#11616<->permutation-modules :: Permutation Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->PermutationModule(G, H, K) <->text1030.htm#11617<->PermutationModule(G, H, K) : Grp, Grp, Fld -&gt; ModGrp
5<->PermutationModule(G, K) <->text1030.htm#11618<->PermutationModule(G, K) : Grp, Fld -&gt; ModGrp
5<->PermutationModule(G, V) <->text1030.htm#11619<->PermutationModule(G, V) : Grp, ModTupFld -&gt; ModGrp
5<->PermutationModule(G, u) <->text1030.htm#11620<->PermutationModule(G, u) : Grp, ModTupFldElt -&gt; ModGrp
4<->ModGrp_CreateM12 (Example H96E5)<->text1030.htm#11621<->ModGrp_CreateM12 (Example H96E5)
4<->Example-CreateM12 :<->text1030.htm#11621<->Example-CreateM12 :: ModGrp_CreateM12 (Example H96E5)
4<->ModGrp_CreateA7 (Example H96E6)<->text1030.htm#11622<->ModGrp_CreateA7 (Example H96E6)
4<->Example-CreateA7 :<->text1030.htm#11622<->Example-CreateA7 :: ModGrp_CreateA7 (Example H96E6)
3<->permutation-modules :<->text1030.htm#11616<->permutation-modules :: Permutation Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->polynomial-ring-action :<->text1030.htm#11623<->polynomial-ring-action :: Action on a Polynomial Ring (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->GModule(G, P, d) <->text1030.htm#11624<->GModule(G, P, d) : Grp, RngMPol, RngIntElt -&gt; ModGrp, Map, @ RngMPolElt @
5<->GModule(G, I, J) <->text1030.htm#11625<->GModule(G, I, J) : Grp, RngMPol, RngMPol -&gt; ModGrp, Map, @ RngMPolElt @
5<->GModule(G, Q) <->text1030.htm#11626<->GModule(G, Q) : Grp, RngMPolRes -&gt; ModGrp, Map, @ RngMPolElt @
4<->ModGrp_CreatePolyAction (Example H96E7)<->text1030.htm#11627<->ModGrp_CreatePolyAction (Example H96E7)
4<->Example-CreatePolyAction :<->text1030.htm#11627<->Example-CreatePolyAction :: ModGrp_CreatePolyAction (Example H96E7)
3<->polynomial-ring-action :<->text1030.htm#11623<->polynomial-ring-action :: Action on a Polynomial Ring (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->K[G]-module :<->text1030.htm<->K[G]-module :: Construction of K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->representation :<->text1031.htm<->representation :: The Representation Afforded by a K[G]-module (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->GModuleAction(M) <->text1031.htm#11629<->GModuleAction(M) : ModGrp -&gt; Map(Hom)
5<->Representation(M) <->text1031.htm#11630<->Representation(M) : ModGrp -&gt; Map(Hom)
4<->ModGrp_Representation (Example H96E8)<->text1031.htm#11631<->ModGrp_Representation (Example H96E8)
4<->Example-Representation :<->text1031.htm#11631<->Example-Representation :: ModGrp_Representation (Example H96E8)
4<->ModGrp_Dual (Example H96E9)<->text1031.htm#11632<->ModGrp_Dual (Example H96E9)
4<->Example-Dual :<->text1031.htm#11632<->Example-Dual :: ModGrp_Dual (Example H96E9)
5<->RightActionGenerator :: ActionGenerator(M, i) <->text1031.htm#11633<->RightActionGenerator :: ActionGenerator(M, i) : ModGrp, RngIntElt -&gt; AlgMatElt
5<->ActionGenerator(M, i) <->text1031.htm#11633<->ActionGenerator(M, i) : ModGrp, RngIntElt -&gt; AlgMatElt
5<->ActionGenerators(M) <->text1031.htm#11634<->ActionGenerators(M) : ModGrp -&gt; [ AlgMatElt ]
5<->Nagens :: NumberOfActionGenerators(M) <->text1031.htm#11635<->Nagens :: NumberOfActionGenerators(M) : ModGrp -&gt; RngIntElt
5<->NumberOfActionGenerators(M) <->text1031.htm#11635<->NumberOfActionGenerators(M) : ModGrp -&gt; RngIntElt
5<->ActionGroup(M) <->text1031.htm#11636<->ActionGroup(M) : ModGrp -&gt; GrpMat
5<->Sections (G) <->text1031.htm#11637<->Sections (G) : GrpMat -&gt; List
4<->ModGrp_Sections (Example H96E10)<->text1031.htm#11638<->ModGrp_Sections (Example H96E10)
4<->Example-Sections :<->text1031.htm#11638<->Example-Sections :: ModGrp_Sections (Example H96E10)
3<->representation :<->text1031.htm<->representation :: The Representation Afforded by a K[G]-module (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->operation :<->text1032.htm<->operation :: Standard Constructions (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->changing-ring :<->text1032.htm#11640<->changing-ring :: Changing the Coefficient Ring (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->ChangeRing(M, S) <->text1032.htm#11641<->ChangeRing(M, S) : ModRng, Rng -&gt; ModRng, Map
5<->ChangeRing(M, S, f) <->text1032.htm#11642<->ChangeRing(M, S, f) : ModRng, Rng, Map -&gt; ModRng, Map
3<->changing-ring :<->text1032.htm#11640<->changing-ring :: Changing the Coefficient Ring (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->changing-ring :<->text1032.htm#11643<->changing-ring :: Writing a Module over a Smaller  Field (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->IsRealisableOverSmallerField(M) <->text1032.htm#11644<->IsRealisableOverSmallerField(M) : ModGrp -&gt; BoolElt, ModGrp
5<->IsRealisableOverSubfield(M, F) <->text1032.htm#11645<->IsRealisableOverSubfield(M, F) : ModGrp, FldFin -&gt; BoolElt, ModGrp
5<->WriteOverSmallerField(M, F) <->text1032.htm#11646<->WriteOverSmallerField(M, F) : ModGrp, FldFin -&gt; ModGrp, Map
5<->AbsoluteModuleOverMinimalField(M, F) <->text1032.htm#11647<->AbsoluteModuleOverMinimalField(M, F) : ModGrp, FldFin -&gt; ModGrp
5<->AbsoluteModuleOverMinimalField(M) <->text1032.htm#11648<->AbsoluteModuleOverMinimalField(M) : ModGrp -&gt; ModGrp
5<->Minimize(R) <->text1032.htm#11649<->Minimize(R) : Map -&gt; Map
5<->AbsoluteModulesOverMinimalField(Q, F) <->text1032.htm#11650<->AbsoluteModulesOverMinimalField(Q, F) : [ ModGrp ], FldFin -&gt; [ ModGrp ]
5<->ModuleOverSmallerField(M, F) <->text1032.htm#11651<->ModuleOverSmallerField(M, F) : ModGrp, FldFin -&gt; ModGrp
5<->ModulesOverSmallerField(Q, F) <->text1032.htm#11652<->ModulesOverSmallerField(Q, F) : SeqEnum, FldFin -&gt; ModGrp
5<->ModulesOverCommonField(M, N) <->text1032.htm#11653<->ModulesOverCommonField(M, N) : ModGrp, ModGrp -&gt; ModGrp, ModGrp
5<->WriteGModuleOver(M, K) <->text1032.htm#11654<->WriteGModuleOver(M, K) : ModGrp, FldAlg -&gt; ModGrp
5<->WriteRepresentationOver(R, K) <->text1032.htm#11655<->WriteRepresentationOver(R, K) : Map, FldAlg -&gt; Map
4<->ModGrp_minimal-field (Example H96E11)<->text1032.htm#11656<->ModGrp_minimal-field (Example H96E11)
4<->Example-minimal-field :<->text1032.htm#11656<->Example-minimal-field :: ModGrp_minimal-field (Example H96E11)
3<->changing-ring :<->text1032.htm#11643<->changing-ring :: Writing a Module over a Smaller  Field (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->direct-sum :<->text1032.htm#11657<->direct-sum :: Direct Sum (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->DirectSum(M, N) <->text1032.htm#11658<->DirectSum(M, N) : ModGrp, ModGrp -&gt; ModGrp, Map, Map, Map, Map
5<->DirectSum(Q) <->text1032.htm#11659<->DirectSum(Q) : [ ModGrp ] -&gt; [ ModGrp ], [ Map ], [ Map ]
3<->direct-sum :<->text1032.htm#11657<->direct-sum :: Direct Sum (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->tensor-products :<->text1032.htm#11660<->tensor-products :: Tensor Products of K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->TensorProduct(M, N) <->text1032.htm#11661<->TensorProduct(M, N) : ModGrp, ModGrp -&gt; ModGrp
5<->TensorPower(M, n) <->text1032.htm#11662<->TensorPower(M, n) : ModGrp, RngIntElt -&gt; ModGrp
5<->ExteriorSquare(M) <->text1032.htm#11663<->ExteriorSquare(M) : ModGrp -&gt; ModGrp
5<->SymmetricSquare(M) <->text1032.htm#11664<->SymmetricSquare(M) : ModGrp -&gt; ModGrp
3<->tensor-products :<->text1032.htm#11660<->tensor-products :: Tensor Products of K[G]-Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->induction-restriction :<->text1032.htm#11665<->induction-restriction :: Induction and Restriction (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->Dual(M) <->text1032.htm#11666<->Dual(M) : ModGrp -&gt; ModGrp
5<->Induction(M, G) <->text1032.htm#11667<->Induction(M, G) : ModGrp, Grp -&gt; ModGrp
5<->Induction(R, G) <->text1032.htm#11668<->Induction(R, G) : Map, Grp -&gt; Map
5<->Restriction(M, H) <->text1032.htm#11669<->Restriction(M, H) : ModGrp, Grp -&gt; ModGrp
4<->ModGrp_GModules1 (Example H96E12)<->text1032.htm#11670<->ModGrp_GModules1 (Example H96E12)
4<->Example-GModules1 :<->text1032.htm#11670<->Example-GModules1 :: ModGrp_GModules1 (Example H96E12)
3<->induction-restriction :<->text1032.htm#11665<->induction-restriction :: Induction and Restriction (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->fixed-points :<->text1032.htm#11671<->fixed-points :: The Fixed-point Space of a Module (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->Fix(M)<->text1032.htm#11672<->Fix(M): Mod -&gt; Mod
3<->fixed-points :<->text1032.htm#11671<->fixed-points :: The Fixed-point Space of a Module (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->changing-basis :<->text1032.htm#11673<->changing-basis :: Changing Basis (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->M ^ T <->text1032.htm#11674<->M ^ T : ModGrp, AlgMatElt -&gt; ModGrp
3<->changing-basis :<->text1032.htm#11673<->changing-basis :: Changing Basis (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->operation :<->text1032.htm<->operation :: Standard Constructions (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->properties-modules :<->text1033.htm<->properties-modules :: Properties of Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->IsIrreducible(M) <->text1033.htm#11676<->IsIrreducible(M) : ModRng -&gt; BoolElt, ModRng, ModRng
5<->IsAbsolutelyIrreducible(M) <->text1033.htm#11677<->IsAbsolutelyIrreducible(M) : ModRng -&gt; BoolElt, AlgMatElt, RngIntElt
5<->IsDecomposable(M) <->text1033.htm#11678<->IsDecomposable(M) : ModRng -&gt; BoolElt, ModRng, ModRng
5<->IsPermutationModule(M) <->text1033.htm#11679<->IsPermutationModule(M) : ModRng -&gt; BoolElt
5<->IsProjective(M) <->text1033.htm#11680<->IsProjective(M) : ModGrp -&gt; BoolElt
3<->properties-modules :<->text1033.htm<->properties-modules :: Properties of Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules :<->text1034.htm<->irreducible-modules :: The Construction of all  Irreducible Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules :<->text1034.htm#11682<->irreducible-modules :: Generic Functions for Finding Irreducible Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->AbsolutelyIrreducibleModules :: IrreducibleModules(G, K : parameters) <->text1034.htm#11683<->AbsolutelyIrreducibleModules :: IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->IrreducibleModules(G, K : parameters) <->text1034.htm#11683<->IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
4<->ModGrp_IrreducibleModules (Example H96E13)<->text1034.htm#11684<->ModGrp_IrreducibleModules (Example H96E13)
4<->Example-IrreducibleModules :<->text1034.htm#11684<->Example-IrreducibleModules :: ModGrp_IrreducibleModules (Example H96E13)
3<->irreducible-modules :<->text1034.htm#11682<->irreducible-modules :: Generic Functions for Finding Irreducible Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules-perm-mat :<->text1034.htm#11685<->irreducible-modules-perm-mat :: The Burnside Algorithm (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->AbsolutelyIrreducibleModulesBurnside(G, K : parameters ) <->text1034.htm#11686<->AbsolutelyIrreducibleModulesBurnside(G, K : parameters ) : Grp, FldFin -&gt; [ ModGrp ]
5<->IrreducibleModulesBurnside(G, K : parameters ) <->text1034.htm#11687<->IrreducibleModulesBurnside(G, K : parameters ) : Grp, FldFin -&gt; [ ModGrp ]
5<->AbsolutelyIrreducibleConstituents(M) <->text1034.htm#11688<->AbsolutelyIrreducibleConstituents(M) : ModGrp -&gt; [ ModGrp ]
4<->ModGrp_IrreducibleModules_M11 (Example H96E14)<->text1034.htm#11689<->ModGrp_IrreducibleModules_M11 (Example H96E14)
4<->Example-IrreducibleModules_M11 :<->text1034.htm#11689<->Example-IrreducibleModules_M11 :: ModGrp_IrreducibleModules_M11 (Example H96E14)
3<->irreducible-modules-perm-mat :<->text1034.htm#11685<->irreducible-modules-perm-mat :: The Burnside Algorithm (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules-sol :<->text1034.htm#11690<->irreducible-modules-sol :: The Schur Algorithm for Soluble  Groups (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->AbsolutelyIrreducibleModulesSchur :: IrreducibleModules(G, K : parameters) <->text1034.htm#11691<->AbsolutelyIrreducibleModulesSchur :: IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->AbsolutelyIrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleModules(G, K : parameters) <->text1034.htm#11691<->AbsolutelyIrreducibleModulesSchur(G, k, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->AbsolutelyIrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: IrreducibleModules(G, K : parameters) <->text1034.htm#11691<->AbsolutelyIrreducibleModulesSchur(G, k, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule] :: IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->AbsolutelyIrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleModules(G, K : parameters) <->text1034.htm#11691<->AbsolutelyIrreducibleModulesSchur(G, k, L, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule] :: IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->IrreducibleModules(G, K : parameters) <->text1034.htm#11691<->IrreducibleModules(G, K : parameters) : Grp, Fld -&gt; SeqEnum
5<->IrreducibleModulesSchur(G, K, i$\colon$ \parameters) <->text1034.htm#11692<->IrreducibleModulesSchur(G, K, i$\colon$ \parameters) : GrpPC, Rng, RngIntElt -> List[GModule]
5<->IrreducibleModulesSchur(G, K, L$\colon$ \parameters) <->text1034.htm#11692<->IrreducibleModulesSchur(G, K, L$\colon$ \parameters) : GrpPC, Rng, List[GModule] -> List[GModule]
5<->IrreducibleModulesSchur(G, K, L, i$\colon$ \parameters) <->text1034.htm#11692<->IrreducibleModulesSchur(G, K, L, i$\colon$ \parameters) : GrpPC, Rng, List[GModule], RngIntElt -> List[GModule]
5<->IrreducibleModulesSchur(G, K: parameters) <->text1034.htm#11692<->IrreducibleModulesSchur(G, K: parameters) : GrpPC, Rng -&gt;     List[GModule]
4<->ModGrp_Reps (Example H96E15)<->text1034.htm#11693<->ModGrp_Reps (Example H96E15)
4<->Example-Reps :<->text1034.htm#11693<->Example-Reps :: ModGrp_Reps (Example H96E15)
5<->AbsolutelyIrreducibleModulesInit :: AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) <->text1034.htm#11694<->AbsolutelyIrreducibleModulesInit :: AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) : GrpPC, Fld -&gt; SolRepProc
5<->AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) <->text1034.htm#11694<->AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) : GrpPC, Fld -&gt; SolRepProc
5<->IrreducibleModulesInit :: AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) <->text1034.htm#11694<->IrreducibleModulesInit :: AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) : GrpPC, Fld -&gt; SolRepProc
5<->AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) <->text1034.htm#11694<->AbsolutelyIrreducibleRepresentationsInit(G, F : parameters) : GrpPC, Fld -&gt; SolRepProc
5<->NextModule :: NextRepresentation(P) <->text1034.htm#11695<->NextModule :: NextRepresentation(P) : SolRepProc  -&gt; BoolElt, Map
5<->NextRepresentation(P) <->text1034.htm#11695<->NextRepresentation(P) : SolRepProc  -&gt; BoolElt, Map
5<->AbsolutelyIrreducibleRepresentationProcessDelete(~P) <->text1034.htm#11696<->AbsolutelyIrreducibleRepresentationProcessDelete(~P) : SolRepProc -&gt;
3<->irreducible-modules-sol :<->text1034.htm#11690<->irreducible-modules-sol :: The Schur Algorithm for Soluble  Groups (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules-integral :<->text1034.htm#11697<->irreducible-modules-integral :: The Rational Algorithm (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->IrreducibleModules(G, Q : parameters) <->text1034.htm#11698<->IrreducibleModules(G, Q : parameters) : Grp, FldRat -&gt; SeqEnum, SeqEnum
5<->RationalCharacterTable(G) <->text1034.htm#11699<->RationalCharacterTable(G) : Grp -&gt; SeqEnum, SeqEnum
4<->ModGrp_IrreducibleModules (Example H96E16)<->text1034.htm#11700<->ModGrp_IrreducibleModules (Example H96E16)
4<->Example-IrreducibleModules :<->text1034.htm#11700<->Example-IrreducibleModules :: ModGrp_IrreducibleModules (Example H96E16)
4<->ModGrp_IrreducibleModules2 (Example H96E17)<->text1034.htm#11701<->ModGrp_IrreducibleModules2 (Example H96E17)
4<->Example-IrreducibleModules2 :<->text1034.htm#11701<->Example-IrreducibleModules2 :: ModGrp_IrreducibleModules2 (Example H96E17)
3<->irreducible-modules-integral :<->text1034.htm#11697<->irreducible-modules-integral :: The Rational Algorithm (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->irreducible-modules :<->text1034.htm<->irreducible-modules :: The Construction of all  Irreducible Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->extensions :<->text1035.htm<->extensions :: Extensions of Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->Ext(M, N) <->text1035.htm#11703<->Ext(M, N) : ModGrp, ModGrp -&gt; ModTupFld
5<->Extension(M, N, e) <->text1035.htm#11704<->Extension(M, N, e) : ModGrp, ModGrp, ModTupFldElt -&gt; ModGrp, ModMatGrpElt, ModMatGrpElt
5<->MaximalExtension(M, N, E) <->text1035.htm#11705<->MaximalExtension(M, N, E) : ModGrp, ModGrp, ModTupFld -&gt; ModGrp
4<->ModGrp_ModuleExtensions (Example H96E18)<->text1035.htm#11706<->ModGrp_ModuleExtensions (Example H96E18)
4<->Example-ModuleExtensions :<->text1035.htm#11706<->Example-ModuleExtensions :: ModGrp_ModuleExtensions (Example H96E18)
3<->extensions :<->text1035.htm<->extensions :: Extensions of Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->projective-indecomposable-modules :<->text1036.htm<->projective-indecomposable-modules :: The Construction of Projective Indecomposable Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
5<->ProjectiveIndecomposableDimensions(G, K) <->text1036.htm#11708<->ProjectiveIndecomposableDimensions(G, K) : Grp, FldFin -&gt; SeqEnum
5<->ProjectiveIndecomposableModule(I: parameters) <->text1036.htm#11709<->ProjectiveIndecomposableModule(I: parameters) : ModGrp -&gt; ModGrp
5<->ProjectiveIndecomposableModules(G, K: parameters) <->text1036.htm#11710<->ProjectiveIndecomposableModules(G, K: parameters) : Grp, FldFin -&gt; SeqEnum
4<->ModGrp_Projective Indecomposables (Example H96E19)<->text1036.htm#11711<->ModGrp_Projective Indecomposables (Example H96E19)
4<->Example-Projective Indecomposables :<->text1036.htm#11711<->Example-Projective Indecomposables :: ModGrp_Projective Indecomposables (Example H96E19)
5<->CartanMatrix(G, K) <->text1036.htm#11712<->CartanMatrix(G, K) : Grp, FldFin -&gt; AlgMatElt
5<->AbsoluteCartanMatrix(G, K) <->text1036.htm#11713<->AbsoluteCartanMatrix(G, K) : Grp, FldFin -&gt; AlgMatElt
5<->DecompositionMatrix(G, K) <->text1036.htm#11714<->DecompositionMatrix(G, K) : Grp, FldFin -&gt; AlgMatElt
5<->ProjectiveCover(M) <->text1036.htm#11715<->ProjectiveCover(M) : ModGrp -&gt; ModGrp, ModMatGrpElt
5<->CohomologicalDimension(M, n) <->text1036.htm#11716<->CohomologicalDimension(M, n) : ModGrp, n -&gt; RngIntElt
5<->CohomologicalDimensions(M, n) <->text1036.htm#11717<->CohomologicalDimensions(M, n) : ModGrp, n -&gt; RngIntElt
4<->ModGrp_Cohomological Dimension (Example H96E20)<->text1036.htm#11718<->ModGrp_Cohomological Dimension (Example H96E20)
4<->Example-Cohomological Dimension :<->text1036.htm#11718<->Example-Cohomological Dimension :: ModGrp_Cohomological Dimension (Example H96E20)
3<->projective-indecomposable-modules :<->text1036.htm<->projective-indecomposable-modules :: The Construction of Projective Indecomposable Modules (K[G]-MODULES AND GROUP REPRESENTATIONS)
3<->general :<->text1028.htm<->general :: K[G]-MODULES AND GROUP REPRESENTATIONS
3<->AlgChtrElt :<->text1039.htm<->AlgChtrElt :: CHARACTERS OF FINITE GROUPS
3<->character :<->text1039.htm<->character :: CHARACTERS OF FINITE GROUPS
3<->creation :<->text1040.htm<->creation :: Creation Functions (CHARACTERS OF FINITE GROUPS)
3<->creation-class-function-ring :<->text1040.htm#11723<->creation-class-function-ring :: Structure Creation (CHARACTERS OF FINITE GROUPS)
5<->CharacterRing :: ClassFunctionSpace(G) <->text1040.htm#11724<->CharacterRing :: ClassFunctionSpace(G) : Grp -&gt; AlgChtr
5<->ClassFunctionSpace(G) <->text1040.htm#11724<->ClassFunctionSpace(G) : Grp -&gt; AlgChtr
5<->CharacterRing :: ClassFunctionSpace(Q) <->text1040.htm#11725<->CharacterRing :: ClassFunctionSpace(Q) : SeqEnum -&gt; AlgChtr
5<->ClassFunctionSpace(Q) <->text1040.htm#11725<->ClassFunctionSpace(Q) : SeqEnum -&gt; AlgChtr
3<->creation-class-function-ring :<->text1040.htm#11723<->creation-class-function-ring :: Structure Creation (CHARACTERS OF FINITE GROUPS)
3<->element :<->text1040.htm#11726<->element :: Element Creation (CHARACTERS OF FINITE GROUPS)
5<->! :: elt< R | a1, ..., ak :parameters> <->text1040.htm#11727<->! :: elt&lt; R | a<sub>1</sub>, ..., a<sub>k</sub> :parameters&gt; : AlgChtr, FldCycElt, ..., FldCycElt -&gt; AlgChtrElt
5<->elt< R | a1, ..., ak :parameters> <->text1040.htm#11727<->elt&lt; R | a<sub>1</sub>, ..., a<sub>k</sub> :parameters&gt; : AlgChtr, FldCycElt, ..., FldCycElt -&gt; AlgChtrElt
5<->R ! a <->text1040.htm#11728<->R ! a : AlgChtr, FldRatElt -> AlgChtrElt
5<->R ! a <->text1040.htm#11728<->R ! a : AlgChtr, FldCycElt -> AlgChtrElt
5<->R ! a <->text1040.htm#11728<->R ! a : AlgChtr, RngIntElt -&gt; AlgChtrElt
5<->Identity :: Id(R) <->text1040.htm#11729<->Identity :: Id(R) : AlgChtr -&gt; AlgChtrElt
5<->One :: Id(R) <->text1040.htm#11729<->One :: Id(R) : AlgChtr -&gt; AlgChtrElt
5<->PrincipalCharacter :: Id(R) <->text1040.htm#11729<->PrincipalCharacter :: Id(R) : AlgChtr -&gt; AlgChtrElt
5<->Id(R) <->text1040.htm#11729<->Id(R) : AlgChtr -&gt; AlgChtrElt
5<->Zero(R) <->text1040.htm#11730<->Zero(R) : AlgChtr -&gt; AlgChtrElt
3<->element :<->text1040.htm#11726<->element :: Element Creation (CHARACTERS OF FINITE GROUPS)
3<->irreducible :<->text1040.htm#11731<->irreducible :: The Table of Irreducible Characters (CHARACTERS OF FINITE GROUPS)
5<->KnownIrreducibles(G) <->text1040.htm#11732<->KnownIrreducibles(G) : Grp -> SeqEnum
5<->KnownIrreducibles(R) <->text1040.htm#11732<->KnownIrreducibles(R) : AlgChtr -&gt; SeqEnum
5<->CharacterTable(G :parameters) <->text1040.htm#11733<->CharacterTable(G :parameters) : Grp -&gt; SeqEnum
5<->CharacterTableDS(G :parameters) <->text1040.htm#11734<->CharacterTableDS(G :parameters) : Grp -&gt; SeqEnum, SeqEnum
5<->Basis(R) <->text1040.htm#11735<->Basis(R) : AlgChtr -&gt; SeqEnum
5<->CharacterTableConlon(G) <->text1040.htm#11736<->CharacterTableConlon(G) : Grp -&gt; SeqEnum
5<->LinearCharacters(G)<->text1040.htm#11737<->LinearCharacters(G): Grp -&gt; SeqEnum
5<->CharacterDegrees(G)<->text1040.htm#11738<->CharacterDegrees(G): GrpPC -> SeqEnum
5<->CharacterDegrees(G)<->text1040.htm#11738<->CharacterDegrees(G): GrpMat -> SeqEnum
5<->CharacterDegrees(G)<->text1040.htm#11738<->CharacterDegrees(G): GrpAb -> SeqEnum
5<->CharacterDegrees(G)<->text1040.htm#11738<->CharacterDegrees(G): GrpPerm -&gt; SeqEnum
5<->CharacterDegrees(G, z, p)<->text1040.htm#11739<->CharacterDegrees(G, z, p): GrpPC, GrpPCElt, RngIntElt -&gt; SeqEnum
5<->CharacterDegreesPGroup(G)<->text1040.htm#11740<->CharacterDegreesPGroup(G): GrpPC -&gt; SeqEnum
5<->RationalCharacterTable(G)<->text1040.htm#11741<->RationalCharacterTable(G): GrpFin -&gt; SeqEnum
5<->SaveCharacterTable(T, F)<->text1040.htm#11742<->SaveCharacterTable(T, F): SeqEnum[AlgChtrElt], MonStgElt -&gt;
4<->Chtr_CharacterTable (Example H97E1)<->text1040.htm#11743<->Chtr_CharacterTable (Example H97E1)
4<->Example-CharacterTable :<->text1040.htm#11743<->Example-CharacterTable :: Chtr_CharacterTable (Example H97E1)
4<->Chtr_CharacterTable2 (Example H97E2)<->text1040.htm#11744<->Chtr_CharacterTable2 (Example H97E2)
4<->Example-CharacterTable2 :<->text1040.htm#11744<->Example-CharacterTable2 :: Chtr_CharacterTable2 (Example H97E2)
3<->irreducible :<->text1040.htm#11731<->irreducible :: The Table of Irreducible Characters (CHARACTERS OF FINITE GROUPS)
3<->creation :<->text1040.htm<->creation :: Creation Functions (CHARACTERS OF FINITE GROUPS)
3<->ring :<->text1041.htm<->ring :: Character Ring Operations (CHARACTERS OF FINITE GROUPS)
3<->related :<->text1041.htm#11746<->related :: Related Structures (CHARACTERS OF FINITE GROUPS)
5<->Nclasses :: NumberOfClasses(R) <->text1041.htm#11747<->Nclasses :: NumberOfClasses(R) : AlgChtr -&gt; RngIntElt
5<->NumberOfClasses(R) <->text1041.htm#11747<->NumberOfClasses(R) : AlgChtr -&gt; RngIntElt
5<->ClassesData(R) <->text1041.htm#11748<->ClassesData(R) : AlgChtr -&gt; SeqEnum[Tup]
5<->Group(R) <->text1041.htm#11749<->Group(R) : AlgChtr -&gt; Grp
5<->PowerMap(R) <->text1041.htm#11750<->PowerMap(R) : AlgChtr -&gt; Map
5<->Kernel(x) <->text1041.htm#11751<->Kernel(x) : AlgChtrElt -&gt; Grp
5<->Centre(x) <->text1041.htm#11752<->Centre(x) : AlgChtrElt -&gt; Grp
5<->CoefficientField(x) <->text1041.htm#11753<->CoefficientField(x) : AlgChtrElt -&gt; Rng
5<->CharacterField(x) <->text1041.htm#11754<->CharacterField(x) : AlgChtrElt -&gt; Rng
5<->DegreeOfCharacterField(x) <->text1041.htm#11755<->DegreeOfCharacterField(x) : AlgChtrElt -&gt; RngIntElt
3<->related :<->text1041.htm#11746<->related :: Related Structures (CHARACTERS OF FINITE GROUPS)
3<->ring :<->text1041.htm<->ring :: Character Ring Operations (CHARACTERS OF FINITE GROUPS)
3<->element :<->text1042.htm<->element :: Element Operations (CHARACTERS OF FINITE GROUPS)
3<->arithmetic :<->text1042.htm#11757<->arithmetic :: Arithmetic (CHARACTERS OF FINITE GROUPS)
3<->Predicates and Booleans (CHARACTERS OF FINITE GROUPS)<->text1042.htm#11758<->Predicates and Booleans (CHARACTERS OF FINITE GROUPS)
5<->x in y <->text1042.htm#11759<->x in y : AlgChtrElt, AlgChtrElt -&gt; BoolElt
5<->x notin y <->text1042.htm#11760<->x notin y : AlgChtrElt, AlgChtrElt -&gt; BoolElt
5<->IsCharacter(x) <->text1042.htm#11761<->IsCharacter(x) : AlgChtrElt -&gt; BoolElt
5<->IsGeneralizedCharacter(x) <->text1042.htm#11762<->IsGeneralizedCharacter(x) : AlgChtrElt -&gt; BoolElt
5<->IsIrreducible(x) <->text1042.htm#11763<->IsIrreducible(x) : AlgChtrElt -&gt; BoolElt
5<->IsLinear(x) <->text1042.htm#11764<->IsLinear(x) : AlgChtrElt -&gt; BoolElt
5<->IsFaithful(x) <->text1042.htm#11765<->IsFaithful(x) : AlgChtrElt -&gt; BoolElt
5<->IsReal(x) <->text1042.htm#11766<->IsReal(x) : AlgChtrElt -&gt; BoolElt
5<->IsPermutationCharacter(c) <->text1042.htm#11767<->IsPermutationCharacter(c) : AlgChtrElt -&gt; BoolElt
4<->Chtr_grp-ispermutationcharacter (Example H97E3)<->text1042.htm#11768<->Chtr_grp-ispermutationcharacter (Example H97E3)
4<->Example-grp-ispermutationcharacter :<->text1042.htm#11768<->Example-grp-ispermutationcharacter :: Chtr_grp-ispermutationcharacter (Example H97E3)
3<->Predicates and Booleans (CHARACTERS OF FINITE GROUPS)<->text1042.htm#11758<->Predicates and Booleans (CHARACTERS OF FINITE GROUPS)
3<->access :<->text1042.htm#11769<->access :: Accessing Class Functions (CHARACTERS OF FINITE GROUPS)
5<->[] :: T[i] <->text1042.htm#11770<->[] :: T[i] : TabChtr, RngIntElt -&gt; AlgChtrElt
5<->[] :: T[i][j] <->text1042.htm#11771<->[] :: T[i][j] : TabChtr, RngIntElt, RngIntElt -&gt; FldCycElt
5<-># T <->text1042.htm#11772<-># T : SeqEnum -&gt; RngIntElt
5<->@ :: x(g) <->text1042.htm#11773<->@ :: x(g) : AlgChtrElt, GrpElt -&gt; FldCycElt
5<->() :: x(g) <->text1042.htm#11773<->() :: x(g) : AlgChtrElt, GrpElt -&gt; FldCycElt
5<->[] :: x[i] <->text1042.htm#11774<->[] :: x[i] : AlgChtrElt, RngIntElt -&gt; FldCycElt
5<-># x <->text1042.htm#11775<-># x : AlgChtrElt -&gt; RngIntElt
3<->access :<->text1042.htm#11769<->access :: Accessing Class Functions (CHARACTERS OF FINITE GROUPS)
3<->conjugate :<->text1042.htm#11776<->conjugate :: Conjugation of Class Functions (CHARACTERS OF FINITE GROUPS)
5<->x ^ g <->text1042.htm#11777<->x ^ g : AlgChtrElt, GrpElt -&gt; AlgChtrElt
5<->x ^ H <->text1042.htm#11778<->x ^ H : AlgChtrElt, Grp -&gt; { AlgChtrElt }
5<->GaloisConjugate(x, j) <->text1042.htm#11779<->GaloisConjugate(x, j) : AlgChtrElt, RngIntElt -&gt; AlgChtrElt
5<->GaloisOrbit(x) <->text1042.htm#11780<->GaloisOrbit(x) : AlgChtrElt -&gt; { AlgChtrElt }
5<->IsConjugate(x, y) <->text1042.htm#11781<->IsConjugate(x, y) : AlgChtrElt, AlgChtrElt -&gt; BoolElt, RngIntElt
5<->ClassPowerCharacter(x, j) <->text1042.htm#11782<->ClassPowerCharacter(x, j) : AlgChtrElt, RngIntElt -&gt; AlgChtrElt
3<->conjugate :<->text1042.htm#11776<->conjugate :: Conjugation of Class Functions (CHARACTERS OF FINITE GROUPS)
3<->cyclotomic :<->text1042.htm#11783<->cyclotomic :: Functions Returning a Scalar (CHARACTERS OF FINITE GROUPS)
5<->Degree(x) <->text1042.htm#11784<->Degree(x) : AlgChtrElt -&gt; RngIntElt
5<->InnerProduct(x, y) <->text1042.htm#11785<->InnerProduct(x, y) : AlgChtrElt, AlgChtrElt -&gt; FldCycElt
5<->Order(x) <->text1042.htm#11786<->Order(x) : AlgChtrElt -&gt; RngIntElt
5<->Norm(x) <->text1042.htm#11787<->Norm(x) : AlgChtrElt -&gt; FldCycElt
5<->Indicator :: Schur(x, k) <->text1042.htm#11788<->Indicator :: Schur(x, k) : AlgChtrElt, RngIntElt -&gt; FldCycElt
5<->Schur(x, k) <->text1042.htm#11788<->Schur(x, k) : AlgChtrElt, RngIntElt -&gt; FldCycElt
5<->StructureConstant(G, i, j, k) <->text1042.htm#11789<->StructureConstant(G, i, j, k) : Grp, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
3<->cyclotomic :<->text1042.htm#11783<->cyclotomic :: Functions Returning a Scalar (CHARACTERS OF FINITE GROUPS)
3<->schur-index :<->text1042.htm#11790<->schur-index :: The Schur Index (CHARACTERS OF FINITE GROUPS)
5<->SchurIndex(x, Q) <->text1042.htm#11791<->SchurIndex(x, Q) : AlgChtrElt, FldRat -> RngIntElt
5<->SchurIndex(x, F) <->text1042.htm#11791<->SchurIndex(x, F) : AlgChtrElt, FldAlg -> RngIntElt
5<->SchurIndex(x) <->text1042.htm#11791<->SchurIndex(x) : AlgChtrElt -&gt; RngIntElt
5<->SchurIndices(x, Q) <->text1042.htm#11792<->SchurIndices(x, Q) : AlgChtrElt, FldRat -> SeqEnum
5<->SchurIndices(x, F) <->text1042.htm#11792<->SchurIndices(x, F) : AlgChtrElt, FldAlg -> SeqEnum
5<->SchurIndices(C, s, F) <->text1042.htm#11792<->SchurIndices(C, s, F) : FldAlg, SeqEnum, FldAlg -> SeqEnum
5<->SchurIndices(x) <->text1042.htm#11792<->SchurIndices(x) : AlgChtrElt -&gt; SeqEnum
4<->Chtr_SchurIndex (Example H97E4)<->text1042.htm#11793<->Chtr_SchurIndex (Example H97E4)
4<->Example-SchurIndex :<->text1042.htm#11793<->Example-SchurIndex :: Chtr_SchurIndex (Example H97E4)
4<->Chtr_recipe-for-schur-index (Example H97E5)<->text1042.htm#11794<->Chtr_recipe-for-schur-index (Example H97E5)
4<->Example-recipe-for-schur-index :<->text1042.htm#11794<->Example-recipe-for-schur-index :: Chtr_recipe-for-schur-index (Example H97E5)
5<->SchurIndexGroup(n: parameters) <->text1042.htm#11795<->SchurIndexGroup(n: parameters) : RngIntElt -&gt; GrpPC
5<->CharacterWithSchurIndex(n: parameters) <->text1042.htm#11796<->CharacterWithSchurIndex(n: parameters) : RngIntElt -&gt; AlgChtrElt. GrpPC
3<->schur-index :<->text1042.htm#11790<->schur-index :: The Schur Index (CHARACTERS OF FINITE GROUPS)
3<->attribute :<->text1042.htm#11797<->attribute :: Attribute (CHARACTERS OF FINITE GROUPS)
5<->AssertAttribute(x, "IsCharacter", b) <->text1042.htm#11798<->AssertAttribute(x, "IsCharacter", b) : AlgChtrElt, MonStgElt, BoolElt -&gt;
3<->attribute :<->text1042.htm#11797<->attribute :: Attribute (CHARACTERS OF FINITE GROUPS)
3<->induction-restriction-lifting :<->text1042.htm#11799<->induction-restriction-lifting :: Induction, Restriction and Lifting (CHARACTERS OF FINITE GROUPS)
5<->Induction(Q, G) <->text1042.htm#11800<->Induction(Q, G) : SeqEnum[AlgChtrElt], Grp -> SeqEnum[AlgChtrElt]
5<->Induction(x, G) <->text1042.htm#11800<->Induction(x, G) : AlgChtrElt, Grp -&gt; AlgChtrElt
5<->LiftCharacter(c, f, G) <->text1042.htm#11801<->LiftCharacter(c, f, G) : AlgChtrElt, Map, Grp -&gt; AlgChtrElt
5<->LiftCharacters(T, f, G) <->text1042.htm#11802<->LiftCharacters(T, f, G) : [AlgChtrElt], Map, Grp -&gt; AlgChtrElt
5<->Restriction(x, H) <->text1042.htm#11803<->Restriction(x, H) : AlgChtrElt,  Grp -&gt; AlgChtrElt
3<->induction-restriction-lifting :<->text1042.htm#11799<->induction-restriction-lifting :: Induction, Restriction and Lifting (CHARACTERS OF FINITE GROUPS)
3<->symmetrization :<->text1042.htm#11804<->symmetrization :: Symmetrization (CHARACTERS OF FINITE GROUPS)
5<->Symmetrization(chi, p) <->text1042.htm#11805<->Symmetrization(chi, p) : AlgChtrElt, [ RngIntElt ] -&gt; AlgChtrElt
5<->OrthogonalSymmetrization(chi, p) <->text1042.htm#11806<->OrthogonalSymmetrization(chi, p) : AlgChtrElt, [ RngIntElt ] -&gt; AlgChtrElt
5<->SymplecticSymmetrization(chi, p) <->text1042.htm#11807<->SymplecticSymmetrization(chi, p) : AlgChtrElt, [ RngIntElt ] -&gt; AlgChtrElt
4<->Chtr_tensprod-check (Example H97E6)<->text1042.htm#11808<->Chtr_tensprod-check (Example H97E6)
4<->Example-tensprod-check :<->text1042.htm#11808<->Example-tensprod-check :: Chtr_tensprod-check (Example H97E6)
4<->Chtr_symp-and-orthog (Example H97E7)<->text1042.htm#11809<->Chtr_symp-and-orthog (Example H97E7)
4<->Example-symp-and-orthog :<->text1042.htm#11809<->Example-symp-and-orthog :: Chtr_symp-and-orthog (Example H97E7)
5<->IsSymplecticCharacter :: IsOrthogonalCharacter(chi) <->text1042.htm#11810<->IsSymplecticCharacter :: IsOrthogonalCharacter(chi) : AlgChtrElt -&gt; BoolElt
5<->IsOrthogonalCharacter(chi) <->text1042.htm#11810<->IsOrthogonalCharacter(chi) : AlgChtrElt -&gt; BoolElt
3<->symmetrization :<->text1042.htm#11804<->symmetrization :: Symmetrization (CHARACTERS OF FINITE GROUPS)
3<->permutation :<->text1042.htm#11811<->permutation :: Permutation Character (CHARACTERS OF FINITE GROUPS)
5<->PermutationCharacter(G) <->text1042.htm#11812<->PermutationCharacter(G) : GrpPerm -&gt; AlgChtrElt
5<->PermutationCharacter(G, H) <->text1042.htm#11813<->PermutationCharacter(G, H) : Grp, Grp -&gt; AlgChtrElt
3<->permutation :<->text1042.htm#11811<->permutation :: Permutation Character (CHARACTERS OF FINITE GROUPS)
3<->composition-decomposition :<->text1042.htm#11814<->composition-decomposition :: Composition and Decomposition (CHARACTERS OF FINITE GROUPS)
5<->Composition(T, q) <->text1042.htm#11815<->Composition(T, q) : [ AlgChtrElt ], [RngElt] -&gt; AlgChtrElt
5<->Decomposition(T, y) <->text1042.htm#11816<->Decomposition(T, y) : [AlgChtrElt], AlgChtrElt -&gt; [ FldCycElt ], AlgChtrElt
3<->composition-decomposition :<->text1042.htm#11814<->composition-decomposition :: Composition and Decomposition (CHARACTERS OF FINITE GROUPS)
3<->finding-irreducibles :<->text1042.htm#11817<->finding-irreducibles :: Finding Irreducibles (CHARACTERS OF FINITE GROUPS)
5<->RemoveIrreducibles(I, C) <->text1042.htm#11818<->RemoveIrreducibles(I, C) : [ AlgChtrElt ], [ AlgChtrElt ] -&gt; [ AlgChtrElt ], [ AlgChtrElt ]
5<->ReduceCharacters(I, C) <->text1042.htm#11819<->ReduceCharacters(I, C) : [ AlgChtrElt ], [ AlgChtrElt ] -&gt; [ AlgChtrElt ], [ AlgChtrElt ]
4<->Chtr_A5 (Example H97E8)<->text1042.htm#11820<->Chtr_A5 (Example H97E8)
4<->Example-A5 :<->text1042.htm#11820<->Example-A5 :: Chtr_A5 (Example H97E8)
3<->finding-irreducibles :<->text1042.htm#11817<->finding-irreducibles :: Finding Irreducibles (CHARACTERS OF FINITE GROUPS)
3<->brauer-characters :<->text1042.htm#11821<->brauer-characters :: Brauer Characters (CHARACTERS OF FINITE GROUPS)
5<->BrauerCharacter(x, p) <->text1042.htm#11822<->BrauerCharacter(x, p) : AlgChtrElt, RngIntElt -&gt; AlgChtrElt
5<->Blocks(T, p) <->text1042.htm#11823<->Blocks(T, p) : SeqEnum[AlgChtrElt], RngIntElt -&gt; SeqEnum, SeqEnum
4<->Chtr_brauer (Example H97E9)<->text1042.htm#11824<->Chtr_brauer (Example H97E9)
4<->Example-brauer :<->text1042.htm#11824<->Example-brauer :: Chtr_brauer (Example H97E9)
3<->brauer-characters :<->text1042.htm#11821<->brauer-characters :: Brauer Characters (CHARACTERS OF FINITE GROUPS)
3<->element :<->text1042.htm<->element :: Element Operations (CHARACTERS OF FINITE GROUPS)
3<->ring :<->text1043.htm<->ring :: Database of Character Tables (CHARACTERS OF FINITE GROUPS)
5<->CharacterTable(A) <->text1043.htm#11826<->CharacterTable(A) : GrpAtlas -> SeqEnum[AlgChtrElt]
5<->CharacterTable(N) <->text1043.htm#11826<->CharacterTable(N) : MonStgElt -&gt; SeqEnum[AlgChtrElt]
5<->HasCharacterTable(A) <->text1043.htm#11827<->HasCharacterTable(A) : GrpAtlas -&gt; BoolElt
5<->CharacterTableNames() <->text1043.htm#11828<->CharacterTableNames() : -&gt; SetIndx[MonStElt]
4<->Chtr_CharacterTableData (Example H97E10)<->text1043.htm#11829<->Chtr_CharacterTableData (Example H97E10)
4<->Example-CharacterTableData :<->text1043.htm#11829<->Example-CharacterTableData :: Chtr_CharacterTableData (Example H97E10)
4<->Chtr_Lyons-schur-index (Example H97E11)<->text1043.htm#11830<->Chtr_Lyons-schur-index (Example H97E11)
4<->Example-Lyons-schur-index :<->text1043.htm#11830<->Example-Lyons-schur-index :: Chtr_Lyons-schur-index (Example H97E11)
3<->ring :<->text1043.htm<->ring :: Database of Character Tables (CHARACTERS OF FINITE GROUPS)
3<->character :<->text1039.htm<->character :: CHARACTERS OF FINITE GROUPS
3<->rep_sym :<->text1046.htm<->rep_sym :: REPRESENTATIONS   OF SYMMETRIC GROUPS
3<->introduction :<->text1047.htm<->introduction :: Introduction (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->repsym :<->text1048.htm<->repsym :: Representations of the Symmetric Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->integral :<->text1048.htm#11836<->integral :: Integral Representations (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->SymmetricRepresentation(pa, pe) <->text1048.htm#11837<->SymmetricRepresentation(pa, pe) : SeqEnum, GrpPermElt -&gt; AlgMatElt
4<->RepSym_integral representations (Example H98E1)<->text1048.htm#11838<->RepSym_integral representations (Example H98E1)
4<->Example-integral representations :<->text1048.htm#11838<->Example-integral representations :: RepSym_integral representations (Example H98E1)
3<->integral :<->text1048.htm#11836<->integral :: Integral Representations (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->nonintegral :<->text1048.htm#11839<->nonintegral :: The Seminormal and Orthogonal  Representations (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->SymmetricRepresentationSeminormal(pa, pe) <->text1048.htm#11840<->SymmetricRepresentationSeminormal(pa, pe) : SeqEnum,GrpPermElt -&gt; AlgMatElt
5<->SymmetricRepresentationOrthogonal(pa, pe) <->text1048.htm#11841<->SymmetricRepresentationOrthogonal(pa, pe) : SeqEnum,GrpPermElt -&gt; AlgMatElt
4<->RepSym_semi-orthog (Example H98E2)<->text1048.htm#11842<->RepSym_semi-orthog (Example H98E2)
4<->Example-semi-orthog :<->text1048.htm#11842<->Example-semi-orthog :: RepSym_semi-orthog (Example H98E2)
3<->nonintegral :<->text1048.htm#11839<->nonintegral :: The Seminormal and Orthogonal  Representations (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->repsym :<->text1048.htm<->repsym :: Representations of the Symmetric Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->charsym :<->text1049.htm<->charsym :: Characters of the Symmetric  Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->values :<->text1049.htm#11844<->values :: Single Values (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->SymmetricCharacterValue(pa, pe) <->text1049.htm#11845<->SymmetricCharacterValue(pa, pe) : SeqEnum, GrpPermElt -&gt; RngElt
3<->values :<->text1049.htm#11844<->values :: Single Values (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->irred :<->text1049.htm#11846<->irred :: Irreducible Characters (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->SymmetricCharacter(pa) <->text1049.htm#11847<->SymmetricCharacter(pa) : SeqEnum -&gt; AlgChtrElt
3<->irred :<->text1049.htm#11846<->irred :: Irreducible Characters (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->table :<->text1049.htm#11848<->table :: Character Table (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->SymmetricCharacterTable(d) <->text1049.htm#11849<->SymmetricCharacterTable(d) : RngIntElt -&gt; SeqEnum
3<->table :<->text1049.htm#11848<->table :: Character Table (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->charsym :<->text1049.htm<->charsym :: Characters of the Symmetric  Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->repalt :<->text1050.htm<->repalt :: Representations of the Alternating Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->charalt :<->text1051.htm<->charalt :: Characters of the Alternating  Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->altvalues :<->text1051.htm#11852<->altvalues :: Single Values (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->AlternatingCharacterValue(pa, pe) <->text1051.htm#11853<->AlternatingCharacterValue(pa, pe) : SeqEnum, GrpPermElt -&gt; RngElt
5<->AlternatingCharacterValue(pa, i, pe) <->text1051.htm#11854<->AlternatingCharacterValue(pa, i, pe) : SeqEnum, RngIntElt, GrpPermElt -&gt; RngElt
3<->altvalues :<->text1051.htm#11852<->altvalues :: Single Values (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->altirred :<->text1051.htm#11855<->altirred :: Irreducible Characters (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->AlternatingCharacter(pa) <->text1051.htm#11856<->AlternatingCharacter(pa) : SeqEnum -&gt; AlgChtrElt
5<->AlternatingCharacter(pa, i) <->text1051.htm#11857<->AlternatingCharacter(pa, i) : SeqEnum, RngIntElt -&gt; AlgChtrElt
3<->altirred :<->text1051.htm#11855<->altirred :: Irreducible Characters (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->alttable :<->text1051.htm#11858<->alttable :: Character Table (REPRESENTATIONS   OF SYMMETRIC GROUPS)
5<->AlternatingCharacterTable(d) <->text1051.htm#11859<->AlternatingCharacterTable(d) : RngIntElt -&gt; SeqEnum
3<->alttable :<->text1051.htm#11858<->alttable :: Character Table (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->charalt :<->text1051.htm<->charalt :: Characters of the Alternating  Group (REPRESENTATIONS   OF SYMMETRIC GROUPS)
3<->rep_sym :<->text1046.htm<->rep_sym :: REPRESENTATIONS   OF SYMMETRIC GROUPS
3<->padicGalois :<->text1053.htm<->padicGalois :: MOD P GALOIS REPRESENTATIONS
3<->Introduction (MOD P GALOIS REPRESENTATIONS)<->text1054.htm<->Introduction (MOD P GALOIS REPRESENTATIONS)
3<->motivation :<->text1054.htm#11863<->motivation :: Motivation (MOD P GALOIS REPRESENTATIONS)
3<->definitions :<->text1054.htm#11864<->definitions :: Definitions (MOD P GALOIS REPRESENTATIONS)
3<->classification :<->text1054.htm#11865<->classification :: Classification of varphi-modules (MOD P GALOIS REPRESENTATIONS)
3<->connection-galois-representation :<->text1054.htm#11866<->connection-galois-representation :: Connection with Galois Representations (MOD P GALOIS REPRESENTATIONS)
3<->Introduction (MOD P GALOIS REPRESENTATIONS)<->text1054.htm<->Introduction (MOD P GALOIS REPRESENTATIONS)
3<->modules-Galois-representations :<->text1055.htm<->modules-Galois-representations :: varphi-modules and Galois Representations in Magma (MOD P GALOIS REPRESENTATIONS)
3<->varphi-modules (MOD P GALOIS REPRESENTATIONS)<->text1055.htm#11868<->varphi-modules (MOD P GALOIS REPRESENTATIONS)
3<->category :<->text1055.htm#11869<->category :: Category (MOD P GALOIS REPRESENTATIONS)
3<->creation :<->text1055.htm#11870<->creation :: Creation Functions (MOD P GALOIS REPRESENTATIONS)
5<->PhiModule(M) <->text1055.htm#11871<->PhiModule(M) : AlgMatElt -&gt; PhiMod
5<->ElementaryPhiModule(S,d,h) <->text1055.htm#11872<->ElementaryPhiModule(S,d,h) : RngSerLaur, RngIntElt, RngIntElt -&gt; PhiMod
5<->PhiModuleElement(x,D) <->text1055.htm#11873<->PhiModuleElement(x,D) : AlgMatElt, PhiMod -&gt; PhiModElt
3<->creation :<->text1055.htm#11870<->creation :: Creation Functions (MOD P GALOIS REPRESENTATIONS)
3<->attributes :<->text1055.htm#11874<->attributes :: Attributes of varphi-modules (MOD P GALOIS REPRESENTATIONS)
5<->Dimension(D) <->text1055.htm#11875<->Dimension(D) : PhiMod -&gt; RngIntElt
5<->CoefficientRing(D) <->text1055.htm#11876<->CoefficientRing(D) : PhiMod -&gt; RngSerLaur
5<->FrobeniusMatrix(D) <->text1055.htm#11877<->FrobeniusMatrix(D) : PhiMod -&gt; AlgMatElt
3<->attributes :<->text1055.htm#11874<->attributes :: Attributes of varphi-modules (MOD P GALOIS REPRESENTATIONS)
3<->basic :<->text1055.htm#11878<->basic :: Basic Operations and Properties of varphi-modules (MOD P GALOIS REPRESENTATIONS)
5<->IsEtale(D) <->text1055.htm#11879<->IsEtale(D) : PhiMod -&gt; BoolElt
5<->ChangePrecision(~D, prec) <->text1055.htm#11880<->ChangePrecision(~D, prec) : PhiMod, RngIntElt -&gt;
5<->DirectSum(D1, D2) <->text1055.htm#11881<->DirectSum(D1, D2) : PhiMod, PhiMod -&gt; PhiMod
5<->BaseChange(~D, P) <->text1055.htm#11882<->BaseChange(~D, P) : ~PhiMod, AlgMatElt -&gt;
5<->RandomBaseChange(~D) <->text1055.htm#11883<->RandomBaseChange(~D) : PhiMod -&gt;
5<->Phi(D, x) <->text1055.htm#11884<->Phi(D, x) : PhiMod, PhiModElt -&gt; PhiModElt
3<->basic :<->text1055.htm#11878<->basic :: Basic Operations and Properties of varphi-modules (MOD P GALOIS REPRESENTATIONS)
3<->reduction :<->text1055.htm#11885<->reduction :: Reduction of varphi-modules and Galois Representations (MOD P GALOIS REPRESENTATIONS)
5<->SemisimpleDecomposition(D) <->text1055.htm#11886<->SemisimpleDecomposition(D) : PhiMod -&gt; AlgMatElt, AlgMatElt, SeqEnum, SeqEnum
5<->Slopes(D) <->text1055.htm#11887<->Slopes(D) : PhiMod -&gt; SeqEnum
5<->SSGaloisRepresentation(D) <->text1055.htm#11888<->SSGaloisRepresentation(D) : PhiMod -&gt; SSGalRep
3<->reduction :<->text1055.htm#11885<->reduction :: Reduction of varphi-modules and Galois Representations (MOD P GALOIS REPRESENTATIONS)
3<->varphi-modules (MOD P GALOIS REPRESENTATIONS)<->text1055.htm#11868<->varphi-modules (MOD P GALOIS REPRESENTATIONS)
3<->semisimple :<->text1055.htm#11889<->semisimple :: Semisimple Galois Representations (MOD P GALOIS REPRESENTATIONS)
3<->category :<->text1055.htm#11890<->category :: Category (MOD P GALOIS REPRESENTATIONS)
3<->creation :<->text1055.htm#11891<->creation :: Creation Functions (MOD P GALOIS REPRESENTATIONS)
5<->SSGaloisRepresentation(E,K,w,P) <->text1055.htm#11892<->SSGaloisRepresentation(E,K,w,P) : FldFin, RngSerLaur, SeqEnum, SeqEnum -&gt; SSGalRep
3<->creation :<->text1055.htm#11891<->creation :: Creation Functions (MOD P GALOIS REPRESENTATIONS)
3<->basic :<->text1055.htm#11893<->basic :: Basic Operations (MOD P GALOIS REPRESENTATIONS)
5<->CoefficientRing(V) <->text1055.htm#11894<->CoefficientRing(V) : SSGalRep -&gt; FldFin
5<->FixedField(V) <->text1055.htm#11895<->FixedField(V) : SSGalRep -&gt; RngSerLaur
5<->Weights(V) <->text1055.htm#11896<->Weights(V) : SSGalRep -&gt; SeqEnum
3<->basic :<->text1055.htm#11893<->basic :: Basic Operations (MOD P GALOIS REPRESENTATIONS)
3<->representation :<->text1055.htm#11897<->representation :: Representation Associated to a varphi-Module (MOD P GALOIS REPRESENTATIONS)
5<->SSGaloisRepresentation(D) <->text1055.htm#11898<->SSGaloisRepresentation(D) : PhiMod -&gt; SSGalRep
3<->representation :<->text1055.htm#11897<->representation :: Representation Associated to a varphi-Module (MOD P GALOIS REPRESENTATIONS)
3<->semisimple :<->text1055.htm#11889<->semisimple :: Semisimple Galois Representations (MOD P GALOIS REPRESENTATIONS)
3<->modules-Galois-representations :<->text1055.htm<->modules-Galois-representations :: varphi-modules and Galois Representations in Magma (MOD P GALOIS REPRESENTATIONS)
3<->Examples (MOD P GALOIS REPRESENTATIONS)<->text1056.htm<->Examples (MOD P GALOIS REPRESENTATIONS)
4<->pAdicGalois_generic (Example H99E1)<->text1056.htm#11900<->pAdicGalois_generic (Example H99E1)
4<->Example-generic :<->text1056.htm#11900<->Example-generic :: pAdicGalois_generic (Example H99E1)
3<->Examples (MOD P GALOIS REPRESENTATIONS)<->text1056.htm<->Examples (MOD P GALOIS REPRESENTATIONS)
3<->padicGalois :<->text1053.htm<->padicGalois :: MOD P GALOIS REPRESENTATIONS
3<->lie-introduction :<->text1059.htm<->lie-introduction :: INTRODUCTION TO LIE THEORY [LIE THEORY]
3<->Coxeter system :<->text1060.htm<->Coxeter system :: Descriptions of Coxeter Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->Coxeter group :<->text1060.htm<->Coxeter group :: Descriptions of Coxeter Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->Coxeter generators :<->text1060.htm<->Coxeter generators :: Descriptions of Coxeter Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->descriptions :<->text1060.htm<->descriptions :: Descriptions of Coxeter Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->descriptions :<->text1061.htm<->descriptions :: Root Systems and Root Data (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->groups :<->text1062.htm<->groups :: Coxeter and Reflection Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->descriptions :<->text1063.htm<->descriptions :: Lie Algebras and Groups of Lie Type (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->descriptions :<->text1064.htm<->descriptions :: Highest Weight Representations (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->descriptions :<->text1065.htm<->descriptions :: Universal Enveloping Algebras  and Quantum Groups (INTRODUCTION TO LIE THEORY [LIE THEORY])
3<->lie-introduction :<->text1059.htm<->lie-introduction :: INTRODUCTION TO LIE THEORY [LIE THEORY]
3<->coxeter-description :<->text1068.htm<->coxeter-description :: COXETER SYSTEMS
3<->Coxeter system :<->text1069.htm<->Coxeter system :: Introduction (COXETER SYSTEMS)
3<->Coxeter group :<->text1069.htm<->Coxeter group :: Introduction (COXETER SYSTEMS)
3<->Coxeter generators :<->text1069.htm<->Coxeter generators :: Introduction (COXETER SYSTEMS)
3<->rank :<->text1069.htm<->rank :: Introduction (COXETER SYSTEMS)
3<->reducible :<->text1069.htm<->reducible :: Introduction (COXETER SYSTEMS)
3<->introduction :<->text1069.htm<->introduction :: Introduction (COXETER SYSTEMS)
3<->Coxeter matrix :<->text1070.htm<->Coxeter matrix :: Coxeter Matrices (COXETER SYSTEMS)
3<->coxetermat :<->text1070.htm<->coxetermat :: Coxeter Matrices (COXETER SYSTEMS)
5<->IsCoxeterMatrix(M) <->text1070.htm#11915<->IsCoxeterMatrix(M) : AlgMatElt -&gt; BoolElt
5<->CoxeterMatrix(C) <->text1070.htm#11916<->CoxeterMatrix(C) : AlgMatElt -> AlgMatElt
5<->CoxeterMatrix(D) <->text1070.htm#11916<->CoxeterMatrix(D) : GrphDir -> AlgMatElt
5<->CoxeterMatrix(G) <->text1070.htm#11916<->CoxeterMatrix(G) : GrphUnd -&gt; AlgMatElt
4<->Cartan_CoxeterMatrixConstruction (Example H101E1)<->text1070.htm#11917<->Cartan_CoxeterMatrixConstruction (Example H101E1)
4<->Example-CoxeterMatrixConstruction :<->text1070.htm#11917<->Example-CoxeterMatrixConstruction :: Cartan_CoxeterMatrixConstruction (Example H101E1)
5<->IsCoxeterIsomorphic(M1, M2) <->text1070.htm#11918<->IsCoxeterIsomorphic(M1, M2) : AlgMatElt, AlgMatElt -&gt; BoolElt, SeqEnum
5<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(M) <->text1070.htm#11919<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(M) : AlgMatElt -&gt; RngIntElt
5<->CoxeterGroupOrder(M) <->text1070.htm#11919<->CoxeterGroupOrder(M) : AlgMatElt -&gt; RngIntElt
4<->Cartan_CoxeterMatrixOperations (Example H101E2)<->text1070.htm#11920<->Cartan_CoxeterMatrixOperations (Example H101E2)
4<->Example-CoxeterMatrixOperations :<->text1070.htm#11920<->Example-CoxeterMatrixOperations :: Cartan_CoxeterMatrixOperations (Example H101E2)
5<->IsCoxeterIrreducible(M) <->text1070.htm#11921<->IsCoxeterIrreducible(M) : AlgMatElt -&gt; BoolElt
5<->IsSimplyLaced(M) <->text1070.htm#11922<->IsSimplyLaced(M) : AlgMatElt -&gt; BoolElt
4<->Cartan_CoxeterMatrixProperties (Example H101E3)<->text1070.htm#11923<->Cartan_CoxeterMatrixProperties (Example H101E3)
4<->Example-CoxeterMatrixProperties :<->text1070.htm#11923<->Example-CoxeterMatrixProperties :: Cartan_CoxeterMatrixProperties (Example H101E3)
3<->coxetermat :<->text1070.htm<->coxetermat :: Coxeter Matrices (COXETER SYSTEMS)
3<->Coxeter graph :<->text1071.htm<->Coxeter graph :: Coxeter Graphs (COXETER SYSTEMS)
3<->coxetergraph :<->text1071.htm<->coxetergraph :: Coxeter Graphs (COXETER SYSTEMS)
5<->IsCoxeterGraph(G) <->text1071.htm#11925<->IsCoxeterGraph(G) : GrphUnd -&gt; BoolElt
5<-> CoxeterGraph(C) <->text1071.htm#11926<-> CoxeterGraph(C) : AlgMatElt -> GrphUnd
5<-> CoxeterGraph(D) <->text1071.htm#11926<-> CoxeterGraph(D) : GrphDir -> GrphUnd
5<->CoxeterGraph(M) <->text1071.htm#11926<->CoxeterGraph(M) : AlgMatElt -&gt; GrphUnd
5<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(G) <->text1071.htm#11927<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(G) : GrphUnd -&gt; .
5<->CoxeterGroupOrder(G) <->text1071.htm#11927<->CoxeterGroupOrder(G) : GrphUnd -&gt; .
4<->Cartan_CoxeterGraphOperations (Example H101E4)<->text1071.htm#11928<->Cartan_CoxeterGraphOperations (Example H101E4)
4<->Example-CoxeterGraphOperations :<->text1071.htm#11928<->Example-CoxeterGraphOperations :: Cartan_CoxeterGraphOperations (Example H101E4)
5<->IsSimplyLaced(G) <->text1071.htm#11929<->IsSimplyLaced(G) : GrphUnd -&gt; BoolElt
4<->Cartan_CoxeterGraphProperties (Example H101E5)<->text1071.htm#11930<->Cartan_CoxeterGraphProperties (Example H101E5)
4<->Example-CoxeterGraphProperties :<->text1071.htm#11930<->Example-CoxeterGraphProperties :: Cartan_CoxeterGraphProperties (Example H101E5)
3<->coxetergraph :<->text1071.htm<->coxetergraph :: Coxeter Graphs (COXETER SYSTEMS)
3<->cartanmat :<->text1072.htm<->cartanmat :: Cartan Matrices (COXETER SYSTEMS)
5<->IsCartanMatrix(C) <->text1072.htm#11932<->IsCartanMatrix(C) : AlgMatElt -&gt; BoolElt
5<->CartanMatrix(G) <->text1072.htm#11933<->CartanMatrix(G) : GrphUnd -> AlgMatElt
5<->CartanMatrix(M) <->text1072.htm#11933<->CartanMatrix(M) : AlgMatElt -&gt; AlgMatElt
5<->CartanMatrix(D) <->text1072.htm#11934<->CartanMatrix(D) : GrphDir -&gt; AlgMatElt
4<->Cartan_CartanMatrixConstruction (Example H101E6)<->text1072.htm#11935<->Cartan_CartanMatrixConstruction (Example H101E6)
4<->Example-CartanMatrixConstruction :<->text1072.htm#11935<->Example-CartanMatrixConstruction :: Cartan_CartanMatrixConstruction (Example H101E6)
5<->IsCoxeterIsomorphic(C1, C2) <->text1072.htm#11936<->IsCoxeterIsomorphic(C1, C2) : AlgMatElt, AlgMatElt -&gt; RngIntElt
5<->IsCartanEquivalent(C1, C2) <->text1072.htm#11937<->IsCartanEquivalent(C1, C2) : AlgMatElt, AlgMatElt -&gt; BoolElt
4<->Cartan_CartanMatrixEquivalence (Example H101E7)<->text1072.htm#11938<->Cartan_CartanMatrixEquivalence (Example H101E7)
4<->Example-CartanMatrixEquivalence :<->text1072.htm#11938<->Example-CartanMatrixEquivalence :: Cartan_CartanMatrixEquivalence (Example H101E7)
5<->NumPosRoots :: NumberOfPositiveRoots(C) <->text1072.htm#11939<->NumPosRoots :: NumberOfPositiveRoots(C) : AlgMatElt -&gt; RngIntElt
5<->NumberOfPositiveRoots(C) <->text1072.htm#11939<->NumberOfPositiveRoots(C) : AlgMatElt -&gt; RngIntElt
5<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(C) <->text1072.htm#11940<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(C) : AlgMatElt -&gt; .
5<->CoxeterGroupOrder(C) <->text1072.htm#11940<->CoxeterGroupOrder(C) : AlgMatElt -&gt; .
5<->FundamentalGroup(C) <->text1072.htm#11941<->FundamentalGroup(C) : AlgMatElt -&gt; GrpAb
4<->Cartan_CartanMatrixOperations (Example H101E8)<->text1072.htm#11942<->Cartan_CartanMatrixOperations (Example H101E8)
4<->Example-CartanMatrixOperations :<->text1072.htm#11942<->Example-CartanMatrixOperations :: Cartan_CartanMatrixOperations (Example H101E8)
5<->IsCoxeterIrreducible(C) <->text1072.htm#11943<->IsCoxeterIrreducible(C) : AlgMatElt -&gt; BoolElt
5<->IsCrystallographic(C) <->text1072.htm#11944<->IsCrystallographic(C) : AlgMatElt -&gt; BoolElt
5<->IsSimplyLaced(C) <->text1072.htm#11945<->IsSimplyLaced(C) : AlgMatElt -&gt; BoolElt
4<->Cartan_CartanMatrixProperties (Example H101E9)<->text1072.htm#11946<->Cartan_CartanMatrixProperties (Example H101E9)
4<->Example-CartanMatrixProperties :<->text1072.htm#11946<->Example-CartanMatrixProperties :: Cartan_CartanMatrixProperties (Example H101E9)
3<->cartanmat :<->text1072.htm<->cartanmat :: Cartan Matrices (COXETER SYSTEMS)
3<->Dynkin digraph :<->text1073.htm<->Dynkin digraph :: Dynkin Digraphs (COXETER SYSTEMS)
3<->Dynkin diagram :<->text1073.htm<->Dynkin diagram :: Dynkin Digraphs (COXETER SYSTEMS)
3<->dynkindigraph :<->text1073.htm<->dynkindigraph :: Dynkin Digraphs (COXETER SYSTEMS)
5<->IsDynkinDigraph(D) <->text1073.htm#11948<->IsDynkinDigraph(D) : GrphDir -&gt; BoolElt
5<->DynkinDigraph(C) <->text1073.htm#11949<->DynkinDigraph(C) : AlgMatElt -&gt; GrphDir
5<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(D) <->text1073.htm#11950<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(D) : GrphDir -&gt; .
5<->CoxeterGroupOrder(D) <->text1073.htm#11950<->CoxeterGroupOrder(D) : GrphDir -&gt; .
5<->FundamentalGroup(D) <->text1073.htm#11951<->FundamentalGroup(D) : GrphDir -&gt; GrpAb
5<->IsSimplyLaced(D) <->text1073.htm#11952<->IsSimplyLaced(D) : GrphDir -&gt; BoolElt
4<->Cartan_CartanMatrices (Example H101E10)<->text1073.htm#11953<->Cartan_CartanMatrices (Example H101E10)
4<->Example-CartanMatrices :<->text1073.htm#11953<->Example-CartanMatrices :: Cartan_CartanMatrices (Example H101E10)
3<->dynkindigraph :<->text1073.htm<->dynkindigraph :: Dynkin Digraphs (COXETER SYSTEMS)
3<->finiteaffine :<->text1074.htm<->finiteaffine :: Finite and Affine Coxeter  Groups (COXETER SYSTEMS)
5<-> IsCoxeterFinite(G) <->text1074.htm#11955<-> IsCoxeterFinite(G) : GrphUnd -> BoolElt
5<-> IsCoxeterFinite(C) <->text1074.htm#11955<-> IsCoxeterFinite(C) : AlgMatElt -> BoolElt
5<-> IsCoxeterFinite(D) <->text1074.htm#11955<-> IsCoxeterFinite(D) : GrphDir -> BoolElt
5<-> IsCoxeterFinite(N) <->text1074.htm#11955<-> IsCoxeterFinite(N) : MonStgElt -> BoolElt
5<->IsCoxeterFinite(M) <->text1074.htm#11955<->IsCoxeterFinite(M) : AlgMatElt -&gt; BoolElt
5<-> IsCoxeterAffine(G) <->text1074.htm#11956<-> IsCoxeterAffine(G) : GrphUnd -> BoolElt
5<-> IsCoxeterAffine(C) <->text1074.htm#11956<-> IsCoxeterAffine(C) : AlgMatElt -> BoolElt
5<-> IsCoxeterAffine(D) <->text1074.htm#11956<-> IsCoxeterAffine(D) : GrphDir -> BoolElt
5<-> IsCoxeterAffine(N) <->text1074.htm#11956<-> IsCoxeterAffine(N) : MonStgElt -> BoolElt
5<->IsCoxeterAffine(M) <->text1074.htm#11956<->IsCoxeterAffine(M) : AlgMatElt -&gt; BoolElt
4<->Cartan_Testing (Example H101E11)<->text1074.htm#11957<->Cartan_Testing (Example H101E11)
4<->Example-Testing :<->text1074.htm#11957<->Example-Testing :: Cartan_Testing (Example H101E11)
5<->CoxeterMatrix(N) <->text1074.htm#11958<->CoxeterMatrix(N) : MonStgElt -&gt; AlgMatElt
5<->CoxeterGraph(N) <->text1074.htm#11959<->CoxeterGraph(N) : MonStgElt -&gt; GrpUnd
5<->CartanMatrix(N) <->text1074.htm#11960<->CartanMatrix(N) : MonStgElt -&gt; AlgMatElt
5<->DynkinDigraph(N) <->text1074.htm#11961<->DynkinDigraph(N) : MonStgElt -&gt; GrphDir
4<->Cartan_MatricesAndGraphs (Example H101E12)<->text1074.htm#11962<->Cartan_MatricesAndGraphs (Example H101E12)
4<->Example-MatricesAndGraphs :<->text1074.htm#11962<->Example-MatricesAndGraphs :: Cartan_MatricesAndGraphs (Example H101E12)
5<->IrreducibleCoxeterMatrix(X, n) <->text1074.htm#11963<->IrreducibleCoxeterMatrix(X, n) : MonStgElt, RngIntElt -&gt; AlgMatElt
5<->IrreducibleCoxeterGraph(X, n) <->text1074.htm#11964<->IrreducibleCoxeterGraph(X, n) : MonStgElt, RngIntElt -&gt; GrpUnd
5<->IrreducibleCartanMatrix(X, n) <->text1074.htm#11965<->IrreducibleCartanMatrix(X, n) : MonStgElt, RngIntElt -&gt; AlgMatElt
5<->IrreducibleDynkinDigraph(X, n) <->text1074.htm#11966<->IrreducibleDynkinDigraph(X, n) : MonStgElt, RngIntElt -&gt; GrphDir
4<->Cartan_IrreducibleCoxeter (Example H101E13)<->text1074.htm#11967<->Cartan_IrreducibleCoxeter (Example H101E13)
4<->Example-IrreducibleCoxeter :<->text1074.htm#11967<->Example-IrreducibleCoxeter :: Cartan_IrreducibleCoxeter (Example H101E13)
5<->IsCoxeterIsomorphic(N1, N2) <->text1074.htm#11968<->IsCoxeterIsomorphic(N1, N2) : MonStgElt, MonStgElt -&gt; BoolElt
5<->IsCartanEquivalent(N1, N2) <->text1074.htm#11969<->IsCartanEquivalent(N1, N2) : MonStgElt, MonStgElt -&gt; BoolElt
4<->Cartan_IsomorphismAndEquivalence (Example H101E14)<->text1074.htm#11970<->Cartan_IsomorphismAndEquivalence (Example H101E14)
4<->Example-IsomorphismAndEquivalence :<->text1074.htm#11970<->Example-IsomorphismAndEquivalence :: Cartan_IsomorphismAndEquivalence (Example H101E14)
5<->IsSimplyLaced(N) <->text1074.htm#11971<->IsSimplyLaced(N) : MonStgElt -&gt; BoolElt
5<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(N) <->text1074.htm#11972<->CoxeterGroupFactoredOrder :: CoxeterGroupOrder(N) : MonStgElt -&gt; .
5<->CoxeterGroupOrder(N) <->text1074.htm#11972<->CoxeterGroupOrder(N) : MonStgElt -&gt; .
5<->NumPosRoots :: NumberOfPositiveRoots(N) <->text1074.htm#11973<->NumPosRoots :: NumberOfPositiveRoots(N) : MonStgElt -&gt; .
5<->NumberOfPositiveRoots(N) <->text1074.htm#11973<->NumberOfPositiveRoots(N) : MonStgElt -&gt; .
5<->FundamentalGroup(N) <->text1074.htm#11974<->FundamentalGroup(N) : MonStgElt -&gt; GrpAb
4<->Cartan_GroupOrders (Example H101E15)<->text1074.htm#11975<->Cartan_GroupOrders (Example H101E15)
4<->Example-GroupOrders :<->text1074.htm#11975<->Example-GroupOrders :: Cartan_GroupOrders (Example H101E15)
5<-> CartanName(G) <->text1074.htm#11976<-> CartanName(G) : GrphUnd -> MonStgElt
5<-> CartanName(C) <->text1074.htm#11976<-> CartanName(C) : AlgMatElt -> MonStgElt
5<-> CartanName(D) <->text1074.htm#11976<-> CartanName(D) : GrphDir -> MonStgElt
5<->CartanName(M) <->text1074.htm#11976<->CartanName(M) : AlgMatElt -&gt; MonStgElt
4<->Cartan_CartanName (Example H101E16)<->text1074.htm#11977<->Cartan_CartanName (Example H101E16)
4<->Example-CartanName :<->text1074.htm#11977<->Example-CartanName :: Cartan_CartanName (Example H101E16)
5<-> DynkinDiagram(G) <->text1074.htm#11978<-> DynkinDiagram(G) : GrphUnd -> 
5<-> DynkinDiagram(C) <->text1074.htm#11978<-> DynkinDiagram(C) : AlgMatElt -> 
5<-> DynkinDiagram(D) <->text1074.htm#11978<-> DynkinDiagram(D) : GrphDir -> 
5<-> DynkinDiagram(N) <->text1074.htm#11978<-> DynkinDiagram(N) : MonStgElt -> 
5<->DynkinDiagram(M) <->text1074.htm#11978<->DynkinDiagram(M) : AlgMatElt -&gt;
4<->Cartan_DynkinDiagram (Example H101E17)<->text1074.htm#11979<->Cartan_DynkinDiagram (Example H101E17)
4<->Example-DynkinDiagram :<->text1074.htm#11979<->Example-DynkinDiagram :: Cartan_DynkinDiagram (Example H101E17)
5<-> CoxeterDiagram(G) <->text1074.htm#11980<-> CoxeterDiagram(G) : GrphUnd -> 
5<-> CoxeterDiagram(C) <->text1074.htm#11980<-> CoxeterDiagram(C) : AlgMatElt -> 
5<-> CoxeterDiagram(D) <->text1074.htm#11980<-> CoxeterDiagram(D) : GrphDir -> 
5<-> CoxeterDiagram(N) <->text1074.htm#11980<-> CoxeterDiagram(N) : MonStgElt -> 
5<->CoxeterDiagram(M) <->text1074.htm#11980<->CoxeterDiagram(M) : AlgMatElt -&gt;
4<->Cartan_CoxeterDiagram (Example H101E18)<->text1074.htm#11981<->Cartan_CoxeterDiagram (Example H101E18)
4<->Example-CoxeterDiagram :<->text1074.htm#11981<->Example-CoxeterDiagram :: Cartan_CoxeterDiagram (Example H101E18)
3<->finiteaffine :<->text1074.htm<->finiteaffine :: Finite and Affine Coxeter  Groups (COXETER SYSTEMS)
3<->related :<->text1075.htm<->related :: Hyperbolic Groups (COXETER SYSTEMS)
5<->IsCoxeterCompactHyperbolic :: IsCoxeterHyperbolic(M) <->text1075.htm#11983<->IsCoxeterCompactHyperbolic :: IsCoxeterHyperbolic(M) : AlgMatElt -&gt; BoolElt
5<->IsCoxeterHyperbolic(M) <->text1075.htm#11983<->IsCoxeterHyperbolic(M) : AlgMatElt -&gt; BoolElt
5<->IsCoxeterCompactHyperbolic :: IsCoxeterHyperbolic(G) <->text1075.htm#11984<->IsCoxeterCompactHyperbolic :: IsCoxeterHyperbolic(G) : GrphUnd -&gt; BoolElt
5<->IsCoxeterHyperbolic(G) <->text1075.htm#11984<->IsCoxeterHyperbolic(G) : GrphUnd -&gt; BoolElt
5<->HyperbolicCoxeterMatrix(i) <->text1075.htm#11985<->HyperbolicCoxeterMatrix(i) : RngIntElt -&gt; AlgMatElt
5<->HyperbolicCoxeterGraph(i) <->text1075.htm#11986<->HyperbolicCoxeterGraph(i) : RngIntElt -&gt; GrphUnd
4<->Cartan_Hyperbolic (Example H101E19)<->text1075.htm#11987<->Cartan_Hyperbolic (Example H101E19)
4<->Example-Hyperbolic :<->text1075.htm#11987<->Example-Hyperbolic :: Cartan_Hyperbolic (Example H101E19)
3<->related :<->text1075.htm<->related :: Hyperbolic Groups (COXETER SYSTEMS)
3<->related :<->text1076.htm<->related :: Related Structures (COXETER SYSTEMS)
5<->RootSystem(G) <->text1076.htm#11989<->RootSystem(G) : GrphUnd -> RootSys
5<->RootSystem(C) <->text1076.htm#11989<->RootSystem(C) : AlgMatElt -> RootSys
5<->RootSystem(D) <->text1076.htm#11989<->RootSystem(D) : GrphDir -> RootSys
5<->RootSystem(N) <->text1076.htm#11989<->RootSystem(N) : MonStgElt -> RootSys
5<->RootSystem(M) <->text1076.htm#11989<->RootSystem(M) : AlgMatElt -&gt; RootSys
5<->RootDatum(M) <->text1076.htm#11990<->RootDatum(M) : AlgMatElt -> RootDtm
5<->RootDatum(G) <->text1076.htm#11990<->RootDatum(G) : GrphUnd -> RootDtm
5<->RootDatum(D) <->text1076.htm#11990<->RootDatum(D) : GrphDir -> RootDtm
5<->RootDatum(N) <->text1076.htm#11990<->RootDatum(N) : MonStgElt -> RootDtm
5<->RootDatum(C) <->text1076.htm#11990<->RootDatum(C) : AlgMatElt -&gt; RootDtm
5<->CoxeterGroup(GrpFPCox, G) <->text1076.htm#11991<->CoxeterGroup(GrpFPCox, G) : Cat, GrphUnd -> GrpFPCox
5<->CoxeterGroup(GrpFPCox, C) <->text1076.htm#11991<->CoxeterGroup(GrpFPCox, C) : Cat, AlgMatElt -> GrpFPCox
5<->CoxeterGroup(GrpFPCox, D) <->text1076.htm#11991<->CoxeterGroup(GrpFPCox, D) : Cat, GrphDir -> GrpFPCox
5<->CoxeterGroup(GrpFPCox, N) <->text1076.htm#11991<->CoxeterGroup(GrpFPCox, N) : Cat, MonStgElt -> GrpFPCox
5<->CoxeterGroup(GrpFPCox, M) <->text1076.htm#11991<->CoxeterGroup(GrpFPCox, M) : Cat, AlgMatElt -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, G) <->text1076.htm#11992<->CoxeterGroup(GrpPermCox, G) : Cat, GrphUnd -> GrpPermCox
5<->CoxeterGroup(GrpPermCox, C) <->text1076.htm#11992<->CoxeterGroup(GrpPermCox, C) : Cat, AlgMatElt -> GrpPermCox
5<->CoxeterGroup(GrpPermCox, D) <->text1076.htm#11992<->CoxeterGroup(GrpPermCox, D) : Cat, GrphDir -> GrpPermCox
5<->CoxeterGroup(GrpPermCox, N) <->text1076.htm#11992<->CoxeterGroup(GrpPermCox, N) : Cat, MonStgElt -> GrpPermCox
5<->CoxeterGroup(GrpPermCox, M) <->text1076.htm#11992<->CoxeterGroup(GrpPermCox, M) : Cat, AlgMatElt -&gt; GrpPermCox
5<->CoxeterGroup(G) <->text1076.htm#11993<->CoxeterGroup(G) : GrphUnd -> GrpPermCox
5<->CoxeterGroup(C) <->text1076.htm#11993<->CoxeterGroup(C) : AlgMatElt -> GrpPermCox
5<->CoxeterGroup(D) <->text1076.htm#11993<->CoxeterGroup(D) : GrphDir -> GrpPermCox
5<->CoxeterGroup(N) <->text1076.htm#11993<->CoxeterGroup(N) : MonStgElt -> GrpPermCox
5<->CoxeterGroup(M) <->text1076.htm#11993<->CoxeterGroup(M) : AlgMatElt -&gt; GrpPermCox
5<->ReflectionGroup(G) <->text1076.htm#11994<->ReflectionGroup(G) : GrphUnd -> GrpMat
5<->ReflectionGroup(C) <->text1076.htm#11994<->ReflectionGroup(C) : AlgMatElt -> GrpMat
5<->ReflectionGroup(D) <->text1076.htm#11994<->ReflectionGroup(D) : GrphDir -> GrpMat
5<->ReflectionGroup(N) <->text1076.htm#11994<->ReflectionGroup(N) : MonStgElt -> GrpMat
5<->ReflectionGroup(M) <->text1076.htm#11994<->ReflectionGroup(M) : AlgMatElt -&gt; GrpMat
5<->LieAlgebra(D, k) <->text1076.htm#11995<->LieAlgebra(D, k) : GrphDir, Rng -> AlgLie
5<->LieAlgebra(N, k) <->text1076.htm#11995<->LieAlgebra(N, k) : MonStgElt, Rng -> AlgLie
5<->LieAlgebra(C, k) <->text1076.htm#11995<->LieAlgebra(C, k) : AlgMatElt, Rng -&gt; AlgLie
5<->MatrixLieAlgebra(D, k) <->text1076.htm#11996<->MatrixLieAlgebra(D, k) : GrphDir, Rng -> AlgLie
5<->MatrixLieAlgebra(N, k) <->text1076.htm#11996<->MatrixLieAlgebra(N, k) : MonStgElt, Rng -> AlgLie
5<->MatrixLieAlgebra(C, k) <->text1076.htm#11996<->MatrixLieAlgebra(C, k) : AlgMatElt, Rng -&gt; AlgLie
5<->GroupOfLieType(D, k) <->text1076.htm#11997<->GroupOfLieType(D, k) : GrphDir, Rng-> GrpLie
5<->GroupOfLieType(N, k) <->text1076.htm#11997<->GroupOfLieType(N, k) : MonStgElt, Rng -> GrpLie
5<->GroupOfLieType(C, k) <->text1076.htm#11997<->GroupOfLieType(C, k) : AlgMatElt, Rng -&gt; GrpLie
3<->related :<->text1076.htm<->related :: Related Structures (COXETER SYSTEMS)
3<->coxeter-description :<->text1068.htm<->coxeter-description :: COXETER SYSTEMS
3<->root-systems :<->text1079.htm<->root-systems :: ROOT SYSTEMS
3<->root system :<->text1080.htm<->root system :: Introduction (ROOT SYSTEMS)
3<->Coxeter group :<->text1080.htm<->Coxeter group :: Introduction (ROOT SYSTEMS)
3<->group!Coxeter :<->text1080.htm<->group!Coxeter :: Introduction (ROOT SYSTEMS)
3<->Lie algebra :<->text1080.htm<->Lie algebra :: Introduction (ROOT SYSTEMS)
3<->algebra!Lie :<->text1080.htm<->algebra!Lie :: Introduction (ROOT SYSTEMS)
3<->introduction :<->text1080.htm<->introduction :: Introduction (ROOT SYSTEMS)
3<->reflection :<->text1080.htm#12002<->reflection :: Reflections (ROOT SYSTEMS)
3<->coreflection :<->text1080.htm#12002<->coreflection :: Reflections (ROOT SYSTEMS)
3<->refl :<->text1080.htm#12002<->refl :: Reflections (ROOT SYSTEMS)
3<->root space :<->text1080.htm#12003<->root space :: Definition of a Root System (ROOT SYSTEMS)
3<->coroot space :<->text1080.htm#12003<->coroot space :: Definition of a Root System (ROOT SYSTEMS)
3<->root :<->text1080.htm#12003<->root :: Definition of a Root System (ROOT SYSTEMS)
3<->coroot :<->text1080.htm#12003<->coroot :: Definition of a Root System (ROOT SYSTEMS)
3<->rootsys :<->text1080.htm#12003<->rootsys :: Definition of a Root System (ROOT SYSTEMS)
3<->simple root :<->text1080.htm#12004<->simple root :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root!simple :<->text1080.htm#12004<->root!simple :: Simple and Positive Roots (ROOT SYSTEMS)
3<->fundamental root :<->text1080.htm#12004<->fundamental root :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root!fundamental :<->text1080.htm#12004<->root!fundamental :: Simple and Positive Roots (ROOT SYSTEMS)
3<->positive root :<->text1080.htm#12004<->positive root :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root!positive :<->text1080.htm#12004<->root!positive :: Simple and Positive Roots (ROOT SYSTEMS)
3<->negative root :<->text1080.htm#12004<->negative root :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root!negative :<->text1080.htm#12004<->root!negative :: Simple and Positive Roots (ROOT SYSTEMS)
3<->simple coroot :<->text1080.htm#12004<->simple coroot :: Simple and Positive Roots (ROOT SYSTEMS)
3<->positive 
coroot :<->text1080.htm#12004<->positive 
coroot :: Simple and Positive Roots (ROOT SYSTEMS)
3<->negative coroot :<->text1080.htm#12004<->negative coroot :: Simple and Positive Roots (ROOT SYSTEMS)
3<->coroot!simple :<->text1080.htm#12004<->coroot!simple :: Simple and Positive Roots (ROOT SYSTEMS)
3<->coroot!positive :<->text1080.htm#12004<->coroot!positive :: Simple and Positive Roots (ROOT SYSTEMS)
3<->coroot!negative :<->text1080.htm#12004<->coroot!negative :: Simple and Positive Roots (ROOT SYSTEMS)
3<->rank :<->text1080.htm#12004<->rank :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root system!rank :<->text1080.htm#12004<->root system!rank :: Simple and Positive Roots (ROOT SYSTEMS)
3<->semisimple root system :<->text1080.htm#12004<->semisimple root system :: Simple and Positive Roots (ROOT SYSTEMS)
3<->root system!semisimple :<->text1080.htm#12004<->root system!semisimple :: Simple and Positive Roots (ROOT SYSTEMS)
3<->positive-simple-roots :<->text1080.htm#12004<->positive-simple-roots :: Simple and Positive Roots (ROOT SYSTEMS)
3<->Cartan matrix :<->text1080.htm#12005<->Cartan matrix :: The Coxeter Group (ROOT SYSTEMS)
3<->Coxeter form :<->text1080.htm#12005<->Coxeter form :: The Coxeter Group (ROOT SYSTEMS)
3<->long
root :<->text1080.htm#12005<->long
root :: The Coxeter Group (ROOT SYSTEMS)
3<->root|long :<->text1080.htm#12005<->root|long :: The Coxeter Group (ROOT SYSTEMS)
3<->short root :<->text1080.htm#12005<->short root :: The Coxeter Group (ROOT SYSTEMS)
3<->root|short :<->text1080.htm#12005<->root|short :: The Coxeter Group (ROOT SYSTEMS)
3<->positive-simple-roots :<->text1080.htm#12005<->positive-simple-roots :: The Coxeter Group (ROOT SYSTEMS)
3<->divisible root :<->text1080.htm#12006<->divisible root :: Nonreduced Root Systems (ROOT SYSTEMS)
3<->root|divisible :<->text1080.htm#12006<->root|divisible :: Nonreduced Root Systems (ROOT SYSTEMS)
3<->indivisible subsystem :<->text1080.htm#12006<->indivisible subsystem :: Nonreduced Root Systems (ROOT SYSTEMS)
3<->nonred-root-systems :<->text1080.htm#12006<->nonred-root-systems :: Nonreduced Root Systems (ROOT SYSTEMS)
3<->introduction :<->text1080.htm<->introduction :: Introduction (ROOT SYSTEMS)
3<->construct-root-system :<->text1081.htm<->construct-root-system :: Constructing Root Systems (ROOT SYSTEMS)
5<->RootSystem(N) <->text1081.htm#12008<->RootSystem(N) : MonStgElt -&gt; RootSys
4<->RootSys_CreatingRootSystemsName (Example H102E1)<->text1081.htm#12009<->RootSys_CreatingRootSystemsName (Example H102E1)
4<->Example-CreatingRootSystemsName :<->text1081.htm#12009<->Example-CreatingRootSystemsName :: RootSys_CreatingRootSystemsName (Example H102E1)
5<->RootSystem(G) <->text1081.htm#12010<->RootSystem(G) : GrphUnd -> RootSys
5<->RootSystem(M) <->text1081.htm#12010<->RootSystem(M) : AlgMatElt -&gt; RootSys
5<->RootSystem(C) <->text1081.htm#12011<->RootSystem(C) : AlgMatElt -&gt; RootSys
5<->RootSystem(D) <->text1081.htm#12012<->RootSystem(D) : GrphDir -&gt; RootSys
4<->RootSys_CreatingRootSystemsMatrix (Example H102E2)<->text1081.htm#12013<->RootSys_CreatingRootSystemsMatrix (Example H102E2)
4<->Example-CreatingRootSystemsMatrix :<->text1081.htm#12013<->Example-CreatingRootSystemsMatrix :: RootSys_CreatingRootSystemsMatrix (Example H102E2)
5<->RootSystem(A, B) <->text1081.htm#12014<->RootSystem(A, B) : Mtrx, Mtrx -&gt; RootSys
4<->RootSys_G2RootSystem (Example H102E3)<->text1081.htm#12015<->RootSys_G2RootSystem (Example H102E3)
4<->Example-G2RootSystem :<->text1081.htm#12015<->Example-G2RootSystem :: RootSys_G2RootSystem (Example H102E3)
5<->IrreducibleRootSystem(X, n) <->text1081.htm#12016<->IrreducibleRootSystem(X, n) : MonStgElt, RngIntElt -&gt; RootSys
5<->StandardRootSystem(X, n) <->text1081.htm#12017<->StandardRootSystem(X, n) : MonStgElt, RngIntElt -&gt; RootSys
4<->RootSys_IrreducibleRootSystem (Example H102E4)<->text1081.htm#12018<->RootSys_IrreducibleRootSystem (Example H102E4)
4<->Example-IrreducibleRootSystem :<->text1081.htm#12018<->Example-IrreducibleRootSystem :: RootSys_IrreducibleRootSystem (Example H102E4)
5<->ToralRootSystem(n) <->text1081.htm#12019<->ToralRootSystem(n) : RngIntElt -&gt; RootSys
5<->TrivialRootSystem() <->text1081.htm#12020<->TrivialRootSystem() : -&gt; RootSys
3<->construct-root-system :<->text1081.htm<->construct-root-system :: Constructing Root Systems (ROOT SYSTEMS)
3<->operators-root-sys :<->text1082.htm<->operators-root-sys :: Operators on Root Systems (ROOT SYSTEMS)
5<->R1 eq R2 <->text1082.htm#12022<->R1 eq R2 : RootSys, RootSys -&gt; BoolElt
5<->IsIsomorphic(R1, R2) <->text1082.htm#12023<->IsIsomorphic(R1, R2) : RootSys, RootSys -&gt; BoolElt
5<->IsCartanEquivalent(R1, R2) <->text1082.htm#12024<->IsCartanEquivalent(R1, R2) : RootSys, RootSys -&gt; BoolElt
4<->RootSys_Isomorphism (Example H102E5)<->text1082.htm#12025<->RootSys_Isomorphism (Example H102E5)
4<->Example-Isomorphism :<->text1082.htm#12025<->Example-Isomorphism :: RootSys_Isomorphism (Example H102E5)
5<->CartanName(R) <->text1082.htm#12026<->CartanName(R) : RootSys -&gt; List
5<->CoxeterDiagram(R) <->text1082.htm#12027<->CoxeterDiagram(R) : RootSys -&gt;
5<->DynkinDiagram(R) <->text1082.htm#12028<->DynkinDiagram(R) : RootSys -&gt;
5<->CoxeterMatrix(R) <->text1082.htm#12029<->CoxeterMatrix(R) : RootSys -&gt; AlgMatElt
5<->CoxeterGraph(R) <->text1082.htm#12030<->CoxeterGraph(R) : RootSys -&gt; GrphUnd
5<->CartanMatrix(R) <->text1082.htm#12031<->CartanMatrix(R) : RootSys -&gt; AlgMatElt
5<->DynkinDigraph(R) <->text1082.htm#12032<->DynkinDigraph(R) : RootSys -&gt; GrphDir
4<->RootSys_Diagrams (Example H102E6)<->text1082.htm#12033<->RootSys_Diagrams (Example H102E6)
4<->Example-Diagrams :<->text1082.htm#12033<->Example-Diagrams :: RootSys_Diagrams (Example H102E6)
5<->BaseRing :: BaseField(R) <->text1082.htm#12034<->BaseRing :: BaseField(R) : RootSys -&gt; Fld
5<->BaseField(R) <->text1082.htm#12034<->BaseField(R) : RootSys -&gt; Fld
5<->RealInjection(R) <->text1082.htm#12035<->RealInjection(R) : RootSys -&gt; .
5<->Rank(R) <->text1082.htm#12036<->Rank(R) : RootSys -&gt; RngIntElt
5<->Dimension(R) <->text1082.htm#12037<->Dimension(R) : RootSys -&gt; RngIntElt
5<->CoxeterGroupOrder(R) <->text1082.htm#12038<->CoxeterGroupOrder(R) : RootSys -&gt; RngIntElt
4<->RootSys_BasicOperations (Example H102E7)<->text1082.htm#12039<->RootSys_BasicOperations (Example H102E7)
4<->Example-BasicOperations :<->text1082.htm#12039<->Example-BasicOperations :: RootSys_BasicOperations (Example H102E7)
3<->operators-root-sys :<->text1082.htm<->operators-root-sys :: Operators on Root Systems (ROOT SYSTEMS)
3<->properties-root-system :<->text1083.htm<->properties-root-system :: Properties of Root Systems (ROOT SYSTEMS)
5<->IsIrreducible(R) <->text1083.htm#12041<->IsIrreducible(R) : RootSys -&gt; BoolElt
5<->IsProjectivelyIrreducible(R) <->text1083.htm#12042<->IsProjectivelyIrreducible(R) : RootSys -&gt; BoolElt
5<->IsReduced(R) <->text1083.htm#12043<->IsReduced(R) : RootSys -&gt; BoolElt
5<->IsSemisimple(R) <->text1083.htm#12044<->IsSemisimple(R) : RootSys-&gt; BoolElt
5<->IsCrystallographic(R) <->text1083.htm#12045<->IsCrystallographic(R) : RootSys -&gt; BoolElt
5<->IsSimplyLaced(R) <->text1083.htm#12046<->IsSimplyLaced(R) : RootSys-&gt; BoolElt
4<->RootSys_Properties (Example H102E8)<->text1083.htm#12047<->RootSys_Properties (Example H102E8)
4<->Example-Properties :<->text1083.htm#12047<->Example-Properties :: RootSys_Properties (Example H102E8)
3<->properties-root-system :<->text1083.htm<->properties-root-system :: Properties of Root Systems (ROOT SYSTEMS)
3<->root :<->text1084.htm<->root :: Roots and Coroots (ROOT SYSTEMS)
3<->roots-coroots-weights :<->text1084.htm<->roots-coroots-weights :: Roots and Coroots (ROOT SYSTEMS)
3<->access :<->text1084.htm#12049<->access :: Accessing Roots and Coroots (ROOT SYSTEMS)
5<->CorootSpace :: RootSpace(R) <->text1084.htm#12050<->CorootSpace :: RootSpace(R) : RootSys -&gt; ModTupFld
5<->RootSpace(R) <->text1084.htm#12050<->RootSpace(R) : RootSys -&gt; ModTupFld
5<->SimpleCoroots :: SimpleRoots(R) <->text1084.htm#12051<->SimpleCoroots :: SimpleRoots(R) : RootSys -&gt; Mtrx
5<->SimpleRoots(R) <->text1084.htm#12051<->SimpleRoots(R) : RootSys -&gt; Mtrx
4<->RootSys_RootSpace (Example H102E9)<->text1084.htm#12052<->RootSys_RootSpace (Example H102E9)
4<->Example-RootSpace :<->text1084.htm#12052<->Example-RootSpace :: RootSys_RootSpace (Example H102E9)
5<->NumPosRoots :: NumberOfPositiveRoots(R) <->text1084.htm#12053<->NumPosRoots :: NumberOfPositiveRoots(R) : RootSys -&gt; RngIntElt
5<->NumberOfPositiveRoots(R) <->text1084.htm#12053<->NumberOfPositiveRoots(R) : RootSys -&gt; RngIntElt
5<->Coroots :: Roots(R) <->text1084.htm#12054<->Coroots :: Roots(R) : RootSys -&gt; (@@)
5<->Roots(R) <->text1084.htm#12054<->Roots(R) : RootSys -&gt; (@@)
5<->PositiveCoroots :: PositiveRoots(R) <->text1084.htm#12055<->PositiveCoroots :: PositiveRoots(R) : RootSys -&gt; (@@)
5<->PositiveRoots(R) <->text1084.htm#12055<->PositiveRoots(R) : RootSys -&gt; (@@)
5<->Coroot :: Root(R, r) <->text1084.htm#12056<->Coroot :: Root(R, r) : RootSys, RngIntElt -&gt; (@@)
5<->Root(R, r) <->text1084.htm#12056<->Root(R, r) : RootSys, RngIntElt -&gt; (@@)
5<->CorootPosition :: RootPosition(R, v) <->text1084.htm#12057<->CorootPosition :: RootPosition(R, v) : RootSys, . -&gt; (@@)
5<->RootPosition(R, v) <->text1084.htm#12057<->RootPosition(R, v) : RootSys, . -&gt; (@@)
4<->RootSys_RootsCoroots (Example H102E10)<->text1084.htm#12058<->RootSys_RootsCoroots (Example H102E10)
4<->Example-RootsCoroots :<->text1084.htm#12058<->Example-RootsCoroots :: RootSys_RootsCoroots (Example H102E10)
5<->HighestCoroot :: HighestRoot(R) <->text1084.htm#12059<->HighestCoroot :: HighestRoot(R) : RootSys -&gt; .
5<->HighestRoot(R) <->text1084.htm#12059<->HighestRoot(R) : RootSys -&gt; .
5<->HighestLongCoroot :: HighestLongRoot(R) <->text1084.htm#12060<->HighestLongCoroot :: HighestLongRoot(R) : RootSys  -&gt; .
5<->HighestLongRoot(R) <->text1084.htm#12060<->HighestLongRoot(R) : RootSys  -&gt; .
5<->HighestShortCoroot :: HighestShortRoot(R) <->text1084.htm#12061<->HighestShortCoroot :: HighestShortRoot(R) : RootSys  -&gt; .
5<->HighestShortRoot(R) <->text1084.htm#12061<->HighestShortRoot(R) : RootSys  -&gt; .
4<->RootSys_HeighestRoots (Example H102E11)<->text1084.htm#12062<->RootSys_HeighestRoots (Example H102E11)
4<->Example-HeighestRoots :<->text1084.htm#12062<->Example-HeighestRoots :: RootSys_HeighestRoots (Example H102E11)
5<->DualCoxeterForm :: CoxeterForm(R) <->text1084.htm#12063<->DualCoxeterForm :: CoxeterForm(R) : RootSys -&gt; AlgMatElt
5<->CoxeterForm(R) <->text1084.htm#12063<->CoxeterForm(R) : RootSys -&gt; AlgMatElt
3<->access :<->text1084.htm#12049<->access :: Accessing Roots and Coroots (ROOT SYSTEMS)
3<->rootrefl :<->text1084.htm#12064<->rootrefl :: Reflections (ROOT SYSTEMS)
5<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(R) <->text1084.htm#12065<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(R) : RootSys -&gt; []
5<->SimpleReflectionMatrices(R) <->text1084.htm#12065<->SimpleReflectionMatrices(R) : RootSys -&gt; []
5<->CoreflectionMatrices :: ReflectionMatrices(R) <->text1084.htm#12066<->CoreflectionMatrices :: ReflectionMatrices(R) : RootSys -&gt; []
5<->ReflectionMatrices(R) <->text1084.htm#12066<->ReflectionMatrices(R) : RootSys -&gt; []
5<->CoreflectionMatrix :: ReflectionMatrix(R, r) <->text1084.htm#12067<->CoreflectionMatrix :: ReflectionMatrix(R, r) : RootSys, RngIntElt -&gt; []
5<->ReflectionMatrix(R, r) <->text1084.htm#12067<->ReflectionMatrix(R, r) : RootSys, RngIntElt -&gt; []
5<->SimpleReflectionPermutations(R) <->text1084.htm#12068<->SimpleReflectionPermutations(R) : RootSys -&gt; []
5<->ReflectionPermutations(R) <->text1084.htm#12069<->ReflectionPermutations(R) : RootSys -&gt; []
5<->ReflectionPermutation(R, r) <->text1084.htm#12070<->ReflectionPermutation(R, r) : RootSys, RngIntElt -&gt; []
5<->ReflectionWords(R) <->text1084.htm#12071<->ReflectionWords(R) : RootSys -&gt; []
5<->ReflectionWord(R, r) <->text1084.htm#12072<->ReflectionWord(R, r) : RootSys, RngIntElt -&gt; []
4<->RootSys_Action (Example H102E12)<->text1084.htm#12073<->RootSys_Action (Example H102E12)
4<->Example-Action :<->text1084.htm#12073<->Example-Action :: RootSys_Action (Example H102E12)
3<->rootrefl :<->text1084.htm#12064<->rootrefl :: Reflections (ROOT SYSTEMS)
3<->ops-root-coroot :<->text1084.htm#12074<->ops-root-coroot :: Operations and Properties for  Roots and Coroot Indices (ROOT SYSTEMS)
5<->Sum(R, r, s) <->text1084.htm#12075<->Sum(R, r, s) : RootSys, RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsPositive(R, r) <->text1084.htm#12076<->IsPositive(R, r) : RootSys, RngIntElt -&gt; BoolElt
5<->IsNegative(R, r) <->text1084.htm#12077<->IsNegative(R, r) : RootSys, RngIntElt -&gt; BoolElt
5<->Negative(R, r) <->text1084.htm#12078<->Negative(R, r) : RootSys, RngIntElt -&gt; RngIntElt
4<->RootSys_RootArithmetic (Example H102E13)<->text1084.htm#12079<->RootSys_RootArithmetic (Example H102E13)
4<->Example-RootArithmetic :<->text1084.htm#12079<->Example-RootArithmetic :: RootSys_RootArithmetic (Example H102E13)
5<->CorootHeight :: RootHeight(R, r) <->text1084.htm#12080<->CorootHeight :: RootHeight(R, r) : RootSys, RngIntElt -&gt; RngIntElt
5<->RootHeight(R, r) <->text1084.htm#12080<->RootHeight(R, r) : RootSys, RngIntElt -&gt; RngIntElt
5<->CorootNorms :: RootNorms(R) <->text1084.htm#12081<->CorootNorms :: RootNorms(R) : RootSys -&gt; [RngIntElt]
5<->RootNorms(R) <->text1084.htm#12081<->RootNorms(R) : RootSys -&gt; [RngIntElt]
5<->CorootNorm :: RootNorm(R, r) <->text1084.htm#12082<->CorootNorm :: RootNorm(R, r) : RootSys, RngIntElt -&gt; RngIntElt
5<->RootNorm(R, r) <->text1084.htm#12082<->RootNorm(R, r) : RootSys, RngIntElt -&gt; RngIntElt
5<->IsLongRoot(R, r) <->text1084.htm#12083<->IsLongRoot(R, r) : RootSys, RngIntElt -&gt; BoolElt
5<->IsShortRoot(R, r) <->text1084.htm#12084<->IsShortRoot(R, r) : RootSys, RngIntElt -&gt; BoolElt
5<->IsIndivisibleRoot(R, r) <->text1084.htm#12085<->IsIndivisibleRoot(R, r) : RootSys, RngIntElt -&gt; BoolElt
5<->LeftString(R, r, s) <->text1084.htm#12086<->LeftString(R, r, s) : RootSys, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightString(R, r, s) <->text1084.htm#12087<->RightString(R, r, s) : RootSys, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LeftStringLength(R, r, s) <->text1084.htm#12088<->LeftStringLength(R, r, s) : RootSys, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightStringLength(R, r, s) <->text1084.htm#12089<->RightStringLength(R, r, s) : RootSys, RngIntElt, RngIntElt -&gt; RngIntElt
4<->RootSys_RootOperations (Example H102E14)<->text1084.htm#12090<->RootSys_RootOperations (Example H102E14)
4<->Example-RootOperations :<->text1084.htm#12090<->Example-RootOperations :: RootSys_RootOperations (Example H102E14)
5<->AdditiveOrder(R) <->text1084.htm#12091<->AdditiveOrder(R) : RootSys -&gt; SeqEnum
5<->IsAdditiveOrder(R, Q) <->text1084.htm#12092<->IsAdditiveOrder(R, Q) : RootSys, [RngIntElt] -&gt; BoolElt
4<->RootSys_AdditiveOrder (Example H102E15)<->text1084.htm#12093<->RootSys_AdditiveOrder (Example H102E15)
4<->Example-AdditiveOrder :<->text1084.htm#12093<->Example-AdditiveOrder :: RootSys_AdditiveOrder (Example H102E15)
3<->ops-root-coroot :<->text1084.htm#12074<->ops-root-coroot :: Operations and Properties for  Roots and Coroot Indices (ROOT SYSTEMS)
3<->roots-coroots-weights :<->text1084.htm<->roots-coroots-weights :: Roots and Coroots (ROOT SYSTEMS)
3<->create-new-root-system :<->text1085.htm<->create-new-root-system :: Building Root Systems (ROOT SYSTEMS)
5<->sub<R | a> <->text1085.htm#12095<->sub&lt;R | a&gt; : RootSys, SetEnum -&gt; RootSys
5<->sub<R | s> <->text1085.htm#12096<->sub&lt;R | s&gt; : RootSys, SetEnum -&gt; RootSys
5<->R1 subset R2 <->text1085.htm#12097<->R1 subset R2 : RootSys, RootSys -&gt; BoolElt, .
5<->DirectSum :: R1 + R2 <->text1085.htm#12098<->DirectSum :: R1 + R2 : RootSys, RootSys -&gt; RootSys
5<->R1 + R2 <->text1085.htm#12098<->R1 + R2 : RootSys, RootSys -&gt; RootSys
5<->R1 join R2 <->text1085.htm#12099<->R1 join R2 : RootSys, RootSys -&gt; RootSys
4<->RootSys_RootSysSums (Example H102E16)<->text1085.htm#12100<->RootSys_RootSysSums (Example H102E16)
4<->Example-RootSysSums :<->text1085.htm#12100<->Example-RootSysSums :: RootSys_RootSysSums (Example H102E16)
5<->IndecomposableSummands :: DirectSumDecomposition(R) <->text1085.htm#12101<->IndecomposableSummands :: DirectSumDecomposition(R) : RootSys -&gt; []
5<->DirectSumDecomposition(R) <->text1085.htm#12101<->DirectSumDecomposition(R) : RootSys -&gt; []
5<->Dual(R) <->text1085.htm#12102<->Dual(R) : RootSys -&gt; RootSys
5<->IndivisibleSubsystem(R) <->text1085.htm#12103<->IndivisibleSubsystem(R) : RootSys -&gt; RootSys
4<->RootSys_DirectSumDual (Example H102E17)<->text1085.htm#12104<->RootSys_DirectSumDual (Example H102E17)
4<->Example-DirectSumDual :<->text1085.htm#12104<->Example-DirectSumDual :: RootSys_DirectSumDual (Example H102E17)
3<->create-new-root-system :<->text1085.htm<->create-new-root-system :: Building Root Systems (ROOT SYSTEMS)
3<->related-structures :<->text1086.htm<->related-structures :: Related Structures (ROOT SYSTEMS)
5<->RootDatum(R) <->text1086.htm#12106<->RootDatum(R) : RootSys -&gt; RootDtm
5<->CoxeterGroup(GrpFPCox, R) <->text1086.htm#12107<->CoxeterGroup(GrpFPCox, R) : Cat, RootSys -&gt; RngIntElt
5<->CoxeterGroup(GrpPermCox, R) <->text1086.htm#12108<->CoxeterGroup(GrpPermCox, R) : Cat, RootSys -> RngIntElt
5<->CoxeterGroup(R) <->text1086.htm#12108<->CoxeterGroup(R) : RootSys -&gt; RngIntElt
5<->CoxeterGroup :: ReflectionGroup(R) <->text1086.htm#12109<->CoxeterGroup :: ReflectionGroup(R) : RootSys -&gt; GrpMat
5<->ReflectionGroup(R) <->text1086.htm#12109<->ReflectionGroup(R) : RootSys -&gt; GrpMat
5<->LieAlgebra(R, k) <->text1086.htm#12110<->LieAlgebra(R, k) : RootSys, Rng -&gt; AlgLie
5<->MatrixLieAlgebra(R, k) <->text1086.htm#12111<->MatrixLieAlgebra(R, k) : RootSys -&gt; GrpMat
4<->RootSys_Related (Example H102E18)<->text1086.htm#12112<->RootSys_Related (Example H102E18)
4<->Example-Related :<->text1086.htm#12112<->Example-Related :: RootSys_Related (Example H102E18)
3<->related-structures :<->text1086.htm<->related-structures :: Related Structures (ROOT SYSTEMS)
3<->root-systems :<->text1079.htm<->root-systems :: ROOT SYSTEMS
3<->root-data :<->text1089.htm<->root-data :: ROOT DATA
3<->root datum :<->text1090.htm<->root datum :: Introduction (ROOT DATA)
3<->group of Lie type :<->text1090.htm<->group of Lie type :: Introduction (ROOT DATA)
3<->introduction :<->text1090.htm<->introduction :: Introduction (ROOT DATA)
3<->reflection :<->text1090.htm#12117<->reflection :: Reflections (ROOT DATA)
3<->coreflection :<->text1090.htm#12117<->coreflection :: Reflections (ROOT DATA)
3<->refl :<->text1090.htm#12117<->refl :: Reflections (ROOT DATA)
3<->root space :<->text1090.htm#12118<->root space :: Definition of a Split Root Datum (ROOT DATA)
3<->coroot space :<->text1090.htm#12118<->coroot space :: Definition of a Split Root Datum (ROOT DATA)
3<->root :<->text1090.htm#12118<->root :: Definition of a Split Root Datum (ROOT DATA)
3<->coroot :<->text1090.htm#12118<->coroot :: Definition of a Split Root Datum (ROOT DATA)
3<->rootdtm :<->text1090.htm#12118<->rootdtm :: Definition of a Split Root Datum (ROOT DATA)
3<->simple root :<->text1090.htm#12119<->simple root :: Simple and Positive Roots (ROOT DATA)
3<->root!simple :<->text1090.htm#12119<->root!simple :: Simple and Positive Roots (ROOT DATA)
3<->fundamental root :<->text1090.htm#12119<->fundamental root :: Simple and Positive Roots (ROOT DATA)
3<->root!fundamental :<->text1090.htm#12119<->root!fundamental :: Simple and Positive Roots (ROOT DATA)
3<->positive root :<->text1090.htm#12119<->positive root :: Simple and Positive Roots (ROOT DATA)
3<->root!positive :<->text1090.htm#12119<->root!positive :: Simple and Positive Roots (ROOT DATA)
3<->negative root :<->text1090.htm#12119<->negative root :: Simple and Positive Roots (ROOT DATA)
3<->root!negative :<->text1090.htm#12119<->root!negative :: Simple and Positive Roots (ROOT DATA)
3<->simple coroot :<->text1090.htm#12119<->simple coroot :: Simple and Positive Roots (ROOT DATA)
3<->positive 
coroot :<->text1090.htm#12119<->positive 
coroot :: Simple and Positive Roots (ROOT DATA)
3<->negative coroot :<->text1090.htm#12119<->negative coroot :: Simple and Positive Roots (ROOT DATA)
3<->coroot!simple :<->text1090.htm#12119<->coroot!simple :: Simple and Positive Roots (ROOT DATA)
3<->coroot!positive :<->text1090.htm#12119<->coroot!positive :: Simple and Positive Roots (ROOT DATA)
3<->coroot!negative :<->text1090.htm#12119<->coroot!negative :: Simple and Positive Roots (ROOT DATA)
3<->rank :<->text1090.htm#12119<->rank :: Simple and Positive Roots (ROOT DATA)
3<->root datum!rank :<->text1090.htm#12119<->root datum!rank :: Simple and Positive Roots (ROOT DATA)
3<->dimension :<->text1090.htm#12119<->dimension :: Simple and Positive Roots (ROOT DATA)
3<->root datum!dimension :<->text1090.htm#12119<->root datum!dimension :: Simple and Positive Roots (ROOT DATA)
3<->semisimple :<->text1090.htm#12119<->semisimple :: Simple and Positive Roots (ROOT DATA)
3<->root datum!semisimple :<->text1090.htm#12119<->root datum!semisimple :: Simple and Positive Roots (ROOT DATA)
3<->positive-simple-roots :<->text1090.htm#12119<->positive-simple-roots :: Simple and Positive Roots (ROOT DATA)
3<->Cartan matrix :<->text1090.htm#12120<->Cartan matrix :: The Coxeter Group (ROOT DATA)
3<->Coxeter form :<->text1090.htm#12120<->Coxeter form :: The Coxeter Group (ROOT DATA)
3<->long
root :<->text1090.htm#12120<->long
root :: The Coxeter Group (ROOT DATA)
3<->root|long :<->text1090.htm#12120<->root|long :: The Coxeter Group (ROOT DATA)
3<->short root :<->text1090.htm#12120<->short root :: The Coxeter Group (ROOT DATA)
3<->root|short :<->text1090.htm#12120<->root|short :: The Coxeter Group (ROOT DATA)
3<->rootdatum-cox-grps :<->text1090.htm#12120<->rootdatum-cox-grps :: The Coxeter Group (ROOT DATA)
3<->nonred-root-data :<->text1090.htm#12121<->nonred-root-data :: Nonreduced Root Data (ROOT DATA)
3<->root data!Cartan equivalence :<->text1090.htm#12122<->root data!Cartan equivalence :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->isogeny :<->text1090.htm#12122<->isogeny :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->weight :<->text1090.htm#12122<->weight :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->weight lattice :<->text1090.htm#12122<->weight lattice :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->isogeny group :<->text1090.htm#12122<->isogeny group :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->root datum!fundamental group :<->text1090.htm#12122<->root datum!fundamental group :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->adjoint :<->text1090.htm#12122<->adjoint :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->root
datum!adjoint :<->text1090.htm#12122<->root
datum!adjoint :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->simply connected :<->text1090.htm#12122<->simply connected :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->root datum!simply connected :<->text1090.htm#12122<->root datum!simply connected :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->coisogeny group :<->text1090.htm#12122<->coisogeny group :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->rootdata :<->text1090.htm#12122<->rootdata :: Isogeny of Split Reduced Root  Data (ROOT DATA)
3<->relative root system :<->text1090.htm#12123<->relative root system :: Extended Root Data (ROOT DATA)
3<->root system!relative :<->text1090.htm#12123<->root system!relative :: Extended Root Data (ROOT DATA)
3<->relative rank :<->text1090.htm#12123<->relative rank :: Extended Root Data (ROOT DATA)
3<->absolute rank :<->text1090.htm#12123<->absolute rank :: Extended Root Data (ROOT DATA)
3<->extended-rootdtm :<->text1090.htm#12123<->extended-rootdtm :: Extended Root Data (ROOT DATA)
3<->introduction :<->text1090.htm<->introduction :: Introduction (ROOT DATA)
3<->extraspecial signs :<->text1091.htm<->extraspecial signs :: Constructing Root Data (ROOT DATA)
3<->create-root-datum :<->text1091.htm<->create-root-datum :: Constructing Root Data (ROOT DATA)
5<->RootDatum(N) <->text1091.htm#12125<->RootDatum(N) : MonStgElt -&gt; RootDtm
4<->RootDtm_CreatingRootData (Example H103E1)<->text1091.htm#12126<->RootDtm_CreatingRootData (Example H103E1)
4<->Example-CreatingRootData :<->text1091.htm#12126<->Example-CreatingRootData :: RootDtm_CreatingRootData (Example H103E1)
4<->RootDtm_CreatingExtendedRootData (Example H103E2)<->text1091.htm#12127<->RootDtm_CreatingExtendedRootData (Example H103E2)
4<->Example-CreatingExtendedRootData :<->text1091.htm#12127<->Example-CreatingExtendedRootData :: RootDtm_CreatingExtendedRootData (Example H103E2)
5<->RootDatum(C) <->text1091.htm#12128<->RootDatum(C) : AlgMatElt -&gt; RootDtm
5<->RootDatum(D) <->text1091.htm#12129<->RootDatum(D) : GrphDir -&gt; RootDtm
5<->RootDatum(A, B) <->text1091.htm#12130<->RootDatum(A, B) : Mtrx, Mtrx -&gt; RootDtm
4<->RootDtm_G2RootSystem (Example H103E3)<->text1091.htm#12131<->RootDtm_G2RootSystem (Example H103E3)
4<->Example-G2RootSystem :<->text1091.htm#12131<->Example-G2RootSystem :: RootDtm_G2RootSystem (Example H103E3)
5<->IrreducibleRootDatum(X, n) <->text1091.htm#12132<->IrreducibleRootDatum(X, n) : MonStgElt, RngIntElt -&gt; RootDtm
5<->StandardRootDatum(X, n) <->text1091.htm#12133<->StandardRootDatum(X, n) : MonStgElt, RngIntElt -&gt; RootDtm
4<->RootDtm_IrreducibleRootDatum (Example H103E4)<->text1091.htm#12134<->RootDtm_IrreducibleRootDatum (Example H103E4)
4<->Example-IrreducibleRootDatum :<->text1091.htm#12134<->Example-IrreducibleRootDatum :: RootDtm_IrreducibleRootDatum (Example H103E4)
5<->ToralRootDatum(n) <->text1091.htm#12135<->ToralRootDatum(n) : RngIntElt -&gt; RootDtm
4<->RootDtm_ToralRootData (Example H103E5)<->text1091.htm#12136<->RootDtm_ToralRootData (Example H103E5)
4<->Example-ToralRootData :<->text1091.htm#12136<->Example-ToralRootData :: RootDtm_ToralRootData (Example H103E5)
5<->TrivialRootDatum() <->text1091.htm#12137<->TrivialRootDatum() : -&gt; RootDat
3<->sparse-root-data-create :<->text1091.htm#12138<->sparse-root-data-create :: Constructing Sparse Root Data (ROOT DATA)
5<->SparseRootDatum(N) <->text1091.htm#12139<->SparseRootDatum(N) : MonStgElt -> RootDtmSprs
5<->SparseRootDatum(C) <->text1091.htm#12139<->SparseRootDatum(C) : AlgMatElt -> RootDtmSprs
5<->SparseRootDatum(D) <->text1091.htm#12139<->SparseRootDatum(D) : GrphDir -> RootDtmSprs
5<->SparseRootDatum(R) <->text1091.htm#12139<->SparseRootDatum(R) : RootSys -> RootDtmSprs
5<->SparseRootDatum(A, B) <->text1091.htm#12139<->SparseRootDatum(A, B) : Mtrx, Mtrx -> RootDtmSprs
5<->SparseIrreducibleRootDatum :: SparseRootDatum(N) <->text1091.htm#12139<->SparseIrreducibleRootDatum :: SparseRootDatum(N) : MonStgElt -&gt; RootDtmSprs
5<->SparseStandardRootDatum :: SparseRootDatum(N) <->text1091.htm#12139<->SparseStandardRootDatum :: SparseRootDatum(N) : MonStgElt -&gt; RootDtmSprs
5<->SparseRootDatum(N) <->text1091.htm#12139<->SparseRootDatum(N) : MonStgElt -&gt; RootDtmSprs
4<->RootDtm_SprsRD (Example H103E6)<->text1091.htm#12140<->RootDtm_SprsRD (Example H103E6)
4<->Example-SprsRD :<->text1091.htm#12140<->Example-SprsRD :: RootDtm_SprsRD (Example H103E6)
5<->SparseRootDatum(R) <->text1091.htm#12141<->SparseRootDatum(R) : RootDtm -&gt; RootDtmSprs
5<->RootDatum(R) <->text1091.htm#12142<->RootDatum(R) : RootDtmSprs -&gt; RootDtm
4<->RootDtm_SprsRDsumsub (Example H103E7)<->text1091.htm#12143<->RootDtm_SprsRDsumsub (Example H103E7)
4<->Example-SprsRDsumsub :<->text1091.htm#12143<->Example-SprsRDsumsub :: RootDtm_SprsRDsumsub (Example H103E7)
3<->sparse-root-data-create :<->text1091.htm#12138<->sparse-root-data-create :: Constructing Sparse Root Data (ROOT DATA)
3<->create-root-datum :<->text1091.htm<->create-root-datum :: Constructing Root Data (ROOT DATA)
3<->operators-root-dtm :<->text1092.htm<->operators-root-dtm :: Operations on Root Data (ROOT DATA)
5<->R1 eq R2 <->text1092.htm#12145<->R1 eq R2 : RootDtm, RootDtm -&gt; BoolElt
5<->IsIsomorphic(R1, R2) <->text1092.htm#12146<->IsIsomorphic(R1, R2) : RootDtm, RootDtm -&gt; BoolElt, [RngIntElt], Map
5<->IsCartanEquivalent(R1, R2) <->text1092.htm#12147<->IsCartanEquivalent(R1, R2) : RootDtm, RootDtm -&gt; BoolElt
5<->IsIsogenous(R1, R2) <->text1092.htm#12148<->IsIsogenous(R1, R2) : RootDtm, RootDtm -&gt; BoolElt
4<->RootDtm_IsomorphismIsogeny (Example H103E8)<->text1092.htm#12149<->RootDtm_IsomorphismIsogeny (Example H103E8)
4<->Example-IsomorphismIsogeny :<->text1092.htm#12149<->Example-IsomorphismIsogeny :: RootDtm_IsomorphismIsogeny (Example H103E8)
5<->CartanName(R) <->text1092.htm#12150<->CartanName(R) : RootStr -&gt; MonStgElt
5<->TwistedCartanName(R) <->text1092.htm#12151<->TwistedCartanName(R) : RootDtm -&gt; MonStgElt
5<->CoxeterDiagram(R) <->text1092.htm#12152<->CoxeterDiagram(R) : RootStr -&gt;
5<->DynkinDiagram(R) <->text1092.htm#12153<->DynkinDiagram(R) : RootStr -&gt;
5<->CoxeterMatrix(R) <->text1092.htm#12154<->CoxeterMatrix(R) : RootStr -&gt; AlgMatElt
5<->CoxeterGraph(R) <->text1092.htm#12155<->CoxeterGraph(R) : RootStr -&gt; GrphUnd
5<->CartanMatrix(R) <->text1092.htm#12156<->CartanMatrix(R) : RootStr -&gt; AlgMatElt
5<->DynkinDigraph(R) <->text1092.htm#12157<->DynkinDigraph(R) : RootStr -&gt; GrphDir
4<->RootDtm_Diagrams (Example H103E9)<->text1092.htm#12158<->RootDtm_Diagrams (Example H103E9)
4<->Example-Diagrams :<->text1092.htm#12158<->Example-Diagrams :: RootDtm_Diagrams (Example H103E9)
4<->RootDtm_BasicOperations (Example H103E10)<->text1092.htm#12159<->RootDtm_BasicOperations (Example H103E10)
4<->Example-BasicOperations :<->text1092.htm#12159<->Example-BasicOperations :: RootDtm_BasicOperations (Example H103E10)
5<->GammaAction(R) <->text1092.htm#12160<->GammaAction(R) : RootDtm -&gt; Rec
5<->GammaCorootSpace :: GammaRootSpace(R) <->text1092.htm#12161<->GammaCorootSpace :: GammaRootSpace(R) : RootDtm -&gt; GSetEnum, Map
5<->GammaRootSpace(R) <->text1092.htm#12161<->GammaRootSpace(R) : RootDtm -&gt; GSetEnum, Map
5<->GammaOrbitOnRoots(R,r) <->text1092.htm#12162<->GammaOrbitOnRoots(R,r) : RootDtm, RngIntElt -&gt; GSetEnum
5<->PositiveGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) <->text1092.htm#12163<->PositiveGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->NegativeGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) <->text1092.htm#12163<->NegativeGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->ZeroGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) <->text1092.htm#12163<->ZeroGammaOrbitsOnRoots :: GammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->GammaOrbitsOnRoots(R) <->text1092.htm#12163<->GammaOrbitsOnRoots(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->GammaActionOnSimples(R) <->text1092.htm#12164<->GammaActionOnSimples(R) : RootDtm -&gt; HomGrp
5<->OrbitsOnSimples(R) <->text1092.htm#12165<->OrbitsOnSimples(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->DistinguishedOrbitsOnSimples(R) <->text1092.htm#12166<->DistinguishedOrbitsOnSimples(R) : RootDtm -&gt; SeqEnum[GSetEnum]
5<->BaseRing(R) <->text1092.htm#12167<->BaseRing(R) : RootDtm -&gt; RngInt
5<->AbsoluteRank :: Rank(R) <->text1092.htm#12168<->AbsoluteRank :: Rank(R) : RootStr -&gt; RngIntElt
5<->Rank(R) <->text1092.htm#12168<->Rank(R) : RootStr -&gt; RngIntElt
5<->RelativeRank(R) <->text1092.htm#12169<->RelativeRank(R) : RootDtm -&gt; RngIntElt
5<->Dimension(R) <->text1092.htm#12170<->Dimension(R) : RootStr -&gt; RngIntElt
5<->TwistingDegree(R) <->text1092.htm#12171<->TwistingDegree(R) : RootDtm -&gt; RngIntElt
5<->AnisotropicSubdatum(R) <->text1092.htm#12172<->AnisotropicSubdatum(R) : RootDtm -&gt; RootDtm
4<->RootDtm_OperationsForTwistedRootData (Example H103E11)<->text1092.htm#12173<->RootDtm_OperationsForTwistedRootData (Example H103E11)
4<->Example-OperationsForTwistedRootData :<->text1092.htm#12173<->Example-OperationsForTwistedRootData :: RootDtm_OperationsForTwistedRootData (Example H103E11)
5<->CoxeterGroupOrder(R) <->text1092.htm#12174<->CoxeterGroupOrder(R) : RootStr -&gt; RngIntElt
5<->GroupOfLieTypeOrder(R, q) <->text1092.htm#12175<->GroupOfLieTypeOrder(R, q) : RootDtm, RngElt -&gt; RngIntElt
5<->GroupOfLieTypeFactoredOrder(R, q) <->text1092.htm#12176<->GroupOfLieTypeFactoredOrder(R, q) : RootDtm, RngElt -&gt; RngIntElt
4<->RootDtm_GroupOfLieTypeOrder (Example H103E12)<->text1092.htm#12177<->RootDtm_GroupOfLieTypeOrder (Example H103E12)
4<->Example-GroupOfLieTypeOrder :<->text1092.htm#12177<->Example-GroupOfLieTypeOrder :: RootDtm_GroupOfLieTypeOrder (Example H103E12)
5<->FundamentalGroup(R) <->text1092.htm#12178<->FundamentalGroup(R) : RootDtm -&gt; GrpAb, Map
5<->IsogenyGroup(R) <->text1092.htm#12179<->IsogenyGroup(R) : RootDtm -&gt; GrpAb, Map
5<->CoisogenyGroup(R) <->text1092.htm#12180<->CoisogenyGroup(R) : RootDtm -&gt; GrpAb, Map
4<->RootDtm_IsogenyGroups (Example H103E13)<->text1092.htm#12181<->RootDtm_IsogenyGroups (Example H103E13)
4<->Example-IsogenyGroups :<->text1092.htm#12181<->Example-IsogenyGroups :: RootDtm_IsogenyGroups (Example H103E13)
3<->operators-root-dtm :<->text1092.htm<->operators-root-dtm :: Operations on Root Data (ROOT DATA)
3<->properties-root-datum :<->text1093.htm<->properties-root-datum :: Properties of Root Data (ROOT DATA)
5<->IsFinite(R) <->text1093.htm#12183<->IsFinite(R) : RootStr -&gt; BoolElt
5<->IsIrreducible(R) <->text1093.htm#12184<->IsIrreducible(R) : RootStr -&gt; BoolElt
5<->IsAbsolutelyIrreducible(R) <->text1093.htm#12185<->IsAbsolutelyIrreducible(R) : RootStr -&gt; BoolElt
5<->IsProjectivelyIrreducible(R) <->text1093.htm#12186<->IsProjectivelyIrreducible(R) : RootStr -&gt; BoolElt
5<->IsReduced(R) <->text1093.htm#12187<->IsReduced(R) : RootDtm -&gt; BoolElt
5<->IsSemisimple(R) <->text1093.htm#12188<->IsSemisimple(R) : RootStr -&gt; BoolElt
5<->IsCrystallographic(R) <->text1093.htm#12189<->IsCrystallographic(R) : RootStr -&gt; BoolElt
5<->IsSimplyLaced(R) <->text1093.htm#12190<->IsSimplyLaced(R) : RootStr -&gt; BoolElt
5<->IsAdjoint(R) <->text1093.htm#12191<->IsAdjoint(R) : RootDtm -&gt; BoolElt
5<->IsWeaklyAdjoint(R) <->text1093.htm#12192<->IsWeaklyAdjoint(R) : RootDtm -&gt; BoolElt
5<->IsSimplyConnected(R) <->text1093.htm#12193<->IsSimplyConnected(R) : RootDtm -&gt; BoolElt
5<->IsWeaklySimplyConnected(R) <->text1093.htm#12194<->IsWeaklySimplyConnected(R) : RootDtm -&gt; BoolElt
4<->RootDtm_Properties (Example H103E14)<->text1093.htm#12195<->RootDtm_Properties (Example H103E14)
4<->Example-Properties :<->text1093.htm#12195<->Example-Properties :: RootDtm_Properties (Example H103E14)
5<->IsReduced(R) <->text1093.htm#12196<->IsReduced(R) : RootStr -&gt; BoolElt
5<->IsSplit(R) <->text1093.htm#12197<->IsSplit(R) : RootDtm -&gt; BoolElt
5<->IsTwisted(R) <->text1093.htm#12198<->IsTwisted(R) : RootDtm -&gt; BoolElt
5<->IsQuasisplit(R) <->text1093.htm#12199<->IsQuasisplit(R) : RootDtm -&gt; BoolElt
5<->IsOuter :: IsInner(R) <->text1093.htm#12200<->IsOuter :: IsInner(R) : RootDtm -&gt; BoolElt
5<->IsInner(R) <->text1093.htm#12200<->IsInner(R) : RootDtm -&gt; BoolElt
5<->IsAnisotropic(R) <->text1093.htm#12201<->IsAnisotropic(R) : RootDtm -&gt; BoolElt
3<->properties-root-datum :<->text1093.htm<->properties-root-datum :: Properties of Root Data (ROOT DATA)
3<->root :<->text1094.htm<->root :: Roots, Coroots and Weights (ROOT DATA)
3<->roots-coroots-weights :<->text1094.htm<->roots-coroots-weights :: Roots, Coroots and Weights (ROOT DATA)
3<->access :<->text1094.htm#12203<->access :: Accessing Roots and Coroots (ROOT DATA)
5<->CorootSpace :: RootSpace(R) <->text1094.htm#12204<->CorootSpace :: RootSpace(R) : RootStr -&gt; ModTupFld
5<->RootSpace(R) <->text1094.htm#12204<->RootSpace(R) : RootStr -&gt; ModTupFld
5<->FullCorootLattice :: FullRootLattice(R) <->text1094.htm#12205<->FullCorootLattice :: FullRootLattice(R) : RootDtm -&gt; Lat, Map
5<->FullRootLattice(R) <->text1094.htm#12205<->FullRootLattice(R) : RootDtm -&gt; Lat, Map
5<->CorootLattice :: RootLattice(R) <->text1094.htm#12206<->CorootLattice :: RootLattice(R) : RootDtm -&gt; Lat, Map
5<->RootLattice(R) <->text1094.htm#12206<->RootLattice(R) : RootDtm -&gt; Lat, Map
4<->RootDtm_RtLat (Example H103E15)<->text1094.htm#12207<->RootDtm_RtLat (Example H103E15)
4<->Example-RtLat :<->text1094.htm#12207<->Example-RtLat :: RootDtm_RtLat (Example H103E15)
5<->IsCorootSpace :: IsRootSpace(V) <->text1094.htm#12208<->IsCorootSpace :: IsRootSpace(V) : ModTupFld -&gt; BoolElt
5<->IsRootSpace(V) <->text1094.htm#12208<->IsRootSpace(V) : ModTupFld -&gt; BoolElt
5<->IsCorootSpace :: IsInRootSpace(v) <->text1094.htm#12209<->IsCorootSpace :: IsInRootSpace(v) : ModTupFldElt -&gt; BoolElt
5<->IsInRootSpace(v) <->text1094.htm#12209<->IsInRootSpace(v) : ModTupFldElt -&gt; BoolElt
5<->RootDatum(V) <->text1094.htm#12210<->RootDatum(V) : ModTupFld -&gt; RootDtm
4<->RootDtm_RtIsSpace (Example H103E16)<->text1094.htm#12211<->RootDtm_RtIsSpace (Example H103E16)
4<->Example-RtIsSpace :<->text1094.htm#12211<->Example-RtIsSpace :: RootDtm_RtIsSpace (Example H103E16)
5<->ZeroRootSpace :: ZeroRootLattice(R) <->text1094.htm#12212<->ZeroRootSpace :: ZeroRootLattice(R) : RootDtm -&gt; Lat
5<->ZeroRootLattice(R) <->text1094.htm#12212<->ZeroRootLattice(R) : RootDtm -&gt; Lat
5<->RelativeRootSpace(R) <->text1094.htm#12213<->RelativeRootSpace(R) : RootDtm -&gt; ModTupFld, Map
5<->SimpleCoroots :: SimpleRoots(R) <->text1094.htm#12214<->SimpleCoroots :: SimpleRoots(R) : RootStr -&gt; Mtrx
5<->SimpleRoots(R) <->text1094.htm#12214<->SimpleRoots(R) : RootStr -&gt; Mtrx
5<->NumPosRoots :: NumberOfPositiveRoots(R) <->text1094.htm#12215<->NumPosRoots :: NumberOfPositiveRoots(R) : RootStr -&gt; RngIntElt
5<->NumberOfPositiveRoots(R) <->text1094.htm#12215<->NumberOfPositiveRoots(R) : RootStr -&gt; RngIntElt
5<->Coroots :: Roots(R) <->text1094.htm#12216<->Coroots :: Roots(R) : RootStr -&gt; (@@)
5<->Roots(R) <->text1094.htm#12216<->Roots(R) : RootStr -&gt; (@@)
5<->PositiveCoroots :: PositiveRoots(R) <->text1094.htm#12217<->PositiveCoroots :: PositiveRoots(R) : RootStr -&gt; (@@)
5<->PositiveRoots(R) <->text1094.htm#12217<->PositiveRoots(R) : RootStr -&gt; (@@)
5<->Coroot :: Root(R, r) <->text1094.htm#12218<->Coroot :: Root(R, r) : RootStr, RngIntElt -&gt; (@@)
5<->Root(R, r) <->text1094.htm#12218<->Root(R, r) : RootStr, RngIntElt -&gt; (@@)
5<->CorootPosition :: RootPosition(R, v) <->text1094.htm#12219<->CorootPosition :: RootPosition(R, v) : RootStr, . -&gt; (@@)
5<->RootPosition(R, v) <->text1094.htm#12219<->RootPosition(R, v) : RootStr, . -&gt; (@@)
5<->BasisChange(R,v) <->text1094.htm#12220<->BasisChange(R,v) : RootStr, Any -&gt; SeqEnum
4<->RootDtm_RootsCoroots (Example H103E17)<->text1094.htm#12221<->RootDtm_RootsCoroots (Example H103E17)
4<->Example-RootsCoroots :<->text1094.htm#12221<->Example-RootsCoroots :: RootDtm_RootsCoroots (Example H103E17)
5<->IsInCorootSpace :: IsInRootSpace(R,v) <->text1094.htm#12222<->IsInCorootSpace :: IsInRootSpace(R,v) : RootDtm, ModTupFldElt -&gt; BoolElt
5<->IsInRootSpace(R,v) <->text1094.htm#12222<->IsInRootSpace(R,v) : RootDtm, ModTupFldElt -&gt; BoolElt
5<->HighestCoroot :: HighestRoot(R) <->text1094.htm#12223<->HighestCoroot :: HighestRoot(R) : RootStr -&gt; .
5<->HighestRoot(R) <->text1094.htm#12223<->HighestRoot(R) : RootStr -&gt; .
5<->HighestLongCoroot :: HighestLongRoot(R) <->text1094.htm#12224<->HighestLongCoroot :: HighestLongRoot(R) : RootStr  -&gt; .
5<->HighestLongRoot(R) <->text1094.htm#12224<->HighestLongRoot(R) : RootStr  -&gt; .
5<->HighestShortCoroot :: HighestShortRoot(R) <->text1094.htm#12225<->HighestShortCoroot :: HighestShortRoot(R) : RootStr  -&gt; .
5<->HighestShortRoot(R) <->text1094.htm#12225<->HighestShortRoot(R) : RootStr  -&gt; .
4<->RootDtm_HighestRoots (Example H103E18)<->text1094.htm#12226<->RootDtm_HighestRoots (Example H103E18)
4<->Example-HighestRoots :<->text1094.htm#12226<->Example-HighestRoots :: RootDtm_HighestRoots (Example H103E18)
5<->PositiveRelativeRoots :: RelativeRoots(R) <->text1094.htm#12227<->PositiveRelativeRoots :: RelativeRoots(R) : RootDtm -&gt; SetIndx
5<->NegativeRelativeRoots :: RelativeRoots(R) <->text1094.htm#12227<->NegativeRelativeRoots :: RelativeRoots(R) : RootDtm -&gt; SetIndx
5<->SimpleRelativeRoots :: RelativeRoots(R) <->text1094.htm#12227<->SimpleRelativeRoots :: RelativeRoots(R) : RootDtm -&gt; SetIndx
5<->RelativeRoots(R) <->text1094.htm#12227<->RelativeRoots(R) : RootDtm -&gt; SetIndx
5<->RelativeRootDatum(R) <->text1094.htm#12228<->RelativeRootDatum(R) : RootDtm -&gt; RootDtm
5<->GammaOrbitsRepresentatives(R, delta) <->text1094.htm#12229<->GammaOrbitsRepresentatives(R, delta) : RootDtm, RngIntElt -&gt; SeqEnum
4<->RootDtm_TwoTwistedEsixes (Example H103E19)<->text1094.htm#12230<->RootDtm_TwoTwistedEsixes (Example H103E19)
4<->Example-TwoTwistedEsixes :<->text1094.htm#12230<->Example-TwoTwistedEsixes :: RootDtm_TwoTwistedEsixes (Example H103E19)
5<->DualCoxeterForm :: CoxeterForm(R) <->text1094.htm#12231<->DualCoxeterForm :: CoxeterForm(R) : RootDtm -&gt; AlgMatElt
5<->CoxeterForm(R) <->text1094.htm#12231<->CoxeterForm(R) : RootDtm -&gt; AlgMatElt
3<->access :<->text1094.htm#12203<->access :: Accessing Roots and Coroots (ROOT DATA)
3<->rootrefl :<->text1094.htm#12232<->rootrefl :: Reflections (ROOT DATA)
5<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(R) <->text1094.htm#12233<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(R) : RootDtm -&gt; []
5<->SimpleReflectionMatrices(R) <->text1094.htm#12233<->SimpleReflectionMatrices(R) : RootDtm -&gt; []
5<->CoreflectionMatrices :: ReflectionMatrices(R) <->text1094.htm#12234<->CoreflectionMatrices :: ReflectionMatrices(R) : RootDtm -&gt; []
5<->ReflectionMatrices(R) <->text1094.htm#12234<->ReflectionMatrices(R) : RootDtm -&gt; []
5<->CoreflectionMatrix :: ReflectionMatrix(R, r) <->text1094.htm#12235<->CoreflectionMatrix :: ReflectionMatrix(R, r) : RootDtm, RngIntElt -&gt; []
5<->ReflectionMatrix(R, r) <->text1094.htm#12235<->ReflectionMatrix(R, r) : RootDtm, RngIntElt -&gt; []
5<->SimpleReflectionPermutations(R) <->text1094.htm#12236<->SimpleReflectionPermutations(R) : RootDtm -&gt; []
5<->ReflectionPermutations(R) <->text1094.htm#12237<->ReflectionPermutations(R) : RootDtm -&gt; []
5<->ReflectionPermutation(R, r) <->text1094.htm#12238<->ReflectionPermutation(R, r) : RootDtm, RngIntElt -&gt; []
5<->ReflectionWords(R) <->text1094.htm#12239<->ReflectionWords(R) : RootDtm -&gt; []
5<->ReflectionWord(R, r) <->text1094.htm#12240<->ReflectionWord(R, r) : RootDtm, RngIntElt -&gt; []
4<->RootDtm_Action (Example H103E20)<->text1094.htm#12241<->RootDtm_Action (Example H103E20)
4<->Example-Action :<->text1094.htm#12241<->Example-Action :: RootDtm_Action (Example H103E20)
3<->rootrefl :<->text1094.htm#12232<->rootrefl :: Reflections (ROOT DATA)
3<->ops-root-coroot :<->text1094.htm#12242<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (ROOT DATA)
5<->Sum(R, r, s) <->text1094.htm#12243<->Sum(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsPositive(R, r) <->text1094.htm#12244<->IsPositive(R, r) : RootStr, RngIntElt -&gt; BoolElt
5<->IsNegative(R, r) <->text1094.htm#12245<->IsNegative(R, r) : RootStr, RngIntElt -&gt; BoolElt
5<->Negative(R, r) <->text1094.htm#12246<->Negative(R, r) : RootStr, RngIntElt -&gt; RngIntElt
5<->LeftString(R, r, s) <->text1094.htm#12247<->LeftString(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightString(R, r, s) <->text1094.htm#12248<->RightString(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LeftStringLength(R, r, s) <->text1094.htm#12249<->LeftStringLength(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightStringLength(R, r, s) <->text1094.htm#12250<->RightStringLength(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
4<->RootDtm_RootArithmetic (Example H103E21)<->text1094.htm#12251<->RootDtm_RootArithmetic (Example H103E21)
4<->Example-RootArithmetic :<->text1094.htm#12251<->Example-RootArithmetic :: RootDtm_RootArithmetic (Example H103E21)
5<->CorootHeight :: RootHeight(R, r) <->text1094.htm#12252<->CorootHeight :: RootHeight(R, r) : RootStr, RngIntElt -&gt; RngIntElt
5<->RootHeight(R, r) <->text1094.htm#12252<->RootHeight(R, r) : RootStr, RngIntElt -&gt; RngIntElt
5<->CorootNorms :: RootNorms(R) <->text1094.htm#12253<->CorootNorms :: RootNorms(R) : RootStr -&gt; [RngIntElt]
5<->RootNorms(R) <->text1094.htm#12253<->RootNorms(R) : RootStr -&gt; [RngIntElt]
5<->CorootNorm :: RootNorm(R, r) <->text1094.htm#12254<->CorootNorm :: RootNorm(R, r) : RootStr, RngIntElt -&gt; RngIntElt
5<->RootNorm(R, r) <->text1094.htm#12254<->RootNorm(R, r) : RootStr, RngIntElt -&gt; RngIntElt
5<->IsLongRoot(R, r) <->text1094.htm#12255<->IsLongRoot(R, r) : RootStr, RngIntElt -&gt; BoolElt
5<->IsShortRoot(R, r) <->text1094.htm#12256<->IsShortRoot(R, r) : RootStr, RngIntElt -&gt; BoolElt
5<->IsIndivisibleRoot(R, r) <->text1094.htm#12257<->IsIndivisibleRoot(R, r) : RootStr, RngIntElt -&gt; BoolElt
4<->RootDtm_RootOperations (Example H103E22)<->text1094.htm#12258<->RootDtm_RootOperations (Example H103E22)
4<->Example-RootOperations :<->text1094.htm#12258<->Example-RootOperations :: RootDtm_RootOperations (Example H103E22)
5<->RootClosure(R, S) <->text1094.htm#12259<->RootClosure(R, S) : RootDtm, SetEnum[RngIntElt] -&gt; SetEnum[RngIntElt]
5<->AdditiveOrder(R) <->text1094.htm#12260<->AdditiveOrder(R) : RootStr -&gt; SeqEnum
5<->IsAdditiveOrder(R, Q) <->text1094.htm#12261<->IsAdditiveOrder(R, Q) : RootStr, [RngIntElt] -&gt; BoolElt
4<->RootDtm_AdditiveOrder (Example H103E23)<->text1094.htm#12262<->RootDtm_AdditiveOrder (Example H103E23)
4<->Example-AdditiveOrder :<->text1094.htm#12262<->Example-AdditiveOrder :: RootDtm_AdditiveOrder (Example H103E23)
3<->ops-root-coroot :<->text1094.htm#12242<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (ROOT DATA)
3<->weights :<->text1094.htm#12263<->weights :: Weights (ROOT DATA)
5<->WeightLattice(R) <->text1094.htm#12264<->WeightLattice(R) : RootDtm -&gt; Lat
5<->CoweightLattice(R) <->text1094.htm#12265<->CoweightLattice(R) : RootDtm -&gt; Lat
5<->FundamentalWeights(R) <->text1094.htm#12266<->FundamentalWeights(R) : RootDtm -&gt; Mtrx
5<->FundamentalCoweights(R) <->text1094.htm#12267<->FundamentalCoweights(R) : RootDtm -&gt; Mtrx
4<->RootDtm_Weights (Example H103E24)<->text1094.htm#12268<->RootDtm_Weights (Example H103E24)
4<->Example-Weights :<->text1094.htm#12268<->Example-Weights :: RootDtm_Weights (Example H103E24)
5<->IsDominant(R, v) <->text1094.htm#12269<->IsDominant(R, v) : RootDtm, . -&gt; ModTupFldElt, GrpFPCoxElt
5<->DominantWeight(R, v) <->text1094.htm#12270<->DominantWeight(R, v) : RootDtm, . -&gt; ModTupFldElt, GrpFPCoxElt
5<->WeightOrbit(R, v) <->text1094.htm#12271<->WeightOrbit(R, v) : RootDtm, . -&gt; @ ModTupFldElt @, [GrpFPCoxElt]
4<->RootDtm_DominantWeights (Example H103E25)<->text1094.htm#12272<->RootDtm_DominantWeights (Example H103E25)
4<->Example-DominantWeights :<->text1094.htm#12272<->Example-DominantWeights :: RootDtm_DominantWeights (Example H103E25)
3<->weights :<->text1094.htm#12263<->weights :: Weights (ROOT DATA)
3<->roots-coroots-weights :<->text1094.htm<->roots-coroots-weights :: Roots, Coroots and Weights (ROOT DATA)
3<->create-new-root-datum :<->text1095.htm<->create-new-root-datum :: Building Root Data (ROOT DATA)
5<->sub<R | a> <->text1095.htm#12274<->sub&lt;R | a&gt; : RootDtm, SetEnum -&gt; RootDtm
5<->sub<R | s> <->text1095.htm#12275<->sub&lt;R | s&gt; : RootDtm, SetEnum -&gt; RootDtm
4<->RootDtm_RootSubdata (Example H103E26)<->text1095.htm#12276<->RootDtm_RootSubdata (Example H103E26)
4<->Example-RootSubdata :<->text1095.htm#12276<->Example-RootSubdata :: RootDtm_RootSubdata (Example H103E26)
5<->R1 subset R2 <->text1095.htm#12277<->R1 subset R2 : RootDtm, RootDtm -&gt; BoolElt, .
5<->DirectSum :: R1 + R2 <->text1095.htm#12278<->DirectSum :: R1 + R2 : RootDtm, RootDtm -&gt; RootDtm
5<->R1 + R2 <->text1095.htm#12278<->R1 + R2 : RootDtm, RootDtm -&gt; RootDtm
5<->R1 join R2 <->text1095.htm#12279<->R1 join R2 : RootDtm, RootDtm -&gt; RootDtm
4<->RootDtm_RootDtmSums (Example H103E27)<->text1095.htm#12280<->RootDtm_RootDtmSums (Example H103E27)
4<->Example-RootDtmSums :<->text1095.htm#12280<->Example-RootDtmSums :: RootDtm_RootDtmSums (Example H103E27)
5<->IndecomposableSummands :: DirectSumDecomposition(R) <->text1095.htm#12281<->IndecomposableSummands :: DirectSumDecomposition(R) : RootDtm -&gt; [], RootDtm, Map
5<->DirectSumDecomposition(R) <->text1095.htm#12281<->DirectSumDecomposition(R) : RootDtm -&gt; [], RootDtm, Map
4<->RootDtm_RootDtmDecomp (Example H103E28)<->text1095.htm#12282<->RootDtm_RootDtmDecomp (Example H103E28)
4<->Example-RootDtmDecomp :<->text1095.htm#12282<->Example-RootDtmDecomp :: RootDtm_RootDtmDecomp (Example H103E28)
5<->Dual(R) <->text1095.htm#12283<->Dual(R) : RootDtm -&gt; RootDtm, Map
5<->SimplyConnectedVersion(R) <->text1095.htm#12284<->SimplyConnectedVersion(R) : RootDtm -&gt; RootDtm, Map
5<->AdjointVersion(R) <->text1095.htm#12285<->AdjointVersion(R) : RootDtm -&gt; RootDtm, Map
5<->IndivisibleSubdatum(R) <->text1095.htm#12286<->IndivisibleSubdatum(R) : RootDtm -&gt; RootDtm
5<->Radical(R) <->text1095.htm#12287<->Radical(R) : RootDtm -&gt; RootDtm
4<->RootDtm_DirectSumDualRadical (Example H103E29)<->text1095.htm#12288<->RootDtm_DirectSumDualRadical (Example H103E29)
4<->Example-DirectSumDualRadical :<->text1095.htm#12288<->Example-DirectSumDualRadical :: RootDtm_DirectSumDualRadical (Example H103E29)
5<->TwistedRootDatum(N) <->text1095.htm#12289<->TwistedRootDatum(N) : MonStgElt -> RootDtm
5<->TwistedRootDatum(R) <->text1095.htm#12289<->TwistedRootDatum(R) : RootDtm -&gt; RootDtm
4<->RootDtm_DirectSumDualRadical (Example H103E30)<->text1095.htm#12290<->RootDtm_DirectSumDualRadical (Example H103E30)
4<->Example-DirectSumDualRadical :<->text1095.htm#12290<->Example-DirectSumDualRadical :: RootDtm_DirectSumDualRadical (Example H103E30)
5<->SplitRootDatum :: UntwistedRootDatum(R) <->text1095.htm#12291<->SplitRootDatum :: UntwistedRootDatum(R) : RootDtm -&gt; RootDtm
5<->UntwistedRootDatum(R) <->text1095.htm#12291<->UntwistedRootDatum(R) : RootDtm -&gt; RootDtm
3<->create-new-root-datum :<->text1095.htm<->create-new-root-datum :: Building Root Data (ROOT DATA)
3<->constants-root-datum :<->text1096.htm<->constants-root-datum :: Morphisms of Root Data (ROOT DATA)
5<->homS | phiX, phiY> <->text1096.htm#12293<->hom<R -\>S | phiX, phiY> : RootDtm, RootDtm, Mtrx, Mtrx -> Map
5<->hom<R -> S | phiX, phiY> <->text1096.htm#12293<->hom&lt;R -&gt; S | phiX, phiY&gt; : RootDtm, RootDtm, Map, Map -&gt; Map
5<->hom<R -> S | Q> <->text1096.htm#12294<->hom&lt;R -&gt; S | Q&gt; : RootDtm, RootDtm, [RngIntElt] -&gt; Map
5<->Morphism(R, S, phiX, phiY) <->text1096.htm#12295<->Morphism(R, S, phiX, phiY) :  RootDtm, RootDtm, Mtrx, Mtrx -> Map
5<->Morphism(R, S, phiX, phiY) <->text1096.htm#12295<->Morphism(R, S, phiX, phiY) : RootDtm, RootDtm, Map, Map -&gt; Map
5<->Morphism(R, S, Q) <->text1096.htm#12296<->Morphism(R, S, Q) : RootDtm, RootDtm, [RngIntElt] -&gt; Map
5<->DualMorphism(R, S, phiX, phiY) <->text1096.htm#12297<->DualMorphism(R, S, phiX, phiY) :  RootDtm, RootDtm, Mtrx, Mtrx -> Map
5<->DualMorphism(R, S, phiX, phiY) <->text1096.htm#12297<->DualMorphism(R, S, phiX, phiY) : RootDtm, RootDtm, Map, Map -&gt; Map
5<->DualMorphism(R, S, Q) <->text1096.htm#12298<->DualMorphism(R, S, Q) : RootDtm, RootDtm, [RngIntElt] -&gt; Map
5<->RootImages(phi) <->text1096.htm#12299<->RootImages(phi) : Map -&gt; [RngIntElt]
5<->RootPermutation(phi) <->text1096.htm#12300<->RootPermutation(phi) : Map -&gt; GrpPermElt
5<->IsIsogeny(phi) <->text1096.htm#12301<->IsIsogeny(phi) : Map -&gt; BoolElt
5<->IdentityAutomorphism :: IdentityMap(R) <->text1096.htm#12302<->IdentityAutomorphism :: IdentityMap(R) : RootDtm -&gt; Map
5<->IdentityMap(R) <->text1096.htm#12302<->IdentityMap(R) : RootDtm -&gt; Map
4<->RootDtm_CreatingRootDataHomomorphisms (Example H103E31)<->text1096.htm#12303<->RootDtm_CreatingRootDataHomomorphisms (Example H103E31)
4<->Example-CreatingRootDataHomomorphisms :<->text1096.htm#12303<->Example-CreatingRootDataHomomorphisms :: RootDtm_CreatingRootDataHomomorphisms (Example H103E31)
3<->constants-root-datum :<->text1096.htm<->constants-root-datum :: Morphisms of Root Data (ROOT DATA)
3<->constants-root-datum :<->text1097.htm<->constants-root-datum :: Constants Associated with  Root Data (ROOT DATA)
5<->ExtraspecialPairs(R) <->text1097.htm#12305<->ExtraspecialPairs(R) : RootDtm -&gt; SeqEnum
5<->NumExtraspecialPairs(R) <->text1097.htm#12306<->NumExtraspecialPairs(R) : RootDtm -&gt; SeqEnum
5<->ExtraspecialPair(R,r) <->text1097.htm#12307<->ExtraspecialPair(R,r) : RootDtm, RngIntElt -&gt; SeqEnum
5<->ExtraspecialSigns(R) <->text1097.htm#12308<->ExtraspecialSigns(R) : RootDtm -&gt; []
5<->LieConstant_p(R, r, s) <->text1097.htm#12309<->LieConstant_p(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_q(R, r, s) <->text1097.htm#12310<->LieConstant_q(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->CartanInteger(R, r, s) <->text1097.htm#12311<->CartanInteger(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_N(R, r, s) <->text1097.htm#12312<->LieConstant_N(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_epsilon(R, r, s) <->text1097.htm#12313<->LieConstant_epsilon(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_M(R, r, s, i) <->text1097.htm#12314<->LieConstant_M(R, r, s, i) : RootDtm, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_C(R, i, j, r, s) <->text1097.htm#12315<->LieConstant_C(R, i, j, r, s) : RootDtm, RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LieConstant_eta(R, r, s) <->text1097.htm#12316<->LieConstant_eta(R, r, s) : RootDtm, RngIntElt, RngIntElt -&gt; RngIntElt
5<->StructureConstants(R) <->text1097.htm#12317<->StructureConstants(R) : RootDtm -&gt; RngIntElt
4<->RootDtm_consts (Example H103E32)<->text1097.htm#12318<->RootDtm_consts (Example H103E32)
4<->Example-consts :<->text1097.htm#12318<->Example-consts :: RootDtm_consts (Example H103E32)
3<->constants-root-datum :<->text1097.htm<->constants-root-datum :: Constants Associated with  Root Data (ROOT DATA)
3<->related-structures :<->text1098.htm<->related-structures :: Related Structures (ROOT DATA)
5<->RootSystem(R) <->text1098.htm#12320<->RootSystem(R) : RootDtm -&gt; RootSys
5<->CoxeterGroup(GrpFPCox, R) <->text1098.htm#12321<->CoxeterGroup(GrpFPCox, R) : Cat, RootDtm -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, R) <->text1098.htm#12322<->CoxeterGroup(GrpPermCox, R) : Cat, RootDtm -> GrpPermCox
5<->CoxeterGroup(R) <->text1098.htm#12322<->CoxeterGroup(R) : RootDtm -&gt; GrpPermCox
5<->CoxeterGroup :: ReflectionGroup(R) <->text1098.htm#12323<->CoxeterGroup :: ReflectionGroup(R) : RootDtm -&gt; GrpMat
5<->ReflectionGroup(R) <->text1098.htm#12323<->ReflectionGroup(R) : RootDtm -&gt; GrpMat
5<->LieAlgebraHomorphism(phi,k) <->text1098.htm#12324<->LieAlgebraHomorphism(phi,k) : Map, Rng -&gt; AlgLie
5<->LieAlgebra(R, k) <->text1098.htm#12325<->LieAlgebra(R, k) : RootDtm, Rng -&gt; AlgLie
5<->GroupOfLieType(R, k) <->text1098.htm#12326<->GroupOfLieType(R, k) : RootDtm, Rng -&gt; GrpLie
5<->GroupOfLieTypeHomomorphism(phi, k) <->text1098.htm#12327<->GroupOfLieTypeHomomorphism(phi, k) : Map, Rng -&gt; GrpLie
4<->RootDtm_Related (Example H103E33)<->text1098.htm#12328<->RootDtm_Related (Example H103E33)
4<->Example-Related :<->text1098.htm#12328<->Example-Related :: RootDtm_Related (Example H103E33)
3<->related-structures :<->text1098.htm<->related-structures :: Related Structures (ROOT DATA)
3<->root-data :<->text1089.htm<->root-data :: ROOT DATA
3<->coxeter-groups :<->text1101.htm<->coxeter-groups :: COXETER GROUPS
3<->GrpFPCox :<->text1102.htm<->GrpFPCox :: Introduction (COXETER GROUPS)
3<->GrpPermCox :<->text1102.htm<->GrpPermCox :: Introduction (COXETER GROUPS)
3<->Coxeter group :<->text1102.htm<->Coxeter group :: Introduction (COXETER GROUPS)
3<->Coxeter system :<->text1102.htm<->Coxeter system :: Introduction (COXETER GROUPS)
3<->Coxeter group :<->text1102.htm<->Coxeter group :: Introduction (COXETER GROUPS)
3<->Coxeter generators :<->text1102.htm<->Coxeter generators :: Introduction (COXETER GROUPS)
3<->rank :<->text1102.htm<->rank :: Introduction (COXETER GROUPS)
3<->reducible :<->text1102.htm<->reducible :: Introduction (COXETER GROUPS)
3<->introduction :<->text1102.htm<->introduction :: Introduction (COXETER GROUPS)
3<->reduction :<->text1102.htm#12333<->reduction :: The Normal Form for Words (COXETER GROUPS)
3<->introduction :<->text1102.htm<->introduction :: Introduction (COXETER GROUPS)
3<->construct :<->text1103.htm<->construct :: Constructing Coxeter Groups (COXETER GROUPS)
5<->CoxeterGroup(GrpPermCox, N) <->text1103.htm#12335<->CoxeterGroup(GrpPermCox, N) : Cat, MonStgElt -> GrpFPCox
5<->CoxeterGroup(N) <->text1103.htm#12335<->CoxeterGroup(N) : MonStgElt -> .
5<->CoxeterGroup(GrpFPCox, N) <->text1103.htm#12335<->CoxeterGroup(GrpFPCox, N) : Cat, MonStgElt -&gt; GrpFPCox
5<->IrreducibleCoxeterGroup(GrpPermCox, X, n) <->text1103.htm#12336<->IrreducibleCoxeterGroup(GrpPermCox, X, n) : Cat, MonStgElt, RngIntElt -> GrpPermCox
5<->IrreducibleCoxeterGroup(X, n) <->text1103.htm#12336<->IrreducibleCoxeterGroup(X, n) : MonStgElt, RngIntElt -> .
5<->IrreducibleCoxeterGroup(GrpFPCox, X, n) <->text1103.htm#12336<->IrreducibleCoxeterGroup(GrpFPCox, X, n) : Cat, MonStgElt, RngIntElt -&gt; GrpFPCox
4<->GrpCox_ConstructByName (Example H104E1)<->text1103.htm#12337<->GrpCox_ConstructByName (Example H104E1)
4<->Example-ConstructByName :<->text1103.htm#12337<->Example-ConstructByName :: GrpCox_ConstructByName (Example H104E1)
5<->CoxeterGroup(GrpPermCox, M) <->text1103.htm#12338<->CoxeterGroup(GrpPermCox, M) : Cat, AlgMatElt -> GrpPermCox
5<->CoxeterGroup(M) <->text1103.htm#12338<->CoxeterGroup(M) : AlgMatElt -> .
5<->CoxeterGroup(GrpFPCox, M) <->text1103.htm#12338<->CoxeterGroup(GrpFPCox, M) : Cat, AlgMatElt -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, G) <->text1103.htm#12339<->CoxeterGroup(GrpPermCox, G) : Cat, GrphUnd -> GrpPermCox
5<->CoxeterGroup(G) <->text1103.htm#12339<->CoxeterGroup(G) : GrphUnd -> .
5<->CoxeterGroup(GrpFPCox, G) <->text1103.htm#12339<->CoxeterGroup(GrpFPCox, G) : Cat, GrphUnd -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, C) <->text1103.htm#12340<->CoxeterGroup(GrpPermCox, C) : Cat, AlgMatElt -> GrpPermCox
5<->CoxeterGroup(C) <->text1103.htm#12340<->CoxeterGroup(C) : AlgMatElt -> .
5<->CoxeterGroup(GrpFPCox, C) <->text1103.htm#12340<->CoxeterGroup(GrpFPCox, C) : Cat, AlgMatElt -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, D) <->text1103.htm#12341<->CoxeterGroup(GrpPermCox, D) : Cat, GrphDir -> GrpPermCox
5<->CoxeterGroup(D) <->text1103.htm#12341<->CoxeterGroup(D) : GrphDir -> .
5<->CoxeterGroup(GrpFPCox, D) <->text1103.htm#12341<->CoxeterGroup(GrpFPCox, D) : Cat, GrphDir -&gt; GrpFPCox
4<->GrpCox_ConstructFromMatrix (Example H104E2)<->text1103.htm#12342<->GrpCox_ConstructFromMatrix (Example H104E2)
4<->Example-ConstructFromMatrix :<->text1103.htm#12342<->Example-ConstructFromMatrix :: GrpCox_ConstructFromMatrix (Example H104E2)
5<->CoxeterGroup(GrpPermCox, R) <->text1103.htm#12343<->CoxeterGroup(GrpPermCox, R) : Cat, RootSys -> GrpPermCox
5<->CoxeterGroup(R) <->text1103.htm#12343<->CoxeterGroup(R) : RootSys -> .
5<->CoxeterGroup(GrpFPCox, R) <->text1103.htm#12343<->CoxeterGroup(GrpFPCox, R) : Cat, RootDtm -> GrpFPCox
5<->CoxeterGroup(GrpPermCox, R) <->text1103.htm#12343<->CoxeterGroup(GrpPermCox, R) : Cat, RootDtm -> GrpPermCox
5<->CoxeterGroup(R) <->text1103.htm#12343<->CoxeterGroup(R) : RootDtm -> .
5<->CoxeterGroup(GrpFPCox, R) <->text1103.htm#12343<->CoxeterGroup(GrpFPCox, R) : Cat, RootSys -&gt; GrpFPCox
5<->CoxeterGroup(A, B) <->text1103.htm#12344<->CoxeterGroup(A, B) : Mtrx, Mtrx -&gt; GrpPermCox
4<->GrpCox_ConstructByRoot (Example H104E3)<->text1103.htm#12345<->GrpCox_ConstructByRoot (Example H104E3)
4<->Example-ConstructByRoot :<->text1103.htm#12345<->Example-ConstructByRoot :: GrpCox_ConstructByRoot (Example H104E3)
3<->construct :<->text1103.htm<->construct :: Constructing Coxeter Groups (COXETER GROUPS)
3<->construct :<->text1104.htm<->construct :: Converting Between Types of  Coxeter Group (COXETER GROUPS)
5<->CoxeterGroup(GrpFPCox, W) <->text1104.htm#12347<->CoxeterGroup(GrpFPCox, W) : Cat, GrpPermCox -&gt; GrpFPCox, Map
5<->CoxeterGroup(GrpFPCox, W) <->text1104.htm#12348<->CoxeterGroup(GrpFPCox, W) : Cat, GrpMat -&gt; GrpFPCox
5<->CoxeterGroup(GrpPermCox, W) <->text1104.htm#12349<->CoxeterGroup(GrpPermCox, W) : Cat, GrpFPCox -&gt; GrpPermCox, Map
5<->CoxeterGroup(GrpPermCox, W) <->text1104.htm#12350<->CoxeterGroup(GrpPermCox, W) : Cat, GrpMat -&gt; GrpPermCox, Map
4<->GrpCox_ConstructByGroup (Example H104E4)<->text1104.htm#12351<->GrpCox_ConstructByGroup (Example H104E4)
4<->Example-ConstructByGroup :<->text1104.htm#12351<->Example-ConstructByGroup :: GrpCox_ConstructByGroup (Example H104E4)
5<->CoxeterGroup :: ReflectionGroup(W) <->text1104.htm#12352<->CoxeterGroup :: ReflectionGroup(W) : GrpFPCox -&gt; GrpMat, Map
5<->ReflectionGroup(W) <->text1104.htm#12352<->ReflectionGroup(W) : GrpFPCox -&gt; GrpMat, Map
5<->CoxeterGroup :: ReflectionGroup(W) <->text1104.htm#12353<->CoxeterGroup :: ReflectionGroup(W) : GrpPermCox -&gt; GrpMat, Map
5<->ReflectionGroup(W) <->text1104.htm#12353<->ReflectionGroup(W) : GrpPermCox -&gt; GrpMat, Map
4<->GrpCox_ReflectionGroupConversion (Example H104E5)<->text1104.htm#12354<->GrpCox_ReflectionGroupConversion (Example H104E5)
4<->Example-ReflectionGroupConversion :<->text1104.htm#12354<->Example-ReflectionGroupConversion :: GrpCox_ReflectionGroupConversion (Example H104E5)
5<->CoxeterGroup(GrpFP, W) <->text1104.htm#12355<->CoxeterGroup(GrpFP, W) : Cat, GrpFPCox -&gt; GrpFP, Map
5<->CoxeterGroup(GrpFP, W) <->text1104.htm#12356<->CoxeterGroup(GrpFP, W) : Cat, GrpPermCox -&gt; GrpFP, Map
5<->CoxeterGroup(GrpFP, W) <->text1104.htm#12357<->CoxeterGroup(GrpFP, W) : Cat, GrpMat -&gt; GrpPermCox, Map
5<->CoxeterGroup(GrpPerm, W) <->text1104.htm#12358<->CoxeterGroup(GrpPerm, W) : Cat, GrpFPCox -&gt; GrpPerm, Map
5<->CoxeterGroup(GrpPerm, W) <->text1104.htm#12359<->CoxeterGroup(GrpPerm, W) : Cat, GrpPermCox -&gt; GrpPerm, Map
5<->CoxeterGroup(GrpPerm, W) <->text1104.htm#12360<->CoxeterGroup(GrpPerm, W) : Cat, GrpMat -&gt; GrpPermCox, Map
3<->construct :<->text1104.htm<->construct :: Converting Between Types of  Coxeter Group (COXETER GROUPS)
3<->group-op :<->text1105.htm<->group-op :: Operations on Coxeter Groups (COXETER GROUPS)
5<->IsIsomorphic(W1, W2) <->text1105.htm#12362<->IsIsomorphic(W1, W2) : GrpPermCox, GrpPermCox -&gt; BoolElt
5<->IsCoxeterIsomorphic(W1, W2) <->text1105.htm#12363<->IsCoxeterIsomorphic(W1, W2) : GrpPermCox, GrpPermCox -> BoolElt
5<->IsCoxeterIsomorphic(W1, W2) <->text1105.htm#12363<->IsCoxeterIsomorphic(W1, W2) : GrpFPCox, GrpFPCox -&gt; BoolElt
5<->IsCartanEquivalent(W1, W2) <->text1105.htm#12364<->IsCartanEquivalent(W1, W2) : GrpPermCox, GrpPermCox -&gt; BoolElt
4<->GrpCox_CoxeterIsomorphism (Example H104E6)<->text1105.htm#12365<->GrpCox_CoxeterIsomorphism (Example H104E6)
4<->Example-CoxeterIsomorphism :<->text1105.htm#12365<->Example-CoxeterIsomorphism :: GrpCox_CoxeterIsomorphism (Example H104E6)
5<->RootSystem(W) <->text1105.htm#12366<->RootSystem(W) : GrpPermCox -&gt; RootDtm
5<->RootDatum(W) <->text1105.htm#12367<->RootDatum(W) : GrpPermCox -&gt; RootDtm
4<->GrpCox_GroupToRoot (Example H104E7)<->text1105.htm#12368<->GrpCox_GroupToRoot (Example H104E7)
4<->Example-GroupToRoot :<->text1105.htm#12368<->Example-GroupToRoot :: GrpCox_GroupToRoot (Example H104E7)
5<->CartanName(W) <->text1105.htm#12369<->CartanName(W) : GrpPermCox -> MonStgElt
5<->CartanName(W) <->text1105.htm#12369<->CartanName(W) : GrpFPCox -&gt; List
5<->CoxeterDiagram(W) <->text1105.htm#12370<->CoxeterDiagram(W) : GrpPermCox ->
5<->CoxeterDiagram(W) <->text1105.htm#12370<->CoxeterDiagram(W) : GrpFPCox -&gt;
5<->DynkinDiagram(W) <->text1105.htm#12371<->DynkinDiagram(W) : GrpPermCox -&gt;
4<->GrpCox_NamesDiagrams (Example H104E8)<->text1105.htm#12372<->GrpCox_NamesDiagrams (Example H104E8)
4<->Example-NamesDiagrams :<->text1105.htm#12372<->Example-NamesDiagrams :: GrpCox_NamesDiagrams (Example H104E8)
5<->CoxeterMatrix(W) <->text1105.htm#12373<->CoxeterMatrix(W) : GrpPermCox -> AlgMatElt
5<->CoxeterMatrix(W) <->text1105.htm#12373<->CoxeterMatrix(W) : GrpFPCox -&gt; AlgMatElt
5<->CoxeterGraph(W) <->text1105.htm#12374<->CoxeterGraph(W) : GrpPermCox -> GrphUnd
5<->CoxeterGraph(W) <->text1105.htm#12374<->CoxeterGraph(W) : GrpFPCox -&gt; GrphUnd
5<->CartanMatrix(W) <->text1105.htm#12375<->CartanMatrix(W) : GrpPermCox -&gt; AlgMatElt
5<->DynkinDigraph(W) <->text1105.htm#12376<->DynkinDigraph(W) : GrpPermCox -&gt; GrphDir
5<->Rank(W) <->text1105.htm#12377<->Rank(W) : GrpPermCox -> RngIntElt
5<->NumberOfGenerators :: Rank(W) <->text1105.htm#12377<->NumberOfGenerators :: Rank(W) : GrpFPCox -&gt; RngIntElt
5<->NumberOfGenerators(W) : GrpPermCox -> RngIntElt :: Rank(W) <->text1105.htm#12377<->NumberOfGenerators(W) : GrpPermCox -> RngIntElt :: Rank(W) : GrpFPCox -&gt; RngIntElt
5<->Rank(W) <->text1105.htm#12377<->Rank(W) : GrpFPCox -&gt; RngIntElt
5<->NumberOfPositiveRoots(W) <->text1105.htm#12378<->NumberOfPositiveRoots(W) : GrpPermCox -> RngIntElt
5<->NumPosRoots :: NumberOfPositiveRoots(W) <->text1105.htm#12378<->NumPosRoots :: NumberOfPositiveRoots(W) : GrpFPCox -&gt; RngIntElt
5<->NumPosRoots(W) : GrpPermCox -> RngIntElt :: NumberOfPositiveRoots(W) <->text1105.htm#12378<->NumPosRoots(W) : GrpPermCox -> RngIntElt :: NumberOfPositiveRoots(W) : GrpFPCox -&gt; RngIntElt
5<->NumberOfPositiveRoots(W) <->text1105.htm#12378<->NumberOfPositiveRoots(W) : GrpFPCox -&gt; RngIntElt
5<->Dimension(W) <->text1105.htm#12379<->Dimension(W) : GrpPermCox -&gt; RngIntElt
4<->GrpCox_RankDimension (Example H104E9)<->text1105.htm#12380<->GrpCox_RankDimension (Example H104E9)
4<->Example-RankDimension :<->text1105.htm#12380<->Example-RankDimension :: GrpCox_RankDimension (Example H104E9)
5<->ConjugacyClasses(W) <->text1105.htm#12381<->ConjugacyClasses(W) : GrpPermCox -> [GrpPermElt]
5<->ConjugacyClasses(W) <->text1105.htm#12381<->ConjugacyClasses(W) : GrpFPCox -&gt; [GrpFPCoxElt]
5<->FundamentalGroup(W) <->text1105.htm#12382<->FundamentalGroup(W) : GrpPermCox -&gt; GrpAb
5<->IsogenyGroup(W) <->text1105.htm#12383<->IsogenyGroup(W) : GrpPermCox -&gt; GrpAb
5<->CoisogenyGroup(W) <->text1105.htm#12384<->CoisogenyGroup(W) : GrpPermCox -&gt; GrpAb
5<->BasicDegrees(W) <->text1105.htm#12385<->BasicDegrees(W) : GrpPermCox -> RngIntElt
5<->BasicDegrees(W) <->text1105.htm#12385<->BasicDegrees(W) : GrpFPCox -&gt; RngIntElt
5<->BasicCodegrees(W) <->text1105.htm#12386<->BasicCodegrees(W) : GrpPermCox -> RngIntElt
5<->BasicCodegrees(W) <->text1105.htm#12386<->BasicCodegrees(W) : GrpFPCox -&gt; RngIntElt
4<->GrpCox_BasicDegrees (Example H104E10)<->text1105.htm#12387<->GrpCox_BasicDegrees (Example H104E10)
4<->Example-BasicDegrees :<->text1105.htm#12387<->Example-BasicDegrees :: GrpCox_BasicDegrees (Example H104E10)
5<->BruhatLessOrEqual(x, y) <->text1105.htm#12388<->BruhatLessOrEqual(x, y) : GrpPermElt, GrpPermElt -&gt; BoolElt
5<->BruhatDescendants(x) <->text1105.htm#12389<->BruhatDescendants(x) : GrpPermElt -&gt; SetEnum
5<->BruhatDescendants(X) <->text1105.htm#12390<->BruhatDescendants(X) : SetEnum -&gt; SetEnum
4<->GrpCox_BruhatDescendants (Example H104E11)<->text1105.htm#12391<->GrpCox_BruhatDescendants (Example H104E11)
4<->Example-BruhatDescendants :<->text1105.htm#12391<->Example-BruhatDescendants :: GrpCox_BruhatDescendants (Example H104E11)
3<->group-op :<->text1105.htm<->group-op :: Operations on Coxeter Groups (COXETER GROUPS)
3<->group-prop :<->text1106.htm<->group-prop :: Properties of Coxeter Groups (COXETER GROUPS)
5<->IsFinite(W) <->text1106.htm#12393<->IsFinite(W) : GrpFPCox -&gt; BoolElt
5<->IsAffine(W) <->text1106.htm#12394<->IsAffine(W) : GrpFPCox -&gt; BoolElt
5<->IsHyperbolic(W) <->text1106.htm#12395<->IsHyperbolic(W) : GrpFPCox -&gt; BoolElt
5<->IsCompactHyperbolic(W) <->text1106.htm#12396<->IsCompactHyperbolic(W) : GrpFPCox -&gt; BoolElt
5<->IsIrreducible(W) <->text1106.htm#12397<->IsIrreducible(W) : GrpPermCox -> BoolElt
5<->IsIrreducible(W) <->text1106.htm#12397<->IsIrreducible(W) : GrpFPCox -&gt; BoolElt
5<->IsSemisimple(W) <->text1106.htm#12398<->IsSemisimple(W) : GrpPermCox -&gt; BoolElt
5<->IsCrystallographic(W) <->text1106.htm#12399<->IsCrystallographic(W) : GrpPermCox -&gt; BoolElt
5<->IsSimplyLaced(W) <->text1106.htm#12400<->IsSimplyLaced(W) : GrpFPCox -> BoolElt
5<->IsSimplyLaced(W) <->text1106.htm#12400<->IsSimplyLaced(W) : GrpPermCox-&gt; BoolElt
4<->GrpCox_Properties (Example H104E12)<->text1106.htm#12401<->GrpCox_Properties (Example H104E12)
4<->Example-Properties :<->text1106.htm#12401<->Example-Properties :: GrpCox_Properties (Example H104E12)
3<->group-prop :<->text1106.htm<->group-prop :: Properties of Coxeter Groups (COXETER GROUPS)
3<->group-elt-op :<->text1107.htm<->group-elt-op :: Operations on Elements (COXETER GROUPS)
4<->GrpCox_WordArithmetic (Example H104E13)<->text1107.htm#12403<->GrpCox_WordArithmetic (Example H104E13)
4<->Example-WordArithmetic :<->text1107.htm#12403<->Example-WordArithmetic :: GrpCox_WordArithmetic (Example H104E13)
5<->Length :: # w <->text1107.htm#12404<->Length :: # w : GrpFPCoxElt -&gt; RngIntElt
5<->Length(W, w) : GrpPermCox, GrpPermElt -> RngIntElt :: # w <->text1107.htm#12404<->Length(W, w) : GrpPermCox, GrpPermElt -> RngIntElt :: # w : GrpFPCoxElt -&gt; RngIntElt
5<->CoxeterLength :: # w <->text1107.htm#12404<->CoxeterLength :: # w : GrpFPCoxElt -&gt; RngIntElt
5<->CoxeterLength(W, w) : GrpPermCox, GrpPermElt -> RngIntElt :: # w <->text1107.htm#12404<->CoxeterLength(W, w) : GrpPermCox, GrpPermElt -> RngIntElt :: # w : GrpFPCoxElt -&gt; RngIntElt
5<-># w <->text1107.htm#12404<-># w : GrpFPCoxElt -&gt; RngIntElt
5<->LongestElement(W) <->text1107.htm#12405<->LongestElement(W) : GrpPermCox -> GrpPermElt
5<->LongestElement(W) <->text1107.htm#12405<->LongestElement(W) : GrpFPCox -&gt; SeqEnum
5<->CoxeterElement(W) <->text1107.htm#12406<->CoxeterElement(W) : GrpPermCox -> GrpPermElt
5<->CoxeterElement(W) <->text1107.htm#12406<->CoxeterElement(W) : GrpFPCox -&gt; SeqEnum
5<->CoxeterNumber(W) <->text1107.htm#12407<->CoxeterNumber(W) : GrpPermCox -> GrpPermElt
5<->CoxeterNumber(W) <->text1107.htm#12407<->CoxeterNumber(W) : GrpFPCox -&gt; SeqEnum
4<->GrpCox_LongestCoxeterElements (Example H104E14)<->text1107.htm#12408<->GrpCox_LongestCoxeterElements (Example H104E14)
4<->Example-LongestCoxeterElements :<->text1107.htm#12408<->Example-LongestCoxeterElements :: GrpCox_LongestCoxeterElements (Example H104E14)
5<->LeftDescentSet(W, w) <->text1107.htm#12409<->LeftDescentSet(W, w) : GrpPermCox, GrpPermElt -> ${}$
5<->LeftDescentSet(W, w) <->text1107.htm#12409<->LeftDescentSet(W, w) : GrpFPCox, GrpFPCoxElt -&gt; ()
5<->RightDescentSet(W, w) <->text1107.htm#12410<->RightDescentSet(W, w) : GrpPermCox, GrpPermElt -> ${}$
5<->RightDescentSet(W, w) <->text1107.htm#12410<->RightDescentSet(W, w) : GrpFPCox, GrpFPCoxElt -&gt; ()
4<->GrpCox_DescentSets (Example H104E15)<->text1107.htm#12411<->GrpCox_DescentSets (Example H104E15)
4<->Example-DescentSets :<->text1107.htm#12411<->Example-DescentSets :: GrpCox_DescentSets (Example H104E15)
3<->group-elt-op :<->text1107.htm<->group-elt-op :: Operations on Elements (COXETER GROUPS)
3<->root :<->text1108.htm<->root :: Roots, Coroots and Reflections (COXETER GROUPS)
3<->root-data-roots :<->text1108.htm<->root-data-roots :: Roots, Coroots and Reflections (COXETER GROUPS)
3<->access :<->text1108.htm#12413<->access :: Accessing Roots and Coroots (COXETER GROUPS)
5<->CorootSpace :: RootSpace(W) <->text1108.htm#12414<->CorootSpace :: RootSpace(W) : GrpPermCox -&gt; .
5<->RootSpace(W) <->text1108.htm#12414<->RootSpace(W) : GrpPermCox -&gt; .
5<->SimpleCoroots :: SimpleRoots(W) <->text1108.htm#12415<->SimpleCoroots :: SimpleRoots(W) : GrpPermCox -&gt; Mtrx
5<->SimpleRoots(W) <->text1108.htm#12415<->SimpleRoots(W) : GrpPermCox -&gt; Mtrx
4<->GrpCox_RootSpace (Example H104E16)<->text1108.htm#12416<->GrpCox_RootSpace (Example H104E16)
4<->Example-RootSpace :<->text1108.htm#12416<->Example-RootSpace :: GrpCox_RootSpace (Example H104E16)
5<->NumPosRoots :: NumberOfPositiveRoots(W) <->text1108.htm#12417<->NumPosRoots :: NumberOfPositiveRoots(W) : GrpPermCox -&gt; RngIntElt
5<->NumberOfPositiveRoots(W) <->text1108.htm#12417<->NumberOfPositiveRoots(W) : GrpPermCox -&gt; RngIntElt
5<->Coroots :: Roots(W) <->text1108.htm#12418<->Coroots :: Roots(W) : GrpPermCox -&gt; (@@)
5<->Roots(W) <->text1108.htm#12418<->Roots(W) : GrpPermCox -&gt; (@@)
5<->PositiveCoroots :: PositiveRoots(W) <->text1108.htm#12419<->PositiveCoroots :: PositiveRoots(W) : GrpPermCox -&gt; (@@)
5<->PositiveRoots(W) <->text1108.htm#12419<->PositiveRoots(W) : GrpPermCox -&gt; (@@)
5<->Coroot :: Root(W, r) <->text1108.htm#12420<->Coroot :: Root(W, r) : GrpPermCox, RngIntElt -&gt; (@@)
5<->Root(W, r) <->text1108.htm#12420<->Root(W, r) : GrpPermCox, RngIntElt -&gt; (@@)
5<->CorootPosition :: RootPosition(W, v) <->text1108.htm#12421<->CorootPosition :: RootPosition(W, v) : GrpPermCox, . -&gt; (@@)
5<->RootPosition(W, v) <->text1108.htm#12421<->RootPosition(W, v) : GrpPermCox, . -&gt; (@@)
4<->GrpCox_RootsCoroots (Example H104E17)<->text1108.htm#12422<->GrpCox_RootsCoroots (Example H104E17)
4<->Example-RootsCoroots :<->text1108.htm#12422<->Example-RootsCoroots :: GrpCox_RootsCoroots (Example H104E17)
5<->HighestLongRoot :: HighestRoot(W) <->text1108.htm#12423<->HighestLongRoot :: HighestRoot(W) : GrpPermCox -&gt; .
5<->HighestRoot(W) <->text1108.htm#12423<->HighestRoot(W) : GrpPermCox -&gt; .
5<->HighestShortRoot(W) <->text1108.htm#12424<->HighestShortRoot(W) : GrpPermCox  -&gt; .
4<->GrpCox_HeighestRoots (Example H104E18)<->text1108.htm#12425<->GrpCox_HeighestRoots (Example H104E18)
4<->Example-HeighestRoots :<->text1108.htm#12425<->Example-HeighestRoots :: GrpCox_HeighestRoots (Example H104E18)
5<->DualCoxeterForm :: CoxeterForm(W) <->text1108.htm#12426<->DualCoxeterForm :: CoxeterForm(W) : GrpPermCox -&gt; AlgMatElt
5<->CoxeterForm(W) <->text1108.htm#12426<->CoxeterForm(W) : GrpPermCox -&gt; AlgMatElt
5<->AdditiveOrder(W) <->text1108.htm#12427<->AdditiveOrder(W) : GrpPermCox -&gt; SeqEnum
3<->access :<->text1108.htm#12413<->access :: Accessing Roots and Coroots (COXETER GROUPS)
3<->ops-root-coroot :<->text1108.htm#12428<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (COXETER GROUPS)
5<->Sum(W, r, s) <->text1108.htm#12429<->Sum(W, r, s) : GrpPermCox, RngIntElt, RngIntElt -&gt; RngIntElt
5<->IsPositive(W, r) <->text1108.htm#12430<->IsPositive(W, r) : GrpPermCox, RngIntElt -&gt; BoolElt
5<->IsNegative(W, r) <->text1108.htm#12431<->IsNegative(W, r) : GrpPermCox, RngIntElt -&gt; BoolElt
5<->Negative(W, r) <->text1108.htm#12432<->Negative(W, r) : GrpPermCox, RngIntElt -&gt; RngIntElt
5<->LeftString(W, r, s) <->text1108.htm#12433<->LeftString(W, r, s) : GrpPermCox, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightString(W, r, s) <->text1108.htm#12434<->RightString(W, r, s) : GrpPermCox, RngIntElt, RngIntElt -&gt; RngIntElt
5<->LeftStringLength(W, r, s) <->text1108.htm#12435<->LeftStringLength(W, r, s) : GrpPermCox, RngIntElt, RngIntElt -&gt; RngIntElt
5<->RightStringLength(W, r, s) <->text1108.htm#12436<->RightStringLength(W, r, s) : GrpPermCox, RngIntElt, RngIntElt -&gt; RngIntElt
4<->GrpCox_RootArithmetic (Example H104E19)<->text1108.htm#12437<->GrpCox_RootArithmetic (Example H104E19)
4<->Example-RootArithmetic :<->text1108.htm#12437<->Example-RootArithmetic :: GrpCox_RootArithmetic (Example H104E19)
5<->CorootHeight :: RootHeight(W, r) <->text1108.htm#12438<->CorootHeight :: RootHeight(W, r) : GrpPermCox, RngIntElt -&gt; RngIntElt
5<->RootHeight(W, r) <->text1108.htm#12438<->RootHeight(W, r) : GrpPermCox, RngIntElt -&gt; RngIntElt
5<->CorootNorms :: RootNorms(W) <->text1108.htm#12439<->CorootNorms :: RootNorms(W) : GrpPermCox -&gt; [RngIntElt]
5<->RootNorms(W) <->text1108.htm#12439<->RootNorms(W) : GrpPermCox -&gt; [RngIntElt]
5<->CorootNorm :: RootNorm(W, r) <->text1108.htm#12440<->CorootNorm :: RootNorm(W, r) : GrpPermCox, RngIntElt -&gt; RngIntElt
5<->RootNorm(W, r) <->text1108.htm#12440<->RootNorm(W, r) : GrpPermCox, RngIntElt -&gt; RngIntElt
5<->IsLongRoot(W, r) <->text1108.htm#12441<->IsLongRoot(W, r) : GrpPermCox, RngIntElt -&gt; BoolElt
5<->IsShortRoot(W, r) <->text1108.htm#12442<->IsShortRoot(W, r) : GrpPermCox, RngIntElt -&gt; BoolElt
4<->GrpCox_RootOperations (Example H104E20)<->text1108.htm#12443<->GrpCox_RootOperations (Example H104E20)
4<->Example-RootOperations :<->text1108.htm#12443<->Example-RootOperations :: GrpCox_RootOperations (Example H104E20)
3<->ops-root-coroot :<->text1108.htm#12428<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (COXETER GROUPS)
3<->weights :<->text1108.htm#12444<->weights :: Weights (COXETER GROUPS)
5<->CoweightLattice :: WeightLattice(W) <->text1108.htm#12445<->CoweightLattice :: WeightLattice(W) : GrpPermCox -&gt; Lat
5<->WeightLattice(W) <->text1108.htm#12445<->WeightLattice(W) : GrpPermCox -&gt; Lat
5<->FundamentalCoweights :: FundamentalWeights(W) <->text1108.htm#12446<->FundamentalCoweights :: FundamentalWeights(W) : GrpPermCox -&gt; SeqEnum
5<->FundamentalWeights(W) <->text1108.htm#12446<->FundamentalWeights(W) : GrpPermCox -&gt; SeqEnum
5<->IsDominant(R, v) <->text1108.htm#12447<->IsDominant(R, v) : RootDtm, . -&gt; ModTupFldElt, GrpFPCoxElt
5<->DominantWeight(W, v) <->text1108.htm#12448<->DominantWeight(W, v) : GrpPermCox, .  -&gt; ModTupFldElt, GrpFPCoxElt
5<->WeightOrbit(W, v) <->text1108.htm#12449<->WeightOrbit(W, v) : GrpPermCox, . -&gt;  @ ModTupFldElt @, [GrpFPCoxElt]
4<->GrpCox_DominantWeights (Example H104E21)<->text1108.htm#12450<->GrpCox_DominantWeights (Example H104E21)
4<->Example-DominantWeights :<->text1108.htm#12450<->Example-DominantWeights :: GrpCox_DominantWeights (Example H104E21)
3<->weights :<->text1108.htm#12444<->weights :: Weights (COXETER GROUPS)
3<->root-data-roots :<->text1108.htm<->root-data-roots :: Roots, Coroots and Reflections (COXETER GROUPS)
3<->rootrefl :<->text1109.htm<->rootrefl :: Reflections (COXETER GROUPS)
5<->IsReflection(w) <->text1109.htm#12452<->IsReflection(w) : GrpPermElt -> BoolElt, ., ., RngInt
5<->IsReflection(w) <->text1109.htm#12452<->IsReflection(w) : GrpFPElt -&gt; BoolElt
5<->Reflections(W) <->text1109.htm#12453<->Reflections(W) : GrpPermCox -> [GrpPermElt]
5<->Reflections(W) <->text1109.htm#12453<->Reflections(W) : GrpFPCox -&gt; [GrpFPCoxElt]
4<->GrpCox_Reflections (Example H104E22)<->text1109.htm#12454<->GrpCox_Reflections (Example H104E22)
4<->Example-Reflections :<->text1109.htm#12454<->Example-Reflections :: GrpCox_Reflections (Example H104E22)
5<->SimpleReflections(W) <->text1109.htm#12455<->SimpleReflections(W) : GrpPermCox -> [GrpPermElt]
5<->SimpleReflections(W) <->text1109.htm#12455<->SimpleReflections(W) : GrpFPCox -&gt; [GrpFPCoxElt]
5<->SimpleReflectionPermutations(W) <->text1109.htm#12456<->SimpleReflectionPermutations(W) : GrpPermCox -&gt; [GrpPermElt]
5<->ReflectionPermutation :: Reflection(W, r) <->text1109.htm#12457<->ReflectionPermutation :: Reflection(W, r) : GrpPermCox, RngIntElt -&gt; GrpPermElt
5<->Reflection(W, r) <->text1109.htm#12457<->Reflection(W, r) : GrpPermCox, RngIntElt -&gt; GrpPermElt
5<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(W) <->text1109.htm#12458<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(W) : GrpPermCox -&gt; []
5<->SimpleReflectionMatrices(W) <->text1109.htm#12458<->SimpleReflectionMatrices(W) : GrpPermCox -&gt; []
5<->CoreflectionMatrices :: ReflectionMatrices(W) <->text1109.htm#12459<->CoreflectionMatrices :: ReflectionMatrices(W) : GrpPermCox -&gt; []
5<->ReflectionMatrices(W) <->text1109.htm#12459<->ReflectionMatrices(W) : GrpPermCox -&gt; []
5<->CoreflectionMatrix :: ReflectionMatrix(W, r) <->text1109.htm#12460<->CoreflectionMatrix :: ReflectionMatrix(W, r) : GrpPermCox, RngIntElt -&gt; []
5<->ReflectionMatrix(W, r) <->text1109.htm#12460<->ReflectionMatrix(W, r) : GrpPermCox, RngIntElt -&gt; []
5<->ReflectionWords(W) <->text1109.htm#12461<->ReflectionWords(W) : GrpPermCox -&gt; []
5<->ReflectionWord(W, r) <->text1109.htm#12462<->ReflectionWord(W, r) : GrpPermCox, RngIntElt -&gt; []
4<->GrpCox_Action (Example H104E23)<->text1109.htm#12463<->GrpCox_Action (Example H104E23)
4<->Example-Action :<->text1109.htm#12463<->Example-Action :: GrpCox_Action (Example H104E23)
3<->rootrefl :<->text1109.htm<->rootrefl :: Reflections (COXETER GROUPS)
3<->reflection subgroup :<->text1110.htm<->reflection subgroup :: Reflection Subgroups (COXETER GROUPS)
3<->subgroups :<->text1110.htm<->subgroups :: Reflection Subgroups (COXETER GROUPS)
5<->ReflectionSubgroup(W, a) <->text1110.htm#12465<->ReflectionSubgroup(W, a) : GrpPermCox, () -&gt; GrpPermCox
5<->ReflectionSubgroup(W, s) <->text1110.htm#12466<->ReflectionSubgroup(W, s) : GrpPermCox, [] -&gt; GrpPermCox
5<->StandardParabolicSubgroup(W, J) <->text1110.htm#12467<->StandardParabolicSubgroup(W, J) : GrpPermCox, () -&gt; GrpPermCox
5<->IsReflectionSubgroup(W, H) <->text1110.htm#12468<->IsReflectionSubgroup(W, H) : GrpPermCox, GrpPermCox -&gt; BoolElt
5<->IsParabolicSubgroup(W, H) <->text1110.htm#12469<->IsParabolicSubgroup(W, H) : GrpPermCox, GrpPermCox -&gt; BoolElt
5<->IsStandardParabolicSubgroup(W, H) <->text1110.htm#12470<->IsStandardParabolicSubgroup(W, H) : GrpPermCox, GrpPermCox -&gt; BoolElt
5<->Overgroup(H) <->text1110.htm#12471<->Overgroup(H) : GrpPermCox -&gt; GrpPermCox
5<->Overdatum(H) <->text1110.htm#12472<->Overdatum(H) : GrpPermCox -&gt; RootDtm
5<->LocalCoxeterGroup(H) <->text1110.htm#12473<->LocalCoxeterGroup(H) : GrpPermCox -&gt; GrpPermCox, Map
4<->GrpCox_ReflectionSubgroups (Example H104E24)<->text1110.htm#12474<->GrpCox_ReflectionSubgroups (Example H104E24)
4<->Example-ReflectionSubgroups :<->text1110.htm#12474<->Example-ReflectionSubgroups :: GrpCox_ReflectionSubgroups (Example H104E24)
5<->Transversal(W, H) <->text1110.htm#12475<->Transversal(W, H) : GrpPermCox, GrpPermCox -&gt; @ @
5<->TransversalWords(W, H) <->text1110.htm#12476<->TransversalWords(W, H) : GrpPermCox, GrpPermCox -&gt; @ @
5<->TransversalElt(W, H, x) <->text1110.htm#12477<->TransversalElt(W, H, x) : GrpPermCox, GrpPermCox, GrpPermElt -&gt; GrpPermElt
4<->GrpCox_Transversals (Example H104E25)<->text1110.htm#12478<->GrpCox_Transversals (Example H104E25)
4<->Example-Transversals :<->text1110.htm#12478<->Example-Transversals :: GrpCox_Transversals (Example H104E25)
5<->TransversalElt(W, x, H) <->text1110.htm#12479<->TransversalElt(W, x, H) : GrpPermCox, GrpPermElt, GrpPermCox -&gt; GrpPermElt
5<->TransversalElt(W, H, x, J) <->text1110.htm#12480<->TransversalElt(W, H, x, J) : GrpPermCox, GrpPermCox, GrpPermElt, GrpPermCox -&gt; GrpPermElt
5<->Transversal(W, J, L) <->text1110.htm#12481<->Transversal(W, J, L) : GrpFPCox, ${$RngIntElt$}$, RngIntElt -> ${@$ GrpFPCoxElt $@}$
5<->Transversal(W, J) <->text1110.htm#12481<->Transversal(W, J) : GrpFPCox, (RngIntElt} -&gt; (@ GrpFPCoxElt @)
5<->Transversal(W, J, K) <->text1110.htm#12482<->Transversal(W, J, K) : GrpFPCox, (RngIntElt}, (RngIntElt} -&gt; [ GrpFPCoxElt ], [ ]
5<->DirectProduct(W1, W2) <->text1110.htm#12483<->DirectProduct(W1, W2) : GrpPermCox, GrpPermCox -&gt; GrpPermCox
5<->Dual(W) <->text1110.htm#12484<->Dual(W) : GrpPermCox -&gt; GrpPermCox
4<->GrpCox_SumDual (Example H104E26)<->text1110.htm#12485<->GrpCox_SumDual (Example H104E26)
4<->Example-SumDual :<->text1110.htm#12485<->Example-SumDual :: GrpCox_SumDual (Example H104E26)
3<->subgroups :<->text1110.htm<->subgroups :: Reflection Subgroups (COXETER GROUPS)
3<->action-root-coroot :<->text1111.htm<->action-root-coroot :: Root Actions (COXETER GROUPS)
5<->CorootGSet :: RootGSet(W) <->text1111.htm#12487<->CorootGSet :: RootGSet(W) : GrpPermCox -&gt; GSet
5<->RootGSet(W) <->text1111.htm#12487<->RootGSet(W) : GrpPermCox -&gt; GSet
4<->GrpCox_GSets (Example H104E27)<->text1111.htm#12488<->GrpCox_GSets (Example H104E27)
4<->Example-GSets :<->text1111.htm#12488<->Example-GSets :: GrpCox_GSets (Example H104E27)
5<->CorootAction :: RootAction(W) <->text1111.htm#12489<->CorootAction :: RootAction(W) : GrpPermCox -&gt; Map
5<->RootAction(W) <->text1111.htm#12489<->RootAction(W) : GrpPermCox -&gt; Map
4<->GrpCox_CorootAction (Example H104E28)<->text1111.htm#12490<->GrpCox_CorootAction (Example H104E28)
4<->Example-CorootAction :<->text1111.htm#12490<->Example-CorootAction :: GrpCox_CorootAction (Example H104E28)
5<->CoreflectionGroup :: ReflectionGroup(W) <->text1111.htm#12491<->CoreflectionGroup :: ReflectionGroup(W) : GrpPermCox -&gt; GrpMat, Map
5<->ReflectionGroup(W) <->text1111.htm#12491<->ReflectionGroup(W) : GrpPermCox -&gt; GrpMat, Map
4<->GrpCox_ReflectionGroups (Example H104E29)<->text1111.htm#12492<->GrpCox_ReflectionGroups (Example H104E29)
4<->Example-ReflectionGroups :<->text1111.htm#12492<->Example-ReflectionGroups :: GrpCox_ReflectionGroups (Example H104E29)
3<->action-root-coroot :<->text1111.htm<->action-root-coroot :: Root Actions (COXETER GROUPS)
3<->Coxeter
group!standard action :<->text1112.htm<->Coxeter
group!standard action :: Standard Action (COXETER GROUPS)
3<->action-root-coroot :<->text1112.htm<->action-root-coroot :: Standard Action (COXETER GROUPS)
5<->StandardAction(W) <->text1112.htm#12494<->StandardAction(W) : GrpPermCox -> Map
5<->StandardAction(W) <->text1112.htm#12494<->StandardAction(W) : GrpFPCox -&gt; Map
5<->\nameIntrStandardActionGroup{StandardActionGroup}(W) <->text1112.htm#12495<->\nameIntrStandardActionGroup{StandardActionGroup}(W) : GrpPermCox -> GrpPerm, Map
5<->StandardActionGroup(W) <->text1112.htm#12495<->StandardActionGroup(W) : GrpFPCox -&gt; GrpPerm, Map
4<->GrpCox_StandardAction (Example H104E30)<->text1112.htm#12496<->GrpCox_StandardAction (Example H104E30)
4<->Example-StandardAction :<->text1112.htm#12496<->Example-StandardAction :: GrpCox_StandardAction (Example H104E30)
3<->action-root-coroot :<->text1112.htm<->action-root-coroot :: Standard Action (COXETER GROUPS)
3<->group-braid :<->text1113.htm<->group-braid :: Braid Groups (COXETER GROUPS)
5<->BraidGroup(W) <->text1113.htm#12498<->BraidGroup(W) : GrpFPCox -&gt; GrpFP, Map
5<->PureBraidGroup(W) <->text1113.htm#12499<->PureBraidGroup(W) : GrpFPCox -&gt; GrpFP, Map
4<->GrpCox_BraidGroups (Example H104E31)<->text1113.htm#12500<->GrpCox_BraidGroups (Example H104E31)
4<->Example-BraidGroups :<->text1113.htm#12500<->Example-BraidGroups :: GrpCox_BraidGroups (Example H104E31)
3<->group-braid :<->text1113.htm<->group-braid :: Braid Groups (COXETER GROUPS)
3<->group-wgraphs :<->text1114.htm<->group-wgraphs :: W-graphs (COXETER GROUPS)
5<->SetVerbose("WGraph", v) <->text1114.htm#12502<->SetVerbose("WGraph", v) : MonStgElt, RngIntElt -&gt;
5<->Mij2EltRootTable(seq) <->text1114.htm#12503<->Mij2EltRootTable(seq) : SeqEnum -&gt; SeqEnum[SeqEnum[RngIntElt]]
5<->Name2Mij(name) <->text1114.htm#12504<->Name2Mij(name) : MonStgElt -&gt; SeqEnum
4<->GrpCox_mijseq (Example H104E32)<->text1114.htm#12505<->GrpCox_mijseq (Example H104E32)
4<->Example-mijseq :<->text1114.htm#12505<->Example-mijseq :: GrpCox_mijseq (Example H104E32)
5<->Partition2WGtable(pi) <->text1114.htm#12506<->Partition2WGtable(pi) : SeqEnum -&gt; SeqEnum, GrpFPCox
5<->WGtable2WG(table) <->text1114.htm#12507<->WGtable2WG(table) : SeqEnum -&gt; GrphUnd
5<->TestWG(W,wg) <->text1114.htm#12508<->TestWG(W,wg) : GrpFPCox, GrphDir -> .
5<->TestWG(tp,wg) <->text1114.htm#12508<->TestWG(tp,wg) : MonStgElt, GrphDir -> .
5<->TestWG(W,wg) <->text1114.htm#12508<->TestWG(W,wg) : GrpFPCox, GrphUnd -&gt; .
4<->GrpCox_SpechtWgraph (Example H104E33)<->text1114.htm#12509<->GrpCox_SpechtWgraph (Example H104E33)
4<->Example-SpechtWgraph :<->text1114.htm#12509<->Example-SpechtWgraph :: GrpCox_SpechtWgraph (Example H104E33)
5<->WGelement2WGtable(g,K) <->text1114.htm#12510<->WGelement2WGtable(g,K) : GrpFPCoxElt, SetEnum -&gt; SeqEnum, SeqEnum
4<->GrpCox_B5Wgraph (Example H104E34)<->text1114.htm#12511<->GrpCox_B5Wgraph (Example H104E34)
4<->Example-B5Wgraph :<->text1114.htm#12511<->Example-B5Wgraph :: GrpCox_B5Wgraph (Example H104E34)
5<->GetCells(wg) <->text1114.htm#12512<->GetCells(wg) : GrphDir -> SeqEnum
5<->GetCells(wg) <->text1114.htm#12512<->GetCells(wg) : GrphUnd -&gt; SeqEnum
5<->InduceWG(W,wg,seq) <->text1114.htm#12513<->InduceWG(W,wg,seq) : GrpFPCox, GrphDir, SeqEnum -> GrphDir
5<->InduceWG(W,wg,seq) <->text1114.htm#12513<->InduceWG(W,wg,seq) : GrpFPCox, GrphUnd, SeqEnum -&gt; GrphUnd
5<->InduceWGtable(J, table, W) <->text1114.htm#12514<->InduceWGtable(J, table, W) : SeqEnum, SeqEnum, GrpFPCox -&gt; SeqEnum[SeqEnum[RngIntElt]]
5<->IsWGsymmetric(dwg) <->text1114.htm#12515<->IsWGsymmetric(dwg) : GrphDir -&gt; BoolElt, GrphDir
5<->MakeDirected(uwg) <->text1114.htm#12516<->MakeDirected(uwg) : GrphUnd -&gt; GrphDir
5<->TestHeckeRep(W,r) <->text1114.htm#12517<->TestHeckeRep(W,r) : GrpFPCox, SeqEnum -&gt; .
5<->WG2GroupRep(wg) <->text1114.htm#12518<->WG2GroupRep(wg) : GrphDir -> SeqEnum
5<->WG2GroupRep(wg) <->text1114.htm#12518<->WG2GroupRep(wg) : GrphUnd -&gt; SeqEnum
5<->WG2HeckeRep(W,wg) <->text1114.htm#12519<->WG2HeckeRep(W,wg) : GrpFPCox, GrphDir -> SeqEnum
5<->WG2HeckeRep(W,wg) <->text1114.htm#12519<->WG2HeckeRep(W,wg) : GrpFPCox, GrphUnd -&gt; SeqEnum
5<->WGidealgens2WGtable(dgens,K) <->text1114.htm#12520<->WGidealgens2WGtable(dgens,K) : SeqEnum, SetEnum -&gt; SeqEnum[SeqEnum[RngIntElt]], SetIndx
4<->GrpCox_WgraphIdeal (Example H104E35)<->text1114.htm#12521<->GrpCox_WgraphIdeal (Example H104E35)
4<->Example-WgraphIdeal :<->text1114.htm#12521<->Example-WgraphIdeal :: GrpCox_WgraphIdeal (Example H104E35)
5<->WriteWG(file,dwg) <->text1114.htm#12522<->WriteWG(file,dwg) : MonStgElt, GrphDir -> .
5<->WriteWG(file,uwg) <->text1114.htm#12522<->WriteWG(file,uwg) : MonStgElt, GrphUnd -&gt; .
3<->group-wgraphs :<->text1114.htm<->group-wgraphs :: W-graphs (COXETER GROUPS)
3<->related :<->text1115.htm<->related :: Related Structures (COXETER GROUPS)
5<->Presentation :: CoxeterGroup(GrpFP, W) <->text1115.htm#12524<->Presentation :: CoxeterGroup(GrpFP, W) : Cat, GrpPermCox -&gt; GrpFPCox
5<->CoxeterGroup(GrpFP, W) <->text1115.htm#12524<->CoxeterGroup(GrpFP, W) : Cat, GrpPermCox -&gt; GrpFPCox
5<->CoxeterGroup :: ReflectionGroup(W) <->text1115.htm#12525<->CoxeterGroup :: ReflectionGroup(W) : GrpPermCox -&gt; GrpMat
5<->ReflectionGroup(W) <->text1115.htm#12525<->ReflectionGroup(W) : GrpPermCox -&gt; GrpMat
5<->LieAlgebra(W, R) <->text1115.htm#12526<->LieAlgebra(W, R) : GrpPermCox, Rng -&gt; AlgLie
5<->GroupOfLieType(W, R) <->text1115.htm#12527<->GroupOfLieType(W, R) : GrpPermCox, Rng -&gt; GrpLie
3<->related :<->text1115.htm<->related :: Related Structures (COXETER GROUPS)
3<->coxeter-groups :<->text1101.htm<->coxeter-groups :: COXETER GROUPS
3<->fiurg :<->text1118.htm<->fiurg :: REFLECTION GROUPS
3<->introduction :<->text1119.htm<->introduction :: Introduction (REFLECTION GROUPS)
3<->Construction of Pseudo- reflections (REFLECTION GROUPS)<->text1120.htm<->Construction of Pseudo- reflections (REFLECTION GROUPS)
5<->PseudoReflection(a, b) <->text1120.htm#12533<->PseudoReflection(a, b) : ModTupRngElt, ModTupRngElt -&gt; AlgMatElt
5<->Transvection(a, b) <->text1120.htm#12534<->Transvection(a, b) : ModTupRngElt, ModTupRngElt -&gt; AlgMatElt
5<->Reflection(a, b) <->text1120.htm#12535<->Reflection(a, b) : ModTupRngElt, ModTupRngElt -&gt; AlgMatElt
5<->IsPseudoReflection(r) <->text1120.htm#12536<->IsPseudoReflection(r) : Mtrx -&gt; BoolElt, ModTupRngElt, ModTupRngElt
5<->IsTransvection(r) <->text1120.htm#12537<->IsTransvection(r) : Mtrx -&gt; BoolElt, ModTupRngElt, ModTupRngElt
5<->IsReflection(r) <->text1120.htm#12538<->IsReflection(r) : Mtrx -&gt; BoolElt, ModTupRngElt, ModTupRngElt
5<->IsReflectionGroup(G) <->text1120.htm#12539<->IsReflectionGroup(G) : GrpMat -&gt; BoolElt
4<->GrpRfl_pseudoreflection (Example H105E1)<->text1120.htm#12540<->GrpRfl_pseudoreflection (Example H105E1)
4<->Example-pseudoreflection :<->text1120.htm#12540<->Example-pseudoreflection :: GrpRfl_pseudoreflection (Example H105E1)
4<->GrpRfl_ref-group (Example H105E2)<->text1120.htm#12541<->GrpRfl_ref-group (Example H105E2)
4<->Example-ref-group :<->text1120.htm#12541<->Example-ref-group :: GrpRfl_ref-group (Example H105E2)
4<->GrpRfl_transvections (Example H105E3)<->text1120.htm#12542<->GrpRfl_transvections (Example H105E3)
4<->Example-transvections :<->text1120.htm#12542<->Example-transvections :: GrpRfl_transvections (Example H105E3)
3<->reflections-forms :<->text1120.htm#12543<->reflections-forms :: Pseudo-reflections Preserving  Reflexive Forms (REFLECTION GROUPS)
5<->SymplecticTransvection(a, alpha) <->text1120.htm#12544<->SymplecticTransvection(a, alpha) : ModTupRngElt, FldElt -&gt; AlgMatElt
5<->UnitaryTransvection(a, alpha) <->text1120.htm#12545<->UnitaryTransvection(a, alpha) : ModTupRngElt, FldElt -&gt; AlgMatElt
5<->UnitaryReflection(a, zeta) <->text1120.htm#12546<->UnitaryReflection(a, zeta) : ModTupRngElt, FldElt -&gt; AlgMatElt
5<->OrthogonalReflection(a) <->text1120.htm#12547<->OrthogonalReflection(a) : ModTupFldElt -&gt; AlgMatElt
4<->GrpRfl_unitary-transvection (Example H105E4)<->text1120.htm#12548<->GrpRfl_unitary-transvection (Example H105E4)
4<->Example-unitary-transvection :<->text1120.htm#12548<->Example-unitary-transvection :: GrpRfl_unitary-transvection (Example H105E4)
3<->reflections-forms :<->text1120.htm#12543<->reflections-forms :: Pseudo-reflections Preserving  Reflexive Forms (REFLECTION GROUPS)
3<->Construction of Pseudo- reflections (REFLECTION GROUPS)<->text1120.htm<->Construction of Pseudo- reflections (REFLECTION GROUPS)
3<->create-group-refl :<->text1121.htm<->create-group-refl :: Construction of Reflection  Groups (REFLECTION GROUPS)
5<->PseudoReflectionGroup(A, B) <->text1121.htm#12550<->PseudoReflectionGroup(A, B) : Mtrx, Mtrx -&gt; GrpMat, Map
4<->GrpRfl_ReflectionGroups (Example H105E5)<->text1121.htm#12551<->GrpRfl_ReflectionGroups (Example H105E5)
4<->Example-ReflectionGroups :<->text1121.htm#12551<->Example-ReflectionGroups :: GrpRfl_ReflectionGroups (Example H105E5)
3<->create-group-refl :<->text1121.htm<->create-group-refl :: Construction of Reflection  Groups (REFLECTION GROUPS)
3<->create-group-refl-real :<->text1122.htm<->create-group-refl-real :: Construction of Real Reflection Groups (REFLECTION GROUPS)
5<->ReflectionGroup(G) <->text1122.htm#12553<->ReflectionGroup(G) : GrphUnd -> GrpMat
5<->ReflectionGroup(C) <->text1122.htm#12553<->ReflectionGroup(C) : AlgMatElt -> GrpMat
5<->ReflectionGroup(D) <->text1122.htm#12553<->ReflectionGroup(D) : GrphDir -> GrpMat
5<->ReflectionGroup(M) <->text1122.htm#12553<->ReflectionGroup(M) : AlgMatElt -&gt; GrpMat
5<->ReflectionGroup(N) <->text1122.htm#12554<->ReflectionGroup(N) : MonStgElt -&gt; GrpMat
5<->IrreducibleReflectionGroup(X, n) <->text1122.htm#12555<->IrreducibleReflectionGroup(X, n) : MonStgElt, RngIntElt -&gt; GrpMat
4<->GrpRfl_RealReflectionGroupByCartan (Example H105E6)<->text1122.htm#12556<->GrpRfl_RealReflectionGroupByCartan (Example H105E6)
4<->Example-RealReflectionGroupByCartan :<->text1122.htm#12556<->Example-RealReflectionGroupByCartan :: GrpRfl_RealReflectionGroupByCartan (Example H105E6)
5<->ReflectionGroup(R) <->text1122.htm#12557<->ReflectionGroup(R) : RootDtm -> GrpMat
5<->ReflectionGroup(R) <->text1122.htm#12557<->ReflectionGroup(R) : RootSys -&gt; GrpMat
4<->GrpRfl_RealReflectionGroupByRootDatum (Example H105E7)<->text1122.htm#12558<->GrpRfl_RealReflectionGroupByRootDatum (Example H105E7)
4<->Example-RealReflectionGroupByRootDatum :<->text1122.htm#12558<->Example-RealReflectionGroupByRootDatum :: GrpRfl_RealReflectionGroupByRootDatum (Example H105E7)
5<->ReflectionGroup(W) <->text1122.htm#12559<->ReflectionGroup(W) : GrpFPCox -&gt; GrpMat, Map
5<->ReflectionGroup(W) <->text1122.htm#12560<->ReflectionGroup(W) : GrpPermCox -&gt; GrpMat, Map
4<->GrpRfl_ReflectionGroupConversion (Example H105E8)<->text1122.htm#12561<->GrpRfl_ReflectionGroupConversion (Example H105E8)
4<->Example-ReflectionGroupConversion :<->text1122.htm#12561<->Example-ReflectionGroupConversion :: GrpRfl_ReflectionGroupConversion (Example H105E8)
3<->create-group-refl-real :<->text1122.htm<->create-group-refl-real :: Construction of Real Reflection Groups (REFLECTION GROUPS)
3<->create-group-refl-complex :<->text1123.htm<->create-group-refl-complex :: Construction of Finite Complex Reflection Groups (REFLECTION GROUPS)
5<->ShephardTodd(n) <->text1123.htm#12563<->ShephardTodd(n) : RngIntElt -&gt; GrpMat, Fld
4<->GrpRfl_ComplexReflectionGroups (Example H105E9)<->text1123.htm#12564<->GrpRfl_ComplexReflectionGroups (Example H105E9)
4<->Example-ComplexReflectionGroups :<->text1123.htm#12564<->Example-ComplexReflectionGroups :: GrpRfl_ComplexReflectionGroups (Example H105E9)
5<->ComplexReflectionGroup(C) <->text1123.htm#12565<->ComplexReflectionGroup(C) : Mtrx -&gt; GrpMat, Map
5<->ComplexReflectionGroup(X, n) <->text1123.htm#12566<->ComplexReflectionGroup(X, n) : MonStgElt, RngIntElt -&gt; GrpMat, Map
4<->GrpRfl_reflection-subgroups (Example H105E10)<->text1123.htm#12567<->GrpRfl_reflection-subgroups (Example H105E10)
4<->Example-reflection-subgroups :<->text1123.htm#12567<->Example-reflection-subgroups :: GrpRfl_reflection-subgroups (Example H105E10)
5<->ImprimitiveReflectionGroup :: ShephardTodd(m, p, n) <->text1123.htm#12568<->ImprimitiveReflectionGroup :: ShephardTodd(m, p, n) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat, Fld
5<->ShephardTodd(m, p, n) <->text1123.htm#12568<->ShephardTodd(m, p, n) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpMat, Fld
4<->GrpRfl_ImprimitiveReflectionGroup (Example H105E11)<->text1123.htm#12569<->GrpRfl_ImprimitiveReflectionGroup (Example H105E11)
4<->Example-ImprimitiveReflectionGroup :<->text1123.htm#12569<->Example-ImprimitiveReflectionGroup :: GrpRfl_ImprimitiveReflectionGroup (Example H105E11)
5<->ComplexRootMatrices(m, p, n) <->text1123.htm#12570<->ComplexRootMatrices(m, p, n) : RngIntElt, RngIntElt, RngIntElt ->  AlgMatElt, AlgMatElt, AlgMatElt, RngElt, RngIntElt
5<->ComplexRootMatrices(k) <->text1123.htm#12570<->ComplexRootMatrices(k) : RngIntElt -&gt; AlgMatElt, AlgMatElt, AlgMatElt, RngElt, RngIntElt
4<->GrpRfl_ComplexReflectionGroupByMatrix (Example H105E12)<->text1123.htm#12571<->GrpRfl_ComplexReflectionGroupByMatrix (Example H105E12)
4<->Example-ComplexReflectionGroupByMatrix :<->text1123.htm#12571<->Example-ComplexReflectionGroupByMatrix :: GrpRfl_ComplexReflectionGroupByMatrix (Example H105E12)
5<->ComplexCartanMatrix(m, p, n) <->text1123.htm#12572<->ComplexCartanMatrix(m, p, n) : RngIntElt, RngIntElt, RngIntElt ->  AlgMatElt
5<->ComplexCartanMatrix(k) <->text1123.htm#12572<->ComplexCartanMatrix(k) : RngIntElt -&gt; AlgMatElt
5<->BasicRootMatrices(C) <->text1123.htm#12573<->BasicRootMatrices(C) : Mtrx -&gt; AlgMatElt, AlgMatElt
5<->CohenCoxeterName(k) <->text1123.htm#12574<->CohenCoxeterName(k) : RngIntElt -&gt; MonStgElt, RngIntElt
5<->ShephardToddNumber(X, n) <->text1123.htm#12575<->ShephardToddNumber(X, n) : MonStgElt, RngIntElt -&gt; RngIntElt
4<->GrpRfl_NameConversion (Example H105E13)<->text1123.htm#12576<->GrpRfl_NameConversion (Example H105E13)
4<->Example-NameConversion :<->text1123.htm#12576<->Example-NameConversion :: GrpRfl_NameConversion (Example H105E13)
4<->GrpRfl_ReflectionGroupNames (Example H105E14)<->text1123.htm#12577<->GrpRfl_ReflectionGroupNames (Example H105E14)
4<->Example-ReflectionGroupNames :<->text1123.htm#12577<->Example-ReflectionGroupNames :: GrpRfl_ReflectionGroupNames (Example H105E14)
5<->ComplexRootDatum(m, p, n) <->text1123.htm#12578<->ComplexRootDatum(m, p, n) : 	    RngIntElt, RngIntElt, RngIntElt -> SeqEnum, SeqEnum, Map, GrpMat, AlgMatElt
5<->ComplexRootDatum(k) <->text1123.htm#12578<->ComplexRootDatum(k) : RngIntElt -&gt; SeqEnum, SeqEnum, Map, GrpMat, AlgMatElt
3<->create-group-refl-complex :<->text1123.htm<->create-group-refl-complex :: Construction of Finite Complex Reflection Groups (REFLECTION GROUPS)
3<->operations :<->text1124.htm<->operations :: Operations on Reflection  Groups (REFLECTION GROUPS)
5<->IsCoxeterIsomorphic(W1, W2) <->text1124.htm#12580<->IsCoxeterIsomorphic(W1, W2) : GrpMat, GrpMat -&gt; BoolElt
5<->IsCartanEquivalent(W1, W2) <->text1124.htm#12581<->IsCartanEquivalent(W1, W2) : GrpMat, GrpMat -&gt; BoolElt
4<->GrpRfl_Isomorphism (Example H105E15)<->text1124.htm#12582<->GrpRfl_Isomorphism (Example H105E15)
4<->Example-Isomorphism :<->text1124.htm#12582<->Example-Isomorphism :: GrpRfl_Isomorphism (Example H105E15)
5<->CartanName(W) <->text1124.htm#12583<->CartanName(W) : GrpMat -&gt; List
5<->CoxeterDiagram(W) <->text1124.htm#12584<->CoxeterDiagram(W) : GrpMat -&gt;
5<->DynkinDiagram(W) <->text1124.htm#12585<->DynkinDiagram(W) : GrpMat -&gt;
4<->GrpRfl_NameAndDiagram (Example H105E16)<->text1124.htm#12586<->GrpRfl_NameAndDiagram (Example H105E16)
4<->Example-NameAndDiagram :<->text1124.htm#12586<->Example-NameAndDiagram :: GrpRfl_NameAndDiagram (Example H105E16)
5<->RootSystem(W) <->text1124.htm#12587<->RootSystem(W) : GrpMat -&gt; RootDtm
5<->RootDatum(W) <->text1124.htm#12588<->RootDatum(W) : GrpMat -&gt; RootDtm
5<->CoxeterMatrix(W) <->text1124.htm#12589<->CoxeterMatrix(W) : GrpMat -&gt; AlgMatElt
5<->CoxeterGraph(W) <->text1124.htm#12590<->CoxeterGraph(W) : GrpMat -&gt; GrphUnd
5<->CartanMatrix(W) <->text1124.htm#12591<->CartanMatrix(W) : GrpMat -&gt; AlgMatElt
5<->DynkinDigraph(W) <->text1124.htm#12592<->DynkinDigraph(W) : GrpMat -&gt; GrphDir
5<->NumberOfGenerators :: Rank(W) <->text1124.htm#12593<->NumberOfGenerators :: Rank(W) : GrpMat -&gt; RngIntElt
5<->Rank(W) <->text1124.htm#12593<->Rank(W) : GrpMat -&gt; RngIntElt
4<->GrpRfl_RankDimension (Example H105E17)<->text1124.htm#12594<->GrpRfl_RankDimension (Example H105E17)
4<->Example-RankDimension :<->text1124.htm#12594<->Example-RankDimension :: GrpRfl_RankDimension (Example H105E17)
5<->FundamentalGroup(W) <->text1124.htm#12595<->FundamentalGroup(W) : GrpMat -&gt; GrpAb
5<->IsogenyGroup(W) <->text1124.htm#12596<->IsogenyGroup(W) : GrpMat -&gt; GrpAb, Map
5<->CoisogenyGroup(W) <->text1124.htm#12597<->CoisogenyGroup(W) : GrpMat -&gt; GrpAb, Map
5<->BasicDegrees(W) <->text1124.htm#12598<->BasicDegrees(W) : GrpMat -&gt; RngIntElt
5<->BasicCodegrees(W) <->text1124.htm#12599<->BasicCodegrees(W) : GrpMat -&gt; RngIntElt
4<->GrpRfl_BasicDegrees (Example H105E18)<->text1124.htm#12600<->GrpRfl_BasicDegrees (Example H105E18)
4<->Example-BasicDegrees :<->text1124.htm#12600<->Example-BasicDegrees :: GrpRfl_BasicDegrees (Example H105E18)
5<->LongestElement(W) <->text1124.htm#12601<->LongestElement(W) : GrpMat -&gt; SeqEnum
5<->CoxeterElement(W) <->text1124.htm#12602<->CoxeterElement(W) : GrpMat -&gt; SeqEnum
5<->CoxeterNumber(W) <->text1124.htm#12603<->CoxeterNumber(W) : GrpMat -&gt; SeqEnum
4<->GrpRfl_Operations (Example H105E19)<->text1124.htm#12604<->GrpRfl_Operations (Example H105E19)
4<->Example-Operations :<->text1124.htm#12604<->Example-Operations :: GrpRfl_Operations (Example H105E19)
5<->LeftDescentSet(W, w) <->text1124.htm#12605<->LeftDescentSet(W, w) : GrpMat, GrpMatElt -&gt;()
5<->RightDescentSet(W, w) <->text1124.htm#12606<->RightDescentSet(W, w) : GrpMat, GrpMatElt -&gt;()
4<->GrpRfl_DescentSets (Example H105E20)<->text1124.htm#12607<->GrpRfl_DescentSets (Example H105E20)
4<->Example-DescentSets :<->text1124.htm#12607<->Example-DescentSets :: GrpRfl_DescentSets (Example H105E20)
3<->operations :<->text1124.htm<->operations :: Operations on Reflection  Groups (REFLECTION GROUPS)
3<->properties :<->text1125.htm<->properties :: Properties of Reflection  Groups (REFLECTION GROUPS)
5<->IsReflectionGroup(G) <->text1125.htm#12609<->IsReflectionGroup(G) : GrpMat -&gt; BoolElt
5<->RootsAndCoroots(G) <->text1125.htm#12610<->RootsAndCoroots(G) : GrpMat -&gt; [RngIntElt], [ModTupRngElt], [ModTupRngElt]
5<->IsRealReflectionGroup(G) <->text1125.htm#12611<->IsRealReflectionGroup(G) : GrpMat -&gt; BoolElt, [], []
4<->GrpRfl_IsReflectionGroup (Example H105E21)<->text1125.htm#12612<->GrpRfl_IsReflectionGroup (Example H105E21)
4<->Example-IsReflectionGroup :<->text1125.htm#12612<->Example-IsReflectionGroup :: GrpRfl_IsReflectionGroup (Example H105E21)
5<->IsCrystallographic(W) <->text1125.htm#12613<->IsCrystallographic(W) : GrpMat -&gt; BoolElt
5<->IsSimplyLaced(W) <->text1125.htm#12614<->IsSimplyLaced(W) : GrpMat -&gt; BoolElt
4<->GrpRfl_Properties (Example H105E22)<->text1125.htm#12615<->GrpRfl_Properties (Example H105E22)
4<->Example-Properties :<->text1125.htm#12615<->Example-Properties :: GrpRfl_Properties (Example H105E22)
5<->Dual(G) <->text1125.htm#12616<->Dual(G) : GrpMat -&gt; BoolElt
5<->Overgroup(H) <->text1125.htm#12617<->Overgroup(H) : GrpMat -&gt; GrpMat
5<->Overdatum(H) <->text1125.htm#12618<->Overdatum(H) : GrpMat -&gt; RootDtm
5<->StandardAction(W) <->text1125.htm#12619<->StandardAction(W) : GrpMat -&gt; Map
5<->StandardActionGroup(W) <->text1125.htm#12620<->StandardActionGroup(W) : GrpMat -&gt; GrpPerm, Map
3<->properties :<->text1125.htm<->properties :: Properties of Reflection  Groups (REFLECTION GROUPS)
3<->action :<->text1126.htm<->action :: Roots, Coroots and Reflections (REFLECTION GROUPS)
3<->access :<->text1126.htm#12622<->access :: Accessing Roots and Coroots (REFLECTION GROUPS)
5<->CorootSpace :: RootSpace(W) <->text1126.htm#12623<->CorootSpace :: RootSpace(W) : GrpMat -&gt; Lat
5<->RootSpace(W) <->text1126.htm#12623<->RootSpace(W) : GrpMat -&gt; Lat
4<->GrpRfl_RootSpace (Example H105E23)<->text1126.htm#12624<->GrpRfl_RootSpace (Example H105E23)
4<->Example-RootSpace :<->text1126.htm#12624<->Example-RootSpace :: GrpRfl_RootSpace (Example H105E23)
5<->SimpleOrders(W) <->text1126.htm#12625<->SimpleOrders(W) : GrpMat -&gt; [RngIntElt]
5<->SimpleCoroots :: SimpleRoots(W) <->text1126.htm#12626<->SimpleCoroots :: SimpleRoots(W) : GrpMat -&gt; Mtrx
5<->SimpleRoots(W) <->text1126.htm#12626<->SimpleRoots(W) : GrpMat -&gt; Mtrx
5<->NumPosRoots :: NumberOfPositiveRoots(W) <->text1126.htm#12627<->NumPosRoots :: NumberOfPositiveRoots(W) : GrpMat -&gt; RngIntElt
5<->NumberOfPositiveRoots(W) <->text1126.htm#12627<->NumberOfPositiveRoots(W) : GrpMat -&gt; RngIntElt
5<->Coroots :: Roots(W) <->text1126.htm#12628<->Coroots :: Roots(W) : GrpMat -&gt; (@@)
5<->Roots(W) <->text1126.htm#12628<->Roots(W) : GrpMat -&gt; (@@)
5<->PositiveCoroots :: PositiveRoots(W) <->text1126.htm#12629<->PositiveCoroots :: PositiveRoots(W) : GrpMat -&gt; (@@)
5<->PositiveRoots(W) <->text1126.htm#12629<->PositiveRoots(W) : GrpMat -&gt; (@@)
5<->Coroot :: Root(W, r) <->text1126.htm#12630<->Coroot :: Root(W, r) : GrpMat, RngIntElt -&gt; (@@)
5<->Root(W, r) <->text1126.htm#12630<->Root(W, r) : GrpMat, RngIntElt -&gt; (@@)
5<->CorootPosition :: RootPosition(W, v) <->text1126.htm#12631<->CorootPosition :: RootPosition(W, v) : GrpMat, . -&gt; (@@)
5<->RootPosition(W, v) <->text1126.htm#12631<->RootPosition(W, v) : GrpMat, . -&gt; (@@)
4<->GrpRfl_RootsCoroots (Example H105E24)<->text1126.htm#12632<->GrpRfl_RootsCoroots (Example H105E24)
4<->Example-RootsCoroots :<->text1126.htm#12632<->Example-RootsCoroots :: GrpRfl_RootsCoroots (Example H105E24)
3<->access :<->text1126.htm#12622<->access :: Accessing Roots and Coroots (REFLECTION GROUPS)
3<->rootrefl :<->text1126.htm#12633<->rootrefl :: Reflections (REFLECTION GROUPS)
5<->CoreflectionMatrices :: ReflectionMatrices(W) <->text1126.htm#12634<->CoreflectionMatrices :: ReflectionMatrices(W) : GrpMat -&gt; [AlgMatElt]
5<->ReflectionMatrices(W) <->text1126.htm#12634<->ReflectionMatrices(W) : GrpMat -&gt; [AlgMatElt]
5<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(W) <->text1126.htm#12635<->SimpleCoreflectionMatrices :: SimpleReflectionMatrices(W) : GrpMat -&gt; [AlgMatElt]
5<->SimpleReflectionMatrices(W) <->text1126.htm#12635<->SimpleReflectionMatrices(W) : GrpMat -&gt; [AlgMatElt]
5<->CoreflectionMatrix :: ReflectionMatrix(W, r) <->text1126.htm#12636<->CoreflectionMatrix :: ReflectionMatrix(W, r) : GrpMat, RngIntElt -&gt; AlgMatElt
5<->ReflectionMatrix(W, r) <->text1126.htm#12636<->ReflectionMatrix(W, r) : GrpMat, RngIntElt -&gt; AlgMatElt
5<->SimpleReflectionPermutations(W) <->text1126.htm#12637<->SimpleReflectionPermutations(W) : GrpMat -&gt; []
5<->ReflectionPermutations(W) <->text1126.htm#12638<->ReflectionPermutations(W) : GrpMat -&gt; []
5<->ReflectionPermutation(W, r) <->text1126.htm#12639<->ReflectionPermutation(W, r) : GrpMat, RngIntElt -&gt; []
5<->ReflectionWords(W) <->text1126.htm#12640<->ReflectionWords(W) : GrpMat -&gt; []
5<->ReflectionWord(W, r) <->text1126.htm#12641<->ReflectionWord(W, r) : GrpMat, RngIntElt -&gt; []
4<->GrpRfl_Action (Example H105E25)<->text1126.htm#12642<->GrpRfl_Action (Example H105E25)
4<->Example-Action :<->text1126.htm#12642<->Example-Action :: GrpRfl_Action (Example H105E25)
5<->CoxeterLength :: Length(w) <->text1126.htm#12643<->CoxeterLength :: Length(w) : GrpMatElt -&gt; RngIntElt
5<->Length(w) <->text1126.htm#12643<->Length(w) : GrpMatElt -&gt; RngIntElt
3<->rootrefl :<->text1126.htm#12633<->rootrefl :: Reflections (REFLECTION GROUPS)
3<->weights :<->text1126.htm#12644<->weights :: Weights (REFLECTION GROUPS)
5<->CoweightLattice :: WeightLattice(W) <->text1126.htm#12645<->CoweightLattice :: WeightLattice(W) : GrpMat -&gt; Lat
5<->WeightLattice(W) <->text1126.htm#12645<->WeightLattice(W) : GrpMat -&gt; Lat
5<->FundamentalCoweights :: FundamentalWeights(W) <->text1126.htm#12646<->FundamentalCoweights :: FundamentalWeights(W) : GrpMat -&gt; Mtrx
5<->FundamentalWeights(W) <->text1126.htm#12646<->FundamentalWeights(W) : GrpMat -&gt; Mtrx
4<->GrpRfl_Weights (Example H105E26)<->text1126.htm#12647<->GrpRfl_Weights (Example H105E26)
4<->Example-Weights :<->text1126.htm#12647<->Example-Weights :: GrpRfl_Weights (Example H105E26)
5<->IsDominant(R, v) <->text1126.htm#12648<->IsDominant(R, v) : RootDtm, . -&gt; ModTupFldElt, GrpFPCoxElt
5<->DominantWeight(W, v) <->text1126.htm#12649<->DominantWeight(W, v) : GrpMat, . -&gt; ModTupFldElt, GrpFPCoxElt
5<->WeightOrbit(W, v) <->text1126.htm#12650<->WeightOrbit(W, v) : GrpMat, . -&gt; @ ModTupFldElt @, [GrpFPCoxElt]
4<->GrpRfl_DominantWeights (Example H105E27)<->text1126.htm#12651<->GrpRfl_DominantWeights (Example H105E27)
4<->Example-DominantWeights :<->text1126.htm#12651<->Example-DominantWeights :: GrpRfl_DominantWeights (Example H105E27)
3<->weights :<->text1126.htm#12644<->weights :: Weights (REFLECTION GROUPS)
3<->action :<->text1126.htm<->action :: Roots, Coroots and Reflections (REFLECTION GROUPS)
3<->related :<->text1127.htm<->related :: Related Structures (REFLECTION GROUPS)
5<->CoxeterGroup(GrpFPCox, W) <->text1127.htm#12653<->CoxeterGroup(GrpFPCox, W) : Cat, GrpMat -&gt; GrpPermCox
5<->CoxeterGroup(GrpPermCox, W) <->text1127.htm#12654<->CoxeterGroup(GrpPermCox, W) : Cat, GrpMat -&gt; GrpPermCox
5<->LieAlgebra(W, R) <->text1127.htm#12655<->LieAlgebra(W, R) : GrpMat, Rng -&gt; AlgLie
5<->GroupOfLieType(W, k) <->text1127.htm#12656<->GroupOfLieType(W, k) : GrpMat, Rng -&gt; GrpLie
3<->related :<->text1127.htm<->related :: Related Structures (REFLECTION GROUPS)
3<->fiurg :<->text1118.htm<->fiurg :: REFLECTION GROUPS
3<->lie_alg :<->text1130.htm<->lie_alg :: LIE ALGEBRAS
3<->Lie algebra :<->text1131.htm<->Lie algebra :: Introduction (LIE ALGEBRAS)
3<->introduction :<->text1131.htm<->introduction :: Introduction (LIE ALGEBRAS)
3<->introduction-guide :<->text1131.htm#12661<->introduction-guide :: Guide for the Reader (LIE ALGEBRAS)
3<->introduction :<->text1131.htm<->introduction :: Introduction (LIE ALGEBRAS)
3<->Lie algebra!structure constant :<->text1132.htm<->Lie algebra!structure constant :: Constructors for Lie Algebras (LIE ALGEBRAS)
3<->construct :<->text1132.htm<->construct :: Constructors for Lie Algebras (LIE ALGEBRAS)
5<->LieAlgebra <->text1132.htm#12663<->LieAlgebra<M | Q : \parameters > : ModTupRng, SeqEnum -> AlgLie
5<->LieAlgebra<R, n | Q : parameters > <->text1132.htm#12663<->LieAlgebra&lt;R, n | Q : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgLie
5<->LieAlgebra<R, n | T : parameters > <->text1132.htm#12664<->LieAlgebra&lt;R, n | T : parameters &gt; : Rng, RngIntElt, SeqEnum -&gt; AlgLie
5<->LieAlgebra< t | T : parameters > <->text1132.htm#12665<->LieAlgebra&lt; t | T : parameters &gt; : SeqEnum, SeqEnum -&gt; AlgLie
5<->LieAlgebra(A) <->text1132.htm#12666<->LieAlgebra(A) : AlgAss -&gt; AlgLie, Map
5<->LieAlgebra(A) <->text1132.htm#12667<->LieAlgebra(A) : AlgMat -&gt; AlgLie
5<->AbelianLieAlgebra(R, n) <->text1132.htm#12668<->AbelianLieAlgebra(R, n) : Rng, RngIntElt -&gt; AlgLie
4<->AlgLie_LieAlgebraCons (Example H106E1)<->text1132.htm#12669<->AlgLie_LieAlgebraCons (Example H106E1)
4<->Example-LieAlgebraCons :<->text1132.htm#12669<->Example-LieAlgebraCons :: AlgLie_LieAlgebraCons (Example H106E1)
5<->ChangeBasis(L, B) <->text1132.htm#12670<->ChangeBasis(L, B) : AlgLie, [ModTupFldElt] -> AlgLie
5<->ChangeBasis(L, B) <->text1132.htm#12670<->ChangeBasis(L, B) : AlgLie, Mtrx -> AlgLie
5<->ChangeBasis(L, B) <->text1132.htm#12670<->ChangeBasis(L, B) : AlgLie, [AlgLieElt] -&gt; AlgLie
5<->MatrixLieAlgebra(R, n) <->text1132.htm#12671<->MatrixLieAlgebra(R, n) : Rng, RngIntElt -&gt; AlgMatLie
5<->MatrixLieAlgebra(A) <->text1132.htm#12672<->MatrixLieAlgebra(A) : AlgMat -&gt; AlgMatLie
5<->LieAlgebra :: Algebra(M) <->text1132.htm#12673<->LieAlgebra :: Algebra(M) : AlgMatLie -&gt; AlgLie, Map
5<->Algebra(M) <->text1132.htm#12673<->Algebra(M) : AlgMatLie -&gt; AlgLie, Map
4<->AlgLie_MatrixLieAlgebra (Example H106E2)<->text1132.htm#12674<->AlgLie_MatrixLieAlgebra (Example H106E2)
4<->Example-MatrixLieAlgebra :<->text1132.htm#12674<->Example-MatrixLieAlgebra :: AlgLie_MatrixLieAlgebra (Example H106E2)
3<->construct :<->text1132.htm<->construct :: Constructors for Lie Algebras (LIE ALGEBRAS)
3<->fp-construct :<->text1133.htm<->fp-construct :: Finitely Presented Lie Algebras (LIE ALGEBRAS)
3<->construct :<->text1133.htm#12676<->construct :: Construction of the Free Lie Algebra (LIE ALGEBRAS)
5<->FreeLieAlgebra(F, n) <->text1133.htm#12677<->FreeLieAlgebra(F, n) : Rng, RngIntElt -&gt; AlgFPLie
4<->AlgLie_FreeLie (Example H106E3)<->text1133.htm#12678<->AlgLie_FreeLie (Example H106E3)
4<->Example-FreeLie :<->text1133.htm#12678<->Example-FreeLie :: AlgLie_FreeLie (Example H106E3)
3<->construct :<->text1133.htm#12676<->construct :: Construction of the Free Lie Algebra (LIE ALGEBRAS)
3<->properties :<->text1133.htm#12679<->properties :: Properties of the Free Lie Algebra (LIE ALGEBRAS)
5<->Rank(L) <->text1133.htm#12680<->Rank(L) : AlgFPLie -&gt; RngIntElt
5<->BaseRing :: CoefficientRing(L) <->text1133.htm#12681<->BaseRing :: CoefficientRing(L) : AlgFPLie -&gt; Rng
5<->CoefficientRing(L) <->text1133.htm#12681<->CoefficientRing(L) : AlgFPLie -&gt; Rng
3<->properties :<->text1133.htm#12679<->properties :: Properties of the Free Lie Algebra (LIE ALGEBRAS)
3<->elements :<->text1133.htm#12682<->elements :: Operations on Elements of the Free Lie Algebra (LIE ALGEBRAS)
5<->Zero :: L ! 0 <->text1133.htm#12683<->Zero :: L ! 0 : AlgFPLie, RngIntElt -&gt; AlgFPLieElt
5<->L ! 0 <->text1133.htm#12683<->L ! 0 : AlgFPLie, RngIntElt -&gt; AlgFPLieElt
4<->AlgLie_FreeLieAlgebra (Example H106E4)<->text1133.htm#12684<->AlgLie_FreeLieAlgebra (Example H106E4)
4<->Example-FreeLieAlgebra :<->text1133.htm#12684<->Example-FreeLieAlgebra :: AlgLie_FreeLieAlgebra (Example H106E4)
5<->IsLeaf(m) <->text1133.htm#12685<->IsLeaf(m) : AlgFPLieElt -&gt; BoolElt, AlgFPLieElt, AlgFPLieElt
4<->AlgLie_IsLeaf (Example H106E5)<->text1133.htm#12686<->AlgLie_IsLeaf (Example H106E5)
4<->Example-IsLeaf :<->text1133.htm#12686<->Example-IsLeaf :: AlgLie_IsLeaf (Example H106E5)
3<->elements :<->text1133.htm#12682<->elements :: Operations on Elements of the Free Lie Algebra (LIE ALGEBRAS)
3<->fp-construct :<->text1133.htm#12687<->fp-construct :: Construction of a Finitely- Presented Lie Algebra (LIE ALGEBRAS)
5<->LieAlgebra(R) <->text1133.htm#12688<->LieAlgebra(R) : \lbrace AlgFPLieElt \rbrace -> AlgLie, SeqEnum, SeqEnum, Map
5<->LieAlgebra(R) <->text1133.htm#12688<->LieAlgebra(R) : [ AlgFPLieElt ] -&gt; AlgLie, SeqEnum, SeqEnum, Map
4<->AlgLie_LieAlgebra (Example H106E6)<->text1133.htm#12689<->AlgLie_LieAlgebra (Example H106E6)
4<->Example-LieAlgebra :<->text1133.htm#12689<->Example-LieAlgebra :: AlgLie_LieAlgebra (Example H106E6)
4<->AlgLie_LieRing (Example H106E7)<->text1133.htm#12690<->AlgLie_LieRing (Example H106E7)
4<->Example-LieRing :<->text1133.htm#12690<->Example-LieRing :: AlgLie_LieRing (Example H106E7)
5<->quo <->text1133.htm#12691<->quo<L | R> : AlgFPLie, \lbrace AlgFPLieElt \rbrace -> AlgLie, Map
5<->quo<L | R> <->text1133.htm#12691<->quo&lt;L | R&gt; : AlgFPLie, [ AlgFPLieElt ] -&gt; AlgLie, Map
4<->AlgLie_QuoAlgFPLie (Example H106E8)<->text1133.htm#12692<->AlgLie_QuoAlgFPLie (Example H106E8)
4<->Example-QuoAlgFPLie :<->text1133.htm#12692<->Example-QuoAlgFPLie :: AlgLie_QuoAlgFPLie (Example H106E8)
5<->NilpotentQuotient(R, d) <->text1133.htm#12693<->NilpotentQuotient(R, d) : \lbrace AlgFPLieElt, RngIntElt \rbrace -> AlgLie, SeqEnum, SeqEnum, UserProgram
5<->NilpotentQuotient(R, d) <->text1133.htm#12693<->NilpotentQuotient(R, d) : [ AlgFPLieElt ], RngIntElt -&gt; AlgLie, SeqEnum, SeqEnum, UserProgram
4<->AlgLie_NilpotentQuotient (Example H106E9)<->text1133.htm#12694<->AlgLie_NilpotentQuotient (Example H106E9)
4<->Example-NilpotentQuotient :<->text1133.htm#12694<->Example-NilpotentQuotient :: AlgLie_NilpotentQuotient (Example H106E9)
3<->fp-construct :<->text1133.htm#12687<->fp-construct :: Construction of a Finitely- Presented Lie Algebra (LIE ALGEBRAS)
3<->fp-hom :<->text1133.htm#12695<->fp-hom :: Homomorphisms of the Free Lie Algebra (LIE ALGEBRAS)
5<->hom <->text1133.htm#12696<->hom<L \ar M | Q> : AlgFPLie, TupMod, [ TupModElt ] -> Map
5<->hom<L -> M | Q> <->text1133.htm#12696<->hom&lt;L -&gt; M | Q&gt; : AlgFPLie, AlgFPLie, [ AlgFPLieElt ] -&gt; Map
4<->AlgLie_AlgFPLHom (Example H106E10)<->text1133.htm#12697<->AlgLie_AlgFPLHom (Example H106E10)
4<->Example-AlgFPLHom :<->text1133.htm#12697<->Example-AlgFPLHom :: AlgLie_AlgFPLHom (Example H106E10)
3<->fp-hom :<->text1133.htm#12695<->fp-hom :: Homomorphisms of the Free Lie Algebra (LIE ALGEBRAS)
3<->fp-construct :<->text1133.htm<->fp-construct :: Finitely Presented Lie Algebras (LIE ALGEBRAS)
3<->AlgLieExtr :<->text1134.htm<->AlgLieExtr :: Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->alglieextr :<->text1134.htm<->alglieextr :: Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->alglieextr-construct :<->text1134.htm#12699<->alglieextr-construct :: Constructing Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
5<->ExtremalLieAlgebra(K, n) <->text1134.htm#12700<->ExtremalLieAlgebra(K, n) : Rng, RngIntElt -&gt; AlgLieExtr
5<->ExtremalLieAlgebra(K, G) <->text1134.htm#12701<->ExtremalLieAlgebra(K, G) : Rng, GrphUnd -&gt; AlgLieExtr
3<->alglieextr-construct :<->text1134.htm#12699<->alglieextr-construct :: Constructing Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->alglieextr-properties :<->text1134.htm#12702<->alglieextr-properties :: Properties of Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
5<->Ngens :: NumberOfGenerators(L) <->text1134.htm#12703<->Ngens :: NumberOfGenerators(L) : AlgLieExtr -&gt; RngIntElt
5<->NumberOfGenerators(L) <->text1134.htm#12703<->NumberOfGenerators(L) : AlgLieExtr -&gt; RngIntElt
5<->BaseRing :: CoefficientRing(L) <->text1134.htm#12704<->BaseRing :: CoefficientRing(L) : AlgLieExtr -&gt; Rng
5<->CoefficientRing(L) <->text1134.htm#12704<->CoefficientRing(L) : AlgLieExtr -&gt; Rng
5<->CommutatorGraph(L) <->text1134.htm#12705<->CommutatorGraph(L) : AlgLieExtr -&gt; GrphUnd
4<->AlgLie_AlgLieExtrConstr (Example H106E11)<->text1134.htm#12706<->AlgLie_AlgLieExtrConstr (Example H106E11)
4<->Example-AlgLieExtrConstr :<->text1134.htm#12706<->Example-AlgLieExtrConstr :: AlgLie_AlgLieExtrConstr (Example H106E11)
5<->Basis(L) <->text1134.htm#12707<->Basis(L) : AlgLieExtr -&gt; SeqEnum[AlgFPLieElt], SeqEnum[UserProgram]
5<->ZBasis(L) <->text1134.htm#12708<->ZBasis(L) : AlgLieExtr -&gt; SeqEnum[AlgFPLieElt], SeqEnum[RngIntElt], SeqEnum[AlgFPLieElt]
5<->Dimension(L) <->text1134.htm#12709<->Dimension(L) : AlgLieExtr -&gt; RngIntElt
4<->AlgLie_AlgLieExtrBasis (Example H106E12)<->text1134.htm#12710<->AlgLie_AlgLieExtrBasis (Example H106E12)
4<->Example-AlgLieExtrBasis :<->text1134.htm#12710<->Example-AlgLieExtrBasis :: AlgLie_AlgLieExtrBasis (Example H106E12)
5<->MultiplicationTable(~L) <->text1134.htm#12711<->MultiplicationTable(~L) : AlgLieExtr -&gt;
5<->MultiplicationTable(L) <->text1134.htm#12712<->MultiplicationTable(L) : AlgLieExtr -&gt; SeqEnum
4<->AlgLie_AlgLieExtrMultTable (Example H106E13)<->text1134.htm#12713<->AlgLie_AlgLieExtrMultTable (Example H106E13)
4<->Example-AlgLieExtrMultTable :<->text1134.htm#12713<->Example-AlgLieExtrMultTable :: AlgLie_AlgLieExtrMultTable (Example H106E13)
3<->alglieextr-properties :<->text1134.htm#12702<->alglieextr-properties :: Properties of Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->alglieextr-instances :<->text1134.htm#12714<->alglieextr-instances :: Instances of Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
5<->Instance(L) <->text1134.htm#12715<->Instance(L) : AlgLieExtr -&gt; AlgLie
5<->Instance(L, Q) <->text1134.htm#12716<->Instance(L, Q) : AlgLieExtr, SeqEnum -&gt; AlgLie, Map
4<->AlgLie_AlgLieExtrMultInstance (Example H106E14)<->text1134.htm#12717<->AlgLie_AlgLieExtrMultInstance (Example H106E14)
4<->Example-AlgLieExtrMultInstance :<->text1134.htm#12717<->Example-AlgLieExtrMultInstance :: AlgLie_AlgLieExtrMultInstance (Example H106E14)
3<->alglieextr-instances :<->text1134.htm#12714<->alglieextr-instances :: Instances of Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->alglieextr-variety :<->text1134.htm#12718<->alglieextr-variety :: Studying the Parameter Space (LIE ALGEBRAS)
5<->FreefValues(L) <->text1134.htm#12719<->FreefValues(L) : AlgLieExtr -&gt; SeqEnum, SeqEnum
5<->fValue(L, x, b) <->text1134.htm#12720<->fValue(L, x, b) : AlgLieExtr, RngIntElt, RngIntElt -&gt; RngElt
5<->fValueProof(L, x, b) <->text1134.htm#12721<->fValueProof(L, x, b) : AlgLieExtr, RngIntElt, RngIntElt -&gt;
4<->AlgLie_AlgLieExtrfVal (Example H106E15)<->text1134.htm#12722<->AlgLie_AlgLieExtrfVal (Example H106E15)
4<->Example-AlgLieExtrfVal :<->text1134.htm#12722<->Example-AlgLieExtrfVal :: AlgLie_AlgLieExtrfVal (Example H106E15)
5<->DimensionsEstimate(L, g) <->text1134.htm#12723<->DimensionsEstimate(L, g) : AlgLieExtr, UserProgram -&gt; SeqEnum, SetMulti
5<->InstancesForDimensions(L, g, D) <->text1134.htm#12724<->InstancesForDimensions(L, g, D) : AlgLieExtr, UserProgram, SetEnum[RngIntElt] -&gt; Assoc
4<->AlgLie_AlgLieExtrVarietyDims (Example H106E16)<->text1134.htm#12725<->AlgLie_AlgLieExtrVarietyDims (Example H106E16)
4<->Example-AlgLieExtrVarietyDims :<->text1134.htm#12725<->Example-AlgLieExtrVarietyDims :: AlgLie_AlgLieExtrVarietyDims (Example H106E16)
3<->alglieextr-variety :<->text1134.htm#12718<->alglieextr-variety :: Studying the Parameter Space (LIE ALGEBRAS)
3<->alglieextr :<->text1134.htm<->alglieextr :: Lie Algebras Generated by Extremal Elements (LIE ALGEBRAS)
3<->Lie algebra!reductive :<->text1135.htm<->Lie algebra!reductive :: Families of Lie Algebras (LIE ALGEBRAS)
3<->Lie algebra!semisimple :<->text1135.htm<->Lie algebra!semisimple :: Families of Lie Algebras (LIE ALGEBRAS)
3<->family-construct :<->text1135.htm<->family-construct :: Families of Lie Algebras (LIE ALGEBRAS)
3<->reductive-construct :<->text1135.htm#12727<->reductive-construct :: Almost Reductive Lie Algebras (LIE ALGEBRAS)
5<->LieAlgebra(R, k) <->text1135.htm#12728<->LieAlgebra(R, k) : RootDtm, Rng -> AlgLie
5<->LieAlgebra(R, k) <->text1135.htm#12728<->LieAlgebra(R, k) : RootSys, Rng -> AlgLie
5<->LieAlgebra(D, k) <->text1135.htm#12728<->LieAlgebra(D, k) : GrphDir, Rng -> AlgLie
5<->LieAlgebra(C, k) <->text1135.htm#12728<->LieAlgebra(C, k) : AlgMatElt, Rng -> AlgLie
5<->LieAlgebra(T, k) <->text1135.htm#12728<->LieAlgebra(T, k) : MonStgElt, Rng -&gt; AlgLie
5<->MatrixLieAlgebra(R, k) <->text1135.htm#12729<->MatrixLieAlgebra(R, k) : RootDtm, Rng -> AlgLie
5<->MatrixLieAlgebra(R, k) <->text1135.htm#12729<->MatrixLieAlgebra(R, k) : RootSys, Rng -> AlgLie
5<->MatrixLieAlgebra(D, k) <->text1135.htm#12729<->MatrixLieAlgebra(D, k) : GrphDir, Rng -> AlgLie
5<->MatrixLieAlgebra(C, k) <->text1135.htm#12729<->MatrixLieAlgebra(C, k) : AlgMatElt, Rng -> AlgLie
5<->MatrixLieAlgebra(T, k) <->text1135.htm#12729<->MatrixLieAlgebra(T, k) : MonStgElt, Rng -&gt; AlgLie
4<->AlgLie_ReductiveLieAlgebra (Example H106E17)<->text1135.htm#12730<->AlgLie_ReductiveLieAlgebra (Example H106E17)
4<->Example-ReductiveLieAlgebra :<->text1135.htm#12730<->Example-ReductiveLieAlgebra :: AlgLie_ReductiveLieAlgebra (Example H106E17)
4<->AlgLie_LieAlgebraIsogeny (Example H106E18)<->text1135.htm#12731<->AlgLie_LieAlgebraIsogeny (Example H106E18)
4<->Example-LieAlgebraIsogeny :<->text1135.htm#12731<->Example-LieAlgebraIsogeny :: AlgLie_LieAlgebraIsogeny (Example H106E18)
5<->LieAlgebra(R, k, p) <->text1135.htm#12732<->LieAlgebra(R, k, p) : RootDtm, Rng, GrpPermElt -> AlgLie
5<->LieAlgebra(N, k, p) <->text1135.htm#12732<->LieAlgebra(N, k, p) : MonStgElt, Rng, GrpPermElt -&gt; AlgLie
5<->TwistedLieAlgebra(R, k) <->text1135.htm#12733<->TwistedLieAlgebra(R, k) : RootDtm, Rng -&gt; AlgLie
4<->AlgLie_TwistedLieAlgebra (Example H106E19)<->text1135.htm#12734<->AlgLie_TwistedLieAlgebra (Example H106E19)
4<->Example-TwistedLieAlgebra :<->text1135.htm#12734<->Example-TwistedLieAlgebra :: AlgLie_TwistedLieAlgebra (Example H106E19)
3<->reductive-construct :<->text1135.htm#12727<->reductive-construct :: Almost Reductive Lie Algebras (LIE ALGEBRAS)
3<->Lie algebra!Cartan-type :<->text1135.htm#12735<->Lie algebra!Cartan-type :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Cartan-type Lie algebra :<->text1135.htm#12735<->Cartan-type Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Lie algebra!Melikian :<->text1135.htm#12735<->Lie algebra!Melikian :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Melikian Lie algebra :<->text1135.htm#12735<->Melikian Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Witt algebra :<->text1135.htm#12735<->Witt algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Lie algebra!Witt algebra :<->text1135.htm#12735<->Lie algebra!Witt algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Special Lie algebra :<->text1135.htm#12735<->Special Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Conformal special Lie algebra :<->text1135.htm#12735<->Conformal special Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Special Lie algebra!conformal :<->text1135.htm#12735<->Special Lie algebra!conformal :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Hamiltonian Lie algebra :<->text1135.htm#12735<->Hamiltonian Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Conformal Hamiltonian Lie algebra :<->text1135.htm#12735<->Conformal Hamiltonian Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Hamiltonian Lie algebra!conformal :<->text1135.htm#12735<->Hamiltonian Lie algebra!conformal :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Contact Lie algebra :<->text1135.htm#12735<->Contact Lie algebra :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->Lie algebra!Contact :<->text1135.htm#12735<->Lie algebra!Contact :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->introduction :<->text1135.htm#12735<->introduction :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
5<->WittLieAlgebra(F, m, n) <->text1135.htm#12736<->WittLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, Map
4<->AlgLie_witt-alg-ex (Example H106E20)<->text1135.htm#12737<->AlgLie_witt-alg-ex (Example H106E20)
4<->Example-witt-alg-ex :<->text1135.htm#12737<->Example-witt-alg-ex :: AlgLie_witt-alg-ex (Example H106E20)
5<->ConformalSpecialLieAlgebra :: SpecialLieAlgebra(F, m, n) <->text1135.htm#12738<->ConformalSpecialLieAlgebra :: SpecialLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie, Map, Map
5<->SpecialLieAlgebra(F, m, n) <->text1135.htm#12738<->SpecialLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie, Map, Map
4<->AlgLie_special-lie-alg-ex (Example H106E21)<->text1135.htm#12739<->AlgLie_special-lie-alg-ex (Example H106E21)
4<->Example-special-lie-alg-ex :<->text1135.htm#12739<->Example-special-lie-alg-ex :: AlgLie_special-lie-alg-ex (Example H106E21)
5<->ConformalHamiltonianLieAlgebra :: HamiltonianLieAlgebra(F, m, n) <->text1135.htm#12740<->ConformalHamiltonianLieAlgebra :: HamiltonianLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie
5<->HamiltonianLieAlgebra(F, m, n) <->text1135.htm#12740<->HamiltonianLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie
4<->AlgLie_hamilton-alg-ex (Example H106E22)<->text1135.htm#12741<->AlgLie_hamilton-alg-ex (Example H106E22)
4<->Example-hamilton-alg-ex :<->text1135.htm#12741<->Example-hamilton-alg-ex :: AlgLie_hamilton-alg-ex (Example H106E22)
5<->ContactLieAlgebra(F, m, n) <->text1135.htm#12742<->ContactLieAlgebra(F, m, n) : Fld, RngIntElt, SeqEnum[RngIntElt] -&gt; AlgLie, AlgLie
4<->AlgLie_contact-alg-ex (Example H106E23)<->text1135.htm#12743<->AlgLie_contact-alg-ex (Example H106E23)
4<->Example-contact-alg-ex :<->text1135.htm#12743<->Example-contact-alg-ex :: AlgLie_contact-alg-ex (Example H106E23)
3<->introduction :<->text1135.htm#12735<->introduction :: Cartan-Type Lie Algebras (LIE ALGEBRAS)
3<->introduction :<->text1135.htm#12744<->introduction :: Melikian Lie Algebras (LIE ALGEBRAS)
5<->MelikianLieAlgebra(F, n1, n2) <->text1135.htm#12745<->MelikianLieAlgebra(F, n1, n2) : Fld, RngIntElt, RngIntElt -&gt; AlgLie, Map
4<->AlgLie_melikian-alg-ex (Example H106E24)<->text1135.htm#12746<->AlgLie_melikian-alg-ex (Example H106E24)
4<->Example-melikian-alg-ex :<->text1135.htm#12746<->Example-melikian-alg-ex :: AlgLie_melikian-alg-ex (Example H106E24)
3<->introduction :<->text1135.htm#12744<->introduction :: Melikian Lie Algebras (LIE ALGEBRAS)
3<->family-construct :<->text1135.htm<->family-construct :: Families of Lie Algebras (LIE ALGEBRAS)
3<->element-construct :<->text1136.htm<->element-construct :: Construction of Elements (LIE ALGEBRAS)
5<->Zero(L) <->text1136.htm#12748<->Zero(L) : AlgMatLie -> AlgMatLieElt
5<->! :: Zero(L) <->text1136.htm#12748<->! :: Zero(L) : AlgLie -&gt; AlgLieElt
5<->L ! 0 : AlgMatLie, RngIntElt -> AlgMatLieElt :: Zero(L) <->text1136.htm#12748<->L ! 0 : AlgMatLie, RngIntElt -> AlgMatLieElt :: Zero(L) : AlgLie -&gt; AlgLieElt
5<->Zero(L) <->text1136.htm#12748<->Zero(L) : AlgLie -&gt; AlgLieElt
5<->Random(L) <->text1136.htm#12749<->Random(L) : AlgMatLie -> AlgMatLieElt
5<->Random(L) <->text1136.htm#12749<->Random(L) : AlgLie -&gt; AlgLieElt
3<->element-construct-sc :<->text1136.htm#12750<->element-construct-sc :: Construction of Elements of Structure Constant Algebras (LIE ALGEBRAS)
5<->elt<L | r1, r2, ..., rn> <->text1136.htm#12751<->elt&lt;L | r<sub>1</sub>, r<sub>2</sub>, ..., r<sub>n</sub>&gt; : AlgLie, RngElt, RngElt, ..., RngElt -&gt; AlgLieElt
5<->L ! Q <->text1136.htm#12752<->L ! Q : AlgLie, SeqEnum[RngElt] -&gt; AlgLieElt
5<->BasisProduct(L, i, j) <->text1136.htm#12753<->BasisProduct(L, i, j) : AlgLie, RngIntElt, RngIntElt -&gt; AlgLieElt
5<->BasisProducts(L) <->text1136.htm#12754<->BasisProducts(L) : AlgLie -&gt; SeqEnum
3<->element-construct-sc :<->text1136.htm#12750<->element-construct-sc :: Construction of Elements of Structure Constant Algebras (LIE ALGEBRAS)
3<->element-construct-matrix :<->text1136.htm#12755<->element-construct-matrix :: Construction of Matrix Elements (LIE ALGEBRAS)
5<->elt <->text1136.htm#12756<->elt<R | L> : AlgMatLie, RngElt, ..., RngElt -> AlgMatLieElt
5<->! :: elt<R | L> <->text1136.htm#12756<->! :: elt&lt;R | L&gt; : AlgMatLie, [ RngElt ] -&gt; AlgMatLieElt
5<->elt<R | L> <->text1136.htm#12756<->elt&lt;R | L&gt; : AlgMatLie, [ RngElt ] -&gt; AlgMatLieElt
5<->DiagonalMatrix(L, Q) <->text1136.htm#12757<->DiagonalMatrix(L, Q) : AlgMatLie, [RngElt] -&gt; AlgMatLieElt
5<->ScalarMatrix(L, r) <->text1136.htm#12758<->ScalarMatrix(L, r) : AlgMatLie, RngElt -&gt; AlgMatLieElt
3<->element-construct-matrix :<->text1136.htm#12755<->element-construct-matrix :: Construction of Matrix Elements (LIE ALGEBRAS)
3<->element-construct :<->text1136.htm<->element-construct :: Construction of Elements (LIE ALGEBRAS)
3<->sub-construct :<->text1137.htm<->sub-construct :: Construction of Subalgebras,  Ideals and Quotients (LIE ALGEBRAS)
5<->sub <->text1137.htm#12760<->sub<L | A> : AlgMatLie, List -> AlgMatLie, Map
5<->sub<L | A> <->text1137.htm#12760<->sub&lt;L | A&gt; : AlgLie, List -&gt; AlgLie, Map
5<->ideal <->text1137.htm#12761<->ideal<L | A> : AlgMatLie, List -> AlgMatLie, Map
5<->ideal<L | A> <->text1137.htm#12761<->ideal&lt;L | A&gt; : AlgLie, List -&gt; AlgLie, Map
5<->quo <->text1137.htm#12762<->quo<L | A> : AlgMatLie, List -> AlgMatLie, Map
5<->quo<L | A> <->text1137.htm#12762<->quo&lt;L | A&gt; : AlgLie, List -&gt; AlgLie, Map
5<->L / S <->text1137.htm#12763<->L / S : AlgMatLie, AlgMatLie -> AlgLie
5<->L / S <->text1137.htm#12763<->L / S : AlgLie, AlgLie -&gt; AlgLie
4<->AlgLie_LieAlgebraQuotient (Example H106E25)<->text1137.htm#12764<->AlgLie_LieAlgebraQuotient (Example H106E25)
4<->Example-LieAlgebraQuotient :<->text1137.htm#12764<->Example-LieAlgebraQuotient :: AlgLie_LieAlgebraQuotient (Example H106E25)
5<->QuotientWithPullback(L, I) <->text1137.htm#12765<->QuotientWithPullback(L, I) : AlgLie, AlgLie -&gt; AlgLie, Map, UserProgram, UserProgram
4<->AlgLie_LieAlgebraQuotientPullback (Example H106E26)<->text1137.htm#12766<->AlgLie_LieAlgebraQuotientPullback (Example H106E26)
4<->Example-LieAlgebraQuotientPullback :<->text1137.htm#12766<->Example-LieAlgebraQuotientPullback :: AlgLie_LieAlgebraQuotientPullback (Example H106E26)
3<->sub-construct :<->text1137.htm<->sub-construct :: Construction of Subalgebras,  Ideals and Quotients (LIE ALGEBRAS)
3<->operation :<->text1138.htm<->operation :: Operations on Lie Algebras (LIE ALGEBRAS)
5<->L eq K <->text1138.htm#12768<->L eq K : AlgMatLie, AlgMatLie -> BoolElt
5<->L eq K <->text1138.htm#12768<->L eq K : AlgLie, AlgLie -&gt; BoolElt
5<->L ne K <->text1138.htm#12769<->L ne K : AlgMatLie, AlgMatLie -> BoolElt
5<->L ne K <->text1138.htm#12769<->L ne K : AlgLie, AlgLie -&gt; BoolElt
5<->L subset K <->text1138.htm#12770<->L subset K : AlgMatLie, AlgMatLie -> BoolElt
5<->L subset K <->text1138.htm#12770<->L subset K : AlgLie, AlgLie -&gt; BoolElt
5<->L notsubset K <->text1138.htm#12771<->L notsubset K : AlgLie, AlgLie -&gt; BoolElt
5<->L meet M <->text1138.htm#12772<->L meet M : AlgMatLie, AlgMatLie -> AlgMatLie
5<->L meet M <->text1138.htm#12772<->L meet M : AlgLie, AlgLie -&gt; AlgLie
5<->L * M <->text1138.htm#12773<->L * M : AlgMatLie, AlgMatLie -> AlgMatLie
5<->L * M <->text1138.htm#12773<->L * M : AlgLie, AlgLie -&gt; AlgLie
5<->L ^ n <->text1138.htm#12774<->L ^ n : AlgLie, RngIntElt -&gt; AlgLie
5<->Morphism(L, M) <->text1138.htm#12775<->Morphism(L, M) : AlgLie, AlgLie -&gt; Map
5<->IsIsomorphic(L, M) <->text1138.htm#12776<->IsIsomorphic(L, M) : AlgLie, AlgLie -&gt; BoolElt, .
5<->IsKnownIsomorphic(L, M) <->text1138.htm#12777<->IsKnownIsomorphic(L, M) : AlgLie, AlgLie -&gt; BoolElt, BoolElt, .
5<->IsIsomorphism(m) <->text1138.htm#12778<->IsIsomorphism(m) : Map[AlgLie, AlgLie] -&gt; BoolElt
4<->AlgLie_Isomorphic (Example H106E27)<->text1138.htm#12779<->AlgLie_Isomorphic (Example H106E27)
4<->Example-Isomorphic :<->text1138.htm#12779<->Example-Isomorphic :: AlgLie_Isomorphic (Example H106E27)
4<->AlgLie_IsomorphicG2 (Example H106E28)<->text1138.htm#12780<->AlgLie_IsomorphicG2 (Example H106E28)
4<->Example-IsomorphicG2 :<->text1138.htm#12780<->Example-IsomorphicG2 :: AlgLie_IsomorphicG2 (Example H106E28)
3<->basic-oper :<->text1138.htm#12781<->basic-oper :: Basic Invariants (LIE ALGEBRAS)
5<->CoefficientRing(L) <->text1138.htm#12782<->CoefficientRing(L) : AlgMatLie -> Rng
5<->BaseRing :: CoefficientRing(L) <->text1138.htm#12782<->BaseRing :: CoefficientRing(L) : AlgLie -&gt; Rng
5<->BaseRing(L) : AlgMatLie -> Rng :: CoefficientRing(L) <->text1138.htm#12782<->BaseRing(L) : AlgMatLie -> Rng :: CoefficientRing(L) : AlgLie -&gt; Rng
5<->CoefficientRing(L) <->text1138.htm#12782<->CoefficientRing(L) : AlgLie -&gt; Rng
5<->Dimension(L) <->text1138.htm#12783<->Dimension(L) : AlgMatLie -> RngIntElt
5<->Dimension(L) <->text1138.htm#12783<->Dimension(L) : AlgLie -&gt; RngIntElt
5<->\# L <->text1138.htm#12784<->\# L : AlgMatLie -> RngIntElt
5<-># L <->text1138.htm#12784<-># L : AlgLie -&gt; RngIntElt
5<->Moduli(L) <->text1138.htm#12785<->Moduli(L) : AlgLie -&gt; SeqEnum
4<->AlgLie_ModuliOfLieAlgebra (Example H106E29)<->text1138.htm#12786<->AlgLie_ModuliOfLieAlgebra (Example H106E29)
4<->Example-ModuliOfLieAlgebra :<->text1138.htm#12786<->Example-ModuliOfLieAlgebra :: AlgLie_ModuliOfLieAlgebra (Example H106E29)
3<->basic-oper :<->text1138.htm#12781<->basic-oper :: Basic Invariants (LIE ALGEBRAS)
3<->change-ring :<->text1138.htm#12787<->change-ring :: Changing Base Rings (LIE ALGEBRAS)
5<->ChangeRing(L, S) <->text1138.htm#12788<->ChangeRing(L, S) : AlgMatLie, Rng -> AlgMatLie, Map
5<->ChangeRing(L, S) <->text1138.htm#12788<->ChangeRing(L, S) : AlgLie, Rng -&gt; AlgLie, Map
5<->ChangeRing(L, S, f) <->text1138.htm#12789<->ChangeRing(L, S, f) : AlgMatLie, Rng, Map -> AlgMatLie, Map
5<->ChangeRing(L, S, f) <->text1138.htm#12789<->ChangeRing(L, S, f) : AlgLie, Rng, Map -&gt; AlgLie, Map
3<->change-ring :<->text1138.htm#12787<->change-ring :: Changing Base Rings (LIE ALGEBRAS)
3<->basis-oper :<->text1138.htm#12790<->basis-oper :: Bases (LIE ALGEBRAS)
5<->BasisElement(A, i) <->text1138.htm#12791<->BasisElement(A, i) : AlgMatLie, RngIntElt -> AlgMatLieElt
5<->. :: BasisElement(A, i) <->text1138.htm#12791<->. :: BasisElement(A, i) : AlgLie, RngIntElt -&gt; AlgLieElt
5<->A . i : AlgMatLie, RngIntElt -> AlgMatLieElt :: BasisElement(A, i) <->text1138.htm#12791<->A . i : AlgMatLie, RngIntElt -> AlgMatLieElt :: BasisElement(A, i) : AlgLie, RngIntElt -&gt; AlgLieElt
5<->BasisElement(A, i) <->text1138.htm#12791<->BasisElement(A, i) : AlgLie, RngIntElt -&gt; AlgLieElt
5<->Basis(A) <->text1138.htm#12792<->Basis(A) : AlgMatLie -> [ AlgMatLieElt ]
5<->Basis(A) <->text1138.htm#12792<->Basis(A) : AlgLie -&gt; [ AlgLieElt ]
5<->IsIndependent(Q) <->text1138.htm#12793<->IsIndependent(Q) : [ AlgMatLieElt ] -> BoolElt
5<->IsIndependent(Q) <->text1138.htm#12793<->IsIndependent(Q) : \lbrace AlgLieElt \rbrace -> BoolElt
5<->IsIndependent(Q) <->text1138.htm#12793<->IsIndependent(Q) : \lbrace AlgMatLieElt \rbrace -> BoolElt
5<->IsIndependent(Q) <->text1138.htm#12793<->IsIndependent(Q) : [ AlgLieElt ] -&gt; BoolElt
5<->ExtendBasis(S, L) <->text1138.htm#12794<->ExtendBasis(S, L) : AlgMatLie, AlgMatLie -> [ AlgElt ]
5<->ExtendBasis(Q, L) <->text1138.htm#12794<->ExtendBasis(Q, L) : [ AlgLieElt ], AlgLie -> [ AlgElt ]
5<->ExtendBasis(Q, L) <->text1138.htm#12794<->ExtendBasis(Q, L) : [ AlgMatLie ], AlgMatLie -> [ AlgElt ]
5<->ExtendBasis(S, L) <->text1138.htm#12794<->ExtendBasis(S, L) : AlgLie, AlgLie -&gt; [ AlgElt ]
3<->basis-oper :<->text1138.htm#12790<->basis-oper :: Bases (LIE ALGEBRAS)
3<->red-oper :<->text1138.htm#12795<->red-oper :: Operations for Semisimple and Reductive Lie Algebras (LIE ALGEBRAS)
5<->SemisimpleType(L) <->text1138.htm#12796<->SemisimpleType(L) : AlgMatLie -> MonStgElt
5<->CartanName :: SemisimpleType(L) <->text1138.htm#12796<->CartanName :: SemisimpleType(L) : AlgLie -&gt; MonStgElt
5<->CartanName(L) : AlgMatLie -> MonStgElt :: SemisimpleType(L) <->text1138.htm#12796<->CartanName(L) : AlgMatLie -> MonStgElt :: SemisimpleType(L) : AlgLie -&gt; MonStgElt
5<->SemisimpleType(L) <->text1138.htm#12796<->SemisimpleType(L) : AlgLie -&gt; MonStgElt
4<->AlgLie_SemisimpleType (Example H106E30)<->text1138.htm#12797<->AlgLie_SemisimpleType (Example H106E30)
4<->Example-SemisimpleType :<->text1138.htm#12797<->Example-SemisimpleType :: AlgLie_SemisimpleType (Example H106E30)
5<->ReductiveType(L, H) <->text1138.htm#12798<->ReductiveType(L, H) : AlgLie, AlgLie -> RootDtm, MonStgElt, SeqEnum, SeqEnum
5<->ReductiveType(L) <->text1138.htm#12798<->ReductiveType(L) : AlgLie -&gt; RootDtm, MonStgElt, SeqEnum, SeqEnum
4<->AlgLie_ReductiveType (Example H106E31)<->text1138.htm#12799<->AlgLie_ReductiveType (Example H106E31)
4<->Example-ReductiveType :<->text1138.htm#12799<->Example-ReductiveType :: AlgLie_ReductiveType (Example H106E31)
5<->RootSystem(L) <->text1138.htm#12800<->RootSystem(L) : AlgMatLie -> [ ModTupRngElt ], [ AlgMatLieElt ], [ ModTupRngElt ], AlgMatElt
5<->RootSystem(L) <->text1138.htm#12800<->RootSystem(L) : AlgLie -&gt; [ ModTupRngElt ], [ AlgLieElt ], [ ModTupRngElt ], AlgMatElt
4<->AlgLie_RootSystem (Example H106E32)<->text1138.htm#12801<->AlgLie_RootSystem (Example H106E32)
4<->Example-RootSystem :<->text1138.htm#12801<->Example-RootSystem :: AlgLie_RootSystem (Example H106E32)
5<->RootDatum(L) <->text1138.htm#12802<->RootDatum(L) : AlgMatLie -> RootDtm
5<->RootDatum(L) <->text1138.htm#12802<->RootDatum(L) : AlgLie -&gt; RootDtm
4<->AlgLie_RootDatum (Example H106E33)<->text1138.htm#12803<->AlgLie_RootDatum (Example H106E33)
4<->Example-RootDatum :<->text1138.htm#12803<->Example-RootDatum :: AlgLie_RootDatum (Example H106E33)
5<->ChevalleyBasis(L, H) <->text1138.htm#12804<->ChevalleyBasis(L, H) : AlgLie, AlgLie -> [ AlgLieElt ], [ AlgLieElt ], [ AlgLieElt ] 
5<->ChevalleyBasis(L) <->text1138.htm#12804<->ChevalleyBasis(L) : AlgMatLie -> [ AlgMatLieElt ], [ AlgMatLieElt ], [ AlgMatLieElt ] 
5<->ChevalleyBasis(L) <->text1138.htm#12804<->ChevalleyBasis(L) : AlgLie -&gt; [ AlgLieElt ], [ AlgLieElt ], [ AlgLieElt ]
4<->AlgLie_ChevalleyBasis (Example H106E34)<->text1138.htm#12805<->AlgLie_ChevalleyBasis (Example H106E34)
4<->Example-ChevalleyBasis :<->text1138.htm#12805<->Example-ChevalleyBasis :: AlgLie_ChevalleyBasis (Example H106E34)
5<->ChevalleyBasis(L, H, R) <->text1138.htm#12806<->ChevalleyBasis(L, H, R) : AlgLie, AlgLie, RootDtm -&gt; [ AlgLieElt ], [ AlgLieElt ], [ AlgLieElt ]
5<->IsChevalleyBasis(L, R, x, y, h) <->text1138.htm#12807<->IsChevalleyBasis(L, R, x, y, h) : AlgLie, RootDtm, [ AlgLieElt ], [ AlgLieElt ], [ AlgLieElt ] -&gt; BoolElt, [ Tup ]
4<->AlgLie_ChevalleyBasisSmallChar (Example H106E35)<->text1138.htm#12808<->AlgLie_ChevalleyBasisSmallChar (Example H106E35)
4<->Example-ChevalleyBasisSmallChar :<->text1138.htm#12808<->Example-ChevalleyBasisSmallChar :: AlgLie_ChevalleyBasisSmallChar (Example H106E35)
5<->TwistedBasis(L, H, R) <->text1138.htm#12809<->TwistedBasis(L, H, R) : AlgLie, AlgLie, RootDtm -&gt; AlgLie, AlgLie, Rec, AlgMatElt
4<->AlgLie_TwistedBasis (Example H106E36)<->text1138.htm#12810<->AlgLie_TwistedBasis (Example H106E36)
4<->Example-TwistedBasis :<->text1138.htm#12810<->Example-TwistedBasis :: AlgLie_TwistedBasis (Example H106E36)
5<->WeylGroup(GrpPermCox, L) <->text1138.htm#12811<->WeylGroup(GrpPermCox, L) : Cat, AlgLie -> GrpPermCox
5<->WeylGroup(L) <->text1138.htm#12811<->WeylGroup(L) : AlgLie -&gt; GrpPermCox
5<->WeylGroup(GrpFPCox, L) <->text1138.htm#12812<->WeylGroup(GrpFPCox, L) : Cat, AlgLie -&gt; GrpPermCox
5<->WeylGroup(GrpMat, L) <->text1138.htm#12813<->WeylGroup(GrpMat, L) : Cat, AlgLie -&gt; GrpPermCox
3<->red-oper :<->text1138.htm#12795<->red-oper :: Operations for Semisimple and Reductive Lie Algebras (LIE ALGEBRAS)
3<->operation :<->text1138.htm<->operation :: Operations on Lie Algebras (LIE ALGEBRAS)
3<->sub :<->text1139.htm<->sub :: Operations on Subalgebras and Ideals (LIE ALGEBRAS)
5<->DirectSum(L, M) <->text1139.htm#12815<->DirectSum(L, M) : AlgMatLie, AlgMatLie -> AlgMatLie
5<->DirectSum(L, M) <->text1139.htm#12815<->DirectSum(L, M) : AlgLie, AlgLie -&gt; AlgLie
5<->IndecomposableSummands(L) <->text1139.htm#12816<->IndecomposableSummands(L) : AlgMatLie -> [ AlgMatLie ]
5<->DirectSumDecomposition :: IndecomposableSummands(L) <->text1139.htm#12816<->DirectSumDecomposition :: IndecomposableSummands(L) : AlgLie -&gt; [ AlgLie ]
5<->DirectSumDecomposition(L) : AlgMatLie -> [ AlgMatLie ] :: IndecomposableSummands(L) <->text1139.htm#12816<->DirectSumDecomposition(L) : AlgMatLie -> [ AlgMatLie ] :: IndecomposableSummands(L) : AlgLie -&gt; [ AlgLie ]
5<->IndecomposableSummands(L) <->text1139.htm#12816<->IndecomposableSummands(L) : AlgLie -&gt; [ AlgLie ]
4<->AlgLie_DirectSumDecomposition (Example H106E37)<->text1139.htm#12817<->AlgLie_DirectSumDecomposition (Example H106E37)
4<->Example-DirectSumDecomposition :<->text1139.htm#12817<->Example-DirectSumDecomposition :: AlgLie_DirectSumDecomposition (Example H106E37)
3<->sub-std :<->text1139.htm#12818<->sub-std :: Standard Ideals and Subalgebras (LIE ALGEBRAS)
5<->Centre(L) <->text1139.htm#12819<->Centre(L) : AlgMatLie -> AlgMatLie
5<->Center :: Centre(L) <->text1139.htm#12819<->Center :: Centre(L) : AlgLie -&gt; AlgLie
5<->Center(L) : AlgMatLie -> AlgMatLie :: Centre(L) <->text1139.htm#12819<->Center(L) : AlgMatLie -> AlgMatLie :: Centre(L) : AlgLie -&gt; AlgLie
5<->Centre(L) <->text1139.htm#12819<->Centre(L) : AlgLie -&gt; AlgLie
5<->Centraliser(L, K) <->text1139.htm#12820<->Centraliser(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie, Map
5<->Centralizer :: Centraliser(L, K) <->text1139.htm#12820<->Centralizer :: Centraliser(L, K) : AlgLie, AlgLie -&gt; AlgLie, Map
5<->Centralizer(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie, Map :: Centraliser(L, K) <->text1139.htm#12820<->Centralizer(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie, Map :: Centraliser(L, K) : AlgLie, AlgLie -&gt; AlgLie, Map
5<->Centraliser(L, K) <->text1139.htm#12820<->Centraliser(L, K) : AlgLie, AlgLie -&gt; AlgLie, Map
5<->Centraliser(L, x) <->text1139.htm#12821<->Centraliser(L, x) : AlgMatLie, AlgMatLieElt -> AlgMatLie, Map
5<->Centralizer :: Centraliser(L, x) <->text1139.htm#12821<->Centralizer :: Centraliser(L, x) : AlgLie, AlgLieElt -&gt; AlgLie, Map
5<->Centralizer(L, x) : AlgMatLie, AlgMatLieElt -> AlgMatLie, Map :: Centraliser(L, x) <->text1139.htm#12821<->Centralizer(L, x) : AlgMatLie, AlgMatLieElt -> AlgMatLie, Map :: Centraliser(L, x) : AlgLie, AlgLieElt -&gt; AlgLie, Map
5<->Centraliser(L, x) <->text1139.htm#12821<->Centraliser(L, x) : AlgLie, AlgLieElt -&gt; AlgLie, Map
5<->Normaliser(L, K) <->text1139.htm#12822<->Normaliser(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie
5<->Normalizer :: Normaliser(L, K) <->text1139.htm#12822<->Normalizer :: Normaliser(L, K) : AlgLie, AlgLie -&gt; AlgLie
5<->Normalizer(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie :: Normaliser(L, K) <->text1139.htm#12822<->Normalizer(L, K) : AlgMatLie, AlgMatLie -> AlgMatLie :: Normaliser(L, K) : AlgLie, AlgLie -&gt; AlgLie
5<->Normaliser(L, K) <->text1139.htm#12822<->Normaliser(L, K) : AlgLie, AlgLie -&gt; AlgLie
5<->SolubleRadical(L) <->text1139.htm#12823<->SolubleRadical(L) : AlgMatLie -> AlgMatLie
5<->SolvableRadical :: SolubleRadical(L) <->text1139.htm#12823<->SolvableRadical :: SolubleRadical(L) : AlgLie -&gt; AlgLie
5<->SolvableRadical(L) : AlgMatLie -> AlgMatLie :: SolubleRadical(L) <->text1139.htm#12823<->SolvableRadical(L) : AlgMatLie -> AlgMatLie :: SolubleRadical(L) : AlgLie -&gt; AlgLie
5<->SolubleRadical(L) <->text1139.htm#12823<->SolubleRadical(L) : AlgLie -&gt; AlgLie
5<->Nilradical(L) <->text1139.htm#12824<->Nilradical(L) : AlgMatLie -> AlgMatLie
5<->Nilradical(L) <->text1139.htm#12824<->Nilradical(L) : AlgLie -&gt; AlgLie
4<->AlgLie_Operations (Example H106E38)<->text1139.htm#12825<->AlgLie_Operations (Example H106E38)
4<->Example-Operations :<->text1139.htm#12825<->Example-Operations :: AlgLie_Operations (Example H106E38)
3<->sub-std :<->text1139.htm#12818<->sub-std :: Standard Ideals and Subalgebras (LIE ALGEBRAS)
3<->sub-cartan-toral :<->text1139.htm#12826<->sub-cartan-toral :: Cartan and Toral Subalgebras (LIE ALGEBRAS)
5<->CartanSubalgebra(L) <->text1139.htm#12827<->CartanSubalgebra(L) : AlgMatLie -> AlgMatLie
5<->CartanSubalgebra(L) <->text1139.htm#12827<->CartanSubalgebra(L) : AlgLie -&gt; AlgLie
5<->IsCartanSubalgebra(L, H) <->text1139.htm#12828<->IsCartanSubalgebra(L, H) : AlgMatLie, AlgMatLie -> BoolElt
5<->IsCartanSubalgebra(L, H) <->text1139.htm#12828<->IsCartanSubalgebra(L, H) : AlgLie, AlgLie -&gt; BoolElt
4<->AlgLie_CartanSubalgebra (Example H106E39)<->text1139.htm#12829<->AlgLie_CartanSubalgebra (Example H106E39)
4<->Example-CartanSubalgebra :<->text1139.htm#12829<->Example-CartanSubalgebra :: AlgLie_CartanSubalgebra (Example H106E39)
5<->SplitMaximalToralSubalgebra :: SplittingCartanSubalgebra(L) <->text1139.htm#12830<->SplitMaximalToralSubalgebra :: SplittingCartanSubalgebra(L) : AlgLie -&gt; AlgLie
5<->SplittingCartanSubalgebra(L) <->text1139.htm#12830<->SplittingCartanSubalgebra(L) : AlgLie -&gt; AlgLie
5<->IsSplittingCartanSubalgebra(L, H) <->text1139.htm#12831<->IsSplittingCartanSubalgebra(L, H) : AlgMatLie, AlgMatLie -> BoolElt
5<->IsSplittingCartanSubalgebra(L, H) <->text1139.htm#12831<->IsSplittingCartanSubalgebra(L, H) : AlgLie, AlgLie -&gt; BoolElt
5<->SplitToralSubalgebra(L) <->text1139.htm#12832<->SplitToralSubalgebra(L) : AlgLie -&gt; AlgLie
5<->IsSplitToralSubalgebra(L, H) <->text1139.htm#12833<->IsSplitToralSubalgebra(L, H) : AlgLie, AlgLie -&gt; BoolElt
4<->AlgLie_SplitToral (Example H106E40)<->text1139.htm#12834<->AlgLie_SplitToral (Example H106E40)
4<->Example-SplitToral :<->text1139.htm#12834<->Example-SplitToral :: AlgLie_SplitToral (Example H106E40)
3<->sub-cartan-toral :<->text1139.htm#12826<->sub-cartan-toral :: Cartan and Toral Subalgebras (LIE ALGEBRAS)
3<->sub-series :<->text1139.htm#12835<->sub-series :: Standard Series (LIE ALGEBRAS)
5<->CompositionSeries(L) <->text1139.htm#12836<->CompositionSeries(L) : AlgLie -&gt; [ Alg ], [ AlgLie ], AlgMatElt
5<->CompositionFactors(L) <->text1139.htm#12837<->CompositionFactors(L) : AlgLie -&gt; [ AlgLie ]
5<->MinimalIdeals(L : parameters) <->text1139.htm#12838<->MinimalIdeals(L : parameters) : AlgLie -&gt; [ AlgLie ], BoolElt
5<->MaximalIdeals(L : parameters) <->text1139.htm#12839<->MaximalIdeals(L : parameters) : AlgLie -&gt; [ AlgLie ], BoolElt
5<->DerivedSeries(L) <->text1139.htm#12840<->DerivedSeries(L) : AlgMatLie -> [ AlgMatLie ]
5<->DerivedSeries(L) <->text1139.htm#12840<->DerivedSeries(L) : AlgLie -&gt; [ AlgLie ]
5<->LowerCentralSeries(L) <->text1139.htm#12841<->LowerCentralSeries(L) : AlgMatLie -> [ AlgMatLie ]
5<->LowerCentralSeries(L) <->text1139.htm#12841<->LowerCentralSeries(L) : AlgLie -&gt; [ AlgLie ]
5<->UpperCentralSeries(L) <->text1139.htm#12842<->UpperCentralSeries(L) : AlgMatLie -> [ AlgMatLie ]
5<->UpperCentralSeries(L) <->text1139.htm#12842<->UpperCentralSeries(L) : AlgLie -&gt; [ AlgLie ]
4<->AlgLie_Series (Example H106E41)<->text1139.htm#12843<->AlgLie_Series (Example H106E41)
4<->Example-Series :<->text1139.htm#12843<->Example-Series :: AlgLie_Series (Example H106E41)
3<->sub-series :<->text1139.htm#12835<->sub-series :: Standard Series (LIE ALGEBRAS)
3<->derlie :<->text1139.htm#12844<->derlie :: The Lie Algebra of Derivations (LIE ALGEBRAS)
5<->LieAlgebraOfDerivations(L) <->text1139.htm#12845<->LieAlgebraOfDerivations(L) : AlgLie -&gt; AlgLie, Rec
4<->AlgLie_LieAlgebraOfDerivations (Example H106E42)<->text1139.htm#12846<->AlgLie_LieAlgebraOfDerivations (Example H106E42)
4<->Example-LieAlgebraOfDerivations :<->text1139.htm#12846<->Example-LieAlgebraOfDerivations :: AlgLie_LieAlgebraOfDerivations (Example H106E42)
3<->derlie :<->text1139.htm#12844<->derlie :: The Lie Algebra of Derivations (LIE ALGEBRAS)
3<->sub :<->text1139.htm<->sub :: Operations on Subalgebras and Ideals (LIE ALGEBRAS)
3<->property :<->text1140.htm<->property :: Properties of Lie Algebras and Ideals (LIE ALGEBRAS)
5<->KillingMatrix(L) <->text1140.htm#12848<->KillingMatrix(L) : AlgMatLie -> ModMatFldElt
5<->KillingMatrix(L) <->text1140.htm#12848<->KillingMatrix(L) : AlgLie -&gt; ModMatFldElt
4<->AlgLie_Other (Example H106E43)<->text1140.htm#12849<->AlgLie_Other (Example H106E43)
4<->Example-Other :<->text1140.htm#12849<->Example-Other :: AlgLie_Other (Example H106E43)
5<->IsAbelian(L) <->text1140.htm#12850<->IsAbelian(L) : AlgMatLie -> BoolElt
5<->IsAbelian(L) <->text1140.htm#12850<->IsAbelian(L) : AlgLie -&gt; BoolElt
5<->IsSoluble(L) <->text1140.htm#12851<->IsSoluble(L) : AlgMatLie -> BoolElt
5<->IsSolvable :: IsSoluble(L) <->text1140.htm#12851<->IsSolvable :: IsSoluble(L) : AlgLie -&gt; BoolElt
5<->IsSolvable(L) : AlgMatLie -> BoolElt :: IsSoluble(L) <->text1140.htm#12851<->IsSolvable(L) : AlgMatLie -> BoolElt :: IsSoluble(L) : AlgLie -&gt; BoolElt
5<->IsSoluble(L) <->text1140.htm#12851<->IsSoluble(L) : AlgLie -&gt; BoolElt
5<->IsNilpotent(L) <->text1140.htm#12852<->IsNilpotent(L) : AlgMatLie -> BoolElt
5<->IsNilpotent(L) <->text1140.htm#12852<->IsNilpotent(L) : AlgLie -&gt; BoolElt
5<->IsCentral(L, M) <->text1140.htm#12853<->IsCentral(L, M) : AlgMatLie,AlgMatLie -> BoolElt
5<->IsCentral(L, M) <->text1140.htm#12853<->IsCentral(L, M) : AlgLie,AlgLie -&gt; BoolElt
5<->IsSimple(L) <->text1140.htm#12854<->IsSimple(L) : AlgMatLie -> BoolElt
5<->IsSimple(L) <->text1140.htm#12854<->IsSimple(L) : AlgLie -&gt; BoolElt
5<->IsSemisimple(L) <->text1140.htm#12855<->IsSemisimple(L) : AlgMatLie -> BoolElt
5<->IsSemisimple(L) <->text1140.htm#12855<->IsSemisimple(L) : AlgLie -&gt; BoolElt
5<->IsReductive(L) <->text1140.htm#12856<->IsReductive(L) : AlgMatLie -> BoolElt
5<->IsReductive(L) <->text1140.htm#12856<->IsReductive(L) : AlgLie -&gt; BoolElt
5<->HasLeviSubalgebra(L) <->text1140.htm#12857<->HasLeviSubalgebra(L) : AlgMatLie -> BoolElt
5<->HasLeviSubalgebra(L) <->text1140.htm#12857<->HasLeviSubalgebra(L) : AlgLie -&gt; BoolElt
5<->IsClassicalType(L) <->text1140.htm#12858<->IsClassicalType(L) : AlgLie -&gt; BoolElt
4<->AlgLie_Predicates (Example H106E44)<->text1140.htm#12859<->AlgLie_Predicates (Example H106E44)
4<->Example-Predicates :<->text1140.htm#12859<->Example-Predicates :: AlgLie_Predicates (Example H106E44)
3<->property :<->text1140.htm<->property :: Properties of Lie Algebras and Ideals (LIE ALGEBRAS)
3<->elements :<->text1141.htm<->elements :: Operations on Elements (LIE ALGEBRAS)
5<->IsCentral(L, M) <->text1141.htm#12861<->IsCentral(L, M) : AlgMatLie,AlgMatLieElt -> BoolElt
5<->IsCentral(L, M) <->text1141.htm#12861<->IsCentral(L, M) : AlgLie,AlgLieElt -&gt; BoolElt
5<->NonNilpotentElement(L) <->text1141.htm#12862<->NonNilpotentElement(L) : AlgLie -&gt; AlgLieElt
4<->AlgLie_NonNilpotentElement (Example H106E45)<->text1141.htm#12863<->AlgLie_NonNilpotentElement (Example H106E45)
4<->Example-NonNilpotentElement :<->text1141.htm#12863<->Example-NonNilpotentElement :: AlgLie_NonNilpotentElement (Example H106E45)
5<->RightAdjointMatrix :: AdjointMatrix(L, x) <->text1141.htm#12864<->RightAdjointMatrix :: AdjointMatrix(L, x) : AlgLie, AlgLieElt -&gt; AlgMatLieElt
5<->AdjointMatrix(L, x) <->text1141.htm#12864<->AdjointMatrix(L, x) : AlgLie, AlgLieElt -&gt; AlgMatLieElt
4<->AlgLie_Other (Example H106E46)<->text1141.htm#12865<->AlgLie_Other (Example H106E46)
4<->Example-Other :<->text1141.htm#12865<->Example-Other :: AlgLie_Other (Example H106E46)
3<->index-elt-oper :<->text1141.htm#12866<->index-elt-oper :: Indexing (LIE ALGEBRAS)
5<->[] :: a[i] <->text1141.htm#12867<->[] :: a[i] : AlgLieElt, RngIntElt -&gt; RngElt
5<->a[i] <->text1141.htm#12867<->a[i] : AlgLieElt, RngIntElt -&gt; RngElt
5<->a[i] \col= r : AlgMatLieElt, RngIntElt, ModTupRngElt ->  AlgMatLieElt :: a[i] := r <->text1141.htm#12868<->a[i] \col= r : AlgMatLieElt, RngIntElt, ModTupRngElt ->  AlgMatLieElt :: a[i] := r : AlgLieElt, RngIntElt, RngElt -&gt;  AlgLieElt
5<->[] :: a[i] := r <->text1141.htm#12868<->[] :: a[i] := r : AlgLieElt, RngIntElt, RngElt -&gt;  AlgLieElt
5<->[] :: a[i, j] <->text1141.htm#12869<->[] :: a[i, j] : AlgMatLieElt, RngIntElt, RngIntElt -&gt; RngElt
5<->a[i, j] <->text1141.htm#12869<->a[i, j] : AlgMatLieElt, RngIntElt, RngIntElt -&gt; RngElt
3<->index-elt-oper :<->text1141.htm#12866<->index-elt-oper :: Indexing (LIE ALGEBRAS)
3<->elements :<->text1141.htm<->elements :: Operations on Elements (LIE ALGEBRAS)
3<->natural-module :<->text1142.htm<->natural-module :: The Natural Module (LIE ALGEBRAS)
5<->Module(L) <->text1142.htm#12871<->Module(L) : AlgLie -&gt; ModTupRng
5<->RModule(L) <->text1142.htm#12872<->RModule(L) : AlgMatLie -&gt; ModTupRng
5<->BaseModule(L) <->text1142.htm#12873<->BaseModule(L) : AlgMatLie -&gt; ModTupRng
5<->Degree(L) <->text1142.htm#12874<->Degree(L) : AlgMatLie -> RngIntElt
5<->Degree(L) <->text1142.htm#12874<->Degree(L) : AlgLie -&gt; RngIntElt
5<->Degree(a) <->text1142.htm#12875<->Degree(a) : AlgLieElt -&gt; RngIntElt
5<->Eltseq :: ElementToSequence(a) <->text1142.htm#12876<->Eltseq :: ElementToSequence(a) : AlgLieElt -&gt; SeqEnum
5<->ElementToSequence(a) <->text1142.htm#12876<->ElementToSequence(a) : AlgLieElt -&gt; SeqEnum
5<->Coordinates(M, a) <->text1142.htm#12877<->Coordinates(M, a) : AlgMatLie, AlgMatLieElt -> SeqEnum
5<->Coordinates(M, a) <->text1142.htm#12877<->Coordinates(M, a) : AlgLie, AlgLieElt -&gt; SeqEnum
5<->InnerProduct(a, b) <->text1142.htm#12878<->InnerProduct(a, b) : AlgLieElt, AlgLieElt -&gt; RngElt
5<->Support(a) <->text1142.htm#12879<->Support(a) : AlgLieElt -&gt; SetEnum
3<->natural-module :<->text1142.htm<->natural-module :: The Natural Module (LIE ALGEBRAS)
3<->matrix :<->text1143.htm<->matrix :: Operations for Matrix Lie Algebras (LIE ALGEBRAS)
5<->BaseModule(M) <->text1143.htm#12881<->BaseModule(M) : AlgMatLie -&gt; ModTupRng
5<->Generic(M) <->text1143.htm#12882<->Generic(M) : AlgMatLie -&gt; AlgMatLie
5<->Nullspace :: Kernel(X) <->text1143.htm#12883<->Nullspace :: Kernel(X) : AlgMatLieElt -&gt; ModTupRng
5<->Kernel(X) <->text1143.htm#12883<->Kernel(X) : AlgMatLieElt -&gt; ModTupRng
5<->RowNullSpace :: NullspaceOfTranspose(X) <->text1143.htm#12884<->RowNullSpace :: NullspaceOfTranspose(X) : AlgMatLieElt -&gt; ModTupRng
5<->NullspaceOfTranspose(X) <->text1143.htm#12884<->NullspaceOfTranspose(X) : AlgMatLieElt -&gt; ModTupRng
3<->matrix :<->text1143.htm<->matrix :: Operations for Matrix Lie Algebras (LIE ALGEBRAS)
3<->homomorphisms :<->text1144.htm<->homomorphisms :: Homomorphisms (LIE ALGEBRAS)
5<->hom <->text1144.htm#12886<->hom<L \ar M | Q> : AlgLie, TupMod, [ TupModElt ] -> Map
5<->hom<L -> M | Q> <->text1144.htm#12886<->hom&lt;L -&gt; M | Q&gt; : AlgLie, AlgLie, [ AlgLieElt ] -&gt; Map
3<->homomorphisms :<->text1144.htm<->homomorphisms :: Homomorphisms (LIE ALGEBRAS)
3<->automorphisms-classical :<->text1145.htm<->automorphisms-classical :: Automorphisms of Classical- type Reductive Algebras (LIE ALGEBRAS)
5<->IdentityAutomorphism(L) <->text1145.htm#12888<->IdentityAutomorphism(L) : AlgLie -&gt; Map
5<->InnerAutomorphism(L, x) <->text1145.htm#12889<->InnerAutomorphism(L, x) : AlgLie, GrpLieElt -&gt; Map
5<->InnerAutomorphismGroup(L) <->text1145.htm#12890<->InnerAutomorphismGroup(L) : AlgLie -&gt; GrpLie, Map
5<->DiagonalAutomorphism(L, v) <->text1145.htm#12891<->DiagonalAutomorphism(L, v) : AlgLie, ModTupRngElt -&gt; Map
5<->DiagramAutomorphism :: GraphAutomorphism(L, p) <->text1145.htm#12892<->DiagramAutomorphism :: GraphAutomorphism(L, p) : AlgLie, GrpPermElt -&gt; Map
5<->GraphAutomorphism(L, p) <->text1145.htm#12892<->GraphAutomorphism(L, p) : AlgLie, GrpPermElt -&gt; Map
4<->AlgLie_GraphAutomorphism (Example H106E47)<->text1145.htm#12893<->AlgLie_GraphAutomorphism (Example H106E47)
4<->Example-GraphAutomorphism :<->text1145.htm#12893<->Example-GraphAutomorphism :: AlgLie_GraphAutomorphism (Example H106E47)
3<->automorphisms-classical :<->text1145.htm<->automorphisms-classical :: Automorphisms of Classical- type Reductive Algebras (LIE ALGEBRAS)
3<->Lie algebra!restricted :<->text1146.htm<->Lie algebra!restricted :: Restrictable Lie Algebras (LIE ALGEBRAS)
3<->restrictable :<->text1146.htm<->restrictable :: Restrictable Lie Algebras (LIE ALGEBRAS)
5<->IsRestricted :: IsRestrictable(L) <->text1146.htm#12895<->IsRestricted :: IsRestrictable(L) : AlgLie -&gt; BoolElt, Map
5<->IspLieAlgebra :: IsRestrictable(L) <->text1146.htm#12895<->IspLieAlgebra :: IsRestrictable(L) : AlgLie -&gt; BoolElt, Map
5<->IsRestrictable(L) <->text1146.htm#12895<->IsRestrictable(L) : AlgLie -&gt; BoolElt, Map
5<->pMap :: RestrictionMap(L) <->text1146.htm#12896<->pMap :: RestrictionMap(L) : AlgLie -&gt; Map
5<->RestrictionMap(L) <->text1146.htm#12896<->RestrictionMap(L) : AlgLie -&gt; Map
4<->AlgLie_IsRestricted (Example H106E48)<->text1146.htm#12897<->AlgLie_IsRestricted (Example H106E48)
4<->Example-IsRestricted :<->text1146.htm#12897<->Example-IsRestricted :: AlgLie_IsRestricted (Example H106E48)
5<->pSubalgebra :: RestrictedSubalgebra(Q) <->text1146.htm#12898<->pSubalgebra :: RestrictedSubalgebra(Q) : SetEnum[AlgLieElt] -&gt; AlgLie
5<->RestrictedSubalgebra(Q) <->text1146.htm#12898<->RestrictedSubalgebra(Q) : SetEnum[AlgLieElt] -&gt; AlgLie
5<->pClosure(L, M) <->text1146.htm#12899<->pClosure(L, M) : AlgLie, AlgLie -&gt; AlgLie
5<->IspSubalgebra :: IsRestrictedSubalgebra(L, M) <->text1146.htm#12900<->IspSubalgebra :: IsRestrictedSubalgebra(L, M) : AlgLie, AlgLie -&gt; AlgLie
5<->IsRestrictedSubalgebra(L, M) <->text1146.htm#12900<->IsRestrictedSubalgebra(L, M) : AlgLie, AlgLie -&gt; AlgLie
5<->pQuotient(L, M) <->text1146.htm#12901<->pQuotient(L, M) : AlgLie, AlgLie -&gt; AlgLie
5<->JenningsLieAlgebra(G) <->text1146.htm#12902<->JenningsLieAlgebra(G) : Grp -&gt; AlgLie, SeqEnum
4<->AlgLie_JenningsLie (Example H106E49)<->text1146.htm#12903<->AlgLie_JenningsLie (Example H106E49)
4<->Example-JenningsLie :<->text1146.htm#12903<->Example-JenningsLie :: AlgLie_JenningsLie (Example H106E49)
3<->restrictable :<->text1146.htm<->restrictable :: Restrictable Lie Algebras (LIE ALGEBRAS)
3<->universal_enveloping_algebras :<->text1147.htm<->universal_enveloping_algebras :: Universal Enveloping Algebras (LIE ALGEBRAS)
3<->uea-background :<->text1147.htm#12905<->uea-background :: Background (LIE ALGEBRAS)
3<->uea-background-1 :<->text1147.htm#12906<->uea-background-1 :: Universal Enveloping Algebras (LIE ALGEBRAS)
3<->uea-integral_form :<->text1147.htm#12907<->uea-integral_form :: The Integral Form of a Universal Enveloping Algebra (LIE ALGEBRAS)
3<->uea-background :<->text1147.htm#12905<->uea-background :: Background (LIE ALGEBRAS)
3<->uea-construct :<->text1147.htm#12908<->uea-construct :: Construction of Universal  Enveloping Algebras (LIE ALGEBRAS)
5<->UniversalEnvelopingAlgebra(L) <->text1147.htm#12909<->UniversalEnvelopingAlgebra(L) : AlgLie -&gt; AlgUE
5<->IntegralUEAlgebra :: IntegralUEA(L) <->text1147.htm#12910<->IntegralUEAlgebra :: IntegralUEA(L) : AlgLie -&gt; AlgIUE
5<->IntegralUniversalEnvelopingAlgebra :: IntegralUEA(L) <->text1147.htm#12910<->IntegralUniversalEnvelopingAlgebra :: IntegralUEA(L) : AlgLie -&gt; AlgIUE
5<->IntegralUEA(L) <->text1147.htm#12910<->IntegralUEA(L) : AlgLie -&gt; AlgIUE
4<->AlgLie_UEACon (Example H106E50)<->text1147.htm#12911<->AlgLie_UEACon (Example H106E50)
4<->Example-UEACon :<->text1147.htm#12911<->Example-UEACon :: AlgLie_UEACon (Example H106E50)
5<->AssignNames(~U, Q) <->text1147.htm#12912<->AssignNames(~U, Q) : AlgPBW, [ MonStgElt ] -&gt;
5<->ChangeRing(U, S) <->text1147.htm#12913<->ChangeRing(U, S) : AlgUE, Rng -&gt; AlgUE
3<->uea-construct :<->text1147.htm#12908<->uea-construct :: Construction of Universal  Enveloping Algebras (LIE ALGEBRAS)
3<->uea-related :<->text1147.htm#12914<->uea-related :: Related Structures (LIE ALGEBRAS)
5<->BaseRing :: CoefficientRing(U) <->text1147.htm#12915<->BaseRing :: CoefficientRing(U) : AlgPBW -&gt; Rng
5<->CoefficientRing(U) <->text1147.htm#12915<->CoefficientRing(U) : AlgPBW -&gt; Rng
5<->Algebra(U) <->text1147.htm#12916<->Algebra(U) : AlgUE -&gt; AlgLie
3<->uea-related :<->text1147.htm#12914<->uea-related :: Related Structures (LIE ALGEBRAS)
3<->uea-elements :<->text1147.htm#12917<->uea-elements :: Elements of Universal Enveloping Algebras (LIE ALGEBRAS)
3<->uea-elts-create :<->text1147.htm#12918<->uea-elts-create :: Creation of Elements (LIE ALGEBRAS)
5<->Zero :: U ! 0 <->text1147.htm#12919<->Zero :: U ! 0 : AlgPBW, RngIntElt -&gt; AlgPBWElt
5<->U ! 0 <->text1147.htm#12919<->U ! 0 : AlgPBW, RngIntElt -&gt; AlgPBWElt
5<->One :: U ! 1 <->text1147.htm#12920<->One :: U ! 1 : AlgPBW, RngIntElt -&gt; AlgPBWElt
5<->U ! 1 <->text1147.htm#12920<->U ! 1 : AlgPBW, RngIntElt -&gt; AlgPBWElt
5<->U . i <->text1147.htm#12921<->U . i : AlgPBW, RngIntElt -&gt; AlgPBWElt
5<->U ! r <->text1147.htm#12922<->U ! r : AlgPBW, Any -&gt; AlgPBWElt
5<->HBinomial(h, n) <->text1147.htm#12923<->HBinomial(h, n) : AlgIUEElt, RngIntElt -> AlgIUEElt
5<->HBinomial(U, i, n) <->text1147.htm#12923<->HBinomial(U, i, n) : AlgIUE, RngIntElt, RngIntElt -&gt; AlgIUEElt
4<->AlgLie_HBinomial (Example H106E51)<->text1147.htm#12924<->AlgLie_HBinomial (Example H106E51)
4<->Example-HBinomial :<->text1147.htm#12924<->Example-HBinomial :: AlgLie_HBinomial (Example H106E51)
3<->uea-elts-create :<->text1147.htm#12918<->uea-elts-create :: Creation of Elements (LIE ALGEBRAS)
3<->uea-elts-ops :<->text1147.htm#12925<->uea-elts-ops :: Operations on Elements (LIE ALGEBRAS)
5<->Monomials(u) <->text1147.htm#12926<->Monomials(u) : AlgPBWElt -&gt; SeqEnum
5<->Coefficients(u) <->text1147.htm#12927<->Coefficients(u) : AlgPBWElt -&gt; SeqEnum
5<->Degree(u, i) <->text1147.htm#12928<->Degree(u, i) : AlgPBWElt, RngIntElt -&gt; RngIntElt
4<->AlgLie_EltOps (Example H106E52)<->text1147.htm#12929<->AlgLie_EltOps (Example H106E52)
4<->Example-EltOps :<->text1147.htm#12929<->Example-EltOps :: AlgLie_EltOps (Example H106E52)
3<->uea-elts-ops :<->text1147.htm#12925<->uea-elts-ops :: Operations on Elements (LIE ALGEBRAS)
3<->uea-elements :<->text1147.htm#12917<->uea-elements :: Elements of Universal Enveloping Algebras (LIE ALGEBRAS)
3<->universal_enveloping_algebras :<->text1147.htm<->universal_enveloping_algebras :: Universal Enveloping Algebras (LIE ALGEBRAS)
3<->solvable-nilpotent :<->text1148.htm<->solvable-nilpotent :: Solvable and Nilpotent Lie Algebras Classification (LIE ALGEBRAS)
3<->slac-class :<->text1148.htm#12931<->slac-class :: The List of Solvable Lie Algebras (LIE ALGEBRAS)
3<->slac-class-finfield :<->text1148.htm#12932<->slac-class-finfield :: Comments on the Classification  over Finite Fields (LIE ALGEBRAS)
3<->nlac-class :<->text1148.htm#12933<->nlac-class :: The List of Nilpotent Lie Algebras (LIE ALGEBRAS)
3<->slac-funs :<->text1148.htm#12934<->slac-funs :: Intrinsics for Working with the  Classifications (LIE ALGEBRAS)
5<->SolvableLieAlgebra( F, n, k : parameters) <->text1148.htm#12935<->SolvableLieAlgebra( F, n, k : parameters) : Fld, RngIntElt, RngIntElt -&gt; AlgLie
4<->AlgLie_SLACLnk (Example H106E53)<->text1148.htm#12936<->AlgLie_SLACLnk (Example H106E53)
4<->Example-SLACLnk :<->text1148.htm#12936<->Example-SLACLnk :: AlgLie_SLACLnk (Example H106E53)
5<->NilpotentLieAlgebra( F, r, k : parameters) <->text1148.htm#12937<->NilpotentLieAlgebra( F, r, k : parameters) : Fld, RngIntElt, RngIntElt -&gt; AlgLie
4<->AlgLie_NLACNrk (Example H106E54)<->text1148.htm#12938<->AlgLie_NLACNrk (Example H106E54)
4<->Example-NLACNrk :<->text1148.htm#12938<->Example-NLACNrk :: AlgLie_NLACNrk (Example H106E54)
5<->AllSolvableLieAlgebras(F, d) <->text1148.htm#12939<->AllSolvableLieAlgebras(F, d) : Fld, RngIntElt -&gt; SeqEnum
5<->AllNilpotentLieAlgebras(F, d) <->text1148.htm#12940<->AllNilpotentLieAlgebras(F, d) : Fld, RngIntElt -&gt; SeqEnum
5<->IdDataSLAC(L) <->text1148.htm#12941<->IdDataSLAC(L) : AlgLie -&gt; MonStgElt, SeqEnum, Map
5<->IdDataNLAC(L) <->text1148.htm#12942<->IdDataNLAC(L) : AlgLie -&gt; MonStgElt, SeqEnum, Map
5<->MatrixOfIsomorphism(f) <->text1148.htm#12943<->MatrixOfIsomorphism(f) : Map -&gt; AlgMatElt
4<->AlgLie_SLACIdData (Example H106E55)<->text1148.htm#12944<->AlgLie_SLACIdData (Example H106E55)
4<->Example-SLACIdData :<->text1148.htm#12944<->Example-SLACIdData :: AlgLie_SLACIdData (Example H106E55)
4<->AlgLie_NLACIdData (Example H106E56)<->text1148.htm#12945<->AlgLie_NLACIdData (Example H106E56)
4<->Example-NLACIdData :<->text1148.htm#12945<->Example-NLACIdData :: AlgLie_NLACIdData (Example H106E56)
3<->slac-funs :<->text1148.htm#12934<->slac-funs :: Intrinsics for Working with the  Classifications (LIE ALGEBRAS)
3<->solvable-nilpotent :<->text1148.htm<->solvable-nilpotent :: Solvable and Nilpotent Lie Algebras Classification (LIE ALGEBRAS)
3<->sub-sssdb :<->text1149.htm<->sub-sssdb :: Semisimple Subalgebras of  Simple Lie Algebras (LIE ALGEBRAS)
5<->SubalgebrasInclusionGraph( t ) <->text1149.htm#12947<->SubalgebrasInclusionGraph( t ) : MonStgElt -&gt; GrphDir
4<->AlgLie_SSSDB (Example H106E57)<->text1149.htm#12948<->AlgLie_SSSDB (Example H106E57)
4<->Example-SSSDB :<->text1149.htm#12948<->Example-SSSDB :: AlgLie_SSSDB (Example H106E57)
5<->RestrictionMatrix( G, k ) <->text1149.htm#12949<->RestrictionMatrix( G, k ) : GrphDir, RngIntElt ) -&gt; AlgMatElt
4<->AlgLie_SSSDBRestr (Example H106E58)<->text1149.htm#12950<->AlgLie_SSSDBRestr (Example H106E58)
4<->Example-SSSDBRestr :<->text1149.htm#12950<->Example-SSSDBRestr :: AlgLie_SSSDBRestr (Example H106E58)
3<->sub-sssdb :<->text1149.htm<->sub-sssdb :: Semisimple Subalgebras of  Simple Lie Algebras (LIE ALGEBRAS)
3<->nilpotent-orbits :<->text1150.htm<->nilpotent-orbits :: Nilpotent Orbits in Simple Lie Algebras (LIE ALGEBRAS)
5<->IsGenuineWeightedDynkinDiagram( L, wd ) <->text1150.htm#12952<->IsGenuineWeightedDynkinDiagram( L, wd ) : AlgLie, SeqEnum -&gt; BoolElt, SeqEnum
4<->AlgLie_NilpOrbGenuine (Example H106E59)<->text1150.htm#12953<->AlgLie_NilpOrbGenuine (Example H106E59)
4<->Example-NilpOrbGenuine :<->text1150.htm#12953<->Example-NilpOrbGenuine :: AlgLie_NilpOrbGenuine (Example H106E59)
5<->NilpotentOrbit( L, wd ) <->text1150.htm#12954<->NilpotentOrbit( L, wd ) : AlgLie, SeqEnum -&gt; NilpOrbAlgLie
5<->NilpotentOrbit( L, e ) <->text1150.htm#12955<->NilpotentOrbit( L, e ) : AlgLie, AlgLieElt -&gt; NilpOrbAlgLie
4<->AlgLie_NoByRep (Example H106E60)<->text1150.htm#12956<->AlgLie_NoByRep (Example H106E60)
4<->Example-NoByRep :<->text1150.htm#12956<->Example-NoByRep :: AlgLie_NoByRep (Example H106E60)
5<->NilpotentOrbits( L ) <->text1150.htm#12957<->NilpotentOrbits( L ) : AlgLie -&gt; SeqEnum
4<->AlgLie_NOD4 (Example H106E61)<->text1150.htm#12958<->AlgLie_NOD4 (Example H106E61)
4<->Example-NOD4 :<->text1150.htm#12958<->Example-NOD4 :: AlgLie_NOD4 (Example H106E61)
5<->Partition( o ) <->text1150.htm#12959<->Partition( o ) : NilpOrbAlgLie -&gt; SeqEnum
4<->AlgLie_PartEx (Example H106E62)<->text1150.htm#12960<->AlgLie_PartEx (Example H106E62)
4<->Example-PartEx :<->text1150.htm#12960<->Example-PartEx :: AlgLie_PartEx (Example H106E62)
5<->SL2Triple( o ) <->text1150.htm#12961<->SL2Triple( o ) : NilpOrbAlgLie -&gt; SeqEnum
5<->SL2Triple( L, e ) <->text1150.htm#12962<->SL2Triple( L, e ) : AlgLie, AlgLieElt -&gt; SeqEnum
5<->Representative( o ) <->text1150.htm#12963<->Representative( o ) : NilpOrbAlgLie  -&gt; AlgLieElt
5<->WeightedDynkinDiagram( o ) <->text1150.htm#12964<->WeightedDynkinDiagram( o ) : NilpOrbAlgLie -&gt; SeqEnum
4<->AlgLie_WDD (Example H106E63)<->text1150.htm#12965<->AlgLie_WDD (Example H106E63)
4<->Example-WDD :<->text1150.htm#12965<->Example-WDD :: AlgLie_WDD (Example H106E63)
3<->nilpotent-orbits :<->text1150.htm<->nilpotent-orbits :: Nilpotent Orbits in Simple Lie Algebras (LIE ALGEBRAS)
3<->lie_alg :<->text1130.htm<->lie_alg :: LIE ALGEBRAS
3<->lie_alg_km :<->text1153.htm<->lie_alg_km :: KAC-MOODY LIE ALGEBRAS
3<->Lie algebra!affine :<->text1154.htm<->Lie algebra!affine :: Introduction (KAC-MOODY LIE ALGEBRAS)
3<->affine Lie algebra :<->text1154.htm<->affine Lie algebra :: Introduction (KAC-MOODY LIE ALGEBRAS)
3<->introduction :<->text1154.htm<->introduction :: Introduction (KAC-MOODY LIE ALGEBRAS)
3<->cartan :<->text1155.htm<->cartan :: Generalized Cartan Matrices (KAC-MOODY LIE ALGEBRAS)
5<->IsGeneralizedCartanMatrix(C) <->text1155.htm#12971<->IsGeneralizedCartanMatrix(C) : AlgMatElt -&gt; BoolElt
5<->KacMoodyClass(C) <->text1155.htm#12972<->KacMoodyClass(C) : AlgMatElt -&gt; MonStgElt, ModMatRngElt
5<->KacMoodyClasses(C) <->text1155.htm#12973<->KacMoodyClasses(C) : AlgMatElt -&gt; SeqEnum, SeqEnum, SeqEnum
4<->AlgLieKM_generalized-cartan (Example H107E1)<->text1155.htm#12974<->AlgLieKM_generalized-cartan (Example H107E1)
4<->Example-generalized-cartan :<->text1155.htm#12974<->Example-generalized-cartan :: AlgLieKM_generalized-cartan (Example H107E1)
3<->cartan :<->text1155.htm<->cartan :: Generalized Cartan Matrices (KAC-MOODY LIE ALGEBRAS)
3<->AlgKac :<->text1156.htm<->AlgKac :: Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->AlgKacElt :<->text1156.htm<->AlgKacElt :: Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine :<->text1156.htm<->affine :: Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine-construct :<->text1156.htm#12976<->affine-construct :: Constructing Affine Kac-Moody  Lie Algebras (KAC-MOODY LIE ALGEBRAS)
5<->AffineLieAlgebra(N, F) <->text1156.htm#12977<->AffineLieAlgebra(N, F) : MonStgElt, Fld -&gt; AlgKac
5<->AffineLieAlgebra(C, F) <->text1156.htm#12978<->AffineLieAlgebra(C, F) : AlgMatElt, Fld -&gt; AlgKac
4<->AlgLieKM_construct (Example H107E2)<->text1156.htm#12979<->AlgLieKM_construct (Example H107E2)
4<->Example-construct :<->text1156.htm#12979<->Example-construct :: AlgLieKM_construct (Example H107E2)
3<->affine-construct :<->text1156.htm#12976<->affine-construct :: Constructing Affine Kac-Moody  Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine-properties :<->text1156.htm#12980<->affine-properties :: Properties of Affine Kac-Moody  Lie Algebras (KAC-MOODY LIE ALGEBRAS)
5<->CartanMatrix(L) <->text1156.htm#12981<->CartanMatrix(L) : AlgKac -&gt; AlgMatElt
5<->CartanName(L) <->text1156.htm#12982<->CartanName(L) : AlgKac -&gt; MonStgElt
5<->Dimension(L) <->text1156.htm#12983<->Dimension(L) : AlgKac -&gt; Infty
5<->BaseRing :: CoefficientRing(L) <->text1156.htm#12984<->BaseRing :: CoefficientRing(L) : AlgKac -&gt; Rng
5<->CoefficientRing(L) <->text1156.htm#12984<->CoefficientRing(L) : AlgKac -&gt; Rng
5<->FiniteLieAlgebra(L) <->text1156.htm#12985<->FiniteLieAlgebra(L) : AlgKac -&gt; AlgLie
5<->LaurentSeriesRing(L) <->text1156.htm#12986<->LaurentSeriesRing(L) : AlgKac -&gt; RngSerLaur
5<->StandardGenerators(L) <->text1156.htm#12987<->StandardGenerators(L) : AlgKac -&gt; SeqEnum[AlgKacElt], SeqEnum[AlgKacElt], SeqEnum[AlgKacElt]
4<->AlgLieKM_construct (Example H107E3)<->text1156.htm#12988<->AlgLieKM_construct (Example H107E3)
4<->Example-construct :<->text1156.htm#12988<->Example-construct :: AlgLieKM_construct (Example H107E3)
3<->affine-properties :<->text1156.htm#12980<->affine-properties :: Properties of Affine Kac-Moody  Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine-elts-constr :<->text1156.htm#12989<->affine-elts-constr :: Constructing Elements of Affine  Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
5<->L . i <->text1156.htm#12990<->L . i : AlgKac, RngIntElt -&gt; AlgKacElt
5<->HasAttribute(L, "d") <->text1156.htm#12991<->HasAttribute(L, "d") : AlgKac, MonStgElt -> BoolElt, AlgKacElt
5<->HasAttribute(L, "c") <->text1156.htm#12991<->HasAttribute(L, "c") : AlgKac, MonStgElt -&gt; BoolElt, AlgKacElt
5<->elt<L | < [ (<) p1, y1 (>), ... ], &lambda;, &mu; (>) > <->text1156.htm#12992<->elt&lt;L | &lt; [ (&lt;) p<sub>1</sub>, y<sub>1</sub> (&gt;), ... ], &lambda;, &mu; (&gt;) &gt; : AlgKac, Tup -&gt; AlgKacElt
3<->affine-elts-constr :<->text1156.htm#12989<->affine-elts-constr :: Constructing Elements of Affine  Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine-elts-props :<->text1156.htm#12993<->affine-elts-props :: Properties of Elements of Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
5<->EltTup(x) <->text1156.htm#12994<->EltTup(x) : AlgKacElt -&gt; Tup
5<->IsZero(x) <->text1156.htm#12995<->IsZero(x) : AlgKacElt -&gt; BoolElt
5<->x eq y <->text1156.htm#12996<->x eq y : AlgKacElt, AlgKacElt -&gt; BoolElt
5<->x + y <->text1156.htm#12997<->x + y : AlgKacElt, AlgKacElt -&gt; AlgKacElt
5<->* :: x + y <->text1156.htm#12997<->* :: x + y : AlgKacElt, AlgKacElt -&gt; AlgKacElt
5<->c * y : RngElt, AlgKacElt -> AlgKacElt :: x + y <->text1156.htm#12997<->c * y : RngElt, AlgKacElt -> AlgKacElt :: x + y : AlgKacElt, AlgKacElt -&gt; AlgKacElt
5<->x + y <->text1156.htm#12997<->x + y : AlgKacElt, AlgKacElt -&gt; AlgKacElt
5<->-x <->text1156.htm#12998<->-x : AlgKacElt -&gt; AlgKacElt
4<->AlgLieKM_construct (Example H107E4)<->text1156.htm#12999<->AlgLieKM_construct (Example H107E4)
4<->Example-construct :<->text1156.htm#12999<->Example-construct :: AlgLieKM_construct (Example H107E4)
3<->affine-elts-props :<->text1156.htm#12993<->affine-elts-props :: Properties of Elements of Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->affine :<->text1156.htm<->affine :: Affine Kac-Moody Lie Algebras (KAC-MOODY LIE ALGEBRAS)
3<->lie_alg_km :<->text1153.htm<->lie_alg_km :: KAC-MOODY LIE ALGEBRAS
3<->quantum_groups :<->text1159.htm<->quantum_groups :: QUANTUM GROUPS
3<->AlgQUE :<->text1160.htm<->AlgQUE :: Introduction (QUANTUM GROUPS)
3<->AlgQUEElt :<->text1160.htm<->AlgQUEElt :: Introduction (QUANTUM GROUPS)
3<->introduction :<->text1160.htm<->introduction :: Introduction (QUANTUM GROUPS)
3<->background :<->text1161.htm<->background :: Background (QUANTUM GROUPS)
3<->gaussnumbers :<->text1161.htm#13005<->gaussnumbers :: Gaussian Binomials (QUANTUM GROUPS)
3<->quantizeduea :<->text1161.htm#13006<->quantizeduea :: Quantized Enveloping Algebras (QUANTUM GROUPS)
3<->qgrpreps :<->text1161.htm#13007<->qgrpreps :: Representations of U<sub>q</sub>(L) (QUANTUM GROUPS)
3<->pbwbases :<->text1161.htm#13008<->pbwbases :: PBW-type Bases (QUANTUM GROUPS)
3<->Zform :<->text1161.htm#13009<->Zform :: The Z-form of U<sub>q</sub>(L) (QUANTUM GROUPS)
3<->canbas :<->text1161.htm#13010<->canbas :: The Canonical Basis (QUANTUM GROUPS)
3<->pathmodel :<->text1161.htm#13011<->pathmodel :: The Path Model (QUANTUM GROUPS)
3<->background :<->text1161.htm<->background :: Background (QUANTUM GROUPS)
3<->gauss :<->text1162.htm<->gauss :: Gauss Numbers (QUANTUM GROUPS)
5<->GaussNumber(n, v) <->text1162.htm#13013<->GaussNumber(n, v) : RngIntElt, RngElt -&gt; RngElt
5<->GaussianFactorial(n, v) <->text1162.htm#13014<->GaussianFactorial(n, v) : RngIntElt, RngElt -&gt; RngElt
5<->GaussianBinomial(n, k, v) <->text1162.htm#13015<->GaussianBinomial(n, k, v) : RngIntElt, RngIntElt, RngElt -&gt; RngElt
4<->AlgQEA_QGrpGauss (Example H108E1)<->text1162.htm#13016<->AlgQEA_QGrpGauss (Example H108E1)
4<->Example-QGrpGauss :<->text1162.htm#13016<->Example-QGrpGauss :: AlgQEA_QGrpGauss (Example H108E1)
3<->gauss :<->text1162.htm<->gauss :: Gauss Numbers (QUANTUM GROUPS)
3<->construct :<->text1163.htm<->construct :: Construction (QUANTUM GROUPS)
5<->QuantizedUEAlgebra :: QuantizedUEA(R) <->text1163.htm#13018<->QuantizedUEAlgebra :: QuantizedUEA(R) : RootDtm -&gt; AlgQUE
5<->QuantizedUniversalEnvelopingAlgebra :: QuantizedUEA(R) <->text1163.htm#13018<->QuantizedUniversalEnvelopingAlgebra :: QuantizedUEA(R) : RootDtm -&gt; AlgQUE
5<->QuantizedUEA(R) <->text1163.htm#13018<->QuantizedUEA(R) : RootDtm -&gt; AlgQUE
4<->AlgQEA_QGrpConstr (Example H108E2)<->text1163.htm#13019<->AlgQEA_QGrpConstr (Example H108E2)
4<->Example-QGrpConstr :<->text1163.htm#13019<->Example-QGrpConstr :: AlgQEA_QGrpConstr (Example H108E2)
5<->AssignNames(U, S) <->text1163.htm#13020<->AssignNames(U, S) : AlgPBW, [ MonStgElt ] -&gt;
5<->ChangeRing(U, R) <->text1163.htm#13021<->ChangeRing(U, R) : AlgQUE, Rng -&gt; AlgQUE
3<->construct :<->text1163.htm<->construct :: Construction (QUANTUM GROUPS)
3<->rel-struct :<->text1164.htm<->rel-struct :: Related Structures (QUANTUM GROUPS)
5<->CoefficientRing(U) <->text1164.htm#13023<->CoefficientRing(U) : AlgQUE -&gt; Fld
5<->RootDatum(U) <->text1164.htm#13024<->RootDatum(U) : AlgQUE -&gt; RootDtm
5<->PositiveRootsPerm(U) <->text1164.htm#13025<->PositiveRootsPerm(U) : AlgQUE -&gt; SeqEnum
4<->AlgQEA_QGrpRelStr (Example H108E3)<->text1164.htm#13026<->AlgQEA_QGrpRelStr (Example H108E3)
4<->Example-QGrpRelStr :<->text1164.htm#13026<->Example-QGrpRelStr :: AlgQEA_QGrpRelStr (Example H108E3)
3<->rel-struct :<->text1164.htm<->rel-struct :: Related Structures (QUANTUM GROUPS)
3<->elts-ops :<->text1165.htm<->elts-ops :: Operations on Elements (QUANTUM GROUPS)
5<->Zero :: U ! 0 <->text1165.htm#13028<->Zero :: U ! 0 : AlgQUE, RngIntElt -&gt; AlgQUEElt
5<->U ! 0 <->text1165.htm#13028<->U ! 0 : AlgQUE, RngIntElt -&gt; AlgQUEElt
5<->One :: U ! 1 <->text1165.htm#13029<->One :: U ! 1 : AlgQUE, RngIntElt -&gt; AlgQUEElt
5<->U ! 1 <->text1165.htm#13029<->U ! 1 : AlgQUE, RngIntElt -&gt; AlgQUEElt
5<->U . i <->text1165.htm#13030<->U . i : AlgQUE, RngIntElt -&gt; AlgQUEElt
5<->U ! r <->text1165.htm#13031<->U ! r : AlgQUE, Any -&gt; AlgQUEElt
5<->KBinomial(K, s) <->text1165.htm#13032<->KBinomial(K, s) : AlgQUEElt, RngIntElt -> AlgQUEElt
5<->KBinomial(U, i, s) <->text1165.htm#13032<->KBinomial(U, i, s) : AlgQUE, RngIntElt, RngIntElt -&gt; AlgQUEElt
5<->Monomials(u) <->text1165.htm#13033<->Monomials(u) : AlgQUEElt -&gt; SeqEnum
5<->Coefficients(u) <->text1165.htm#13034<->Coefficients(u) : AlgQUEElt -&gt; SeqEnum
5<->K ^ -1 <->text1165.htm#13035<->K ^ -1 : AlgQUEElt, RngIntElt -&gt; AlgQUEElt
5<->Degree(u, i) <->text1165.htm#13036<->Degree(u, i) : AlgQUEElt, RngIntElt -&gt; RngIntElt
5<->KDegree(m, i) <->text1165.htm#13037<->KDegree(m, i) : AlgQUEElt, RngIntElt -&gt; Tup
4<->AlgQEA_QGrpEltOps (Example H108E4)<->text1165.htm#13038<->AlgQEA_QGrpEltOps (Example H108E4)
4<->Example-QGrpEltOps :<->text1165.htm#13038<->Example-QGrpEltOps :: AlgQEA_QGrpEltOps (Example H108E4)
3<->elts-ops :<->text1165.htm<->elts-ops :: Operations on Elements (QUANTUM GROUPS)
3<->representations :<->text1166.htm<->representations :: Representations (QUANTUM GROUPS)
5<->HighestWeightRepresentation(U, w) <->text1166.htm#13040<->HighestWeightRepresentation(U, w) : AlgQUE, SeqEnum -&gt; UserProgram
5<->HighestWeightModule(U, w) <->text1166.htm#13041<->HighestWeightModule(U, w) : AlgQUE, SeqEnum -&gt; ModTupAlg
4<->AlgQEA_QGrpEltOps (Example H108E5)<->text1166.htm#13042<->AlgQEA_QGrpEltOps (Example H108E5)
4<->Example-QGrpEltOps :<->text1166.htm#13042<->Example-QGrpEltOps :: AlgQEA_QGrpEltOps (Example H108E5)
5<->WeightsAndVectors(V) <->text1166.htm#13043<->WeightsAndVectors(V) : ModAlg -&gt; SeqEnum, SeqEnum
5<->HighestWeightsAndVectors(V) <->text1166.htm#13044<->HighestWeightsAndVectors(V) : ModAlg -&gt; SeqEnum, SeqEnum
5<->CanonicalBasis(V) <->text1166.htm#13045<->CanonicalBasis(V) : ModAlg -&gt; SeqEnum
4<->AlgQEA_CanBasMod (Example H108E6)<->text1166.htm#13046<->AlgQEA_CanBasMod (Example H108E6)
4<->Example-CanBasMod :<->text1166.htm#13046<->Example-CanBasMod :: AlgQEA_CanBasMod (Example H108E6)
5<->TensorProduct(Q) <->text1166.htm#13047<->TensorProduct(Q) : SeqEnum -&gt; ModAlg, Map
4<->AlgQEA_AlgQEATP (Example H108E7)<->text1166.htm#13048<->AlgQEA_AlgQEATP (Example H108E7)
4<->Example-AlgQEATP :<->text1166.htm#13048<->Example-AlgQEATP :: AlgQEA_AlgQEATP (Example H108E7)
3<->representations :<->text1166.htm<->representations :: Representations (QUANTUM GROUPS)
3<->hopf-structure :<->text1167.htm<->hopf-structure :: Hopf Algebra Structure (QUANTUM GROUPS)
5<->UseTwistedHopfStructure(U, f, g) <->text1167.htm#13050<->UseTwistedHopfStructure(U, f, g) : AlgQUE, Map, Map -&gt;
5<->HasTwistedHopfStructure(U) <->text1167.htm#13051<->HasTwistedHopfStructure(U) : AlgQUE -&gt; BoolElt, List
5<->Counit(U) <->text1167.htm#13052<->Counit(U) : AlgQUE -&gt; Map
5<->Antipode(U) <->text1167.htm#13053<->Antipode(U) : AlgQUE -&gt; Map
5<->Comultiplication(U, d) <->text1167.htm#13054<->Comultiplication(U, d) : AlgQUE, RngIntElt -&gt; UserProgram
4<->AlgQEA_QGrpComult (Example H108E8)<->text1167.htm#13055<->AlgQEA_QGrpComult (Example H108E8)
4<->Example-QGrpComult :<->text1167.htm#13055<->Example-QGrpComult :: AlgQEA_QGrpComult (Example H108E8)
3<->hopf-structure :<->text1167.htm<->hopf-structure :: Hopf Algebra Structure (QUANTUM GROUPS)
3<->automorphisms :<->text1168.htm<->automorphisms :: Automorphisms (QUANTUM GROUPS)
5<->BarAutomorphism(U) <->text1168.htm#13057<->BarAutomorphism(U) : AlgQUE -&gt; Map
5<->AutomorphismOmega(U) <->text1168.htm#13058<->AutomorphismOmega(U) : AlgQUE -&gt; Map
5<->AntiAutomorphismTau(U) <->text1168.htm#13059<->AntiAutomorphismTau(U) : AlgQUE -&gt; Map
5<->AutomorphismTalpha(U, k) <->text1168.htm#13060<->AutomorphismTalpha(U, k) : AlgQUE, RngIntElt -&gt; Map
5<->GraphAutomorphism :: DiagramAutomorphism(U, p) <->text1168.htm#13061<->GraphAutomorphism :: DiagramAutomorphism(U, p) : AlgQUE, GrpPermElt -&gt; Map
5<->DiagramAutomorphism(U, p) <->text1168.htm#13061<->DiagramAutomorphism(U, p) : AlgQUE, GrpPermElt -&gt; Map
4<->AlgQEA_QGrpAutoms (Example H108E9)<->text1168.htm#13062<->AlgQEA_QGrpAutoms (Example H108E9)
4<->Example-QGrpAutoms :<->text1168.htm#13062<->Example-QGrpAutoms :: AlgQEA_QGrpAutoms (Example H108E9)
3<->automorphisms :<->text1168.htm<->automorphisms :: Automorphisms (QUANTUM GROUPS)
3<->kashiwara-ops :<->text1169.htm<->kashiwara-ops :: Kashiwara Operators (QUANTUM GROUPS)
5<->Falpha(m, i) <->text1169.htm#13064<->Falpha(m, i) : AlgQUEElt, RngIntElt -&gt; AlgQUEElt
5<->Ealpha(m, i) <->text1169.htm#13065<->Ealpha(m, i) : AlgQUEElt, RngIntElt -&gt; AlgQUEElt
4<->AlgQEA_QGrpAutoms (Example H108E10)<->text1169.htm#13066<->AlgQEA_QGrpAutoms (Example H108E10)
4<->Example-QGrpAutoms :<->text1169.htm#13066<->Example-QGrpAutoms :: AlgQEA_QGrpAutoms (Example H108E10)
3<->kashiwara-ops :<->text1169.htm<->kashiwara-ops :: Kashiwara Operators (QUANTUM GROUPS)
3<->path-model :<->text1170.htm<->path-model :: The Path Model (QUANTUM GROUPS)
5<->DominantLSPath(R, hw) <->text1170.htm#13068<->DominantLSPath(R, hw) : RootDtm, SeqEnum -&gt; PathLS
5<->Falpha(p, i) <->text1170.htm#13069<->Falpha(p, i) : PathLS, RngIntElt -&gt; PathLS
5<->Ealpha(p, i) <->text1170.htm#13070<->Ealpha(p, i) : PathLS, RngIntElt -&gt; PathLS
5<->WeightSequence(p) <->text1170.htm#13071<->WeightSequence(p) : PathLS -&gt; SeqEnum
5<->RationalSequence(p) <->text1170.htm#13072<->RationalSequence(p) : PathLS -&gt; SeqEnum
5<->EndpointWeight(p) <->text1170.htm#13073<->EndpointWeight(p) : PathLS -&gt; ModTupRngElt
5<->Shape(p) <->text1170.htm#13074<->Shape(p) : PathLS -&gt; ModTupRngElt
5<->WeylWord(p) <->text1170.htm#13075<->WeylWord(p) : PathLS -&gt; SeqEnum
5<->IsZero(p) <->text1170.htm#13076<->IsZero(p) : PathLS -&gt; BoolElt
5<->p1 eq p2 <->text1170.htm#13077<->p1 eq p2 : PathLS, PathLS -&gt; BoolElt
4<->AlgQEA_LSPaths (Example H108E11)<->text1170.htm#13078<->AlgQEA_LSPaths (Example H108E11)
4<->Example-LSPaths :<->text1170.htm#13078<->Example-LSPaths :: AlgQEA_LSPaths (Example H108E11)
5<->CrystalGraph(R, hw) <->text1170.htm#13079<->CrystalGraph(R, hw) : RootDtm, SeqEnum -&gt; GrphDir, SeqEnum
4<->AlgQEA_CrystGrph (Example H108E12)<->text1170.htm#13080<->AlgQEA_CrystGrph (Example H108E12)
4<->Example-CrystGrph :<->text1170.htm#13080<->Example-CrystGrph :: AlgQEA_CrystGrph (Example H108E12)
3<->path-model :<->text1170.htm<->path-model :: The Path Model (QUANTUM GROUPS)
3<->canbas :<->text1171.htm<->canbas :: Elements of the Canonical Basis (QUANTUM GROUPS)
5<->CanonicalElements(U, w) <->text1171.htm#13082<->CanonicalElements(U, w) : AlgQUE, SeqEnum -&gt; SeqEnum
4<->AlgQEA_QGrpAutoms (Example H108E13)<->text1171.htm#13083<->AlgQEA_QGrpAutoms (Example H108E13)
4<->Example-QGrpAutoms :<->text1171.htm#13083<->Example-QGrpAutoms :: AlgQEA_QGrpAutoms (Example H108E13)
4<->AlgQEA_QGrpAutoms2 (Example H108E14)<->text1171.htm#13084<->AlgQEA_QGrpAutoms2 (Example H108E14)
4<->Example-QGrpAutoms2 :<->text1171.htm#13084<->Example-QGrpAutoms2 :: AlgQEA_QGrpAutoms2 (Example H108E14)
3<->canbas :<->text1171.htm<->canbas :: Elements of the Canonical Basis (QUANTUM GROUPS)
3<->q :<->text1172.htm<->q :: Homomorphisms to the Universal Enveloping Algebra (QUANTUM GROUPS)
5<->QUAToIntegralUEAMap(U) <->text1172.htm#13086<->QUAToIntegralUEAMap(U) : AlgQUE -&gt; Map
4<->AlgQEA_QEAtoUEA (Example H108E15)<->text1172.htm#13087<->AlgQEA_QEAtoUEA (Example H108E15)
4<->Example-QEAtoUEA :<->text1172.htm#13087<->Example-QEAtoUEA :: AlgQEA_QEAtoUEA (Example H108E15)
3<->q :<->text1172.htm<->q :: Homomorphisms to the Universal Enveloping Algebra (QUANTUM GROUPS)
3<->quantum_groups :<->text1159.htm<->quantum_groups :: QUANTUM GROUPS
3<->groups-lie-type :<->text1175.htm<->groups-lie-type :: GROUPS OF LIE TYPE
3<->group of Lie type :<->text1176.htm<->group of Lie type :: Introduction (GROUPS OF LIE TYPE)
3<->group!Lie type :<->text1176.htm<->group!Lie type :: Introduction (GROUPS OF LIE TYPE)
3<->Lie group :<->text1176.htm<->Lie group :: Introduction (GROUPS OF LIE TYPE)
3<->algebraic group :<->text1176.htm<->algebraic group :: Introduction (GROUPS OF LIE TYPE)
3<->group of Lie type!finite :<->text1176.htm<->group of Lie type!finite :: Introduction (GROUPS OF LIE TYPE)
3<->introduction :<->text1176.htm<->introduction :: Introduction (GROUPS OF LIE TYPE)
3<->Steinberg
presentation :<->text1176.htm#13092<->Steinberg
presentation :: The Steinberg Presentation (GROUPS OF LIE TYPE)
3<->torus :<->text1176.htm#13092<->torus :: The Steinberg Presentation (GROUPS OF LIE TYPE)
3<->Weyl subgroup :<->text1176.htm#13092<->Weyl subgroup :: The Steinberg Presentation (GROUPS OF LIE TYPE)
3<->steinberg :<->text1176.htm#13092<->steinberg :: The Steinberg Presentation (GROUPS OF LIE TYPE)
3<->Bruhat normalisation :<->text1176.htm#13093<->Bruhat normalisation :: Bruhat Normalisation (GROUPS OF LIE TYPE)
3<->bruhat :<->text1176.htm#13093<->bruhat :: Bruhat Normalisation (GROUPS OF LIE TYPE)
3<->bruhat :<->text1176.htm#13094<->bruhat :: Twisted Groups of Lie type (GROUPS OF LIE TYPE)
3<->introduction :<->text1176.htm<->introduction :: Introduction (GROUPS OF LIE TYPE)
3<->construction :<->text1177.htm<->construction :: Constructing Groups of  Lie Type (GROUPS OF LIE TYPE)
3<->construction :<->text1177.htm#13096<->construction :: Split Groups (GROUPS OF LIE TYPE)
5<->GroupOfLieType(N, k) <->text1177.htm#13097<->GroupOfLieType(N, k) : MonStgElt, Rng -&gt; GrpLie
5<->GroupOfLieType(N, q) <->text1177.htm#13098<->GroupOfLieType(N, q) : MonStgElt, RngIntElt -&gt; GrpLie
5<->GroupOfLieType(W, k) <->text1177.htm#13099<->GroupOfLieType(W, k) : GrpMat, Rng -> GrpLie
5<->GroupOfLieType(W, k) <->text1177.htm#13099<->GroupOfLieType(W, k) : GrpPermCox, Rng -&gt; GrpLie
5<->GroupOfLieType(W, q) <->text1177.htm#13100<->GroupOfLieType(W, q) : GrpMat, RngIntElt -> GrpLie
5<->GroupOfLieType(W, q) <->text1177.htm#13100<->GroupOfLieType(W, q) : GrpPermCox, RngIntElt -&gt; GrpLie
5<->GroupOfLieType(R, k) <->text1177.htm#13101<->GroupOfLieType(R, k) : RootDtm, Rng -&gt; GrpLie
5<->GroupOfLieType(R, q) <->text1177.htm#13102<->GroupOfLieType(R, q) : RootDtm, RngIntElt -&gt; GrpLie
5<->GroupOfLieType(D, k) <->text1177.htm#13103<->GroupOfLieType(D, k) : GrphDir, Rng -> GrpLie
5<->GroupOfLieType(C, k) <->text1177.htm#13103<->GroupOfLieType(C, k) : Mtrx, Rng -&gt; GrpLie
5<->GroupOfLieType(D, q) <->text1177.htm#13104<->GroupOfLieType(D, q) : GrphDir, RngIntElt -> GrpLie
5<->GroupOfLieType(C, q) <->text1177.htm#13104<->GroupOfLieType(C, q) : Mtrx, RngIntElt -&gt; GrpLie
5<->SimpleGroupOfLieType(X, n, k) <->text1177.htm#13105<->SimpleGroupOfLieType(X, n, k) : MonStgElt, RngIntElt, Rng -&gt; GrpLie
5<->SimpleGroupOfLieType(X, n, q) <->text1177.htm#13106<->SimpleGroupOfLieType(X, n, q) : MonStgElt, RngIntElt, RngIntElt -&gt; GrpLie
5<->GroupOfLieType(L) <->text1177.htm#13107<->GroupOfLieType(L) : AlgLie -&gt; GrpLie
5<->IsNormalising(G) <->text1177.htm#13108<->IsNormalising(G) : GrpLie -&gt; BoolElt
4<->GrpLie_Create (Example H109E1)<->text1177.htm#13109<->GrpLie_Create (Example H109E1)
4<->Example-Create :<->text1177.htm#13109<->Example-Create :: GrpLie_Create (Example H109E1)
3<->construction :<->text1177.htm#13096<->construction :: Split Groups (GROUPS OF LIE TYPE)
3<->galois-cohomology :<->text1177.htm#13110<->galois-cohomology :: Galois Cohomology (GROUPS OF LIE TYPE)
5<->GammaGroup(k, G) <->text1177.htm#13111<->GammaGroup(k, G) : Fld, GrpLie -&gt; GGrp
5<->GammaGroup(k, A) <->text1177.htm#13112<->GammaGroup(k, A) : Fld, GrpLieAuto -&gt; GGrp
5<->ActingGroup(A) <->text1177.htm#13113<->ActingGroup(A) : GrpLieAuto -> Grp, Map
5<->ActingGroup(G) <->text1177.htm#13113<->ActingGroup(G) : GrpLie -&gt; Grp, Map
5<->ExtendGaloisCocycle(c) <->text1177.htm#13114<->ExtendGaloisCocycle(c) : OneCoC -&gt; OneCoC
5<->GaloisCohomology(A) <->text1177.htm#13115<->GaloisCohomology(A) : GGrp -&gt; SeqEnum
5<->IsInTwistedForm(x, c) <->text1177.htm#13116<->IsInTwistedForm(x, c) : GrpLieElt, OneCoC -&gt; BoolElt
4<->GrpLie_GalCohom (Example H109E2)<->text1177.htm#13117<->GrpLie_GalCohom (Example H109E2)
4<->Example-GalCohom :<->text1177.htm#13117<->Example-GalCohom :: GrpLie_GalCohom (Example H109E2)
3<->galois-cohomology :<->text1177.htm#13110<->galois-cohomology :: Galois Cohomology (GROUPS OF LIE TYPE)
3<->twisted-grps-of-lie-type :<->text1177.htm#13118<->twisted-grps-of-lie-type :: Twisted Groups (GROUPS OF LIE TYPE)
5<->TwistedGroupOfLieType(c) <->text1177.htm#13119<->TwistedGroupOfLieType(c) : OneCoC -&gt; GrpLie
5<->TwistedGroupOfLieType(R, k, K) <->text1177.htm#13120<->TwistedGroupOfLieType(R, k, K) : RootDtm, Rng, Rng-&gt; GrpLie
5<->TwistedGroupOfLieType(R, q, r) <->text1177.htm#13121<->TwistedGroupOfLieType(R, q, r) : RootDtm, RngIntElt, RngIntElt -&gt; GrpLie
5<->CoefficientRing :: BaseRing(G) <->text1177.htm#13122<->CoefficientRing :: BaseRing(G) : GrpLie -&gt; Rng
5<->BaseRing(G) <->text1177.htm#13122<->BaseRing(G) : GrpLie -&gt; Rng
5<->DefRing(G) <->text1177.htm#13123<->DefRing(G) : GrpLie -&gt; Rng
5<->UntwistedOvergroup(G) <->text1177.htm#13124<->UntwistedOvergroup(G) : GrpLie -&gt; GrpLie
4<->GrpLie_TwistedGrpLieType (Example H109E3)<->text1177.htm#13125<->GrpLie_TwistedGrpLieType (Example H109E3)
4<->Example-TwistedGrpLieType :<->text1177.htm#13125<->Example-TwistedGrpLieType :: GrpLie_TwistedGrpLieType (Example H109E3)
5<->RelativeRootElement(G,delta,t) <->text1177.htm#13126<->RelativeRootElement(G,delta,t) : GrpLie, RngIntElt, [FldElt] -&gt; GrpLieElt
4<->GrpLie_RelativeRootElts (Example H109E4)<->text1177.htm#13127<->GrpLie_RelativeRootElts (Example H109E4)
4<->Example-RelativeRootElts :<->text1177.htm#13127<->Example-RelativeRootElts :: GrpLie_RelativeRootElts (Example H109E4)
3<->twisted-grps-of-lie-type :<->text1177.htm#13118<->twisted-grps-of-lie-type :: Twisted Groups (GROUPS OF LIE TYPE)
3<->construction :<->text1177.htm<->construction :: Constructing Groups of  Lie Type (GROUPS OF LIE TYPE)
3<->operations :<->text1178.htm<->operations :: Operations on Groups of  Lie Type (GROUPS OF LIE TYPE)
5<->G eq H <->text1178.htm#13129<->G eq H : GrpLie, GrpLie -&gt; BoolElt
5<->G subset H <->text1178.htm#13130<->G subset H : GrpLie, GrpLie -&gt; BoolElt
5<->IsAlgebraicallyIsomorphic(G, H) <->text1178.htm#13131<->IsAlgebraicallyIsomorphic(G, H) : GrpLie, GrpLie -&gt; BoolElt, Map
5<->IsIsogenous(G, H) <->text1178.htm#13132<->IsIsogenous(G, H) : GrpLie, GrpLie -&gt; BoolElt
5<->IsCartanEquivalent(G, H) <->text1178.htm#13133<->IsCartanEquivalent(G, H) : GrpLie, GrpLie -&gt; BoolElt
5<->CoefficientRing :: BaseRing(G) <->text1178.htm#13134<->CoefficientRing :: BaseRing(G) : GrpLie -&gt; Rng
5<->BaseRing(G) <->text1178.htm#13134<->BaseRing(G) : GrpLie -&gt; Rng
5<->BaseExtend(G, K) <->text1178.htm#13135<->BaseExtend(G, K) : GrpLie, Rng -&gt; GrpLie, Map
5<->ChangeRing(G, K) <->text1178.htm#13136<->ChangeRing(G, K) : GrpLie, Rng -&gt; GrpLie
5<->Generators(G) <->text1178.htm#13137<->Generators(G) : GrpLie -&gt;
5<->Ngens :: NumberOfGenerators(G) <->text1178.htm#13138<->Ngens :: NumberOfGenerators(G) : GrpLie -&gt; RngIntElt
5<->NumberOfGenerators(G) <->text1178.htm#13138<->NumberOfGenerators(G) : GrpLie -&gt; RngIntElt
5<->AlgebraicGenerators(G) <->text1178.htm#13139<->AlgebraicGenerators(G) : GrpLie -&gt;
5<->Nalggens :: NumberOfAlgebraicGenerators(G) <->text1178.htm#13140<->Nalggens :: NumberOfAlgebraicGenerators(G) : GrpLie -&gt; RngIntElt
5<->NumberOfAlgebraicGenerators(G) <->text1178.htm#13140<->NumberOfAlgebraicGenerators(G) : GrpLie -&gt; RngIntElt
4<->GrpLie_Generators (Example H109E5)<->text1178.htm#13141<->GrpLie_Generators (Example H109E5)
4<->Example-Generators :<->text1178.htm#13141<->Example-Generators :: GrpLie_Generators (Example H109E5)
5<-># :: Order(G) <->text1178.htm#13142<-># :: Order(G) : GrpLie -&gt; RngIntElt
5<->Order(G) <->text1178.htm#13142<->Order(G) : GrpLie -&gt; RngIntElt
5<->FactoredOrder(G) <->text1178.htm#13143<->FactoredOrder(G) : GrpLie -&gt; RngIntElt
5<->Dimension(G) <->text1178.htm#13144<->Dimension(G) : GrpLie -&gt; RngIntElt
4<->GrpLie_Orders (Example H109E6)<->text1178.htm#13145<->GrpLie_Orders (Example H109E6)
4<->Example-Orders :<->text1178.htm#13145<->Example-Orders :: GrpLie_Orders (Example H109E6)
5<->CartanName(G) <->text1178.htm#13146<->CartanName(G) : GrpLie -&gt; Mtrx
5<->RootDatum(G) <->text1178.htm#13147<->RootDatum(G) : GrpLie -&gt; RootDtm
5<->DynkinDiagram(G) <->text1178.htm#13148<->DynkinDiagram(G) : GrpLie -&gt;
5<->CoxeterDiagram(G) <->text1178.htm#13149<->CoxeterDiagram(G) : GrpLie -&gt;
5<->CoxeterMatrix(G) <->text1178.htm#13150<->CoxeterMatrix(G) : GrpLie -&gt; AlgMatElt
5<->CoxeterGraph(G) <->text1178.htm#13151<->CoxeterGraph(G) : GrpLie -&gt; GrphUnd
5<->CartanMatrix(G) <->text1178.htm#13152<->CartanMatrix(G) : GrpLie -&gt; GrphUnd
5<->DynkinDigraph(G) <->text1178.htm#13153<->DynkinDigraph(G) : GrpLie -&gt; GrphUnd
5<->ReductiveRank :: Rank(G) <->text1178.htm#13154<->ReductiveRank :: Rank(G) : GrpLie -&gt; RngIntElt
5<->Rank(G) <->text1178.htm#13154<->Rank(G) : GrpLie -&gt; RngIntElt
5<->SemisimpleRank(G) <->text1178.htm#13155<->SemisimpleRank(G) : GrpLie -&gt; RngIntElt
5<->CoxeterNumber(G) <->text1178.htm#13156<->CoxeterNumber(G) : GrpLie -&gt; RngIntElt
5<->WeylGroup(GrpPermCox, G) <->text1178.htm#13157<->WeylGroup(GrpPermCox, G) : Cat, GrpLie  -> GrpPermCox
5<->WeylGroup(G) <->text1178.htm#13157<->WeylGroup(G) : GrpLie  -&gt; GrpPermCox
5<->WeylGroup(GrpFPCox, G) <->text1178.htm#13158<->WeylGroup(GrpFPCox, G) : Cat, GrpLie  -&gt; GrpFPCox
5<->WeylGroup(GrpMat, G) <->text1178.htm#13159<->WeylGroup(GrpMat, G) : Cat, GrpLie  -&gt; GrpMat
5<->FundamentalGroup(G) <->text1178.htm#13160<->FundamentalGroup(G) : GrpLie -&gt; GrpAb, Map
5<->IsogenyGroup(G) <->text1178.htm#13161<->IsogenyGroup(G) : GrpLie -&gt; GrpAb, Map
5<->CoisogenyGroup(G) <->text1178.htm#13162<->CoisogenyGroup(G) : GrpLie -&gt; GrpAb, Map
3<->operations :<->text1178.htm<->operations :: Operations on Groups of  Lie Type (GROUPS OF LIE TYPE)
3<->element-properties :<->text1179.htm<->element-properties :: Properties of Groups of  Lie Type (GROUPS OF LIE TYPE)
5<->IsFinite(G) <->text1179.htm#13164<->IsFinite(G) : GrpLie -&gt; BoolElt
5<->IsAbelian(G) <->text1179.htm#13165<->IsAbelian(G) : GrpLie -&gt; BoolElt
5<->IsSimple(G) <->text1179.htm#13166<->IsSimple(G) : GrpLie -&gt; BoolElt
5<->IsSimplyLaced(G) <->text1179.htm#13167<->IsSimplyLaced(G) : GrpLie-&gt; BoolElt
5<->IsSemisimple(G) <->text1179.htm#13168<->IsSemisimple(G) : GrpLie-&gt; BoolElt
5<->IsAdjoint(G) <->text1179.htm#13169<->IsAdjoint(G) : GrpLie -&gt; BoolElt
5<->IsWeaklyAdjoint(G) <->text1179.htm#13170<->IsWeaklyAdjoint(G) : GrpLie -&gt; BoolElt
5<->IsSimplyConnected(G) <->text1179.htm#13171<->IsSimplyConnected(G) : GrpLie -&gt; BoolElt
5<->IsWeaklySimplyConnected(G) <->text1179.htm#13172<->IsWeaklySimplyConnected(G) : GrpLie -&gt; BoolElt
5<->IsSplit(G) <->text1179.htm#13173<->IsSplit(G) : GrpLie -&gt; BoolElt
5<->IsTwisted(G) <->text1179.htm#13174<->IsTwisted(G) : GrpLie -&gt; BoolElt
3<->element-properties :<->text1179.htm<->element-properties :: Properties of Groups of  Lie Type (GROUPS OF LIE TYPE)
3<->element-construction :<->text1180.htm<->element-construction :: Constructing Elements (GROUPS OF LIE TYPE)
5<->elt<G | L> <->text1180.htm#13176<->elt&lt;G | L&gt; : GrpLie, List -&gt; GrpMatElt
5<->Identity(G) <->text1180.htm#13177<->Identity(G) : GrpLie -&gt; GrpLieElt
5<->! :: Identity(G) <->text1180.htm#13177<->! :: Identity(G) : GrpLie -&gt; GrpLieElt
5<->elt :: Identity(G) <->text1180.htm#13177<->elt :: Identity(G) : GrpLie -&gt; GrpLieElt
5<->Identity(G) <->text1180.htm#13177<->Identity(G) : GrpLie -&gt; GrpLieElt
4<->GrpLie_ElementCreate (Example H109E7)<->text1180.htm#13178<->GrpLie_ElementCreate (Example H109E7)
4<->Example-ElementCreate :<->text1180.htm#13178<->Example-ElementCreate :: GrpLie_ElementCreate (Example H109E7)
5<->TorusTerm(G, r, t) <->text1180.htm#13179<->TorusTerm(G, r, t) : GrpLie, RngIntElt, RngElt -&gt; GrpLieElt
5<->CoxeterElement(G) <->text1180.htm#13180<->CoxeterElement(G) : GrpLie -&gt; GrpPermElt
5<->Random(G) <->text1180.htm#13181<->Random(G) : GrpLie -&gt; GrpLieElt
5<->Eltlist(g) <->text1180.htm#13182<->Eltlist(g) : GrpLieElt -&gt; List
5<->CenterPolynomials :: CentrePolynomials(G) <->text1180.htm#13183<->CenterPolynomials :: CentrePolynomials(G) : GrpLie -&gt;
5<->CentrePolynomials(G) <->text1180.htm#13183<->CentrePolynomials(G) : GrpLie -&gt;
4<->GrpLie_Centre (Example H109E8)<->text1180.htm#13184<->GrpLie_Centre (Example H109E8)
4<->Example-Centre :<->text1180.htm#13184<->Example-Centre :: GrpLie_Centre (Example H109E8)
3<->element-construction :<->text1180.htm<->element-construction :: Constructing Elements (GROUPS OF LIE TYPE)
3<->element-operators :<->text1181.htm<->element-operators :: Operations on Elements (GROUPS OF LIE TYPE)
3<->element-operators :<->text1181.htm#13186<->element-operators :: Basic Operations (GROUPS OF LIE TYPE)
5<->g * h <->text1181.htm#13187<->g * h : GrpLieElt, GrpLieElt -&gt; GrpLieElt
4<->GrpLie_GrpLieEltProduct (Example H109E9)<->text1181.htm#13188<->GrpLie_GrpLieEltProduct (Example H109E9)
4<->Example-GrpLieEltProduct :<->text1181.htm#13188<->Example-GrpLieEltProduct :: GrpLie_GrpLieEltProduct (Example H109E9)
5<->Inverse :: g ^ -1 <->text1181.htm#13189<->Inverse :: g ^ -1 : GrpLieElt -&gt; GrpLieElt
5<->g ^ -1 <->text1181.htm#13189<->g ^ -1 : GrpLieElt -&gt; GrpLieElt
5<->g ^ n <->text1181.htm#13190<->g ^ n : GrpLieElt, RngIntElt -&gt; GrpLieElt
5<->g ^ h <->text1181.htm#13191<->g ^ h : GrpLieElt, GrpLieElt -&gt; GrpLieElt
5<->Commutator :: (g,  h) <->text1181.htm#13192<->Commutator :: (g,  h) : GrpLieElt, GrpLieElt -&gt; GrpLieElt
5<->(,) :: (g,  h) <->text1181.htm#13192<->(,) :: (g,  h) : GrpLieElt, GrpLieElt -&gt; GrpLieElt
5<->Normalize :: Normalise(simg) <->text1181.htm#13193<->Normalize :: Normalise(simg) : GrpLieElt -&gt;
5<->Normalise(g) <->text1181.htm#13193<->Normalise(g) : GrpLieElt -> GrpLieElt
5<->Normalize(g) : GrpLieElt -> GrpLieElt :: Normalise(simg) <->text1181.htm#13193<->Normalize(g) : GrpLieElt -> GrpLieElt :: Normalise(simg) : GrpLieElt -&gt;
5<->Normalise(simg) <->text1181.htm#13193<->Normalise(simg) : GrpLieElt -&gt;
4<->GrpLie_GrpLieEltArith (Example H109E10)<->text1181.htm#13194<->GrpLie_GrpLieEltArith (Example H109E10)
4<->Example-GrpLieEltArith :<->text1181.htm#13194<->Example-GrpLieEltArith :: GrpLie_GrpLieEltArith (Example H109E10)
3<->element-operators :<->text1181.htm#13186<->element-operators :: Basic Operations (GROUPS OF LIE TYPE)
3<->element-operators :<->text1181.htm#13195<->element-operators :: Decompositions (GROUPS OF LIE TYPE)
5<->Bruhat(g) <->text1181.htm#13196<->Bruhat(g) : GrpLieElt -&gt; GrpLieElt, GrpLieElt, GrpLieElt, GrpLieElt
4<->GrpLie_Bruhat (Example H109E11)<->text1181.htm#13197<->GrpLie_Bruhat (Example H109E11)
4<->Example-Bruhat :<->text1181.htm#13197<->Example-Bruhat :: GrpLie_Bruhat (Example H109E11)
5<->MultiplicativeJordanDecomposition(x) <->text1181.htm#13198<->MultiplicativeJordanDecomposition(x) : GrpLieElt -&gt; GrpLieElt, GrpLieElt
3<->element-operators :<->text1181.htm#13195<->element-operators :: Decompositions (GROUPS OF LIE TYPE)
3<->element-operators :<->text1181.htm#13199<->element-operators :: Conjugacy and Cohomology (GROUPS OF LIE TYPE)
5<->ConjugateIntoTorus(g) <->text1181.htm#13200<->ConjugateIntoTorus(g) : GrpLieElt -&gt; GrpLieElt, GrpLieElt
5<->ConjugateIntoBorel(g) <->text1181.htm#13201<->ConjugateIntoBorel(g) : GrpLieElt -&gt; GrpLieElt, GrpLieElt
5<->Lang(c, q) <->text1181.htm#13202<->Lang(c, q) : GrpLieElt, RngIntElt -&gt; GrpLieElt
3<->element-operators :<->text1181.htm#13199<->element-operators :: Conjugacy and Cohomology (GROUPS OF LIE TYPE)
3<->element-operators :<->text1181.htm<->element-operators :: Operations on Elements (GROUPS OF LIE TYPE)
3<->element-operators :<->text1182.htm<->element-operators :: Properties of Elements (GROUPS OF LIE TYPE)
5<->IsSemisimple(x) <->text1182.htm#13204<->IsSemisimple(x) : GrpLieElt -&gt; BoolElt
5<->IsUnipotent(x) <->text1182.htm#13205<->IsUnipotent(x) : GrpLieElt -&gt; BoolElt
5<->IsCentral(x) <->text1182.htm#13206<->IsCentral(x) : GrpLieElt -&gt; BoolElt
3<->element-operators :<->text1182.htm<->element-operators :: Properties of Elements (GROUPS OF LIE TYPE)
3<->root :<->text1183.htm<->root :: Roots, Coroots and Weights (GROUPS OF LIE TYPE)
3<->roots-coroots-weights :<->text1183.htm<->roots-coroots-weights :: Roots, Coroots and Weights (GROUPS OF LIE TYPE)
3<->access :<->text1183.htm#13208<->access :: Accessing Roots and Coroots (GROUPS OF LIE TYPE)
5<->CorootSpace :: RootSpace(G) <->text1183.htm#13209<->CorootSpace :: RootSpace(G) : GrpLie -&gt; Lat
5<->RootSpace(G) <->text1183.htm#13209<->RootSpace(G) : GrpLie -&gt; Lat
5<->SimpleCoroots :: SimpleRoots(G) <->text1183.htm#13210<->SimpleCoroots :: SimpleRoots(G) : GrpLie -&gt; Mtrx
5<->SimpleRoots(G) <->text1183.htm#13210<->SimpleRoots(G) : GrpLie -&gt; Mtrx
5<->NumPosRoots :: NumberOfPositiveRoots(G) <->text1183.htm#13211<->NumPosRoots :: NumberOfPositiveRoots(G) : GrpLie -&gt; RngIntElt
5<->NumberOfPositiveRoots(G) <->text1183.htm#13211<->NumberOfPositiveRoots(G) : GrpLie -&gt; RngIntElt
5<->Coroots :: Roots(G) <->text1183.htm#13212<->Coroots :: Roots(G) : GrpLie -&gt; (@@)
5<->Roots(G) <->text1183.htm#13212<->Roots(G) : GrpLie -&gt; (@@)
5<->PositiveCoroots :: PositiveRoots(G) <->text1183.htm#13213<->PositiveCoroots :: PositiveRoots(G) : GrpLie -&gt; (@@)
5<->PositiveRoots(G) <->text1183.htm#13213<->PositiveRoots(G) : GrpLie -&gt; (@@)
5<->Coroot :: Root(G, r) <->text1183.htm#13214<->Coroot :: Root(G, r) : GrpLie, RngIntElt -&gt; (@@)
5<->Root(G, r) <->text1183.htm#13214<->Root(G, r) : GrpLie, RngIntElt -&gt; (@@)
5<->CorootPosition :: RootPosition(G, v) <->text1183.htm#13215<->CorootPosition :: RootPosition(G, v) : GrpLie, . -&gt; (@@)
5<->RootPosition(G, v) <->text1183.htm#13215<->RootPosition(G, v) : GrpLie, . -&gt; (@@)
4<->GrpLie_RootsCoroots (Example H109E12)<->text1183.htm#13216<->GrpLie_RootsCoroots (Example H109E12)
4<->Example-RootsCoroots :<->text1183.htm#13216<->Example-RootsCoroots :: GrpLie_RootsCoroots (Example H109E12)
5<->HighestLongRoot :: HighestRoot(G) <->text1183.htm#13217<->HighestLongRoot :: HighestRoot(G) : GrpLie -&gt; LatElt
5<->HighestRoot(G) <->text1183.htm#13217<->HighestRoot(G) : GrpLie -&gt; LatElt
5<->HighestShortRoot(G) <->text1183.htm#13218<->HighestShortRoot(G) : GrpLie  -&gt; LatElt
4<->GrpLie_HeighestRoots (Example H109E13)<->text1183.htm#13219<->GrpLie_HeighestRoots (Example H109E13)
4<->Example-HeighestRoots :<->text1183.htm#13219<->Example-HeighestRoots :: GrpLie_HeighestRoots (Example H109E13)
3<->access :<->text1183.htm#13208<->access :: Accessing Roots and Coroots (GROUPS OF LIE TYPE)
3<->rootrefl :<->text1183.htm#13220<->rootrefl :: Reflections (GROUPS OF LIE TYPE)
5<->Reflections(G) <->text1183.htm#13221<->Reflections(G) : GrpLie -&gt; GrpLieElt
5<->Reflection(G, r) <->text1183.htm#13222<->Reflection(G, r) : GrpLie, RngIntElt -&gt; GrpLieElt
4<->GrpLie_Reflections (Example H109E14)<->text1183.htm#13223<->GrpLie_Reflections (Example H109E14)
4<->Example-Reflections :<->text1183.htm#13223<->Example-Reflections :: GrpLie_Reflections (Example H109E14)
3<->rootrefl :<->text1183.htm#13220<->rootrefl :: Reflections (GROUPS OF LIE TYPE)
3<->ops-root-coroot :<->text1183.htm#13224<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (GROUPS OF LIE TYPE)
5<->CorootHeight :: RootHeight(G, r) <->text1183.htm#13225<->CorootHeight :: RootHeight(G, r) : GrpLie, RngIntElt -&gt; RngIntElt
5<->RootHeight(G, r) <->text1183.htm#13225<->RootHeight(G, r) : GrpLie, RngIntElt -&gt; RngIntElt
5<->CorootNorms :: RootNorms(G) <->text1183.htm#13226<->CorootNorms :: RootNorms(G) : GrpLie -&gt; [RngIntElt]
5<->RootNorms(G) <->text1183.htm#13226<->RootNorms(G) : GrpLie -&gt; [RngIntElt]
5<->CorootNorm :: RootNorm(G, r) <->text1183.htm#13227<->CorootNorm :: RootNorm(G, r) : GrpLie, RngIntElt -&gt; RngIntElt
5<->RootNorm(G, r) <->text1183.htm#13227<->RootNorm(G, r) : GrpLie, RngIntElt -&gt; RngIntElt
5<->IsLongRoot(G, r) <->text1183.htm#13228<->IsLongRoot(G, r) : GrpLie, RngIntElt -&gt; BoolElt
5<->IsShortRoot(G, r) <->text1183.htm#13229<->IsShortRoot(G, r) : GrpLie, RngIntElt -&gt; BoolElt
5<->AdditiveOrder(G) <->text1183.htm#13230<->AdditiveOrder(G) : GrpLie -&gt; SeqEnum
4<->GrpLie_AdditiveOrder (Example H109E15)<->text1183.htm#13231<->GrpLie_AdditiveOrder (Example H109E15)
4<->Example-AdditiveOrder :<->text1183.htm#13231<->Example-AdditiveOrder :: GrpLie_AdditiveOrder (Example H109E15)
3<->ops-root-coroot :<->text1183.htm#13224<->ops-root-coroot :: Operations and Properties for Root and Coroot Indices (GROUPS OF LIE TYPE)
3<->weights :<->text1183.htm#13232<->weights :: Weights (GROUPS OF LIE TYPE)
5<->CoweightLattice :: WeightLattice(G) <->text1183.htm#13233<->CoweightLattice :: WeightLattice(G) : GrpLie -&gt; Lat
5<->WeightLattice(G) <->text1183.htm#13233<->WeightLattice(G) : GrpLie -&gt; Lat
5<->FundamentalCoweights :: FundamentalWeights(G) <->text1183.htm#13234<->FundamentalCoweights :: FundamentalWeights(G) : GrpLie -&gt; Mtrx
5<->FundamentalWeights(G) <->text1183.htm#13234<->FundamentalWeights(G) : GrpLie -&gt; Mtrx
5<->DominantWeight(G, v) <->text1183.htm#13235<->DominantWeight(G, v) : GrpLie, . -&gt; ModTupFldElt, GrpFPCoxElt
3<->weights :<->text1183.htm#13232<->weights :: Weights (GROUPS OF LIE TYPE)
3<->roots-coroots-weights :<->text1183.htm<->roots-coroots-weights :: Roots, Coroots and Weights (GROUPS OF LIE TYPE)
3<->create-new-root-datum :<->text1184.htm<->create-new-root-datum :: Building Groups of Lie Type (GROUPS OF LIE TYPE)
5<->SubsystemSubgroup(G, a) <->text1184.htm#13237<->SubsystemSubgroup(G, a) : GrpLie, SetEnum -&gt; RootDtm
5<->SubsystemSubgroup(G, s) <->text1184.htm#13238<->SubsystemSubgroup(G, s) : GrpLie, SeqEnum -&gt; RootDtm
4<->GrpLie_RootSubdata (Example H109E16)<->text1184.htm#13239<->GrpLie_RootSubdata (Example H109E16)
4<->Example-RootSubdata :<->text1184.htm#13239<->Example-RootSubdata :: GrpLie_RootSubdata (Example H109E16)
5<->DirectProduct(G1, G2) <->text1184.htm#13240<->DirectProduct(G1, G2) : GrpLie, GrpLie -&gt; GrpLie
5<->Dual(G) <->text1184.htm#13241<->Dual(G) : GrpLie -&gt; GrpLie
5<->SolubleRadical(G) <->text1184.htm#13242<->SolubleRadical(G) : GrpLie -&gt; GrpLie
5<->StandardMaximalTorus(G) <->text1184.htm#13243<->StandardMaximalTorus(G) : GrpLie -&gt; GrpLie
4<->GrpLie_DirectProductDualRadical (Example H109E17)<->text1184.htm#13244<->GrpLie_DirectProductDualRadical (Example H109E17)
4<->Example-DirectProductDualRadical :<->text1184.htm#13244<->Example-DirectProductDualRadical :: GrpLie_DirectProductDualRadical (Example H109E17)
3<->create-new-root-datum :<->text1184.htm<->create-new-root-datum :: Building Groups of Lie Type (GROUPS OF LIE TYPE)
3<->automorphisms :<->text1185.htm<->automorphisms :: Automorphisms (GROUPS OF LIE TYPE)
3<->automorphisms-basic :<->text1185.htm#13246<->automorphisms-basic :: Basic Functionality (GROUPS OF LIE TYPE)
5<->AutomorphismGroup(G) <->text1185.htm#13247<->AutomorphismGroup(G) : GrpLie -&gt; GrpLieAuto
5<->One :: IdentityAutomorphism(G) <->text1185.htm#13248<->One :: IdentityAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt
5<->IdentityAutomorphism(G) <->text1185.htm#13248<->IdentityAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt
5<->Mapping(a) <->text1185.htm#13249<->Mapping(a) : GrpLieAutoElt -&gt; Map
5<->Automorphism(m) <->text1185.htm#13250<->Automorphism(m) : Map -&gt; GrpLieAutoElt
5<->h * g <->text1185.htm#13251<->h * g : GrpLieAutoElt, GrpLieAutoElt -&gt; GrpLieAutoElt
5<->h ^ n <->text1185.htm#13252<->h ^ n : GrpLieAutoElt, RngIntElt -&gt; GrpLieAutoElt
5<->g ^ h <->text1185.htm#13253<->g ^ h : GrpLieAutoElt, GrpLieAutoElt -&gt; GrpLieAutoElt
5<->Codomain :: Domain(A) <->text1185.htm#13254<->Codomain :: Domain(A) : GrpLieAuto -&gt; GrpLie
5<->Domain(h) <->text1185.htm#13254<->Domain(h) : GrpLieAutoElt -> GrpLie
5<->Codomain(h) : GrpLieAutoElt -> GrpLie :: Domain(A) <->text1185.htm#13254<->Codomain(h) : GrpLieAutoElt -> GrpLie :: Domain(A) : GrpLieAuto -&gt; GrpLie
5<->Domain(A) <->text1185.htm#13254<->Domain(A) : GrpLieAuto -&gt; GrpLie
3<->automorphisms-basic :<->text1185.htm#13246<->automorphisms-basic :: Basic Functionality (GROUPS OF LIE TYPE)
3<->automorphisms-special :<->text1185.htm#13255<->automorphisms-special :: Constructing Special  Automorphisms (GROUPS OF LIE TYPE)
5<->InnerAutomorphism(G, x) <->text1185.htm#13256<->InnerAutomorphism(G, x) : GrpLie, GrpLieElt -&gt; Map
5<->DiagonalAutomorphism(G, v) <->text1185.htm#13257<->DiagonalAutomorphism(G, v) : GrpLie, ModTupRngElt -&gt; Map
5<->DiagramAutomorphism :: GraphAutomorphism(G, p) <->text1185.htm#13258<->DiagramAutomorphism :: GraphAutomorphism(G, p) : GrpLie, GrpPermElt -&gt; Map
5<->GraphAutomorphism(G, p) <->text1185.htm#13258<->GraphAutomorphism(G, p) : GrpLie, GrpPermElt -&gt; Map
5<->FieldAutomorphism(G, sigma) <->text1185.htm#13259<->FieldAutomorphism(G, sigma) : GrpLie, Map -&gt; Map
5<->RandomAutomorphism(G) <->text1185.htm#13260<->RandomAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt
5<->DualityAutomorphism(G) <->text1185.htm#13261<->DualityAutomorphism(G) : GrpLie -&gt; GrpLieAutoElt
5<->FrobeniusMap(G,q) <->text1185.htm#13262<->FrobeniusMap(G,q) : GrpLie, RngIntElt -&gt; GrpLieAutoElt
3<->automorphisms-special :<->text1185.htm#13255<->automorphisms-special :: Constructing Special  Automorphisms (GROUPS OF LIE TYPE)
3<->automorphisms-ops :<->text1185.htm#13263<->automorphisms-ops :: Operations and Properties of Automorphisms (GROUPS OF LIE TYPE)
5<->DecomposeAutomorphism(h) <->text1185.htm#13264<->DecomposeAutomorphism(h) : GrpLieAutoElt -&gt; GrpLieAutoElt, GrpLieAutoElt,GrpLieAutoElt, Rec
5<->IsAlgebraic(h) <->text1185.htm#13265<->IsAlgebraic(h) : GrpLieAutoElt -&gt; BoolElt
4<->GrpLie_Automorphism (Example H109E18)<->text1185.htm#13266<->GrpLie_Automorphism (Example H109E18)
4<->Example-Automorphism :<->text1185.htm#13266<->Example-Automorphism :: GrpLie_Automorphism (Example H109E18)
3<->automorphisms-ops :<->text1185.htm#13263<->automorphisms-ops :: Operations and Properties of Automorphisms (GROUPS OF LIE TYPE)
3<->automorphisms :<->text1185.htm<->automorphisms :: Automorphisms (GROUPS OF LIE TYPE)
3<->homomorphism :<->text1186.htm<->homomorphism :: Algebraic Homomorphisms (GROUPS OF LIE TYPE)
5<->GroupOfLieTypeHomomorphism(phi, k) <->text1186.htm#13268<->GroupOfLieTypeHomomorphism(phi, k) : Map, Rng -&gt; .
4<->GrpLie_CreatingRootDataHomomorphisms (Example H109E19)<->text1186.htm#13269<->GrpLie_CreatingRootDataHomomorphisms (Example H109E19)
4<->Example-CreatingRootDataHomomorphisms :<->text1186.htm#13269<->Example-CreatingRootDataHomomorphisms :: GrpLie_CreatingRootDataHomomorphisms (Example H109E19)
3<->homomorphism :<->text1186.htm<->homomorphism :: Algebraic Homomorphisms (GROUPS OF LIE TYPE)
3<->twisted-tori :<->text1187.htm<->twisted-tori :: Twisted Tori (GROUPS OF LIE TYPE)
5<->TwistedTorusOrder(R, w) <->text1187.htm#13271<->TwistedTorusOrder(R, w) : RootDtm, GrpPermElt -&gt; SeqEnum
5<->TwistedToriOrders(R) <->text1187.htm#13272<->TwistedToriOrders(R) : RootDtm -> SeqEnum
5<->TwistedToriOrders(G) <->text1187.htm#13272<->TwistedToriOrders(G) : GrpLie -&gt; SeqEnum
5<->TwistedTorus(G, w) <->text1187.htm#13273<->TwistedTorus(G, w) : GrpLie, GrpPermElt -&gt; List
5<->TwistedTori(G) <->text1187.htm#13274<->TwistedTori(G) : GrpLie -&gt; SeqEnum
4<->GrpLie_GrpLieTori (Example H109E20)<->text1187.htm#13275<->GrpLie_GrpLieTori (Example H109E20)
4<->Example-GrpLieTori :<->text1187.htm#13275<->Example-GrpLieTori :: GrpLie_GrpLieTori (Example H109E20)
4<->GrpLie_GrpLieTori2 (Example H109E21)<->text1187.htm#13276<->GrpLie_GrpLieTori2 (Example H109E21)
4<->Example-GrpLieTori2 :<->text1187.htm#13276<->Example-GrpLieTori2 :: GrpLie_GrpLieTori2 (Example H109E21)
3<->twisted-tori :<->text1187.htm<->twisted-tori :: Twisted Tori (GROUPS OF LIE TYPE)
3<->sylow-subgroups :<->text1188.htm<->sylow-subgroups :: Sylow Subgroups (GROUPS OF LIE TYPE)
5<->PrintSylowSubgroupStructure(G) <->text1188.htm#13278<->PrintSylowSubgroupStructure(G) : GrpLie -&gt;
5<->SylowSubgroup(G, p) <->text1188.htm#13279<->SylowSubgroup(G, p) : GrpLie, RngIntElt -&gt; List
4<->GrpLie_GrpLieSylow (Example H109E22)<->text1188.htm#13280<->GrpLie_GrpLieSylow (Example H109E22)
4<->Example-GrpLieSylow :<->text1188.htm#13280<->Example-GrpLieSylow :: GrpLie_GrpLieSylow (Example H109E22)
3<->sylow-subgroups :<->text1188.htm<->sylow-subgroups :: Sylow Subgroups (GROUPS OF LIE TYPE)
3<->representations :<->text1189.htm<->representations :: Representations (GROUPS OF LIE TYPE)
5<->StandardRepresentation(G) <->text1189.htm#13282<->StandardRepresentation(G) : GrpLie -&gt; Map
5<->AdjointRepresentation(G) <->text1189.htm#13283<->AdjointRepresentation(G) : GrpLie -&gt; Map, AlgLie
5<->LieAlgebra(G) <->text1189.htm#13284<->LieAlgebra(G) : GrpLie -&gt; AlgLie, Map
5<->HighestWeightRepresentation(G, v) <->text1189.htm#13285<->HighestWeightRepresentation(G, v) : GrpLie, . -&gt; Map
4<->GrpLie_StandardRepresentation (Example H109E23)<->text1189.htm#13286<->GrpLie_StandardRepresentation (Example H109E23)
4<->Example-StandardRepresentation :<->text1189.htm#13286<->Example-StandardRepresentation :: GrpLie_StandardRepresentation (Example H109E23)
5<->RowReductionHomomorphism :: GeneralisedRowReduction(&rho;) <->text1189.htm#13287<->RowReductionHomomorphism :: GeneralisedRowReduction(&rho;) : Map -&gt; Map
5<->Inverse :: GeneralisedRowReduction(&rho;) <->text1189.htm#13287<->Inverse :: GeneralisedRowReduction(&rho;) : Map -&gt; Map
5<->GeneralisedRowReduction(&rho;) <->text1189.htm#13287<->GeneralisedRowReduction(&rho;) : Map -&gt; Map
3<->representations :<->text1189.htm<->representations :: Representations (GROUPS OF LIE TYPE)
3<->groups-lie-type :<->text1175.htm<->groups-lie-type :: GROUPS OF LIE TYPE
3<->lie-reps :<->text1192.htm<->lie-reps :: REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS
3<->representations-introduction :<->text1193.htm<->representations-introduction :: Introduction (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->hw :<->text1193.htm#13292<->hw :: Highest Weight Modules (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-intro-toral :<->text1193.htm#13293<->representations-intro-toral :: Toral Elements (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-other :<->text1193.htm#13294<->representations-other :: Other Highest Weight  Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-introduction :<->text1193.htm<->representations-introduction :: Introduction (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-constructing :<->text1194.htm<->representations-constructing :: Constructing Weight Multisets (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->TrivialLieRepresentationDecomposition(R) <->text1194.htm#13296<->TrivialLieRepresentationDecomposition(R) : RootDtm -&gt; LieRepDec
5<->LieRepresentationDecomposition(R, v) <->text1194.htm#13297<->LieRepresentationDecomposition(R, v) : RootDtm, SeqEnum -> LieRepDec
5<->LieRepresentationDecomposition(R, v) <->text1194.htm#13297<->LieRepresentationDecomposition(R, v) : RootDtm, ModTupRngElt -&gt; LieRepDec
5<->LieRepresentationDecomposition(R, Wt, Mp) <->text1194.htm#13298<->LieRepresentationDecomposition(R, Wt, Mp) : RootDtm, SeqEnum, SeqEnum -&gt; LieRepDec
5<->AdjointRepresentationDecomposition(R) <->text1194.htm#13299<->AdjointRepresentationDecomposition(R) : RootDtm -&gt; LieRepDec
4<->LieReps_AdjointRepresentation (Example H110E1)<->text1194.htm#13300<->LieReps_AdjointRepresentation (Example H110E1)
4<->Example-AdjointRepresentation :<->text1194.htm#13300<->Example-AdjointRepresentation :: LieReps_AdjointRepresentation (Example H110E1)
3<->representations-constructing :<->text1194.htm<->representations-constructing :: Constructing Weight Multisets (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-constructing :<->text1195.htm<->representations-constructing :: Constructing Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-constructing :<->text1195.htm#13302<->representations-constructing :: Lie Algebras (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->TrivialRepresentation(L) <->text1195.htm#13303<->TrivialRepresentation(L) : AlgLie -&gt; Map
5<->AdjointRepresentation(L) <->text1195.htm#13304<->AdjointRepresentation(L) : AlgLie -&gt; Map
5<->StandardRepresentation(L) <->text1195.htm#13305<->StandardRepresentation(L) : AlgLie -&gt; Map
4<->LieReps_StandardRepresentation (Example H110E2)<->text1195.htm#13306<->LieReps_StandardRepresentation (Example H110E2)
4<->Example-StandardRepresentation :<->text1195.htm#13306<->Example-StandardRepresentation :: LieReps_StandardRepresentation (Example H110E2)
5<->HighestWeightRepresentation(L, w) <->text1195.htm#13307<->HighestWeightRepresentation(L, w) : AlgLie, [ ] -&gt; UserProgram
4<->LieReps_HighestWeight (Example H110E3)<->text1195.htm#13308<->LieReps_HighestWeight (Example H110E3)
4<->Example-HighestWeight :<->text1195.htm#13308<->Example-HighestWeight :: LieReps_HighestWeight (Example H110E3)
5<->HighestWeightModule(L, w) <->text1195.htm#13309<->HighestWeightModule(L, w) : AlgLie, SeqEnum -&gt; ModTupAlg
5<->TensorProduct(Q) <->text1195.htm#13310<->TensorProduct(Q) : SeqEnum -&gt; ModAlg, Map
5<->SymmetricPower(V, n) <->text1195.htm#13311<->SymmetricPower(V, n) : ModAlg, RngIntElt -&gt; ModAlg, Map
5<->ExteriorPower(V, n) <->text1195.htm#13312<->ExteriorPower(V, n) : ModAlg, RngIntElt -&gt; ModAlg, Map
4<->LieReps_LieModules (Example H110E4)<->text1195.htm#13313<->LieReps_LieModules (Example H110E4)
4<->Example-LieModules :<->text1195.htm#13313<->Example-LieModules :: LieReps_LieModules (Example H110E4)
3<->representations-constructing :<->text1195.htm#13302<->representations-constructing :: Lie Algebras (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-constructing :<->text1195.htm#13314<->representations-constructing :: Groups of Lie Type (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->TrivialRepresentation(G) <->text1195.htm#13315<->TrivialRepresentation(G) : GrpLie -&gt; Map
5<->StandardRepresentation(G) <->text1195.htm#13316<->StandardRepresentation(G) : GrpLie -&gt; Map
5<->AdjointRepresentation(G) <->text1195.htm#13317<->AdjointRepresentation(G) : GrpLie -&gt; Map, AlgLie
5<->LieAlgebra(G) <->text1195.htm#13318<->LieAlgebra(G) : GrpLie -&gt; AlgLie, Map
5<->HighestWeightRepresentation(G, v) <->text1195.htm#13319<->HighestWeightRepresentation(G, v) : GrpLie, . -&gt; Map
4<->LieReps_StandardRepresentation (Example H110E5)<->text1195.htm#13320<->LieReps_StandardRepresentation (Example H110E5)
4<->Example-StandardRepresentation :<->text1195.htm#13320<->Example-StandardRepresentation :: LieReps_StandardRepresentation (Example H110E5)
3<->representations-constructing :<->text1195.htm#13314<->representations-constructing :: Groups of Lie Type (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-constructing :<->text1195.htm<->representations-constructing :: Constructing Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-properties :<->text1196.htm<->representation-properties :: Operations on Weight  Multisets (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-operations-arithmetic :<->text1196.htm#13322<->representation-operations-arithmetic :: Basic Operations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->RootDatum(D) <->text1196.htm#13323<->RootDatum(D) : LieRepDec -&gt; RootDtm
5<->WeightsAndMultiplicities :: Weights(D) <->text1196.htm#13324<->WeightsAndMultiplicities :: Weights(D) : LieRepDec -&gt; SeqEnum, SeqEnum
5<->Weights(D) <->text1196.htm#13324<->Weights(D) : LieRepDec -&gt; SeqEnum, SeqEnum
5<->Multiset(D) <->text1196.htm#13325<->Multiset(D) : LieRepDec -&gt; SetMulti
5<->Multiplicity(D, v) <->text1196.htm#13326<->Multiplicity(D, v) : LieRepDec, SeqEnum -> RngIntElt
5<->Multiplicity(D, v) <->text1196.htm#13326<->Multiplicity(D, v) : LieRepDec, ModTupRngElt -&gt; RngIntElt
5<->D eq E <->text1196.htm#13327<->D eq E : LieRepDec, LieRepDec -&gt; BoolElt
5<->D + E <->text1196.htm#13328<->D + E : LieRepDec, LieRepDec -&gt; BoolElt
5<->D +:= E <->text1196.htm#13329<->D +:= E : LieRepDec, LieRepDec -&gt;
5<->AddRepresentation($\sim$D, E) <->text1196.htm#13330<->AddRepresentation($\sim$D, E) : LieRepDec, LieRepDec ->
5<->AddRepresentation(~D, E, c) <->text1196.htm#13330<->AddRepresentation(~D, E, c) : LieRepDec, LieRepDec, RngIntElt -&gt;
5<->D + v <->text1196.htm#13331<->D + v : LieRepDec, SeqEnum -> BoolElt
5<->D + v <->text1196.htm#13331<->D + v : LieRepDec, ModTupRngElt -&gt; BoolElt
5<->AddRepresentation($\sim$D, v, c) <->text1196.htm#13332<->AddRepresentation($\sim$D, v, c) : LieRepDec, SeqEnum, RngIntElt -> 
5<->AddRepresentation($\sim$D, v) <->text1196.htm#13332<->AddRepresentation($\sim$D, v) : LieRepDec, ModTupRngElt -> 
5<->AddRepresentation($\sim$D, v) <->text1196.htm#13332<->AddRepresentation($\sim$D, v) : LieRepDec, SeqEnum -> 
5<->AddRepresentation(~D, v, c) <->text1196.htm#13332<->AddRepresentation(~D, v, c) : LieRepDec, ModTupRngElt, RngIntElt -&gt;
5<->D +:= v <->text1196.htm#13333<->D +:= v : LieRepDec, SeqEnum ->
5<->D +:= v <->text1196.htm#13333<->D +:= v : LieRepDec, ModTupRngElt -&gt;
5<->D * c <->text1196.htm#13334<->D * c : LieRepDec, RngIntElt -&gt; LieRepDec
5<->D / c <->text1196.htm#13335<->D / c : LieRepDec, RngIntElt -&gt; LieRepDec
5<->D *:= c <->text1196.htm#13336<->D *:= c : LieRepDec, RngIntElt -&gt;
5<->D /:= c <->text1196.htm#13337<->D /:= c : LieRepDec, RngIntElt -&gt;
5<->ProductRepresentation :: D * E <->text1196.htm#13338<->ProductRepresentation :: D * E : LieRepDec, LieRepDec -&gt; LieRepDec
5<->D * E <->text1196.htm#13338<->D * E : LieRepDec, LieRepDec -&gt; LieRepDec
5<->ProductRepresentation(D, E, R) <->text1196.htm#13339<->ProductRepresentation(D, E, R) : LieRepDec, LieRepDec, RootDtm -&gt; LieRepDec
5<->SubWeights(D, Q, S) <->text1196.htm#13340<->SubWeights(D, Q, S) : LieRepDec, SeqEnum, RootDtm -&gt; LieRepDec
5<->PermuteWeights(D, pi, S) <->text1196.htm#13341<->PermuteWeights(D, pi, S) : LieRepDec, GrpPermElt, RootDtm -&gt; LieRepDec
4<->LieReps_DecompArithmetic (Example H110E6)<->text1196.htm#13342<->LieReps_DecompArithmetic (Example H110E6)
4<->Example-DecompArithmetic :<->text1196.htm#13342<->Example-DecompArithmetic :: LieReps_DecompArithmetic (Example H110E6)
3<->representation-operations-arithmetic :<->text1196.htm#13322<->representation-operations-arithmetic :: Basic Operations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-operations-conversion :<->text1196.htm#13343<->representation-operations-conversion :: Conversion Functions (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->VirtualDecomposition(R, v) <->text1196.htm#13344<->VirtualDecomposition(R, v) : RootDtm, Any -> LieRepDec
5<->VirtualDecomposition(C) <->text1196.htm#13344<->VirtualDecomposition(C) : LieRepDec -&gt; LieRepDec
5<->DecomposeCharacter(C) <->text1196.htm#13345<->DecomposeCharacter(C) : LieRepDec -&gt; LieRepDec
5<->DominantCharacter(D) <->text1196.htm#13346<->DominantCharacter(D) : LieRepDec -&gt; LieRepDec
3<->representation-operations-conversion :<->text1196.htm#13343<->representation-operations-conversion :: Conversion Functions (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-operations-calculating :<->text1196.htm#13347<->representation-operations-calculating :: Calculating with Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->RepresentationDimension(D) <->text1196.htm#13348<->RepresentationDimension(D) : LieRepDec -&gt; RngIntElt
5<->RepresentationDimension(R, v) <->text1196.htm#13349<->RepresentationDimension(R, v) : RootDtm, ModTupRngElt -> RngIntElt
5<->RepresentationDimension(R, v) <->text1196.htm#13349<->RepresentationDimension(R, v) : RootDtm, SeqEnum -&gt; RngIntElt
5<->CasimirValue(R, w) <->text1196.htm#13350<->CasimirValue(R, w) : RootDtm, SeqEnum[RngIntElt] -> FldRatElt
5<->CasimirValue(R, w) <->text1196.htm#13350<->CasimirValue(R, w) : RootDtm, ModTupRngElt -&gt; FldRatElt
5<->QuantumDimension(R, w) <->text1196.htm#13351<->QuantumDimension(R, w) : RootDtm, SeqEnum[RngIntElt] -> SetMulti
5<->QuantumDimension(R, w) <->text1196.htm#13351<->QuantumDimension(R, w) : RootDtm, ModTupRngElt -&gt; SetMulti
4<->LieReps_QuantumDimension (Example H110E7)<->text1196.htm#13352<->LieReps_QuantumDimension (Example H110E7)
4<->Example-QuantumDimension :<->text1196.htm#13352<->Example-QuantumDimension :: LieReps_QuantumDimension (Example H110E7)
5<->Branch(FromGrp, ToGrp, v, M) <->text1196.htm#13353<->Branch(FromGrp, ToGrp, v, M) : RootDtm, RootDtm, SeqEnum, AlgMatElt -> LieRepDec
5<->Branch(FromGrp, ToGrp, v, M) <->text1196.htm#13353<->Branch(FromGrp, ToGrp, v, M) : RootDtm, RootDtm, ModTupRngElt, AlgMatElt -&gt; LieRepDec
5<->Branch(ToGrp, D, M) <->text1196.htm#13354<->Branch(ToGrp, D, M) : RootDtm, LieRepDec, AlgMatElt -&gt; LieRepDec
5<->Collect(R, D, M) <->text1196.htm#13355<->Collect(R, D, M) : RootDtm, LieRepDec, AlgMatElt -&gt; LieRepDec
4<->LieReps_BranchCollect (Example H110E8)<->text1196.htm#13356<->LieReps_BranchCollect (Example H110E8)
4<->Example-BranchCollect :<->text1196.htm#13356<->Example-BranchCollect :: LieReps_BranchCollect (Example H110E8)
5<->TensorProduct(R, v, w) <->text1196.htm#13357<->TensorProduct(R, v, w) : RootDtm, SeqEnum, SeqEnum -> .
5<->TensorProduct(R, v, w) <->text1196.htm#13357<->TensorProduct(R, v, w) : RootDtm, ModTupRngElt, ModTupRngElt -&gt; .
5<->TensorProduct(D, E) <->text1196.htm#13358<->TensorProduct(D, E) : LieRepDec, LieRepDec -&gt; .
5<->TensorProduct(Q) <->text1196.htm#13359<->TensorProduct(Q) : [LieRepDec] -&gt; LieRepDec
5<->TensorPower(R, n, v) <->text1196.htm#13360<->TensorPower(R, n, v) : RootDtm, RngIntElt, SeqEnum -> LieRepDec
5<->TensorPower(D, n) <->text1196.htm#13360<->TensorPower(D, n) : LieRepDec, RngIntElt -> LieRepDec
5<->TensorPower(R, n, v) <->text1196.htm#13360<->TensorPower(R, n, v) : RootDtm, RngIntElt, ModTupRngElt -&gt; LieRepDec
4<->LieReps_TensorPower (Example H110E9)<->text1196.htm#13361<->LieReps_TensorPower (Example H110E9)
4<->Example-TensorPower :<->text1196.htm#13361<->Example-TensorPower :: LieReps_TensorPower (Example H110E9)
5<->AdamsOperator(R, n, v) <->text1196.htm#13362<->AdamsOperator(R, n, v) : RootDtm, RngIntElt, SeqEnum -> LieRepDec
5<->AdamsOperator(D, n) <->text1196.htm#13362<->AdamsOperator(D, n) : LieRepDec, RngIntElt -> LieRepDec
5<->AdamsOperator(R, n, v) <->text1196.htm#13362<->AdamsOperator(R, n, v) : RootDtm, RngIntElt, ModTupRngElt -&gt; LieRepDec
5<->SymmetricPower(R, n, v) <->text1196.htm#13363<->SymmetricPower(R, n, v) : RootDtm, RngIntElt, SeqEnum -> LieRepDec
5<->SymmetricPower(D, n) <->text1196.htm#13363<->SymmetricPower(D, n) : LieRepDec, RngIntElt -> LieRepDec
5<->SymmetricPower(R, n, v) <->text1196.htm#13363<->SymmetricPower(R, n, v) : RootDtm, RngIntElt, ModTupRngElt -&gt; LieRepDec
5<->AlternatingPower(R, n, v) <->text1196.htm#13364<->AlternatingPower(R, n, v) : RootDtm, RngIntElt, SeqEnum -> LieRepDec
5<->AlternatingPower(D, n) <->text1196.htm#13364<->AlternatingPower(D, n) : LieRepDec, RngIntElt -> LieRepDec
5<->AlternatingPower(R, n, v) <->text1196.htm#13364<->AlternatingPower(R, n, v) : RootDtm, RngIntElt, ModTupRngElt -&gt; LieRepDec
5<->Plethysm(R, lambda, v) <->text1196.htm#13365<->Plethysm(R, lambda, v) : RootDtm, SeqEnum, SeqEnum -> LieRepDec
5<->Plethysm(D, lambda) <->text1196.htm#13365<->Plethysm(D, lambda) : LieRepDec, SeqEnum -> LieRepDec
5<->Plethysm(R, lambda, v) <->text1196.htm#13365<->Plethysm(R, lambda, v) : RootDtm, SeqEnum, ModTupRngElt -&gt; LieRepDec
5<->Spectrum(R, v, t) <->text1196.htm#13366<->Spectrum(R, v, t) : RootDtm, SeqEnum, SeqEnum -> SeqEnum
5<->\namespectrumDT{Spectrum}(D, t) <->text1196.htm#13366<->\namespectrumDT{Spectrum}(D, t) : LieRepDec, SeqEnum -> SeqEnum
5<->Spectrum(R, v, t) <->text1196.htm#13366<->Spectrum(R, v, t) : RootDtm, ModTupRngElt, SeqEnum -&gt; SeqEnum
4<->LieReps_Spectrum (Example H110E10)<->text1196.htm#13367<->LieReps_Spectrum (Example H110E10)
4<->Example-Spectrum :<->text1196.htm#13367<->Example-Spectrum :: LieReps_Spectrum (Example H110E10)
5<->Demazure(R, v, w) <->text1196.htm#13368<->Demazure(R, v, w) : RootDtm, SeqEnum, GrpPermElt -> LieRepDec
5<->\nameDemazureD{Demazure}(D, w) <->text1196.htm#13368<->\nameDemazureD{Demazure}(D, w) : LieRepDec, GrpPermElt -> LieRepDec
5<->Demazure(R, v, w) <->text1196.htm#13368<->Demazure(R, v, w) : RootDtm, ModTupRngElt, GrpPermElt -&gt; LieRepDec
5<->Demazure(R, v) <->text1196.htm#13369<->Demazure(R, v) : RootDtm, SeqEnum -> LieRepDec
5<->Demazure(D) <->text1196.htm#13369<->Demazure(D) : LieRepDec -> LieRepDec
5<->Demazure(R, v) <->text1196.htm#13369<->Demazure(R, v) : RootDtm, ModTupRngElt -&gt; LieRepDec
4<->LieReps_BranchCollect (Example H110E11)<->text1196.htm#13370<->LieReps_BranchCollect (Example H110E11)
4<->Example-BranchCollect :<->text1196.htm#13370<->Example-BranchCollect :: LieReps_BranchCollect (Example H110E11)
5<->LittlewoodRichardsonTensor(p, q) <->text1196.htm#13371<->LittlewoodRichardsonTensor(p, q) : SeqEnum, SeqEnum -> SeqEnum, SeqEnum[RngIntElt]
5<->LittlewoodRichardsonTensor(P, M, Q, N) <->text1196.htm#13371<->LittlewoodRichardsonTensor(P, M, Q, N) : SeqEnum, SeqEnum[RngIntElt], SeqEnum, SeqEnum[RngIntElt] -> SeqEnum, SeqEnum[RngIntElt]
5<->LittlewoodRichardsonTensor(R, v, w) <->text1196.htm#13371<->LittlewoodRichardsonTensor(R, v, w) : RootDtm, ModTupRngElt, ModTupRngElt -> LieRepDec
5<->LittlewoodRichardsonTensor(R, v, w) <->text1196.htm#13371<->LittlewoodRichardsonTensor(R, v, w) : RootDtm, SeqEnum, SeqEnum -> LieRepDec
5<->LittlewoodRichardsonTensor(D, E) <->text1196.htm#13371<->LittlewoodRichardsonTensor(D, E) : LieRepDec, LieRepDec -> LieRepDec
5<->LittlewoodRichardsonTensor(p, q) <->text1196.htm#13371<->LittlewoodRichardsonTensor(p, q) : ModTupRngElt, ModTupRngElt -&gt; SeqEnum, SeqEnum[RngIntElt]
4<->LieReps_LRTensor (Example H110E12)<->text1196.htm#13372<->LieReps_LRTensor (Example H110E12)
4<->Example-LRTensor :<->text1196.htm#13372<->Example-LRTensor :: LieReps_LRTensor (Example H110E12)
5<->\namealtdomRwtw{AlternatingDominant}(R, wt, w) <->text1196.htm#13373<->\namealtdomRwtw{AlternatingDominant}(R, wt, w) : RootDtm, ModTupRngElt, GrpPermElt -> LieRepDec
5<->AlternatingDominant(R, wt, w) <->text1196.htm#13373<->AlternatingDominant(R, wt, w) : RootDtm, SeqEnum, GrpPermElt -> LieRepDec
5<->AlternatingDominant(D, w) <->text1196.htm#13373<->AlternatingDominant(D, w) : LieRepDec, GrpPermElt -&gt; LieRepDec
5<->AlternatingDominant(R, wt) <->text1196.htm#13374<->AlternatingDominant(R, wt) : RootDtm, ModTupRngElt -> LieRepDec
5<->AlternatingDominant(R, wt) <->text1196.htm#13374<->AlternatingDominant(R, wt) : RootDtm, SeqEnum -> LieRepDec
5<->AlternatingDominant(D) <->text1196.htm#13374<->AlternatingDominant(D) : LieRepDec -&gt; LieRepDec
4<->LieReps_AlternatingDominant (Example H110E13)<->text1196.htm#13375<->LieReps_AlternatingDominant (Example H110E13)
4<->Example-AlternatingDominant :<->text1196.htm#13375<->Example-AlternatingDominant :: LieReps_AlternatingDominant (Example H110E13)
5<->AlternatingWeylSum(R, v) <->text1196.htm#13376<->AlternatingWeylSum(R, v) : RootDtm, SeqEnum -> LieRepDec
5<->\namealternatingweylsumD{AlternatingWeylSum}(D) <->text1196.htm#13376<->\namealternatingweylsumD{AlternatingWeylSum}(D) : LieRepDec -> LieRepDec
5<->AlternatingWeylSum(R, v) <->text1196.htm#13376<->AlternatingWeylSum(R, v) : RootDtm, ModTupRngElt -&gt; LieRepDec
3<->representation-operations-calculating :<->text1196.htm#13347<->representation-operations-calculating :: Calculating with Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-properties :<->text1196.htm<->representation-properties :: Operations on Weight  Multisets (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-operations :<->text1197.htm<->representations-operations :: Operations on Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-operations-alg :<->text1197.htm#13378<->representations-operations-alg :: Lie Algebras (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->CharacterMultiset($\rho$) <->text1197.htm#13379<->CharacterMultiset($\rho$) : Map -> LieRepDec
5<->CharacterMultiset(V) <->text1197.htm#13379<->CharacterMultiset(V) : ModAlg -&gt; LieRepDec
5<->WeightsAndVectors :: Weights(V) <->text1197.htm#13380<->WeightsAndVectors :: Weights(V) : ModAlg -&gt; SeqEnum, SeqEnum
5<->Weights(V) <->text1197.htm#13380<->Weights(V) : ModAlg -&gt; SeqEnum, SeqEnum
5<->WeightsAndVectors :: Weights(&rho;) <->text1197.htm#13381<->WeightsAndVectors :: Weights(&rho;) : Map -&gt; [ModTupRngElt]
5<->Weights(&rho;) <->text1197.htm#13381<->Weights(&rho;) : Map -&gt; [ModTupRngElt]
5<->DecompositionMultiset($\rho$) <->text1197.htm#13382<->DecompositionMultiset($\rho$) : Map -> LieRepDec
5<->DecompositionMultiset(V) <->text1197.htm#13382<->DecompositionMultiset(V) : ModAlg -&gt; LieRepDec
5<->HighestWeightsAndVectors(V) <->text1197.htm#13383<->HighestWeightsAndVectors(V) : ModAlg -&gt; SeqEnum, SeqEnum
5<->DirectSum(U, V) <->text1197.htm#13384<->DirectSum(U, V) : ModAlg, ModAlg -&gt; SeqEnum
5<->IndecomposableSummands :: DirectSumDecomposition(V) <->text1197.htm#13385<->IndecomposableSummands :: DirectSumDecomposition(V) : ModAlg -&gt; SeqEnum
5<->DirectSumDecomposition(V) <->text1197.htm#13385<->DirectSumDecomposition(V) : ModAlg -&gt; SeqEnum
5<->DirectSum(&rho;, &tau;) <->text1197.htm#13386<->DirectSum(&rho;, &tau;) : ModAlg, ModAlg -&gt; SeqEnum
5<->IndecomposableSummands :: DirectSumDecomposition(&rho;) <->text1197.htm#13387<->IndecomposableSummands :: DirectSumDecomposition(&rho;) : Map[AlgLie, AlgMatLie] -&gt; SeqEnum
5<->DirectSumDecomposition(&rho;) <->text1197.htm#13387<->DirectSumDecomposition(&rho;) : Map[AlgLie, AlgMatLie] -&gt; SeqEnum
5<->TensorProduct(Q) <->text1197.htm#13388<->TensorProduct(Q) : SeqEnum -&gt; ModAlg, Map
5<->SymmetricPower(V, n) <->text1197.htm#13389<->SymmetricPower(V, n) : ModAlg, RngIntElt -&gt; ModAlg, Map
5<->ExteriorPower(V, n) <->text1197.htm#13390<->ExteriorPower(V, n) : ModAlg, RngIntElt -&gt; ModAlg, Map
4<->LieReps_LieModules (Example H110E14)<->text1197.htm#13391<->LieReps_LieModules (Example H110E14)
4<->Example-LieModules :<->text1197.htm#13391<->Example-LieModules :: LieReps_LieModules (Example H110E14)
3<->representations-operations-alg :<->text1197.htm#13378<->representations-operations-alg :: Lie Algebras (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-operations-grp :<->text1197.htm#13392<->representations-operations-grp :: Groups of Lie Type (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->DirectSum(&rho;, &tau;) <->text1197.htm#13393<->DirectSum(&rho;, &tau;) : ModAlg, ModAlg -&gt; SeqEnum
5<->IndecomposableSummands :: DirectSumDecomposition(&rho;) <->text1197.htm#13394<->IndecomposableSummands :: DirectSumDecomposition(&rho;) : Map[GrpLie, GrpMat] -&gt; SeqEnum
5<->DirectSumDecomposition(&rho;) <->text1197.htm#13394<->DirectSumDecomposition(&rho;) : Map[GrpLie, GrpMat] -&gt; SeqEnum
5<->CharacterMultiset($\rho$) <->text1197.htm#13395<->CharacterMultiset($\rho$) : Map -> LieRepDec
5<->CharacterMultiset(V) <->text1197.htm#13395<->CharacterMultiset(V) : ModAlg -&gt; LieRepDec
5<->WeightsAndVectors :: Weights(&rho;) <->text1197.htm#13396<->WeightsAndVectors :: Weights(&rho;) : Map -&gt; [LatElt], [ModTupRngElt]
5<->Weights(&rho;) <->text1197.htm#13396<->Weights(&rho;) : Map -&gt; [LatElt], [ModTupRngElt]
5<->WeightVectors(&rho;) <->text1197.htm#13397<->WeightVectors(&rho;) : Map -&gt; [ModTupRngElt]
5<->Weight(&rho;, v) <->text1197.htm#13398<->Weight(&rho;, v) : Map, ModTupRngElt -&gt; LatElt
5<->DecompositionMultiset($\rho$) <->text1197.htm#13399<->DecompositionMultiset($\rho$) : Map -> LieRepDec
5<->DecompositionMultiset(V) <->text1197.htm#13399<->DecompositionMultiset(V) : ModAlg -&gt; LieRepDec
5<->HighestWeights(&rho;) <->text1197.htm#13400<->HighestWeights(&rho;) : Map -&gt; [LatElt], [ModTupRngElt]
5<->HighestWeightVectors(&rho;) <->text1197.htm#13401<->HighestWeightVectors(&rho;) : Map -&gt; [ModTupRngElt]
5<->GeneralisedRowReduction(&rho;) <->text1197.htm#13402<->GeneralisedRowReduction(&rho;) : GrpLie, Map -&gt; Map
3<->representations-operations-grp :<->text1197.htm#13392<->representations-operations-grp :: Groups of Lie Type (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representations-operations :<->text1197.htm<->representations-operations :: Operations on Representations (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-other :<->text1198.htm<->representation-other :: Other Functions for Representation Decompositions (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->FundamentalClosure(R, S) <->text1198.htm#13404<->FundamentalClosure(R, S) : RootDtm, SetEnum -&gt; SetEnum
5<->Closure(R, S) <->text1198.htm#13405<->Closure(R, S) : RootDtm, SetEnum -&gt; SetEnum
5<->RestrictionMatrix(R, Q) <->text1198.htm#13406<->RestrictionMatrix(R, Q) : RootDtm, SeqEnum -&gt; AlgMatElt
5<->RestrictionMatrix(R, S) <->text1198.htm#13407<->RestrictionMatrix(R, S) : RootDtm, RootDtm -&gt; AlgMatElt
4<->LieReps_RestrictionMatrix (Example H110E15)<->text1198.htm#13408<->LieReps_RestrictionMatrix (Example H110E15)
4<->Example-RestrictionMatrix :<->text1198.htm#13408<->Example-RestrictionMatrix :: LieReps_RestrictionMatrix (Example H110E15)
5<->KLPolynomial(x, y) <->text1198.htm#13409<->KLPolynomial(x, y) : GrpPermElt, GrpPermElt -&gt; RngUPolElt
5<->RPolynomial(x, y) <->text1198.htm#13410<->RPolynomial(x, y) : GrpPermElt, GrpPermElt -&gt; RngUPolElt
4<->LieReps_KLPoly_RPoly (Example H110E16)<->text1198.htm#13411<->LieReps_KLPoly_RPoly (Example H110E16)
4<->Example-KLPoly_RPoly :<->text1198.htm#13411<->Example-KLPoly_RPoly :: LieReps_KLPoly_RPoly (Example H110E16)
5<->Exponents(R) <->text1198.htm#13412<->Exponents(R) : RootDtm -&gt; SeqEnum
4<->LieReps_Exponents (Example H110E17)<->text1198.htm#13413<->LieReps_Exponents (Example H110E17)
4<->Example-Exponents :<->text1198.htm#13413<->Example-Exponents :: LieReps_Exponents (Example H110E17)
5<->ToLiE(D) <->text1198.htm#13414<->ToLiE(D) : LieRepDec -&gt; MonStgElt
5<->FromLiE(R, p) <->text1198.htm#13415<->FromLiE(R, p) : RootDtm, MonStgElt -&gt; LieRepDec
4<->LieReps_ToFromLiEEx (Example H110E18)<->text1198.htm#13416<->LieReps_ToFromLiEEx (Example H110E18)
4<->Example-ToFromLiEEx :<->text1198.htm#13416<->Example-ToFromLiEEx :: LieReps_ToFromLiEEx (Example H110E18)
3<->representation-other-sym :<->text1198.htm#13417<->representation-other-sym :: Operations Related to the Symmetric Group (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->ConjugationClassLength(l) <->text1198.htm#13418<->ConjugationClassLength(l) : SeqEnum -&gt; RngIntElt
5<->PartitionToWeight(l) <->text1198.htm#13419<->PartitionToWeight(l) : ModTupRngElt -> ModTupRngElt
5<->PartitionToWeight(l) <->text1198.htm#13419<->PartitionToWeight(l) : SeqEnum -&gt; SeqEnum
5<->WeightToPartition(v) <->text1198.htm#13420<->WeightToPartition(v) : ModTupRngElt -> ModTupRngElt
5<->WeightToPartition(v) <->text1198.htm#13420<->WeightToPartition(v) : SeqEnum -&gt; SeqEnum
5<->TransposePartition(l) <->text1198.htm#13421<->TransposePartition(l) : ModTupRngElt -> ModTupRngElt
5<->TransposePartition(l) <->text1198.htm#13421<->TransposePartition(l) : SeqEnum -&gt; SeqEnum
3<->representation-other-sym :<->text1198.htm#13417<->representation-other-sym :: Operations Related to the Symmetric Group (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-fusion :<->text1198.htm#13422<->representation-fusion :: FusionRules (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->WZWFusion(R, v, w, k) <->text1198.htm#13423<->WZWFusion(R, v, w, k) : RootDtm, Any, Any, RngIntElt -&gt; SetMulti
5<->WZWFusion(D, E, k) <->text1198.htm#13424<->WZWFusion(D, E, k) : LieRepDec, LieRepDec, RngIntElt -&gt; LieRepDec
4<->LieReps_WZWFusion (Example H110E19)<->text1198.htm#13425<->LieReps_WZWFusion (Example H110E19)
4<->Example-WZWFusion :<->text1198.htm#13425<->Example-WZWFusion :: LieReps_WZWFusion (Example H110E19)
3<->representation-fusion :<->text1198.htm#13422<->representation-fusion :: FusionRules (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-other :<->text1198.htm<->representation-other :: Other Functions for Representation Decompositions (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->representation-small-database :<->text1199.htm<->representation-small-database :: Subgroups of Small Rank (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->LiEMaximalSubgroups() <->text1199.htm#13427<->LiEMaximalSubgroups() : -&gt; SeqEnum
5<->MaximalSubgroups(G) <->text1199.htm#13428<->MaximalSubgroups(G) : MonStgElt -&gt; SeqEnum[MonStgElt]
5<->RestrictionMatrix(G, H) <->text1199.htm#13429<->RestrictionMatrix(G, H) : MonStgElt, MonStgElt -&gt; AlgMatElt
4<->LieReps_SubgroupDB (Example H110E20)<->text1199.htm#13430<->LieReps_SubgroupDB (Example H110E20)
4<->Example-SubgroupDB :<->text1199.htm#13430<->Example-SubgroupDB :: LieReps_SubgroupDB (Example H110E20)
3<->representation-small-database :<->text1199.htm<->representation-small-database :: Subgroups of Small Rank (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->sub-subsu :<->text1200.htm<->sub-subsu :: Subalgebras of su(d) (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
5<->IrreducibleSimpleSubalgebrasOfSU(N) <->text1200.htm#13432<->IrreducibleSimpleSubalgebrasOfSU(N) : RngIntElt -&gt; SeqEnum
5<->IrreducibleSimpleSubalgebraTreeSU(Q, d) <->text1200.htm#13433<->IrreducibleSimpleSubalgebraTreeSU(Q, d) : SeqEnum[SeqEnum[Tup]], RngIntElt -&gt; GrphDir
5<->PrintTreesSU(Q, F) <->text1200.htm#13434<->PrintTreesSU(Q, F) : SeqEnum[SeqEnum[Tup]], MonStgElt -&gt;
4<->LieReps_SubSU (Example H110E21)<->text1200.htm#13435<->LieReps_SubSU (Example H110E21)
4<->Example-SubSU :<->text1200.htm#13435<->Example-SubSU :: LieReps_SubSU (Example H110E21)
3<->sub-subsu :<->text1200.htm<->sub-subsu :: Subalgebras of su(d) (REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS)
3<->lie-reps :<->text1192.htm<->lie-reps :: REPRESENTATIONS OF LIE GROUPS  AND ALGEBRAS
3<->ideal-groebner :<->text1203.htm<->ideal-groebner :: GR&Ouml;BNER BASES
3<->introduction :<->text1204.htm<->introduction :: Introduction (GR&Ouml;BNER BASES)
3<->order :<->text1205.htm<->order :: Representation and Monomial  Orders (GR&Ouml;BNER BASES)
3<->Lexicographical<->text1205.htm#13441<->Lexicographical: <TT>lex</TT> (GR&Ouml;BNER BASES)
3<->Graded Lexicographical<->text1205.htm#13442<->Graded Lexicographical: <TT>glex</TT> (GR&Ouml;BNER BASES)
3<->Graded Reverse Lexicographical<->text1205.htm#13443<->Graded Reverse Lexicographical:  <TT>grevlex</TT> (GR&Ouml;BNER BASES)
3<->Graded Reverse Lexicographical  (Weighted)<->text1205.htm#13444<->Graded Reverse Lexicographical  (Weighted): <TT>grevlexw</TT> (GR&Ouml;BNER BASES)
3<->elim-k :: Elimination (k)<->text1205.htm#13445<->elim-k :: Elimination (k): <TT>elim</TT> (GR&Ouml;BNER BASES)
3<->elim-list :: Elimination List<->text1205.htm#13446<->elim-list :: Elimination List: <TT>elim</TT> (GR&Ouml;BNER BASES)
3<->Inverse Block<->text1205.htm#13447<->Inverse Block: <TT>invblock</TT> (GR&Ouml;BNER BASES)
3<->Univariate<->text1205.htm#13448<->Univariate: <TT>univ</TT> (GR&Ouml;BNER BASES)
3<->Weight<->text1205.htm#13449<->Weight: <TT>weight</TT> (GR&Ouml;BNER BASES)
3<->order :<->text1205.htm<->order :: Representation and Monomial  Orders (GR&Ouml;BNER BASES)
3<->creation :<->text1206.htm<->creation :: Polynomial Rings and Ideals (GR&Ouml;BNER BASES)
3<->rings :<->text1206.htm#13451<->rings :: Creation of Polynomial Rings and Accessing their Monomial Orders (GR&Ouml;BNER BASES)
5<->PolynomialAlgebra :: PolynomialRing(R, n) <->text1206.htm#13452<->PolynomialAlgebra :: PolynomialRing(R, n) : Rng, RngIntElt -&gt; RngMPol
5<->PolynomialRing(R, n) <->text1206.htm#13452<->PolynomialRing(R, n) : Rng, RngIntElt -&gt; RngMPol
5<->PolynomialAlgebra :: PolynomialRing(R, n, order) <->text1206.htm#13453<->PolynomialAlgebra :: PolynomialRing(R, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPol
5<->PolynomialRing(R, n, order) <->text1206.htm#13453<->PolynomialRing(R, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPol
5<->PolynomialAlgebra :: PolynomialRing(R, n, T) <->text1206.htm#13454<->PolynomialAlgebra :: PolynomialRing(R, n, T) : Rng, RngIntElt, Tup -&gt; RngMPol
5<->PolynomialRing(R, n, T) <->text1206.htm#13454<->PolynomialRing(R, n, T) : Rng, RngIntElt, Tup -&gt; RngMPol
5<->MonomialOrder(P) <->text1206.htm#13455<->MonomialOrder(P) : RngMPol -&gt; Tup
5<->MonomialOrderWeightVectors(P) <->text1206.htm#13456<->MonomialOrderWeightVectors(P) : RngMPol -&gt; [ [ FldRatElt ] ]
4<->GB_Order (Example H111E1)<->text1206.htm#13457<->GB_Order (Example H111E1)
4<->Example-Order :<->text1206.htm#13457<->Example-Order :: GB_Order (Example H111E1)
3<->rings :<->text1206.htm#13451<->rings :: Creation of Polynomial Rings and Accessing their Monomial Orders (GR&Ouml;BNER BASES)
3<->graded :<->text1206.htm#13458<->graded :: Creation of Graded Polynomial  Rings (GR&Ouml;BNER BASES)
5<->PolynomialAlgebra :: PolynomialRing(R, Q) <->text1206.htm#13459<->PolynomialAlgebra :: PolynomialRing(R, Q) : Rng, [ RngIntElt ] -&gt; RngMPol
5<->PolynomialRing(R, Q) <->text1206.htm#13459<->PolynomialRing(R, Q) : Rng, [ RngIntElt ] -&gt; RngMPol
5<->VariableWeights :: Grading(P) <->text1206.htm#13460<->VariableWeights :: Grading(P) : RngMPol -&gt; [ RngIntElt ]
5<->Grading(P) <->text1206.htm#13460<->Grading(P) : RngMPol -&gt; [ RngIntElt ]
3<->graded :<->text1206.htm#13458<->graded :: Creation of Graded Polynomial  Rings (GR&Ouml;BNER BASES)
3<->elements :<->text1206.htm#13461<->elements :: Element Operations Using the  Grading (GR&Ouml;BNER BASES)
5<->WeightedDegree :: Degree(f) <->text1206.htm#13462<->WeightedDegree :: Degree(f) : RngMPolElt -&gt; RngIntElt
5<->Degree(f) <->text1206.htm#13462<->Degree(f) : RngMPolElt -&gt; RngIntElt
5<->LeadingWeightedDegree(f) <->text1206.htm#13463<->LeadingWeightedDegree(f) : RngMPolElt -&gt; RngIntElt
5<->IsHomogeneous(f) <->text1206.htm#13464<->IsHomogeneous(f) : RngMPolElt -&gt; BoolElt
5<->HomogeneousComponent(f, d) <->text1206.htm#13465<->HomogeneousComponent(f, d) : RngMPolElt, RngIntElt -&gt; RngMPolElt
5<->HomogeneousComponents(f) <->text1206.htm#13466<->HomogeneousComponents(f) : RngMPolElt -&gt; [ RngMPolElt ]
5<->MonomialsOfDegree(P, d) <->text1206.htm#13467<->MonomialsOfDegree(P, d) : RngMPolElt, RngIntElt -&gt; {@ RngMPolElt @}
5<->MonomialsOfWeightedDegree(P, d) <->text1206.htm#13468<->MonomialsOfWeightedDegree(P, d) : RngMPolElt, RngIntElt -&gt; {@ RngMPolElt @}
4<->GB_Graded (Example H111E2)<->text1206.htm#13469<->GB_Graded (Example H111E2)
4<->Example-Graded :<->text1206.htm#13469<->Example-Graded :: GB_Graded (Example H111E2)
3<->elements :<->text1206.htm#13461<->elements :: Element Operations Using the  Grading (GR&Ouml;BNER BASES)
3<->ideals :<->text1206.htm#13470<->ideals :: Creation of Ideals and Accessing their Bases (GR&Ouml;BNER BASES)
5<->ideal<P | L> <->text1206.htm#13471<->ideal&lt;P | L&gt; : RngMPol, List -&gt; RngMPol
5<->Ideal(B) <->text1206.htm#13472<->Ideal(B) : \lbrace RngMPolElt \rbrace -> RngMPol
5<->Ideal(B) <->text1206.htm#13472<->Ideal(B) : [ RngMPolElt ] -&gt; RngMPol
5<->Ideal(f) <->text1206.htm#13473<->Ideal(f) : RngMPolElt -&gt; RngMPol
5<->IdealWithFixedBasis(B) <->text1206.htm#13474<->IdealWithFixedBasis(B) : [ RngMPolElt ] -&gt; RngMPol
5<->Basis(I) <->text1206.htm#13475<->Basis(I) : RngMPol -&gt; [ RngMPolElt ]
5<->BasisElement(I, i) <->text1206.htm#13476<->BasisElement(I, i) : RngMPol, RngIntElt -&gt; RngMPolElt
3<->ideals :<->text1206.htm#13470<->ideals :: Creation of Ideals and Accessing their Bases (GR&Ouml;BNER BASES)
3<->creation :<->text1206.htm<->creation :: Polynomial Rings and Ideals (GR&Ouml;BNER BASES)
3<->groebner :<->text1207.htm<->groebner :: Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
3<->fields :<->text1207.htm#13478<->fields :: Gr&ouml;bner Bases over Fields (GR&Ouml;BNER BASES)
3<->euclidean :<->text1207.htm#13479<->euclidean :: Gr&ouml;bner Bases over Euclidean  Rings (GR&Ouml;BNER BASES)
3<->basis :<->text1207.htm#13480<->basis :: Construction of Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
5<->Groebner(I: parameters) <->text1207.htm#13481<->Groebner(I: parameters) : RngMPol -&gt;
5<->GroebnerBasis(I: parameters) <->text1207.htm#13482<->GroebnerBasis(I: parameters) : RngMPol -&gt; [ RngMPolElt ]
5<->GroebnerBasis(S$\colon$ \parameters) <->text1207.htm#13483<->GroebnerBasis(S$\colon$ \parameters) : \lbrace RngMPolElt \rbrace -> [ RngMPolElt ]
5<->GroebnerBasis(S: parameters) <->text1207.htm#13483<->GroebnerBasis(S: parameters) : [ RngMPolElt ] -&gt; [ RngMPolElt ]
5<->GroebnerBasisUnreduced(S$\colon$ \parameters) <->text1207.htm#13484<->GroebnerBasisUnreduced(S$\colon$ \parameters) : \lbrace RngMPolElt \rbrace -> [ RngMPolElt ]
5<->GroebnerBasisUnreduced(S: parameters) <->text1207.htm#13484<->GroebnerBasisUnreduced(S: parameters) : [ RngMPolElt ] -&gt; [ RngMPolElt ]
5<->GroebnerBasis(S, d: parameters) <->text1207.htm#13485<->GroebnerBasis(S, d: parameters) : [ RngMPol ], RngInt -&gt; RngMPolElt
3<->basis :<->text1207.htm#13480<->basis :: Construction of Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
3<->basis :<->text1207.htm#13486<->basis :: The Dense Variant of the F<sub>4</sub> algorithm (GR&Ouml;BNER BASES)
3<->related :<->text1207.htm#13487<->related :: Related Functions (GR&Ouml;BNER BASES)
5<->HasGroebnerBasis(I) <->text1207.htm#13488<->HasGroebnerBasis(I) : RngMPol -&gt; BoolElt
5<->EasyIdeal(I) <->text1207.htm#13489<->EasyIdeal(I) : RngMPol -&gt; RngMPol
5<->EasyBasis(I) <->text1207.htm#13490<->EasyBasis(I) : RngMPol -&gt; [ RngMPolElt ]
5<->SmallBasis(I) <->text1207.htm#13491<->SmallBasis(I) : RngMPol -&gt; [ RngMPolElt ]
5<->MarkGroebner(I) <->text1207.htm#13492<->MarkGroebner(I) : RngMPol -&gt;
5<->IsGroebner(S) <->text1207.htm#13493<->IsGroebner(S) : [ RngMPolElt ] -> BoolElt
5<->IsGroebner(S) <->text1207.htm#13493<->IsGroebner(S) : { RngMPolElt } -&gt; BoolElt
5<->Coordinates(I, f) <->text1207.htm#13494<->Coordinates(I, f) : RngMPol, RngMPolElt -&gt; [ RngMPolElt ]
5<->CoordinateMatrix(I) <->text1207.htm#13495<->CoordinateMatrix(I) : RngMPol -&gt; Matrix
5<->NormalForm(f, I) <->text1207.htm#13496<->NormalForm(f, I) : RngMPolElt, RngMPol -&gt; RngMPolElt
5<->NormalForm(f, S) <->text1207.htm#13497<->NormalForm(f, S) : RngMPolElt, [ RngMPolElt ] -&gt; RngMPolElt, [ RngMPolElt ]
5<->SPolynomial(f, g) <->text1207.htm#13498<->SPolynomial(f, g) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->Reduce(S) <->text1207.htm#13499<->Reduce(S) : \lbrace RngMPolElt \rbrace -> [ RngMPolElt ]
5<->Reduce(S) <->text1207.htm#13499<->Reduce(S) : [ RngMPolElt ] -&gt; [ RngMPolElt ]
5<->ReduceGroebnerBasis(S) <->text1207.htm#13500<->ReduceGroebnerBasis(S) : \lbrace RngMPolElt \rbrace -> [ RngMPolElt ]
5<->ReduceGroebnerBasis(S) <->text1207.htm#13500<->ReduceGroebnerBasis(S) : [ RngMPolElt ] -&gt; [ RngMPolElt ]
3<->related :<->text1207.htm#13487<->related :: Related Functions (GR&Ouml;BNER BASES)
3<->boolean :<->text1207.htm#13501<->boolean :: Gr&ouml;bner Bases of Boolean Polynomial Rings (GR&Ouml;BNER BASES)
5<->BooleanPolynomialRing(n) <->text1207.htm#13502<->BooleanPolynomialRing(n) : RngIntElt -&gt; RngMPolBool
5<->BooleanPolynomialRing(n, order) <->text1207.htm#13503<->BooleanPolynomialRing(n, order) : RngIntElt, MonStgElt -&gt; RngMPolBool
5<->BooleanPolynomialRing(B, Q) <->text1207.htm#13504<->BooleanPolynomialRing(B, Q) : RngMPolBool, [RngIntElt] -&gt; RngMPolBoolElt
3<->boolean :<->text1207.htm#13501<->boolean :: Gr&ouml;bner Bases of Boolean Polynomial Rings (GR&Ouml;BNER BASES)
3<->verbose :<->text1207.htm#13505<->verbose :: Verbosity (GR&Ouml;BNER BASES)
5<->SetVerbose("Groebner", v) <->text1207.htm#13506<->SetVerbose("Groebner", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("Buchberger", v) <->text1207.htm#13507<->SetVerbose("Buchberger", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("Faugere", v) <->text1207.htm#13508<->SetVerbose("Faugere", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("FGLM", v) <->text1207.htm#13509<->SetVerbose("FGLM", v) : MonStgElt, RngIntElt -&gt;
5<->SetVerbose("GroebnerWalk", v) <->text1207.htm#13510<->SetVerbose("GroebnerWalk", v) : MonStgElt, RngIntElt -&gt;
4<->GB_Cyclic6 (Example H111E3)<->text1207.htm#13511<->GB_Cyclic6 (Example H111E3)
4<->Example-Cyclic6 :<->text1207.htm#13511<->Example-Cyclic6 :: GB_Cyclic6 (Example H111E3)
4<->GB_RungeKutta2 (Example H111E4)<->text1207.htm#13512<->GB_RungeKutta2 (Example H111E4)
4<->Example-RungeKutta2 :<->text1207.htm#13512<->Example-RungeKutta2 :: GB_RungeKutta2 (Example H111E4)
4<->GB_SolveOverGF2 (Example H111E5)<->text1207.htm#13513<->GB_SolveOverGF2 (Example H111E5)
4<->Example-SolveOverGF2 :<->text1207.htm#13513<->Example-SolveOverGF2 :: GB_SolveOverGF2 (Example H111E5)
4<->GB_GBoverZ (Example H111E6)<->text1207.htm#13514<->GB_GBoverZ (Example H111E6)
4<->Example-GBoverZ :<->text1207.htm#13514<->Example-GBoverZ :: GB_GBoverZ (Example H111E6)
4<->GB_FindingPrimes (Example H111E7)<->text1207.htm#13515<->GB_FindingPrimes (Example H111E7)
4<->Example-FindingPrimes :<->text1207.htm#13515<->Example-FindingPrimes :: GB_FindingPrimes (Example H111E7)
4<->GB_QuadraticOrderGB (Example H111E8)<->text1207.htm#13516<->GB_QuadraticOrderGB (Example H111E8)
4<->Example-QuadraticOrderGB :<->text1207.htm#13516<->Example-QuadraticOrderGB :: GB_QuadraticOrderGB (Example H111E8)
4<->GB_Coordinates (Example H111E9)<->text1207.htm#13517<->GB_Coordinates (Example H111E9)
4<->Example-Coordinates :<->text1207.htm#13517<->Example-Coordinates :: GB_Coordinates (Example H111E9)
4<->GB_ValuationRing (Example H111E10)<->text1207.htm#13518<->GB_ValuationRing (Example H111E10)
4<->Example-ValuationRing :<->text1207.htm#13518<->Example-ValuationRing :: GB_ValuationRing (Example H111E10)
3<->verbose :<->text1207.htm#13505<->verbose :: Verbosity (GR&Ouml;BNER BASES)
3<->degree :<->text1207.htm#13519<->degree :: Degree-d Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
5<->GroebnerBasis(S, d : parameters) <->text1207.htm#13520<->GroebnerBasis(S, d : parameters) : [ RngMPolElt ], RngInt -&gt; RngMPolElt
4<->GB_Degree-d (Example H111E11)<->text1207.htm#13521<->GB_Degree-d (Example H111E11)
4<->Example-Degree-d :<->text1207.htm#13521<->Example-Degree-d :: GB_Degree-d (Example H111E11)
3<->degree :<->text1207.htm#13519<->degree :: Degree-d Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
3<->groebner :<->text1207.htm<->groebner :: Gr&ouml;bner Bases (GR&Ouml;BNER BASES)
3<->change-ring :<->text1208.htm<->change-ring :: Changing Coefficient Ring (GR&Ouml;BNER BASES)
5<->ChangeRing(I, S) <->text1208.htm#13523<->ChangeRing(I, S) : RngMPol, Rng -&gt; RngMPol
4<->GB_ChangeRing (Example H111E12)<->text1208.htm#13524<->GB_ChangeRing (Example H111E12)
4<->Example-ChangeRing :<->text1208.htm#13524<->Example-ChangeRing :: GB_ChangeRing (Example H111E12)
3<->change-ring :<->text1208.htm<->change-ring :: Changing Coefficient Ring (GR&Ouml;BNER BASES)
3<->change-order :<->text1209.htm<->change-order :: Changing Monomial Order (GR&Ouml;BNER BASES)
5<->ChangeOrder(I, Q) <->text1209.htm#13526<->ChangeOrder(I, Q) : RngMPol, RngMPol -&gt; RngMPol, Map
5<->ChangeOrder(I, order) <->text1209.htm#13527<->ChangeOrder(I, order) : RngMPol, ..., -&gt; RngMPol, Map
5<->ChangeOrder(I, T) <->text1209.htm#13528<->ChangeOrder(I, T) : RngMPol, Tup -&gt; RngMPol
4<->GB_ChangeOrder (Example H111E13)<->text1209.htm#13529<->GB_ChangeOrder (Example H111E13)
4<->Example-ChangeOrder :<->text1209.htm#13529<->Example-ChangeOrder :: GB_ChangeOrder (Example H111E13)
3<->change-order :<->text1209.htm<->change-order :: Changing Monomial Order (GR&Ouml;BNER BASES)
3<->hilbert-groebner :<->text1210.htm<->hilbert-groebner :: Hilbert-driven Gr&ouml;bner Basis Construction (GR&Ouml;BNER BASES)
5<->HilbertGroebnerBasis(S, N) <->text1210.htm#13531<->HilbertGroebnerBasis(S, N) : [ RngMPolElt ], RngUPolElt -> BoolElt, [ RngMPolElt ]
5<->HilbertGroebnerBasis(S, H) <->text1210.htm#13531<->HilbertGroebnerBasis(S, H) : [ RngMPolElt ], FldFunRatUElt -&gt; BoolElt, [ RngMPolElt ]
5<->SetVerbose("HilbertGroebner", v) <->text1210.htm#13532<->SetVerbose("HilbertGroebner", v) : MonStgElt, RngIntElt -&gt;
4<->GB_HilbertGroebner (Example H111E14)<->text1210.htm#13533<->GB_HilbertGroebner (Example H111E14)
4<->Example-HilbertGroebner :<->text1210.htm#13533<->Example-HilbertGroebner :: GB_HilbertGroebner (Example H111E14)
3<->hilbert-groebner :<->text1210.htm<->hilbert-groebner :: Hilbert-driven Gr&ouml;bner Basis Construction (GR&Ouml;BNER BASES)
3<->sat :<->text1211.htm<->sat :: SAT solver (GR&Ouml;BNER BASES)
5<->SAT(B) <->text1211.htm#13535<->SAT(B) : [ RngMPolElt ] -> BoolElt, [ FldFinElt ]
5<->SAT(B) <->text1211.htm#13535<->SAT(B) : [ RngMPolBoolElt ] -&gt; BoolElt, [ FldFinElt ]
4<->GB_SAT (Example H111E15)<->text1211.htm#13536<->GB_SAT (Example H111E15)
4<->Example-SAT :<->text1211.htm#13536<->Example-SAT :: GB_SAT (Example H111E15)
3<->sat :<->text1211.htm<->sat :: SAT solver (GR&Ouml;BNER BASES)
3<->ideal-groebner :<->text1203.htm<->ideal-groebner :: GR&Ouml;BNER BASES
3<->ideal-operations :<->text1214.htm<->ideal-operations :: POLYNOMIAL RING IDEAL OPERATIONS
3<->introduction :<->text1215.htm<->introduction :: Introduction (POLYNOMIAL RING IDEAL OPERATIONS)
3<->dpoly_ideal_create :<->text1216.htm<->dpoly_ideal_create :: Creation of Polynomial Rings and their Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->ideal-operation :<->text1217.htm<->ideal-operation :: First Operations on Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->simple :<->text1217.htm#13543<->simple :: Simple Ideal Constructions (POLYNOMIAL RING IDEAL OPERATIONS)
5<->I + J <->text1217.htm#13544<->I + J : RngMPol, RngMPol -&gt; RngMPol
5<->I * J <->text1217.htm#13545<->I * J : RngMPol, RngMPol -&gt; RngMPol
5<->I ^ k <->text1217.htm#13546<->I ^ k : RngMPol, RngIntElt -&gt; RngMPol
5<->I / J <->text1217.htm#13547<->I / J : RngMPol, RngMPol -&gt; RngMPolRes
3<->simple :<->text1217.htm#13543<->simple :: Simple Ideal Constructions (POLYNOMIAL RING IDEAL OPERATIONS)
3<->basic :<->text1217.htm#13548<->basic :: Basic Commutative Algebra Operations (POLYNOMIAL RING IDEAL OPERATIONS)
5<->QuotientDimension(I) <->text1217.htm#13549<->QuotientDimension(I) : RngMPol -&gt; RngIntElt
5<->IdealQuotient :: ColonIdeal(I, J) <->text1217.htm#13550<->IdealQuotient :: ColonIdeal(I, J) : RngMPol, RngMPol -&gt; RngMPol
5<->ColonIdeal(I, J) <->text1217.htm#13550<->ColonIdeal(I, J) : RngMPol, RngMPol -&gt; RngMPol
5<->IdealQuotient :: ColonIdeal(I, f) <->text1217.htm#13551<->IdealQuotient :: ColonIdeal(I, f) : RngMPol, RngMPolElt -&gt; RngMPol, RngIntElt
5<->ColonIdeal(I, f) <->text1217.htm#13551<->ColonIdeal(I, f) : RngMPol, RngMPolElt -&gt; RngMPol, RngIntElt
5<->Saturation :: ColonIdealEquivalent(I, f) <->text1217.htm#13552<->Saturation :: ColonIdealEquivalent(I, f) : RngMPol, RngMPolElt -&gt; RngMPol, RngMPolElt
5<->ColonIdealEquivalent(I, f) <->text1217.htm#13552<->ColonIdealEquivalent(I, f) : RngMPol, RngMPolElt -&gt; RngMPol, RngMPolElt
5<->Saturation(I, J) <->text1217.htm#13553<->Saturation(I, J) : RngMPol, RngMPol -&gt; RngMPol
5<->Saturation(I)<->text1217.htm#13554<->Saturation(I): RngMPol -&gt; RngMPol
5<->Generic(I) <->text1217.htm#13555<->Generic(I) : RngMPol -&gt; RngMPol
5<->LeadingMonomialIdeal(I) <->text1217.htm#13556<->LeadingMonomialIdeal(I) : RngMPol -&gt; RngMPol
5<->I meet J <->text1217.htm#13557<->I meet J : RngMPol, RngMPol -&gt; RngMPol
5<->&meet :: &meet S <->text1217.htm#13558<->&meet :: &amp;meet S : [ RngMPol ] -&gt; RngMPol
5<->RegularSequence(I)<->text1217.htm#13559<->RegularSequence(I): RngMPol -&gt; SeqEnum
5<->ReesIdeal(P, J, I)<->text1217.htm#13560<->ReesIdeal(P, J, I): RngMPol, RngMPol, RngMPol -> RngMPol, Map
5<->ReesIdeal(R, I)<->text1217.htm#13560<->ReesIdeal(R, I): RngMPolRes, RngMPol -> RngMPol, Map
5<->ReesIdeal(P, I)<->text1217.htm#13560<->ReesIdeal(P, I): RngMPol, RngMPol -&gt; RngMPol, Map
3<->basic :<->text1217.htm#13548<->basic :: Basic Commutative Algebra Operations (POLYNOMIAL RING IDEAL OPERATIONS)
3<->predicate :<->text1217.htm#13561<->predicate :: Ideal Predicates (POLYNOMIAL RING IDEAL OPERATIONS)
5<->I eq J <->text1217.htm#13562<->I eq J : RngMPol, RngMPol -&gt; BoolElt
5<->I ne J <->text1217.htm#13563<->I ne J : RngMPol, RngMPol -&gt; BoolElt
5<->I notsubset J <->text1217.htm#13564<->I notsubset J : RngMPol, RngMPol -&gt; BoolElt
5<->I subset J <->text1217.htm#13565<->I subset J : RngMPol, RngMPol -&gt; BoolElt
5<->IsZero(I) <->text1217.htm#13566<->IsZero(I) : RngMPol -&gt; BoolElt
5<->IsProper(I) <->text1217.htm#13567<->IsProper(I) : RngMPol -&gt; BoolElt
5<->IsHomogeneous(I) <->text1217.htm#13568<->IsHomogeneous(I) : RngMPol -&gt; BoolElt
5<->IsPrincipal(I) <->text1217.htm#13569<->IsPrincipal(I) : RngMPol -&gt; BoolElt, RngMPolElt
5<->IsPrimary(I) <->text1217.htm#13570<->IsPrimary(I) : RngMPol -&gt; BoolElt
5<->IsPrime(I) <->text1217.htm#13571<->IsPrime(I) : RngMPol -&gt; BoolElt
5<->IsMaximal(I) <->text1217.htm#13572<->IsMaximal(I) : RngMPol -&gt; BoolElt
5<->IsRadical(I) <->text1217.htm#13573<->IsRadical(I) : RngMPol -&gt; BoolElt
5<->IsZeroDimensional(I) <->text1217.htm#13574<->IsZeroDimensional(I) : RngMPol -&gt; BoolElt
5<->HasGrevlexOrder(I) <->text1217.htm#13575<->HasGrevlexOrder(I) : RngMPol -&gt; BoolElt
4<->Ideal_IdealArithmetic (Example H112E1)<->text1217.htm#13576<->Ideal_IdealArithmetic (Example H112E1)
4<->Example-IdealArithmetic :<->text1217.htm#13576<->Example-IdealArithmetic :: Ideal_IdealArithmetic (Example H112E1)
3<->predicate :<->text1217.htm#13561<->predicate :: Ideal Predicates (POLYNOMIAL RING IDEAL OPERATIONS)
3<->operation-element :<->text1217.htm#13577<->operation-element :: Element Operations with Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->f in I <->text1217.htm#13578<->f in I : RngMPolElt, RngMPol -&gt; BoolElt
5<->f notin I <->text1217.htm#13579<->f notin I : RngMPolElt, RngMPol -&gt; BoolElt
5<->IsInRadical(f, I) <->text1217.htm#13580<->IsInRadical(f, I) : RngMPolElt, RngMPol -&gt; BoolElt
5<->JacobianIdeal(f) <->text1217.htm#13581<->JacobianIdeal(f) : RngMPolElt -&gt; RngMPol
4<->Ideal_ElementOperations (Example H112E2)<->text1217.htm#13582<->Ideal_ElementOperations (Example H112E2)
4<->Example-ElementOperations :<->text1217.htm#13582<->Example-ElementOperations :: Ideal_ElementOperations (Example H112E2)
3<->operation-element :<->text1217.htm#13577<->operation-element :: Element Operations with Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->ideal-operation :<->text1217.htm<->ideal-operation :: First Operations on Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->variety :<->text1218.htm<->variety :: Computation of Varieties (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Variety(I, L) <->text1218.htm#13584<->Variety(I, L) : RngMPol, Rng -> [ ModTupFldElt ]
5<->Variety(I) <->text1218.htm#13584<->Variety(I) : RngMPol -&gt; [ ModTupFldElt ]
5<->VarietySequence(I, L) <->text1218.htm#13585<->VarietySequence(I, L) : RngMPol, Rng -> [ [ RngElt ] ]
5<->VarietySequence(I) <->text1218.htm#13585<->VarietySequence(I) : RngMPol -&gt; [ [ RngElt ] ]
5<->VarietySizeOverAlgebraicClosure(I) <->text1218.htm#13586<->VarietySizeOverAlgebraicClosure(I) : RngMPol -&gt; RngIntElt
4<->Ideal_Variety (Example H112E3)<->text1218.htm#13587<->Ideal_Variety (Example H112E3)
4<->Example-Variety :<->text1218.htm#13587<->Example-Variety :: Ideal_Variety (Example H112E3)
3<->variety :<->text1218.htm<->variety :: Computation of Varieties (POLYNOMIAL RING IDEAL OPERATIONS)
3<->multiplicities :<->text1219.htm<->multiplicities :: Multiplicities (POLYNOMIAL RING IDEAL OPERATIONS)
5<->MilnorNumber(f) <->text1219.htm#13589<->MilnorNumber(f) : RngMPolElt -&gt; RngElt
5<->TjurinaNumber(f) <->text1219.htm#13590<->TjurinaNumber(f) : RngMPolElt -&gt; RngElt
4<->Ideal_Variety (Example H112E4)<->text1219.htm#13591<->Ideal_Variety (Example H112E4)
4<->Example-Variety :<->text1219.htm#13591<->Example-Variety :: Ideal_Variety (Example H112E4)
3<->multiplicities :<->text1219.htm<->multiplicities :: Multiplicities (POLYNOMIAL RING IDEAL OPERATIONS)
3<->elimination :<->text1220.htm<->elimination :: Elimination (POLYNOMIAL RING IDEAL OPERATIONS)
3<->elimination-ideal :<->text1220.htm#13593<->elimination-ideal :: Construction of Elimination Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->EliminationIdeal(I, k: parameters) <->text1220.htm#13594<->EliminationIdeal(I, k: parameters) : RngMPol, RngIntElt -&gt; RngMPol
5<->EliminationIdeal(I, S) <->text1220.htm#13595<->EliminationIdeal(I, S) : RngMPol, \lbrace RngMPolElt \rbrace -> RngMPol
5<->EliminationIdeal(I, S) <->text1220.htm#13595<->EliminationIdeal(I, S) : RngMPol, { RngIntElt } -&gt; RngMPol
4<->Ideal_QuadraticOrderElim (Example H112E5)<->text1220.htm#13596<->Ideal_QuadraticOrderElim (Example H112E5)
4<->Example-QuadraticOrderElim :<->text1220.htm#13596<->Example-QuadraticOrderElim :: Ideal_QuadraticOrderElim (Example H112E5)
3<->elimination-ideal :<->text1220.htm#13593<->elimination-ideal :: Construction of Elimination Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->univariate-elimination-ideal-generator :<->text1220.htm#13597<->univariate-elimination-ideal-generator :: Univariate Elimination Ideal Generators (POLYNOMIAL RING IDEAL OPERATIONS)
5<->UnivariateEliminationIdealGenerator(I, i) <->text1220.htm#13598<->UnivariateEliminationIdealGenerator(I, i) : RngMPol, RngIntElt -&gt; RngMPolElt
5<->UnivariateEliminationIdealGenerators(I) <->text1220.htm#13599<->UnivariateEliminationIdealGenerators(I) : RngMPol -&gt; [ RngMPolElt ]
4<->Ideal_EliminationIdeal (Example H112E6)<->text1220.htm#13600<->Ideal_EliminationIdeal (Example H112E6)
4<->Example-EliminationIdeal :<->text1220.htm#13600<->Example-EliminationIdeal :: Ideal_EliminationIdeal (Example H112E6)
4<->Ideal_ZRadical (Example H112E7)<->text1220.htm#13601<->Ideal_ZRadical (Example H112E7)
4<->Example-ZRadical :<->text1220.htm#13601<->Example-ZRadical :: Ideal_ZRadical (Example H112E7)
3<->univariate-elimination-ideal-generator :<->text1220.htm#13597<->univariate-elimination-ideal-generator :: Univariate Elimination Ideal Generators (POLYNOMIAL RING IDEAL OPERATIONS)
3<->relation :<->text1220.htm#13602<->relation :: Relation Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->RelationIdeal(Q, T) <->text1220.htm#13603<->RelationIdeal(Q, T) : [ RngMPol ], RngMPol -> RngMPol
5<->RelationIdeal(Q) <->text1220.htm#13603<->RelationIdeal(Q) : [ RngMPol ] -&gt; RngMPol
4<->Ideal_RelationIdeal (Example H112E8)<->text1220.htm#13604<->Ideal_RelationIdeal (Example H112E8)
4<->Example-RelationIdeal :<->text1220.htm#13604<->Example-RelationIdeal :: Ideal_RelationIdeal (Example H112E8)
3<->relation :<->text1220.htm#13602<->relation :: Relation Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->elimination :<->text1220.htm<->elimination :: Elimination (POLYNOMIAL RING IDEAL OPERATIONS)
3<->variable-extension :<->text1221.htm<->variable-extension :: Variable Extension of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->VariableExtension(I, k, b, \order) <->text1221.htm#13606<->VariableExtension(I, k, b, \order) : RngMPol, RngIntElt, BoolElt, ... -> RngMPol, Map
5<->VariableExtension(I, k, b) <->text1221.htm#13606<->VariableExtension(I, k, b) : RngMPol, RngIntElt, BoolElt -&gt; RngMPol, Map
3<->variable-extension :<->text1221.htm<->variable-extension :: Variable Extension of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->homogenization :<->text1222.htm<->homogenization :: Homogenization of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Homogenization(I, b, \order) <->text1222.htm#13608<->Homogenization(I, b, \order) : RngMPol, RngIntElt, BoolElt, ... -> RngMPol, Map
5<->Homogenization(I) <->text1222.htm#13608<->Homogenization(I) : RngMPol, RngIntElt, BoolElt -> RngMPol, Map
5<->Homogenization(I, \order) <->text1222.htm#13608<->Homogenization(I, \order) : RngMPol, RngIntElt, BoolElt, ... -> RngMPol, Map
5<->Homogenization(I, b) <->text1222.htm#13608<->Homogenization(I, b) : RngMPol, RngIntElt, BoolElt -&gt; RngMPol, Map
3<->homogenization :<->text1222.htm<->homogenization :: Homogenization of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->extension-contraction :<->text1223.htm<->extension-contraction :: Extension and Contraction of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Extension(I, U) <->text1223.htm#13610<->Extension(I, U) : RngMPol, [ RngIntElt ] -&gt; RngMPol, Map
3<->extension-contraction :<->text1223.htm<->extension-contraction :: Extension and Contraction of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->dimension :<->text1224.htm<->dimension :: Dimension of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Dimension(I) <->text1224.htm#13612<->Dimension(I) : RngMPol -&gt; RngIntElt, [ RngIntElt ]
3<->dimension :<->text1224.htm<->dimension :: Dimension of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->radical-decomposition :<->text1225.htm<->radical-decomposition :: Radical and Decomposition of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->radical :<->text1225.htm#13614<->radical :: Radical (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Radical(I) <->text1225.htm#13615<->Radical(I) : RngMPol -&gt; RngMPol
4<->Ideal_Radical (Example H112E9)<->text1225.htm#13616<->Ideal_Radical (Example H112E9)
4<->Example-Radical :<->text1225.htm#13616<->Example-Radical :: Ideal_Radical (Example H112E9)
3<->radical :<->text1225.htm#13614<->radical :: Radical (POLYNOMIAL RING IDEAL OPERATIONS)
3<->primary-decomposition :<->text1225.htm#13617<->primary-decomposition :: Primary Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
5<->PrimaryDecomposition(I) <->text1225.htm#13618<->PrimaryDecomposition(I) : RngMPol -&gt; [ RngMPol ], [ RngMPol ]
5<->RadicalDecomposition(I) <->text1225.htm#13619<->RadicalDecomposition(I) : RngMPol -&gt; [ RngMPol ]
5<->ProbableRadicalDecomposition(I) <->text1225.htm#13620<->ProbableRadicalDecomposition(I) : RngMPol -&gt; [ RngMPol ]
5<->MinimalDecomposition(S) <->text1225.htm#13621<->MinimalDecomposition(S) : [ RngMPol ] -&gt; [ RngMPol ]
5<->SetVerbose("Decomposition", v) <->text1225.htm#13622<->SetVerbose("Decomposition", v) : MonStgElt, RngIntElt -&gt;
4<->Ideal_PrimaryDecomposition (Example H112E10)<->text1225.htm#13623<->Ideal_PrimaryDecomposition (Example H112E10)
4<->Example-PrimaryDecomposition :<->text1225.htm#13623<->Example-PrimaryDecomposition :: Ideal_PrimaryDecomposition (Example H112E10)
3<->primary-decomposition :<->text1225.htm#13617<->primary-decomposition :: Primary Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
3<->triangular-decomposition :<->text1225.htm#13624<->triangular-decomposition :: Triangular Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
5<->TriangularDecomposition(I) <->text1225.htm#13625<->TriangularDecomposition(I) : RngMPol -&gt; [ RngMPol ], BoolElt
4<->Ideal_TriangularDecomposition (Example H112E11)<->text1225.htm#13626<->Ideal_TriangularDecomposition (Example H112E11)
4<->Example-TriangularDecomposition :<->text1225.htm#13626<->Example-TriangularDecomposition :: Ideal_TriangularDecomposition (Example H112E11)
3<->triangular-decomposition :<->text1225.htm#13624<->triangular-decomposition :: Triangular Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
3<->equidimensional-decomposition :<->text1225.htm#13627<->equidimensional-decomposition :: Equidimensional Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
5<->EquidimensionalDecomposition :: EquidimensionalPart(I) <->text1225.htm#13628<->EquidimensionalDecomposition :: EquidimensionalPart(I) : RngMPol -&gt; RngMPol
5<->FineEquidimensionalDecomposition :: EquidimensionalPart(I) <->text1225.htm#13628<->FineEquidimensionalDecomposition :: EquidimensionalPart(I) : RngMPol -&gt; RngMPol
5<->EquidimensionalPart(I) <->text1225.htm#13628<->EquidimensionalPart(I) : RngMPol -&gt; RngMPol
4<->Ideal_EquidimensionalDecomposition (Example H112E12)<->text1225.htm#13629<->Ideal_EquidimensionalDecomposition (Example H112E12)
4<->Example-EquidimensionalDecomposition :<->text1225.htm#13629<->Example-EquidimensionalDecomposition :: Ideal_EquidimensionalDecomposition (Example H112E12)
3<->equidimensional-decomposition :<->text1225.htm#13627<->equidimensional-decomposition :: Equidimensional Decomposition (POLYNOMIAL RING IDEAL OPERATIONS)
3<->radical-decomposition :<->text1225.htm<->radical-decomposition :: Radical and Decomposition of Ideals (POLYNOMIAL RING IDEAL OPERATIONS)
3<->normalisations :<->text1226.htm<->normalisations :: Normalisation and Noether  Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
3<->noether-normalisation :<->text1226.htm#13631<->noether-normalisation :: Noether Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
5<->NoetherNormalization :: NoetherNormalisation(I) <->text1226.htm#13632<->NoetherNormalization :: NoetherNormalisation(I) : RngMPol -&gt; [RngMPolElt],Map,Map
5<->NoetherNormalisation(I) <->text1226.htm#13632<->NoetherNormalisation(I) : RngMPol -&gt; [RngMPolElt],Map,Map
4<->Ideal_NoetherNormalisation (Example H112E13)<->text1226.htm#13633<->Ideal_NoetherNormalisation (Example H112E13)
4<->Example-NoetherNormalisation :<->text1226.htm#13633<->Example-NoetherNormalisation :: Ideal_NoetherNormalisation (Example H112E13)
3<->noether-normalisation :<->text1226.htm#13631<->noether-normalisation :: Noether Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
3<->normalisation :<->text1226.htm#13634<->normalisation :: Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
5<->Normalization :: Normalisation(I) <->text1226.htm#13635<->Normalization :: Normalisation(I) : RngMPol -&gt; List
5<->Normalisation(I) <->text1226.htm#13635<->Normalisation(I) : RngMPol -&gt; List
4<->Ideal_Normalisation (Example H112E14)<->text1226.htm#13636<->Ideal_Normalisation (Example H112E14)
4<->Example-Normalisation :<->text1226.htm#13636<->Example-Normalisation :: Ideal_Normalisation (Example H112E14)
3<->normalisation :<->text1226.htm#13634<->normalisation :: Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
3<->normalisations :<->text1226.htm<->normalisations :: Normalisation and Noether  Normalisation (POLYNOMIAL RING IDEAL OPERATIONS)
3<->hilbert :<->text1227.htm<->hilbert :: Hilbert Series and Hilbert  Polynomial (POLYNOMIAL RING IDEAL OPERATIONS)
5<->HilbertSeries(I) <->text1227.htm#13638<->HilbertSeries(I) : RngMPol -&gt; FldFunUElt
5<->HilbertSeries(I, p) <->text1227.htm#13639<->HilbertSeries(I, p) : RngMPol, RngIntElt -&gt; RngSerLaurElt
5<->HilbertDenominator(I) <->text1227.htm#13640<->HilbertDenominator(I) : RngMPol -&gt; RngUPol
5<->HilbertNumerator(I) <->text1227.htm#13641<->HilbertNumerator(I) : RngMPol -&gt; RngUPol
5<->HilbertPolynomial(I) <->text1227.htm#13642<->HilbertPolynomial(I) : RngMPol -&gt; RngUPolElt, RngIntElt
4<->Ideal_Hilbert (Example H112E15)<->text1227.htm#13643<->Ideal_Hilbert (Example H112E15)
4<->Example-Hilbert :<->text1227.htm#13643<->Example-Hilbert :: Ideal_Hilbert (Example H112E15)
3<->hilbert :<->text1227.htm<->hilbert :: Hilbert Series and Hilbert  Polynomial (POLYNOMIAL RING IDEAL OPERATIONS)
3<->syzygy-matrix :<->text1228.htm<->syzygy-matrix :: Syzygies (POLYNOMIAL RING IDEAL OPERATIONS)
5<->SyzygyMatrix(Q) <->text1228.htm#13645<->SyzygyMatrix(Q) : [ RngMPolElt ] -&gt; ModMatRngElt
4<->Ideal_SyzygyMatrix (Example H112E16)<->text1228.htm#13646<->Ideal_SyzygyMatrix (Example H112E16)
4<->Example-SyzygyMatrix :<->text1228.htm#13646<->Example-SyzygyMatrix :: Ideal_SyzygyMatrix (Example H112E16)
3<->syzygy-matrix :<->text1228.htm<->syzygy-matrix :: Syzygies (POLYNOMIAL RING IDEAL OPERATIONS)
3<->maps :<->text1229.htm<->maps :: Maps between Rings (POLYNOMIAL RING IDEAL OPERATIONS)
5<->PolyMapKernel(f) <->text1229.htm#13648<->PolyMapKernel(f) : Map  -&gt;  RngMPol
5<->IsInImage(f, p) <->text1229.htm#13649<->IsInImage(f, p) : Map, RngMPolElt  -&gt; [ BoolElt ]
5<->IsSurjective(f) <->text1229.htm#13650<->IsSurjective(f) : Map  -&gt; [ BoolElt ]
5<->Extension(phi, I)<->text1229.htm#13651<->Extension(phi, I): Map, RngMPol -&gt; RngMPol
5<->Implicitization(phi) <->text1229.htm#13652<->Implicitization(phi) : Map -&gt; RngMPol
4<->Ideal_Map1 (Example H112E17)<->text1229.htm#13653<->Ideal_Map1 (Example H112E17)
4<->Example-Map1 :<->text1229.htm#13653<->Example-Map1 :: Ideal_Map1 (Example H112E17)
3<->maps :<->text1229.htm<->maps :: Maps between Rings (POLYNOMIAL RING IDEAL OPERATIONS)
3<->symmetric :<->text1230.htm<->symmetric :: Symmetric Polynomials (POLYNOMIAL RING IDEAL OPERATIONS)
5<->ElementarySymmetricPolynomial(P, k) <->text1230.htm#13655<->ElementarySymmetricPolynomial(P, k) : RngMPol, RngIntElt -&gt; RngMPolElt
5<->IsSymmetric(f, S) <->text1230.htm#13656<->IsSymmetric(f, S) : RngMPolElt, RngMPol -> BoolElt, RngMPolElt
5<->IsSymmetric(f) <->text1230.htm#13656<->IsSymmetric(f) : RngMPolElt -&gt; BoolElt, RngMPolElt
4<->Ideal_IsSymmetric (Example H112E18)<->text1230.htm#13657<->Ideal_IsSymmetric (Example H112E18)
4<->Example-IsSymmetric :<->text1230.htm#13657<->Example-IsSymmetric :: Ideal_IsSymmetric (Example H112E18)
3<->symmetric :<->text1230.htm<->symmetric :: Symmetric Polynomials (POLYNOMIAL RING IDEAL OPERATIONS)
3<->algebra-module :<->text1231.htm<->algebra-module :: Functions for Polynomial Algebra and Module Generators (POLYNOMIAL RING IDEAL OPERATIONS)
5<->MinimalAlgebraGenerators(L) <->text1231.htm#13659<->MinimalAlgebraGenerators(L) : \lbrace RngMPol \rbrace -> [ RngMPol ]
5<->MinimalAlgebraGenerators(L) <->text1231.htm#13659<->MinimalAlgebraGenerators(L) : [ RngMPol ] -&gt; [ RngMPol ]
5<->HomogeneousModuleTest(P, S, F) <->text1231.htm#13660<->HomogeneousModuleTest(P, S, F) : [ RngMPol ], [ RngMPol ], RngMPol -&gt; BoolElt, [ RngMPol ]
5<->HomogeneousModuleTest(P, S, L) <->text1231.htm#13661<->HomogeneousModuleTest(P, S, L) : [ RngMPol ], [ RngMPol ], [ RngMPol ] -&gt; [ BoolElt ], [ [ RngMPol ] ]
5<->HomogeneousModuleTestBasis(P, S, L) <->text1231.htm#13662<->HomogeneousModuleTestBasis(P, S, L) : [ RngMPol ], [ RngMPol ], [ RngMPol ] -&gt; [ BoolElt ], [ [ RngMPol ] ]
4<->Ideal_HomogeneousModuleTest1 (Example H112E19)<->text1231.htm#13663<->Ideal_HomogeneousModuleTest1 (Example H112E19)
4<->Example-HomogeneousModuleTest1 :<->text1231.htm#13663<->Example-HomogeneousModuleTest1 :: Ideal_HomogeneousModuleTest1 (Example H112E19)
3<->algebra-module :<->text1231.htm<->algebra-module :: Functions for Polynomial Algebra and Module Generators (POLYNOMIAL RING IDEAL OPERATIONS)
3<->ideal-operations :<->text1214.htm<->ideal-operations :: POLYNOMIAL RING IDEAL OPERATIONS
3<->local-polynomial-rings :<->text1234.htm<->local-polynomial-rings :: LOCAL POLYNOMIAL RINGS
3<->introduction :<->text1235.htm<->introduction :: Introduction (LOCAL POLYNOMIAL RINGS)
3<->elements-order :<->text1236.htm<->elements-order :: Elements and Local Monomial Orders (LOCAL POLYNOMIAL RINGS)
3<->Local Lexicographical<->text1236.htm#13669<->Local Lexicographical: <TT>llex</TT> (LOCAL POLYNOMIAL RINGS)
3<->Local Graded Lexicographical<->text1236.htm#13670<->Local Graded Lexicographical:  <TT>lglex</TT> (LOCAL POLYNOMIAL RINGS)
3<->lgrevlex :: Local Graded Reverse Lexicographical<->text1236.htm#13671<->lgrevlex :: Local Graded Reverse Lexicographical: <TT>lgrev-lex</TT> (LOCAL POLYNOMIAL RINGS)
3<->elements-order :<->text1236.htm<->elements-order :: Elements and Local Monomial Orders (LOCAL POLYNOMIAL RINGS)
3<->creation :<->text1237.htm<->creation :: Local Polynomial Rings  and Ideals (LOCAL POLYNOMIAL RINGS)
3<->rings :<->text1237.htm#13673<->rings :: Creation of Local Polynomial  Rings and Accessing their Monomial Orders (LOCAL POLYNOMIAL RINGS)
5<->LocalPolynomialRing(K, n) <->text1237.htm#13674<->LocalPolynomialRing(K, n) : Rng, RngIntElt -&gt; RngMPolLoc
5<->LocalPolynomialAlgebra :: LocalPolynomialRing(K, n, order) <->text1237.htm#13675<->LocalPolynomialAlgebra :: LocalPolynomialRing(K, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPolLoc
5<->LocalPolynomialRing(K, n, order) <->text1237.htm#13675<->LocalPolynomialRing(K, n, order) : Rng, RngIntElt, MonStgElt, ... -&gt; RngMPolLoc
5<->LocalPolynomialRing(K, n, T) <->text1237.htm#13676<->LocalPolynomialRing(K, n, T) : Rng, RngIntElt, Tup -&gt; RngMPolLoc
5<->MonomialOrder(R) <->text1237.htm#13677<->MonomialOrder(R) : RngMPolLoc -&gt; Tup
5<->MonomialOrderWeightVectors(R) <->text1237.htm#13678<->MonomialOrderWeightVectors(R) : RngMPol -&gt; [ [ FldRatElt ] ]
5<->Localization(I) <->text1237.htm#13679<->Localization(I) : RngMPol -> RngMPolLoc
5<->Localization(R) <->text1237.htm#13679<->Localization(R) : RngMPol -&gt; RngMPolLoc
4<->RngMPolLoc_Order (Example H113E1)<->text1237.htm#13680<->RngMPolLoc_Order (Example H113E1)
4<->Example-Order :<->text1237.htm#13680<->Example-Order :: RngMPolLoc_Order (Example H113E1)
3<->rings :<->text1237.htm#13673<->rings :: Creation of Local Polynomial  Rings and Accessing their Monomial Orders (LOCAL POLYNOMIAL RINGS)
3<->ideals :<->text1237.htm#13681<->ideals :: Creation of Ideals and Accessing their Bases (LOCAL POLYNOMIAL RINGS)
5<->ideal<R | L> <->text1237.htm#13682<->ideal&lt;R | L&gt; : RngMPolLoc, List -&gt; RngMPolLoc
5<->\nameRngMPolLoc:Ideal{Ideal}(B) <->text1237.htm#13683<->\nameRngMPolLoc:Ideal{Ideal}(B) : \lbrace RngMPolLocElt \rbrace -> RngMPolLoc
5<->Ideal(B) <->text1237.htm#13683<->Ideal(B) : [ RngMPolLocElt ] -&gt; RngMPolLoc
5<->Ideal(f) <->text1237.htm#13684<->Ideal(f) : RngMPolLocElt -&gt; RngMPolLoc
5<->IdealWithFixedBasis(B) <->text1237.htm#13685<->IdealWithFixedBasis(B) : [ RngMPolLocElt ] -&gt; RngMPolLoc
5<->Basis(I) <->text1237.htm#13686<->Basis(I) : RngMPolLoc -&gt; [ RngMPolLocElt ]
5<->BasisElement(I, i) <->text1237.htm#13687<->BasisElement(I, i) : RngMPolLoc, RngIntElt -&gt; RngMPolLocElt
3<->ideals :<->text1237.htm#13681<->ideals :: Creation of Ideals and Accessing their Bases (LOCAL POLYNOMIAL RINGS)
3<->creation :<->text1237.htm<->creation :: Local Polynomial Rings  and Ideals (LOCAL POLYNOMIAL RINGS)
3<->groebner :<->text1238.htm<->groebner :: Standard Bases (LOCAL POLYNOMIAL RINGS)
3<->basis :<->text1238.htm#13689<->basis :: Construction of Standard Bases (LOCAL POLYNOMIAL RINGS)
5<->StandardBasis(I) <->text1238.htm#13690<->StandardBasis(I) : RngMPolLoc -&gt; RngMPolLocElt
5<->StandardBasis(S) <->text1238.htm#13691<->StandardBasis(S) : \lbrace RngMPolLocElt \rbrace -> [ RngMPolLocElt ]
5<->StandardBasis(S) <->text1238.htm#13691<->StandardBasis(S) : [ RngMPolLocElt ] -&gt; [ RngMPolLocElt ]
5<->Coordinates(I, f) <->text1238.htm#13692<->Coordinates(I, f) : RngMPolLoc, RngMPolLocElt -&gt; [ RngMPolLocElt ]
5<->CoordinateMatrix(I) <->text1238.htm#13693<->CoordinateMatrix(I) : RngMPolLoc -&gt; Matrix
4<->RngMPolLoc_StandardBasis (Example H113E2)<->text1238.htm#13694<->RngMPolLoc_StandardBasis (Example H113E2)
4<->Example-StandardBasis :<->text1238.htm#13694<->Example-StandardBasis :: RngMPolLoc_StandardBasis (Example H113E2)
4<->RngMPolLoc_StandardBasis2 (Example H113E3)<->text1238.htm#13695<->RngMPolLoc_StandardBasis2 (Example H113E3)
4<->Example-StandardBasis2 :<->text1238.htm#13695<->Example-StandardBasis2 :: RngMPolLoc_StandardBasis2 (Example H113E3)
3<->basis :<->text1238.htm#13689<->basis :: Construction of Standard Bases (LOCAL POLYNOMIAL RINGS)
3<->groebner :<->text1238.htm<->groebner :: Standard Bases (LOCAL POLYNOMIAL RINGS)
3<->ideal-operation :<->text1239.htm<->ideal-operation :: Operations on Ideals (LOCAL POLYNOMIAL RINGS)
3<->basic :<->text1239.htm#13697<->basic :: Basic Operations (LOCAL POLYNOMIAL RINGS)
5<->I + J <->text1239.htm#13698<->I + J : RngMPolLoc, RngMPolLoc -&gt; RngMPolLoc
5<->I * J <->text1239.htm#13699<->I * J : RngMPolLoc, RngMPolLoc -&gt; RngMPolLoc
5<->I ^ k <->text1239.htm#13700<->I ^ k : RngMPolLoc, RngIntElt -&gt; RngMPolLoc
5<->QuotientDimension(I) <->text1239.htm#13701<->QuotientDimension(I) : RngMPol -&gt; RngIntElt
5<->Generic(I) <->text1239.htm#13702<->Generic(I) : RngMPolLoc -&gt; RngMPolLoc
5<->LeadingMonomialIdeal(I) <->text1239.htm#13703<->LeadingMonomialIdeal(I) : RngMPolLoc -&gt; RngMPolLoc
5<->I meet J <->text1239.htm#13704<->I meet J : RngMPolLoc, RngMPolLoc -&gt; RngMPolLoc
5<->&meet :: &meet S <->text1239.htm#13705<->&meet :: &amp;meet S : [ RngMPolLoc ] -&gt; RngMPolLoc
3<->basic :<->text1239.htm#13697<->basic :: Basic Operations (LOCAL POLYNOMIAL RINGS)
3<->predicate :<->text1239.htm#13706<->predicate :: Ideal Predicates (LOCAL POLYNOMIAL RINGS)
5<->I eq J <->text1239.htm#13707<->I eq J : RngMPolLoc, RngMPolLoc -&gt; BoolElt
5<->I ne J <->text1239.htm#13708<->I ne J : RngMPolLoc, RngMPolLoc -&gt; BoolElt
5<->I notsubset J <->text1239.htm#13709<->I notsubset J : RngMPolLoc, RngMPolLoc -&gt; BoolElt
5<->I subset J <->text1239.htm#13710<->I subset J : RngMPolLoc, RngMPolLoc -&gt; BoolElt
5<->IsZero(I) <->text1239.htm#13711<->IsZero(I) : RngMPolLoc -&gt; BoolElt
5<->IsProper(I) <->text1239.htm#13712<->IsProper(I) : RngMPolLoc -&gt; BoolElt
5<->IsZeroDimensional(I) <->text1239.htm#13713<->IsZeroDimensional(I) : RngMPolLoc -&gt; BoolElt
4<->RngMPolLoc_IdealArithmetic (Example H113E4)<->text1239.htm#13714<->RngMPolLoc_IdealArithmetic (Example H113E4)
4<->Example-IdealArithmetic :<->text1239.htm#13714<->Example-IdealArithmetic :: RngMPolLoc_IdealArithmetic (Example H113E4)
3<->predicate :<->text1239.htm#13706<->predicate :: Ideal Predicates (LOCAL POLYNOMIAL RINGS)
3<->operation-element :<->text1239.htm#13715<->operation-element :: Operations on Elements of Ideals (LOCAL POLYNOMIAL RINGS)
5<->f in I <->text1239.htm#13716<->f in I : RngMPolLocElt, RngMPolLoc -&gt; BoolElt
5<->NormalForm(f, I) <->text1239.htm#13717<->NormalForm(f, I) : RngMPolLocElt, RngMPolLoc -&gt; RngMPolLocElt
5<->f notin I <->text1239.htm#13718<->f notin I : RngMPolLocElt, RngMPolLoc -&gt; BoolElt
4<->RngMPolLoc_ElementOperations (Example H113E5)<->text1239.htm#13719<->RngMPolLoc_ElementOperations (Example H113E5)
4<->Example-ElementOperations :<->text1239.htm#13719<->Example-ElementOperations :: RngMPolLoc_ElementOperations (Example H113E5)
3<->operation-element :<->text1239.htm#13715<->operation-element :: Operations on Elements of Ideals (LOCAL POLYNOMIAL RINGS)
3<->ideal-operation :<->text1239.htm<->ideal-operation :: Operations on Ideals (LOCAL POLYNOMIAL RINGS)
3<->change-ring :<->text1240.htm<->change-ring :: Changing Coefficient Ring (LOCAL POLYNOMIAL RINGS)
5<->ChangeRing(I, L) <->text1240.htm#13721<->ChangeRing(I, L) : RngMPolLoc, Rng -&gt; RngMPolLoc
3<->change-ring :<->text1240.htm<->change-ring :: Changing Coefficient Ring (LOCAL POLYNOMIAL RINGS)
3<->change-order :<->text1241.htm<->change-order :: Changing Monomial Order (LOCAL POLYNOMIAL RINGS)
5<->ChangeOrder(I, Q) <->text1241.htm#13723<->ChangeOrder(I, Q) : RngMPolLoc, RngMPolLoc -&gt; RngMPolLoc, Map
5<->ChangeOrder(I, order) <->text1241.htm#13724<->ChangeOrder(I, order) : RngMPolLoc, ..., -&gt; RngMPolLoc, Map
3<->change-order :<->text1241.htm<->change-order :: Changing Monomial Order (LOCAL POLYNOMIAL RINGS)
3<->dimension :<->text1242.htm<->dimension :: Dimension of Ideals (LOCAL POLYNOMIAL RINGS)
5<->Dimension(I) <->text1242.htm#13726<->Dimension(I) : RngMPolLoc -&gt; RngIntElt, [ RngIntElt ]
3<->dimension :<->text1242.htm<->dimension :: Dimension of Ideals (LOCAL POLYNOMIAL RINGS)
3<->local-polynomial-rings :<->text1234.htm<->local-polynomial-rings :: LOCAL POLYNOMIAL RINGS
3<->affine-algebra :<->text1244.htm<->affine-algebra :: AFFINE ALGEBRAS
3<->RngMPolRes :<->text1245.htm<->RngMPolRes :: Introduction (AFFINE ALGEBRAS)
3<->RngMPolResElt :<->text1245.htm<->RngMPolResElt :: Introduction (AFFINE ALGEBRAS)
3<->introduction :<->text1245.htm<->introduction :: Introduction (AFFINE ALGEBRAS)
3<->creation :<->text1246.htm<->creation :: Creation of Affine Algebras (AFFINE ALGEBRAS)
5<->quo <->text1246.htm#13731<->quo< P | a$_1$, ..., a$_r$ > : RngMPol, RngMPolElt, ..., RngMPolElt -> RngMPolRes, Map
5<->quo< P | J > <->text1246.htm#13731<->quo&lt; P | J &gt; : RngMPol, RngMPol -&gt; RngMPolRes
5<->P / J <->text1246.htm#13732<->P / J : RngMPol, RngMPol -&gt; RngMPolRes
5<->AffineAlgebra< R, X | L > <->text1246.htm#13733<->AffineAlgebra&lt; R, X | L &gt; : Fld, List, List -&gt; RngMPolRes
4<->AlgAff_Creation (Example H114E1)<->text1246.htm#13734<->AlgAff_Creation (Example H114E1)
4<->Example-Creation :<->text1246.htm#13734<->Example-Creation :: AlgAff_Creation (Example H114E1)
3<->creation :<->text1246.htm<->creation :: Creation of Affine Algebras (AFFINE ALGEBRAS)
3<->operations :<->text1247.htm<->operations :: Operations on Affine Algebras (AFFINE ALGEBRAS)
5<->Q . i <->text1247.htm#13736<->Q . i : RngMPolRes, RngIntElt -&gt; RngMPolResElt
5<->CoefficientRing(Q) <->text1247.htm#13737<->CoefficientRing(Q) : RngMPolRes -&gt; Rng
5<->Rank(Q) <->text1247.htm#13738<->Rank(Q) : RngMPolRes -&gt; RngIntElt
5<->DivisorIdeal(I) <->text1247.htm#13739<->DivisorIdeal(I) : RngMPolRes -&gt; RngMPol
5<->PreimageIdeal(I) <->text1247.htm#13740<->PreimageIdeal(I) : RngMPolRes -&gt; RngMPol
5<->PreimageRing(Q) <->text1247.htm#13741<->PreimageRing(Q) : RngMPolRes -&gt; RngMPol
5<->OriginalRing(Q) <->text1247.htm#13742<->OriginalRing(Q) : RngMPolRes -&gt; Rng
5<->I eq J <->text1247.htm#13743<->I eq J : RngMPolRes, RngMPolRes -&gt; BoolElt
5<->I subset J <->text1247.htm#13744<->I subset J : RngMPolRes, RngMPolRes -&gt; BoolElt
5<->I + J <->text1247.htm#13745<->I + J : RngMPolRes, RngMPolRes -&gt; RngMPolRes
5<->I * J <->text1247.htm#13746<->I * J : RngMPolRes, RngMPolRes -&gt; RngMPolRes
5<->I ^ n <->text1247.htm#13747<->I ^ n : RngMPolRes, RngIntElt -&gt; BoolElt
5<->I meet J <->text1247.htm#13748<->I meet J : RngMPolRes, RngMPolRes -&gt; RngMPolRes
5<->IsProper(I) <->text1247.htm#13749<->IsProper(I) : RngMPolRes -&gt; BoolElt
5<->IsZero(I) <->text1247.htm#13750<->IsZero(I) : RngMPolRes -&gt; BoolElt
5<->IsPrime(I) <->text1247.htm#13751<->IsPrime(I) : RngMPolRes -&gt; BoolElt
5<->IsPrimary(I) <->text1247.htm#13752<->IsPrimary(I) : RngMPolRes -&gt; BoolElt
5<->IsRadical(I) <->text1247.htm#13753<->IsRadical(I) : RngMPolRes -&gt; BoolElt
5<->PrimaryDecomposition(I) <->text1247.htm#13754<->PrimaryDecomposition(I) : RngMPolRes -&gt; [ RngMPolRes ], [ RngMPolRes ]
5<->RadicalDecomposition(I) <->text1247.htm#13755<->RadicalDecomposition(I) : RngMPolRes -&gt; [ RngMPolRes ]
4<->AlgAff_Operations (Example H114E2)<->text1247.htm#13756<->AlgAff_Operations (Example H114E2)
4<->Example-Operations :<->text1247.htm#13756<->Example-Operations :: AlgAff_Operations (Example H114E2)
3<->operations :<->text1247.htm<->operations :: Operations on Affine Algebras (AFFINE ALGEBRAS)
3<->affine-algebra-maps :<->text1248.htm<->affine-algebra-maps :: Maps between Affine Algebras (AFFINE ALGEBRAS)
5<->AffineAlgebraMapKernel(phi) <->text1248.htm#13758<->AffineAlgebraMapKernel(phi) : Map -&gt; MPol
3<->affine-algebra-maps :<->text1248.htm<->affine-algebra-maps :: Maps between Affine Algebras (AFFINE ALGEBRAS)
3<->finite-dimension-quotient :<->text1249.htm<->finite-dimension-quotient :: Finite Dimensional Affine Algebras (AFFINE ALGEBRAS)
5<->HasFiniteDimension(Q) <->text1249.htm#13760<->HasFiniteDimension(Q) : RngMPolRes -&gt; BoolElt
5<->Dimension(Q) <->text1249.htm#13761<->Dimension(Q) : RngMPolRes -&gt; RngIntElt
5<->VectorSpace(Q) <->text1249.htm#13762<->VectorSpace(Q) : RngMPolRes -&gt; ModTupFld, Map
5<->MonomialBasis(Q) <->text1249.htm#13763<->MonomialBasis(Q) : RngMPolRes -&gt; [ RngMPolResElt ]
5<->MatrixAlgebra(Q) <->text1249.htm#13764<->MatrixAlgebra(Q) : RngMPolRes -&gt; AlgMat, Map
5<->RepresentationMatrix(f) <->text1249.htm#13765<->RepresentationMatrix(f) : RngMPolResElt -&gt; AlgMatElt
5<->IsUnit(f) <->text1249.htm#13766<->IsUnit(f) : RngMPolResElt -&gt; BoolElt
5<->IsNilpotent(f) <->text1249.htm#13767<->IsNilpotent(f) : RngMPolResElt -&gt; BoolElt, RngIntElt
5<->MinimalPolynomial(f) <->text1249.htm#13768<->MinimalPolynomial(f) : RngMPolResElt -&gt; RngUPol
4<->AlgAff_MinimalPolynomial (Example H114E3)<->text1249.htm#13769<->AlgAff_MinimalPolynomial (Example H114E3)
4<->Example-MinimalPolynomial :<->text1249.htm#13769<->Example-MinimalPolynomial :: AlgAff_MinimalPolynomial (Example H114E3)
3<->finite-dimension-quotient :<->text1249.htm<->finite-dimension-quotient :: Finite Dimensional Affine Algebras (AFFINE ALGEBRAS)
3<->field :<->text1250.htm<->field :: Affine Algebras which are  Fields (AFFINE ALGEBRAS)
4<->AlgAff_EllipticCurve (Example H114E4)<->text1250.htm#13771<->AlgAff_EllipticCurve (Example H114E4)
4<->Example-EllipticCurve :<->text1250.htm#13771<->Example-EllipticCurve :: AlgAff_EllipticCurve (Example H114E4)
4<->AlgAff_Factorization (Example H114E5)<->text1250.htm#13772<->AlgAff_Factorization (Example H114E5)
4<->Example-Factorization :<->text1250.htm#13772<->Example-Factorization :: AlgAff_Factorization (Example H114E5)
4<->AlgAff_MultiExtension (Example H114E6)<->text1250.htm#13773<->AlgAff_MultiExtension (Example H114E6)
4<->Example-MultiExtension :<->text1250.htm#13773<->Example-MultiExtension :: AlgAff_MultiExtension (Example H114E6)
3<->field :<->text1250.htm<->field :: Affine Algebras which are  Fields (AFFINE ALGEBRAS)
3<->RngFunFrac :<->text1251.htm<->RngFunFrac :: Rings and Fields of Fractions of Affine Algebras (AFFINE ALGEBRAS)
3<->RngFunFracElt :<->text1251.htm<->RngFunFracElt :: Rings and Fields of Fractions of Affine Algebras (AFFINE ALGEBRAS)
3<->field :<->text1251.htm<->field :: Rings and Fields of Fractions of Affine Algebras (AFFINE ALGEBRAS)
5<->FieldOfFractions :: RingOfFractions(Q) <->text1251.htm#13775<->FieldOfFractions :: RingOfFractions(Q) : RngMPolRes -&gt; RngFunFrac
5<->RingOfFractions(Q) <->text1251.htm#13775<->RingOfFractions(Q) : RngMPolRes -&gt; RngFunFrac
5<->Denominator :: Numerator(a) <->text1251.htm#13776<->Denominator :: Numerator(a) : RngFunFracElt -&gt; RngMPolResElt
5<->Numerator(a) <->text1251.htm#13776<->Numerator(a) : RngFunFracElt -&gt; RngMPolResElt
4<->AlgAff_FieldOfFractions (Example H114E7)<->text1251.htm#13777<->AlgAff_FieldOfFractions (Example H114E7)
4<->Example-FieldOfFractions :<->text1251.htm#13777<->Example-FieldOfFractions :: AlgAff_FieldOfFractions (Example H114E7)
4<->AlgAff_Extension (Example H114E8)<->text1251.htm#13778<->AlgAff_Extension (Example H114E8)
4<->Example-Extension :<->text1251.htm#13778<->Example-Extension :: AlgAff_Extension (Example H114E8)
3<->field :<->text1251.htm<->field :: Rings and Fields of Fractions of Affine Algebras (AFFINE ALGEBRAS)
3<->affine-algebra :<->text1244.htm<->affine-algebra :: AFFINE ALGEBRAS
3<->modules-multivariate :<->text1254.htm<->modules-multivariate :: MODULES OVER MULTIVARIATE RINGS
3<->introduction :<->text1255.htm<->introduction :: Introduction (MODULES OVER MULTIVARIATE RINGS)
3<->embedded-reduced :: Module Basics<->text1256.htm<->embedded-reduced :: Module Basics: Embedded  and Reduced Modules (MODULES OVER MULTIVARIATE RINGS)
3<->order :<->text1257.htm<->order :: Monomial Orders (MODULES OVER MULTIVARIATE RINGS)
3<->Term Over Position<->text1257.htm#13785<->Term Over Position: <TT>TOP</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->Term Over Position (Weighted)<->text1257.htm#13786<->Term Over Position (Weighted): <TT>TOPW</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->Position Over Term<->text1257.htm#13787<->Position Over Term: <TT>POT</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->POTPERM :: Position Over Term (Permutation)<->text1257.htm#13788<->POTPERM :: Position Over Term (Permutation): <TT>POT-PERM</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->Block TOP-TOP<->text1257.htm#13789<->Block TOP-TOP: <TT>TOPTOP</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->Block TOP-POT<->text1257.htm#13790<->Block TOP-POT: <TT>TOPPOT</TT> (MODULES OVER MULTIVARIATE RINGS)
3<->order :<->text1257.htm<->order :: Monomial Orders (MODULES OVER MULTIVARIATE RINGS)
3<->creation-access :<->text1258.htm<->creation-access :: Basic Creation and Access (MODULES OVER MULTIVARIATE RINGS)
3<->embedded :<->text1258.htm#13792<->embedded :: Creation of Ambient Embedded  Modules (MODULES OVER MULTIVARIATE RINGS)
5<->EModule(R, k) <->text1258.htm#13793<->EModule(R, k) : Rng, RngIntElt -&gt; ModMPol
5<->EModule(R, k, order) <->text1258.htm#13794<->EModule(R, k, order) : Rng, RngIntElt, MonStgElt, ... -&gt; ModMPol
5<->EModule(R, W) <->text1258.htm#13795<->EModule(R, W) : Rng, [ RngIntElt ] -&gt; ModMPol
5<->EModule(R, W, order) <->text1258.htm#13796<->EModule(R, W, order) : Rng, [ RngIntElt ], MonStgElt, ... -&gt; ModMPol
3<->embedded :<->text1258.htm#13792<->embedded :: Creation of Ambient Embedded  Modules (MODULES OVER MULTIVARIATE RINGS)
3<->reduced :<->text1258.htm#13797<->reduced :: Creation of Reduced Modules (MODULES OVER MULTIVARIATE RINGS)
5<->RModule(R, k) <->text1258.htm#13798<->RModule(R, k) : Rng, RngIntElt -&gt; ModMPol
5<->RModule(R, W) <->text1258.htm#13799<->RModule(R, W) : Rng, [ RngIntElt ] -&gt; ModMPol
5<->GradedModule(R, k) <->text1258.htm#13800<->GradedModule(R, k) : Rng, RngIntElt -&gt; ModMPol
5<->GradedModule(R, W) <->text1258.htm#13801<->GradedModule(R, W) : Rng, [ RngIntElt ] -&gt; ModMPol
3<->reduced :<->text1258.htm#13797<->reduced :: Creation of Reduced Modules (MODULES OVER MULTIVARIATE RINGS)
3<->embedded :<->text1258.htm#13802<->embedded :: Localization (MODULES OVER MULTIVARIATE RINGS)
5<->Localization(M) <->text1258.htm#13803<->Localization(M) : ModMPol -&gt; ModMPol
3<->embedded :<->text1258.htm#13802<->embedded :: Localization (MODULES OVER MULTIVARIATE RINGS)
3<->invariants :<->text1258.htm#13804<->invariants :: Basic Invariants (MODULES OVER MULTIVARIATE RINGS)
5<->Generic :: Ambient(M) <->text1258.htm#13805<->Generic :: Ambient(M) : ModMPol -&gt; ModMPol
5<->Ambient(M) <->text1258.htm#13805<->Ambient(M) : ModMPol -&gt; ModMPol
5<->IsAmbient(M) <->text1258.htm#13806<->IsAmbient(M) : ModMPol -&gt; BoolElt
5<->IsEmbedded(M) <->text1258.htm#13807<->IsEmbedded(M) : ModMPol -&gt; BoolElt
5<->IsReduced(M) <->text1258.htm#13808<->IsReduced(M) : ModMPol -&gt; BoolElt
5<->IsRoot(M) <->text1258.htm#13809<->IsRoot(M) : ModMPol -&gt; BoolElt
5<->BaseRing :: CoefficientRing(M) <->text1258.htm#13810<->BaseRing :: CoefficientRing(M) : ModMPol -&gt; ModMPol
5<->CoefficientRing(M) <->text1258.htm#13810<->CoefficientRing(M) : ModMPol -&gt; ModMPol
5<->Degree(M) <->text1258.htm#13811<->Degree(M) : ModMPol -&gt; RngIntElt
5<->Grading :: ColumnWeights(M) <->text1258.htm#13812<->Grading :: ColumnWeights(M) : ModMPol -&gt; [ RngIntElt ]
5<->ColumnWeights(M) <->text1258.htm#13812<->ColumnWeights(M) : ModMPol -&gt; [ RngIntElt ]
5<->RelationModule(M) <->text1258.htm#13813<->RelationModule(M) : ModMPol -&gt; [ ModMPol ]
5<->Relations(M) <->text1258.htm#13814<->Relations(M) : ModMPol -&gt; [ ModMPol ]
5<->RelationMatrix(M) <->text1258.htm#13815<->RelationMatrix(M) : ModMPol -&gt; ModMatRngElt
5<->Presentation(M) <->text1258.htm#13816<->Presentation(M) : ModMPol -&gt; [ ModMPol ]
5<->IsHomogeneous :: IsGraded(M) <->text1258.htm#13817<->IsHomogeneous :: IsGraded(M) : ModMPol -&gt; BoolElt
5<->IsGraded(M) <->text1258.htm#13817<->IsGraded(M) : ModMPol -&gt; BoolElt
3<->invariants :<->text1258.htm#13804<->invariants :: Basic Invariants (MODULES OVER MULTIVARIATE RINGS)
3<->element :<->text1258.htm#13818<->element :: Creation of Module Elements (MODULES OVER MULTIVARIATE RINGS)
5<->M ! Q <->text1258.htm#13819<->M ! Q : ModMPol, [ RngElt ] -&gt; ModMPolElt
5<->M ! v <->text1258.htm#13820<->M ! v : ModMPol, ModTupRngElt -&gt; ModMPolElt
5<->Zero :: M ! 0 <->text1258.htm#13821<->Zero :: M ! 0 : ModMPol, RngIntElt -&gt; ModMPolElt
5<->M ! 0 <->text1258.htm#13821<->M ! 0 : ModMPol, RngIntElt -&gt; ModMPolElt
5<->UnitVector(M, i) <->text1258.htm#13822<->UnitVector(M, i) : ModMPol,  RngIntElt -&gt; ModMPolElt
3<->element :<->text1258.htm#13818<->element :: Creation of Module Elements (MODULES OVER MULTIVARIATE RINGS)
3<->element :<->text1258.htm#13823<->element :: Element Operations (MODULES OVER MULTIVARIATE RINGS)
3<->access :<->text1258.htm#13824<->access :: Access (MODULES OVER MULTIVARIATE RINGS)
5<->Eltseq(f) <->text1258.htm#13825<->Eltseq(f) : ModMPolElt -&gt; [ RngMPolElt ]
5<->Vector(f) <->text1258.htm#13826<->Vector(f) : ModMPolElt -&gt; ModTupRngElt
5<->f[i] <->text1258.htm#13827<->f[i] : ModMPolElt, RngIntElt -&gt; RngMPolElt
3<->access :<->text1258.htm#13824<->access :: Access (MODULES OVER MULTIVARIATE RINGS)
3<->arithmetic :<->text1258.htm#13828<->arithmetic :: Arithmetic (MODULES OVER MULTIVARIATE RINGS)
5<->f div s <->text1258.htm#13829<->f div s : ModMPolElt, RngMPolElt -&gt; ModMPolElt
5<->SPolynomial(f, g) <->text1258.htm#13830<->SPolynomial(f, g) : ModMPolElt, ModMPolElt -&gt; ModMPolElt
5<->Normalize(f) <->text1258.htm#13831<->Normalize(f) : ModMPolElt -&gt; ModMPolElt
5<->NormalForm(f, S) <->text1258.htm#13832<->NormalForm(f, S) : ModMPolElt, ModMPol -&gt; ModMPolElt
5<->Coordinates(f, M) <->text1258.htm#13833<->Coordinates(f, M) : ModMPolElt, ModMPol -&gt; [ RngMPolElt ]
3<->arithmetic :<->text1258.htm#13828<->arithmetic :: Arithmetic (MODULES OVER MULTIVARIATE RINGS)
3<->terms :<->text1258.htm#13834<->terms :: Accessing the Underlying Representation (MODULES OVER MULTIVARIATE RINGS)
5<->Column(f) <->text1258.htm#13835<->Column(f) : ModMPolElt -&gt; RngIntElt
5<->WeightedDegree :: Degree(f) <->text1258.htm#13836<->WeightedDegree :: Degree(f) : ModMPolElt -&gt; RngIntElt
5<->Degree(f) <->text1258.htm#13836<->Degree(f) : ModMPolElt -&gt; RngIntElt
5<->IsHomogeneous(f) <->text1258.htm#13837<->IsHomogeneous(f) : ModMPolElt -&gt; BoolElt
3<->terms :<->text1258.htm#13834<->terms :: Accessing the Underlying Representation (MODULES OVER MULTIVARIATE RINGS)
3<->predicates :<->text1258.htm#13838<->predicates :: Predicates (MODULES OVER MULTIVARIATE RINGS)
5<->IsZero(f) <->text1258.htm#13839<->IsZero(f) : ModMPolElt -&gt; BoolElt
5<->f eq g <->text1258.htm#13840<->f eq g : ModMPolElt, ModMPolElt -&gt; BoolElt
5<->f lt g <->text1258.htm#13841<->f lt g : ModMPolElt, ModMPolElt -&gt; BoolElt
5<->f in M <->text1258.htm#13842<->f in M : ModMPolElt, ModMPol -&gt; BoolElt
4<->PMod_CreateEmbedded (Example H115E1)<->text1258.htm#13843<->PMod_CreateEmbedded (Example H115E1)
4<->Example-CreateEmbedded :<->text1258.htm#13843<->Example-CreateEmbedded :: PMod_CreateEmbedded (Example H115E1)
3<->predicates :<->text1258.htm#13838<->predicates :: Predicates (MODULES OVER MULTIVARIATE RINGS)
3<->element :<->text1258.htm#13823<->element :: Element Operations (MODULES OVER MULTIVARIATE RINGS)
3<->creation-access :<->text1258.htm<->creation-access :: Basic Creation and Access (MODULES OVER MULTIVARIATE RINGS)
3<->hom :<->text1259.htm<->hom :: The Homomorphism Type (MODULES OVER MULTIVARIATE RINGS)
5<->Homomorphism(M, N, A)<->text1259.htm#13845<->Homomorphism(M, N, A): ModMPol, ModMPol, Mtrx -&gt; ModMPolHom
5<->Domain(f) <->text1259.htm#13846<->Domain(f) : ModMPolHom -&gt; ModMPol
5<->Codomain(f) <->text1259.htm#13847<->Codomain(f) : ModMPolHom -&gt; ModMPol
5<->PresentationMatrix(f) <->text1259.htm#13848<->PresentationMatrix(f) : ModMPolHom -&gt; ModMatRngElt
5<->AmbientMatrix(f) <->text1259.htm#13849<->AmbientMatrix(f) : ModMPolHom -&gt; ModMatRngElt
5<->* :: f(v) <->text1259.htm#13850<->* :: f(v) : ModMPolHom, RngMPolElt -&gt; RngMPolElt
5<->() :: f(v) <->text1259.htm#13850<->() :: f(v) : ModMPolHom, RngMPolElt -&gt; RngMPolElt
5<->f[i] <->text1259.htm#13851<->f[i] : ModMPolHom, RngIntElt -&gt; RngMPolElt
5<->Image(f) <->text1259.htm#13852<->Image(f) : ModMPolHom -&gt; ModMPol
5<->Kernel(f) <->text1259.htm#13853<->Kernel(f) : ModMPolHom -&gt; ModMPol
5<->Cokernel(f) <->text1259.htm#13854<->Cokernel(f) : ModMPolHom -&gt; ModMPol
5<->IsZero(f) <->text1259.htm#13855<->IsZero(f) : ModMPolHom -&gt; BoolElt
5<->IsInjective(f) <->text1259.htm#13856<->IsInjective(f) : ModMPolHom -&gt; BoolElt
5<->IsSurjective(f) <->text1259.htm#13857<->IsSurjective(f) : ModMPolHom -&gt; BoolElt
5<->IsBijective(f) <->text1259.htm#13858<->IsBijective(f) : ModMPolHom -&gt; BoolElt
5<->IsHomogeneous :: IsGraded(f) <->text1259.htm#13859<->IsHomogeneous :: IsGraded(f) : ModMPolHom -&gt; BoolElt
5<->IsGraded(f) <->text1259.htm#13859<->IsGraded(f) : ModMPolHom -&gt; BoolElt
5<->Degree(f) <->text1259.htm#13860<->Degree(f) : ModMPolHom -&gt; RngIntElt
4<->PMod_HomomorphismEmbedded (Example H115E2)<->text1259.htm#13861<->PMod_HomomorphismEmbedded (Example H115E2)
4<->Example-HomomorphismEmbedded :<->text1259.htm#13861<->Example-HomomorphismEmbedded :: PMod_HomomorphismEmbedded (Example H115E2)
3<->hom :<->text1259.htm<->hom :: The Homomorphism Type (MODULES OVER MULTIVARIATE RINGS)
3<->sub-quo :<->text1260.htm<->sub-quo :: Submodules and Quotient  Modules (MODULES OVER MULTIVARIATE RINGS)
3<->creation :<->text1260.htm#13863<->creation :: Creation (MODULES OVER MULTIVARIATE RINGS)
5<->sub<M | L> <->text1260.htm#13864<->sub&lt;M | L&gt; : ModMPol, List -&gt; ModMPol
5<->quo<M | L> <->text1260.htm#13865<->quo&lt;M | L&gt; : ModMPol, List -&gt; ModMPol
5<->Morphism(M, N) <->text1260.htm#13866<->Morphism(M, N) : ModMPol, ModMPol -&gt; ModMPolHom
5<->Submodule(I) <->text1260.htm#13867<->Submodule(I) : RngMPol -&gt; ModMPol
5<->QuotientModule(I) <->text1260.htm#13868<->QuotientModule(I) : RngMPol -&gt; ModMPol
5<->GradedModule(I) <->text1260.htm#13869<->GradedModule(I) : RngMPol -&gt; ModMPol
3<->creation :<->text1260.htm#13863<->creation :: Creation (MODULES OVER MULTIVARIATE RINGS)
3<->basis :<->text1260.htm#13870<->basis :: Module Bases (MODULES OVER MULTIVARIATE RINGS)
5<->Basis(M) <->text1260.htm#13871<->Basis(M) : ModMPol -&gt; RngMPolElt
5<->BasisElement(M, i) <->text1260.htm#13872<->BasisElement(M, i) : ModMPol, RngIntElt -&gt; RngMPolElt
5<->BasisMatrix(M) <->text1260.htm#13873<->BasisMatrix(M) : ModMPol -&gt; ModMatRngElt
5<->Groebner(M) <->text1260.htm#13874<->Groebner(M) : ModMPol -&gt;
4<->PMod_SubQuoEmbedded (Example H115E3)<->text1260.htm#13875<->PMod_SubQuoEmbedded (Example H115E3)
4<->Example-SubQuoEmbedded :<->text1260.htm#13875<->Example-SubQuoEmbedded :: PMod_SubQuoEmbedded (Example H115E3)
4<->PMod_SubQuoReduced (Example H115E4)<->text1260.htm#13876<->PMod_SubQuoReduced (Example H115E4)
4<->Example-SubQuoReduced :<->text1260.htm#13876<->Example-SubQuoReduced :: PMod_SubQuoReduced (Example H115E4)
3<->basis :<->text1260.htm#13870<->basis :: Module Bases (MODULES OVER MULTIVARIATE RINGS)
3<->sub-quo :<->text1260.htm<->sub-quo :: Submodules and Quotient  Modules (MODULES OVER MULTIVARIATE RINGS)
3<->basic_mod_cons :<->text1261.htm<->basic_mod_cons :: Basic Module Constructions (MODULES OVER MULTIVARIATE RINGS)
5<->M + N <->text1261.htm#13878<->M + N : ModMPol, ModMPol -&gt; ModMPol
5<->M meet N <->text1261.htm#13879<->M meet N : ModMPol, ModMPol -&gt; ModMPol
5<->M * f <->text1261.htm#13880<->M * f : ModMPol, RngElt -> ModMPol
5<->f * M <->text1261.htm#13880<->f * M : ModMPol, RngElt -&gt; ModMPol
5<->M * I <->text1261.htm#13881<->M * I : ModMPol, RngMPol -> ModMPol
5<->I * M <->text1261.htm#13881<->I * M : RngMPol, ModMPol -&gt; ModMPol
5<->M / N <->text1261.htm#13882<->M / N : ModMPol, ModMPol -&gt; ModMPol
5<->DirectSum(M, N) <->text1261.htm#13883<->DirectSum(M, N) : ModMPol, ModMPol -&gt; ModMPol, [ModMPolHom], [ModMPolHom]
5<->DirectSum(S) <->text1261.htm#13884<->DirectSum(S) : [* ModMPol *] -> ModMPol, [ModMPolHom], [ModMPolHom]
5<->DirectSum(S) <->text1261.htm#13884<->DirectSum(S) : [ModMPol] -&gt; ModMPol, [ModMPolHom], [ModMPolHom]
5<->Twist(M, d) <->text1261.htm#13885<->Twist(M, d) : ModMPol, RngIntElt -&gt; [ ModMPolElt ], ModMPolHom
3<->basic_mod_cons :<->text1261.htm<->basic_mod_cons :: Basic Module Constructions (MODULES OVER MULTIVARIATE RINGS)
3<->predicates :<->text1262.htm<->predicates :: Predicates (MODULES OVER MULTIVARIATE RINGS)
5<->IsZero(M) <->text1262.htm#13887<->IsZero(M) : ModMPol -&gt; ModMPol
5<->M subset N <->text1262.htm#13888<->M subset N : ModMPol, ModMPol -&gt; BoolElt
5<->M eq N <->text1262.htm#13889<->M eq N : ModMPol, ModMPol -&gt; BoolElt
5<->IsFree(M) <->text1262.htm#13890<->IsFree(M) : ModMPol -&gt; BoolElt
3<->predicates :<->text1262.htm<->predicates :: Predicates (MODULES OVER MULTIVARIATE RINGS)
3<->operations :<->text1263.htm<->operations :: Module Operations (MODULES OVER MULTIVARIATE RINGS)
5<->MinimalBasis(M) <->text1263.htm#13892<->MinimalBasis(M) : ModMPol -&gt; [ ModMPolElt ]
5<->MinimalBasis(S) <->text1263.htm#13893<->MinimalBasis(S) : \lbrace ModMPolElt \rbrace -> [ ModMPolElt ]
5<->MinimalBasis(S) <->text1263.htm#13893<->MinimalBasis(S) : [ ModMPolElt ] -&gt; [ ModMPolElt ]
5<->Rank(M) <->text1263.htm#13894<->Rank(M) : ModMPol -&gt; RngIntElt
5<->ColonModule(M, J) <->text1263.htm#13895<->ColonModule(M, J) : ModMPol, RngMPol -&gt; ModMPol
5<->ColonIdeal(M, N) <->text1263.htm#13896<->ColonIdeal(M, N) : ModMPol, ModMPol -&gt; RngMPol
5<->Annihilator(M) <->text1263.htm#13897<->Annihilator(M) : ModMPol -&gt; RngMPol
5<->FittingIdeal(M, i) <->text1263.htm#13898<->FittingIdeal(M, i) : ModMPol, RngIntElt -&gt; RngMPol
5<->FittingIdeals(M) <->text1263.htm#13899<->FittingIdeals(M) : ModMPol -&gt; RngMPol
5<->SyzygyModule(M) <->text1263.htm#13900<->SyzygyModule(M) : ModMPol -&gt; [ ModMPolElt ]
5<->MinimalSyzygyModule(M) <->text1263.htm#13901<->MinimalSyzygyModule(M) : ModMPol -&gt; [ ModMPolElt ]
5<->SyzygyModule(Q) <->text1263.htm#13902<->SyzygyModule(Q) : [ RngMPolElt ] -&gt; ModTupRng
4<->PMod_Rank (Example H115E5)<->text1263.htm#13903<->PMod_Rank (Example H115E5)
4<->Example-Rank :<->text1263.htm#13903<->Example-Rank :: PMod_Rank (Example H115E5)
3<->operations :<->text1263.htm<->operations :: Module Operations (MODULES OVER MULTIVARIATE RINGS)
3<->change-ring :<->text1264.htm<->change-ring :: Changing Ring (MODULES OVER MULTIVARIATE RINGS)
5<->ChangeRing(M, S) <->text1264.htm#13905<->ChangeRing(M, S) : RngMPol, Rng -&gt; RngMPol
3<->change-ring :<->text1264.htm<->change-ring :: Changing Ring (MODULES OVER MULTIVARIATE RINGS)
3<->hilbert :<->text1265.htm<->hilbert :: Hilbert Series (MODULES OVER MULTIVARIATE RINGS)
5<->HilbertSeries(M) <->text1265.htm#13907<->HilbertSeries(M) : ModMPol -&gt; FldFunElt
5<->HilbertSeries(M, p) <->text1265.htm#13908<->HilbertSeries(M, p) : ModMPol, RngIntElt -&gt; RngSerLaurElt
5<->HilbertDenominator(M) <->text1265.htm#13909<->HilbertDenominator(M) : ModMPol -&gt; RngUPol
5<->HilbertNumerator(M) <->text1265.htm#13910<->HilbertNumerator(M) : ModMPol -&gt; RngUPolElt, RngIntElt
5<->HilbertPolynomial(I) <->text1265.htm#13911<->HilbertPolynomial(I) : ModMPol -&gt; RngUPolElt, RngIntElt
4<->PMod_Hilbert (Example H115E6)<->text1265.htm#13912<->PMod_Hilbert (Example H115E6)
4<->Example-Hilbert :<->text1265.htm#13912<->Example-Hilbert :: PMod_Hilbert (Example H115E6)
3<->hilbert :<->text1265.htm<->hilbert :: Hilbert Series (MODULES OVER MULTIVARIATE RINGS)
3<->free-resolution :<->text1266.htm<->free-resolution :: Free Resolutions (MODULES OVER MULTIVARIATE RINGS)
3<->free-resolution :<->text1266.htm#13914<->free-resolution :: Constructing Free Resolutions (MODULES OVER MULTIVARIATE RINGS)
5<->FreeResolution(M) <->text1266.htm#13915<->FreeResolution(M) : ModMPol -&gt; ModCpx, ModMPolHom
5<->SetVerbose("Resolution", v) <->text1266.htm#13916<->SetVerbose("Resolution", v) : MonStgElt, RngIntElt -&gt;
4<->PMod_FreeResolution (Example H115E7)<->text1266.htm#13917<->PMod_FreeResolution (Example H115E7)
4<->Example-FreeResolution :<->text1266.htm#13917<->Example-FreeResolution :: PMod_FreeResolution (Example H115E7)
4<->PMod_FreeResolution1 (Example H115E8)<->text1266.htm#13918<->PMod_FreeResolution1 (Example H115E8)
4<->Example-FreeResolution1 :<->text1266.htm#13918<->Example-FreeResolution1 :: PMod_FreeResolution1 (Example H115E8)
3<->free-resolution :<->text1266.htm#13914<->free-resolution :: Constructing Free Resolutions (MODULES OVER MULTIVARIATE RINGS)
3<->betti :<->text1266.htm#13919<->betti :: Betti Numbers and Related  Invariants (MODULES OVER MULTIVARIATE RINGS)
5<->BettiNumbers(M) <->text1266.htm#13920<->BettiNumbers(M) : ModMPol -&gt; [ RngIntElt ]
5<->BettiNumber(M, i, j) <->text1266.htm#13921<->BettiNumber(M, i, j) : ModMPol, RngIntElt, RngIntElt -&gt; RngIntElt
5<->MaximumBettiDegree(M, i) <->text1266.htm#13922<->MaximumBettiDegree(M, i) : ModMPol, RngIntElt -&gt; RngIntElt
5<->BettiTable(M) <->text1266.htm#13923<->BettiTable(M) : ModMPol -&gt; [[ RngIntElt ]], RngIntElt
5<->Regularity(M) <->text1266.htm#13924<->Regularity(M) : ModMPol -&gt; RngInt
5<->HomologicalDimension(M) <->text1266.htm#13925<->HomologicalDimension(M) : ModMPol -&gt; RngInt
4<->PMod_Koszul (Example H115E9)<->text1266.htm#13926<->PMod_Koszul (Example H115E9)
4<->Example-Koszul :<->text1266.htm#13926<->Example-Koszul :: PMod_Koszul (Example H115E9)
4<->PMod_ExteriorAlgebra (Example H115E10)<->text1266.htm#13927<->PMod_ExteriorAlgebra (Example H115E10)
4<->Example-ExteriorAlgebra :<->text1266.htm#13927<->Example-ExteriorAlgebra :: PMod_ExteriorAlgebra (Example H115E10)
4<->PMod_FreeResolutionLocal (Example H115E11)<->text1266.htm#13928<->PMod_FreeResolutionLocal (Example H115E11)
4<->Example-FreeResolutionLocal :<->text1266.htm#13928<->Example-FreeResolutionLocal :: PMod_FreeResolutionLocal (Example H115E11)
4<->PMod_HilbertSeriesBetti (Example H115E12)<->text1266.htm#13929<->PMod_HilbertSeriesBetti (Example H115E12)
4<->Example-HilbertSeriesBetti :<->text1266.htm#13929<->Example-HilbertSeriesBetti :: PMod_HilbertSeriesBetti (Example H115E12)
4<->PMod_Regularity (Example H115E13)<->text1266.htm#13930<->PMod_Regularity (Example H115E13)
4<->Example-Regularity :<->text1266.htm#13930<->Example-Regularity :: PMod_Regularity (Example H115E13)
4<->PMod_Genus11Curve (Example H115E14)<->text1266.htm#13931<->PMod_Genus11Curve (Example H115E14)
4<->Example-Genus11Curve :<->text1266.htm#13931<->Example-Genus11Curve :: PMod_Genus11Curve (Example H115E14)
3<->betti :<->text1266.htm#13919<->betti :: Betti Numbers and Related  Invariants (MODULES OVER MULTIVARIATE RINGS)
3<->free-resolution :<->text1266.htm<->free-resolution :: Free Resolutions (MODULES OVER MULTIVARIATE RINGS)
3<->The Hom Module and Ext (MODULES OVER MULTIVARIATE RINGS)<->text1267.htm<->The Hom Module and Ext (MODULES OVER MULTIVARIATE RINGS)
5<->Hom(M, N) <->text1267.htm#13933<->Hom(M, N) : ModMPol, ModMPol -&gt; ModMPol, Map
5<->Hom(C, N) <->text1267.htm#13934<->Hom(C, N) : ModCpx, ModMPol -&gt; ModMPol
5<->Ext(i, M, N) <->text1267.htm#13935<->Ext(i, M, N) : RngIntElt, ModMPol, ModMPol -&gt; ModMPol
4<->PMod_Hom (Example H115E15)<->text1267.htm#13936<->PMod_Hom (Example H115E15)
4<->Example-Hom :<->text1267.htm#13936<->Example-Hom :: PMod_Hom (Example H115E15)
3<->The Hom Module and Ext (MODULES OVER MULTIVARIATE RINGS)<->text1267.htm<->The Hom Module and Ext (MODULES OVER MULTIVARIATE RINGS)
3<->Tensor Products and Tor (MODULES OVER MULTIVARIATE RINGS)<->text1268.htm<->Tensor Products and Tor (MODULES OVER MULTIVARIATE RINGS)
5<->TensorProduct(M, N) <->text1268.htm#13938<->TensorProduct(M, N) : ModMPol, ModMPol -&gt; ModMPol, Map
5<->TensorProduct(C, N) <->text1268.htm#13939<->TensorProduct(C, N) : ModCpx, ModMPol -&gt; ModMPol
5<->Tor(i, M, N) <->text1268.htm#13940<->Tor(i, M, N) : RngIntElt, ModMPol, ModMPol -&gt; ModMPol
4<->PMod_Hom (Example H115E16)<->text1268.htm#13941<->PMod_Hom (Example H115E16)
4<->Example-Hom :<->text1268.htm#13941<->Example-Hom :: PMod_Hom (Example H115E16)
3<->Tensor Products and Tor (MODULES OVER MULTIVARIATE RINGS)<->text1268.htm<->Tensor Products and Tor (MODULES OVER MULTIVARIATE RINGS)
3<->cohomology :<->text1269.htm<->cohomology :: Cohomology Of Coherent  Sheaves (MODULES OVER MULTIVARIATE RINGS)
5<->CohomologyDimension(M,r,n) <->text1269.htm#13943<->CohomologyDimension(M,r,n) : ModMPolGrd, RngIntElt, RngIntElt -&gt; RngIntElt
4<->PMod_cohom (Example H115E17)<->text1269.htm#13944<->PMod_cohom (Example H115E17)
4<->Example-cohom :<->text1269.htm#13944<->Example-cohom :: PMod_cohom (Example H115E17)
3<->cohomology :<->text1269.htm<->cohomology :: Cohomology Of Coherent  Sheaves (MODULES OVER MULTIVARIATE RINGS)
3<->modules-multivariate :<->text1254.htm<->modules-multivariate :: MODULES OVER MULTIVARIATE RINGS
3<->invariant-ring :<->text1272.htm<->invariant-ring :: INVARIANT THEORY
3<->introduction :<->text1273.htm<->introduction :: Introduction (INVARIANT THEORY)
3<->invariant-ring :<->text1274.htm<->invariant-ring :: Invariant Rings of Finite  Groups (INVARIANT THEORY)
3<->creation :<->text1274.htm#13950<->creation :: Creation (INVARIANT THEORY)
5<->InvariantRing(G, K) <->text1274.htm#13951<->InvariantRing(G, K) : GrpPerm, Fld -> RngInvar
5<->InvariantRing(G) <->text1274.htm#13951<->InvariantRing(G) : GrpMat -&gt; RngInvar
3<->creation :<->text1274.htm#13950<->creation :: Creation (INVARIANT THEORY)
3<->access :<->text1274.htm#13952<->access :: Access (INVARIANT THEORY)
5<->Group(R) <->text1274.htm#13953<->Group(R) : RngInvar -&gt; Grp
5<->CoefficientField :: CoefficientRing(R) <->text1274.htm#13954<->CoefficientField :: CoefficientRing(R) : RngInvar -&gt; Grp
5<->CoefficientRing(R) <->text1274.htm#13954<->CoefficientRing(R) : RngInvar -&gt; Grp
5<->PolynomialRing(R) <->text1274.htm#13955<->PolynomialRing(R) : RngInvar -&gt; RngMPol
5<->f in R <->text1274.htm#13956<->f in R : RngMPol, RngInvar -&gt; FldFunUElt, ModMPolElt
3<->access :<->text1274.htm#13952<->access :: Access (INVARIANT THEORY)
3<->invariant-ring :<->text1274.htm<->invariant-ring :: Invariant Rings of Finite  Groups (INVARIANT THEORY)
3<->group-action :<->text1275.htm<->group-action :: Group Actions on Polynomials (INVARIANT THEORY)
3<->permutation :<->text1276.htm<->permutation :: Permutation Group Actions on Polynomials (INVARIANT THEORY)
5<->f ^ g <->text1276.htm#13959<->f ^ g : RngMPolElt, GrpPermElt -&gt; RngMPolElt
5<->f ^ G <->text1276.htm#13960<->f ^ G : RngMPolElt, GrpPerm -&gt; { RngMPolElt }
5<->IsInvariant(f, g) <->text1276.htm#13961<->IsInvariant(f, g) : RngMPolElt, GrpElt -&gt; BoolElt
5<->IsInvariant(f, G) <->text1276.htm#13962<->IsInvariant(f, G) : RngMPolElt, Grp -&gt; BoolElt
3<->permutation :<->text1276.htm<->permutation :: Permutation Group Actions on Polynomials (INVARIANT THEORY)
3<->matrix :<->text1277.htm<->matrix :: Matrix Group Actions on  Polynomials (INVARIANT THEORY)
5<->f ^ a <->text1277.htm#13964<->f ^ a : RngMPolElt, GrpMatElt -&gt; RngMPolElt
5<->f ^ G <->text1277.htm#13965<->f ^ G : RngMPolElt, GrpMat -&gt; { RngMPolElt }
4<->RngInvar_GroupActions (Example H116E1)<->text1277.htm#13966<->RngInvar_GroupActions (Example H116E1)
4<->Example-GroupActions :<->text1277.htm#13966<->Example-GroupActions :: RngInvar_GroupActions (Example H116E1)
3<->matrix :<->text1277.htm<->matrix :: Matrix Group Actions on  Polynomials (INVARIANT THEORY)
3<->algebraic :<->text1278.htm<->algebraic :: Algebraic Group Actions on  Polynomials (INVARIANT THEORY)
3<->verbose :<->text1279.htm<->verbose :: Verbosity (INVARIANT THEORY)
5<->SetVerbose("Invariants", v) <->text1279.htm#13969<->SetVerbose("Invariants", v) : MonStgElt, RngIntElt -&gt;
3<->verbose :<->text1279.htm<->verbose :: Verbosity (INVARIANT THEORY)
3<->invariants :<->text1280.htm<->invariants :: Construction of Invariants of  Specified Degree (INVARIANT THEORY)
5<->ReynoldsOperator(f, G) <->text1280.htm#13971<->ReynoldsOperator(f, G) : RngMPolElt, GrpMat -&gt; RngMPolElt
5<->InvariantsOfDegree(G, d) <->text1280.htm#13972<->InvariantsOfDegree(G, d) : GrpMat, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(G, K, d) <->text1280.htm#13972<->InvariantsOfDegree(G, K, d) : GrpPerm, Fld, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(G, P, d) <->text1280.htm#13972<->InvariantsOfDegree(G, P, d) : GrpMat, RngMPol, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(G, P, d) <->text1280.htm#13972<->InvariantsOfDegree(G, P, d) : GrpPerm, RngMPol, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(R, d) <->text1280.htm#13972<->InvariantsOfDegree(R, d) : RngInvar, RngIntElt -&gt; [ RngMPolElt ]
5<->InvariantsOfDegree(G, d, k) <->text1280.htm#13973<->InvariantsOfDegree(G, d, k) : GrpMat, RngIntElt, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(G, K, d, k) <->text1280.htm#13973<->InvariantsOfDegree(G, K, d, k) : GrpPerm, Fld, RngIntElt, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(G, P, d, k) <->text1280.htm#13973<->InvariantsOfDegree(G, P, d, k) : GrpPerm, RngMPol, RngIntElt, RngIntElt -> [ RngMPolElt ]
5<->InvariantsOfDegree(R, d, k) <->text1280.htm#13973<->InvariantsOfDegree(R, d, k) : RngInvar, RngIntElt, RngIntElt -&gt; [ RngMPolElt ]
4<->RngInvar_InvariantsOfDegree (Example H116E2)<->text1280.htm#13974<->RngInvar_InvariantsOfDegree (Example H116E2)
4<->Example-InvariantsOfDegree :<->text1280.htm#13974<->Example-InvariantsOfDegree :: RngInvar_InvariantsOfDegree (Example H116E2)
5<->SetAllInvariantsOfDegree(R, d, Q) <->text1280.htm#13975<->SetAllInvariantsOfDegree(R, d, Q) : RngInvar, RngIntElt, [ RngMPolElt ] -&gt;
4<->RngInvar_InvariantsOfDegree (Example H116E3)<->text1280.htm#13976<->RngInvar_InvariantsOfDegree (Example H116E3)
4<->Example-InvariantsOfDegree :<->text1280.htm#13976<->Example-InvariantsOfDegree :: RngInvar_InvariantsOfDegree (Example H116E3)
3<->invariants :<->text1280.htm<->invariants :: Construction of Invariants of  Specified Degree (INVARIANT THEORY)
3<->gmodule :<->text1281.htm<->gmodule :: Construction of G-modules (INVARIANT THEORY)
5<->GModule(G, P, d) <->text1281.htm#13978<->GModule(G, P, d) : Grp, RngMPol, RngIntElt -&gt; ModGrp, Map, @ RngMPolElt @
5<->GModule(G, I, J) <->text1281.htm#13979<->GModule(G, I, J) : Grp, RngMPol, RngMPol -&gt; ModGrp, Map, @ RngMPolElt @
5<->GModule(G, Q) <->text1281.htm#13980<->GModule(G, Q) : Grp, RngMPolRes -&gt; ModGrp, Map, @ RngMPolElt @
4<->RngInvar_GModule (Example H116E4)<->text1281.htm#13981<->RngInvar_GModule (Example H116E4)
4<->Example-GModule :<->text1281.htm#13981<->Example-GModule :: RngInvar_GModule (Example H116E4)
3<->gmodule :<->text1281.htm<->gmodule :: Construction of G-modules (INVARIANT THEORY)
3<->molien :<->text1282.htm<->molien :: Molien Series (INVARIANT THEORY)
5<->MolienSeries(G) <->text1282.htm#13983<->MolienSeries(G) : GrpPerm -> FldFunUElt
5<->MolienSeries(G) <->text1282.htm#13983<->MolienSeries(G) : GrpMat -&gt; FldFunUElt
5<->MolienSeriesApproximation(G, n) <->text1282.htm#13984<->MolienSeriesApproximation(G, n) : GrpPerm, RngIntElt -&gt; RngSerLaurElt
4<->RngInvar_MolienSeries (Example H116E5)<->text1282.htm#13985<->RngInvar_MolienSeries (Example H116E5)
4<->Example-MolienSeries :<->text1282.htm#13985<->Example-MolienSeries :: RngInvar_MolienSeries (Example H116E5)
3<->molien :<->text1282.htm<->molien :: Molien Series (INVARIANT THEORY)
3<->primary :<->text1283.htm<->primary :: Primary Invariants (INVARIANT THEORY)
5<->PrimaryInvariants(R) <->text1283.htm#13987<->PrimaryInvariants(R) : RngInvar -&gt; [ RngMPolElt ]
4<->RngInvar_AdemMilgram (Example H116E6)<->text1283.htm#13988<->RngInvar_AdemMilgram (Example H116E6)
4<->Example-AdemMilgram :<->text1283.htm#13988<->Example-AdemMilgram :: RngInvar_AdemMilgram (Example H116E6)
3<->primary :<->text1283.htm<->primary :: Primary Invariants (INVARIANT THEORY)
3<->secondary :<->text1284.htm<->secondary :: Secondary Invariants (INVARIANT THEORY)
5<->SecondaryInvariants(R) <->text1284.htm#13990<->SecondaryInvariants(R) : RngInvar -&gt; [ RngMPolElt ]
5<->SecondaryInvariants(R, H) <->text1284.htm#13991<->SecondaryInvariants(R, H) : RngInvar, Grp -&gt; [ RngMPolElt ]
5<->IrreducibleSecondaryInvariants(R) <->text1284.htm#13992<->IrreducibleSecondaryInvariants(R) : RngInvar -&gt; [ RngMPolElt ]
4<->RngInvar_SecondaryInvariants (Example H116E7)<->text1284.htm#13993<->RngInvar_SecondaryInvariants (Example H116E7)
4<->Example-SecondaryInvariants :<->text1284.htm#13993<->Example-SecondaryInvariants :: RngInvar_SecondaryInvariants (Example H116E7)
3<->secondary :<->text1284.htm<->secondary :: Secondary Invariants (INVARIANT THEORY)
3<->fundamental :<->text1285.htm<->fundamental :: Fundamental Invariants (INVARIANT THEORY)
5<->FundamentalInvariants(R) <->text1285.htm#13995<->FundamentalInvariants(R) : RngInvar -&gt; [ RngMPolElt ]
4<->RngInvar_FundamentalInvariants (Example H116E8)<->text1285.htm#13996<->RngInvar_FundamentalInvariants (Example H116E8)
4<->Example-FundamentalInvariants :<->text1285.htm#13996<->Example-FundamentalInvariants :: RngInvar_FundamentalInvariants (Example H116E8)
4<->RngInvar_TransitiveGroupsDegree7 (Example H116E9)<->text1285.htm#13997<->RngInvar_TransitiveGroupsDegree7 (Example H116E9)
4<->Example-TransitiveGroupsDegree7 :<->text1285.htm#13997<->Example-TransitiveGroupsDegree7 :: RngInvar_TransitiveGroupsDegree7 (Example H116E9)
4<->RngInvar_S5Degree10 (Example H116E10)<->text1285.htm#13998<->RngInvar_S5Degree10 (Example H116E10)
4<->Example-S5Degree10 :<->text1285.htm#13998<->Example-S5Degree10 :: RngInvar_S5Degree10 (Example H116E10)
3<->fundamental :<->text1285.htm<->fundamental :: Fundamental Invariants (INVARIANT THEORY)
3<->module :<->text1286.htm<->module :: The Module of an Invariant Ring (INVARIANT THEORY)
5<->Module(R) <->text1286.htm#14000<->Module(R) : RngInvar -&gt; ModMPol, Map
4<->RngInvar_Module (Example H116E11)<->text1286.htm#14001<->RngInvar_Module (Example H116E11)
4<->Example-Module :<->text1286.htm#14001<->Example-Module :: RngInvar_Module (Example H116E11)
3<->module :<->text1286.htm<->module :: The Module of an Invariant Ring (INVARIANT THEORY)
3<->algebra-relations :<->text1287.htm<->algebra-relations :: The Algebra of an Invariant Ring and Algebraic Relations (INVARIANT THEORY)
5<->Algebra(R) <->text1287.htm#14003<->Algebra(R) : RngInvar -&gt; RngMPol, [ RngMPolElt ]
5<->Relations(R) <->text1287.htm#14004<->Relations(R) : RngInvar -&gt; [ RngMPolElt ]
5<->RelationIdeal(R) <->text1287.htm#14005<->RelationIdeal(R) : RngInvar -&gt; RngMPol
5<->PrimaryAlgebra(R) <->text1287.htm#14006<->PrimaryAlgebra(R) : RngInvar -&gt; RngMPol
5<->PrimaryIdeal(R) <->text1287.htm#14007<->PrimaryIdeal(R) : RngInvar -&gt; RngMPol
4<->RngInvar_Relations (Example H116E12)<->text1287.htm#14008<->RngInvar_Relations (Example H116E12)
4<->Example-Relations :<->text1287.htm#14008<->Example-Relations :: RngInvar_Relations (Example H116E12)
3<->algebra-relations :<->text1287.htm<->algebra-relations :: The Algebra of an Invariant Ring and Algebraic Relations (INVARIANT THEORY)
3<->properties :<->text1288.htm<->properties :: Properties of Invariant Rings (INVARIANT THEORY)
5<->HilbertSeries(R) <->text1288.htm#14010<->HilbertSeries(R) : RngInvar -&gt; FldFunUElt
5<->HilbertSeriesApproximation(R, n) <->text1288.htm#14011<->HilbertSeriesApproximation(R, n) : RngInvar, RngIntElt -&gt; RngSerLaurElt
5<->IsCohenMacaulay(R) <->text1288.htm#14012<->IsCohenMacaulay(R) : RngInvar -&gt; BoolElt
5<->FreeResolution(R) <->text1288.htm#14013<->FreeResolution(R) : RngInvar -&gt; [ ModMPol ]
5<->MinimalFreeResolution(R) <->text1288.htm#14014<->MinimalFreeResolution(R) : RngInvar -&gt; [ ModMPol ]
5<->HomologicalDimension(R) <->text1288.htm#14015<->HomologicalDimension(R) : RngInvar -&gt; RngInt
5<->Depth(R) <->text1288.htm#14016<->Depth(R) : RngInvar -&gt; RngIntElt
4<->RngInvar_Depth (Example H116E13)<->text1288.htm#14017<->RngInvar_Depth (Example H116E13)
4<->Example-Depth :<->text1288.htm#14017<->Example-Depth :: RngInvar_Depth (Example H116E13)
3<->properties :<->text1288.htm<->properties :: Properties of Invariant Rings (INVARIANT THEORY)
3<->steenrod :<->text1289.htm<->steenrod :: Steenrod Operations (INVARIANT THEORY)
5<->SteenrodOperation(f, i) <->text1289.htm#14019<->SteenrodOperation(f, i) : RngMPolElt, RngIntElt -&gt; RngMPolElt
4<->RngInvar_SteenrodOperation (Example H116E14)<->text1289.htm#14020<->RngInvar_SteenrodOperation (Example H116E14)
4<->Example-SteenrodOperation :<->text1289.htm#14020<->Example-SteenrodOperation :: RngInvar_SteenrodOperation (Example H116E14)
3<->steenrod :<->text1289.htm<->steenrod :: Steenrod Operations (INVARIANT THEORY)
3<->minimalize-module :<->text1290.htm<->minimalize-module :: Minimalization and Homogeneous Module Testing (INVARIANT THEORY)
5<->MinimalAlgebraGenerators(L) <->text1290.htm#14022<->MinimalAlgebraGenerators(L) : \lbrace RngMPol \rbrace -> [ RngMPol ]
5<->MinimalAlgebraGenerators(L) <->text1290.htm#14022<->MinimalAlgebraGenerators(L) : [ RngMPol ] -&gt; [ RngMPol ]
5<->HomogeneousModuleTest(P, S, F) <->text1290.htm#14023<->HomogeneousModuleTest(P, S, F) : [ RngMPol ], [ RngMPol ], RngMPol -&gt; BoolElt, [ RngMPol ]
5<->HomogeneousModuleTest(P, S, L) <->text1290.htm#14024<->HomogeneousModuleTest(P, S, L) : [ RngMPol ], [ RngMPol ], [ RngMPol ] -&gt; [ BoolElt ], [ [ RngMPol ] ]
4<->RngInvar_MinimalAlgebraGenerators (Example H116E15)<->text1290.htm#14025<->RngInvar_MinimalAlgebraGenerators (Example H116E15)
4<->Example-MinimalAlgebraGenerators :<->text1290.htm#14025<->Example-MinimalAlgebraGenerators :: RngInvar_MinimalAlgebraGenerators (Example H116E15)
4<->RngInvar_HomogeneousModuleTest2 (Example H116E16)<->text1290.htm#14026<->RngInvar_HomogeneousModuleTest2 (Example H116E16)
4<->Example-HomogeneousModuleTest2 :<->text1290.htm#14026<->Example-HomogeneousModuleTest2 :: RngInvar_HomogeneousModuleTest2 (Example H116E16)
3<->minimalize-module :<->text1290.htm<->minimalize-module :: Minimalization and Homogeneous Module Testing (INVARIANT THEORY)
3<->attributes :<->text1291.htm<->attributes :: Attributes of Invariant Rings and Fields (INVARIANT THEORY)
5<->R`PrimaryInvariants<->text1291.htm#14028<->R`PrimaryInvariants
5<->R`SecondaryInvariants<->text1291.htm#14029<->R`SecondaryInvariants
5<->R`HilbertSeries<->text1291.htm#14030<->R`HilbertSeries
4<->RngInvar_Attributes (Example H116E17)<->text1291.htm#14031<->RngInvar_Attributes (Example H116E17)
4<->Example-Attributes :<->text1291.htm#14031<->Example-Attributes :: RngInvar_Attributes (Example H116E17)
3<->attributes :<->text1291.htm<->attributes :: Attributes of Invariant Rings and Fields (INVARIANT THEORY)
3<->invariant-ring-algebraic :<->text1292.htm<->invariant-ring-algebraic :: Invariant Rings of Linear Algebraic Groups (INVARIANT THEORY)
3<->creation :<->text1292.htm#14033<->creation :: Creation (INVARIANT THEORY)
5<->InvariantRing(I, A) <->text1292.htm#14034<->InvariantRing(I, A) : RngMPol, Mtrx -&gt; RngInvar
5<->BinaryForms(n, p) <->text1292.htm#14035<->BinaryForms(n, p) : RngIntElt, RngIntElt -> RngMPol, [[RngMPolElt]], RngMPol
5<->BinaryForms(N, p) <->text1292.htm#14035<->BinaryForms(N, p) : [RngIntElt], RngIntElt -&gt; RngMPol, [[RngMPolElt]], RngMPol
3<->creation :<->text1292.htm#14033<->creation :: Creation (INVARIANT THEORY)
3<->access :<->text1292.htm#14036<->access :: Access (INVARIANT THEORY)
5<->GroupIdeal(R) <->text1292.htm#14037<->GroupIdeal(R) : RngInvar -&gt; RngMPol
5<->Representation(R) <->text1292.htm#14038<->Representation(R) : RngInvar -&gt; Mtrx
3<->access :<->text1292.htm#14036<->access :: Access (INVARIANT THEORY)
3<->functions :<->text1292.htm#14039<->functions :: Functions (INVARIANT THEORY)
5<->InvariantsOfDegree(R, d) <->text1292.htm#14040<->InvariantsOfDegree(R, d) : RngInvar, RngIntElt -&gt; [ RngMPolElt ]
5<->FundamentalInvariants(R) <->text1292.htm#14041<->FundamentalInvariants(R) : RngInvar -&gt; RngMPol
5<->DerksenIdeal(R) <->text1292.htm#14042<->DerksenIdeal(R) : RngInvar -&gt; [RngMPolElt]
5<->HilbertIdeal(R) <->text1292.htm#14043<->HilbertIdeal(R) : RngInvar -&gt; RngMPol
4<->RngInvar_SL2-invar (Example H116E18)<->text1292.htm#14044<->RngInvar_SL2-invar (Example H116E18)
4<->Example-SL2-invar :<->text1292.htm#14044<->Example-SL2-invar :: RngInvar_SL2-invar (Example H116E18)
4<->RngInvar_SL2-tensor (Example H116E19)<->text1292.htm#14045<->RngInvar_SL2-tensor (Example H116E19)
4<->Example-SL2-tensor :<->text1292.htm#14045<->Example-SL2-tensor :: RngInvar_SL2-tensor (Example H116E19)
4<->RngInvar_AlgGroup1 (Example H116E20)<->text1292.htm#14046<->RngInvar_AlgGroup1 (Example H116E20)
4<->Example-AlgGroup1 :<->text1292.htm#14046<->Example-AlgGroup1 :: RngInvar_AlgGroup1 (Example H116E20)
4<->RngInvar_AlgGroup2 (Example H116E21)<->text1292.htm#14047<->RngInvar_AlgGroup2 (Example H116E21)
4<->Example-AlgGroup2 :<->text1292.htm#14047<->Example-AlgGroup2 :: RngInvar_AlgGroup2 (Example H116E21)
3<->functions :<->text1292.htm#14039<->functions :: Functions (INVARIANT THEORY)
3<->invariant-ring-algebraic :<->text1292.htm<->invariant-ring-algebraic :: Invariant Rings of Linear Algebraic Groups (INVARIANT THEORY)
3<->invariant-field :<->text1293.htm<->invariant-field :: Invariant Fields (INVARIANT THEORY)
3<->creation :<->text1293.htm#14049<->creation :: Creation (INVARIANT THEORY)
5<->InvariantField(G) <->text1293.htm#14050<->InvariantField(G) : GrpMat -> RngInvar
5<->InvariantField(I, A) <->text1293.htm#14050<->InvariantField(I, A) : RngMPol, Mtrx -> FldInvar
5<->InvariantField(G, K) <->text1293.htm#14050<->InvariantField(G, K) : GrpPerm, Fld -&gt; FldInvar
3<->creation :<->text1293.htm#14049<->creation :: Creation (INVARIANT THEORY)
3<->access :<->text1293.htm#14051<->access :: Access (INVARIANT THEORY)
5<->FunctionField(F) <->text1293.htm#14052<->FunctionField(F) : FldInvar -&gt; FldFunRat
5<->Group(F) <->text1293.htm#14053<->Group(F) : FldInvar -&gt; Grp
5<->GroupIdeal(F) <->text1293.htm#14054<->GroupIdeal(F) : FldInvar -&gt; RngMPol
5<->Representation(F) <->text1293.htm#14055<->Representation(F) : FldInvar -&gt; Mtrx
3<->access :<->text1293.htm#14051<->access :: Access (INVARIANT THEORY)
3<->functions :<->text1293.htm#14056<->functions :: Functions for Invariant Fields (INVARIANT THEORY)
5<->FundamentalInvariants(F) <->text1293.htm#14057<->FundamentalInvariants(F) : FldInvar -&gt; RngMPol
5<->DerksenIdeal(F) <->text1293.htm#14058<->DerksenIdeal(F) : FldInvar -&gt; RngMPol
5<->MinimizeGenerators(L) <->text1293.htm#14059<->MinimizeGenerators(L) : [FldFunRatElt] -&gt; [FldFunRatElt]
5<->QuadeIdeal(L) <->text1293.htm#14060<->QuadeIdeal(L) : [FldFunRatElt] -&gt; RngMPol
4<->RngInvar_InvarField1 (Example H116E22)<->text1293.htm#14061<->RngInvar_InvarField1 (Example H116E22)
4<->Example-InvarField1 :<->text1293.htm#14061<->Example-InvarField1 :: RngInvar_InvarField1 (Example H116E22)
4<->RngInvar_InvarField2 (Example H116E23)<->text1293.htm#14062<->RngInvar_InvarField2 (Example H116E23)
4<->Example-InvarField2 :<->text1293.htm#14062<->Example-InvarField2 :: RngInvar_InvarField2 (Example H116E23)
3<->functions :<->text1293.htm#14056<->functions :: Functions for Invariant Fields (INVARIANT THEORY)
3<->invariant-field :<->text1293.htm<->invariant-field :: Invariant Fields (INVARIANT THEORY)
3<->symmetric :<->text1294.htm<->symmetric :: Invariants of the Symmetric Group (INVARIANT THEORY)
5<->ElementarySymmetricPolynomial(P, k) <->text1294.htm#14064<->ElementarySymmetricPolynomial(P, k) : RngMPol, RngIntElt -&gt; RngMPolElt
5<->IsSymmetric(f, S) <->text1294.htm#14065<->IsSymmetric(f, S) : RngMPolElt, RngMPol -> BoolElt, RngMPolElt
5<->IsSymmetric(f) <->text1294.htm#14065<->IsSymmetric(f) : RngMPolElt -&gt; BoolElt, RngMPolElt
4<->RngInvar_IsSymmetric (Example H116E24)<->text1294.htm#14066<->RngInvar_IsSymmetric (Example H116E24)
4<->Example-IsSymmetric :<->text1294.htm#14066<->Example-IsSymmetric :: RngInvar_IsSymmetric (Example H116E24)
3<->symmetric :<->text1294.htm<->symmetric :: Invariants of the Symmetric Group (INVARIANT THEORY)
3<->invariant-ring :<->text1272.htm<->invariant-ring :: INVARIANT THEORY
3<->differential rings :<->text1297.htm<->differential rings :: DIFFERENTIAL RINGS
3<->diffrings :<->text1297.htm<->diffrings :: DIFFERENTIAL RINGS
3<->RngDiff :<->text1298.htm<->RngDiff :: Introduction (DIFFERENTIAL RINGS)
3<->RngDiffElt :<->text1298.htm<->RngDiffElt :: Introduction (DIFFERENTIAL RINGS)
3<->introduction :<->text1298.htm<->introduction :: Introduction (DIFFERENTIAL RINGS)
3<->creation-diff-rings :<->text1299.htm<->creation-diff-rings :: Differential Rings and Fields (DIFFERENTIAL RINGS)
3<->creation-diff-rings-fields :<->text1299.htm#14072<->creation-diff-rings-fields :: Creation (DIFFERENTIAL RINGS)
5<->DifferentialRing(P, f, C) <->text1299.htm#14073<->DifferentialRing(P, f, C) : Rng, Map, Rng -&gt; RngDiff
4<->RngDiff_diff-ring-create (Example H117E1)<->text1299.htm#14074<->RngDiff_diff-ring-create (Example H117E1)
4<->Example-diff-ring-create :<->text1299.htm#14074<->Example-diff-ring-create :: RngDiff_diff-ring-create (Example H117E1)
5<->RationalDifferentialField(C) <->text1299.htm#14075<->RationalDifferentialField(C) : Fld -&gt; RngDiff
4<->RngDiff_rat-diff-field-create (Example H117E2)<->text1299.htm#14076<->RngDiff_rat-diff-field-create (Example H117E2)
4<->Example-rat-diff-field-create :<->text1299.htm#14076<->Example-rat-diff-field-create :: RngDiff_rat-diff-field-create (Example H117E2)
5<->DifferentialLaurentSeriesRing(C) <->text1299.htm#14077<->DifferentialLaurentSeriesRing(C) : Fld -&gt; RngDiff
4<->RngDiff_diff-laur-ser-ring-create (Example H117E3)<->text1299.htm#14078<->RngDiff_diff-laur-ser-ring-create (Example H117E3)
4<->Example-diff-laur-ser-ring-create :<->text1299.htm#14078<->Example-diff-laur-ser-ring-create :: RngDiff_diff-laur-ser-ring-create (Example H117E3)
5<->RingOfFractions(R) <->text1299.htm#14079<->RingOfFractions(R) : RngDiff -&gt; RngDiff, Map
5<->FieldOfFractions(R) <->text1299.htm#14080<->FieldOfFractions(R) : RngDiff -&gt; RngDiff, Map
5<->AssignNames(~R,  S) <->text1299.htm#14081<->AssignNames(~R,  S) : RngDiff, [MonStgElt] -&gt;
3<->creation-diff-rings-fields :<->text1299.htm#14072<->creation-diff-rings-fields :: Creation (DIFFERENTIAL RINGS)
3<->creation-diff-ring-elts :<->text1299.htm#14082<->creation-diff-ring-elts :: Creation of Differential Ring  Elements (DIFFERENTIAL RINGS)
5<->. :: Name(R,  i) <->text1299.htm#14083<->. :: Name(R,  i) : RngDiff, RngIntElt -&gt; RngDiffElt
5<->Name(R,  i) <->text1299.htm#14083<->Name(R,  i) : RngDiff, RngIntElt -&gt; RngDiffElt
5<->R ! s <->text1299.htm#14084<->R ! s : RngDiff, RngElt -&gt; RngDiffElt
5<->Zero(R) <->text1299.htm#14085<->Zero(R) : RngDiff -&gt; RngDiffElt
5<->Identity :: One(R) <->text1299.htm#14086<->Identity :: One(R) : RngDiff -&gt; RngDiffElt
5<->One(R) <->text1299.htm#14086<->One(R) : RngDiff -&gt; RngDiffElt
5<->SeparatingElement(F) <->text1299.htm#14087<->SeparatingElement(F) : RngDiff -&gt; RngDiffElt
4<->RngDiff_diff-ring-element-creation (Example H117E4)<->text1299.htm#14088<->RngDiff_diff-ring-element-creation (Example H117E4)
4<->Example-diff-ring-element-creation :<->text1299.htm#14088<->Example-diff-ring-element-creation :: RngDiff_diff-ring-element-creation (Example H117E4)
3<->creation-diff-ring-elts :<->text1299.htm#14082<->creation-diff-ring-elts :: Creation of Differential Ring  Elements (DIFFERENTIAL RINGS)
3<->creation-diff-rings :<->text1299.htm<->creation-diff-rings :: Differential Rings and Fields (DIFFERENTIAL RINGS)
3<->structure-operations-diff-rings :<->text1300.htm<->structure-operations-diff-rings :: Structure Operations on Differential Rings (DIFFERENTIAL RINGS)
3<->category-parent-diff-rings :<->text1300.htm#14090<->category-parent-diff-rings :: Category and Parent (DIFFERENTIAL RINGS)
5<->Type :: Category(R) <->text1300.htm#14091<->Type :: Category(R) : RngDiff -&gt; RngDiff
5<->Category(R) <->text1300.htm#14091<->Category(R) : RngDiff -&gt; RngDiff
5<->Parent(R) <->text1300.htm#14092<->Parent(R) : RngDiff -&gt; PowStr
3<->category-parent-diff-rings :<->text1300.htm#14090<->category-parent-diff-rings :: Category and Parent (DIFFERENTIAL RINGS)
3<->related-structures-diff-rings :<->text1300.htm#14093<->related-structures-diff-rings :: Related Structures (DIFFERENTIAL RINGS)
5<->UnderlyingRing(R) <->text1300.htm#14094<->UnderlyingRing(R) : RngDiff -&gt; Rng
5<->UnderlyingField(R) <->text1300.htm#14095<->UnderlyingField(R) : RngDiff -&gt; Rng
5<->BaseRing(R) <->text1300.htm#14096<->BaseRing(R) : RngDiff -&gt; Rng
5<->BaseField(R) <->text1300.htm#14097<->BaseField(R) : RngDiff -&gt; Rng
5<->ConstantRing(R) <->text1300.htm#14098<->ConstantRing(R) : RngDiff -&gt; Rng
5<->ConstantField(R) <->text1300.htm#14099<->ConstantField(R) : RngDiff -&gt; Rng
5<->ExactConstantField(F) <->text1300.htm#14100<->ExactConstantField(F) : RngDiff -&gt; RngDiff, Map
5<->Generators(R) <->text1300.htm#14101<->Generators(R) : RngDiff -&gt; SeqEnum
4<->RngDiff_diff-ring-related-structures (Example H117E5)<->text1300.htm#14102<->RngDiff_diff-ring-related-structures (Example H117E5)
4<->Example-diff-ring-related-structures :<->text1300.htm#14102<->Example-diff-ring-related-structures :: RngDiff_diff-ring-related-structures (Example H117E5)
4<->RngDiff_diff-laur-ser-related-structures (Example H117E6)<->text1300.htm#14103<->RngDiff_diff-laur-ser-related-structures (Example H117E6)
4<->Example-diff-laur-ser-related-structures :<->text1300.htm#14103<->Example-diff-laur-ser-related-structures :: RngDiff_diff-laur-ser-related-structures (Example H117E6)
3<->related-structures-diff-rings :<->text1300.htm#14093<->related-structures-diff-rings :: Related Structures (DIFFERENTIAL RINGS)
3<->derivation-differential :<->text1300.htm#14104<->derivation-differential :: Derivation and Differential (DIFFERENTIAL RINGS)
5<->Derivation(R) <->text1300.htm#14105<->Derivation(R) : RngDiff -&gt; Map
5<->Differential(F) <->text1300.htm#14106<->Differential(F) : RngDiff -&gt; DiffFunElt
4<->RngDiff_diff-ring-derivation-differential (Example H117E7)<->text1300.htm#14107<->RngDiff_diff-ring-derivation-differential (Example H117E7)
4<->Example-diff-ring-derivation-differential :<->text1300.htm#14107<->Example-diff-ring-derivation-differential :: RngDiff_diff-ring-derivation-differential (Example H117E7)
3<->derivation-differential :<->text1300.htm#14104<->derivation-differential :: Derivation and Differential (DIFFERENTIAL RINGS)
3<->numerical-invariants-diff-rings :<->text1300.htm#14108<->numerical-invariants-diff-rings :: Numerical Invariants (DIFFERENTIAL RINGS)
5<->Ngens(R) <->text1300.htm#14109<->Ngens(R) : RngDiff -&gt; RngIntElt
3<->numerical-invariants-diff-rings :<->text1300.htm#14108<->numerical-invariants-diff-rings :: Numerical Invariants (DIFFERENTIAL RINGS)
3<->predicates-booleans-diff-rings :<->text1300.htm#14110<->predicates-booleans-diff-rings :: Predicates and Booleans (DIFFERENTIAL RINGS)
5<->R eq F <->text1300.htm#14111<->R eq F : RngDiff, RngDiff -&gt; BoolElt
5<->IsIdentical(R, F) <->text1300.htm#14112<->IsIdentical(R, F) : RngDiff, RngDiff -&gt; BoolElt
5<->IsDomain(R) <->text1300.htm#14113<->IsDomain(R) : RngDiff -&gt; BoolElt
5<->IsField(R) <->text1300.htm#14114<->IsField(R) : RngDiff -&gt; BoolElt
5<->IsDifferentialField(R) <->text1300.htm#14115<->IsDifferentialField(R) : Rng -&gt; BoolElt
5<->IsAlgebraicDifferentialField(R) <->text1300.htm#14116<->IsAlgebraicDifferentialField(R) : Rng -&gt; BoolElt
5<->IsDifferentialSeriesRing(R) <->text1300.htm#14117<->IsDifferentialSeriesRing(R) : Rng -&gt; BoolElt
5<->IsDifferentialLaurentSeriesRing(R) <->text1300.htm#14118<->IsDifferentialLaurentSeriesRing(R) : Rng -&gt; BoolElt
4<->RngDiff_diff-rings-booleans (Example H117E8)<->text1300.htm#14119<->RngDiff_diff-rings-booleans (Example H117E8)
4<->Example-diff-rings-booleans :<->text1300.htm#14119<->Example-diff-rings-booleans :: RngDiff_diff-rings-booleans (Example H117E8)
5<->HasProjectiveDerivation(F) <->text1300.htm#14120<->HasProjectiveDerivation(F) : RngDiff -&gt; BoolElt
5<->HasZeroDerivation(F) <->text1300.htm#14121<->HasZeroDerivation(F) : RngDiff -&gt; BoolElt
4<->RngDiff_diff-rings-booleans-derivation (Example H117E9)<->text1300.htm#14122<->RngDiff_diff-rings-booleans-derivation (Example H117E9)
4<->Example-diff-rings-booleans-derivation :<->text1300.htm#14122<->Example-diff-rings-booleans-derivation :: RngDiff_diff-rings-booleans-derivation (Example H117E9)
3<->predicates-booleans-diff-rings :<->text1300.htm#14110<->predicates-booleans-diff-rings :: Predicates and Booleans (DIFFERENTIAL RINGS)
3<->precision-diff-rings :<->text1300.htm#14123<->precision-diff-rings :: Precision (DIFFERENTIAL RINGS)
5<->RelativePrecision(F) <->text1300.htm#14124<->RelativePrecision(F) : RngDiff -&gt; RngElt
5<->RelativePrecisionOfDerivation(F) <->text1300.htm#14125<->RelativePrecisionOfDerivation(F) : RngDiff -&gt; RngElt
4<->RngDiff_diff-rings-relative-precision (Example H117E10)<->text1300.htm#14126<->RngDiff_diff-rings-relative-precision (Example H117E10)
4<->Example-diff-rings-relative-precision :<->text1300.htm#14126<->Example-diff-rings-relative-precision :: RngDiff_diff-rings-relative-precision (Example H117E10)
4<->RngDiff_Example-differential-ring-relative-precision-derivation (Example H117E11)<->text1300.htm#14127<->RngDiff_Example-differential-ring-relative-precision-derivation (Example H117E11)
4<->Example-Example-differential-ring-relative-precision-derivation :<->text1300.htm#14127<->Example-Example-differential-ring-relative-precision-derivation :: RngDiff_Example-differential-ring-relative-precision-derivation (Example H117E11)
5<->ChangePrecision(F, p) <->text1300.htm#14128<->ChangePrecision(F, p) : RngDiff, RngElt -&gt; RngDiff, Map
4<->RngDiff_diff-rings-change-precision (Example H117E12)<->text1300.htm#14129<->RngDiff_diff-rings-change-precision (Example H117E12)
4<->Example-diff-rings-change-precision :<->text1300.htm#14129<->Example-diff-rings-change-precision :: RngDiff_diff-rings-change-precision (Example H117E12)
3<->precision-diff-rings :<->text1300.htm#14123<->precision-diff-rings :: Precision (DIFFERENTIAL RINGS)
3<->structure-operations-diff-rings :<->text1300.htm<->structure-operations-diff-rings :: Structure Operations on Differential Rings (DIFFERENTIAL RINGS)
3<->element-operations :<->text1301.htm<->element-operations :: Element Operations on Differential Ring Elements (DIFFERENTIAL RINGS)
3<->category-parent-diff-ring-elts :<->text1301.htm#14131<->category-parent-diff-ring-elts :: Category and Parent (DIFFERENTIAL RINGS)
5<->Type :: Category(s) <->text1301.htm#14132<->Type :: Category(s) : RngDiffElt -&gt; RngDiffElt
5<->Category(s) <->text1301.htm#14132<->Category(s) : RngDiffElt -&gt; RngDiffElt
5<->Parent(s) <->text1301.htm#14133<->Parent(s) : RngDiffElt -&gt; RngDiff
3<->category-parent-diff-ring-elts :<->text1301.htm#14131<->category-parent-diff-ring-elts :: Category and Parent (DIFFERENTIAL RINGS)
3<->arithmetic-diff-ring-elts :<->text1301.htm#14134<->arithmetic-diff-ring-elts :: Arithmetic (DIFFERENTIAL RINGS)
5<->s + t <->text1301.htm#14135<->s + t : RngDiffElt, RngDiffElt -&gt; RngDiffElt
5<->- s <->text1301.htm#14136<->- s : RngDiffElt -&gt; RngDiffElt
5<->s - t <->text1301.htm#14137<->s - t : RngDiffElt, RngDiffElt -&gt; RngDiffElt
5<->s * t <->text1301.htm#14138<->s * t : RngDiffElt, RngDiffElt -&gt; RngDiffElt
5<->s ^ n <->text1301.htm#14139<->s ^ n : RngDiffElt, RngIntElt -&gt; RngDiffElt
5<->s div t <->text1301.htm#14140<->s div t : RngDiffElt, RngDiffElt -&gt; RngDiffElt
5<->s / t <->text1301.htm#14141<->s / t : RngDiffElt, RngDiffElt -&gt; RngDiffElt
3<->arithmetic-diff-ring-elts :<->text1301.htm#14134<->arithmetic-diff-ring-elts :: Arithmetic (DIFFERENTIAL RINGS)
3<->predicates-booleans-ring-diff-elts :<->text1301.htm#14142<->predicates-booleans-ring-diff-elts :: Predicates and Booleans (DIFFERENTIAL RINGS)
5<->s eq t <->text1301.htm#14143<->s eq t : RngDiffElt, RngDiffElt -&gt; BoolElt
5<->IsZero(s) <->text1301.htm#14144<->IsZero(s) : RngDiffElt -&gt; BoolElt
5<->IsOne(s) <->text1301.htm#14145<->IsOne(s) : RngDiffElt -&gt; BoolElt
5<->IsWeaklyEqual(s, t) <->text1301.htm#14146<->IsWeaklyEqual(s, t) : RngDiffElt, RngDiffElt -&gt; BoolElt
5<->IsWeaklyZero(s) <->text1301.htm#14147<->IsWeaklyZero(s) : RngDiffElt -&gt; BoolElt
5<->IsOrderTerm(s) <->text1301.htm#14148<->IsOrderTerm(s) : RngSerElt -> BoolElt
5<->IsOrderTerm(s) <->text1301.htm#14148<->IsOrderTerm(s) : RngDiffElt -&gt; BoolElt
4<->RngDiff_diff-ring-elts-booleans (Example H117E13)<->text1301.htm#14149<->RngDiff_diff-ring-elts-booleans (Example H117E13)
4<->Example-diff-ring-elts-booleans :<->text1301.htm#14149<->Example-diff-ring-elts-booleans :: RngDiff_diff-ring-elts-booleans (Example H117E13)
3<->predicates-booleans-ring-diff-elts :<->text1301.htm#14142<->predicates-booleans-ring-diff-elts :: Predicates and Booleans (DIFFERENTIAL RINGS)
3<->coefficients-terms-diff-ring-elts :<->text1301.htm#14150<->coefficients-terms-diff-ring-elts :: Coefficients and Terms (DIFFERENTIAL RINGS)
5<->O(s) <->text1301.htm#14151<->O(s) : RngDiffElt -&gt; RngDiffElt
5<->Truncate(s) <->text1301.htm#14152<->Truncate(s) : RngDiffElt -&gt; RngDiffElt
5<->Eltseq(s) <->text1301.htm#14153<->Eltseq(s) : RngDiffElt -&gt; SeqEnum
5<->Exponents(s) <->text1301.htm#14154<->Exponents(s) : RngSerElt -> SeqEnum
5<->Exponents(s) <->text1301.htm#14154<->Exponents(s) : RngDiffElt -&gt; SeqEnum
4<->RngDiff_Example-coefficients-terms-algebraic-differential-elements (Example H117E14)<->text1301.htm#14155<->RngDiff_Example-coefficients-terms-algebraic-differential-elements (Example H117E14)
4<->Example-Example-coefficients-terms-algebraic-differential-elements :<->text1301.htm#14155<->Example-Example-coefficients-terms-algebraic-differential-elements :: RngDiff_Example-coefficients-terms-algebraic-differential-elements (Example H117E14)
4<->RngDiff_Example-coefficients-terms-differential-series (Example H117E15)<->text1301.htm#14156<->RngDiff_Example-coefficients-terms-differential-series (Example H117E15)
4<->Example-Example-coefficients-terms-differential-series :<->text1301.htm#14156<->Example-Example-coefficients-terms-differential-series :: RngDiff_Example-coefficients-terms-differential-series (Example H117E15)
3<->coefficients-terms-diff-ring-elts :<->text1301.htm#14150<->coefficients-terms-diff-ring-elts :: Coefficients and Terms (DIFFERENTIAL RINGS)
3<->conjugates-norm-trace-diff-ring-elts :<->text1301.htm#14157<->conjugates-norm-trace-diff-ring-elts :: Conjugates, Norm and Trace (DIFFERENTIAL RINGS)
5<->MinimalPolynomial(s) <->text1301.htm#14158<->MinimalPolynomial(s) : RngDiffElt -&gt; RngUPolElt
4<->RngDiff_Example-minimal-polynomial-differential-rings (Example H117E16)<->text1301.htm#14159<->RngDiff_Example-minimal-polynomial-differential-rings (Example H117E16)
4<->Example-Example-minimal-polynomial-differential-rings :<->text1301.htm#14159<->Example-Example-minimal-polynomial-differential-rings :: RngDiff_Example-minimal-polynomial-differential-rings (Example H117E16)
3<->conjugates-norm-trace-diff-ring-elts :<->text1301.htm#14157<->conjugates-norm-trace-diff-ring-elts :: Conjugates, Norm and Trace (DIFFERENTIAL RINGS)
3<->derivation-differential-diff-ring-elts :<->text1301.htm#14160<->derivation-differential-diff-ring-elts :: Derivatives and Differentials (DIFFERENTIAL RINGS)
5<->Derivative(s) <->text1301.htm#14161<->Derivative(s) : RngDiffElt -&gt; RngDiffElt
5<->Differential(s) <->text1301.htm#14162<->Differential(s) : RngDiffElt -&gt; RngDiffElt
4<->RngDiff_derivative-differential-diff-ring-elements (Example H117E17)<->text1301.htm#14163<->RngDiff_derivative-differential-diff-ring-elements (Example H117E17)
4<->Example-derivative-differential-diff-ring-elements :<->text1301.htm#14163<->Example-derivative-differential-diff-ring-elements :: RngDiff_derivative-differential-diff-ring-elements (Example H117E17)
3<->derivation-differential-diff-ring-elts :<->text1301.htm#14160<->derivation-differential-diff-ring-elts :: Derivatives and Differentials (DIFFERENTIAL RINGS)
3<->element-operations :<->text1301.htm<->element-operations :: Element Operations on Differential Ring Elements (DIFFERENTIAL RINGS)
3<->changing-attributes-diff-rings :<->text1302.htm<->changing-attributes-diff-rings :: Changing Related Structures (DIFFERENTIAL RINGS)
5<->ChangeDerivation(R, f) <->text1302.htm#14165<->ChangeDerivation(R, f) : RngDiff, RngElt -&gt; RngDiff, Map
4<->RngDiff_diff-ring-change-derivation (Example H117E18)<->text1302.htm#14166<->RngDiff_diff-ring-change-derivation (Example H117E18)
4<->Example-diff-ring-change-derivation :<->text1302.htm#14166<->Example-diff-ring-change-derivation :: RngDiff_diff-ring-change-derivation (Example H117E18)
5<->ChangeDifferential(F, df) <->text1302.htm#14167<->ChangeDifferential(F, df) : RngDiff, DiffFunElt -&gt;  RngDiff, Map
4<->RngDiff_diff-ring-change-differential (Example H117E19)<->text1302.htm#14168<->RngDiff_diff-ring-change-differential (Example H117E19)
4<->Example-diff-ring-change-differential :<->text1302.htm#14168<->Example-diff-ring-change-differential :: RngDiff_diff-ring-change-differential (Example H117E19)
5<->ConstantFieldExtension(F, C) <->text1302.htm#14169<->ConstantFieldExtension(F, C) : RngDiff, Fld -&gt; RngDiff, Map
4<->RngDiff_diff-ring-constant-field-extension (Example H117E20)<->text1302.htm#14170<->RngDiff_diff-ring-constant-field-extension (Example H117E20)
4<->Example-diff-ring-constant-field-extension :<->text1302.htm#14170<->Example-diff-ring-constant-field-extension :: RngDiff_diff-ring-constant-field-extension (Example H117E20)
4<->RngDiff_diff-ring-constant-field-extension-series (Example H117E21)<->text1302.htm#14171<->RngDiff_diff-ring-constant-field-extension-series (Example H117E21)
4<->Example-diff-ring-constant-field-extension-series :<->text1302.htm#14171<->Example-diff-ring-constant-field-extension-series :: RngDiff_diff-ring-constant-field-extension-series (Example H117E21)
5<->Completion(F, p) <->text1302.htm#14172<->Completion(F, p) : RngDiff, PlcFunElt -&gt; RngDiff, Map
4<->RngDiff_diff-ring-completion-create (Example H117E22)<->text1302.htm#14173<->RngDiff_diff-ring-completion-create (Example H117E22)
4<->Example-diff-ring-completion-create :<->text1302.htm#14173<->Example-diff-ring-completion-create :: RngDiff_diff-ring-completion-create (Example H117E22)
4<->RngDiff_diff-ring-completion-elliptic (Example H117E23)<->text1302.htm#14174<->RngDiff_diff-ring-completion-elliptic (Example H117E23)
4<->Example-diff-ring-completion-elliptic :<->text1302.htm#14174<->Example-diff-ring-completion-elliptic :: RngDiff_diff-ring-completion-elliptic (Example H117E23)
3<->changing-attributes-diff-rings :<->text1302.htm<->changing-attributes-diff-rings :: Changing Related Structures (DIFFERENTIAL RINGS)
3<->extensions-ring-diff :<->text1303.htm<->extensions-ring-diff :: Ring and Field Extensions (DIFFERENTIAL RINGS)
5<->DifferentialRingExtension(L) <->text1303.htm#14176<->DifferentialRingExtension(L) : RngDiffOpElt -&gt; RngDiff
5<->DifferentialFieldExtension(L) <->text1303.htm#14177<->DifferentialFieldExtension(L) : RngDiffOpElt -&gt; RngDiff
4<->RngDiff_diff-ring-ext-operator (Example H117E24)<->text1303.htm#14178<->RngDiff_diff-ring-ext-operator (Example H117E24)
4<->Example-diff-ring-ext-operator :<->text1303.htm#14178<->Example-diff-ring-ext-operator :: RngDiff_diff-ring-ext-operator (Example H117E24)
4<->RngDiff_diff-field-ext-operator (Example H117E25)<->text1303.htm#14179<->RngDiff_diff-field-ext-operator (Example H117E25)
4<->Example-diff-field-ext-operator :<->text1303.htm#14179<->Example-diff-field-ext-operator :: RngDiff_diff-field-ext-operator (Example H117E25)
5<->ext< F | f > <->text1303.htm#14180<->ext&lt; F | f &gt; : RngDiff, RngUPolElt -&gt; RngDiff
4<->RngDiff_diff-field-ext-ext (Example H117E26)<->text1303.htm#14181<->RngDiff_diff-field-ext-ext (Example H117E26)
4<->Example-diff-field-ext-ext :<->text1303.htm#14181<->Example-diff-field-ext-ext :: RngDiff_diff-field-ext-ext (Example H117E26)
5<->ExponentialFieldExtension(F, f) <->text1303.htm#14182<->ExponentialFieldExtension(F, f) : RngDiff, RngDiffElt -&gt; RngDiff
5<->LogarithmicFieldExtension(F, f) <->text1303.htm#14183<->LogarithmicFieldExtension(F, f) : RngDiff, RngDiffElt -&gt; RngDiff
4<->RngDiff_diff-field-ext-exp-log (Example H117E27)<->text1303.htm#14184<->RngDiff_diff-field-ext-exp-log (Example H117E27)
4<->Example-diff-field-ext-exp-log :<->text1303.htm#14184<->Example-diff-field-ext-exp-log :: RngDiff_diff-field-ext-exp-log (Example H117E27)
5<->PurelyRamifiedExtension(f) <->text1303.htm#14185<->PurelyRamifiedExtension(f) : RngUPolElt[RngDiff] -&gt; RngDiff, Map
4<->RngDiff_diff-field-purely-ramified-ext-ADF (Example H117E28)<->text1303.htm#14186<->RngDiff_diff-field-purely-ramified-ext-ADF (Example H117E28)
4<->Example-diff-field-purely-ramified-ext-ADF :<->text1303.htm#14186<->Example-diff-field-purely-ramified-ext-ADF :: RngDiff_diff-field-purely-ramified-ext-ADF (Example H117E28)
4<->RngDiff_diff-field-purely-ramified-ext-DLSR-1 (Example H117E29)<->text1303.htm#14187<->RngDiff_diff-field-purely-ramified-ext-DLSR-1 (Example H117E29)
4<->Example-diff-field-purely-ramified-ext-DLSR-1 :<->text1303.htm#14187<->Example-diff-field-purely-ramified-ext-DLSR-1 :: RngDiff_diff-field-purely-ramified-ext-DLSR-1 (Example H117E29)
4<->RngDiff_diff-field-purely-ramified-ext-DLSR-2 (Example H117E30)<->text1303.htm#14188<->RngDiff_diff-field-purely-ramified-ext-DLSR-2 (Example H117E30)
4<->Example-diff-field-purely-ramified-ext-DLSR-2 :<->text1303.htm#14188<->Example-diff-field-purely-ramified-ext-DLSR-2 :: RngDiff_diff-field-purely-ramified-ext-DLSR-2 (Example H117E30)
3<->extensions-ring-diff :<->text1303.htm<->extensions-ring-diff :: Ring and Field Extensions (DIFFERENTIAL RINGS)
3<->ideal-quotient-ring :<->text1304.htm<->ideal-quotient-ring :: Ideals and Quotient Rings (DIFFERENTIAL RINGS)
3<->defining-ideal-quotient :<->text1304.htm#14190<->defining-ideal-quotient :: Defining Ideals and Quotient Rings (DIFFERENTIAL RINGS)
5<->DifferentialIdeal(L) <->text1304.htm#14191<->DifferentialIdeal(L) : [RngDiffElt] -&gt; RngMPol
5<->QuotientRing(R, I) <->text1304.htm#14192<->QuotientRing(R, I) : RngDiff, RngMPol -&gt; RngDiff, Map
4<->RngDiff_diff-ideal-quotient (Example H117E31)<->text1304.htm#14193<->RngDiff_diff-ideal-quotient (Example H117E31)
4<->Example-diff-ideal-quotient :<->text1304.htm#14193<->Example-diff-ideal-quotient :: RngDiff_diff-ideal-quotient (Example H117E31)
3<->defining-ideal-quotient :<->text1304.htm#14190<->defining-ideal-quotient :: Defining Ideals and Quotient Rings (DIFFERENTIAL RINGS)
3<->booleans-ideal :<->text1304.htm#14194<->booleans-ideal :: Boolean Operations on Ideals (DIFFERENTIAL RINGS)
5<->IsDifferentialIdeal(R, I) <->text1304.htm#14195<->IsDifferentialIdeal(R, I) : RngDiff, RngMPol -&gt; BoolElt
3<->booleans-ideal :<->text1304.htm#14194<->booleans-ideal :: Boolean Operations on Ideals (DIFFERENTIAL RINGS)
3<->ideal-quotient-ring :<->text1304.htm<->ideal-quotient-ring :: Ideals and Quotient Rings (DIFFERENTIAL RINGS)
3<->wronskians :<->text1305.htm<->wronskians :: Wronskian Matrix (DIFFERENTIAL RINGS)
5<->WronskianMatrix(L) <->text1305.htm#14197<->WronskianMatrix(L) : [RngDiffElt] -&gt; AlgMatElt
5<->WronskianDeterminant(L) <->text1305.htm#14198<->WronskianDeterminant(L) : [RngDiffElt] -&gt; RngDiffElt, AlgMatElt
4<->RngDiff_wronskian-mat-det (Example H117E32)<->text1305.htm#14199<->RngDiff_wronskian-mat-det (Example H117E32)
4<->Example-wronskian-mat-det :<->text1305.htm#14199<->Example-wronskian-mat-det :: RngDiff_wronskian-mat-det (Example H117E32)
3<->wronskians :<->text1305.htm<->wronskians :: Wronskian Matrix (DIFFERENTIAL RINGS)
3<->creation-diff-op-rings :<->text1306.htm<->creation-diff-op-rings :: Differential Operator Rings (DIFFERENTIAL RINGS)
3<->creation-diff-op-rings :<->text1306.htm#14201<->creation-diff-op-rings :: Creation (DIFFERENTIAL RINGS)
5<->DifferentialOperatorRing(F) <->text1306.htm#14202<->DifferentialOperatorRing(F) : RngDiff -&gt; RngDiffOp
4<->RngDiff_create-diff-op-ring (Example H117E33)<->text1306.htm#14203<->RngDiff_create-diff-op-ring (Example H117E33)
4<->Example-create-diff-op-ring :<->text1306.htm#14203<->Example-create-diff-op-ring :: RngDiff_create-diff-op-ring (Example H117E33)
5<->AssignNames(~R,  S) <->text1306.htm#14204<->AssignNames(~R,  S) : RngDiffOp, [MonStgElt] -&gt;
3<->creation-diff-op-rings :<->text1306.htm#14201<->creation-diff-op-rings :: Creation (DIFFERENTIAL RINGS)
3<->creation-diff-op-ring-elts :<->text1306.htm#14205<->creation-diff-op-ring-elts :: Creation of Differential Operators (DIFFERENTIAL RINGS)
5<->. :: Name(R,  i) <->text1306.htm#14206<->. :: Name(R,  i) : RngDiffOp, RngIntElt -&gt; RngDiffElt
5<->Name(R,  i) <->text1306.htm#14206<->Name(R,  i) : RngDiffOp, RngIntElt -&gt; RngDiffElt
5<->R ! s <->text1306.htm#14207<->R ! s : RngDiffOp, RngElt -&gt; RngDiffOpElt
5<->Zero(R) <->text1306.htm#14208<->Zero(R) : RngDiffOp -&gt; RngDiffOpElt
5<->One(R) <->text1306.htm#14209<->One(R) : RngDiffOp -&gt; RngDiffOpElt
4<->RngDiff_example-diff-op-coercion (Example H117E34)<->text1306.htm#14210<->RngDiff_example-diff-op-coercion (Example H117E34)
4<->Example-example-diff-op-coercion :<->text1306.htm#14210<->Example-example-diff-op-coercion :: RngDiff_example-diff-op-coercion (Example H117E34)
3<->creation-diff-op-ring-elts :<->text1306.htm#14205<->creation-diff-op-ring-elts :: Creation of Differential Operators (DIFFERENTIAL RINGS)
3<->creation-diff-op-rings :<->text1306.htm<->creation-diff-op-rings :: Differential Operator Rings (DIFFERENTIAL RINGS)
3<->structure-operations-diff-op-rings :<->text1307.htm<->structure-operations-diff-op-rings :: Structure Operations on Differential Operator Rings (DIFFERENTIAL RINGS)
3<->category-parent-diff-op-rings :<->text1307.htm#14212<->category-parent-diff-op-rings :: Category and Parent (DIFFERENTIAL RINGS)
5<->Type :: Category(R) <->text1307.htm#14213<->Type :: Category(R) : RngDiffOp -&gt; RngDiffOp
5<->Category(R) <->text1307.htm#14213<->Category(R) : RngDiffOp -&gt; RngDiffOp
5<->Parent(R) <->text1307.htm#14214<->Parent(R) : RngDiffOp -&gt; PowStr
3<->category-parent-diff-op-rings :<->text1307.htm#14212<->category-parent-diff-op-rings :: Category and Parent (DIFFERENTIAL RINGS)
3<->related-structures-diff-op-rings :<->text1307.htm#14215<->related-structures-diff-op-rings :: Related Structures (DIFFERENTIAL RINGS)
5<->CoefficientRing :: BaseRing(R) <->text1307.htm#14216<->CoefficientRing :: BaseRing(R) : RngDiffOp -&gt; Rng
5<->BaseRing(R) <->text1307.htm#14216<->BaseRing(R) : RngDiffOp -&gt; Rng
5<->ConstantRing(R) <->text1307.htm#14217<->ConstantRing(R) : RngDiffOp -&gt; Rng
3<->related-structures-diff-op-rings :<->text1307.htm#14215<->related-structures-diff-op-rings :: Related Structures (DIFFERENTIAL RINGS)
3<->diff-op-derivation-differential :<->text1307.htm#14218<->diff-op-derivation-differential :: Derivation and Differential (DIFFERENTIAL RINGS)
5<->Derivation(R) <->text1307.htm#14219<->Derivation(R) : RngDiffOp -&gt; Map
5<->Differential(R) <->text1307.htm#14220<->Differential(R) : RngDiffOp -&gt; DiffFunElt
4<->RngDiff_diff-op-ring_related_structures (Example H117E35)<->text1307.htm#14221<->RngDiff_diff-op-ring_related_structures (Example H117E35)
4<->Example-diff-op-ring_related_structures :<->text1307.htm#14221<->Example-diff-op-ring_related_structures :: RngDiff_diff-op-ring_related_structures (Example H117E35)
3<->diff-op-derivation-differential :<->text1307.htm#14218<->diff-op-derivation-differential :: Derivation and Differential (DIFFERENTIAL RINGS)
3<->predicates-booleans-diff-op-rings :<->text1307.htm#14222<->predicates-booleans-diff-op-rings :: Predicates and Booleans (DIFFERENTIAL RINGS)
5<->R eq F <->text1307.htm#14223<->R eq F : RngDiffOp, RngDiffOp -&gt; BoolElt
5<->IsIdentical(R, F) <->text1307.htm#14224<->IsIdentical(R, F) : RngDiffOp, RngDiffOp -&gt; BoolElt
5<->IsDifferentialOperatorRing(R) <->text1307.htm#14225<->IsDifferentialOperatorRing(R) : . -&gt; BoolElt
5<->HasProjectiveDerivation(R) <->text1307.htm#14226<->HasProjectiveDerivation(R) : RngDiffOp -&gt; BoolElt
5<->HasZeroDerivation(R) <->text1307.htm#14227<->HasZeroDerivation(R) : RngDiffOp -&gt; BoolElt
4<->RngDiff_diff-op-ring_booleans (Example H117E36)<->text1307.htm#14228<->RngDiff_diff-op-ring_booleans (Example H117E36)
4<->Example-diff-op-ring_booleans :<->text1307.htm#14228<->Example-diff-op-ring_booleans :: RngDiff_diff-op-ring_booleans (Example H117E36)
4<->RngDiff_diff-op-ring_booleans-LSR (Example H117E37)<->text1307.htm#14229<->RngDiff_diff-op-ring_booleans-LSR (Example H117E37)
4<->Example-diff-op-ring_booleans-LSR :<->text1307.htm#14229<->Example-diff-op-ring_booleans-LSR :: RngDiff_diff-op-ring_booleans-LSR (Example H117E37)
3<->predicates-booleans-diff-op-rings :<->text1307.htm#14222<->predicates-booleans-diff-op-rings :: Predicates and Booleans (DIFFERENTIAL RINGS)
3<->precision-diff-op-rings :<->text1307.htm#14230<->precision-diff-op-rings :: Precision (DIFFERENTIAL RINGS)
5<->RelativePrecisionOfDerivation(R) <->text1307.htm#14231<->RelativePrecisionOfDerivation(R) : RngDiffOp -&gt; RngElt
4<->RngDiff_diff-op-rings-relative-precision (Example H117E38)<->text1307.htm#14232<->RngDiff_diff-op-rings-relative-precision (Example H117E38)
4<->Example-diff-op-rings-relative-precision :<->text1307.htm#14232<->Example-diff-op-rings-relative-precision :: RngDiff_diff-op-rings-relative-precision (Example H117E38)
3<->precision-diff-op-rings :<->text1307.htm#14230<->precision-diff-op-rings :: Precision (DIFFERENTIAL RINGS)
3<->structure-operations-diff-op-rings :<->text1307.htm<->structure-operations-diff-op-rings :: Structure Operations on Differential Operator Rings (DIFFERENTIAL RINGS)
3<->element-operations-diff-op-rings :<->text1308.htm<->element-operations-diff-op-rings :: Element Operations on Differential Operators (DIFFERENTIAL RINGS)
3<->category-parent-diff-op-ring-elts :<->text1308.htm#14234<->category-parent-diff-op-ring-elts :: Category and Parent (DIFFERENTIAL RINGS)
5<->Type :: Category(L) <->text1308.htm#14235<->Type :: Category(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->Category(L) <->text1308.htm#14235<->Category(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->Parent(L) <->text1308.htm#14236<->Parent(L) : RngDiffOpElt -&gt; RngDiffOp
3<->category-parent-diff-op-ring-elts :<->text1308.htm#14234<->category-parent-diff-op-ring-elts :: Category and Parent (DIFFERENTIAL RINGS)
3<->arithmetic-diff-op-ring-elts :<->text1308.htm#14237<->arithmetic-diff-op-ring-elts :: Arithmetic (DIFFERENTIAL RINGS)
5<->s + t <->text1308.htm#14238<->s + t : RngDiffOpElt, RngElt -> RngDiffOpElt
5<->s + t <->text1308.htm#14238<->s + t : RngElt, RngDiffOpElt -> RngDiffOpElt
5<->s + t <->text1308.htm#14238<->s + t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->- s <->text1308.htm#14239<->- s : RngDiffOpElt -&gt; RngDiffOpElt
5<->s - t <->text1308.htm#14240<->s - t : RngDiffOpElt, RngElt -> RngDiffOpElt
5<->s - t <->text1308.htm#14240<->s - t : RngElt, RngDiffOpElt -> RngDiffOpElt
5<->s - t <->text1308.htm#14240<->s - t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->s * t <->text1308.htm#14241<->s * t : RngDiffOpElt, RngElt -> RngDiffOpElt
5<->s * t <->text1308.htm#14241<->s * t : RngElt, RngDiffOpElt -> RngDiffOpElt
5<->s * t <->text1308.htm#14241<->s * t : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->s ^ n <->text1308.htm#14242<->s ^ n : RngDiffOpElt, RngIntElt -&gt; RngDiffElt
4<->RngDiff_diff-op-arithmetic (Example H117E39)<->text1308.htm#14243<->RngDiff_diff-op-arithmetic (Example H117E39)
4<->Example-diff-op-arithmetic :<->text1308.htm#14243<->Example-diff-op-arithmetic :: RngDiff_diff-op-arithmetic (Example H117E39)
3<->arithmetic-diff-op-ring-elts :<->text1308.htm#14237<->arithmetic-diff-op-ring-elts :: Arithmetic (DIFFERENTIAL RINGS)
3<->predicates-booleans-ring-diff-elts :<->text1308.htm#14244<->predicates-booleans-ring-diff-elts :: Predicates and Booleans (DIFFERENTIAL RINGS)
5<->s eq t <->text1308.htm#14245<->s eq t : RngDiffOpElt, RngDiffOpElt -&gt; BoolElt
5<->IsZero(L) <->text1308.htm#14246<->IsZero(L) : RngDiffOpElt -&gt; BoolElt
5<->IsOne(L) <->text1308.htm#14247<->IsOne(L) : RngDiffOpElt -&gt; BoolElt
5<->IsMonic(L) <->text1308.htm#14248<->IsMonic(L) : RngDiffOpElt -&gt; BoolElt
5<->IsWeaklyEqual(L, P) <->text1308.htm#14249<->IsWeaklyEqual(L, P) : RngDiffOpElt, RngDiffOpElt -&gt; BoolElt
5<->IsWeaklyZero(L) <->text1308.htm#14250<->IsWeaklyZero(L) : RngDiffOpElt -&gt; BoolElt
5<->IsWeaklyMonic(L) <->text1308.htm#14251<->IsWeaklyMonic(L) : RngDiffOpElt -&gt; BoolElt
3<->predicates-booleans-ring-diff-elts :<->text1308.htm#14244<->predicates-booleans-ring-diff-elts :: Predicates and Booleans (DIFFERENTIAL RINGS)
3<->coeff-terms-diff-ring-op-elts :<->text1308.htm#14252<->coeff-terms-diff-ring-op-elts :: Coefficients and Terms (DIFFERENTIAL RINGS)
5<->Coefficients :: Eltseq(L) <->text1308.htm#14253<->Coefficients :: Eltseq(L) : RngDiffOpElt -&gt; SeqEnum
5<->Eltseq(L) <->text1308.htm#14253<->Eltseq(L) : RngDiffOpElt -&gt; SeqEnum
5<->Coefficient(L, i) <->text1308.htm#14254<->Coefficient(L, i) : RngDiffOpElt, RngIntElt -&gt; RngElt
5<->LeadingCoefficient(L) <->text1308.htm#14255<->LeadingCoefficient(L) : RngDiffOpElt -&gt; RngElt
5<->LeadingTerm(L) <->text1308.htm#14256<->LeadingTerm(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->Terms(L) <->text1308.htm#14257<->Terms(L) : RngDiffOpElt -&gt; SeqEnum
4<->RngDiff_diff-op-coeff-terms (Example H117E40)<->text1308.htm#14258<->RngDiff_diff-op-coeff-terms (Example H117E40)
4<->Example-diff-op-coeff-terms :<->text1308.htm#14258<->Example-diff-op-coeff-terms :: RngDiff_diff-op-coeff-terms (Example H117E40)
3<->coeff-terms-diff-ring-op-elts :<->text1308.htm#14252<->coeff-terms-diff-ring-op-elts :: Coefficients and Terms (DIFFERENTIAL RINGS)
3<->order-diff-ring-op-elts :<->text1308.htm#14259<->order-diff-ring-op-elts :: Order and Degree (DIFFERENTIAL RINGS)
5<->Degree :: Order(L) <->text1308.htm#14260<->Degree :: Order(L) : RngDiffOpElt -&gt; RngIntElt
5<->Order(L) <->text1308.htm#14260<->Order(L) : RngDiffOpElt -&gt; RngIntElt
5<->WeakDegree :: WeakOrder(L) <->text1308.htm#14261<->WeakDegree :: WeakOrder(L) : RngDiffOpElt -&gt; RngIntElt
5<->WeakOrder(L) <->text1308.htm#14261<->WeakOrder(L) : RngDiffOpElt -&gt; RngIntElt
4<->RngDiff_example-booleans-degrees-diff-ops (Example H117E41)<->text1308.htm#14262<->RngDiff_example-booleans-degrees-diff-ops (Example H117E41)
4<->Example-example-booleans-degrees-diff-ops :<->text1308.htm#14262<->Example-example-booleans-degrees-diff-ops :: RngDiff_example-booleans-degrees-diff-ops (Example H117E41)
3<->order-diff-ring-op-elts :<->text1308.htm#14259<->order-diff-ring-op-elts :: Order and Degree (DIFFERENTIAL RINGS)
3<->related-diff-ring-op-elts :<->text1308.htm#14263<->related-diff-ring-op-elts :: Related Differential Operators (DIFFERENTIAL RINGS)
5<->MonicDifferentialOperator(L) <->text1308.htm#14264<->MonicDifferentialOperator(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->Adjoint(L) <->text1308.htm#14265<->Adjoint(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->Translation(L, e) <->text1308.htm#14266<->Translation(L, e) : RngDiffOpElt, RngElt -&gt; RngDiffOpElt, Map
5<->TruncateCoefficients(L) <->text1308.htm#14267<->TruncateCoefficients(L) : RngDiffOpElt -&gt; RngDiffOpElt
4<->RngDiff_related-diff-op (Example H117E42)<->text1308.htm#14268<->RngDiff_related-diff-op (Example H117E42)
4<->Example-related-diff-op :<->text1308.htm#14268<->Example-related-diff-op :: RngDiff_related-diff-op (Example H117E42)
4<->RngDiff_related-diff-op-truncate-coefficients (Example H117E43)<->text1308.htm#14269<->RngDiff_related-diff-op-truncate-coefficients (Example H117E43)
4<->Example-related-diff-op-truncate-coefficients :<->text1308.htm#14269<->Example-related-diff-op-truncate-coefficients :: RngDiff_related-diff-op-truncate-coefficients (Example H117E43)
3<->related-diff-ring-op-elts :<->text1308.htm#14263<->related-diff-ring-op-elts :: Related Differential Operators (DIFFERENTIAL RINGS)
3<->apply-diff-ring-op-elts :<->text1308.htm#14270<->apply-diff-ring-op-elts :: Application of Operators (DIFFERENTIAL RINGS)
5<->Apply(L, f) <->text1308.htm#14271<->Apply(L, f) : RngDiffOpElt, RngElt -&gt; RngElt
5<->@ :: Apply(L, f) <->text1308.htm#14271<->@ :: Apply(L, f) : RngDiffOpElt, RngElt -&gt; RngElt
5<->Apply(L, f) <->text1308.htm#14271<->Apply(L, f) : RngDiffOpElt, RngElt -&gt; RngElt
4<->RngDiff_example-apply (Example H117E44)<->text1308.htm#14272<->RngDiff_example-apply (Example H117E44)
4<->Example-example-apply :<->text1308.htm#14272<->Example-example-apply :: RngDiff_example-apply (Example H117E44)
3<->apply-diff-ring-op-elts :<->text1308.htm#14270<->apply-diff-ring-op-elts :: Application of Operators (DIFFERENTIAL RINGS)
3<->element-operations-diff-op-rings :<->text1308.htm<->element-operations-diff-op-rings :: Element Operations on Differential Operators (DIFFERENTIAL RINGS)
3<->related-maps-diff-op-rings :<->text1309.htm<->related-maps-diff-op-rings :: Related Maps (DIFFERENTIAL RINGS)
5<->TranslationMap(R, e) <->text1309.htm#14274<->TranslationMap(R, e) : RngDiffOp, RngElt -&gt;  Map
5<->LiftMap(m, R) <->text1309.htm#14275<->LiftMap(m, R) : Map, RngDiffOp -&gt;  Map
4<->RngDiff_example-maps-between-diff-op-rings (Example H117E45)<->text1309.htm#14276<->RngDiff_example-maps-between-diff-op-rings (Example H117E45)
4<->Example-example-maps-between-diff-op-rings :<->text1309.htm#14276<->Example-example-maps-between-diff-op-rings :: RngDiff_example-maps-between-diff-op-rings (Example H117E45)
3<->related-maps-diff-op-rings :<->text1309.htm<->related-maps-diff-op-rings :: Related Maps (DIFFERENTIAL RINGS)
3<->changing-attributes-diff-op-rings :<->text1310.htm<->changing-attributes-diff-op-rings :: Changing Related Structures (DIFFERENTIAL RINGS)
5<->ChangeDerivation(R, f) <->text1310.htm#14278<->ChangeDerivation(R, f) : RngDiffOp, RngElt -&gt; RngDiffOp, Map
5<->ChangeDifferential(R, df) <->text1310.htm#14279<->ChangeDifferential(R, df) : RngDiffOp, DiffFunElt -&gt; RngDiffOp, Map
4<->RngDiff_example-diff-op-ring-changing-differential (Example H117E46)<->text1310.htm#14280<->RngDiff_example-diff-op-ring-changing-differential (Example H117E46)
4<->Example-example-diff-op-ring-changing-differential :<->text1310.htm#14280<->Example-example-diff-op-ring-changing-differential :: RngDiff_example-diff-op-ring-changing-differential (Example H117E46)
5<->ConstantFieldExtension(R, C) <->text1310.htm#14281<->ConstantFieldExtension(R, C) : RngDiffOp,Fld -&gt; RngDiffOp, Map
5<->PurelyRamifiedExtension(R,f) <->text1310.htm#14282<->PurelyRamifiedExtension(R,f) : RngDiffOp,RngUPolElt -&gt; RngDiffOp, Map
4<->RngDiff_diff-op-ring-purely-ramified-extension-DLSR (Example H117E47)<->text1310.htm#14283<->RngDiff_diff-op-ring-purely-ramified-extension-DLSR (Example H117E47)
4<->Example-diff-op-ring-purely-ramified-extension-DLSR :<->text1310.htm#14283<->Example-diff-op-ring-purely-ramified-extension-DLSR :: RngDiff_diff-op-ring-purely-ramified-extension-DLSR (Example H117E47)
5<->Completion(R, p) <->text1310.htm#14284<->Completion(R, p) : RngDiffOp, PlcFunElt  -&gt; RngDiffOp, Map
5<->Localization(R, p) <->text1310.htm#14285<->Localization(R, p) : RngDiffOp, PlcFunElt -&gt; RngDiffOp, Map, PlcFunElt
5<->Localization(L, p) <->text1310.htm#14286<->Localization(L, p) : RngDiffOpElt, PlcFunElt -&gt; RngDiffOpElt, Map, PlcFunElt
5<->Localization(R) <->text1310.htm#14287<->Localization(R) : RngDiffOp -&gt; RngDiffOp, Map
5<->Localization(L) <->text1310.htm#14288<->Localization(L) : RngDiffOpElt -&gt; RngDiffOpElt, Map
4<->RngDiff_example-diff-op-ring-changing-attributes-DLSR (Example H117E48)<->text1310.htm#14289<->RngDiff_example-diff-op-ring-changing-attributes-DLSR (Example H117E48)
4<->Example-example-diff-op-ring-changing-attributes-DLSR :<->text1310.htm#14289<->Example-example-diff-op-ring-changing-attributes-DLSR :: RngDiff_example-diff-op-ring-changing-attributes-DLSR (Example H117E48)
4<->RngDiff_example-diff-op-ring-completion (Example H117E49)<->text1310.htm#14290<->RngDiff_example-diff-op-ring-completion (Example H117E49)
4<->Example-example-diff-op-ring-completion :<->text1310.htm#14290<->Example-example-diff-op-ring-completion :: RngDiff_example-diff-op-ring-completion (Example H117E49)
4<->RngDiff_example-diff-op-ring-localization (Example H117E50)<->text1310.htm#14291<->RngDiff_example-diff-op-ring-localization (Example H117E50)
4<->Example-example-diff-op-ring-localization :<->text1310.htm#14291<->Example-example-diff-op-ring-localization :: RngDiff_example-diff-op-ring-localization (Example H117E50)
3<->changing-attributes-diff-op-rings :<->text1310.htm<->changing-attributes-diff-op-rings :: Changing Related Structures (DIFFERENTIAL RINGS)
3<->euclidean-algorithms :<->text1311.htm<->euclidean-algorithms :: Euclidean Algorithms, GCDs and LCMs (DIFFERENTIAL RINGS)
3<->euclidean-division :<->text1311.htm#14293<->euclidean-division :: Euclidean Right and Left Division (DIFFERENTIAL RINGS)
5<->EuclideanRightDivision(N, D) <->text1311.htm#14294<->EuclideanRightDivision(N, D) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt,RngDiffOpElt
5<->EuclideanLeftDivision(D, N) <->text1311.htm#14295<->EuclideanLeftDivision(D, N) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt,RngDiffOpElt
4<->RngDiff_example-eucl-alg (Example H117E51)<->text1311.htm#14296<->RngDiff_example-eucl-alg (Example H117E51)
4<->Example-example-eucl-alg :<->text1311.htm#14296<->Example-example-eucl-alg :: RngDiff_example-eucl-alg (Example H117E51)
3<->euclidean-division :<->text1311.htm#14293<->euclidean-division :: Euclidean Right and Left Division (DIFFERENTIAL RINGS)
3<->GCDs :<->text1311.htm#14297<->GCDs :: Greatest Common Right and Left Divisors (DIFFERENTIAL RINGS)
5<->GCRD :: GreatestCommonRightDivisor(A, B) <->text1311.htm#14298<->GCRD :: GreatestCommonRightDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->GreatestCommonRightDivisor(A, B) <->text1311.htm#14298<->GreatestCommonRightDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->ExtendedGreatestCommonRightDivisor(A, B) <->text1311.htm#14299<->ExtendedGreatestCommonRightDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt
5<->GCLD :: GreatestCommonLeftDivisor(A, B) <->text1311.htm#14300<->GCLD :: GreatestCommonLeftDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->GreatestCommonLeftDivisor(A, B) <->text1311.htm#14300<->GreatestCommonLeftDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->ExtendedGreatestCommonLeftDivisor(A, B) <->text1311.htm#14301<->ExtendedGreatestCommonLeftDivisor(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt
4<->RngDiff_example-GCRD-GCLD (Example H117E52)<->text1311.htm#14302<->RngDiff_example-GCRD-GCLD (Example H117E52)
4<->Example-example-GCRD-GCLD :<->text1311.htm#14302<->Example-example-GCRD-GCLD :: RngDiff_example-GCRD-GCLD (Example H117E52)
3<->GCDs :<->text1311.htm#14297<->GCDs :: Greatest Common Right and Left Divisors (DIFFERENTIAL RINGS)
3<->euclidean-division :<->text1311.htm#14303<->euclidean-division :: Least Common Left Multiples (DIFFERENTIAL RINGS)
5<->LeastCommonLeftMultiple(L) <->text1311.htm#14304<->LeastCommonLeftMultiple(L) : RngDiffOpElt -&gt; RngDiffOpElt
5<->LCLM :: LeastCommonLeftMultiple(A, B) <->text1311.htm#14305<->LCLM :: LeastCommonLeftMultiple(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->LeastCommonLeftMultiple(A, B) <->text1311.htm#14305<->LeastCommonLeftMultiple(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt
5<->ExtendedLeastCommonLeftMultiple(A, B) <->text1311.htm#14306<->ExtendedLeastCommonLeftMultiple(A, B) : RngDiffOpElt, RngDiffOpElt -&gt; RngDiffOpElt, RngDiffOpElt, RngDiffOpElt
5<->ExtendedLeastCommonLeftMultiple(S) <->text1311.htm#14307<->ExtendedLeastCommonLeftMultiple(S) : [RngDiffOpElt]  -&gt; RngDiffOpElt, SeqEnum
4<->RngDiff_example-LCLM (Example H117E53)<->text1311.htm#14308<->RngDiff_example-LCLM (Example H117E53)
4<->Example-example-LCLM :<->text1311.htm#14308<->Example-example-LCLM :: RngDiff_example-LCLM (Example H117E53)
4<->RngDiff_example-LCLM-conjugates (Example H117E54)<->text1311.htm#14309<->RngDiff_example-LCLM-conjugates (Example H117E54)
4<->Example-example-LCLM-conjugates :<->text1311.htm#14309<->Example-example-LCLM-conjugates :: RngDiff_example-LCLM-conjugates (Example H117E54)
3<->euclidean-division :<->text1311.htm#14303<->euclidean-division :: Least Common Left Multiples (DIFFERENTIAL RINGS)
3<->euclidean-algorithms :<->text1311.htm<->euclidean-algorithms :: Euclidean Algorithms, GCDs and LCMs (DIFFERENTIAL RINGS)
3<->related-matrix :<->text1312.htm<->related-matrix :: Related Matrices (DIFFERENTIAL RINGS)
5<->CompanionMatrix(L) <->text1312.htm#14311<->CompanionMatrix(L) : RngDiffOpElt -&gt; AlgMatElt
4<->RngDiff_example-companion-matrix (Example H117E55)<->text1312.htm#14312<->RngDiff_example-companion-matrix (Example H117E55)
4<->Example-example-companion-matrix :<->text1312.htm#14312<->Example-example-companion-matrix :: RngDiff_example-companion-matrix (Example H117E55)
3<->related-matrix :<->text1312.htm<->related-matrix :: Related Matrices (DIFFERENTIAL RINGS)
3<->singularities :<->text1313.htm<->singularities :: Singular Places and Indicial  Polynomials (DIFFERENTIAL RINGS)
3<->singular-places :<->text1313.htm#14314<->singular-places :: Singular Places (DIFFERENTIAL RINGS)
5<->IsRegularPlace(L, p) <->text1313.htm#14315<->IsRegularPlace(L, p) : RngDiffOpElt, PlcFunElt -&gt; BoolElt
5<->IsRegularSingularPlace(L, p) <->text1313.htm#14316<->IsRegularSingularPlace(L, p) : RngDiffOpElt, PlcFunElt -&gt; BoolElt
5<->IsIrregularSingularPlace(L, p) <->text1313.htm#14317<->IsIrregularSingularPlace(L, p) : RngDiffOpElt, PlcFunElt -&gt; BoolElt
5<->SetsOfSingularPlaces(L) <->text1313.htm#14318<->SetsOfSingularPlaces(L) : RngDiffOpElt -&gt; SetEnum, SetEnum
5<->IsFuchsianOperator(L) <->text1313.htm#14319<->IsFuchsianOperator(L) : RngDiffOpElt -&gt; BoolElt, SetEnum
5<->IsRegularSingularOperator(L) <->text1313.htm#14320<->IsRegularSingularOperator(L) : RngDiffOpElt -&gt; BoolElt, SetEnum
4<->RngDiff_example-singularities (Example H117E56)<->text1313.htm#14321<->RngDiff_example-singularities (Example H117E56)
4<->Example-example-singularities :<->text1313.htm#14321<->Example-example-singularities :: RngDiff_example-singularities (Example H117E56)
4<->RngDiff_example-regular-singular-DLSR (Example H117E57)<->text1313.htm#14322<->RngDiff_example-regular-singular-DLSR (Example H117E57)
4<->Example-example-regular-singular-DLSR :<->text1313.htm#14322<->Example-example-regular-singular-DLSR :: RngDiff_example-regular-singular-DLSR (Example H117E57)
3<->singular-places :<->text1313.htm#14314<->singular-places :: Singular Places (DIFFERENTIAL RINGS)
3<->indicial-polynomial :<->text1313.htm#14323<->indicial-polynomial :: Indicial Polynomials (DIFFERENTIAL RINGS)
5<->IndicialPolynomial(L, p) <->text1313.htm#14324<->IndicialPolynomial(L, p) : RngDiffOpElt, PlcFunElt -&gt; RngElt
4<->RngDiff_example-indicial-pol (Example H117E58)<->text1313.htm#14325<->RngDiff_example-indicial-pol (Example H117E58)
4<->Example-example-indicial-pol :<->text1313.htm#14325<->Example-example-indicial-pol :: RngDiff_example-indicial-pol (Example H117E58)
3<->indicial-polynomial :<->text1313.htm#14323<->indicial-polynomial :: Indicial Polynomials (DIFFERENTIAL RINGS)
3<->singularities :<->text1313.htm<->singularities :: Singular Places and Indicial  Polynomials (DIFFERENTIAL RINGS)
3<->rational-sols :<->text1314.htm<->rational-sols :: Rational Solutions (DIFFERENTIAL RINGS)
5<->RationalSolutions(L) <->text1314.htm#14327<->RationalSolutions(L) : RngDiffOpElt -&gt; SeqEnum
5<->HasRationalSolutions(L, g) <->text1314.htm#14328<->HasRationalSolutions(L, g) : RngDiffOpElt, RngElt -&gt; BoolElt, RngElt, SeqEnum
4<->RngDiff_example-rational-sols (Example H117E59)<->text1314.htm#14329<->RngDiff_example-rational-sols (Example H117E59)
4<->Example-example-rational-sols :<->text1314.htm#14329<->Example-example-rational-sols :: RngDiff_example-rational-sols (Example H117E59)
3<->rational-sols :<->text1314.htm<->rational-sols :: Rational Solutions (DIFFERENTIAL RINGS)
3<->newton-polygon :<->text1315.htm<->newton-polygon :: Newton Polygons (DIFFERENTIAL RINGS)
5<->NewtonPolygon(L) <->text1315.htm#14331<->NewtonPolygon(L) : RngDiffOpElt -&gt; NwtnPgon, RingDiffOpElt
5<->NewtonPolygon(L, p) <->text1315.htm#14332<->NewtonPolygon(L, p) : RngDiffOpElt, PlcFunElt -&gt; NwtnPgon, RingDiffOpElt
5<->NewtonPolynomial(F) <->text1315.htm#14333<->NewtonPolynomial(F) : NwtnPgonFace -&gt; RngUPolElt
5<->NewtonPolynomials(L) <->text1315.htm#14334<->NewtonPolynomials(L) : RngDiffOpElt -&gt; SeqEnum, SeqEnum
4<->RngDiff_example-newton-pgns-1 (Example H117E60)<->text1315.htm#14335<->RngDiff_example-newton-pgns-1 (Example H117E60)
4<->Example-example-newton-pgns-1 :<->text1315.htm#14335<->Example-example-newton-pgns-1 :: RngDiff_example-newton-pgns-1 (Example H117E60)
4<->RngDiff_example-newton-pgns-2 (Example H117E61)<->text1315.htm#14336<->RngDiff_example-newton-pgns-2 (Example H117E61)
4<->Example-example-newton-pgns-2 :<->text1315.htm#14336<->Example-example-newton-pgns-2 :: RngDiff_example-newton-pgns-2 (Example H117E61)
4<->RngDiff_example-newton-pgns-3 (Example H117E62)<->text1315.htm#14337<->RngDiff_example-newton-pgns-3 (Example H117E62)
4<->Example-example-newton-pgns-3 :<->text1315.htm#14337<->Example-example-newton-pgns-3 :: RngDiff_example-newton-pgns-3 (Example H117E62)
3<->newton-polygon :<->text1315.htm<->newton-polygon :: Newton Polygons (DIFFERENTIAL RINGS)
3<->symmetric-power :<->text1316.htm<->symmetric-power :: Symmetric Powers (DIFFERENTIAL RINGS)
5<->SymmetricPower(L, m) <->text1316.htm#14339<->SymmetricPower(L, m) : RngDiffOpElt, RngIntElt -&gt; RngDiffOpElt
4<->RngDiff_example-symmetric-power (Example H117E63)<->text1316.htm#14340<->RngDiff_example-symmetric-power (Example H117E63)
4<->Example-example-symmetric-power :<->text1316.htm#14340<->Example-example-symmetric-power :: RngDiff_example-symmetric-power (Example H117E63)
3<->symmetric-power :<->text1316.htm<->symmetric-power :: Symmetric Powers (DIFFERENTIAL RINGS)
3<->operators-of-functions :<->text1317.htm<->operators-of-functions :: Differential Operators of Algebraic Functions (DIFFERENTIAL RINGS)
5<->DifferentialOperator(f) <->text1317.htm#14342<->DifferentialOperator(f) : RngUPolElt -&gt; RngDiffOpElt
4<->RngDiff_example-diff-op-algebraic-function (Example H117E64)<->text1317.htm#14343<->RngDiff_example-diff-op-algebraic-function (Example H117E64)
4<->Example-example-diff-op-algebraic-function :<->text1317.htm#14343<->Example-example-diff-op-algebraic-function :: RngDiff_example-diff-op-algebraic-function (Example H117E64)
3<->operators-of-functions :<->text1317.htm<->operators-of-functions :: Differential Operators of Algebraic Functions (DIFFERENTIAL RINGS)
3<->operators-factorisation-over-laurent-series-ring :<->text1318.htm<->operators-factorisation-over-laurent-series-ring :: Factorisation of Operators over Differential Laurent Series  Rings (DIFFERENTIAL RINGS)
3<->differential-operators-slope-valuation :<->text1318.htm#14345<->differential-operators-slope-valuation :: Slope Valuation of an Operator (DIFFERENTIAL RINGS)
5<->SlopeValuation(L,s) <->text1318.htm#14346<->SlopeValuation(L,s) : RngDiffOpElt, RngElt -&gt; FldRatElt
4<->RngDiff_example-diff-op-slope-valuation (Example H117E65)<->text1318.htm#14347<->RngDiff_example-diff-op-slope-valuation (Example H117E65)
4<->Example-example-diff-op-slope-valuation :<->text1318.htm#14347<->Example-example-diff-op-slope-valuation :: RngDiff_example-diff-op-slope-valuation (Example H117E65)
3<->differential-operators-slope-valuation :<->text1318.htm#14345<->differential-operators-slope-valuation :: Slope Valuation of an Operator (DIFFERENTIAL RINGS)
3<->differential-operators-coprimeindex1-factorisation :<->text1318.htm#14348<->differential-operators-coprimeindex1-factorisation :: Coprime Index 1 and LCLM Factorisation (DIFFERENTIAL RINGS)
5<->Factorization :: Factorisation(L) <->text1318.htm#14349<->Factorization :: Factorisation(L) : RngDiffOpElt -&gt; SeqEnum, SeqEnum
5<->Factorisation(L) <->text1318.htm#14349<->Factorisation(L) : RngDiffOpElt -&gt; SeqEnum, SeqEnum
4<->RngDiff_example-diff-op-factorisation-LCLM-1 (Example H117E66)<->text1318.htm#14350<->RngDiff_example-diff-op-factorisation-LCLM-1 (Example H117E66)
4<->Example-example-diff-op-factorisation-LCLM-1 :<->text1318.htm#14350<->Example-example-diff-op-factorisation-LCLM-1 :: RngDiff_example-diff-op-factorisation-LCLM-1 (Example H117E66)
4<->RngDiff_example-diff-op-factorisation-LCLM-2 (Example H117E67)<->text1318.htm#14351<->RngDiff_example-diff-op-factorisation-LCLM-2 (Example H117E67)
4<->Example-example-diff-op-factorisation-LCLM-2 :<->text1318.htm#14351<->Example-example-diff-op-factorisation-LCLM-2 :: RngDiff_example-diff-op-factorisation-LCLM-2 (Example H117E67)
4<->RngDiff_example-diff-op-factorisation-LCLM-3 (Example H117E68)<->text1318.htm#14352<->RngDiff_example-diff-op-factorisation-LCLM-3 (Example H117E68)
4<->Example-example-diff-op-factorisation-LCLM-3 :<->text1318.htm#14352<->Example-example-diff-op-factorisation-LCLM-3 :: RngDiff_example-diff-op-factorisation-LCLM-3 (Example H117E68)
4<->RngDiff_example-diff-op-factorisation-LCLM-4 (Example H117E69)<->text1318.htm#14353<->RngDiff_example-diff-op-factorisation-LCLM-4 (Example H117E69)
4<->Example-example-diff-op-factorisation-LCLM-4 :<->text1318.htm#14353<->Example-example-diff-op-factorisation-LCLM-4 :: RngDiff_example-diff-op-factorisation-LCLM-4 (Example H117E69)
4<->RngDiff_example-diff-op-factorisation-LCLM-5 (Example H117E70)<->text1318.htm#14354<->RngDiff_example-diff-op-factorisation-LCLM-5 (Example H117E70)
4<->Example-example-diff-op-factorisation-LCLM-5 :<->text1318.htm#14354<->Example-example-diff-op-factorisation-LCLM-5 :: RngDiff_example-diff-op-factorisation-LCLM-5 (Example H117E70)
4<->RngDiff_example-diff-op-factorisation-LCLM-6 (Example H117E71)<->text1318.htm#14355<->RngDiff_example-diff-op-factorisation-LCLM-6 (Example H117E71)
4<->Example-example-diff-op-factorisation-LCLM-6 :<->text1318.htm#14355<->Example-example-diff-op-factorisation-LCLM-6 :: RngDiff_example-diff-op-factorisation-LCLM-6 (Example H117E71)
3<->differential-operators-coprimeindex1-factorisation :<->text1318.htm#14348<->differential-operators-coprimeindex1-factorisation :: Coprime Index 1 and LCLM Factorisation (DIFFERENTIAL RINGS)
3<->differential-operators-right-hand-factors :<->text1318.htm#14356<->differential-operators-right-hand-factors :: Right Hand Factors of Operators (DIFFERENTIAL RINGS)
5<->RightHandFactors(L) <->text1318.htm#14357<->RightHandFactors(L) : RngDiffOpElt -&gt; SeqEnum, [BoolElt]
4<->RngDiff_example-diff-op-righthandfactors-1 (Example H117E72)<->text1318.htm#14358<->RngDiff_example-diff-op-righthandfactors-1 (Example H117E72)
4<->Example-example-diff-op-righthandfactors-1 :<->text1318.htm#14358<->Example-example-diff-op-righthandfactors-1 :: RngDiff_example-diff-op-righthandfactors-1 (Example H117E72)
4<->RngDiff_example-diff-op-righthandfactors-2 (Example H117E73)<->text1318.htm#14359<->RngDiff_example-diff-op-righthandfactors-2 (Example H117E73)
4<->Example-example-diff-op-righthandfactors-2 :<->text1318.htm#14359<->Example-example-diff-op-righthandfactors-2 :: RngDiff_example-diff-op-righthandfactors-2 (Example H117E73)
4<->RngDiff_example-diff-op-righthandfactors-3 (Example H117E74)<->text1318.htm#14360<->RngDiff_example-diff-op-righthandfactors-3 (Example H117E74)
4<->Example-example-diff-op-righthandfactors-3 :<->text1318.htm#14360<->Example-example-diff-op-righthandfactors-3 :: RngDiff_example-diff-op-righthandfactors-3 (Example H117E74)
4<->RngDiff_example-diff-op-righthandfactors-4 (Example H117E75)<->text1318.htm#14361<->RngDiff_example-diff-op-righthandfactors-4 (Example H117E75)
4<->Example-example-diff-op-righthandfactors-4 :<->text1318.htm#14361<->Example-example-diff-op-righthandfactors-4 :: RngDiff_example-diff-op-righthandfactors-4 (Example H117E75)
4<->RngDiff_example-diff-op-righthandfactors-5 (Example H117E76)<->text1318.htm#14362<->RngDiff_example-diff-op-righthandfactors-5 (Example H117E76)
4<->Example-example-diff-op-righthandfactors-5 :<->text1318.htm#14362<->Example-example-diff-op-righthandfactors-5 :: RngDiff_example-diff-op-righthandfactors-5 (Example H117E76)
4<->RngDiff_example-diff-op-righthandfactors-5 (Example H117E77)<->text1318.htm#14363<->RngDiff_example-diff-op-righthandfactors-5 (Example H117E77)
4<->Example-example-diff-op-righthandfactors-5 :<->text1318.htm#14363<->Example-example-diff-op-righthandfactors-5 :: RngDiff_example-diff-op-righthandfactors-5 (Example H117E77)
3<->differential-operators-right-hand-factors :<->text1318.htm#14356<->differential-operators-right-hand-factors :: Right Hand Factors of Operators (DIFFERENTIAL RINGS)
3<->operators-factorisation-over-laurent-series-ring :<->text1318.htm<->operators-factorisation-over-laurent-series-ring :: Factorisation of Operators over Differential Laurent Series  Rings (DIFFERENTIAL RINGS)
3<->diffrings :<->text1297.htm<->diffrings :: DIFFERENTIAL RINGS
3<->schemes :<->text1321.htm<->schemes :: SCHEMES
3<->introduction :<->text1322.htm<->introduction :: Introduction and First Examples (SCHEMES)
3<->intro-ambient :<->text1322.htm#14368<->intro-ambient :: Ambient Spaces (SCHEMES)
4<->Scheme_EXAMPLE (Example H118E1)<->text1322.htm#14369<->Scheme_EXAMPLE (Example H118E1)
4<->Example-EXAMPLE :<->text1322.htm#14369<->Example-EXAMPLE :: Scheme_EXAMPLE (Example H118E1)
3<->intro-ambient :<->text1322.htm#14368<->intro-ambient :: Ambient Spaces (SCHEMES)
3<->intro-schemes :<->text1322.htm#14370<->intro-schemes :: Schemes (SCHEMES)
4<->Scheme_ex2 (Example H118E2)<->text1322.htm#14371<->Scheme_ex2 (Example H118E2)
4<->Example-ex2 :<->text1322.htm#14371<->Example-ex2 :: Scheme_ex2 (Example H118E2)
3<->intro-schemes :<->text1322.htm#14370<->intro-schemes :: Schemes (SCHEMES)
3<->intro-points :<->text1322.htm#14372<->intro-points :: Rational Points (SCHEMES)
4<->Scheme_ex3 (Example H118E3)<->text1322.htm#14373<->Scheme_ex3 (Example H118E3)
4<->Example-ex3 :<->text1322.htm#14373<->Example-ex3 :: Scheme_ex3 (Example H118E3)
3<->intro-points :<->text1322.htm#14372<->intro-points :: Rational Points (SCHEMES)
3<->intro-closure :<->text1322.htm#14374<->intro-closure :: Projective Closure (SCHEMES)
4<->Scheme_ex4 (Example H118E4)<->text1322.htm#14375<->Scheme_ex4 (Example H118E4)
4<->Example-ex4 :<->text1322.htm#14375<->Example-ex4 :: Scheme_ex4 (Example H118E4)
3<->intro-closure :<->text1322.htm#14374<->intro-closure :: Projective Closure (SCHEMES)
3<->intro-map :<->text1322.htm#14376<->intro-map :: Maps (SCHEMES)
4<->Scheme_ex5 (Example H118E5)<->text1322.htm#14377<->Scheme_ex5 (Example H118E5)
4<->Example-ex5 :<->text1322.htm#14377<->Example-ex5 :: Scheme_ex5 (Example H118E5)
3<->intro-map :<->text1322.htm#14376<->intro-map :: Maps (SCHEMES)
3<->intro-linsys :<->text1322.htm#14378<->intro-linsys :: Linear Systems (SCHEMES)
4<->Scheme_ex6 (Example H118E6)<->text1322.htm#14379<->Scheme_ex6 (Example H118E6)
4<->Example-ex6 :<->text1322.htm#14379<->Example-ex6 :: Scheme_ex6 (Example H118E6)
3<->intro-linsys :<->text1322.htm#14378<->intro-linsys :: Linear Systems (SCHEMES)
3<->intro-types :: Aside<->text1322.htm#14380<->intro-types :: Aside: Types of Schemes (SCHEMES)
3<->introduction :<->text1322.htm<->introduction :: Introduction and First Examples (SCHEMES)
3<->schemes-ambient :<->text1323.htm<->schemes-ambient :: Ambients (SCHEMES)
3<->schemes-standard :<->text1323.htm#14382<->schemes-standard :: Affine and Projective Spaces (SCHEMES)
5<->AffineSpace(k,n) <->text1323.htm#14383<->AffineSpace(k,n) : Rng,RngIntElt -&gt; Aff
5<->ProjectiveSpace(k,W) <->text1323.htm#14384<->ProjectiveSpace(k,W) : Rng,[RngIntElt] -> Prj
5<->ProjectiveSpace(k,n) <->text1323.htm#14384<->ProjectiveSpace(k,n) : Rng,RngIntElt -&gt; Prj
5<->Spec :: AffineSpace(R) <->text1323.htm#14385<->Spec :: AffineSpace(R) : RngMPol -&gt; Aff
5<->AffineSpace(R) <->text1323.htm#14385<->AffineSpace(R) : RngMPol -&gt; Aff
5<->ProjectiveSpace(R) <->text1323.htm#14386<->ProjectiveSpace(R) : RngMPol -&gt; Prj
5<->AssignNames(~A,N) <->text1323.htm#14387<->AssignNames(~A,N) : Sch,[MonStgElt] -&gt;
5<->Name :: A . i <->text1323.htm#14388<->Name :: A . i : Sch,RngIntElt -&gt; RngMPolElt
5<->A . i <->text1323.htm#14388<->A . i : Sch,RngIntElt -&gt; RngMPolElt
4<->Scheme_affine-space-names (Example H118E7)<->text1323.htm#14389<->Scheme_affine-space-names (Example H118E7)
4<->Example-affine-space-names :<->text1323.htm#14389<->Example-affine-space-names :: Scheme_affine-space-names (Example H118E7)
5<->A eq B <->text1323.htm#14390<->A eq B : Sch,Sch -&gt; BoolElt
3<->schemes-standard :<->text1323.htm#14382<->schemes-standard :: Affine and Projective Spaces (SCHEMES)
3<->schemes-scrolls :<->text1323.htm#14391<->schemes-scrolls :: Scrolls and Products (SCHEMES)
5<->DirectProduct(A,B) <->text1323.htm#14392<->DirectProduct(A,B) : Sch,Sch -&gt; Sch,SeqEnum
5<->RuledSurface(k,a,b) <->text1323.htm#14393<->RuledSurface(k,a,b) : Rng,RngIntElt,RngIntElt -&gt; PrjScrl
5<->RuledSurface(k,n) <->text1323.htm#14394<->RuledSurface(k,n) : Rng,RngIntElt -&gt; PrjScrl
5<->AbsoluteRationalScroll(k,N) <->text1323.htm#14395<->AbsoluteRationalScroll(k,N) : Rng,SeqEnum -&gt; PrjScrl
5<->ProductProjectiveSpace(k,N) <->text1323.htm#14396<->ProductProjectiveSpace(k,N) : Rng,SeqEnum -&gt; PrjScrl
5<->SegreProduct(Xs) <->text1323.htm#14397<->SegreProduct(Xs) : SeqEnum[Sch] -&gt; Sch, SeqEnum
5<->SegreEmbedding(X) <->text1323.htm#14398<->SegreEmbedding(X) : Sch -&gt; Sch, MapIsoSch
4<->Scheme_sch<->text1323.htm#14399<->Scheme_sch:segre-embedding (Example H118E8)
4<->Example-sch:segre-embedding :: Scheme_sch<->text1323.htm#14399<->Example-sch:segre-embedding :: Scheme_sch:segre-embedding (Example H118E8)
3<->schemes-scrolls :<->text1323.htm#14391<->schemes-scrolls :: Scrolls and Products (SCHEMES)
3<->schemes-ambient-functions :<->text1323.htm#14400<->schemes-ambient-functions :: Functions and Homogeneity on  Ambient Spaces (SCHEMES)
5<->CoordinateRing(A) <->text1323.htm#14401<->CoordinateRing(A) : Sch -&gt; Rng
5<->FunctionField(A) <->text1323.htm#14402<->FunctionField(A) : Sch -&gt; FldFunFracSch
5<->Gradings(X) <->text1323.htm#14403<->Gradings(X) : Sch -&gt; SeqEnum
5<->NGrad :: NumberOfGradings(X) <->text1323.htm#14404<->NGrad :: NumberOfGradings(X) : Sch -&gt; RngIntElt
5<->NumberOfGradings(X) <->text1323.htm#14404<->NumberOfGradings(X) : Sch -&gt; RngIntElt
5<->Length :: NumberOfCoordinates(X) <->text1323.htm#14405<->Length :: NumberOfCoordinates(X) : Sch -&gt; RngIntElt
5<->NumberOfCoordinates(X) <->text1323.htm#14405<->NumberOfCoordinates(X) : Sch -&gt; RngIntElt
5<->Lengths(X) <->text1323.htm#14406<->Lengths(X) : Sch -&gt; [RngIntElt]
5<->IsHomogeneous(X,f) <->text1323.htm#14407<->IsHomogeneous(X,f) : Sch,RngMPolElt -&gt; BoolElt
5<->Multidegree(X,f) <->text1323.htm#14408<->Multidegree(X,f) : Sch,RngMPolElt -&gt; SeqEnum
3<->schemes-ambient-functions :<->text1323.htm#14400<->schemes-ambient-functions :: Functions and Homogeneity on  Ambient Spaces (SCHEMES)
3<->schemes-ambient-points :<->text1323.htm#14409<->schemes-ambient-points :: Prelude to Points (SCHEMES)
5<->A(L) ! [a,b,...] <->text1323.htm#14410<->A(L) ! [a,b,...] : SetPt,[RngElt] -> Pt
5<->A ! [a,b,...] <->text1323.htm#14410<->A ! [a,b,...] : Sch,[RngElt] -&gt; Pt
4<->Scheme_schemes-points-example1 (Example H118E9)<->text1323.htm#14411<->Scheme_schemes-points-example1 (Example H118E9)
4<->Example-schemes-points-example1 :<->text1323.htm#14411<->Example-schemes-points-example1 :: Scheme_schemes-points-example1 (Example H118E9)
5<->Origin(A) <->text1323.htm#14412<->Origin(A) : Aff -&gt; Pt
5<->Simplex(A) <->text1323.htm#14413<->Simplex(A) : Prj -&gt; SeqEnum
5<->Coordinates(p) <->text1323.htm#14414<->Coordinates(p) : Pt -&gt; SeqEnum
5<->Coordinate :: p[i] <->text1323.htm#14415<->Coordinate :: p[i] : Pt, RngIntElt -&gt; RngElt
5<->[] :: p[i] <->text1323.htm#14415<->[] :: p[i] : Pt, RngIntElt -&gt; RngElt
5<->p @ f <->text1323.htm#14416<->p @ f : Pt, FldFunFracSchElt -&gt; RngElt
5<->Evaluate :: p @ f <->text1323.htm#14416<->Evaluate :: p @ f : Pt, FldFunFracSchElt -&gt; RngElt
5<->p @ f <->text1323.htm#14416<->p @ f : Pt, FldFunFracSchElt -&gt; RngElt
4<->Scheme_evaluate-funfld-example (Example H118E10)<->text1323.htm#14417<->Scheme_evaluate-funfld-example (Example H118E10)
4<->Example-evaluate-funfld-example :<->text1323.htm#14417<->Example-evaluate-funfld-example :: Scheme_evaluate-funfld-example (Example H118E10)
3<->schemes-ambient-points :<->text1323.htm#14409<->schemes-ambient-points :: Prelude to Points (SCHEMES)
3<->schemes-ambient :<->text1323.htm<->schemes-ambient :: Ambients (SCHEMES)
3<->schemes-creation :<->text1324.htm<->schemes-creation :: Constructing Schemes (SCHEMES)
5<->Scheme(X,F) <->text1324.htm#14419<->Scheme(X,F) : Sch,SeqEnum -> Sch
5<->Scheme(X,I) <->text1324.htm#14419<->Scheme(X,I) : Sch,RngMPol -> Sch
5<->Scheme(X,Q) <->text1324.htm#14419<->Scheme(X,Q) : Sch,RngMPolRes -> Sch
5<->Scheme(X,f) <->text1324.htm#14419<->Scheme(X,f) : Sch,RngMPolElt -&gt; Sch
5<->Cluster(X,F) <->text1324.htm#14420<->Cluster(X,F) : Sch,SeqEnum -> Clstr
5<->Cluster(X,I) <->text1324.htm#14420<->Cluster(X,I) : Sch,RngMPol -> Clstr
5<->Cluster(X,Q) <->text1324.htm#14420<->Cluster(X,Q) : Sch,RngMPolRes -> Clstr
5<->Cluster(X,f) <->text1324.htm#14420<->Cluster(X,f) : Sch,RngMPolElt -&gt; Clstr
4<->Scheme_schemes-creation (Example H118E11)<->text1324.htm#14421<->Scheme_schemes-creation (Example H118E11)
4<->Example-schemes-creation :<->text1324.htm#14421<->Example-schemes-creation :: Scheme_schemes-creation (Example H118E11)
5<->Spec(R) <->text1324.htm#14422<->Spec(R) : RngMPolRes -&gt; Sch,Aff
5<->Proj(R) <->text1324.htm#14423<->Proj(R) : RngMPolRes -&gt; Sch,Prj
5<->EmptySubscheme :: EmptyScheme(X) <->text1324.htm#14424<->EmptySubscheme :: EmptyScheme(X) : Sch -&gt; Sch
5<->EmptyScheme(X) <->text1324.htm#14424<->EmptyScheme(X) : Sch -&gt; Sch
5<->Intersection :: X meet Y <->text1324.htm#14425<->Intersection :: X meet Y : Sch,Sch -&gt; Sch
5<->X meet Y <->text1324.htm#14425<->X meet Y : Sch,Sch -&gt; Sch
5<->Union :: X join Y <->text1324.htm#14426<->Union :: X join Y : Sch,Sch -&gt; Sch
5<->X join Y <->text1324.htm#14426<->X join Y : Sch,Sch -&gt; Sch
5<->& join S <->text1324.htm#14427<->&amp; join S : [Sch] -&gt; Sch
5<->Difference(X, Y) <->text1324.htm#14428<->Difference(X, Y) : Sch, Sch -&gt; Sch
5<->Complement(X, Y) <->text1324.htm#14429<->Complement(X, Y) : Sch, Sch -&gt; Sch
5<->RemoveLinearRelations(X) <->text1324.htm#14430<->RemoveLinearRelations(X) : Sch -&gt; Sch, MapIsoSch
5<->Blowup(X,p) <->text1324.htm#14431<->Blowup(X,p) : Sch, Pt  -> Sch, MapSch
5<->Blowup(X,Y) <->text1324.htm#14431<->Blowup(X,Y) : Sch, Sch  -&gt; Sch, MapSch
5<->LocalBlowUp(X,Y) <->text1324.htm#14432<->LocalBlowUp(X,Y) : Sch, Sch -&gt; SeqEnum
4<->Scheme_remove (Example H118E12)<->text1324.htm#14433<->Scheme_remove (Example H118E12)
4<->Example-remove :<->text1324.htm#14433<->Example-remove :: Scheme_remove (Example H118E12)
4<->Scheme_sch-blowup-ex (Example H118E13)<->text1324.htm#14434<->Scheme_sch-blowup-ex (Example H118E13)
4<->Example-sch-blowup-ex :<->text1324.htm#14434<->Example-sch-blowup-ex :: Scheme_sch-blowup-ex (Example H118E13)
5<->Saturate(~X) <->text1324.htm#14435<->Saturate(~X) : Sch -&gt;
5<->AssignNames(~X,N) <->text1324.htm#14436<->AssignNames(~X,N) : Sch,SeqEnum -&gt;
5<->Name :: X . i <->text1324.htm#14437<->Name :: X . i : Sch,RngIntElt -&gt; RngMPolElt
5<->X . i <->text1324.htm#14437<->X . i : Sch,RngIntElt -&gt; RngMPolElt
3<->schemes-creation :<->text1324.htm<->schemes-creation :: Constructing Schemes (SCHEMES)
3<->schemes-types :<->text1325.htm<->schemes-types :: Different Types of Scheme (SCHEMES)
5<->IsAffine(X) <->text1325.htm#14439<->IsAffine(X) : Sch -&gt; BoolElt
5<->IsProjective(X) <->text1325.htm#14440<->IsProjective(X) : Sch -&gt; BoolElt
5<->IsOrdinaryProjectiveSpace(X) <->text1325.htm#14441<->IsOrdinaryProjectiveSpace(X) : Sch -&gt; BoolElt
5<->IsAmbient(X) <->text1325.htm#14442<->IsAmbient(X) : Sch -&gt; BoolElt
5<->IsCluster(X) <->text1325.htm#14443<->IsCluster(X) : Sch -&gt; BoolElt,Clstr
5<->IsCurve(X) <->text1325.htm#14444<->IsCurve(X) : Sch -&gt; BoolElt,Crv
5<->IsPlaneCurve(X) <->text1325.htm#14445<->IsPlaneCurve(X) : Sch -&gt; BoolElt, CrvPln
5<->IsConic(X) <->text1325.htm#14446<->IsConic(X) : Sch -&gt; BoolElt,CrvCon
5<->IsRationalCurve(X) <->text1325.htm#14447<->IsRationalCurve(X) : Sch -&gt; BoolElt,CrvRat
5<->IsHyperellipticCurve(X) <->text1325.htm#14448<->IsHyperellipticCurve(X) : Sch -&gt; BoolElt,CrvHyp
5<->IsModularCurve(X) <->text1325.htm#14449<->IsModularCurve(X) : Sch -&gt; BoolElt
3<->schemes-types :<->text1325.htm<->schemes-types :: Different Types of Scheme (SCHEMES)
3<->schemes-basic :<->text1326.htm<->schemes-basic :: Basic Attributes of Schemes (SCHEMES)
3<->schemes-basic-ambient :<->text1326.htm#14451<->schemes-basic-ambient :: Functions of the Ambient Space (SCHEMES)
5<->AmbientSpace(X) <->text1326.htm#14452<->AmbientSpace(X) : Sch -&gt; Sch
5<->SuperScheme(X) <->text1326.htm#14453<->SuperScheme(X) : Sch -&gt; Sch
5<->CoefficientRing :: BaseRing(X) <->text1326.htm#14454<->CoefficientRing :: BaseRing(X) : Sch -&gt; Rng
5<->BaseRing(X) <->text1326.htm#14454<->BaseRing(X) : Sch -&gt; Rng
5<->CoefficientField :: BaseField(X) <->text1326.htm#14455<->CoefficientField :: BaseField(X) : Sch -&gt; Fld
5<->BaseField(X) <->text1326.htm#14455<->BaseField(X) : Sch -&gt; Fld
5<->IsAffine(X) <->text1326.htm#14456<->IsAffine(X) : Sch -&gt; BoolElt
5<->IsProjective(X) <->text1326.htm#14457<->IsProjective(X) : Sch -&gt; BoolElt
5<->IsOrdinaryProjective(X) <->text1326.htm#14458<->IsOrdinaryProjective(X) : Sch -&gt; BoolElt
5<->IsPlanar(X) <->text1326.htm#14459<->IsPlanar(X) : Sch -&gt; BoolElt
5<->IsSaturated(X) <->text1326.htm#14460<->IsSaturated(X) : Sch -&gt; BoolElt
3<->schemes-basic-ambient :<->text1326.htm#14451<->schemes-basic-ambient :: Functions of the Ambient Space (SCHEMES)
3<->equations :<->text1326.htm#14461<->equations :: Functions of the Equations (SCHEMES)
5<->DefiningPolynomials(X) <->text1326.htm#14462<->DefiningPolynomials(X) : Sch -&gt; SeqEnum
5<->DefiningEquations :: DefiningPolynomials(X) <->text1326.htm#14462<->DefiningEquations :: DefiningPolynomials(X) : Sch -&gt; SeqEnum
5<->Equations :: DefiningPolynomials(X) <->text1326.htm#14462<->Equations :: DefiningPolynomials(X) : Sch -&gt; SeqEnum
5<->DefiningPolynomials(X) <->text1326.htm#14462<->DefiningPolynomials(X) : Sch -&gt; SeqEnum
5<->DefiningPolynomial(X) <->text1326.htm#14463<->DefiningPolynomial(X) : Sch -&gt; RngMPolElt
5<->DefiningEquation :: DefiningPolynomial(X) <->text1326.htm#14463<->DefiningEquation :: DefiningPolynomial(X) : Sch -&gt; RngMPolElt
5<->Equation :: DefiningPolynomial(X) <->text1326.htm#14463<->Equation :: DefiningPolynomial(X) : Sch -&gt; RngMPolElt
5<->DefiningPolynomial(X) <->text1326.htm#14463<->DefiningPolynomial(X) : Sch -&gt; RngMPolElt
5<->DefiningIdeal(X) <->text1326.htm#14464<->DefiningIdeal(X) : Sch -&gt; RngMPol
5<->CoordinateRing(X) <->text1326.htm#14465<->CoordinateRing(X) : Sch -&gt; RngMPol
5<->Curve(X) <->text1326.htm#14466<->Curve(X) : Sch -&gt; Crv
5<->GroebnerBasis(X) <->text1326.htm#14467<->GroebnerBasis(X) : Sch -&gt; SeqEnum
5<->MinimalBasis(X) <->text1326.htm#14468<->MinimalBasis(X) : Sch -&gt; [ RngMPolElt ]
5<->IsHypersurface(X) <->text1326.htm#14469<->IsHypersurface(X) : Sch -&gt; BoolElt, RngMPolElt
5<->JacobianIdeal(X) <->text1326.htm#14470<->JacobianIdeal(X) : Sch -&gt; RngMPol
5<->JacobianMatrix(X) <->text1326.htm#14471<->JacobianMatrix(X) : Sch -&gt; ModMatRngElt
5<->HessianMatrix(X) <->text1326.htm#14472<->HessianMatrix(X) : Sch -&gt; ModMatRngElt
5<->X eq Y <->text1326.htm#14473<->X eq Y : Sch,Sch -&gt; BoolElt
5<->IsSubscheme(X, Y) <->text1326.htm#14474<->IsSubscheme(X, Y) : Sch,Sch -&gt; BoolElt
5<->IsLinear(X) <->text1326.htm#14475<->IsLinear(X) : Sch -&gt; BoolElt
4<->Scheme_scheme-equality (Example H118E14)<->text1326.htm#14476<->Scheme_scheme-equality (Example H118E14)
4<->Example-scheme-equality :<->text1326.htm#14476<->Example-scheme-equality :: Scheme_scheme-equality (Example H118E14)
3<->equations :<->text1326.htm#14461<->equations :: Functions of the Equations (SCHEMES)
3<->schemes-basic :<->text1326.htm<->schemes-basic :: Basic Attributes of Schemes (SCHEMES)
3<->FldFunFracSch :<->text1327.htm<->FldFunFracSch :: Function Fields and their Elements (SCHEMES)
3<->FldFunFracSchElt :<->text1327.htm<->FldFunFracSchElt :: Function Fields and their Elements (SCHEMES)
3<->RngFunFracSch :<->text1327.htm<->RngFunFracSch :: Function Fields and their Elements (SCHEMES)
3<->RngFunFracSchElt :<->text1327.htm<->RngFunFracSchElt :: Function Fields and their Elements (SCHEMES)
3<->schemes-function-elements :<->text1327.htm<->schemes-function-elements :: Function Fields and their Elements (SCHEMES)
5<->Scheme(F) <->text1327.htm#14478<->Scheme(F) : FldFunFracSch -&gt; Sch
5<->Integers :: IntegerRing(F) <->text1327.htm#14479<->Integers :: IntegerRing(F) : RngFrac -&gt; Rng
5<->IntegerRing(F) <->text1327.htm#14479<->IntegerRing(F) : RngFrac -&gt; Rng
5<->AssignNames(~F, S) <->text1327.htm#14480<->AssignNames(~F, S) : RngFrac, [MonStgElt] -&gt;
5<->F ! g <->text1327.htm#14481<->F ! g : FldFunFracSch, RngElt -&gt; FldFunFracSchElt
5<->F . i <->text1327.htm#14482<->F . i : FldFunFracSch, RngIntElt -&gt; FldFunFracSchElt
5<->ProjectiveFunction(f) <->text1327.htm#14483<->ProjectiveFunction(f) : FldFunFracSchElt -&gt; FldFracElt
5<->ProjectiveRationalFunction(f) <->text1327.htm#14484<->ProjectiveRationalFunction(f) : FldFunFracSchElt -&gt; FldFunRatMElt
5<->RestrictionToPatch(f, Xi) <->text1327.htm#14485<->RestrictionToPatch(f, Xi) : FldFunFracSchElt, Sch -&gt; FldFracElt
5<->Denominator :: Numerator(f) <->text1327.htm#14486<->Denominator :: Numerator(f) : RngFracElt -&gt; RngElt
5<->Numerator(f) <->text1327.htm#14486<->Numerator(f) : RngFracElt -&gt; RngElt
5<->IntegralSplit(f, X) <->text1327.htm#14487<->IntegralSplit(f, X) : FldFunFracSchElt, Sch -&gt; RngMPolElt, RngMPolElt
5<->Numerator(f, X) <->text1327.htm#14488<->Numerator(f, X) : FldFunFracSchElt, Sch -&gt; MPolElt
5<->Denominator(f, X) <->text1327.htm#14489<->Denominator(f, X) : FldFunFracSchElt, Sch -&gt; MPolElt
4<->Scheme_scheme_fld_fun_elt (Example H118E15)<->text1327.htm#14490<->Scheme_scheme_fld_fun_elt (Example H118E15)
4<->Example-scheme_fld_fun_elt :<->text1327.htm#14490<->Example-scheme_fld_fun_elt :: Scheme_scheme_fld_fun_elt (Example H118E15)
5<->Restriction(f, Y) <->text1327.htm#14491<->Restriction(f, Y) : FldFunFracSchElt, Sch -&gt; FldFunFracSchElt
5<->GenericPoint(X) <->text1327.htm#14492<->GenericPoint(X) : Sch -&gt; Pt
3<->schemes-function-elements :<->text1327.htm<->schemes-function-elements :: Function Fields and their Elements (SCHEMES)
3<->schemes-points :<->text1328.htm<->schemes-points :: Rational Points and Point Sets (SCHEMES)
5<->PointSet :: X(L) <->text1328.htm#14494<->PointSet :: X(L) : Sch,Rng -&gt; SetPt
5<->X(m) <->text1328.htm#14494<->X(m) : Sch,Map -> SetPt
5<->PointSet(X,m) : Sch,Map -> SetPt :: X(L) <->text1328.htm#14494<->PointSet(X,m) : Sch,Map -> SetPt :: X(L) : Sch,Rng -&gt; SetPt
5<->X(L) <->text1328.htm#14494<->X(L) : Sch,Rng -&gt; SetPt
5<->P eq Q <->text1328.htm#14495<->P eq Q : SetPt,SetPt -&gt; BoolElt
5<->Scheme(P) <->text1328.htm#14496<->Scheme(P) : SetPt -&gt; Sch
5<->Curve(P) <->text1328.htm#14497<->Curve(P) : SetPt -&gt; Crv
5<->Ring(P) <->text1328.htm#14498<->Ring(P) : SetPt -&gt; Rng
5<->RingMap(P) <->text1328.htm#14499<->RingMap(P) : SetPt -&gt; Map
5<->X(L) ! Q <->text1328.htm#14500<->X(L) ! Q : SetPt,SeqEnum -> Pt
5<->X ! Q <->text1328.htm#14500<->X ! Q : Sch,SeqEnum -&gt; Pt
5<->p eq q <->text1328.htm#14501<->p eq q : Pt,Pt -&gt; BoolElt
5<->p in X <->text1328.htm#14502<->p in X : Pt,Sch -&gt; BoolElt
5<->Scheme(p) <->text1328.htm#14503<->Scheme(p) : Pt -&gt; Sch
5<->Curve(p) <->text1328.htm#14504<->Curve(p) : Pt -&gt; Crv
5<->Q in X <->text1328.htm#14505<->Q in X : SeqEnum,Sch -&gt; BoolElt
5<->S subset X <->text1328.htm#14506<->S subset X : Setq,Sch -&gt; BoolElt
5<->IsCoercible(X,Q) <->text1328.htm#14507<->IsCoercible(X,Q) : Sch,SeqEnum -&gt; BoolElt,Pt
5<->RationalPoints(X,L) <->text1328.htm#14508<->RationalPoints(X,L) : Sch, Rng -> SetIndx
5<->RationalPoints(X) <->text1328.htm#14508<->RationalPoints(X) : Sch -&gt; SetIndx
5<->Points(X,L) <->text1328.htm#14508<->Points(X,L) : Sch, Rng -> SetIndx
5<->RationalPoints(X) <->text1328.htm#14508<->RationalPoints(X) : Sch -&gt; SetIndx
5<->RationalPointsByFibration(X) <->text1328.htm#14509<->RationalPointsByFibration(X) : Sch -&gt; SetIndx
5<->Random(S) <->text1328.htm#14510<->Random(S) : SetPt -&gt; Pt
5<->HasNonsingularPoint(X,L) <->text1328.htm#14511<->HasNonsingularPoint(X,L) : Sch,FldFin -> BoolElt,Pt
5<->HasNonsingularPoint(X) <->text1328.htm#14511<->HasNonsingularPoint(X) : Sch -&gt; BoolElt,Pt
4<->Scheme_scheme-points (Example H118E16)<->text1328.htm#14512<->Scheme_scheme-points (Example H118E16)
4<->Example-scheme-points :<->text1328.htm#14512<->Example-scheme-points :: Scheme_scheme-points (Example H118E16)
3<->schemes-points :<->text1328.htm<->schemes-points :: Rational Points and Point Sets (SCHEMES)
3<->schemes-clusters :<->text1329.htm<->schemes-clusters :: Zero-dimensional Schemes (SCHEMES)
5<->Cluster(X, p) <->text1329.htm#14514<->Cluster(X, p) : Sch, Pt -> Clstr;
5<->Cluster(S) <->text1329.htm#14514<->Cluster(S) : SetEnum -> Clstr
5<->Cluster(S) <->text1329.htm#14514<->Cluster(S) : SetIndx -> Clstr
5<->Cluster(X, S) <->text1329.htm#14514<->Cluster(X, S) : Sch, SetEnum -> Clstr
5<->Cluster(X, S) <->text1329.htm#14514<->Cluster(X, S) : Sch, SetIndx -> Clstr
5<->Cluster(p) <->text1329.htm#14514<->Cluster(p) : Pt -&gt; Clstr
5<->RationalPoints(Z,L) <->text1329.htm#14515<->RationalPoints(Z,L) : Sch, Rng -> SetEnum
5<->RationalPoints(Z) <->text1329.htm#14515<->RationalPoints(Z) : Sch -&gt; SetEnum
5<->PointsOverSplittingField(Z) <->text1329.htm#14516<->PointsOverSplittingField(Z) : Clstr -&gt; SetEnum
5<->HasPointsOverExtension(X,L) <->text1329.htm#14517<->HasPointsOverExtension(X,L) : Sch,Rng -> BoolElt
5<->HasPointsOverExtension(X) <->text1329.htm#14517<->HasPointsOverExtension(X) : Sch -&gt; BoolElt
5<->Degree(Z) <->text1329.htm#14518<->Degree(Z) : Clstr -&gt; RngIntElt
4<->Scheme_cluster-degree5 (Example H118E17)<->text1329.htm#14519<->Scheme_cluster-degree5 (Example H118E17)
4<->Example-cluster-degree5 :<->text1329.htm#14519<->Example-cluster-degree5 :: Scheme_cluster-degree5 (Example H118E17)
3<->schemes-clusters :<->text1329.htm<->schemes-clusters :: Zero-dimensional Schemes (SCHEMES)
3<->schemes-local :<->text1330.htm<->schemes-local :: Local Geometry of Schemes (SCHEMES)
3<->conditions :<->text1330.htm#14521<->conditions :: Point Conditions (SCHEMES)
5<->IsSingular(X,p) <->text1330.htm#14522<->IsSingular(X,p) : Sch,Pt -> BoolElt
5<->IsSingular(p) <->text1330.htm#14522<->IsSingular(p) : Pt -&gt; BoolElt
5<->IsNonsingular(X,p) <->text1330.htm#14523<->IsNonsingular(X,p) : Sch,Pt -> BoolElt
5<->IsNonsingular(p) <->text1330.htm#14523<->IsNonsingular(p) : Pt -&gt; BoolElt
5<->IsOrdinarySingularity(X,p) <->text1330.htm#14524<->IsOrdinarySingularity(X,p) :  Sch,Pt -> BoolElt
5<->IsOrdinarySingularity(p) <->text1330.htm#14524<->IsOrdinarySingularity(p) : Pt -&gt; BoolElt
3<->conditions :<->text1330.htm#14521<->conditions :: Point Conditions (SCHEMES)
3<->constructions :<->text1330.htm#14525<->constructions :: Point Computations (SCHEMES)
5<->Multiplicity(X,p) <->text1330.htm#14526<->Multiplicity(X,p) : Sch,Pt -> RngIntElt
5<->Multiplicity(p) <->text1330.htm#14526<->Multiplicity(p) : Pt -&gt; RngIntElt
5<->TangentSpace(X,p) <->text1330.htm#14527<->TangentSpace(X,p) : Sch,Pt -> Sch
5<->TangentSpace(p) <->text1330.htm#14527<->TangentSpace(p) : Pt -&gt; Sch
5<->TangentCone(X,p) <->text1330.htm#14528<->TangentCone(X,p) : Sch,Pt -> Sch
5<->TangentCone(p) <->text1330.htm#14528<->TangentCone(p) : Pt -&gt; Sch
3<->constructions :<->text1330.htm#14525<->constructions :: Point Computations (SCHEMES)
3<->an-hyp-sngs :<->text1330.htm#14529<->an-hyp-sngs :: Analytically Hypersurface Singularities (SCHEMES)
5<->IsHypersurfaceSingularity(p,prec) <->text1330.htm#14530<->IsHypersurfaceSingularity(p,prec) : Pt, RngIntElt -&gt; BoolElt, RngMPolElt, SeqEnum, Rec
5<->HypersurfaceSingularityExpandFurther(dat,prec,R)<->text1330.htm#14531<->HypersurfaceSingularityExpandFurther(dat,prec,R): Rec, RngIntElt, RngMPol -&gt; RngMPolElt
5<->HypersurfaceSingularityExpandFunction(dat,f,prec,R)<->text1330.htm#14532<->HypersurfaceSingularityExpandFunction(dat,f,prec,R): Rec, FldFunRatMElt, RngIntElt, RngMPol -&gt; RngMPolElt, RngMPolElt
5<->TjurinaNumberAnalyticHypersurface :: MilnorNumberAnalyticHypersurface(dat) <->text1330.htm#14533<->TjurinaNumberAnalyticHypersurface :: MilnorNumberAnalyticHypersurface(dat) : Rec -&gt; RngIntElt
5<->MilnorNumberAnalyticHypersurface(dat) <->text1330.htm#14533<->MilnorNumberAnalyticHypersurface(dat) : Rec -&gt; RngIntElt
4<->Scheme_an-hyp-sing-ex (Example H118E18)<->text1330.htm#14534<->Scheme_an-hyp-sing-ex (Example H118E18)
4<->Example-an-hyp-sing-ex :<->text1330.htm#14534<->Example-an-hyp-sing-ex :: Scheme_an-hyp-sing-ex (Example H118E18)
3<->an-hyp-sngs :<->text1330.htm#14529<->an-hyp-sngs :: Analytically Hypersurface Singularities (SCHEMES)
3<->schemes-local :<->text1330.htm<->schemes-local :: Local Geometry of Schemes (SCHEMES)
3<->sing-norm-form :<->text1331.htm<->sing-norm-form :: Classification and Normal  Forms of Singularities (SCHEMES)
5<->NormalFormOfHypersurfaceSingularity(f) <->text1331.htm#14536<->NormalFormOfHypersurfaceSingularity(f) : RngMPol -&gt; BoolElt, RngMPolElt, MonStgElt, Map
5<->Corank2Case(f) <->text1331.htm#14537<->Corank2Case(f) : RngMPol -&gt; BoolElt, RngMPolElt, MonStgElt, Map
5<->Corank3Case(f) <->text1331.htm#14538<->Corank3Case(f) : RngMPol -&gt; BoolElt, RngMPolElt, MonStgElt, Map
4<->Scheme_scheme-norm-form-sings (Example H118E19)<->text1331.htm#14539<->Scheme_scheme-norm-form-sings (Example H118E19)
4<->Example-scheme-norm-form-sings :<->text1331.htm#14539<->Example-scheme-norm-form-sings :: Scheme_scheme-norm-form-sings (Example H118E19)
3<->sing-norm-form :<->text1331.htm<->sing-norm-form :: Classification and Normal  Forms of Singularities (SCHEMES)
3<->schemes-global :<->text1332.htm<->schemes-global :: Global Geometry of Schemes (SCHEMES)
5<->Dimension(X) <->text1332.htm#14541<->Dimension(X) : Sch -&gt; RngIntElt
5<->Codimension(X) <->text1332.htm#14542<->Codimension(X) : Sch -&gt; RngIntElt
5<->Degree(X) <->text1332.htm#14543<->Degree(X) : Sch -&gt; RngIntElt
5<->ArithmeticGenus(X) <->text1332.htm#14544<->ArithmeticGenus(X) : Sch -&gt; RngIntElt
5<->IsEmpty(X) <->text1332.htm#14545<->IsEmpty(X) : Sch -&gt; BoolElt
5<->IsNonsingular(X) <->text1332.htm#14546<->IsNonsingular(X) : Sch -&gt; BoolElt
5<->IsSingular(X) <->text1332.htm#14547<->IsSingular(X) : Sch -&gt; BoolElt
5<->SingularSubscheme(X) <->text1332.htm#14548<->SingularSubscheme(X) : Sch -&gt; Sch
4<->Scheme_wps-singularities (Example H118E20)<->text1332.htm#14549<->Scheme_wps-singularities (Example H118E20)
4<->Example-wps-singularities :<->text1332.htm#14549<->Example-wps-singularities :: Scheme_wps-singularities (Example H118E20)
5<->PrimeComponents(X) <->text1332.htm#14550<->PrimeComponents(X) : Sch -&gt; SeqEnum
5<->PrimaryComponents(X) <->text1332.htm#14551<->PrimaryComponents(X) : Sch -&gt; SeqEnum
5<->ReducedSubscheme(X) <->text1332.htm#14552<->ReducedSubscheme(X) : Sch -&gt; Sch, MapSch
5<->IsIrreducible(X) <->text1332.htm#14553<->IsIrreducible(X) : Sch -&gt; BoolElt
5<->IsReduced(X) <->text1332.htm#14554<->IsReduced(X) : Sch -&gt; BoolElt
5<->IsGorenstein :: IsCohenMacaulay(X) <->text1332.htm#14555<->IsGorenstein :: IsCohenMacaulay(X) : Sch -&gt; BoolElt
5<->IsArithmeticallyCohenMacaulay :: IsCohenMacaulay(X) <->text1332.htm#14555<->IsArithmeticallyCohenMacaulay :: IsCohenMacaulay(X) : Sch -&gt; BoolElt
5<->IsArithmeticallyGorenstein :: IsCohenMacaulay(X) <->text1332.htm#14555<->IsArithmeticallyGorenstein :: IsCohenMacaulay(X) : Sch -&gt; BoolElt
5<->IsCohenMacaulay(X) <->text1332.htm#14555<->IsCohenMacaulay(X) : Sch -&gt; BoolElt
4<->Scheme_schemes-prime-components (Example H118E21)<->text1332.htm#14556<->Scheme_schemes-prime-components (Example H118E21)
4<->Example-schemes-prime-components :<->text1332.htm#14556<->Example-schemes-prime-components :: Scheme_schemes-prime-components (Example H118E21)
3<->schemes-global :<->text1332.htm<->schemes-global :: Global Geometry of Schemes (SCHEMES)
3<->schemes-base-change :<->text1333.htm<->schemes-base-change :: Base Change for Schemes (SCHEMES)
5<->BaseExtend :: BaseChange(A,K) <->text1333.htm#14558<->BaseExtend :: BaseChange(A,K) : Sch,Rng -&gt; Sch
5<->BaseChange(A,K) <->text1333.htm#14558<->BaseChange(A,K) : Sch,Rng -&gt; Sch
5<->BaseExtend :: BaseChange(A,m) <->text1333.htm#14559<->BaseExtend :: BaseChange(A,m) : Sch, Map -&gt; Sch
5<->BaseChange(A,m) <->text1333.htm#14559<->BaseChange(A,m) : Sch, Map -&gt; Sch
5<->BaseExtend :: BaseChange(F,K) <->text1333.htm#14560<->BaseExtend :: BaseChange(F,K) : SeqEnum,Rng -&gt; SeqEnum
5<->BaseChange(F,m) <->text1333.htm#14560<->BaseChange(F,m) : SeqEnum,Rng -> SeqEnum
5<->BaseExtend(F,m) : SeqEnum,Rng -> SeqEnum :: BaseChange(F,K) <->text1333.htm#14560<->BaseExtend(F,m) : SeqEnum,Rng -> SeqEnum :: BaseChange(F,K) : SeqEnum,Rng -&gt; SeqEnum
5<->BaseChange(F,K) <->text1333.htm#14560<->BaseChange(F,K) : SeqEnum,Rng -&gt; SeqEnum
5<->BaseExtend :: BaseChange(X,A) <->text1333.htm#14561<->BaseExtend :: BaseChange(X,A) : Sch,Sch -&gt; Sch
5<->BaseChange(X,A,m) <->text1333.htm#14561<->BaseChange(X,A,m) : Sch,Sch,Map -> Sch
5<->BaseExtend(X,A,m) : Sch,Sch,Map -> Sch :: BaseChange(X,A) <->text1333.htm#14561<->BaseExtend(X,A,m) : Sch,Sch,Map -> Sch :: BaseChange(X,A) : Sch,Sch -&gt; Sch
5<->BaseChange(X,A) <->text1333.htm#14561<->BaseChange(X,A) : Sch,Sch -&gt; Sch
5<->BaseExtend :: BaseChange(X, n) <->text1333.htm#14562<->BaseExtend :: BaseChange(X, n) : Sch, RngIntElt -&gt; Sch
5<->BaseChange(X, n) <->text1333.htm#14562<->BaseChange(X, n) : Sch, RngIntElt -&gt; Sch
4<->Scheme_base-change-schemes (Example H118E22)<->text1333.htm#14563<->Scheme_base-change-schemes (Example H118E22)
4<->Example-base-change-schemes :<->text1333.htm#14563<->Example-base-change-schemes :: Scheme_base-change-schemes (Example H118E22)
3<->schemes-base-change :<->text1333.htm<->schemes-base-change :: Base Change for Schemes (SCHEMES)
3<->schemes-closure :<->text1334.htm<->schemes-closure :: Affine Patches and Projective  Closure (SCHEMES)
5<->ProjectiveClosure(X) <->text1334.htm#14565<->ProjectiveClosure(X) : Sch -&gt; Sch
5<->AffinePatch(X,i) <->text1334.htm#14566<->AffinePatch(X,i) : Sch,RngIntElt -&gt; Sch
5<->AffinePatch(X,p) <->text1334.htm#14567<->AffinePatch(X,p) : Sch,Pt -&gt; Sch,Pt
5<->IsStandardAffinePatch(A) <->text1334.htm#14568<->IsStandardAffinePatch(A) : Aff -&gt; BoolElt, RngIntElt
5<->NumberOfAffinePatches(X) <->text1334.htm#14569<->NumberOfAffinePatches(X) : Sch -&gt; BoolElt
5<->HasAffinePatch(X, i) <->text1334.htm#14570<->HasAffinePatch(X, i) : Sch, RngIntElt -&gt; BoolElt
5<->WeightedAffinePatch(P, i) <->text1334.htm#14571<->WeightedAffinePatch(P, i) : Prj, RngIntElt -&gt; Sch, MapIsoSch
4<->Scheme_projective-closure (Example H118E23)<->text1334.htm#14572<->Scheme_projective-closure (Example H118E23)
4<->Example-projective-closure :<->text1334.htm#14572<->Example-projective-closure :: Scheme_projective-closure (Example H118E23)
4<->Scheme_projective-closure-incorrect (Example H118E24)<->text1334.htm#14573<->Scheme_projective-closure-incorrect (Example H118E24)
4<->Example-projective-closure-incorrect :<->text1334.htm#14573<->Example-projective-closure-incorrect :: Scheme_projective-closure-incorrect (Example H118E24)
4<->Scheme_weighted-patches (Example H118E25)<->text1334.htm#14574<->Scheme_weighted-patches (Example H118E25)
4<->Example-weighted-patches :<->text1334.htm#14574<->Example-weighted-patches :: Scheme_weighted-patches (Example H118E25)
5<->HyperplaneAtInfinity(X) <->text1334.htm#14575<->HyperplaneAtInfinity(X) : Sch -&gt; Sch
5<->PCMap :: ProjectiveClosureMap(A) <->text1334.htm#14576<->PCMap :: ProjectiveClosureMap(A) : Aff -&gt; MapSch
5<->ProjectiveClosureMap(A) <->text1334.htm#14576<->ProjectiveClosureMap(A) : Aff -&gt; MapSch
5<->AffineDecomposition(P) <->text1334.htm#14577<->AffineDecomposition(P) : Prj -&gt; [MapSch],Pt
5<->CentredAffinePatch(S, p) <->text1334.htm#14578<->CentredAffinePatch(S, p) : Sch, Pt -&gt; Sch, MapSch
3<->schemes-closure :<->text1334.htm<->schemes-closure :: Affine Patches and Projective  Closure (SCHEMES)
3<->anfs :<->text1335.htm<->anfs :: Arithmetic Properties of  Schemes and Points (SCHEMES)
3<->anfs-heights :<->text1335.htm#14580<->anfs-heights :: Height (SCHEMES)
5<->HeightOnAmbient(P) <->text1335.htm#14581<->HeightOnAmbient(P) : Pt -&gt; RngElt
3<->anfs-heights :<->text1335.htm#14580<->anfs-heights :: Height (SCHEMES)
3<->restriction-of-scalars :<->text1335.htm#14582<->restriction-of-scalars :: Restriction of Scalars (SCHEMES)
5<->WeilRestriction :: RestrictionOfScalars(S, F) <->text1335.htm#14583<->WeilRestriction :: RestrictionOfScalars(S, F) : Sch, Fld -&gt; Sch, MapSch, UserProgram, Map
5<->RestrictionOfScalars(S, F) <->text1335.htm#14583<->RestrictionOfScalars(S, F) : Sch, Fld -&gt; Sch, MapSch, UserProgram, Map
3<->restriction-of-scalars :<->text1335.htm#14582<->restriction-of-scalars :: Restriction of Scalars (SCHEMES)
3<->local-sol :<->text1335.htm#14584<->local-sol :: Local Solubility (SCHEMES)
5<->IsEmpty(Xm) <->text1335.htm#14585<->IsEmpty(Xm) : SetPt -&gt; BoolElt, Pt
4<->Scheme_anf1 (Example H118E26)<->text1335.htm#14586<->Scheme_anf1 (Example H118E26)
4<->Example-anf1 :<->text1335.htm#14586<->Example-anf1 :: Scheme_anf1 (Example H118E26)
4<->Scheme_anf2 (Example H118E27)<->text1335.htm#14587<->Scheme_anf2 (Example H118E27)
4<->Example-anf2 :<->text1335.htm#14587<->Example-anf2 :: Scheme_anf2 (Example H118E27)
5<->IsLocallySolvable(X, p) <->text1335.htm#14588<->IsLocallySolvable(X, p) : Sch, RngIntElt -> BoolElt, Pt
5<->IsLocallySolvable(X, p) <->text1335.htm#14588<->IsLocallySolvable(X, p) : Sch, RngOrdIdl -&gt; BoolElt, Pt
4<->Scheme_anf-local-solv (Example H118E28)<->text1335.htm#14589<->Scheme_anf-local-solv (Example H118E28)
4<->Example-anf-local-solv :<->text1335.htm#14589<->Example-anf-local-solv :: Scheme_anf-local-solv (Example H118E28)
5<->LiftPoint(F, d, P, n) <->text1335.htm#14590<->LiftPoint(F, d, P, n) : [RngMPolElt], RngIntElt, [FldLocElt], RngIntElt -> SeqEnum
5<->LiftPoint(P, n) <->text1335.htm#14590<->LiftPoint(P, n) : Pt, RngIntElt -&gt; Pt
4<->Scheme_anf_lift (Example H118E29)<->text1335.htm#14591<->Scheme_anf_lift (Example H118E29)
4<->Example-anf_lift :<->text1335.htm#14591<->Example-anf_lift :: Scheme_anf_lift (Example H118E29)
3<->local-sol :<->text1335.htm#14584<->local-sol :: Local Solubility (SCHEMES)
3<->point-search :<->text1335.htm#14592<->point-search :: Searching for Points (SCHEMES)
5<->PointSearch(S,H : parameters) <->text1335.htm#14593<->PointSearch(S,H : parameters) : Sch[FldRat], RngIntElt -&gt; SeqEnum
4<->Scheme_point-count (Example H118E30)<->text1335.htm#14594<->Scheme_point-count (Example H118E30)
4<->Example-point-count :<->text1335.htm#14594<->Example-point-count :: Scheme_point-count (Example H118E30)
3<->point-search :<->text1335.htm#14592<->point-search :: Searching for Points (SCHEMES)
3<->red-mod-p :<->text1335.htm#14595<->red-mod-p :: Reduction Mod p (SCHEMES)
5<->Reduction(X, p) <->text1335.htm#14596<->Reduction(X, p) : Sch, Any -&gt; Sch
5<->Reduction(I, p) <->text1335.htm#14597<->Reduction(I, p) : RngMPol, Any -&gt; RngMPol
4<->Scheme_scheme-red-mod-p (Example H118E31)<->text1335.htm#14598<->Scheme_scheme-red-mod-p (Example H118E31)
4<->Example-scheme-red-mod-p :<->text1335.htm#14598<->Example-scheme-red-mod-p :: Scheme_scheme-red-mod-p (Example H118E31)
3<->red-mod-p :<->text1335.htm#14595<->red-mod-p :: Reduction Mod p (SCHEMES)
3<->anfs :<->text1335.htm<->anfs :: Arithmetic Properties of  Schemes and Points (SCHEMES)
3<->maps :<->text1336.htm<->maps :: Maps between Schemes (SCHEMES)
3<->maps-creation :<->text1336.htm#14600<->maps-creation :: Creation of Maps (SCHEMES)
5<->map <->text1336.htm#14601<->map< X \ar Y | F, G > : Sch,Sch,SeqEnum -> MapSch
5<->map <->text1336.htm#14601<->map< X \ar Y | u, F > : Sch,Sch,Map,SeqEnum -> MapSch
5<->map< X -> Y | F > <->text1336.htm#14601<->map&lt; X -&gt; Y | F &gt; : Sch,Sch,SeqEnum -&gt; MapSch
5<->iso< X -> Y | F, G > <->text1336.htm#14602<->iso&lt; X -&gt; Y | F, G &gt; : Sch,Sch,SeqEnum,SeqEnum -&gt; MapAutSch
4<->Scheme_map-creation (Example H118E32)<->text1336.htm#14603<->Scheme_map-creation (Example H118E32)
4<->Example-map-creation :<->text1336.htm#14603<->Example-map-creation :: Scheme_map-creation (Example H118E32)
4<->Scheme_map-fnfld (Example H118E33)<->text1336.htm#14604<->Scheme_map-fnfld (Example H118E33)
4<->Example-map-fnfld :<->text1336.htm#14604<->Example-map-fnfld :: Scheme_map-fnfld (Example H118E33)
4<->Scheme_map-frobenius (Example H118E34)<->text1336.htm#14605<->Scheme_map-frobenius (Example H118E34)
4<->Example-map-frobenius :<->text1336.htm#14605<->Example-map-frobenius :: Scheme_map-frobenius (Example H118E34)
5<->IdentityMap(X) <->text1336.htm#14606<->IdentityMap(X) : Sch -&gt; MapSch
5<->map :: ConstantMap(X,Y,p) <->text1336.htm#14607<->map :: ConstantMap(X,Y,p) : Sch,Sch,Pt -&gt; MapSch
5<->ConstantMap(X,Y,p) <->text1336.htm#14607<->ConstantMap(X,Y,p) : Sch,Sch,Pt -&gt; MapSch
5<->Projection(X,Y) <->text1336.htm#14608<->Projection(X,Y) : Prj,Prj -&gt; MapSch
5<->Projection(X) <->text1336.htm#14609<->Projection(X) : Sch -> Sch, MapSch
5<->Projection(X, p) <->text1336.htm#14609<->Projection(X, p) : Sch, Pt -> Sch, MapSch
5<->Projection(X, Q) <->text1336.htm#14609<->Projection(X, Q) : Sch, Prj -&gt; Sch, MapSch
5<->ProjectionFromNonsingularPoint(X,p) <->text1336.htm#14610<->ProjectionFromNonsingularPoint(X,p) : Sch,Pt -&gt; Sch,MapSch,Sch
5<->ProjectiveMap(L) <->text1336.htm#14611<->ProjectiveMap(L) : [FldFunFracSchElt]-> MapSch
5<->ProjectiveMap(L, Y) <->text1336.htm#14611<->ProjectiveMap(L, Y) : [FldFunFracSchElt], Sch -&gt; MapSch
5<->ProjectiveMap(f) <->text1336.htm#14612<->ProjectiveMap(f) : FldFunFracSchElt -> MapSch
5<->ProjectiveMap(f, Y) <->text1336.htm#14612<->ProjectiveMap(f, Y) : FldFunFracSchElt, Sch -&gt; MapSch
4<->Scheme_map-creation-prj (Example H118E35)<->text1336.htm#14613<->Scheme_map-creation-prj (Example H118E35)
4<->Example-map-creation-prj :<->text1336.htm#14613<->Example-map-creation-prj :: Scheme_map-creation-prj (Example H118E35)
5<->Elimination(X,V) <->text1336.htm#14614<->Elimination(X,V) : Sch,SeqEnum -&gt; Sch
5<->Inverse(f) <->text1336.htm#14615<->Inverse(f) : MapSch -&gt; MapSch
5<->IsInvertible(f) <->text1336.htm#14616<->IsInvertible(f) : MapSch -&gt; Bool, MapSch
5<->HasKnownInverse(f) <->text1336.htm#14617<->HasKnownInverse(f) : MapSch -&gt; Bool
4<->Scheme_map_creation_inv (Example H118E36)<->text1336.htm#14618<->Scheme_map_creation_inv (Example H118E36)
4<->Example-map_creation_inv :<->text1336.htm#14618<->Example-map_creation_inv :: Scheme_map_creation_inv (Example H118E36)
5<->g * f <->text1336.htm#14619<->g * f : MapSch,MapSch -&gt; MapSch
5<->Components(f) <->text1336.htm#14620<->Components(f) : Map -&gt; [Map]
4<->Scheme_hom-spaces (Example H118E37)<->text1336.htm#14621<->Scheme_hom-spaces (Example H118E37)
4<->Example-hom-spaces :<->text1336.htm#14621<->Example-hom-spaces :: Scheme_hom-spaces (Example H118E37)
5<->Restriction(f,X,Y) <->text1336.htm#14622<->Restriction(f,X,Y) : MapSch,Sch,Sch -&gt; MapSch
5<->Expand(phi) <->text1336.htm#14623<->Expand(phi) : MapSch -&gt; MapSch
5<->Extend(phi) <->text1336.htm#14624<->Extend(phi) : MapSch -&gt; MapSch
5<->Prune(phi) <->text1336.htm#14625<->Prune(phi) : MapSch -&gt; MapSch
5<->Normalisation :: Normalization(phi) <->text1336.htm#14626<->Normalisation :: Normalization(phi) : MapSch -&gt; MapSch
5<->Normalization(phi) <->text1336.htm#14626<->Normalization(phi) : MapSch -&gt; MapSch
4<->Scheme_map_creation-comp_alt (Example H118E38)<->text1336.htm#14627<->Scheme_map_creation-comp_alt (Example H118E38)
4<->Example-map_creation-comp_alt :<->text1336.htm#14627<->Example-map_creation-comp_alt :: Scheme_map_creation-comp_alt (Example H118E38)
3<->maps-creation :<->text1336.htm#14600<->maps-creation :: Creation of Maps (SCHEMES)
3<->maps-attributes :<->text1336.htm#14628<->maps-attributes :: Basic Attributes (SCHEMES)
3<->maps-trivial :<->text1336.htm#14629<->maps-trivial :: Trivial Attributes (SCHEMES)
5<->Domain(f) <->text1336.htm#14630<->Domain(f) : MapSch -&gt; Sch
5<->Codomain(f) <->text1336.htm#14631<->Codomain(f) : MapSch -&gt; Sch
5<->DefiningEquations :: DefiningPolynomials(f) <->text1336.htm#14632<->DefiningEquations :: DefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->DefiningPolynomials(f) <->text1336.htm#14632<->DefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->FactoredDefiningPolynomials(f) <->text1336.htm#14633<->FactoredDefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->InverseDefiningPolynomials(f) <->text1336.htm#14634<->InverseDefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->FactoredInverseDefiningPolynomials(f) <->text1336.htm#14635<->FactoredInverseDefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->AllDefiningPolynomials(f) <->text1336.htm#14636<->AllDefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->AllInverseDefiningPolynomials(f) <->text1336.htm#14637<->AllInverseDefiningPolynomials(f) : MapSch -&gt; SeqEnum
5<->AlgebraMap(f) <->text1336.htm#14638<->AlgebraMap(f) : MapSch -&gt; Map
5<->FunctionDegree(f) <->text1336.htm#14639<->FunctionDegree(f) : MapSch -&gt; RngIntElt
3<->maps-trivial :<->text1336.htm#14629<->maps-trivial :: Trivial Attributes (SCHEMES)
3<->maps-tests :<->text1336.htm#14640<->maps-tests :: Basic Tests (SCHEMES)
5<->f eq g <->text1336.htm#14641<->f eq g : MapSch, MapSch -&gt; BoolElt
5<->IsPolynomial :: IsRegular(f) <->text1336.htm#14642<->IsPolynomial :: IsRegular(f) : MapSch -&gt; BoolElt
5<->IsRegular(f) <->text1336.htm#14642<->IsRegular(f) : MapSch -&gt; BoolElt
5<->IsIsomorphism(f) <->text1336.htm#14643<->IsIsomorphism(f) : MapSch -&gt; BoolElt, IsoSch
5<->IsDominant(f) <->text1336.htm#14644<->IsDominant(f) : MapSch -&gt; BoolElt
5<->IsLinear(f) <->text1336.htm#14645<->IsLinear(f) : MapSch -&gt; BoolElt
5<->IsAffineLinear(f) <->text1336.htm#14646<->IsAffineLinear(f) : MapSch -&gt; BoolElt
3<->maps-tests :<->text1336.htm#14640<->maps-tests :: Basic Tests (SCHEMES)
3<->maps-attributes :<->text1336.htm#14628<->maps-attributes :: Basic Attributes (SCHEMES)
3<->maps-points :<->text1336.htm#14647<->maps-points :: Maps and Points (SCHEMES)
5<->f(p) <->text1336.htm#14648<->f(p) : MapSch,Pt -&gt; Pt
5<->Pullback(f, p) <->text1336.htm#14649<->Pullback(f, p) : MapSch, Pt -&gt; Any
5<->p @@ f <->text1336.htm#14650<->p @@ f : Pt,MapSch -&gt; Any
5<->f(m) <->text1336.htm#14651<->f(m) : MapSch,Map -> Map
5<->f(K) <->text1336.htm#14651<->f(K) : MapSch,Rng -&gt; Map
4<->Scheme_maps-point-image (Example H118E39)<->text1336.htm#14652<->Scheme_maps-point-image (Example H118E39)
4<->Example-maps-point-image :<->text1336.htm#14652<->Example-maps-point-image :: Scheme_maps-point-image (Example H118E39)
3<->maps-points :<->text1336.htm#14647<->maps-points :: Maps and Points (SCHEMES)
3<->maps-schemes :<->text1336.htm#14653<->maps-schemes :: Maps and Schemes (SCHEMES)
5<->@@ :: Pullback(f, X) <->text1336.htm#14654<->@@ :: Pullback(f, X) : MapSch, Sch -&gt; Sch
5<->Pullback(f, X) <->text1336.htm#14654<->Pullback(f, X) : MapSch, Sch -&gt; Sch
5<->Image(f) <->text1336.htm#14655<->Image(f) : MapSch -&gt; Sch
5<->Image(f,X,d) <->text1336.htm#14656<->Image(f,X,d) : MapSch,Sch,RngIntElt -&gt; []
4<->Scheme_map-image1 (Example H118E40)<->text1336.htm#14657<->Scheme_map-image1 (Example H118E40)
4<->Example-map-image1 :<->text1336.htm#14657<->Example-map-image1 :: Scheme_map-image1 (Example H118E40)
4<->Scheme_map-image2 (Example H118E41)<->text1336.htm#14658<->Scheme_map-image2 (Example H118E41)
4<->Example-map-image2 :<->text1336.htm#14658<->Example-map-image2 :: Scheme_map-image2 (Example H118E41)
5<->BaseScheme(f) <->text1336.htm#14659<->BaseScheme(f) : MapSch -&gt; Sch
5<->BasePoints(f,L) <->text1336.htm#14660<->BasePoints(f,L) : MapSch,Fld -> SetEnum
5<->BasePoints(f) <->text1336.htm#14660<->BasePoints(f) : MapSch -&gt; SetEnum
4<->Scheme_map-base-points (Example H118E42)<->text1336.htm#14661<->Scheme_map-base-points (Example H118E42)
4<->Example-map-base-points :<->text1336.htm#14661<->Example-map-base-points :: Scheme_map-base-points (Example H118E42)
4<->Scheme_scroll-map-base-points (Example H118E43)<->text1336.htm#14662<->Scheme_scroll-map-base-points (Example H118E43)
4<->Example-scroll-map-base-points :<->text1336.htm#14662<->Example-scroll-map-base-points :: Scheme_scroll-map-base-points (Example H118E43)
3<->maps-schemes :<->text1336.htm#14653<->maps-schemes :: Maps and Schemes (SCHEMES)
3<->maps-closure :<->text1336.htm#14663<->maps-closure :: Maps and Closure (SCHEMES)
5<->ProjectiveClosure(f) <->text1336.htm#14664<->ProjectiveClosure(f) : MapSch -&gt; MapSch
5<->MakePCMap :: MakeProjectiveClosureMap(A, P, S) <->text1336.htm#14665<->MakePCMap :: MakeProjectiveClosureMap(A, P, S) : Aff,Prj,SeqEnum -&gt;
5<->MakeProjectiveClosureMap(m) <->text1336.htm#14665<->MakeProjectiveClosureMap(m) : Map ->
5<->MakePCMap(m) : Map -> :: MakeProjectiveClosureMap(A, P, S) <->text1336.htm#14665<->MakePCMap(m) : Map -> :: MakeProjectiveClosureMap(A, P, S) : Aff,Prj,SeqEnum -&gt;
5<->MakeProjectiveClosureMap(A, P, S) <->text1336.htm#14665<->MakeProjectiveClosureMap(A, P, S) : Aff,Prj,SeqEnum -&gt;
5<->RestrictionToPatch(f,j) <->text1336.htm#14666<->RestrictionToPatch(f,j) : MapSch,RngIntElt -&gt; MapSch
5<->RestrictionToPatch(f,i,j) <->text1336.htm#14667<->RestrictionToPatch(f,i,j) : MapSch,RngIntElt,RngIntElt -&gt; MapSch
4<->Scheme_map-patches (Example H118E44)<->text1336.htm#14668<->Scheme_map-patches (Example H118E44)
4<->Example-map-patches :<->text1336.htm#14668<->Example-map-patches :: Scheme_map-patches (Example H118E44)
3<->maps-closure :<->text1336.htm#14663<->maps-closure :: Maps and Closure (SCHEMES)
3<->maps-automorphisms :<->text1336.htm#14669<->maps-automorphisms :: Automorphisms (SCHEMES)
5<->Automorphism(X,F) <->text1336.htm#14670<->Automorphism(X,F) : Sch,SeqEnum -&gt; MapAutSch
5<->IdentityMap :: IdentityAutomorphism(X) <->text1336.htm#14671<->IdentityMap :: IdentityAutomorphism(X) : Sch -&gt; MapAutSch
5<->IdentityAutomorphism(X) <->text1336.htm#14671<->IdentityAutomorphism(X) : Sch -&gt; MapAutSch
5<->IsEndomorphism(f) <->text1336.htm#14672<->IsEndomorphism(f) : MapSch -&gt; BoolElt
5<->IsAutomorphism(f) <->text1336.htm#14673<->IsAutomorphism(f) : MapSch -&gt; BoolElt,AutSch
4<->Scheme_automorphism-construction (Example H118E45)<->text1336.htm#14674<->Scheme_automorphism-construction (Example H118E45)
4<->Example-automorphism-construction :<->text1336.htm#14674<->Example-automorphism-construction :: Scheme_automorphism-construction (Example H118E45)
4<->Scheme_aut-aff-jac (Example H118E46)<->text1336.htm#14675<->Scheme_aut-aff-jac (Example H118E46)
4<->Example-aut-aff-jac :<->text1336.htm#14675<->Example-aut-aff-jac :: Scheme_aut-aff-jac (Example H118E46)
3<->affine-automorphisms :<->text1336.htm#14676<->affine-automorphisms :: Affine Automorphisms (SCHEMES)
5<->Automorphism(A,F) <->text1336.htm#14677<->Automorphism(A,F) : Sch,SeqEnum -&gt; MapSch
5<->Automorphism(A,M) <->text1336.htm#14678<->Automorphism(A,M) : Sch,Mtrx -&gt; MapIsoSch
5<->Translation(A,p) <->text1336.htm#14679<->Translation(A,p) : Sch, Pt -&gt; MapSch
5<->PermutationAutomorphism(A, g) <->text1336.htm#14680<->PermutationAutomorphism(A, g) : Sch,GrpPermElt -&gt; MapIsoSch
4<->Scheme_aut-aff-perm (Example H118E47)<->text1336.htm#14681<->Scheme_aut-aff-perm (Example H118E47)
4<->Example-aut-aff-perm :<->text1336.htm#14681<->Example-aut-aff-perm :: Scheme_aut-aff-perm (Example H118E47)
5<->Automorphism(A,p) <->text1336.htm#14682<->Automorphism(A,p) : Sch, RngMPolElt -&gt; IsoSch
5<->AffineDecomposition(f) <->text1336.htm#14683<->AffineDecomposition(f) : MapSch -&gt; MapSch,MapSch
4<->Scheme_decompose-automorphism (Example H118E48)<->text1336.htm#14684<->Scheme_decompose-automorphism (Example H118E48)
4<->Example-decompose-automorphism :<->text1336.htm#14684<->Example-decompose-automorphism :: Scheme_decompose-automorphism (Example H118E48)
5<->NagataAutomorphism(A) <->text1336.htm#14685<->NagataAutomorphism(A) : Aff -&gt; MapSch
5<->Projectivity(A,M) <->text1336.htm#14686<->Projectivity(A,M) : Aff,Mtrx -&gt; MapAutSch
4<->Scheme_projectivity (Example H118E49)<->text1336.htm#14687<->Scheme_projectivity (Example H118E49)
4<->Example-projectivity :<->text1336.htm#14687<->Example-projectivity :: Scheme_projectivity (Example H118E49)
3<->affine-automorphisms :<->text1336.htm#14676<->affine-automorphisms :: Affine Automorphisms (SCHEMES)
3<->projective-automorphisms :<->text1336.htm#14688<->projective-automorphisms :: Projective Automorphisms (SCHEMES)
5<->Automorphism(P,F) <->text1336.htm#14689<->Automorphism(P,F) : Prj, SeqEnum -&gt; MapSch
5<->Matrix(f) <->text1336.htm#14690<->Matrix(f) : MapSch -&gt; Mtrx
5<->Automorphism(P,M) <->text1336.htm#14691<->Automorphism(P,M) : Sch,Mtrx -&gt; MapSch
5<->Aut(P) <->text1336.htm#14692<->Aut(P) : Prj -&gt; PowAutSch
5<->AutomorphismGroup(P) <->text1336.htm#14693<->AutomorphismGroup(P) : Prj -&gt; GrpMat,Map
4<->Scheme_projective-automorphism-group (Example H118E50)<->text1336.htm#14694<->Scheme_projective-automorphism-group (Example H118E50)
4<->Example-projective-automorphism-group :<->text1336.htm#14694<->Example-projective-automorphism-group :: Scheme_projective-automorphism-group (Example H118E50)
5<->TranslationOfSimplex(P,Q) <->text1336.htm#14695<->TranslationOfSimplex(P,Q) : Prj, [Pt] -&gt; MapSch
5<->Translation(P,Q) <->text1336.htm#14696<->Translation(P,Q) : Prj, [Pt] -&gt; MapSch
5<->Translation(P,p,q) <->text1336.htm#14697<->Translation(P,p,q) : Prj, Pt, Pt -&gt; MapSch
5<->Translation(X,p) <->text1336.htm#14698<->Translation(X,p) : Sch, Pt -&gt; MapSch
4<->Scheme_translation (Example H118E51)<->text1336.htm#14699<->Scheme_translation (Example H118E51)
4<->Example-translation :<->text1336.htm#14699<->Example-translation :: Scheme_translation (Example H118E51)
5<->QuadraticTransformation(P,Q) <->text1336.htm#14700<->QuadraticTransformation(P,Q) : Prj,SeqEnum -> MapSch
5<->QuadraticTransformation(P) <->text1336.htm#14700<->QuadraticTransformation(P) : Prj -&gt; MapSch
5<->QuadraticTransformation(X,Q) <->text1336.htm#14701<->QuadraticTransformation(X,Q) : Sch, [Pt] -> Sch, MapIsoSch
5<->QuadraticTransformation(X) <->text1336.htm#14701<->QuadraticTransformation(X) : Sch -&gt; Sch, MapIsoSch
4<->Scheme_cremona-factorisation (Example H118E52)<->text1336.htm#14702<->Scheme_cremona-factorisation (Example H118E52)
4<->Example-cremona-factorisation :<->text1336.htm#14702<->Example-cremona-factorisation :: Scheme_cremona-factorisation (Example H118E52)
3<->projective-automorphisms :<->text1336.htm#14688<->projective-automorphisms :: Projective Automorphisms (SCHEMES)
3<->maps-automorphisms :<->text1336.htm#14669<->maps-automorphisms :: Automorphisms (SCHEMES)
3<->graph-maps :<->text1336.htm#14703<->graph-maps :: Scheme Graph Maps (SCHEMES)
5<->SchemeGraphMap(X, Y, I) <->text1336.htm#14704<->SchemeGraphMap(X, Y, I) : Sch, Sch, RngMPol -&gt; MapSchGrph
5<->SchemeGraphMapToSchemeMap(f) <->text1336.htm#14705<->SchemeGraphMapToSchemeMap(f) : MapSchGrph -&gt; MapSch
5<->IsInvertible(f) <->text1336.htm#14706<->IsInvertible(f) : MapSchGrph -&gt; BoolElt, MapSchGrph
4<->Scheme_graph_maps (Example H118E53)<->text1336.htm#14707<->Scheme_graph_maps (Example H118E53)
4<->Example-graph_maps :<->text1336.htm#14707<->Example-graph_maps :: Scheme_graph_maps (Example H118E53)
3<->graph-maps :<->text1336.htm#14703<->graph-maps :: Scheme Graph Maps (SCHEMES)
3<->maps :<->text1336.htm<->maps :: Maps between Schemes (SCHEMES)
3<->tan-sec-proj :<->text1337.htm<->tan-sec-proj :: Tangent and Secant Varieties and Isomorphic Projections (SCHEMES)
3<->tangent-variety :<->text1337.htm#14709<->tangent-variety :: Tangent Varieties (SCHEMES)
5<->TangentVariety(X) <->text1337.htm#14710<->TangentVariety(X) : Sch -&gt; Sch
5<->IsInTangentVariety(X,P) <->text1337.htm#14711<->IsInTangentVariety(X,P) : Sch,Pt -&gt; BoolElt
4<->Scheme_TangentVariety (Example H118E54)<->text1337.htm#14712<->Scheme_TangentVariety (Example H118E54)
4<->Example-TangentVariety :<->text1337.htm#14712<->Example-TangentVariety :: Scheme_TangentVariety (Example H118E54)
3<->tangent-variety :<->text1337.htm#14709<->tangent-variety :: Tangent Varieties (SCHEMES)
3<->secant-variety :<->text1337.htm#14713<->secant-variety :: Secant Varieties (SCHEMES)
5<->SecantVariety(X) <->text1337.htm#14714<->SecantVariety(X) : Sch -&gt; Sch
5<->IsInSecantVariety(X,P) <->text1337.htm#14715<->IsInSecantVariety(X,P) : Sch,Pt -&gt; BoolElt
4<->Scheme_SecantVariety (Example H118E55)<->text1337.htm#14716<->Scheme_SecantVariety (Example H118E55)
4<->Example-SecantVariety :<->text1337.htm#14716<->Example-SecantVariety :: Scheme_SecantVariety (Example H118E55)
3<->secant-variety :<->text1337.htm#14713<->secant-variety :: Secant Varieties (SCHEMES)
3<->project-embed :<->text1337.htm#14717<->project-embed :: Isomorphic Projection to  Subspaces (SCHEMES)
5<->IsomorphicProjectionToSubspace(X) <->text1337.htm#14718<->IsomorphicProjectionToSubspace(X) : Sch -&gt; Sch, MapSch
5<->EmbedPlaneCurveInP3(C) <->text1337.htm#14719<->EmbedPlaneCurveInP3(C) : Crv -&gt; Sch, MapSch
4<->Scheme_EmbeddingACurve (Example H118E56)<->text1337.htm#14720<->Scheme_EmbeddingACurve (Example H118E56)
4<->Example-EmbeddingACurve :<->text1337.htm#14720<->Example-EmbeddingACurve :: Scheme_EmbeddingACurve (Example H118E56)
3<->project-embed :<->text1337.htm#14717<->project-embed :: Isomorphic Projection to  Subspaces (SCHEMES)
3<->tan-sec-proj :<->text1337.htm<->tan-sec-proj :: Tangent and Secant Varieties and Isomorphic Projections (SCHEMES)
3<->linsys :<->text1338.htm<->linsys :: Linear Systems (SCHEMES)
3<->linsys-creation :<->text1338.htm#14722<->linsys-creation :: Creation of Linear Systems (SCHEMES)
3<->explicit-creation :<->text1338.htm#14723<->explicit-creation :: Explicit Creation (SCHEMES)
5<->LinearSystem(P,d) <->text1338.htm#14724<->LinearSystem(P,d) : Sch,RngIntElt -&gt; LinearSys
5<->LinearSystem(P, d) <->text1338.htm#14725<->LinearSystem(P, d) : Sch, [RngIntElt] -&gt; LinearSys
5<->LinearSystem(P,F) <->text1338.htm#14726<->LinearSystem(P,F) : Sch,SeqEnum[RngMPolElt] -&gt; LinearSys
5<->MonomialsOfWeightedDegree(X, D) <->text1338.htm#14727<->MonomialsOfWeightedDegree(X, D) : Sch, [RngIntElt] -&gt; SetIndx
4<->Scheme_linsys-construction (Example H118E57)<->text1338.htm#14728<->Scheme_linsys-construction (Example H118E57)
4<->Example-linsys-construction :<->text1338.htm#14728<->Example-linsys-construction :: Scheme_linsys-construction (Example H118E57)
5<->ImageSystem(f,S,d) <->text1338.htm#14729<->ImageSystem(f,S,d) : MapSch,Sch,RngIntElt -&gt; LinearSys
4<->Scheme_image-finder (Example H118E58)<->text1338.htm#14730<->Scheme_image-finder (Example H118E58)
4<->Example-image-finder :<->text1338.htm#14730<->Example-image-finder :: Scheme_image-finder (Example H118E58)
3<->explicit-creation :<->text1338.htm#14723<->explicit-creation :: Explicit Creation (SCHEMES)
3<->geometrical-restrictions :<->text1338.htm#14731<->geometrical-restrictions :: Geometrical Restrictions (SCHEMES)
5<->LinearSystem(L,S) <->text1338.htm#14732<->LinearSystem(L,S) : LinearSys,SeqEnum -> LinearSys
5<->LinearSystem(L,p) <->text1338.htm#14732<->LinearSystem(L,p) : LinearSys,Pt -&gt; LinearSys
5<->LinearSystem(L,p,m) <->text1338.htm#14733<->LinearSystem(L,p,m) : LinearSys,Pt,RngIntElt -&gt; LinearSys
4<->Scheme_subsystems (Example H118E59)<->text1338.htm#14734<->Scheme_subsystems (Example H118E59)
4<->Example-subsystems :<->text1338.htm#14734<->Example-subsystems :: Scheme_subsystems (Example H118E59)
5<->LinearSystem(L,X) <->text1338.htm#14735<->LinearSystem(L,X) : LinearSys,Sch -&gt; LinearSys
5<->LinearSystemTrace(L,X) <->text1338.htm#14736<->LinearSystemTrace(L,X) : LinearSys,Sch -&gt; LinearSys
4<->Scheme_trace (Example H118E60)<->text1338.htm#14737<->Scheme_trace (Example H118E60)
4<->Example-trace :<->text1338.htm#14737<->Example-trace :: Scheme_trace (Example H118E60)
3<->geometrical-restrictions :<->text1338.htm#14731<->geometrical-restrictions :: Geometrical Restrictions (SCHEMES)
3<->explicit-restrictions :<->text1338.htm#14738<->explicit-restrictions :: Explicit Restrictions (SCHEMES)
5<->LinearSystem(L,F) <->text1338.htm#14739<->LinearSystem(L,F) : LinearSys,SeqEnum -&gt; LinearSys
5<->LinearSystem(L,V) <->text1338.htm#14740<->LinearSystem(L,V) : LinearSys,ModTupFld -&gt; LinearSys
3<->explicit-restrictions :<->text1338.htm#14738<->explicit-restrictions :: Explicit Restrictions (SCHEMES)
3<->linsys-creation :<->text1338.htm#14722<->linsys-creation :: Creation of Linear Systems (SCHEMES)
3<->linsys-linalg :<->text1338.htm#14741<->linsys-linalg :: Basic Algebra of Linear Systems (SCHEMES)
3<->tests :<->text1338.htm#14742<->tests :: Tests for Linear Systems (SCHEMES)
5<->AmbientSpace :: Ambient(L) <->text1338.htm#14743<->AmbientSpace :: Ambient(L) : LinearSys -&gt; Prj
5<->Ambient(L) <->text1338.htm#14743<->Ambient(L) : LinearSys -&gt; Prj
5<->L eq K <->text1338.htm#14744<->L eq K : LinearSys,LinearSys -&gt; BoolElt
5<->IsComplete(L) <->text1338.htm#14745<->IsComplete(L) : LinearSys -&gt; BoolElt
5<->IsFree :: IsBasePointFree(L) <->text1338.htm#14746<->IsFree :: IsBasePointFree(L) : LinearSys -&gt; BoolElt
5<->IsBasePointFree(L) <->text1338.htm#14746<->IsBasePointFree(L) : LinearSys -&gt; BoolElt
3<->tests :<->text1338.htm#14742<->tests :: Tests for Linear Systems (SCHEMES)
3<->properties :<->text1338.htm#14747<->properties :: Geometrical Properties (SCHEMES)
5<->Sections(L) <->text1338.htm#14748<->Sections(L) : LinearSys -&gt; SeqEnum
5<->Random(LS) <->text1338.htm#14749<->Random(LS) : LinearSys -&gt; RngMPolElt
5<->Degree(L) <->text1338.htm#14750<->Degree(L) : LinearSys -&gt; RngIntElt
5<->Dimension(L) <->text1338.htm#14751<->Dimension(L) : LinearSys -&gt; RngIntElt
5<->BaseScheme(L) <->text1338.htm#14752<->BaseScheme(L) : LinearSys -&gt; SchProj
5<->BaseComponent(L) <->text1338.htm#14753<->BaseComponent(L) : LinearSys -&gt; SchProj
5<->Reduction(L) <->text1338.htm#14754<->Reduction(L) : LinearSys -&gt; LinearSys
4<->Scheme_ls-reduction (Example H118E61)<->text1338.htm#14755<->Scheme_ls-reduction (Example H118E61)
4<->Example-ls-reduction :<->text1338.htm#14755<->Example-ls-reduction :: Scheme_ls-reduction (Example H118E61)
5<->BasePoints(L) <->text1338.htm#14756<->BasePoints(L) : LinearSys -&gt; SeqEnum
5<->Multiplicity(L,p) <->text1338.htm#14757<->Multiplicity(L,p) : LinearSys,Pt -&gt; RngIntElt
3<->properties :<->text1338.htm#14747<->properties :: Geometrical Properties (SCHEMES)
3<->linear-algebra :<->text1338.htm#14758<->linear-algebra :: Linear Algebra (SCHEMES)
5<->CoefficientSpace(L) <->text1338.htm#14759<->CoefficientSpace(L) : LinearSys -&gt; ModTupFld
5<->CoefficientMap(L) <->text1338.htm#14760<->CoefficientMap(L) : LinearSys -&gt; ModTupFldElt
5<->PolynomialMap(L) <->text1338.htm#14761<->PolynomialMap(L) : LinearSys -&gt; RngMPolElt
5<->Complement(L,K) <->text1338.htm#14762<->Complement(L,K) : LinearSys,LinearSys -&gt; LinearSys
5<->Complement(L,X) <->text1338.htm#14763<->Complement(L,X) : LinearSys,Sch -&gt; LinearSys
4<->Scheme_creation-by-subspace (Example H118E62)<->text1338.htm#14764<->Scheme_creation-by-subspace (Example H118E62)
4<->Example-creation-by-subspace :<->text1338.htm#14764<->Example-creation-by-subspace :: Scheme_creation-by-subspace (Example H118E62)
5<->Intersection :: L meet K <->text1338.htm#14765<->Intersection :: L meet K : LinearSys,LinearSys -&gt; LinearSys
5<->L meet K <->text1338.htm#14765<->L meet K : LinearSys,LinearSys -&gt; LinearSys
5<->X in L <->text1338.htm#14766<->X in L : Sch,LinearSys -&gt; BoolElt
5<->f in L <->text1338.htm#14767<->f in L : RngMPolElt,LinearSys -&gt; BoolElt
5<->IsSubsystem :: K subset L <->text1338.htm#14768<->IsSubsystem :: K subset L : LinearSys,LinearSys -&gt; BoolElt
5<->K subset L <->text1338.htm#14768<->K subset L : LinearSys,LinearSys -&gt; BoolElt
3<->linear-algebra :<->text1338.htm#14758<->linear-algebra :: Linear Algebra (SCHEMES)
3<->linsys-linalg :<->text1338.htm#14741<->linsys-linalg :: Basic Algebra of Linear Systems (SCHEMES)
3<->linsys-maps :<->text1338.htm#14769<->linsys-maps :: Linear Systems and Maps (SCHEMES)
5<->Pullback(f,L) <->text1338.htm#14770<->Pullback(f,L) : MapSch,LinearSys -&gt; LinearSys
3<->linsys-maps :<->text1338.htm#14769<->linsys-maps :: Linear Systems and Maps (SCHEMES)
3<->linsys :<->text1338.htm<->linsys :: Linear Systems (SCHEMES)
3<->scheme-divisors :<->text1339.htm<->scheme-divisors :: Divisors (SCHEMES)
3<->sch-div-grps :<->text1339.htm#14772<->sch-div-grps :: Divisor Groups (SCHEMES)
5<->DivisorGroup(X) <->text1339.htm#14773<->DivisorGroup(X) : Sch -&gt; DivSch
5<->Variety(G) <->text1339.htm#14774<->Variety(G) : DivSch -&gt; Sch
5<->G1 eq G2<->text1339.htm#14775<->G1 eq G2: DivSch, DivSch -&gt; BoolElt
3<->sch-div-grps :<->text1339.htm#14772<->sch-div-grps :: Divisor Groups (SCHEMES)
3<->div-create :<->text1339.htm#14776<->div-create :: Creation Of Divisors (SCHEMES)
5<->Divisor(X,f) <->text1339.htm#14777<->Divisor(X,f) : Sch, FldFunRatMElt -> DivSchElt
5<->Divisor(X,f) <->text1339.htm#14777<->Divisor(X,f) : Sch, RngMPolElt -> DivSchElt
5<->Divisor(X,f) <->text1339.htm#14777<->Divisor(X,f) : Sch, FldFunFracSchElt -&gt; DivSchElt
5<->Divisor(X,Y) <->text1339.htm#14778<->Divisor(X,Y) : Sch, Sch -> DivSchElt
5<->Divisor(X,I) <->text1339.htm#14778<->Divisor(X,I) : Sch, RngMPol -> DivSchElt
5<->Divisor(X,Q) <->text1339.htm#14778<->Divisor(X,Q) : Sch, SeqEnum -&gt; DivSchElt
5<->HyperplaneSectionDivisor(X) <->text1339.htm#14779<->HyperplaneSectionDivisor(X) : Sch -&gt; DivSchElt
5<->ZeroDivisor(X) <->text1339.htm#14780<->ZeroDivisor(X) : Sch -&gt; DivSchElt
5<->CanonicalDivisor(X) <->text1339.htm#14781<->CanonicalDivisor(X) : Sch -&gt; DivSchElt
5<->SheafToDivisor(S) <->text1339.htm#14782<->SheafToDivisor(S) : ShfCoh -&gt; DivSchElt
5<->RoundDownDivisor(D) <->text1339.htm#14783<->RoundDownDivisor(D) : DivSchElt -&gt; DivSchElt
5<->RoundUpDivisor(D) <->text1339.htm#14784<->RoundUpDivisor(D) : DivSchElt -&gt; DivSchElt
5<->FractionalPart(D) <->text1339.htm#14785<->FractionalPart(D) : DivSchElt -&gt; DivSchElt
5<->IntegralMultiple(D) <->text1339.htm#14786<->IntegralMultiple(D) : DivSchElt -&gt; DivSchElt,RngIntElt
5<->EffectiveHypersurfaceTwist(D) <->text1339.htm#14787<->EffectiveHypersurfaceTwist(D) : DivSchElt -&gt; DivSchElt, RngMPolElt
3<->div-create :<->text1339.htm#14776<->div-create :: Creation Of Divisors (SCHEMES)
3<->id-n-facts :<->text1339.htm#14788<->id-n-facts :: Ideals and Factorisations (SCHEMES)
5<->Ideal(D) <->text1339.htm#14789<->Ideal(D) : DivSchElt -&gt; RngMPol
5<->Support(D) <->text1339.htm#14790<->Support(D) : DivSchElt -&gt; Sch
5<->IdealOfSupport(D) <->text1339.htm#14791<->IdealOfSupport(D) : DivSchElt -&gt; RngMPol
5<->SignDecomposition(D) <->text1339.htm#14792<->SignDecomposition(D) : DivSchElt -&gt; DivSchElt, DivSchElt
5<->IdealFactorisation(D) <->text1339.htm#14793<->IdealFactorisation(D) : DivSchElt -&gt; SeqEnum
5<->CombineIdealFactorisation(~D) <->text1339.htm#14794<->CombineIdealFactorisation(~D) : DivSchElt -&gt;
5<->ComputeReducedFactorisation(~D) <->text1339.htm#14795<->ComputeReducedFactorisation(~D) : DivSchElt -&gt;
5<->ComputePrimeFactorisation(~D) <->text1339.htm#14796<->ComputePrimeFactorisation(~D) : DivSchElt -&gt;
5<->Multiplicity(D,E) <->text1339.htm#14797<->Multiplicity(D,E) : DivSchElt, DivSchElt -&gt; FldRatElt
5<->MultiplicityFast(D,E) <->text1339.htm#14798<->MultiplicityFast(D,E) : DivSchElt, DivSchElt -&gt; FldRatElt
5<->Multiplicities(D,P) <->text1339.htm#14799<->Multiplicities(D,P) : DivSchElt, SeqEnum[DivSchElt] -&gt; SeqEnum
4<->Scheme_sch-div-mults (Example H118E63)<->text1339.htm#14800<->Scheme_sch-div-mults (Example H118E63)
4<->Example-sch-div-mults :<->text1339.htm#14800<->Example-sch-div-mults :: Scheme_sch-div-mults (Example H118E63)
3<->id-n-facts :<->text1339.htm#14788<->id-n-facts :: Ideals and Factorisations (SCHEMES)
3<->basic-div-preds :<->text1339.htm#14801<->basic-div-preds :: Basic Divisor Predicates (SCHEMES)
5<->IsZeroDivisor(D) <->text1339.htm#14802<->IsZeroDivisor(D) : DivSchElt -&gt; BoolElt
5<->IsIntegral(D) <->text1339.htm#14803<->IsIntegral(D) : DivSchElt -&gt; BoolElt
5<->IsEffective(D) <->text1339.htm#14804<->IsEffective(D) : DivSchElt -&gt; BoolElt
5<->IsPrime(D) <->text1339.htm#14805<->IsPrime(D) : DivSchElt -&gt; BoolElt
5<->IsFactorisationPrime(D) <->text1339.htm#14806<->IsFactorisationPrime(D) : DivSchElt -&gt; BoolElt
5<->IsDivisible(D) <->text1339.htm#14807<->IsDivisible(D) : DivSchElt -&gt; BoolElt, RngIntElt
3<->basic-div-preds :<->text1339.htm#14801<->basic-div-preds :: Basic Divisor Predicates (SCHEMES)
3<->div-arith :<->text1339.htm#14808<->div-arith :: Arithmetic of Divisors (SCHEMES)
5<->D1 + D2 <->text1339.htm#14809<->D1 + D2 : DivSchElt, DivTorElt  ->  DivSchElt
5<->D1 + D2 <->text1339.htm#14809<->D1 + D2 : DivTorElt, DivTorElt  ->  DivSchElt
5<->D1 + D2 <->text1339.htm#14809<->D1 + D2 : DivSchElt, DivSchElt  -&gt;  DivSchElt
5<->D1 - D2 <->text1339.htm#14809<->D1 - D2 : DivSchElt, DivTorElt  ->  DivSchElt
5<->D1 - D2 <->text1339.htm#14809<->D1 - D2 : DivTorElt, DivSchElt  ->  DivSchElt
5<->- D <->text1339.htm#14809<->- D : DivSchElt  ->  DivSchElt
5<->D1 + D2 <->text1339.htm#14809<->D1 + D2 : DivSchElt, DivSchElt  -&gt;  DivSchElt
5<->r * D <->text1339.htm#14810<->r * D : FldRatElt, DivSchElt -> DivSchElt
5<->n * D <->text1339.htm#14810<->n * D : RngIntElt, DivSchElt -&gt; DivSchElt
5<->D1 eq D2 <->text1339.htm#14811<->D1 eq D2 : DivSchElt, DivSchElt  -&gt;  BoolElt
3<->div-arith :<->text1339.htm#14808<->div-arith :: Arithmetic of Divisors (SCHEMES)
3<->div-other-props :<->text1339.htm#14812<->div-other-props :: Further Divisor Properties (SCHEMES)
5<->IsCanonical(D) <->text1339.htm#14813<->IsCanonical(D) : DivSchElt -&gt; BoolElt
5<->IsAnticanonical(D) <->text1339.htm#14814<->IsAnticanonical(D) : DivSchElt -&gt; BoolElt
5<->IsCanonicalWithTwist(D) <->text1339.htm#14815<->IsCanonicalWithTwist(D) : DivSchElt -&gt; BoolElt, RngIntElt
5<->IsPrincipal(D) <->text1339.htm#14816<->IsPrincipal(D) : DivSchElt -&gt; BoolElt, FldFunFracSchElt
5<->IsCartier(D) <->text1339.htm#14817<->IsCartier(D) : DivSchElt -&gt; BoolElt
4<->Scheme_divs-cartier-ex (Example H118E64)<->text1339.htm#14818<->Scheme_divs-cartier-ex (Example H118E64)
4<->Example-divs-cartier-ex :<->text1339.htm#14818<->Example-divs-cartier-ex :: Scheme_divs-cartier-ex (Example H118E64)
5<->IsLinearlyEquivalent(D,E) <->text1339.htm#14819<->IsLinearlyEquivalent(D,E) : DivSchElt, DivSchElt  -&gt; BoolElt, FldFunFracSchElt
5<->IsBasePointFree :: BaseLocus(D) <->text1339.htm#14820<->IsBasePointFree :: BaseLocus(D) : DivSchElt -&gt; Sch
5<->IsMobile :: BaseLocus(D) <->text1339.htm#14820<->IsMobile :: BaseLocus(D) : DivSchElt -&gt; Sch
5<->BaseLocus(D) <->text1339.htm#14820<->BaseLocus(D) : DivSchElt -&gt; Sch
5<->IntersectionNumber(D1,D2) <->text1339.htm#14821<->IntersectionNumber(D1,D2) : DivSchElt, DivSchElt-&gt; FldRatElt
5<->SelfIntersection(D) <->text1339.htm#14822<->SelfIntersection(D) : DivSchElt -&gt; FldRatElt
5<->Degree(D,H) <->text1339.htm#14823<->Degree(D,H) : DivSchElt, DivSchElt-> FldRatElt
5<->Degree(D) <->text1339.htm#14823<->Degree(D) : DivSchElt -&gt; FldRatElt
5<->IsNef(D) <->text1339.htm#14824<->IsNef(D) : DivSchElt -&gt; BoolElt
5<->IsNefAndBig(D) <->text1339.htm#14825<->IsNefAndBig(D) : DivSchElt -&gt; BoolElt
5<->NegativePrimeDivisors(D) <->text1339.htm#14826<->NegativePrimeDivisors(D) : DivSchElt -&gt; SeqEnum
5<->ZariskiDecomposition(D) <->text1339.htm#14827<->ZariskiDecomposition(D) : DivSchElt -&gt; DivSchElt, DivSchElt
5<->Reduction(D,p) <->text1339.htm#14828<->Reduction(D,p) : DivSchElt, Any -&gt; DivSchElt
3<->div-other-props :<->text1339.htm#14812<->div-other-props :: Further Divisor Properties (SCHEMES)
3<->div-rr-space :<->text1339.htm#14829<->div-rr-space :: Riemann-Roch Spaces (SCHEMES)
5<->Sheaf(D) <->text1339.htm#14830<->Sheaf(D) : DivSchElt -&gt; ShfCoh
5<->RiemannRochSpace :: RiemannRochBasis(D) <->text1339.htm#14831<->RiemannRochSpace :: RiemannRochBasis(D) : DivSchElt -&gt; SeqEnum
5<->RiemannRochBasis(D) <->text1339.htm#14831<->RiemannRochBasis(D) : DivSchElt -&gt; SeqEnum
5<->RiemannRochCoordinates(f,D) <->text1339.htm#14832<->RiemannRochCoordinates(f,D) : Any, DivSchElt -&gt; BoolElt, SeqEnum
5<->IsLinearSystemNonEmpty(D) <->text1339.htm#14833<->IsLinearSystemNonEmpty(D) : DivSchElt -&gt; BoolElt, DivSchElt
3<->div-rr-space :<->text1339.htm#14829<->div-rr-space :: Riemann-Roch Spaces (SCHEMES)
3<->scheme-divisors :<->text1339.htm<->scheme-divisors :: Divisors (SCHEMES)
3<->scheme-isolated-points :<->text1340.htm<->scheme-isolated-points :: Isolated Points on Schemes (SCHEMES)
5<->LinearElimination(S) <->text1340.htm#14835<->LinearElimination(S) : Sch -&gt; Map
5<->IsolatedPointsFinder(S,P) <->text1340.htm#14836<->IsolatedPointsFinder(S,P) : Sch, SeqEnum -&gt; List
5<->IsolatedPointsLifter(S,P) <->text1340.htm#14837<->IsolatedPointsLifter(S,P) : Sch, SeqEnum -&gt; BoolElt, Pt
5<->IsolatedPointsLiftToMinimalPolynomials(S,P) <->text1340.htm#14838<->IsolatedPointsLiftToMinimalPolynomials(S,P) : Sch, SeqEnum -&gt; BoolElt, SeqEnum
4<->Scheme_ec-large-int-pts (Example H118E65)<->text1340.htm#14839<->Scheme_ec-large-int-pts (Example H118E65)
4<->Example-ec-large-int-pts :<->text1340.htm#14839<->Example-ec-large-int-pts :: Scheme_ec-large-int-pts (Example H118E65)
4<->Scheme_halls-conjecture (Example H118E66)<->text1340.htm#14840<->Scheme_halls-conjecture (Example H118E66)
4<->Example-halls-conjecture :<->text1340.htm#14840<->Example-halls-conjecture :: Scheme_halls-conjecture (Example H118E66)
4<->Scheme_random-linear-scheme (Example H118E67)<->text1340.htm#14841<->Scheme_random-linear-scheme (Example H118E67)
4<->Example-random-linear-scheme :<->text1340.htm#14841<->Example-random-linear-scheme :: Scheme_random-linear-scheme (Example H118E67)
4<->Scheme_mathieu-monodromy (Example H118E68)<->text1340.htm#14842<->Scheme_mathieu-monodromy (Example H118E68)
4<->Example-mathieu-monodromy :<->text1340.htm#14842<->Example-mathieu-monodromy :: Scheme_mathieu-monodromy (Example H118E68)
3<->scheme-isolated-points :<->text1340.htm<->scheme-isolated-points :: Isolated Points on Schemes (SCHEMES)
3<->scheme-advanced :<->text1341.htm<->scheme-advanced :: Advanced Examples (SCHEMES)
3<->scheme-advanced-support :<->text1341.htm#14844<->scheme-advanced-support :: A Pair of Twisted Cubics (SCHEMES)
4<->Scheme_twisted-cubics (Example H118E69)<->text1341.htm#14845<->Scheme_twisted-cubics (Example H118E69)
4<->Example-twisted-cubics :<->text1341.htm#14845<->Example-twisted-cubics :: Scheme_twisted-cubics (Example H118E69)
3<->scheme-advanced-support :<->text1341.htm#14844<->scheme-advanced-support :: A Pair of Twisted Cubics (SCHEMES)
3<->scheme-advanced-space :<->text1341.htm#14846<->scheme-advanced-space :: Curves in Space (SCHEMES)
4<->Scheme_curves-in-space (Example H118E70)<->text1341.htm#14847<->Scheme_curves-in-space (Example H118E70)
4<->Example-curves-in-space :<->text1341.htm#14847<->Example-curves-in-space :: Scheme_curves-in-space (Example H118E70)
3<->scheme-advanced-space :<->text1341.htm#14846<->scheme-advanced-space :: Curves in Space (SCHEMES)
3<->scheme-advanced :<->text1341.htm<->scheme-advanced :: Advanced Examples (SCHEMES)
3<->schemes :<->text1321.htm<->schemes :: SCHEMES
3<->coherent-sheaves :<->text1344.htm<->coherent-sheaves :: COHERENT SHEAVES
3<->introduction :<->text1345.htm<->introduction :: Introduction (COHERENT SHEAVES)
3<->creation :<->text1346.htm<->creation :: Creation Functions (COHERENT SHEAVES)
5<->Sheaf(M, X) <->text1346.htm#14853<->Sheaf(M, X) : ModMPol, Sch -&gt; ShfCoh
5<->StructureSheaf(X, n) <->text1346.htm#14854<->StructureSheaf(X, n) : Sch, RngIntElt -> ShfCoh
5<->StructureSheaf(X) <->text1346.htm#14854<->StructureSheaf(X) : Sch -&gt; ShfCoh
5<->CanonicalSheaf(X, n) <->text1346.htm#14855<->CanonicalSheaf(X, n) : Sch, RngIntElt -> ShfCoh
5<->CanonicalSheaf(X) <->text1346.htm#14855<->CanonicalSheaf(X) : Sch -&gt; ShfCoh
5<->Twist(S, n) <->text1346.htm#14856<->Twist(S, n) : ShfCoh, RngIntElt -&gt; ShfCoh
4<->Sheaf_creat_exs (Example H119E1)<->text1346.htm#14857<->Sheaf_creat_exs (Example H119E1)
4<->Example-creat_exs :<->text1346.htm#14857<->Example-creat_exs :: Sheaf_creat_exs (Example H119E1)
5<->SheafOfDifferentials(X) <->text1346.htm#14858<->SheafOfDifferentials(X) : Sch -&gt; ShfCoh
5<->TangentSheaf(X) <->text1346.htm#14859<->TangentSheaf(X) : Sch -&gt; ShfCoh
5<->HorrocksMumfordBundle(P) <->text1346.htm#14860<->HorrocksMumfordBundle(P) : Prj -&gt; ShfCoh
3<->creation :<->text1346.htm<->creation :: Creation Functions (COHERENT SHEAVES)
3<->accessors :<->text1347.htm<->accessors :: Accessor Functions (COHERENT SHEAVES)
5<->Module(S) <->text1347.htm#14862<->Module(S) : ShfCoh -&gt; ModMPol
5<->Scheme(S) <->text1347.htm#14863<->Scheme(S) : ShfCoh -&gt; Sch
5<->FullModule(S) <->text1347.htm#14864<->FullModule(S) : ShfCoh -&gt; ModMPol
5<->GlobalSectionSubmodule(S) <->text1347.htm#14865<->GlobalSectionSubmodule(S) : ShfCoh -&gt; ModMPol
5<->SaturateSheaf(~S) <->text1347.htm#14866<->SaturateSheaf(~S) : ShfCoh -&gt;
4<->Sheaf_access_exs (Example H119E2)<->text1347.htm#14867<->Sheaf_access_exs (Example H119E2)
4<->Example-access_exs :<->text1347.htm#14867<->Example-access_exs :: Sheaf_access_exs (Example H119E2)
3<->accessors :<->text1347.htm<->accessors :: Accessor Functions (COHERENT SHEAVES)
3<->more-cons :<->text1348.htm<->more-cons :: Basic Constructions (COHERENT SHEAVES)
5<->TensorPower :: TensorProduct(S, T) <->text1348.htm#14869<->TensorPower :: TensorProduct(S, T) : ShfCoh, ShfCoh -&gt; ShfCoh
5<->TensorProduct(S, T) <->text1348.htm#14869<->TensorProduct(S, T) : ShfCoh, ShfCoh -&gt; ShfCoh
5<->Dual(S) <->text1348.htm#14870<->Dual(S) : ShfCoh -&gt; ShfCoh
5<->SheafHoms(S, T) <->text1348.htm#14871<->SheafHoms(S, T) : ShfCoh, ShfCoh -&gt; ShfCoh, Map
5<->DirectSum(S, T) <->text1348.htm#14872<->DirectSum(S, T) : ShfCoh, ShfCoh -&gt; ShfCoh
5<->Restriction(S, Y) <->text1348.htm#14873<->Restriction(S, Y) : ShfCoh, Sch -&gt; ShfCoh
4<->Sheaf_cons_exs (Example H119E3)<->text1348.htm#14874<->Sheaf_cons_exs (Example H119E3)
4<->Example-cons_exs :<->text1348.htm#14874<->Example-cons_exs :: Sheaf_cons_exs (Example H119E3)
3<->more-cons :<->text1348.htm<->more-cons :: Basic Constructions (COHERENT SHEAVES)
3<->sheaf-homs :<->text1349.htm<->sheaf-homs :: Sheaf Homomorphisms (COHERENT SHEAVES)
5<->SheafHomomorphism(S, T, h) <->text1349.htm#14876<->SheafHomomorphism(S, T, h) : ShfCoh, ShfCoh, ModMPolHom -&gt; ShfHom
5<->Domain(f) <->text1349.htm#14877<->Domain(f) : ShfHom -&gt; ShfCoh
5<->Codomain(f) <->text1349.htm#14878<->Codomain(f) : ShfHom -&gt; ShfCoh
5<->Degree(f) <->text1349.htm#14879<->Degree(f) : ShfHom -&gt; RngIntElt
5<->ModuleHomomorphism(f) <->text1349.htm#14880<->ModuleHomomorphism(f) : ShfHom -&gt; ModMPolHom
5<->Kernel(f) <->text1349.htm#14881<->Kernel(f) : ShfHom -&gt; ShfCoh, ShfHom
5<->Image(f) <->text1349.htm#14882<->Image(f) : ShfHom -&gt; ShfCoh, ShfHom, ShfHom
5<->Cokernel(f) <->text1349.htm#14883<->Cokernel(f) : ShfHom -&gt; ShfCoh, ShfHom
5<->Expand(hms) <->text1349.htm#14884<->Expand(hms) : SeqEnum[ShfHom] -&gt; ShfHom
3<->sheaf-homs :<->text1349.htm<->sheaf-homs :: Sheaf Homomorphisms (COHERENT SHEAVES)
3<->div_maps :<->text1350.htm<->div_maps :: Divisor Maps and Riemann-Roch Spaces (COHERENT SHEAVES)
5<->DivisorMap(S) <->text1350.htm#14886<->DivisorMap(S) : ShfCoh -&gt; Map,Sch
5<->RiemannRochBasis :: DivisorToSheaf(X, I) <->text1350.htm#14887<->RiemannRochBasis :: DivisorToSheaf(X, I) : Sch, RngMPol -&gt; ShfCoh
5<->DivisorToSheaf(X, I) <->text1350.htm#14887<->DivisorToSheaf(X, I) : Sch, RngMPol -&gt; ShfCoh
4<->Sheaf_shf<->text1350.htm#14888<->Sheaf_shf:rr-scroll (Example H119E4)
4<->Example-shf:rr-scroll :: Sheaf_shf<->text1350.htm#14888<->Example-shf:rr-scroll :: Sheaf_shf:rr-scroll (Example H119E4)
4<->Sheaf_shf<->text1350.htm#14889<->Sheaf_shf:dp3to6 (Example H119E5)
4<->Example-shf:dp3to6 :: Sheaf_shf<->text1350.htm#14889<->Example-shf:dp3to6 :: Sheaf_shf:dp3to6 (Example H119E5)
3<->div_maps :<->text1350.htm<->div_maps :: Divisor Maps and Riemann-Roch Spaces (COHERENT SHEAVES)
3<->shf:preds :<->text1351.htm<->shf:preds :: Predicates (COHERENT SHEAVES)
5<->IsLocallyFree(S) <->text1351.htm#14891<->IsLocallyFree(S) : ShfCoh -&gt; BoolElt, RngIntElt
5<->IsIsomorphicWithTwist :: IsIsomorphic(S, T) <->text1351.htm#14892<->IsIsomorphicWithTwist :: IsIsomorphic(S, T) : ShfCoh, ShfCoh -&gt; BoolElt, ShfHom
5<->IsIsomorphic(S, T) <->text1351.htm#14892<->IsIsomorphic(S, T) : ShfCoh, ShfCoh -&gt; BoolElt, ShfHom
5<->IsArithmeticallyCohenMacaulay(S) <->text1351.htm#14893<->IsArithmeticallyCohenMacaulay(S) : ShfCoh -&gt; BoolElt
3<->shf:preds :<->text1351.htm<->shf:preds :: Predicates (COHERENT SHEAVES)
3<->shf:misc :<->text1352.htm<->shf:misc :: Miscellaneous (COHERENT SHEAVES)
5<->CohomologyDimension(S, r, n) <->text1352.htm#14895<->CohomologyDimension(S, r, n) : ShfCoh, RngIntElt, RngIntElt -&gt; RngIntElt
5<->DimensionOfGlobalSections(S) <->text1352.htm#14896<->DimensionOfGlobalSections(S) : ShfCoh -&gt; RngIntElt
5<->IntersectionPairing(S, T) <->text1352.htm#14897<->IntersectionPairing(S, T) : ShfCoh, ShfCoh -&gt; RngIntElt
5<->ZeroSubscheme(S, s) <->text1352.htm#14898<->ZeroSubscheme(S, s) : ShfCoh, ModMPolElt -&gt; Sch
3<->shf:misc :<->text1352.htm<->shf:misc :: Miscellaneous (COHERENT SHEAVES)
3<->shf:exs :<->text1353.htm<->shf:exs :: Examples (COHERENT SHEAVES)
4<->Sheaf_big_ex (Example H119E6)<->text1353.htm#14900<->Sheaf_big_ex (Example H119E6)
4<->Example-big_ex :<->text1353.htm#14900<->Example-big_ex :: Sheaf_big_ex (Example H119E6)
4<->Sheaf_ell_crv_norm (Example H119E7)<->text1353.htm#14901<->Sheaf_ell_crv_norm (Example H119E7)
4<->Example-ell_crv_norm :<->text1353.htm#14901<->Example-ell_crv_norm :: Sheaf_ell_crv_norm (Example H119E7)
3<->shf:exs :<->text1353.htm<->shf:exs :: Examples (COHERENT SHEAVES)
3<->coherent-sheaves :<->text1344.htm<->coherent-sheaves :: COHERENT SHEAVES
3<->algebraic-curve :<->text1356.htm<->algebraic-curve :: ALGEBRAIC CURVES
3<->examples1 :<->text1357.htm<->examples1 :: First Examples (ALGEBRAIC CURVES)
3<->examples1-ambients :<->text1357.htm#14906<->examples1-ambients :: Ambients (ALGEBRAIC CURVES)
3<->examples1-curve :<->text1357.htm#14907<->examples1-curve :: Curves (ALGEBRAIC CURVES)
3<->intro-closure :<->text1357.htm#14908<->intro-closure :: Projective Closure (ALGEBRAIC CURVES)
3<->intro-point :<->text1357.htm#14909<->intro-point :: Points (ALGEBRAIC CURVES)
3<->intro-coords :<->text1357.htm#14910<->intro-coords :: Choosing Coordinates (ALGEBRAIC CURVES)
3<->intro-coords :<->text1357.htm#14911<->intro-coords :: Function Fields and Divisors (ALGEBRAIC CURVES)
3<->examples1 :<->text1357.htm<->examples1 :: First Examples (ALGEBRAIC CURVES)
3<->ambients :<->text1358.htm<->ambients :: Ambient Spaces (ALGEBRAIC CURVES)
5<->AffinePlane :: AffineSpace(k,n) <->text1358.htm#14913<->AffinePlane :: AffineSpace(k,n) : Rng, RngIntElt -&gt; Aff
5<->AffineSpace(k,n) <->text1358.htm#14913<->AffineSpace(k,n) : Rng, RngIntElt -&gt; Aff
5<->ProjectivePlane :: ProjectiveSpace(k,n) <->text1358.htm#14914<->ProjectivePlane :: ProjectiveSpace(k,n) : Rng,RngIntElt -&gt; Prj
5<->ProjectiveSpace(k,n) <->text1358.htm#14914<->ProjectiveSpace(k,n) : Rng,RngIntElt -&gt; Prj
5<->DirectProduct(A,B) <->text1358.htm#14915<->DirectProduct(A,B) : Prj,Prj -&gt; PrjProd,SeqEnum
5<->RuledSurface(k,a,b) <->text1358.htm#14916<->RuledSurface(k,a,b) : Rng,RngIntElt,RngIntElt -> PrjScrl
5<->RuledSurface(k,n) <->text1358.htm#14916<->RuledSurface(k,n) : Rng,RngIntElt -&gt; PrjScrl
5<->CoordinateRing(A) <->text1358.htm#14917<->CoordinateRing(A) : Sch -&gt; RngMPol
5<->FunctionField(A) <->text1358.htm#14918<->FunctionField(A) : Prj -> FldFunFracSch
5<->FunctionField(A) <->text1358.htm#14918<->FunctionField(A) : Aff -&gt; FldFunFracSch
5<->A(L) ! [a,...] <->text1358.htm#14919<->A(L) ! [a,...] : SetPt,[RngElt] -> Pt
5<->A ! [a,...] <->text1358.htm#14919<->A ! [a,...] : Sch,[RngElt] -&gt; Pt
5<->Origin(A) <->text1358.htm#14920<->Origin(A) : Aff -&gt; Pt
5<->[] :: Coordinates(p) <->text1358.htm#14921<->[] :: Coordinates(p) : Pt -&gt; SeqEnum
5<->Coordinates(p) <->text1358.htm#14921<->Coordinates(p) : Pt -&gt; SeqEnum
4<->Crv_plane-points (Example H120E1)<->text1358.htm#14922<->Crv_plane-points (Example H120E1)
4<->Example-plane-points :<->text1358.htm#14922<->Example-plane-points :: Crv_plane-points (Example H120E1)
3<->ambients :<->text1358.htm<->ambients :: Ambient Spaces (ALGEBRAIC CURVES)
3<->curves :<->text1359.htm<->curves :: Algebraic Curves (ALGEBRAIC CURVES)
3<->curves-creation :<->text1359.htm#14924<->curves-creation :: Creation (ALGEBRAIC CURVES)
5<->Curve(A,f) <->text1359.htm#14925<->Curve(A,f) : Sch, RngMPolElt -&gt; CrvPln
5<->Curve(A,I) <->text1359.htm#14926<->Curve(A,I) : Sch, RngMPol -&gt; Crv
5<->Curve(X,S) <->text1359.htm#14927<->Curve(X,S) : Sch, SeqEnum -&gt; Crv
5<->IsCurve(X) <->text1359.htm#14928<->IsCurve(X) : Sch -&gt; BoolElt,Crv
5<->Curve(X) <->text1359.htm#14929<->Curve(X) : Sch -&gt; Crv
5<->Line(P,S) <->text1359.htm#14930<->Line(P,S) : Prj, {Pt} -> Sch
5<->Line(C,p,q) <->text1359.htm#14930<->Line(C,p,q) : CrvPln, Pt,Pt -&gt; CrvPln
5<->Conic(P,S) <->text1359.htm#14931<->Conic(P,S) : Prj, {Pt} -&gt; Crv
5<->Union(C,D) <->text1359.htm#14932<->Union(C,D) : Sch,Sch -&gt; Sch
3<->curves-creation :<->text1359.htm#14924<->curves-creation :: Creation (ALGEBRAIC CURVES)
3<->curves-base-change :<->text1359.htm#14933<->curves-base-change :: Base Change (ALGEBRAIC CURVES)
5<->BaseChange(C, K) <->text1359.htm#14934<->BaseChange(C, K) : Sch,Rng -&gt; Sch
5<->BaseChange(C, m) <->text1359.htm#14935<->BaseChange(C, m) : Sch,Map -&gt; Sch
5<->BaseChange(C, A, m) <->text1359.htm#14936<->BaseChange(C, A, m) : Sch,Sch,Map -> Sch
5<->BaseChange(C, A) <->text1359.htm#14936<->BaseChange(C, A) : Sch,Sch -&gt; Sch
5<->BaseChange(C, n) <->text1359.htm#14937<->BaseChange(C, n) : Sch, RngIntElt -&gt; Sch
4<->Crv_curve-base-change (Example H120E2)<->text1359.htm#14938<->Crv_curve-base-change (Example H120E2)
4<->Example-curve-base-change :<->text1359.htm#14938<->Example-curve-base-change :: Crv_curve-base-change (Example H120E2)
3<->curves-base-change :<->text1359.htm#14933<->curves-base-change :: Base Change (ALGEBRAIC CURVES)
3<->curves-attributes :<->text1359.htm#14939<->curves-attributes :: Basic Attributes (ALGEBRAIC CURVES)
5<->AmbientSpace(C) <->text1359.htm#14940<->AmbientSpace(C) : Sch -&gt; Sch
5<->CoefficientRing :: BaseRing(C) <->text1359.htm#14941<->CoefficientRing :: BaseRing(C) : Sch -&gt; Rng
5<->BaseField :: BaseRing(C) <->text1359.htm#14941<->BaseField :: BaseRing(C) : Sch -&gt; Rng
5<->BaseRing(C) <->text1359.htm#14941<->BaseRing(C) : Sch -&gt; Rng
5<->DefiningPolynomial(C) <->text1359.htm#14942<->DefiningPolynomial(C) : Sch -&gt; RngMPolElt
5<->DefiningIdeal(C) <->text1359.htm#14943<->DefiningIdeal(C) : Sch -&gt; RngMPol
5<->CoordinateRing(C) <->text1359.htm#14944<->CoordinateRing(C) : Sch -&gt; Rng
5<->Degree(C) <->text1359.htm#14945<->Degree(C) : Sch -&gt; RngIntElt
5<->JacobianIdeal(C) <->text1359.htm#14946<->JacobianIdeal(C) : Sch -&gt; RngMPol
5<->JacobianMatrix(C) <->text1359.htm#14947<->JacobianMatrix(C) : Sch -&gt; ModMatRngElt
5<->HessianMatrix(C) <->text1359.htm#14948<->HessianMatrix(C) : Sch -&gt; Mtrx
4<->Crv_curve-hessian (Example H120E3)<->text1359.htm#14949<->Crv_curve-hessian (Example H120E3)
4<->Example-curve-hessian :<->text1359.htm#14949<->Example-curve-hessian :: Crv_curve-hessian (Example H120E3)
3<->curves-attributes :<->text1359.htm#14939<->curves-attributes :: Basic Attributes (ALGEBRAIC CURVES)
3<->curves-invariants :<->text1359.htm#14950<->curves-invariants :: Basic Invariants (ALGEBRAIC CURVES)
5<->IsReduced(C) <->text1359.htm#14951<->IsReduced(C) : Sch -&gt; BoolElt
5<->IsIrreducible(C) <->text1359.htm#14952<->IsIrreducible(C) : Sch -&gt; BoolElt
5<->IsSingular(C) <->text1359.htm#14953<->IsSingular(C) : Sch -&gt; BoolElt
5<->IsNonsingular(C) <->text1359.htm#14954<->IsNonsingular(C) : Sch -&gt; BoolElt
3<->curves-invariants :<->text1359.htm#14950<->curves-invariants :: Basic Invariants (ALGEBRAIC CURVES)
3<->random-curves :<->text1359.htm#14955<->random-curves :: Random Curves (ALGEBRAIC CURVES)
5<->RandomNodalCurve(d, g, P) <->text1359.htm#14956<->RandomNodalCurve(d, g, P) : RngIntElt, RngIntElt, Prj -&gt; CrvPln
5<->IsNodalCurve(C) <->text1359.htm#14957<->IsNodalCurve(C) : Crv-&gt; BoolElt
5<->RandomOrdinaryPlaneCurve(d, S, P) <->text1359.htm#14958<->RandomOrdinaryPlaneCurve(d, S, P) : RngIntElt, SeqEnum, Prj -&gt; CrvPln, RngMPol
5<->RandomCurveByGenus(g, K) <->text1359.htm#14959<->RandomCurveByGenus(g, K) : RngIntElt, Fld -&gt; Crv
4<->Crv_random-curves (Example H120E4)<->text1359.htm#14960<->Crv_random-curves (Example H120E4)
4<->Example-random-curves :<->text1359.htm#14960<->Example-random-curves :: Crv_random-curves (Example H120E4)
3<->random-curves :<->text1359.htm#14955<->random-curves :: Random Curves (ALGEBRAIC CURVES)
3<->ordinary-plane-curves :<->text1359.htm#14961<->ordinary-plane-curves :: Ordinary Plane Curves (ALGEBRAIC CURVES)
5<->HasOnlyOrdinarySingularities(C) <->text1359.htm#14962<->HasOnlyOrdinarySingularities(C) : CrvPln -&gt; BoolElt, RngIntElt, RngMPol
5<->HasOnlyOrdinarySingularitiesMonteCarlo(C) <->text1359.htm#14963<->HasOnlyOrdinarySingularitiesMonteCarlo(C) : CrvPln -&gt; BoolElt, RngIntElt
5<->AdjointIdeal(C) <->text1359.htm#14964<->AdjointIdeal(C) : Crv -&gt; RngMPol
5<->AdjointLinearSystemForNodalCurve :: AdjointIdealForNodalCurve(C) <->text1359.htm#14965<->AdjointLinearSystemForNodalCurve :: AdjointIdealForNodalCurve(C) : Crv -&gt; RngMPol
5<->AdjointIdealForNodalCurve(C) <->text1359.htm#14965<->AdjointIdealForNodalCurve(C) : Crv -&gt; RngMPol
5<->AdjointLinearSystemFromIdeal(I, d) <->text1359.htm#14966<->AdjointLinearSystemFromIdeal(I, d) : RngMPol, RngIntElt -&gt; LinearSys
5<->CanonicalLinearSystemFromIdeal(I, d) <->text1359.htm#14967<->CanonicalLinearSystemFromIdeal(I, d) : RngMPol, RngIntElt -&gt; LinearSys
5<->AdjointLinearSystem :: CanonicalLinearSystem(C) <->text1359.htm#14968<->AdjointLinearSystem :: CanonicalLinearSystem(C) : Crv -&gt; LinearSys
5<->Adjoints :: CanonicalLinearSystem(C) <->text1359.htm#14968<->Adjoints :: CanonicalLinearSystem(C) : Crv -&gt; LinearSys
5<->CanonicalLinearSystem(C) <->text1359.htm#14968<->CanonicalLinearSystem(C) : Crv -&gt; LinearSys
4<->Crv_ordinary-curves (Example H120E5)<->text1359.htm#14969<->Crv_ordinary-curves (Example H120E5)
4<->Example-ordinary-curves :<->text1359.htm#14969<->Example-ordinary-curves :: Crv_ordinary-curves (Example H120E5)
3<->ordinary-plane-curves :<->text1359.htm#14961<->ordinary-plane-curves :: Ordinary Plane Curves (ALGEBRAIC CURVES)
3<->curves :<->text1359.htm<->curves :: Algebraic Curves (ALGEBRAIC CURVES)
3<->local-curve :<->text1360.htm<->local-curve :: Local Geometry (ALGEBRAIC CURVES)
3<->local-points :<->text1360.htm#14971<->local-points :: Creation of Points on Curves (ALGEBRAIC CURVES)
5<->C ! [a,...] <->text1360.htm#14972<->C ! [a,...] : Crv,[RngElt] -&gt; Pt
5<->C(L) ! [a,...] <->text1360.htm#14973<->C(L) ! [a,...] : SetPt,[RngElt] -&gt; Pt
5<->Curve(p) <->text1360.htm#14974<->Curve(p) : Pt -&gt; Crv
5<->Curve(P) <->text1360.htm#14975<->Curve(P) : SetPt -&gt; Crv
5<->Coordinates(p) <->text1360.htm#14976<->Coordinates(p) : Pt -&gt; SeqEnum
5<->Coordinate :: p[i] <->text1360.htm#14977<->Coordinate :: p[i] : Pt, RngIntElt -&gt; RngElt
5<->[] :: p[i] <->text1360.htm#14977<->[] :: p[i] : Pt, RngIntElt -&gt; RngElt
5<->p eq q <->text1360.htm#14978<->p eq q : Pt,Pt -&gt; BoolElt
5<->FormalPoint(P) <->text1360.htm#14979<->FormalPoint(P) : Pt -&gt; Pt
3<->local-points :<->text1360.htm#14971<->local-points :: Creation of Points on Curves (ALGEBRAIC CURVES)
3<->local-ops :<->text1360.htm#14980<->local-ops :: Operations at a Point (ALGEBRAIC CURVES)
5<->S in C <->text1360.htm#14981<->S in C : SeqEnum,Sch -> BoolElt
5<->p in C <->text1360.htm#14981<->p in C : Pt,Sch -&gt; BoolElt
5<->IsNonsingular(C,p) <->text1360.htm#14982<->IsNonsingular(C,p) : Sch,Pt -> BoolElt
5<->IsNonsingular(p) <->text1360.htm#14982<->IsNonsingular(p) : Pt -&gt; BoolElt
5<->IsSingular(C,p) <->text1360.htm#14983<->IsSingular(C,p) : Sch,Pt -> BoolElt
5<->IsSingular(p) <->text1360.htm#14983<->IsSingular(p) : Pt -&gt; BoolElt
5<->IsInflectionPoint(C,p) <->text1360.htm#14984<->IsInflectionPoint(C,p) : Sch,Pt -> BoolElt,RngIntElt
5<->IsFlex :: IsInflectionPoint(p) <->text1360.htm#14984<->IsFlex :: IsInflectionPoint(p) : Pt -&gt; BoolElt,RngIntElt
5<->IsFlex(p) : Pt -> BoolElt,RngIntElt :: IsInflectionPoint(p) <->text1360.htm#14984<->IsFlex(p) : Pt -> BoolElt,RngIntElt :: IsInflectionPoint(p) : Pt -&gt; BoolElt,RngIntElt
5<->IsInflectionPoint(p) <->text1360.htm#14984<->IsInflectionPoint(p) : Pt -&gt; BoolElt,RngIntElt
5<->TangentLine(C,p) <->text1360.htm#14985<->TangentLine(C,p) : Crv,Pt -> Crv
5<->TangentLine(p) <->text1360.htm#14985<->TangentLine(p) : Pt -&gt; Crv
5<->TangentCone(C,p) <->text1360.htm#14986<->TangentCone(C,p) : Sch,Pt -> Sch
5<->TangentCone(p) <->text1360.htm#14986<->TangentCone(p) : Pt -&gt; Sch
5<->IsTangent(C,D,p) <->text1360.htm#14987<->IsTangent(C,D,p) : Sch,Sch,Pt -&gt; BoolElt
3<->local-ops :<->text1360.htm#14980<->local-ops :: Operations at a Point (ALGEBRAIC CURVES)
3<->sing-test :<->text1360.htm#14988<->sing-test :: Singularity Analysis (ALGEBRAIC CURVES)
5<->Multiplicity(C,p) <->text1360.htm#14989<->Multiplicity(C,p) : Sch,Pt -> RngIntElt
5<->Multiplicity(p) <->text1360.htm#14989<->Multiplicity(p) : Pt -&gt; RngIntElt
5<->IsDoublePoint(C,p) <->text1360.htm#14990<->IsDoublePoint(C,p) : Crv,Pt -> BoolElt
5<->IsDoublePoint(p) <->text1360.htm#14990<->IsDoublePoint(p) : Pt -&gt; BoolElt
5<->IsOrdinarySingularity(C,p) <->text1360.htm#14991<->IsOrdinarySingularity(C,p) : Sch,Pt -> BoolElt
5<->IsOrdinarySingularity(p) <->text1360.htm#14991<->IsOrdinarySingularity(p) : Pt -&gt; BoolElt
5<->IsNode(C,p) <->text1360.htm#14992<->IsNode(C,p) : Sch,Pt -> BoolElt
5<->IsNode(p) <->text1360.htm#14992<->IsNode(p) : Pt -&gt; BoolElt
5<->IsCusp(C,p) <->text1360.htm#14993<->IsCusp(C,p) : Crv,Pt -> BoolElt
5<->IsCusp(p) <->text1360.htm#14993<->IsCusp(p) : Pt -&gt; BoolElt
5<->IsAnalyticallyIrreducible(C,p) <->text1360.htm#14994<->IsAnalyticallyIrreducible(C,p) : CrvPln,Pt -> BoolElt
5<->IsAnalyticallyIrreducible(p) <->text1360.htm#14994<->IsAnalyticallyIrreducible(p) : Pt -&gt; BoolElt
4<->Crv_curve-iscusp (Example H120E6)<->text1360.htm#14995<->Crv_curve-iscusp (Example H120E6)
4<->Example-curve-iscusp :<->text1360.htm#14995<->Example-curve-iscusp :: Crv_curve-iscusp (Example H120E6)
3<->sing-test :<->text1360.htm#14988<->sing-test :: Singularity Analysis (ALGEBRAIC CURVES)
3<->blow-ups :<->text1360.htm#14996<->blow-ups :: Resolution of Singularities (ALGEBRAIC CURVES)
5<->Blowup(C) <->text1360.htm#14997<->Blowup(C) : CrvPln -&gt; CrvPln, CrvPln
5<->Blowup(C,M) <->text1360.htm#14998<->Blowup(C,M) : CrvPln,Mtrx -&gt; CrvPln, RngIntElt, RngIntElt
4<->Crv_weighted-blowup (Example H120E7)<->text1360.htm#14999<->Crv_weighted-blowup (Example H120E7)
4<->Example-weighted-blowup :<->text1360.htm#14999<->Example-weighted-blowup :: Crv_weighted-blowup (Example H120E7)
3<->blow-ups :<->text1360.htm#14996<->blow-ups :: Resolution of Singularities (ALGEBRAIC CURVES)
3<->log-canonical-thresholds :<->text1360.htm#15000<->log-canonical-thresholds :: Log Canonical Thresholds (ALGEBRAIC CURVES)
5<->LCT :: LogCanonicalThreshold(C) <->text1360.htm#15001<->LCT :: LogCanonicalThreshold(C) : Sch -&gt; FldRatElt, BoolElt
5<->LogCanonicalThreshold(C) <->text1360.htm#15001<->LogCanonicalThreshold(C) : Sch -&gt; FldRatElt, BoolElt
5<->LogCanonicalThresholdAtOrigin(C) <->text1360.htm#15002<->LogCanonicalThresholdAtOrigin(C) : Sch -&gt; FldRatElt
5<->LCT :: LogCanonicalThreshold(C, P) <->text1360.htm#15003<->LCT :: LogCanonicalThreshold(C, P) : Sch, Pt -&gt; FldRatElt
5<->LogCanonicalThreshold(C, P) <->text1360.htm#15003<->LogCanonicalThreshold(C, P) : Sch, Pt -&gt; FldRatElt
5<->LogCanonicalThresholdOverExtension(C) <->text1360.htm#15004<->LogCanonicalThresholdOverExtension(C) : Sch -&gt; FldRatElt
4<->Crv_lct-projective-plane (Example H120E8)<->text1360.htm#15005<->Crv_lct-projective-plane (Example H120E8)
4<->Example-lct-projective-plane :<->text1360.htm#15005<->Example-lct-projective-plane :: Crv_lct-projective-plane (Example H120E8)
4<->Crv_lct-over-ext (Example H120E9)<->text1360.htm#15006<->Crv_lct-over-ext (Example H120E9)
4<->Example-lct-over-ext :<->text1360.htm#15006<->Example-lct-over-ext :: Crv_lct-over-ext (Example H120E9)
3<->log-canonical-thresholds :<->text1360.htm#15000<->log-canonical-thresholds :: Log Canonical Thresholds (ALGEBRAIC CURVES)
3<->local-intersection :<->text1360.htm#15007<->local-intersection :: Local Intersection Theory (ALGEBRAIC CURVES)
5<->IsIntersection(C,D,p) <->text1360.htm#15008<->IsIntersection(C,D,p) : Sch,Sch,Pt -&gt; BoolElt
5<->IsTransverse(C,D,p) <->text1360.htm#15009<->IsTransverse(C,D,p) : Sch,Sch,Pt -&gt; BoolElt
5<->IntersectionNumber(C,D,p) <->text1360.htm#15010<->IntersectionNumber(C,D,p) : Sch,Sch,Pt -&gt; RngIntElt
5<->IntersectionNumbers(F,G) <->text1360.htm#15011<->IntersectionNumbers(F,G) : RngMPolElt,RngMPolElt -> List
5<->IntersectionNumbers(C,D) <->text1360.htm#15011<->IntersectionNumbers(C,D) : CrvPln,CrvPln -&gt; List
4<->Crv_local-intersection-example (Example H120E10)<->text1360.htm#15012<->Crv_local-intersection-example (Example H120E10)
4<->Example-local-intersection-example :<->text1360.htm#15012<->Example-local-intersection-example :: Crv_local-intersection-example (Example H120E10)
4<->Crv_crv<->text1360.htm#15013<->Crv_crv:int-nmbrs (Example H120E11)
4<->Example-crv:int-nmbrs :: Crv_crv<->text1360.htm#15013<->Example-crv:int-nmbrs :: Crv_crv:int-nmbrs (Example H120E11)
3<->local-intersection :<->text1360.htm#15007<->local-intersection :: Local Intersection Theory (ALGEBRAIC CURVES)
3<->local-curve :<->text1360.htm<->local-curve :: Local Geometry (ALGEBRAIC CURVES)
3<->global-curvepl :<->text1361.htm<->global-curvepl :: Global Geometry (ALGEBRAIC CURVES)
3<->plane-curvepl :<->text1361.htm#15015<->plane-curvepl :: Genus and Singularities (ALGEBRAIC CURVES)
5<->GeometricGenus :: Genus(C) <->text1361.htm#15016<->GeometricGenus :: Genus(C) : Crv -&gt; RngIntElt
5<->Genus(C) <->text1361.htm#15016<->Genus(C) : Crv -&gt; RngIntElt
5<->ArithmeticGenus(C) <->text1361.htm#15017<->ArithmeticGenus(C) : Crv -&gt; RngIntElt
5<->NumberOfPunctures(C)<->text1361.htm#15018<->NumberOfPunctures(C): CrvPln -&gt; RngIntElt
5<->SingularPoints(C) <->text1361.htm#15019<->SingularPoints(C) : Sch -&gt; SetIndx
5<->HasSingularPointsOverExtension(C) <->text1361.htm#15020<->HasSingularPointsOverExtension(C) : Sch -&gt; BoolElt
5<->InflectionPoints :: Flexes(C) <->text1361.htm#15021<->InflectionPoints :: Flexes(C) : Sch -&gt; Sch
5<->Flexes(C) <->text1361.htm#15021<->Flexes(C) : Sch -&gt; Sch
5<->C eq D <->text1361.htm#15022<->C eq D : Sch,Sch -&gt; BoolElt
5<->IsSubscheme(C,D) <->text1361.htm#15023<->IsSubscheme(C,D) : Sch,Sch -&gt; BoolElt
4<->Crv_crv-genus (Example H120E12)<->text1361.htm#15024<->Crv_crv-genus (Example H120E12)
4<->Example-crv-genus :<->text1361.htm#15024<->Example-crv-genus :: Crv_crv-genus (Example H120E12)
3<->plane-curvepl :<->text1361.htm#15015<->plane-curvepl :: Genus and Singularities (ALGEBRAIC CURVES)
3<->closure-crvpl :<->text1361.htm#15025<->closure-crvpl :: Projective Closure and Affine  Patches (ALGEBRAIC CURVES)
5<->ProjectiveClosure(A)<->text1361.htm#15026<->ProjectiveClosure(A): Sch -&gt; Sch
5<->ProjectiveClosure(C) <->text1361.htm#15027<->ProjectiveClosure(C) : Sch -&gt; Sch
4<->Crv_proj-cl-commutes (Example H120E13)<->text1361.htm#15028<->Crv_proj-cl-commutes (Example H120E13)
4<->Example-proj-cl-commutes :<->text1361.htm#15028<->Example-proj-cl-commutes :: Crv_proj-cl-commutes (Example H120E13)
5<->LineAtInfinity(A) <->text1361.htm#15029<->LineAtInfinity(A) : Aff -&gt; CrvPln
5<->PointsAtInfinity(C) <->text1361.htm#15030<->PointsAtInfinity(C) : Crv -&gt; SetEnum
5<->AffinePatch(C,i) <->text1361.htm#15031<->AffinePatch(C,i) : Crv,RngIntElt -&gt; SeqEnum
4<->Crv_second-affine-patch (Example H120E14)<->text1361.htm#15032<->Crv_second-affine-patch (Example H120E14)
4<->Example-second-affine-patch :<->text1361.htm#15032<->Example-second-affine-patch :: Crv_second-affine-patch (Example H120E14)
3<->closure-crvpl :<->text1361.htm#15025<->closure-crvpl :: Projective Closure and Affine  Patches (ALGEBRAIC CURVES)
3<->global-special :<->text1361.htm#15033<->global-special :: Special Forms of Curves (ALGEBRAIC CURVES)
5<->IsEllipticWeierstrass(C) <->text1361.htm#15034<->IsEllipticWeierstrass(C) : Crv -&gt; BoolElt
5<->IsHyperellipticWeierstrass(C) <->text1361.htm#15035<->IsHyperellipticWeierstrass(C) : Crv -&gt; BoolElt
5<->EllipticCurve(C,p) <->text1361.htm#15036<->EllipticCurve(C,p) : Crv, Pt -> CrvEll, MapSch
5<->EllipticCurve(C,p) <->text1361.htm#15036<->EllipticCurve(C,p) : Crv, PlcCrvElt -> CrvEll, MapSch
5<->EllipticCurve(C) <->text1361.htm#15036<->EllipticCurve(C) : Crv -&gt; CrvEll, MapSch
5<->IsGeometricallyHyperelliptic :: IsHyperelliptic(C) <->text1361.htm#15037<->IsGeometricallyHyperelliptic :: IsHyperelliptic(C) : Crv -&gt; BoolElt, CrvHyp, MapSch
5<->IsHyperelliptic(C) <->text1361.htm#15037<->IsHyperelliptic(C) : Crv -&gt; BoolElt, CrvHyp, MapSch
4<->Crv_is_hyperelliptic (Example H120E15)<->text1361.htm#15038<->Crv_is_hyperelliptic (Example H120E15)
4<->Example-is_hyperelliptic :<->text1361.htm#15038<->Example-is_hyperelliptic :: Crv_is_hyperelliptic (Example H120E15)
3<->global-special :<->text1361.htm#15033<->global-special :: Special Forms of Curves (ALGEBRAIC CURVES)
3<->global-curvepl :<->text1361.htm<->global-curvepl :: Global Geometry (ALGEBRAIC CURVES)
3<->maps-crvpl :<->text1362.htm<->maps-crvpl :: Maps and Curves (ALGEBRAIC CURVES)
3<->basic-maps :<->text1362.htm#15040<->basic-maps :: Elementary Maps (ALGEBRAIC CURVES)
5<->Translation :: IdentityAutomorphism(A) <->text1362.htm#15041<->Translation :: IdentityAutomorphism(A) : Sch -&gt; AutSch
5<->FlipCoordinates :: IdentityAutomorphism(A) <->text1362.htm#15041<->FlipCoordinates :: IdentityAutomorphism(A) : Sch -&gt; AutSch
5<->IdentityAutomorphism(A) <->text1362.htm#15041<->IdentityAutomorphism(A) : Sch -&gt; AutSch
5<->TranslationToInfinity(C,p) <->text1362.htm#15042<->TranslationToInfinity(C,p) : Crv,Pt -&gt; Crv,AutSch
4<->Crv_translation-to-infinity (Example H120E16)<->text1362.htm#15043<->Crv_translation-to-infinity (Example H120E16)
4<->Example-translation-to-infinity :<->text1362.htm#15043<->Example-translation-to-infinity :: Crv_translation-to-infinity (Example H120E16)
5<->EvaluateByPowerSeries(m, P) <->text1362.htm#15044<->EvaluateByPowerSeries(m, P) : MapSch, Pt -&gt; Pt
4<->Crv_maps-point_pow_eval (Example H120E17)<->text1362.htm#15045<->Crv_maps-point_pow_eval (Example H120E17)
4<->Example-maps-point_pow_eval :<->text1362.htm#15045<->Example-maps-point_pow_eval :: Crv_maps-point_pow_eval (Example H120E17)
3<->basic-maps :<->text1362.htm#15040<->basic-maps :: Elementary Maps (ALGEBRAIC CURVES)
3<->maps-crv-push-pull :<->text1362.htm#15046<->maps-crv-push-pull :: Maps Induced by Morphisms (ALGEBRAIC CURVES)
5<->Degree(m) <->text1362.htm#15047<->Degree(m) : MapSch -&gt; RngIntElt
5<->RamificationDivisor(m) <->text1362.htm#15048<->RamificationDivisor(m) : MapSch -&gt; DivCrvElt
5<->Pullback(phi, X) <->text1362.htm#15049<->Pullback(phi, X) : MapSch, DiffCrvElt -> DiffCrvElt
5<->Pullback(phi, X) <->text1362.htm#15049<->Pullback(phi, X) : MapSch, DivCrvElt -> DivCrvElt
5<->Pullback(phi, X) <->text1362.htm#15049<->Pullback(phi, X) : MapSch, PlcCrvElt -> DivCrvElt
5<->Pullback(phi, X) <->text1362.htm#15049<->Pullback(phi, X) : MapSch, FldFunFracSchElt -&gt; FldFunFracSchElt
5<->Pushforward(phi, X) <->text1362.htm#15050<->Pushforward(phi, X) : MapSch, PlcCrvElt -> DivCrvElt
5<->Pushforward(phi, X) <->text1362.htm#15050<->Pushforward(phi, X) : MapSch, DivCrvElt -> DivCrvElt
5<->Pushforward(phi, X) <->text1362.htm#15050<->Pushforward(phi, X) : MapSch, FldFunFracSchElt -&gt; FldFunFracSchElt
4<->Crv_map-push-pull (Example H120E18)<->text1362.htm#15051<->Crv_map-push-pull (Example H120E18)
4<->Example-map-push-pull :<->text1362.htm#15051<->Example-map-push-pull :: Crv_map-push-pull (Example H120E18)
3<->maps-crv-push-pull :<->text1362.htm#15046<->maps-crv-push-pull :: Maps Induced by Morphisms (ALGEBRAIC CURVES)
3<->maps-crvpl :<->text1362.htm<->maps-crvpl :: Maps and Curves (ALGEBRAIC CURVES)
3<->crv_isos :<->text1363.htm<->crv_isos :: Automorphism Groups of  Curves (ALGEBRAIC CURVES)
3<->crv_aut_grp_make :<->text1363.htm#15053<->crv_aut_grp_make :: Group Creation Functions (ALGEBRAIC CURVES)
5<->AutomorphismGroup(C) <->text1363.htm#15054<->AutomorphismGroup(C) : Crv -&gt; GrpAutCrv
5<->AutomorphismGroup(C,auts) <->text1363.htm#15055<->AutomorphismGroup(C,auts) : Crv, SeqEnum -&gt; GrpAutCrv
5<->Automorphisms(C) <->text1363.htm#15056<->Automorphisms(C) : Crv -&gt; SeqEnum
5<->IsIsomorphic(C, D) <->text1363.htm#15057<->IsIsomorphic(C, D) : Crv, Crv -&gt; BoolElt,MapSch
5<->Isomorphisms(C, D) <->text1363.htm#15058<->Isomorphisms(C, D) : Crv, Crv -&gt; SeqEnum
3<->crv_aut_grp_make :<->text1363.htm#15053<->crv_aut_grp_make :: Group Creation Functions (ALGEBRAIC CURVES)
3<->crv_aut_grp_elt_basic :<->text1363.htm#15059<->crv_aut_grp_elt_basic :: Automorphisms (ALGEBRAIC CURVES)
5<->A . i <->text1363.htm#15060<->A . i : GrpAutCrv, RngIntElt -&gt; GrpAutCrvElt
5<->Identity(A) <->text1363.htm#15061<->Identity(A) : GrpAutCrv -&gt; GrpAutCrvElt
5<->! :: Identity(A) <->text1363.htm#15061<->! :: Identity(A) : GrpAutCrv -&gt; GrpAutCrvElt
5<->Identity(A) <->text1363.htm#15061<->Identity(A) : GrpAutCrv -&gt; GrpAutCrvElt
5<->A ! f <->text1363.htm#15062<->A ! f : GrpAutCrv, GrpAutCrvElt -> GrpAutCrvElt
5<->A ! f <->text1363.htm#15062<->A ! f : GrpAutCrv, MapSch -&gt; GrpAutCrvElt
5<->Order(f) <->text1363.htm#15063<->Order(f) : GrpAutCrvElt -&gt; RngIntElt
5<->Inverse(f) <->text1363.htm#15064<->Inverse(f) : GrpAutCrvElt -&gt; GrpAutCrvElt
5<->f * g <->text1363.htm#15065<->f * g : GrpAutCrvElt, GrpAutCrvElt -&gt; GrpAutCrvElt
5<->f ^ n <->text1363.htm#15066<->f ^ n : GrpAutCrvElt, RngIntElt -&gt; GrpAutCrvElt
5<->g eq h <->text1363.htm#15067<->g eq h : GrpAutoElt, GrpAutoElt -&gt; BoolElt
5<->g ne h <->text1363.htm#15068<->g ne h : GrpAutoElt, GrpAutoElt -&gt; BoolElt
5<->SchemeMap(f) <->text1363.htm#15069<->SchemeMap(f) : GrpAutCrvElt -&gt; MapAutSch
3<->crv_aut_grp_elt_basic :<->text1363.htm#15059<->crv_aut_grp_elt_basic :: Automorphisms (ALGEBRAIC CURVES)
3<->crv_aut_grp_basic :<->text1363.htm#15070<->crv_aut_grp_basic :: Automorphism Group Operations (ALGEBRAIC CURVES)
5<->Curve(A) <->text1363.htm#15071<->Curve(A) : GrpAutCrv -&gt; Crv
5<->Order(A) <->text1363.htm#15072<->Order(A) : GrpAutCrv -&gt; RngIntElt
5<->FactoredOrder(A) <->text1363.htm#15073<->FactoredOrder(A) : GrpAutCrv -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->Ngens :: NumberOfGenerators(A) <->text1363.htm#15074<->Ngens :: NumberOfGenerators(A) : GrpAutCrv -&gt; RngIntElt
5<->NumberOfGenerators(A) <->text1363.htm#15074<->NumberOfGenerators(A) : GrpAutCrv -&gt; RngIntElt
5<->Generators(A) <->text1363.htm#15075<->Generators(A) : GrpAutCrv -&gt; SeqEnum
5<->PermutationGroup(A) <->text1363.htm#15076<->PermutationGroup(A) : GrpAutCrv -&gt; GrpPerm
5<->PermutationRepresentation(A) <->text1363.htm#15077<->PermutationRepresentation(A) : GrpAutCrv -&gt; GrpPerm, Map
5<->MatrixRepresentation(A) <->text1363.htm#15078<->MatrixRepresentation(A) : GrpAutCrv -&gt; Grpmat, Map, SeqEnum
5<->phi in A<->text1363.htm#15079<->phi in A: MapSch, GrpAutCrv -> BoolElt
5<->a in A<->text1363.htm#15079<->a in A: GrpAutCrvElt, GrpAutCrv -&gt; BoolElt
5<->A subset B<->text1363.htm#15080<->A subset B: GrpAutCrv, GrpAutCrv -&gt; BoolElt
3<->crv_aut_grp_basic :<->text1363.htm#15070<->crv_aut_grp_basic :: Automorphism Group Operations (ALGEBRAIC CURVES)
3<->crv_aut_grp_elt_pushpull :<->text1363.htm#15081<->crv_aut_grp_elt_pushpull :: Pullbacks and Pushforwards (ALGEBRAIC CURVES)
5<->f(X)<->text1363.htm#15082<->f(X): GrpAutCrvElt, FldFunFracSchElt -> FldFunFracSchElt
5<->f(X)<->text1363.htm#15082<->f(X): GrpAutCrvElt, PlcCrvElt -> PlcCrvElt
5<->f(X)<->text1363.htm#15082<->f(X): GrpAutCrvElt, DivCrvElt -> DivCrvElt
5<->f(X)<->text1363.htm#15082<->f(X): GrpAutCrvElt, DiffCrvElt -> DiffCrvElt
5<->@ :: f(X)<->text1363.htm#15082<->@ :: f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->X @ f: FldFunFracSchElt, GrpAutCrvElt -> FldFunFracSchElt :: f(X)<->text1363.htm#15082<->X @ f: FldFunFracSchElt, GrpAutCrvElt -> FldFunFracSchElt :: f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->X @ f: PlcCrvElt, GrpAutCrvElt -> PlcCrvElt :: f(X)<->text1363.htm#15082<->X @ f: PlcCrvElt, GrpAutCrvElt -> PlcCrvElt :: f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->X @ f: DivCrvElt, GrpAutCrvElt -> DivCrvElt :: f(X)<->text1363.htm#15082<->X @ f: DivCrvElt, GrpAutCrvElt -> DivCrvElt :: f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->X @ f: DiffCrvElt, GrpAutCrvElt -> DiffCrvElt :: f(X)<->text1363.htm#15082<->X @ f: DiffCrvElt, GrpAutCrvElt -> DiffCrvElt :: f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->f(X)<->text1363.htm#15082<->f(X): GrpAutCrvElt, Pt -&gt; Pt
5<->X @@ f<->text1363.htm#15083<->X @@ f: PlcCrvElt, GrpAutCrvElt -> PlcCrvElt
5<->X @@ f<->text1363.htm#15083<->X @@ f: DivCrvElt, GrpAutCrvElt -> DivCrvElt
5<->X @@ f<->text1363.htm#15083<->X @@ f: DiffCrvElt, GrpAutCrvElt -> DiffCrvElt
5<->X @@ f<->text1363.htm#15083<->X @@ f: FldFunFracSchElt, GrpAutCrvElt -&gt; FldFunFracSchElt
4<->Crv_crv_autos (Example H120E19)<->text1363.htm#15084<->Crv_crv_autos (Example H120E19)
4<->Example-crv_autos :<->text1363.htm#15084<->Example-crv_autos :: Crv_crv_autos (Example H120E19)
4<->Crv_crv-iso (Example H120E20)<->text1363.htm#15085<->Crv_crv-iso (Example H120E20)
4<->Example-crv-iso :<->text1363.htm#15085<->Example-crv-iso :: Crv_crv-iso (Example H120E20)
4<->Crv_crv-iso (Example H120E21)<->text1363.htm#15086<->Crv_crv-iso (Example H120E21)
4<->Example-crv-iso :<->text1363.htm#15086<->Example-crv-iso :: Crv_crv-iso (Example H120E21)
3<->crv_aut_grp_elt_pushpull :<->text1363.htm#15081<->crv_aut_grp_elt_pushpull :: Pullbacks and Pushforwards (ALGEBRAIC CURVES)
3<->crv_aut_grp_quotient :<->text1363.htm#15087<->crv_aut_grp_quotient :: Quotients of Curves (ALGEBRAIC CURVES)
5<->CurveQuotient(G)<->text1363.htm#15088<->CurveQuotient(G): GrpAutCrv -&gt; Crv, MapSch
4<->Crv_crv_quots (Example H120E22)<->text1363.htm#15089<->Crv_crv_quots (Example H120E22)
4<->Example-crv_quots :<->text1363.htm#15089<->Example-crv_quots :: Crv_crv_quots (Example H120E22)
4<->Crv_crv_quots (Example H120E23)<->text1363.htm#15090<->Crv_crv_quots (Example H120E23)
4<->Example-crv_quots :<->text1363.htm#15090<->Example-crv_quots :: Crv_crv_quots (Example H120E23)
3<->crv_aut_grp_quotient :<->text1363.htm#15087<->crv_aut_grp_quotient :: Quotients of Curves (ALGEBRAIC CURVES)
3<->crv_isos :<->text1363.htm<->crv_isos :: Automorphism Groups of  Curves (ALGEBRAIC CURVES)
3<->function_field :<->text1364.htm<->function_field :: Function Fields (ALGEBRAIC CURVES)
3<->ff-ff :<->text1364.htm#15092<->ff-ff :: Function Fields (ALGEBRAIC CURVES)
5<->FunctionField(C) <->text1364.htm#15093<->FunctionField(C) : Crv -&gt; FldFunFracSch
5<->Curve(F) <->text1364.htm#15094<->Curve(F) : FldFunFracSch -&gt; Crv
5<->F ! r <->text1364.htm#15095<->F ! r : FldFunFracSch, RngElt -&gt; FldFunFracSchElt
5<->ProjectiveFunction(f) <->text1364.htm#15096<->ProjectiveFunction(f) : FldFunFracSchElt -&gt; RngFunFracElt
4<->Crv_ff-creation-example (Example H120E24)<->text1364.htm#15097<->Crv_ff-creation-example (Example H120E24)
4<->Example-ff-creation-example :<->text1364.htm#15097<->Example-ff-creation-example :: Crv_ff-creation-example (Example H120E24)
5<->p @ f <->text1364.htm#15098<->p @ f : Pt, FldFunFracSchElt -&gt; RngElt
5<->Evaluate :: p @ f <->text1364.htm#15098<->Evaluate :: p @ f : Pt, FldFunFracSchElt -&gt; RngElt
5<->p @ f <->text1364.htm#15098<->p @ f : Pt, FldFunFracSchElt -&gt; RngElt
5<->Expand(f, p) <->text1364.htm#15099<->Expand(f, p) : FldFunFracSchElt[Crv], PlcCrvElt -&gt; RngSerElt, FldFunFracSchElt
5<->Completion(F, p) <->text1364.htm#15100<->Completion(F, p) : FldFunFracSch[Crv], PlcCrvElt -&gt; RngSer, Map
5<->Degree(f) <->text1364.htm#15101<->Degree(f) : FldFunFracSchElt[Crv] -&gt; RngIntElt
5<->Valuation(f, p) <->text1364.htm#15102<->Valuation(f, p) : RngElt, Pt -&gt; RngIntElt
5<->Valuation(p) <->text1364.htm#15103<->Valuation(p) : Pt -&gt; Map
5<->UniformizingParameter(p) <->text1364.htm#15104<->UniformizingParameter(p) : Pt -&gt; FldFunFracSchElt
5<->Module(S) <->text1364.htm#15105<->Module(S) : [FldFunFracSchElt[Crv]] -&gt; Mod, Map, [ModElt]
5<->Relations(S, m) <->text1364.htm#15106<->Relations(S, m) : [FldFunFracSchElt[Crv]], RngIntElt -> ModTupRng
5<->Relations(S) <->text1364.htm#15106<->Relations(S) : [FldFunFracSchElt[Crv]] -&gt; ModTupRng
5<->Genus(C) <->text1364.htm#15107<->Genus(C) : Crv -&gt; RngIntElt
5<->FieldOfGeometricIrreducibility(C) <->text1364.htm#15108<->FieldOfGeometricIrreducibility(C) : Crv -&gt; Rng, Map
5<->IsAbsolutelyIrreducible(C) <->text1364.htm#15109<->IsAbsolutelyIrreducible(C) : Crv -&gt; BoolElt
5<->DimensionOfFieldOfGeometricIrreducibility(C)<->text1364.htm#15110<->DimensionOfFieldOfGeometricIrreducibility(C): Crv -&gt; RngIntElt
4<->Crv_ff-elements-example (Example H120E25)<->text1364.htm#15111<->Crv_ff-elements-example (Example H120E25)
4<->Example-ff-elements-example :<->text1364.htm#15111<->Example-ff-elements-example :: Crv_ff-elements-example (Example H120E25)
5<->GapNumbers(C) <->text1364.htm#15112<->GapNumbers(C) : Crv -&gt; [RngIntElt]
5<->WronskianOrders(C) <->text1364.htm#15113<->WronskianOrders(C) : Crv -&gt; [RngIntElt]
5<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(C, m) <->text1364.htm#15114<->NumberOfPlacesDegECF :: NumberOfPlacesOfDegreeOverExactConstantField(C, m) : Crv[FldFin], RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOverExactConstantField(C, m) <->text1364.htm#15114<->NumberOfPlacesOfDegreeOverExactConstantField(C, m) : Crv[FldFin], RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(C) <->text1364.htm#15115<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(C) : Crv[FldFin] -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantField(C) <->text1364.htm#15115<->NumberOfPlacesOfDegreeOneOverExactConstantField(C) : Crv[FldFin] -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(C, m) <->text1364.htm#15116<->NumberOfPlacesOfDegreeOneECF :: NumberOfPlacesOfDegreeOneOverExactConstantField(C, m) : Crv[FldFin], RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantField(C, m) <->text1364.htm#15116<->NumberOfPlacesOfDegreeOneOverExactConstantField(C, m) : Crv[FldFin], RngIntElt -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound :: NumberOfPlacesOfDegreeOneECFBound(C) <->text1364.htm#15117<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound :: NumberOfPlacesOfDegreeOneECFBound(C) : Crv -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound(C, m) <->text1364.htm#15117<->NumberOfPlacesOfDegreeOneECFBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt
5<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(C) <->text1364.htm#15117<->NumberOfPlacesOfDegreeOneOverExactConstantFieldBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt :: NumberOfPlacesOfDegreeOneECFBound(C) : Crv -&gt; RngIntElt
5<->NumberOfPlacesOfDegreeOneECFBound(C) <->text1364.htm#15117<->NumberOfPlacesOfDegreeOneECFBound(C) : Crv -&gt; RngIntElt
5<->DivisorOfDegreeOne(C) <->text1364.htm#15118<->DivisorOfDegreeOne(C) : Crv[FldFin] -&gt; DivCrvElt
5<->SerreBound(C, m) <->text1364.htm#15119<->SerreBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt
5<->IharaBound :: SerreBound(C) <->text1364.htm#15119<->IharaBound :: SerreBound(C) : Crv[FldFin] -&gt; RngIntElt
5<->IharaBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt :: SerreBound(C) <->text1364.htm#15119<->IharaBound(C, m) : Crv[FldFin], RngIntElt -> RngIntElt :: SerreBound(C) : Crv[FldFin] -&gt; RngIntElt
5<->SerreBound(C) <->text1364.htm#15119<->SerreBound(C) : Crv[FldFin] -&gt; RngIntElt
5<->LPolynomial(C, m) <->text1364.htm#15120<->LPolynomial(C, m) : Crv[FldFin], RngIntElt -> RngUPolElt
5<->ZetaFunction :: LPolynomial(C) <->text1364.htm#15120<->ZetaFunction :: LPolynomial(C) : Crv[FldFin] -&gt; RngUPolElt
5<->ZetaFunction(C, m) : Crv[FldFin], RngIntElt -> FldFunRatUElt :: LPolynomial(C) <->text1364.htm#15120<->ZetaFunction(C, m) : Crv[FldFin], RngIntElt -> FldFunRatUElt :: LPolynomial(C) : Crv[FldFin] -&gt; RngUPolElt
5<->LPolynomial(C) <->text1364.htm#15120<->LPolynomial(C) : Crv[FldFin] -&gt; RngUPolElt
5<->ZetaFunctionOfCurveModel(C) <->text1364.htm#15121<->ZetaFunctionOfCurveModel(C) : Crv[FldFin] -&gt; FldFunRatUElt
4<->Crv_crv-zfn-crv-mod (Example H120E26)<->text1364.htm#15122<->Crv_crv-zfn-crv-mod (Example H120E26)
4<->Example-crv-zfn-crv-mod :<->text1364.htm#15122<->Example-crv-zfn-crv-mod :: Crv_crv-zfn-crv-mod (Example H120E26)
3<->ff-ff :<->text1364.htm#15092<->ff-ff :: Function Fields (ALGEBRAIC CURVES)
3<->representation :<->text1364.htm#15123<->representation :: Representations of the Function  Field (ALGEBRAIC CURVES)
5<->AlgorithmicFunctionField(F) <->text1364.htm#15124<->AlgorithmicFunctionField(F) : FldFunFracSch -&gt; FldFun, Map
5<->CurvePlace :: FunctionFieldPlace(p) <->text1364.htm#15125<->CurvePlace :: FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
5<->FunctionFieldDivisor :: FunctionFieldPlace(p) <->text1364.htm#15125<->FunctionFieldDivisor :: FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
5<->CurveDivisor :: FunctionFieldPlace(p) <->text1364.htm#15125<->CurveDivisor :: FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
5<->FunctionFieldDifferential :: FunctionFieldPlace(p) <->text1364.htm#15125<->FunctionFieldDifferential :: FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
5<->CurveDifferential :: FunctionFieldPlace(p) <->text1364.htm#15125<->CurveDifferential :: FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
5<->FunctionFieldPlace(p) <->text1364.htm#15125<->FunctionFieldPlace(p) : PlcCrvElt -&gt; PlcFunElt
3<->representation :<->text1364.htm#15123<->representation :: Representations of the Function  Field (ALGEBRAIC CURVES)
3<->ff-diff :<->text1364.htm#15126<->ff-diff :: Differentials (ALGEBRAIC CURVES)
3<->ff-diff-space :<->text1364.htm#15127<->ff-diff-space :: Creation of Differentials (ALGEBRAIC CURVES)
5<->DifferentialSpace(C) <->text1364.htm#15128<->DifferentialSpace(C) : Crv -&gt; DiffCrv
5<->SpaceOfHolomorphicDifferentials :: SpaceOfDifferentialsFirstKind(C) <->text1364.htm#15129<->SpaceOfHolomorphicDifferentials :: SpaceOfDifferentialsFirstKind(C) : Crv -&gt; ModFld, Map
5<->SpaceOfDifferentialsFirstKind(C) <->text1364.htm#15129<->SpaceOfDifferentialsFirstKind(C) : Crv -&gt; ModFld, Map
5<->BasisOfHolomorphicDifferentials :: BasisOfDifferentialsFirstKind(C) <->text1364.htm#15130<->BasisOfHolomorphicDifferentials :: BasisOfDifferentialsFirstKind(C) : Crv -&gt; [DiffCrvElt]
5<->BasisOfDifferentialsFirstKind(C) <->text1364.htm#15130<->BasisOfDifferentialsFirstKind(C) : Crv -&gt; [DiffCrvElt]
5<->DifferentialSpace(D) <->text1364.htm#15131<->DifferentialSpace(D) : DivCrvElt -&gt; ModFld,Map
5<->DifferentialBasis(D) <->text1364.htm#15132<->DifferentialBasis(D) : DivCrvElt -&gt; [DiffCrvElt]
5<->Differential(a) <->text1364.htm#15133<->Differential(a) : FldFunFracSchElt -&gt; DiffCrvElt
3<->ff-diff-space :<->text1364.htm#15127<->ff-diff-space :: Creation of Differentials (ALGEBRAIC CURVES)
3<->ff-diff-element-operations :<->text1364.htm#15134<->ff-diff-element-operations :: Operations on Differentials (ALGEBRAIC CURVES)
5<->Identity(S) <->text1364.htm#15135<->Identity(S) : DiffCrv -&gt; DiffCrvElt
5<->Curve(S) <->text1364.htm#15136<->Curve(S) : DiffCrv -&gt; Crv
5<->Curve(a) <->text1364.htm#15137<->Curve(a) : DiffCrvElt -&gt; Crv
5<->S eq T <->text1364.htm#15138<->S eq T : DiffCrv,DiffCrv -&gt; BoolElt
5<->a eq b <->text1364.htm#15139<->a eq b : DiffCrvElt,DiffCrvElt -&gt; BoolElt
5<->a in S <->text1364.htm#15140<->a in S : Any,DiffCrv -&gt; BoolElt
5<->IsExact(a) <->text1364.htm#15141<->IsExact(a) : DiffCrvElt -&gt; BoolElt
5<->IsZero(a) <->text1364.htm#15142<->IsZero(a) : DiffCrvElt -&gt; BoolElt
5<->Valuation(d, P) <->text1364.htm#15143<->Valuation(d, P) : DiffCrvElt, PlcCrvElt -&gt; RngIntElt
5<->Residue(d, P)<->text1364.htm#15144<->Residue(d, P): DiffCrvElt, PlcCrvElt -&gt; RngElt
5<->Divisor(d) <->text1364.htm#15145<->Divisor(d) : DiffCrvElt -&gt; DivCrvElt
5<->Module(L) <->text1364.htm#15146<->Module(L) : [DiffCrvElt] -&gt; Mod, Map, [ ModElt ]
5<->Relations(L, m) <->text1364.htm#15147<->Relations(L, m) : [DiffCrvElt], RngIntElt -> ModTupFld
5<->Relations(L) <->text1364.htm#15147<->Relations(L) : [DiffCrvElt] -&gt; ModTupFld
5<->Cartier(a, r) <->text1364.htm#15148<->Cartier(a, r) : DiffCrvElt,RngIntElt -> DiffCrvElt
5<->Cartier(a) <->text1364.htm#15148<->Cartier(a) : DiffCrvElt -&gt; DiffCrvElt
5<->CartierRepresentation(C, r) <->text1364.htm#15149<->CartierRepresentation(C, r) : Crv, RngIntElt -> AlgMatElt, SeqEnum[DiffCrvElt]
5<->CartierRepresentation(C) <->text1364.htm#15149<->CartierRepresentation(C) : Crv -&gt; AlgMatElt, SeqEnum[DiffCrvElt]
4<->Crv_curve-differentials (Example H120E27)<->text1364.htm#15150<->Crv_curve-differentials (Example H120E27)
4<->Example-curve-differentials :<->text1364.htm#15150<->Example-curve-differentials :: Crv_curve-differentials (Example H120E27)
3<->ff-diff-element-operations :<->text1364.htm#15134<->ff-diff-element-operations :: Operations on Differentials (ALGEBRAIC CURVES)
3<->ff-diff :<->text1364.htm#15126<->ff-diff :: Differentials (ALGEBRAIC CURVES)
3<->function_field :<->text1364.htm<->function_field :: Function Fields (ALGEBRAIC CURVES)
3<->divisor :<->text1365.htm<->divisor :: Divisors (ALGEBRAIC CURVES)
3<->divisors :<->text1365.htm<->divisors :: Divisors (ALGEBRAIC CURVES)
3<->ff-places :<->text1365.htm#15152<->ff-places :: Places (ALGEBRAIC CURVES)
3<->ff-places-sets :<->text1365.htm#15153<->ff-places-sets :: Sets of Places (ALGEBRAIC CURVES)
5<->Places(C) <->text1365.htm#15154<->Places(C) : Crv -&gt; PlcCrv
5<->Curve(P) <->text1365.htm#15155<->Curve(P) : PlcCrv -&gt; Crv
5<->ne :: P eq Q <->text1365.htm#15156<->ne :: P eq Q : PlcCrv, PlcCrv -&gt; BoolElt
5<->P eq Q <->text1365.htm#15156<->P eq Q : PlcCrv, PlcCrv -&gt; BoolElt
3<->ff-places-sets :<->text1365.htm#15153<->ff-places-sets :: Sets of Places (ALGEBRAIC CURVES)
3<->ff-places-sets :<->text1365.htm#15157<->ff-places-sets :: Places (ALGEBRAIC CURVES)
5<->Places(C, m) <->text1365.htm#15158<->Places(C, m) : Crv[FldFin], RngIntElt -&gt; SeqEnum
5<->RandomPlace :: HasPlace(C, m) <->text1365.htm#15159<->RandomPlace :: HasPlace(C, m) : Crv[FldFin], RngIntElt -&gt; BoolElt,PlcCrvElt
5<->HasPlace(C, m) <->text1365.htm#15159<->HasPlace(C, m) : Crv[FldFin], RngIntElt -&gt; BoolElt,PlcCrvElt
5<->Place(p) <->text1365.htm#15160<->Place(p) : Pt -&gt; PlcCrvElt
5<->Places(p) <->text1365.htm#15161<->Places(p) : Pt -&gt; SeqEnum
5<->Place(C, I) <->text1365.htm#15162<->Place(C, I) : Crv, RngMPol -&gt; PlcCrvElt
5<->WeierstrassPlaces(C) <->text1365.htm#15163<->WeierstrassPlaces(C) : Crv -&gt; [PlcCrvElt]
5<->Place(Q) <->text1365.htm#15164<->Place(Q) : [FldFunFracSchElt] -&gt; PlcCrvElt
5<->Ideal(P) <->text1365.htm#15165<->Ideal(P) : PlcCrvElt -&gt; RngMPol
5<->TwoGenerators(P) <->text1365.htm#15166<->TwoGenerators(P) : PlcCrvElt -&gt; FldFunFracSchElt, FldFunFracSchElt
4<->Crv_place-equations (Example H120E28)<->text1365.htm#15167<->Crv_place-equations (Example H120E28)
4<->Example-place-equations :<->text1365.htm#15167<->Example-place-equations :: Crv_place-equations (Example H120E28)
5<->Poles :: Zeros(f) <->text1365.htm#15168<->Poles :: Zeros(f) : FldFunFracSchElt[Crv] -&gt; SeqEnum[PlcCrvElt]
5<->Zeros(f) <->text1365.htm#15168<->Zeros(f) : FldFunFracSchElt[Crv] -&gt; SeqEnum[PlcCrvElt]
5<->Poles :: Zeros(C, f) <->text1365.htm#15169<->Poles :: Zeros(C, f) : Crv, RngElt -&gt; [PlcCrvElt]
5<->Zeros(C, f) <->text1365.htm#15169<->Zeros(C, f) : Crv, RngElt -&gt; [PlcCrvElt]
5<->CommonZeros(C, L) <->text1365.htm#15170<->CommonZeros(C, L) : Crv, [FldFunFracSchElt] -> [PlcCrvElt]
5<->CommonZeros(L) <->text1365.htm#15170<->CommonZeros(L) : [FldFunFracSchElt[Crv]] -&gt; [PlcCrvElt]
4<->Crv_zeros-and-poles (Example H120E29)<->text1365.htm#15171<->Crv_zeros-and-poles (Example H120E29)
4<->Example-zeros-and-poles :<->text1365.htm#15171<->Example-zeros-and-poles :: Crv_zeros-and-poles (Example H120E29)
5<->Curve(P) <->text1365.htm#15172<->Curve(P) : PlcCrvElt -&gt; Crv
5<->RepresentativePoint(P) <->text1365.htm#15173<->RepresentativePoint(P) : PlcCrv -&gt; Pt
5<->ne :: P eq Q <->text1365.htm#15174<->ne :: P eq Q : PlcCrvElt, PlcCrvElt -&gt; BoolElt
5<->P eq Q <->text1365.htm#15174<->P eq Q : PlcCrvElt, PlcCrvElt -&gt; BoolElt
5<->Valuation(f, P) <->text1365.htm#15175<->Valuation(f, P) : RngElt, PlcCrvElt -&gt; RngIntElt
5<->Valuation(P) <->text1365.htm#15176<->Valuation(P) : PlcCrvElt -&gt; Map
5<->Valuation(a, P) <->text1365.htm#15177<->Valuation(a, P) : DiffCrvElt, PlcCrvElt -&gt; RngIntElt
5<->Residue(a, P) <->text1365.htm#15178<->Residue(a, P) : DiffCrvElt, PlcCrvElt -&gt; RngElt
5<->UniformizingParameter(P) <->text1365.htm#15179<->UniformizingParameter(P) : PlcCrvElt -&gt; FldFunFracSchElt
5<->IsWeierstrassPlace(D, P) <->text1365.htm#15180<->IsWeierstrassPlace(D, P) : DivCrvElt, PlcCrvElt -> BoolElt
5<->IsWeierstrassPlace(P) <->text1365.htm#15180<->IsWeierstrassPlace(P) : PlcCrvElt -&gt; BoolElt
5<->ResidueClassField(P) <->text1365.htm#15181<->ResidueClassField(P) : PlcCrvElt -&gt; Rng
5<->Evaluate(a, P) <->text1365.htm#15182<->Evaluate(a, P) : FldFunFracSchElt, PlcCrvElt -&gt; RngElt
5<->Lift(i, P) <->text1365.htm#15183<->Lift(i, P) : Infty, PlcCrvElt -> FldFunFracSchElt
5<->Lift(a, P) <->text1365.htm#15183<->Lift(a, P) : RngElt, PlcCrvElt -&gt; FldFunFracSchElt
5<->Degree(P) <->text1365.htm#15184<->Degree(P) : PlcCrvElt -&gt; RngIntElt
5<->GapNumbers(P) <->text1365.htm#15185<->GapNumbers(P) : PlcCrvElt -> [RngIntElt]
5<->GapNumbers(C, P) <->text1365.htm#15185<->GapNumbers(C, P) : Crv, PlcCrvElt -&gt; [RngIntElt]
5<->Parametrization(C, p) <->text1365.htm#15186<->Parametrization(C, p) : Crv, PlcCrvElt -> MapSch
5<->Parametrization(C, p, P) <->text1365.htm#15186<->Parametrization(C, p, P) : Crv, PlcCrvElt, Crv -> MapSch
5<->Parametrization(C, p) <->text1365.htm#15186<->Parametrization(C, p) : Crv, Pt -&gt; MapSch
3<->ff-places-sets :<->text1365.htm#15157<->ff-places-sets :: Places (ALGEBRAIC CURVES)
3<->ff-places :<->text1365.htm#15152<->ff-places :: Places (ALGEBRAIC CURVES)
3<->divisor-group :<->text1365.htm#15187<->divisor-group :: Divisor Group (ALGEBRAIC CURVES)
5<->DivisorGroup(C) <->text1365.htm#15188<->DivisorGroup(C) : Crv -&gt; DivCrv
5<->Curve(Div) <->text1365.htm#15189<->Curve(Div) : DivCrv -&gt; Crv
5<->ne :: Div1 eq Div2 <->text1365.htm#15190<->ne :: Div1 eq Div2 : DivCrv, DivCrv -&gt; BoolElt
5<->Div1 eq Div2 <->text1365.htm#15190<->Div1 eq Div2 : DivCrv, DivCrv -&gt; BoolElt
3<->divisor-group :<->text1365.htm#15187<->divisor-group :: Divisor Group (ALGEBRAIC CURVES)
3<->divisor-creation :<->text1365.htm#15191<->divisor-creation :: Creation of Divisors (ALGEBRAIC CURVES)
5<->DivisorGroup(D) <->text1365.htm#15192<->DivisorGroup(D) : DivCrvElt -&gt; DivCrv
5<->Curve(D) <->text1365.htm#15193<->Curve(D) : DivCrvElt -&gt; Crv
5<->Identity(D) <->text1365.htm#15194<->Identity(D) : DivCrv -&gt; DivCrvElt
5<->! :: Identity(D) <->text1365.htm#15194<->! :: Identity(D) : DivCrv -&gt; DivCrvElt
5<->Identity(D) <->text1365.htm#15194<->Identity(D) : DivCrv -&gt; DivCrvElt
5<->Div ! p <->text1365.htm#15195<->Div ! p : DivCrv, Pt -> DivCrvElt
5<->Divisor :: Div ! p <->text1365.htm#15195<->Divisor :: Div ! p : DivCrv, PlcCrvElt -&gt; DivCrvElt
5<->Divisor(p) : Pt -> DivCrvElt :: Div ! p <->text1365.htm#15195<->Divisor(p) : Pt -> DivCrvElt :: Div ! p : DivCrv, PlcCrvElt -&gt; DivCrvElt
5<->Div ! p <->text1365.htm#15195<->Div ! p : DivCrv, PlcCrvElt -&gt; DivCrvElt
5<->Divisor(C, S) <->text1365.htm#15196<->Divisor(C, S) : Crv, SeqEnum -> DivCrvElt
5<->Divisor(S) <->text1365.htm#15196<->Divisor(S) : [<PlcCrvElt, RngIntElt>] -> DivCrvElt
5<->Divisor(D, S) <->text1365.htm#15196<->Divisor(D, S) : DivCrv, SeqEnum -&gt; DivCrvElt
4<->Crv_divisor-equations (Example H120E30)<->text1365.htm#15197<->Crv_divisor-equations (Example H120E30)
4<->Example-divisor-equations :<->text1365.htm#15197<->Example-divisor-equations :: Crv_divisor-equations (Example H120E30)
5<->PrincipalDivisor(D, f) <->text1365.htm#15198<->PrincipalDivisor(D, f) : DivCrv, RngElt -> DivCrvElt
5<->PrincipalDivisor(f) <->text1365.htm#15198<->PrincipalDivisor(f) : FldFunFracSchElt[Crv] -> DivCrvElt
5<->PrincipalDivisor(C, f) <->text1365.htm#15198<->PrincipalDivisor(C, f) : Crv, RngElt -&gt; DivCrvElt
5<->Divisor(D, f) <->text1365.htm#15198<->Divisor(D, f) : DivCrv, RngElt -> DivCrvElt
5<->Divisor(f) <->text1365.htm#15198<->Divisor(f) : FldFunFracSchElt[Crv] -> DivCrvElt
5<->PrincipalDivisor(C, f) <->text1365.htm#15198<->PrincipalDivisor(C, f) : Crv, RngElt -&gt; DivCrvElt
5<->Divisor(a) <->text1365.htm#15199<->Divisor(a) : DiffCrvElt -&gt; DivCrvElt
5<->Divisor(D, X) <->text1365.htm#15200<->Divisor(D, X) : DivCrv, Sch -> DivCrvElt
5<->Divisor(C, X) <->text1365.htm#15200<->Divisor(C, X) : Crv, Sch -&gt; DivCrvElt
5<->Divisor(D, p, q) <->text1365.htm#15201<->Divisor(D, p, q) : DivCrv, Pt, Pt -> DivCrvElt
5<->Divisor(C, p, q) <->text1365.htm#15201<->Divisor(C, p, q) : Crv,Pt,Pt -&gt; DivCrvElt
5<->Divisor(D, I) <->text1365.htm#15202<->Divisor(D, I) : DivCrv, RngMPol -> DivCrvElt
5<->Divisor(C, I) <->text1365.htm#15202<->Divisor(C, I) : Crv, RngMPol -&gt; DivCrvElt
5<->Decomposition(D) <->text1365.htm#15203<->Decomposition(D) : DivCrvElt -&gt; SeqEnum
5<->Support(D) <->text1365.htm#15204<->Support(D) : DivCrvElt -&gt; SeqEnum, SeqEnum
4<->Crv_divisor1 (Example H120E31)<->text1365.htm#15205<->Crv_divisor1 (Example H120E31)
4<->Example-divisor1 :<->text1365.htm#15205<->Example-divisor1 :: Crv_divisor1 (Example H120E31)
5<->CanonicalDivisor(C) <->text1365.htm#15206<->CanonicalDivisor(C) : Crv -&gt; DivCrvElt
5<->RamificationDivisor(C) <->text1365.htm#15207<->RamificationDivisor(C) : Crv -&gt; DivCrvElt
3<->divisor-creation :<->text1365.htm#15191<->divisor-creation :: Creation of Divisors (ALGEBRAIC CURVES)
3<->divisor-arithmetic :<->text1365.htm#15208<->divisor-arithmetic :: Arithmetic of Divisors (ALGEBRAIC CURVES)
5<->Quotrem(D, n) <->text1365.htm#15209<->Quotrem(D, n) : DivCrvElt, RngIntElt -&gt; DivCrvElt, DivCrvElt
5<->Degree(D) <->text1365.htm#15210<->Degree(D) : DivCrvElt -&gt; RngIntElt
5<->IsPositive :: IsEffective(D) <->text1365.htm#15211<->IsPositive :: IsEffective(D) : DivCrvElt -&gt; BoolElt
5<->IsEffective(D) <->text1365.htm#15211<->IsEffective(D) : DivCrvElt -&gt; BoolElt
5<->Denominator :: Numerator(D) <->text1365.htm#15212<->Denominator :: Numerator(D) : DivCrvElt -&gt; DivCrvElt
5<->Numerator(D) <->text1365.htm#15212<->Numerator(D) : DivCrvElt -&gt; DivCrvElt
5<->SignDecomposition(D) <->text1365.htm#15213<->SignDecomposition(D) : DivCrvElt -&gt; DivElt,DivElt
4<->Crv_divisor2 (Example H120E32)<->text1365.htm#15214<->Crv_divisor2 (Example H120E32)
4<->Example-divisor2 :<->text1365.htm#15214<->Example-divisor2 :: Crv_divisor2 (Example H120E32)
5<->ne :: D eq E <->text1365.htm#15215<->ne :: D eq E : DivCrvElt, DivCrvElt -&gt; BoolElt
5<->D eq E <->text1365.htm#15215<->D eq E : DivCrvElt, DivCrvElt -&gt; BoolElt
5<->AreLinearlyEquivalent(D,E) <->text1365.htm#15216<->AreLinearlyEquivalent(D,E) : DivCrvElt, DivCrvElt -&gt; BoolElt
5<->IsZero(D) <->text1365.htm#15217<->IsZero(D) : DivCrvElt -&gt; BoolElt
5<->IsCanonical(D) <->text1365.htm#15218<->IsCanonical(D) : DivCrvElt -&gt; BoolElt, DiffCrvElt
5<->Gcd :: GCD(D1, D2) <->text1365.htm#15219<->Gcd :: GCD(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
5<->GreatestCommonDivisor :: GCD(D1, D2) <->text1365.htm#15219<->GreatestCommonDivisor :: GCD(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
5<->GCD(D1, D2) <->text1365.htm#15219<->GCD(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
5<->Lcm :: LCM(D1, D2) <->text1365.htm#15220<->Lcm :: LCM(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
5<->LeastCommonMultiple :: LCM(D1, D2) <->text1365.htm#15220<->LeastCommonMultiple :: LCM(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
5<->LCM(D1, D2) <->text1365.htm#15220<->LCM(D1, D2) : DivCrvElt, DivCrvElt -&gt; DivCrvElt
4<->Crv_canonical_divisor (Example H120E33)<->text1365.htm#15221<->Crv_canonical_divisor (Example H120E33)
4<->Example-canonical_divisor :<->text1365.htm#15221<->Example-canonical_divisor :: Crv_canonical_divisor (Example H120E33)
3<->divisor-arithmetic :<->text1365.htm#15208<->divisor-arithmetic :: Arithmetic of Divisors (ALGEBRAIC CURVES)
3<->divisor-other :<->text1365.htm#15222<->divisor-other :: Other Operations on Divisors (ALGEBRAIC CURVES)
5<->Ideal(D) <->text1365.htm#15223<->Ideal(D) : DivCrvElt -&gt; RngMPol
5<->Cluster(D) <->text1365.htm#15224<->Cluster(D) : DivCrvElt -&gt; Clstr
5<->Valuation(D,P) <->text1365.htm#15225<->Valuation(D,P) : DivCrvElt, PlcCrvElt -> DivCrvElt
5<->Valuation(D,p) <->text1365.htm#15225<->Valuation(D,p) : DivCrvElt, Pt -&gt; DivCrvElt
5<->ComplementaryDivisor(D,P) <->text1365.htm#15226<->ComplementaryDivisor(D,P) : DivCrvElt,PlcCrvElt -> DivCrvElt
5<->ComplementaryDivisor(D,p) <->text1365.htm#15226<->ComplementaryDivisor(D,p) : DivCrvElt,Pt -&gt; DivCrvElt
3<->divisor-other :<->text1365.htm#15222<->divisor-other :: Other Operations on Divisors (ALGEBRAIC CURVES)
3<->divisors :<->text1365.htm<->divisors :: Divisors (ALGEBRAIC CURVES)
3<->linear-equivalence :<->text1366.htm<->linear-equivalence :: Linear Equivalence of Divisors (ALGEBRAIC CURVES)
3<->class-group :<->text1366.htm#15228<->class-group :: Linear Equivalence and Class  Group (ALGEBRAIC CURVES)
5<->IsPrincipal(D) <->text1366.htm#15229<->IsPrincipal(D) : DivCrvElt -&gt; BoolElt, FldFunFracSchElt
5<->IsLinearlyEquivalent(D1,D2) <->text1366.htm#15230<->IsLinearlyEquivalent(D1,D2) : DivCrvElt,DivCrvElt -&gt; BoolElt
5<->IsHypersurfaceDivisor(D) <->text1366.htm#15231<->IsHypersurfaceDivisor(D) : DivCrvElt -&gt;  BoolElt, RngElt, RngIntElt
4<->Crv_is-hyper-surface-divisor-example (Example H120E34)<->text1366.htm#15232<->Crv_is-hyper-surface-divisor-example (Example H120E34)
4<->Example-is-hyper-surface-divisor-example :<->text1366.htm#15232<->Example-is-hyper-surface-divisor-example :: Crv_is-hyper-surface-divisor-example (Example H120E34)
5<->ClassGroup(C) <->text1366.htm#15233<->ClassGroup(C) : Crv[FldFin] -&gt; GrpAb, Map, Map
5<->ClassNumber(C) <->text1366.htm#15234<->ClassNumber(C) : Crv[FldFin] -&gt; RngIntElt
5<->GlobalUnitGroup(C) <->text1366.htm#15235<->GlobalUnitGroup(C) : Crv[FldFin] -&gt; GrpAb, Map
4<->Crv_divisor-class-group-example (Example H120E35)<->text1366.htm#15236<->Crv_divisor-class-group-example (Example H120E35)
4<->Example-divisor-class-group-example :<->text1366.htm#15236<->Example-divisor-class-group-example :: Crv_divisor-class-group-example (Example H120E35)
5<->ClassGroupAbelianInvariants(C) <->text1366.htm#15237<->ClassGroupAbelianInvariants(C) : Crv[FldFin] -&gt; [RngIntElt]
5<->ClassGroupPRank(C) <->text1366.htm#15238<->ClassGroupPRank(C) : Crv[FldFin] -&gt; RngIntElt
5<->HasseWittInvariant(C) <->text1366.htm#15239<->HasseWittInvariant(C) : Crv[FldFin] -&gt; RngIntElt
3<->class-group :<->text1366.htm#15228<->class-group :: Linear Equivalence and Class  Group (ALGEBRAIC CURVES)
3<->riemann-roch :<->text1366.htm#15240<->riemann-roch :: Riemann--Roch Spaces (ALGEBRAIC CURVES)
5<->Reduction(D, A) <->text1366.htm#15241<->Reduction(D, A) : DivCrvElt, DivCrvElt -> DivCrvElt, RngIntElt, DivCrvElt, FldFunFracSchElt
5<->Reduction(D) <->text1366.htm#15241<->Reduction(D) : DivCrvElt -&gt; DivCrvElt, RngIntElt, DivCrvElt, FldFunFracSchElt
5<->RiemannRochSpace(D) <->text1366.htm#15242<->RiemannRochSpace(D) : DivCrvElt -&gt; ModFld,Map
5<->Basis(D) <->text1366.htm#15243<->Basis(D) : DivCrvElt -&gt; SeqEnum
5<->ShortBasis(D) <->text1366.htm#15244<->ShortBasis(D) : DivCrvElt -&gt; SeqEnum
5<->Dimension(D) <->text1366.htm#15245<->Dimension(D) : DivCrvElt -&gt; RngIntElt
5<->DifferentialSpace(D) <->text1366.htm#15246<->DifferentialSpace(D) : DivCrvElt -&gt; ModFld, Map
5<->DifferentialBasis(D) <->text1366.htm#15247<->DifferentialBasis(D) : DivCrvElt -&gt; SeqEnum
5<->IndexOfSpeciality(D) <->text1366.htm#15248<->IndexOfSpeciality(D) : DivCrvElt -&gt; RngIntElt
5<->IsSpecial(D) <->text1366.htm#15249<->IsSpecial(D) : DivCrvElt -&gt; BoolElt
5<->GapNumbers(D,p) <->text1366.htm#15250<->GapNumbers(D,p) : DivCrvElt,PlcCrvElt -> SeqEnum
5<->GapNumbers(D) <->text1366.htm#15250<->GapNumbers(D) : DivCrvElt -&gt; SeqEnum
5<->GapNumbers(p) <->text1366.htm#15251<->GapNumbers(p) : Pt -&gt; SeqEnum
5<->WeierstrassPoints :: WeierstrassPlaces(D) <->text1366.htm#15252<->WeierstrassPoints :: WeierstrassPlaces(D) : DivCrvElt -&gt; SeqEnum
5<->WeierstrassPlaces(D) <->text1366.htm#15252<->WeierstrassPlaces(D) : DivCrvElt -&gt; SeqEnum
5<->WronskianOrders(D) <->text1366.htm#15253<->WronskianOrders(D) : DivCrvElt -&gt; SeqEnum
5<->RamificationDivisor(D) <->text1366.htm#15254<->RamificationDivisor(D) : DivCrvElt -&gt; DivCrvElt
5<->DivisorMap(D,P) <->text1366.htm#15255<->DivisorMap(D,P) : DivCrvElt,Prj -> MapSch
5<->DivisorMap(D) <->text1366.htm#15255<->DivisorMap(D) : DivCrvElt -&gt; MapSch
5<->CanonicalMap(C,P) <->text1366.htm#15256<->CanonicalMap(C,P) : Crv,Prj -> MapSch
5<->CanonicalMap(C) <->text1366.htm#15256<->CanonicalMap(C) : Crv -&gt; MapSch
5<->CanonicalImage(C, eqns) <->text1366.htm#15257<->CanonicalImage(C, eqns) : Crv, SeqEnum -> Crv, BoolElt
5<->CanonicalImage(C, phi) <->text1366.htm#15257<->CanonicalImage(C, phi) : Crv, MapSch -&gt; Crv, BoolElt
4<->Crv_canonical-map (Example H120E36)<->text1366.htm#15258<->Crv_canonical-map (Example H120E36)
4<->Example-canonical-map :<->text1366.htm#15258<->Example-canonical-map :: Crv_canonical-map (Example H120E36)
3<->riemann-roch :<->text1366.htm#15240<->riemann-roch :: Riemann--Roch Spaces (ALGEBRAIC CURVES)
3<->indexcal :<->text1366.htm#15259<->indexcal :: Index Calculus (ALGEBRAIC CURVES)
5<->IndexCalculus(D1, D2, D0, np, n, rr) <->text1366.htm#15260<->IndexCalculus(D1, D2, D0, np, n, rr) : DivCrvElt, DivCrvElt, DivCrvElt, RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->IndexCalculus(D1, D2, D0, np) <->text1366.htm#15260<->IndexCalculus(D1, D2, D0, np) : DivCrvElt, DivCrvElt, DivCrvElt, RngIntElt -&gt; RngIntElt
5<->IndexCalculusMatrix(D1, D2, D0, n, rr) <->text1366.htm#15261<->IndexCalculusMatrix(D1, D2, D0, n, rr) : DivCrvElt, DivCrvElt, DivCrvElt, RngIntElt, RngIntElt -&gt;  MtrxSprs, SeqEnum, SeqEnum, DivCrvElt, DivCrvElt, RngIntElt, RngIntElt
5<->MultiplyDivisor(n, D , D0) <->text1366.htm#15262<->MultiplyDivisor(n, D , D0) : RngIntElt, DivCrvElt, DivCrvElt -&gt; DivCrvElt
4<->Crv_indexcalculus (Example H120E37)<->text1366.htm#15263<->Crv_indexcalculus (Example H120E37)
4<->Example-indexcalculus :<->text1366.htm#15263<->Example-indexcalculus :: Crv_indexcalculus (Example H120E37)
3<->indexcal :<->text1366.htm#15259<->indexcal :: Index Calculus (ALGEBRAIC CURVES)
3<->linear-equivalence :<->text1366.htm<->linear-equivalence :: Linear Equivalence of Divisors (ALGEBRAIC CURVES)
3<->examples2 :<->text1367.htm<->examples2 :: Advanced Examples (ALGEBRAIC CURVES)
3<->examples2-trigonal :<->text1367.htm#15265<->examples2-trigonal :: Trigonal Curves (ALGEBRAIC CURVES)
4<->Crv_trigonal-curve (Example H120E38)<->text1367.htm#15266<->Crv_trigonal-curve (Example H120E38)
4<->Example-trigonal-curve :<->text1367.htm#15266<->Example-trigonal-curve :: Crv_trigonal-curve (Example H120E38)
3<->examples2-trigonal :<->text1367.htm#15265<->examples2-trigonal :: Trigonal Curves (ALGEBRAIC CURVES)
3<->examples2-codes :<->text1367.htm#15267<->examples2-codes :: Algebraic Geometric Codes (ALGEBRAIC CURVES)
4<->Crv_klein-quartic-code (Example H120E39)<->text1367.htm#15268<->Crv_klein-quartic-code (Example H120E39)
4<->Example-klein-quartic-code :<->text1367.htm#15268<->Example-klein-quartic-code :: Crv_klein-quartic-code (Example H120E39)
3<->examples2-codes :<->text1367.htm#15267<->examples2-codes :: Algebraic Geometric Codes (ALGEBRAIC CURVES)
3<->examples2 :<->text1367.htm<->examples2 :: Advanced Examples (ALGEBRAIC CURVES)
3<->arith :<->text1368.htm<->arith :: Curves over Global Fields (ALGEBRAIC CURVES)
3<->rational-points :<->text1368.htm#15270<->rational-points :: Finding Rational Points (ALGEBRAIC CURVES)
5<->PointsCubicModel(C, B : parameters) <->text1368.htm#15271<->PointsCubicModel(C, B : parameters) : Crv, RngIntElt -&gt; SeqEnum
4<->Crv_points-cubic-model (Example H120E40)<->text1368.htm#15272<->Crv_points-cubic-model (Example H120E40)
4<->Example-points-cubic-model :<->text1368.htm#15272<->Example-points-cubic-model :: Crv_points-cubic-model (Example H120E40)
3<->rational-points :<->text1368.htm#15270<->rational-points :: Finding Rational Points (ALGEBRAIC CURVES)
3<->regular-models :<->text1368.htm#15273<->regular-models :: Regular Models of Arithmetic Surfaces (ALGEBRAIC CURVES)
3<->creation-regular-models :<->text1368.htm#15274<->creation-regular-models :: Creation of Regular Models (ALGEBRAIC CURVES)
5<->RegularModel(C, P) <->text1368.htm#15275<->RegularModel(C, P) : Crv, Any -&gt; CrvRegModel
3<->creation-regular-models :<->text1368.htm#15274<->creation-regular-models :: Creation of Regular Models (ALGEBRAIC CURVES)
3<->using-regular-models :<->text1368.htm#15276<->using-regular-models :: Using Regular Models (ALGEBRAIC CURVES)
5<->IntersectionMatrix(M) <->text1368.htm#15277<->IntersectionMatrix(M) : CrvRegModel -&gt; Mtrx, SeqEnum
5<->ComponentGroup(M) <->text1368.htm#15278<->ComponentGroup(M) : CrvRegModel -&gt; GrpAb
5<->PointOnRegularModel(M, x) <->text1368.htm#15279<->PointOnRegularModel(M, x) : CrvRegModel, Pt -&gt; SeqEnum, SeqEnum, Tup
3<->using-regular-models :<->text1368.htm#15276<->using-regular-models :: Using Regular Models (ALGEBRAIC CURVES)
3<->regular-models :<->text1368.htm#15273<->regular-models :: Regular Models of Arithmetic Surfaces (ALGEBRAIC CURVES)
3<->min_red_curves :<->text1368.htm#15280<->min_red_curves :: Minimization and Reduction (ALGEBRAIC CURVES)
5<->ReduceCluster(X) <->text1368.htm#15281<->ReduceCluster(X) : SeqEnum -&gt; SeqEnum, Mtrx, Mtrx
5<->ReducePlaneCurve(f) <->text1368.htm#15282<->ReducePlaneCurve(f) : MPolElt -&gt; RngMPolElt, Mtrx
3<->minredplane :<->text1368.htm#15283<->minredplane :: Minimization and Reduction for Plane Quartics (ALGEBRAIC CURVES)
5<->MinimizePlaneQuartic(f,p) <->text1368.htm#15284<->MinimizePlaneQuartic(f,p) : MPolElt, RngIntElt -&gt; RngMPolElt, Mtrx
5<->MinimizeReducePlaneQuartic(f) <->text1368.htm#15285<->MinimizeReducePlaneQuartic(f) : MPolElt -&gt; RngMPolElt, Mtrx
4<->Crv_minredplanequartic (Example H120E41)<->text1368.htm#15286<->Crv_minredplanequartic (Example H120E41)
4<->Example-minredplanequartic :<->text1368.htm#15286<->Example-minredplanequartic :: Crv_minredplanequartic (Example H120E41)
3<->minredplane :<->text1368.htm#15283<->minredplane :: Minimization and Reduction for Plane Quartics (ALGEBRAIC CURVES)
3<->min_red_curves :<->text1368.htm#15280<->min_red_curves :: Minimization and Reduction (ALGEBRAIC CURVES)
3<->arith :<->text1368.htm<->arith :: Curves over Global Fields (ALGEBRAIC CURVES)
3<->arith :<->text1369.htm<->arith :: Minimal Degree Functions and Plane Models (ALGEBRAIC CURVES)
3<->gonal-general :<->text1369.htm#15288<->gonal-general :: General Functions and Clifford Index One (ALGEBRAIC CURVES)
5<->GenusAndCanonicalMap(C) <->text1369.htm#15289<->GenusAndCanonicalMap(C) : Crv -&gt; RngIntElt, BoolElt, MapSch
5<->CliffordIndexOne(C,X) <->text1369.htm#15290<->CliffordIndexOne(C,X) : Crv,Sch -> MapSch
5<->CliffordIndexOne(C) <->text1369.htm#15290<->CliffordIndexOne(C) : Crv -&gt; MapSch
4<->Crv_gon-gen-ex (Example H120E42)<->text1369.htm#15291<->Crv_gon-gen-ex (Example H120E42)
4<->Example-gon-gen-ex :<->text1369.htm#15291<->Example-gon-gen-ex :: Crv_gon-gen-ex (Example H120E42)
3<->gonal-general :<->text1369.htm#15288<->gonal-general :: General Functions and Clifford Index One (ALGEBRAIC CURVES)
3<->gonal-maps :<->text1369.htm#15292<->gonal-maps :: Small Genus Functions (ALGEBRAIC CURVES)
5<->Genus2GonalMap(C) <->text1369.htm#15293<->Genus2GonalMap(C) : Crv -&gt; MapSch
5<->Genus3GonalMap(C) <->text1369.htm#15294<->Genus3GonalMap(C) : Crv -&gt; RngIntElt, MapSch
5<->Genus4GonalMap(C) <->text1369.htm#15295<->Genus4GonalMap(C) : Crv -&gt; RngIntElt, MapSch
5<->Genus5GonalMap(C) <->text1369.htm#15296<->Genus5GonalMap(C) : Crv -&gt; RngIntElt, MapSch, Crv, UserProgram
5<->Genus6GonalMap(C) <->text1369.htm#15297<->Genus6GonalMap(C) : Crv -&gt; RngIntElt, RngIntElt, MapSch, MapSch
4<->Crv_gon-sm-gen-ex (Example H120E43)<->text1369.htm#15298<->Crv_gon-sm-gen-ex (Example H120E43)
4<->Example-gon-sm-gen-ex :<->text1369.htm#15298<->Example-gon-sm-gen-ex :: Crv_gon-sm-gen-ex (Example H120E43)
3<->gonal-maps :<->text1369.htm#15292<->gonal-maps :: Small Genus Functions (ALGEBRAIC CURVES)
3<->gonal-plane-models :<->text1369.htm#15299<->gonal-plane-models :: Small Genus Plane Models (ALGEBRAIC CURVES)
5<->Genus6PlaneCurveModel(C) <->text1369.htm#15300<->Genus6PlaneCurveModel(C) : Crv -&gt; BoolElt, MapSch
5<->Genus5PlaneCurveModel(C,P) <->text1369.htm#15301<->Genus5PlaneCurveModel(C,P) : Crv, Pt -> BoolElt, MapSch
5<->Genus5PlaneCurveModel(C,Z) <->text1369.htm#15301<->Genus5PlaneCurveModel(C,Z) : Crv, Sch -> BoolElt, MapSch
5<->Genus5PlaneCurveModel(C) <->text1369.htm#15301<->Genus5PlaneCurveModel(C) : Crv -&gt; BoolElt, MapSch
4<->Crv_gon-pln_mod-ex (Example H120E44)<->text1369.htm#15302<->Crv_gon-pln_mod-ex (Example H120E44)
4<->Example-gon-pln_mod-ex :<->text1369.htm#15302<->Example-gon-pln_mod-ex :: Crv_gon-pln_mod-ex (Example H120E44)
3<->gonal-plane-models :<->text1369.htm#15299<->gonal-plane-models :: Small Genus Plane Models (ALGEBRAIC CURVES)
3<->arith :<->text1369.htm<->arith :: Minimal Degree Functions and Plane Models (ALGEBRAIC CURVES)
3<->algebraic-curve :<->text1356.htm<->algebraic-curve :: ALGEBRAIC CURVES
3<->rsgraph :<->text1372.htm<->rsgraph :: RESOLUTION GRAPHS AND SPLICE DIAGRAMS
3<->introduction :<->text1373.htm<->introduction :: Introduction (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->resolution-graphs :<->text1374.htm<->resolution-graphs :: Resolution Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->vertices :<->text1374.htm#15308<->vertices :: Graphs, Vertices and Printing (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->g eq h <->text1374.htm#15309<->g eq h : GrphRes,GrphRes -&gt; BoolElt
5<->! :: ResolutionGraphVertex(g,i) <->text1374.htm#15310<->! :: ResolutionGraphVertex(g,i) : GrphRes,RngIntElt -&gt; GrphResVert
5<->ResolutionGraphVertex(g,i) <->text1374.htm#15310<->ResolutionGraphVertex(g,i) : GrphRes,RngIntElt -&gt; GrphResVert
5<->Vertex(v) <->text1374.htm#15311<->Vertex(v) : GrphResVert -&gt; GrphVert
5<->ResolutionGraph(v) <->text1374.htm#15312<->ResolutionGraph(v) : GrphResVert -&gt; GrphRes
5<->IsVertex(g,v) <->text1374.htm#15313<->IsVertex(g,v) : GrphRes,GrphResVert -&gt; BoolElt
5<->Index(v) <->text1374.htm#15314<->Index(v) : GrphResVert -&gt; RngIntElt
5<->v eq w <->text1374.htm#15315<->v eq w : GrphResVert,GrphResVert -&gt; BoolElt
3<->vertices :<->text1374.htm#15308<->vertices :: Graphs, Vertices and Printing (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->creation-from-curve :<->text1374.htm#15316<->creation-from-curve :: Creation from Curve Singularities (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->ResolutionGraph(C, p) <->text1374.htm#15317<->ResolutionGraph(C, p) : Sch, Pt -> GrphRes
5<->ResolutionGraph(C, p) <->text1374.htm#15317<->ResolutionGraph(C, p) : Sch, Pt -&gt; GrphRes
4<->GrphRes_singularity (Example H121E1)<->text1374.htm#15318<->GrphRes_singularity (Example H121E1)
4<->Example-singularity :<->text1374.htm#15318<->Example-singularity :: GrphRes_singularity (Example H121E1)
3<->creation-from-curve :<->text1374.htm#15316<->creation-from-curve :: Creation from Curve Singularities (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->creation-from-pencil :<->text1374.htm#15319<->creation-from-pencil :: Creation from Pencils (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->ResolutionGraph(P) <->text1374.htm#15320<->ResolutionGraph(P) : LinearSys -&gt; GrphRes
5<->ResolutionGraph(P,a,b) <->text1374.htm#15321<->ResolutionGraph(P,a,b) : LinearSys,RngElt,RngElt -&gt; GrphRes
4<->GrphRes_pencil (Example H121E2)<->text1374.htm#15322<->GrphRes_pencil (Example H121E2)
4<->Example-pencil :<->text1374.htm#15322<->Example-pencil :: GrphRes_pencil (Example H121E2)
3<->creation-from-pencil :<->text1374.htm#15319<->creation-from-pencil :: Creation from Pencils (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->creation-by-hand :<->text1374.htm#15323<->creation-by-hand :: Creation by Hand (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->MakeResolutionGraph(g,s) <->text1374.htm#15324<->MakeResolutionGraph(g,s) : GrphDir,SeqEnum -> GrphRes
5<->MakeResolutionGraph(g,s,t) <->text1374.htm#15324<->MakeResolutionGraph(g,s,t) : GrphDir,SeqEnum,SeqEnum -&gt; GrphRes
5<->MakeResolutionGraph(N) <->text1374.htm#15325<->MakeResolutionGraph(N) : NwtnPgon -&gt; GrphRes
5<->UnderlyingGraph(g) <->text1374.htm#15326<->UnderlyingGraph(g) : GrphRes -&gt; GrphDir
3<->creation-by-hand :<->text1374.htm#15323<->creation-by-hand :: Creation by Hand (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->modifications :<->text1374.htm#15327<->modifications :: Modifying Resolution Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->Connect(v,w) <->text1374.htm#15328<->Connect(v,w) : GrphResVert,GrphResVert -&gt; GrphRes
5<->CalculateCanonicalClass(~g) <->text1374.htm#15329<->CalculateCanonicalClass(~g) : GrphRes -&gt;
5<->Disconnect(v,w) <->text1374.htm#15330<->Disconnect(v,w) : GrphResVert, GrphResVert -&gt; GrphRes
5<->Component(v) <->text1374.htm#15331<->Component(v) : GrphResVert -&gt; GrphRes
5<->CalculateMultiplicities(~g) <->text1374.htm#15332<->CalculateMultiplicities(~g) : GrphRes -&gt;
5<->CalculateTransverseIntersections(~g) <->text1374.htm#15333<->CalculateTransverseIntersections(~g) : GrphRes -&gt;
5<->ModifySelfintersection(~v,n) <->text1374.htm#15334<->ModifySelfintersection(~v,n) : GrphResVert,RngIntElt -&gt;
5<->ModifyTransverseIntersection(~v,n) <->text1374.htm#15335<->ModifyTransverseIntersection(~v,n) : GrphResVert,RngIntElt -&gt;
3<->modifications :<->text1374.htm#15327<->modifications :: Modifying Resolution Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->numerical-data :<->text1374.htm#15336<->numerical-data :: Numerical Data Associated to a  Graph (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->Size(g) <->text1374.htm#15337<->Size(g) : GrphRes -&gt; RngIntElt
5<->SelfIntersections(g) <->text1374.htm#15338<->SelfIntersections(g) : GrphRes -&gt; SeqEnum
5<->Multiplicities(g) <->text1374.htm#15339<->Multiplicities(g) : GrphRes -&gt; SeqEnum
5<->CanonicalClass(g) <->text1374.htm#15340<->CanonicalClass(g) : GrphRes -&gt; SeqEnum
5<->TransverseIntersections(g) <->text1374.htm#15341<->TransverseIntersections(g) : GrphRes -&gt; SeqEnum
5<->GenusContribution(g) <->text1374.htm#15342<->GenusContribution(g) : GrphRes -&gt; RngIntElt
5<->CartanMatrix(g) <->text1374.htm#15343<->CartanMatrix(g) : GrphRes -&gt; Mtrx
5<->Determinant(g) <->text1374.htm#15344<->Determinant(g) : GrphRes -&gt; RngElt
3<->numerical-data :<->text1374.htm#15336<->numerical-data :: Numerical Data Associated to a  Graph (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->resolution-graphs :<->text1374.htm<->resolution-graphs :: Resolution Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->splice-diagrams :<->text1375.htm<->splice-diagrams :: Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->creation :<->text1375.htm#15346<->creation :: Creation of Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->SpliceDiagram(C,p) <->text1375.htm#15347<->SpliceDiagram(C,p) : Sch,Pt -&gt; GrphSpl
5<->RegularSpliceDiagram(P) <->text1375.htm#15348<->RegularSpliceDiagram(P) : LinearSys -&gt; GrphSpl
5<->MakeSpliceDiagram(g,e,a) <->text1375.htm#15349<->MakeSpliceDiagram(g,e,a) : GrphDir,SeqEnum,SeqEnum -&gt; GrphSpl
5<->MakeSpliceDiagram(e,l,a) <->text1375.htm#15350<->MakeSpliceDiagram(e,l,a) : SeqEnum,SeqEnum,SeqEnum -&gt; GrphSpl
5<->SpliceDiagramVertex(s,i) <->text1375.htm#15351<->SpliceDiagramVertex(s,i) : GrphSpl,RngIntElt -&gt; GrphSplVert
5<->SpliceDiagram(v) <->text1375.htm#15352<->SpliceDiagram(v) : GrphSplVert -&gt; GrphSpl
5<->UnderlyingGraph(s) <->text1375.htm#15353<->UnderlyingGraph(s) : GrphSpl -&gt; GrphDir
5<->UnderlyingVertex(v) <->text1375.htm#15354<->UnderlyingVertex(v) : GrphSplVert -&gt; GrphVert
5<->Vertices(s) <->text1375.htm#15355<->Vertices(s) : GrphSpl -&gt; SeqEnum
5<->RootVertex(s) <->text1375.htm#15356<->RootVertex(s) : GrphSpl -&gt; GrphSplVert
5<->Index(v) <->text1375.htm#15357<->Index(v) : GrphSplVert -&gt; RngIntElt
5<->v eq w <->text1375.htm#15358<->v eq w : GrphSplVert, GrphSplVert -> BoolElt
5<->s eq t <->text1375.htm#15358<->s eq t : GrphSpl,GrphSpl -&gt; BoolElt
3<->creation :<->text1375.htm#15346<->creation :: Creation of Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->numerical-data :<->text1375.htm#15359<->numerical-data :: Numerical Functions of Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->EdgeLabels(s) <->text1375.htm#15360<->EdgeLabels(s) : GrphSpl -&gt; SeqEnum
5<->VertexLabels(s) <->text1375.htm#15361<->VertexLabels(s) : GrphSpl -&gt; SeqEnum
5<->TotalLinking(v) <->text1375.htm#15362<->TotalLinking(v) : GrphSplVert -&gt; RngIntElt
5<->LinkingNumbers(s) <->text1375.htm#15363<->LinkingNumbers(s) : GrphSpl -&gt; SeqEnum
5<->Linking(u,v) <->text1375.htm#15364<->Linking(u,v) : GrphSplVert,GrphSplVert -&gt; RngIntElt
5<->EdgeDeterminant(u,v) <->text1375.htm#15365<->EdgeDeterminant(u,v) : GrphSplVert,GrphSplVert -&gt; RngIntElt
5<->Valency(v) <->text1375.htm#15366<->Valency(v) : GrphSplVert -&gt; RngIntElt
5<->IsRegular(s) <->text1375.htm#15367<->IsRegular(s) : GrphSpl -&gt; BoolElt
5<->IsReduced(s) <->text1375.htm#15368<->IsReduced(s) : GrphSpl -&gt; BoolElt
5<->HasIrregularFibres(s) <->text1375.htm#15369<->HasIrregularFibres(s) : GrphSpl -&gt; BoolElt
5<->Degree(s) <->text1375.htm#15370<->Degree(s) : GrphSpl -&gt; RngIntElt
5<->EulerCharacteristic(s) <->text1375.htm#15371<->EulerCharacteristic(s) : GrphSpl -&gt; RngIntElt
5<->Size(s) <->text1375.htm#15372<->Size(s) : GrphRes -&gt; RngIntElt
5<->Arrows(s) <->text1375.htm#15373<->Arrows(s) : GrphRes -&gt; SeqEnum
5<->VertexPath(u,v) <->text1375.htm#15374<->VertexPath(u,v) : GrphSplVert,GrphSplVert -&gt; SeqEnum,SeqEnum
3<->numerical-data :<->text1375.htm#15359<->numerical-data :: Numerical Functions of Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->splice-diagrams :<->text1375.htm<->splice-diagrams :: Splice Diagrams (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->translation :<->text1376.htm<->translation :: Translation Between Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->resolution-to-splice :<->text1376.htm#15376<->resolution-to-splice :: Splice Diagrams from Resolution  Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
5<->SpliceDiagram(g) <->text1376.htm#15377<->SpliceDiagram(g) : GrphRes -&gt; GrphSpl
5<->SpliceDiagram(g,v) <->text1376.htm#15378<->SpliceDiagram(g,v) : GrphRes,GrphResVert -&gt; GrphSpl
3<->resolution-to-splice :<->text1376.htm#15376<->resolution-to-splice :: Splice Diagrams from Resolution  Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->translation :<->text1376.htm<->translation :: Translation Between Graphs (RESOLUTION GRAPHS AND SPLICE DIAGRAMS)
3<->rsgraph :<->text1372.htm<->rsgraph :: RESOLUTION GRAPHS AND SPLICE DIAGRAMS
3<->algebraic surfaces :<->text1379.htm<->algebraic surfaces :: ALGEBRAIC SURFACES
3<->algebraic-surfaces :<->text1379.htm<->algebraic-surfaces :: ALGEBRAIC SURFACES
3<->intro-main :<->text1380.htm<->intro-main :: Introduction (ALGEBRAIC SURFACES)
3<->srfc-sch-recap :<->text1381.htm<->srfc-sch-recap :: Generalities (ALGEBRAIC SURFACES)
3<->srfc-ambients :<->text1381.htm#15384<->srfc-ambients :: Ambients (ALGEBRAIC SURFACES)
3<->srfc-srfcs :<->text1381.htm#15385<->srfc-srfcs :: Surfaces (ALGEBRAIC SURFACES)
3<->srfc-sing :<->text1381.htm#15386<->srfc-sing :: Singularity (ALGEBRAIC SURFACES)
3<->srfc-mpsnpts :<->text1381.htm#15387<->srfc-mpsnpts :: Maps and Points (ALGEBRAIC SURFACES)
3<->srfc-sheavesndivs :<->text1381.htm#15388<->srfc-sheavesndivs :: Sheaves and Divisors (ALGEBRAIC SURFACES)
3<->srfc-sch-recap :<->text1381.htm<->srfc-sch-recap :: Generalities (ALGEBRAIC SURFACES)
3<->gen-sfcs :<->text1382.htm<->gen-sfcs :: General Surfaces (ALGEBRAIC SURFACES)
3<->intro-gen :<->text1382.htm#15390<->intro-gen :: Introduction (ALGEBRAIC SURFACES)
3<->creation :<->text1382.htm#15391<->creation :: Creation Functions (ALGEBRAIC SURFACES)
5<->Surface(A,f) <->text1382.htm#15392<->Surface(A,f) : Sch, RngMPolElt -> Srfc
5<->Surface(A,S) <->text1382.htm#15392<->Surface(A,S) : Sch, SeqEnum -> Srfc
5<->Surface(A,I) <->text1382.htm#15392<->Surface(A,I) : Sch, ModMPol -&gt; Srfc
5<->RationalRuledSurface(P,n) <->text1382.htm#15393<->RationalRuledSurface(P,n) : Prj, RngIntElt -&gt; Srfc, MapSch
5<->RandomCompleteIntersection(P,ds) <->text1382.htm#15394<->RandomCompleteIntersection(P,ds) : Prj, SeqEnum[RngIntElt] -&gt; Sch
5<->KummerSurfaceScheme(C) <->text1382.htm#15395<->KummerSurfaceScheme(C) : CrvHyp -&gt; Srfc
4<->AlgSrf_srfcs-creation (Example H122E1)<->text1382.htm#15396<->AlgSrf_srfcs-creation (Example H122E1)
4<->Example-srfcs-creation :<->text1382.htm#15396<->Example-srfcs-creation :: AlgSrf_srfcs-creation (Example H122E1)
3<->creation :<->text1382.htm#15391<->creation :: Creation Functions (ALGEBRAIC SURFACES)
3<->srfc-invts :<->text1382.htm#15397<->srfc-invts :: Invariants (ALGEBRAIC SURFACES)
5<->GeometricGenus(S) <->text1382.htm#15398<->GeometricGenus(S) : Srfc -&gt; RngIntElt
5<->Plurigenus(S,n) <->text1382.htm#15399<->Plurigenus(S,n) : Srfc, RngIntElt -&gt; RngIntElt
5<->ArithmeticGenus(S) <->text1382.htm#15400<->ArithmeticGenus(S) : Srfc -&gt; RngIntElt
5<->Irregularity(S) <->text1382.htm#15401<->Irregularity(S) : Srfc -&gt; RngIntElt
5<->ChernNumber(S,n) <->text1382.htm#15402<->ChernNumber(S,n) : Srfc, RngIntElt -&gt; RngIntElt
5<->MinimalChernNumber(S,n) <->text1382.htm#15403<->MinimalChernNumber(S,n) : Srfc, RngIntElt -&gt; RngIntElt
5<->HodgeNumber(S,i,j) <->text1382.htm#15404<->HodgeNumber(S,i,j) : Srfc, RngIntElt, RngIntElt -&gt; RngIntElt
4<->AlgSrf_srfcs-invs (Example H122E2)<->text1382.htm#15405<->AlgSrf_srfcs-invs (Example H122E2)
4<->Example-srfcs-invs :<->text1382.htm#15405<->Example-srfcs-invs :: AlgSrf_srfcs-invs (Example H122E2)
3<->srfc-invts :<->text1382.htm#15397<->srfc-invts :: Invariants (ALGEBRAIC SURFACES)
3<->srfc-sings :<->text1382.htm#15406<->srfc-sings :: Singularity Properties (ALGEBRAIC SURFACES)
5<->IsNormal(S) <->text1382.htm#15407<->IsNormal(S) : Srfc -&gt; BoolElt
5<->IsSimpleSurfaceSingularity(p) <->text1382.htm#15408<->IsSimpleSurfaceSingularity(p) : Pt -&gt; BoolElt, MonStr, RngIntElt
5<->HasOnlySimpleSingularities(S) <->text1382.htm#15409<->HasOnlySimpleSingularities(S) : Srfc -&gt; BoolElt, List
4<->AlgSrf_srfc_simp_sings (Example H122E3)<->text1382.htm#15410<->AlgSrf_srfc_simp_sings (Example H122E3)
4<->Example-srfc_simp_sings :<->text1382.htm#15410<->Example-srfc_simp_sings :: AlgSrf_srfc_simp_sings (Example H122E3)
3<->srfc-sings :<->text1382.htm#15406<->srfc-sings :: Singularity Properties (ALGEBRAIC SURFACES)
3<->srfc-class :<->text1382.htm#15411<->srfc-class :: Kodaira-Enriques Classification (ALGEBRAIC SURFACES)
5<->KodairaEnriquesType(S) <->text1382.htm#15412<->KodairaEnriquesType(S) : Srfc -&gt; RngIntElt, RngIntElt, MonStr
5<->KodairaEnriquesDimension(S) <->text1382.htm#15413<->KodairaEnriquesDimension(S) : Srfc -&gt; RngIntElt
4<->AlgSrf_srfc-kod-enr-ex (Example H122E4)<->text1382.htm#15414<->AlgSrf_srfc-kod-enr-ex (Example H122E4)
4<->Example-srfc-kod-enr-ex :<->text1382.htm#15414<->Example-srfc-kod-enr-ex :: AlgSrf_srfc-kod-enr-ex (Example H122E4)
3<->srfc-class :<->text1382.htm#15411<->srfc-class :: Kodaira-Enriques Classification (ALGEBRAIC SURFACES)
3<->srfc-min-mods :<->text1382.htm#15415<->srfc-min-mods :: Minimal Models (ALGEBRAIC SURFACES)
5<->MinimalModelRationalSurface(S) <->text1382.htm#15416<->MinimalModelRationalSurface(S) : Srfc -&gt; Map
4<->AlgSrf_min-mod-rat (Example H122E5)<->text1382.htm#15417<->AlgSrf_min-mod-rat (Example H122E5)
4<->Example-min-mod-rat :<->text1382.htm#15417<->Example-min-mod-rat :: AlgSrf_min-mod-rat (Example H122E5)
5<->MinimalModelRuledSurface(S) <->text1382.htm#15418<->MinimalModelRuledSurface(S) : Srfc -&gt; Map
5<->MinimalModelKodairaDimensionZero(S) <->text1382.htm#15419<->MinimalModelKodairaDimensionZero(S) : Srfc -&gt; Map
4<->AlgSrf_srfcs_kod_dim_0_min_mods1 (Example H122E6)<->text1382.htm#15420<->AlgSrf_srfcs_kod_dim_0_min_mods1 (Example H122E6)
4<->Example-srfcs_kod_dim_0_min_mods1 :<->text1382.htm#15420<->Example-srfcs_kod_dim_0_min_mods1 :: AlgSrf_srfcs_kod_dim_0_min_mods1 (Example H122E6)
4<->AlgSrf_srfcs_kod_dim_0_min_mods2 (Example H122E7)<->text1382.htm#15421<->AlgSrf_srfcs_kod_dim_0_min_mods2 (Example H122E7)
4<->Example-srfcs_kod_dim_0_min_mods2 :<->text1382.htm#15421<->Example-srfcs_kod_dim_0_min_mods2 :: AlgSrf_srfcs_kod_dim_0_min_mods2 (Example H122E7)
5<->MinimalModelKodairaDimensionOne(S) <->text1382.htm#15422<->MinimalModelKodairaDimensionOne(S) : Srfc -&gt; Map, Map
5<->CanonicalWeightedModel :: MinimalModelGeneralType(S) <->text1382.htm#15423<->CanonicalWeightedModel :: MinimalModelGeneralType(S) : Srfc -&gt; Map, BoolElt
5<->MinimalModelGeneralType(S) <->text1382.htm#15423<->MinimalModelGeneralType(S) : Srfc -&gt; Map, BoolElt
5<->CanonicalCoordinateIdeal(S) <->text1382.htm#15424<->CanonicalCoordinateIdeal(S) : Srfc -&gt; RngMPol
4<->AlgSrf_srfcs_gen_typ_min_mods1 (Example H122E8)<->text1382.htm#15425<->AlgSrf_srfcs_gen_typ_min_mods1 (Example H122E8)
4<->Example-srfcs_gen_typ_min_mods1 :<->text1382.htm#15425<->Example-srfcs_gen_typ_min_mods1 :: AlgSrf_srfcs_gen_typ_min_mods1 (Example H122E8)
4<->AlgSrf_srfcs_gen_typ_min_mods2 (Example H122E9)<->text1382.htm#15426<->AlgSrf_srfcs_gen_typ_min_mods2 (Example H122E9)
4<->Example-srfcs_gen_typ_min_mods2 :<->text1382.htm#15426<->Example-srfcs_gen_typ_min_mods2 :: AlgSrf_srfcs_gen_typ_min_mods2 (Example H122E9)
3<->srfc-min-mods :<->text1382.htm#15415<->srfc-min-mods :: Minimal Models (ALGEBRAIC SURFACES)
3<->srfc-P4-families :<->text1382.htm#15427<->srfc-P4-families :: Special Surfaces in Projective 4-space (ALGEBRAIC SURFACES)
5<->RandomRationalSurface_d10g9(P) <->text1382.htm#15428<->RandomRationalSurface_d10g9(P) : Prj -&gt; Srfc
5<->RandomEnriquesSurface_d9g6(P) <->text1382.htm#15429<->RandomEnriquesSurface_d9g6(P) : Prj -&gt; Srfc
5<->RandomAbelianSurface_d10g6(P) <->text1382.htm#15430<->RandomAbelianSurface_d10g6(P) : Prj -&gt; Srfc
5<->RandomEllipticFibration_d7g6(P) <->text1382.htm#15431<->RandomEllipticFibration_d7g6(P) : Prj -&gt; Srfc
5<->RandomEllipticFibration_d8g7(P) <->text1382.htm#15432<->RandomEllipticFibration_d8g7(P) : Prj -&gt; Srfc
5<->RandomEllipticFibration_d9g7(P) <->text1382.htm#15433<->RandomEllipticFibration_d9g7(P) : Prj -&gt; Srfc
5<->RandomEllipticFibration_d10g10(P) <->text1382.htm#15434<->RandomEllipticFibration_d10g10(P) : Prj -&gt; Srfc
3<->srfc-P4-families :<->text1382.htm#15427<->srfc-P4-families :: Special Surfaces in Projective 4-space (ALGEBRAIC SURFACES)
3<->gen-sfcs :<->text1382.htm<->gen-sfcs :: General Surfaces (ALGEBRAIC SURFACES)
3<->desing-by-blow-up :<->text1383.htm<->desing-by-blow-up :: Desingularisation by Blow Up (ALGEBRAIC SURFACES)
3<->intro-bup :<->text1383.htm#15436<->intro-bup :: Introduction (ALGEBRAIC SURFACES)
5<->ResolveSingularSurface(S) <->text1383.htm#15437<->ResolveSingularSurface(S) : Srfc -&gt; List, RngIntElt
5<->DesingulariseSurfaceByBlowUp(S) <->text1383.htm#15438<->DesingulariseSurfaceByBlowUp(S) : Srfc -&gt; List
5<->ResolveSingByBlowUp(X,Y) <->text1383.htm#15439<->ResolveSingByBlowUp(X,Y) : Sch, Sch -&gt; DesingData
3<->intro-bup :<->text1383.htm#15436<->intro-bup :: Introduction (ALGEBRAIC SURFACES)
3<->blow-up-desing-basic :<->text1383.htm#15440<->blow-up-desing-basic :: Accessor Functions (ALGEBRAIC SURFACES)
5<->NumberOfBlowUpDivisors(dsd) <->text1383.htm#15441<->NumberOfBlowUpDivisors(dsd) : DesingData -&gt; RngIntElt
5<->SingularPoint(dsd) <->text1383.htm#15442<->SingularPoint(dsd) : DesingData -&gt; Sch
5<->BlowUpDivisor(S, dsd, i) <->text1383.htm#15443<->BlowUpDivisor(S, dsd, i) : Srfc, DesingData, RngIntElt -&gt; Crv, Sch, MapSch
5<->BlowUpDivisorAllPatches(dsd, i) <->text1383.htm#15444<->BlowUpDivisorAllPatches(dsd, i) : DesingData, RngIntElt -&gt; List, RngIntElt
4<->AlgSrf_srfc_blow_up_desing_basics (Example H122E10)<->text1383.htm#15445<->AlgSrf_srfc_blow_up_desing_basics (Example H122E10)
4<->Example-srfc_blow_up_desing_basics :<->text1383.htm#15445<->Example-srfc_blow_up_desing_basics :: AlgSrf_srfc_blow_up_desing_basics (Example H122E10)
3<->blow-up-desing-basic :<->text1383.htm#15440<->blow-up-desing-basic :: Accessor Functions (ALGEBRAIC SURFACES)
3<->blow-up-desing-non-P3 :<->text1383.htm#15446<->blow-up-desing-non-P3 :: Multiplicities, Intersections and  Restricted Linear Systems (ALGEBRAIC SURFACES)
5<->IntersectionMatrix(dsd) <->text1383.htm#15447<->IntersectionMatrix(dsd) : DesingData -&gt; Mtrx
5<->Multiplicities(S,D) <->text1383.htm#15448<->Multiplicities(S,D) : Srfc, Sch -> SeqEnum
5<->Multiplicities(S,dsd,D) <->text1383.htm#15448<->Multiplicities(S,dsd,D) : Srfc, DesingData, Sch -> SeqEnum
5<->Multiplicities(S,D) <->text1383.htm#15448<->Multiplicities(S,D) : Srfc, DivSchElt -&gt; SeqEnum
5<->MultiplicitiesAndIntersections(S,D) <->text1383.htm#15449<->MultiplicitiesAndIntersections(S,D) : Srfc, Sch -> SeqEnum, SeqEnum
5<->MultiplicitiesAndIntersections(S,dsd,D) <->text1383.htm#15449<->MultiplicitiesAndIntersections(S,dsd,D) : Srfc, DesingData, Sch -> SeqEnum, SeqEnum
5<->MultiplicitiesAndIntersections(S,D) <->text1383.htm#15449<->MultiplicitiesAndIntersections(S,D) : Srfc, DivSchElt -&gt; SeqEnum, SeqEnum
5<->LinearSystemDivisorRestriction(S,B,ms) <->text1383.htm#15450<->LinearSystemDivisorRestriction(S,B,ms) : Srfc, SeqEnum[RngMPolElt], SeqEnum[SeqEnum]				-&gt; SeqEnum
3<->blow-up-desing-non-P3 :<->text1383.htm#15446<->blow-up-desing-non-P3 :: Multiplicities, Intersections and  Restricted Linear Systems (ALGEBRAIC SURFACES)
3<->blow-up-desing-P3 :<->text1383.htm#15451<->blow-up-desing-P3 :: Canonical Divisor Functionality (ALGEBRAIC SURFACES)
5<->DifferentialMultiplicities(dsd) <->text1383.htm#15452<->DifferentialMultiplicities(dsd) : DesingData -&gt; SeqEnum
5<->FirstChernClassOfDesingularization(S) <->text1383.htm#15453<->FirstChernClassOfDesingularization(S) : Srfc -&gt; RngIntElt
5<->CanonicalIntersection(S,D) <->text1383.htm#15454<->CanonicalIntersection(S,D) : Srfc, Sch -> RngIntElt
5<->CanonicalIntersection(dsd,i) <->text1383.htm#15454<->CanonicalIntersection(dsd,i) : DesingData, RngIntElt -> RngIntElt
5<->CanonicalIntersection(S,D) <->text1383.htm#15454<->CanonicalIntersection(S,D) : Srfc, DivSchElt -&gt; RngIntElt
3<->blow-up-desing-P3 :<->text1383.htm#15451<->blow-up-desing-P3 :: Canonical Divisor Functionality (ALGEBRAIC SURFACES)
3<->long_srfc_bup_exs :<->text1383.htm#15455<->long_srfc_bup_exs :: Extended Examples (ALGEBRAIC SURFACES)
4<->AlgSrf_srfc_blow_up_desing_1 (Example H122E11)<->text1383.htm#15456<->AlgSrf_srfc_blow_up_desing_1 (Example H122E11)
4<->Example-srfc_blow_up_desing_1 :<->text1383.htm#15456<->Example-srfc_blow_up_desing_1 :: AlgSrf_srfc_blow_up_desing_1 (Example H122E11)
4<->AlgSrf_srfc_blow_up_desing_2 (Example H122E12)<->text1383.htm#15457<->AlgSrf_srfc_blow_up_desing_2 (Example H122E12)
4<->Example-srfc_blow_up_desing_2 :<->text1383.htm#15457<->Example-srfc_blow_up_desing_2 :: AlgSrf_srfc_blow_up_desing_2 (Example H122E12)
4<->AlgSrf_srfc_blow_up_desing_3 (Example H122E13)<->text1383.htm#15458<->AlgSrf_srfc_blow_up_desing_3 (Example H122E13)
4<->Example-srfc_blow_up_desing_3 :<->text1383.htm#15458<->Example-srfc_blow_up_desing_3 :: AlgSrf_srfc_blow_up_desing_3 (Example H122E13)
3<->long_srfc_bup_exs :<->text1383.htm#15455<->long_srfc_bup_exs :: Extended Examples (ALGEBRAIC SURFACES)
3<->desing-by-blow-up :<->text1383.htm<->desing-by-blow-up :: Desingularisation by Blow Up (ALGEBRAIC SURFACES)
3<->srfcs-P3 :<->text1384.htm<->srfcs-P3 :: Surfaces in P<sup>3</sup> (ALGEBRAIC SURFACES)
3<->intro-P3 :<->text1384.htm#15460<->intro-P3 :: Introduction (ALGEBRAIC SURFACES)
3<->curve_desing :<->text1384.htm#15461<->curve_desing :: Embedded Formal Desingularization of Curves (ALGEBRAIC SURFACES)
5<->ResolveAffineCurve(p) <->text1384.htm#15462<->ResolveAffineCurve(p) : RngMPolElt -&gt; List, List, List, RngIntElt
4<->AlgSrf_aff_crv_res (Example H122E14)<->text1384.htm#15463<->AlgSrf_aff_crv_res (Example H122E14)
4<->Example-aff_crv_res :<->text1384.htm#15463<->Example-aff_crv_res :: AlgSrf_aff_crv_res (Example H122E14)
5<->ResolveProjectiveCurve(p) <->text1384.htm#15464<->ResolveProjectiveCurve(p) : RngMPolElt -&gt; List, List, List, RngIntElt
4<->AlgSrf_prj_crv_res (Example H122E15)<->text1384.htm#15465<->AlgSrf_prj_crv_res (Example H122E15)
4<->Example-prj_crv_res :<->text1384.htm#15465<->Example-prj_crv_res :: AlgSrf_prj_crv_res (Example H122E15)
3<->curve_desing :<->text1384.htm#15461<->curve_desing :: Embedded Formal Desingularization of Curves (ALGEBRAIC SURFACES)
3<->srf_desing :<->text1384.htm#15466<->srf_desing :: Formal Desingularization of  Surfaces (ALGEBRAIC SURFACES)
5<->ResolveAffineMonicSurface(s) <->text1384.htm#15467<->ResolveAffineMonicSurface(s) : RngUPolElt -&gt; List, RngIntElt
4<->AlgSrf_aff_res (Example H122E16)<->text1384.htm#15468<->AlgSrf_aff_res (Example H122E16)
4<->Example-aff_res :<->text1384.htm#15468<->Example-aff_res :: AlgSrf_aff_res (Example H122E16)
5<->FormallyResolveProjectiveHyperSurface(S)<->text1384.htm#15469<->FormallyResolveProjectiveHyperSurface(S): Srfc -&gt; List, RngIntElt
4<->AlgSrf_prj_res (Example H122E17)<->text1384.htm#15470<->AlgSrf_prj_res (Example H122E17)
4<->Example-prj_res :<->text1384.htm#15470<->Example-prj_res :: AlgSrf_prj_res (Example H122E17)
3<->srf_desing :<->text1384.htm#15466<->srf_desing :: Formal Desingularization of  Surfaces (ALGEBRAIC SURFACES)
3<->adjoints :<->text1384.htm#15471<->adjoints :: Adjoint Systems and Birational Invariants (ALGEBRAIC SURFACES)
5<->HomAdjoints(m,n,S) <->text1384.htm#15472<->HomAdjoints(m,n,S) : RngIntElt, RngIntElt, Srfc -&gt; SeqEnum
5<->GeometricGenusOfDesingularization(S) <->text1384.htm#15473<->GeometricGenusOfDesingularization(S) : Srfc -&gt; RngIntElt
5<->PlurigenusOfDesingularization(S,m) <->text1384.htm#15474<->PlurigenusOfDesingularization(S,m) : Srfc, RngIntElt -&gt; RngIntElt
5<->ArithmeticGenusOfDesingularization(S) <->text1384.htm#15475<->ArithmeticGenusOfDesingularization(S) : Srfc -&gt; RngIntElt
4<->AlgSrf_adj_ex (Example H122E18)<->text1384.htm#15476<->AlgSrf_adj_ex (Example H122E18)
4<->Example-adj_ex :<->text1384.htm#15476<->Example-adj_ex :: AlgSrf_adj_ex (Example H122E18)
3<->adjoints :<->text1384.htm#15471<->adjoints :: Adjoint Systems and Birational Invariants (ALGEBRAIC SURFACES)
3<->classnprm :<->text1384.htm#15477<->classnprm :: Classification and Parameterization of Rational Surfaces (ALGEBRAIC SURFACES)
5<->IsRational(X) <->text1384.htm#15478<->IsRational(X) : Srfc -&gt; BoolElt
3<->classnprm :<->text1384.htm#15477<->classnprm :: Classification and Parameterization of Rational Surfaces (ALGEBRAIC SURFACES)
3<->classify :<->text1384.htm#15479<->classify :: Reduction to Special Models (ALGEBRAIC SURFACES)
5<->ClassifyRationalSurface(S) <->text1384.htm#15480<->ClassifyRationalSurface(S) : Srfc -&gt; Srfc, List, MonStgElt
4<->AlgSrf_class (Example H122E19)<->text1384.htm#15481<->AlgSrf_class (Example H122E19)
4<->Example-class :<->text1384.htm#15481<->Example-class :: AlgSrf_class (Example H122E19)
3<->classify :<->text1384.htm#15479<->classify :: Reduction to Special Models (ALGEBRAIC SURFACES)
3<->param :<->text1384.htm#15482<->param :: Parametrization of Rational Surfaces (ALGEBRAIC SURFACES)
5<->ParametrizeProjectiveHypersurface(X, P2) <->text1384.htm#15483<->ParametrizeProjectiveHypersurface(X, P2) : Srfc, Prj -&gt; BoolElt, MapSch
5<->ParametrizeProjectiveSurface(X, P2) <->text1384.htm#15484<->ParametrizeProjectiveSurface(X, P2) : Srfc, Prj -&gt; BoolElt, MapSch
4<->AlgSrf_prm (Example H122E20)<->text1384.htm#15485<->AlgSrf_prm (Example H122E20)
4<->Example-prm :<->text1384.htm#15485<->Example-prm :: AlgSrf_prm (Example H122E20)
5<->Solve(p, F) <->text1384.htm#15486<->Solve(p, F) : RngMPolElt, FldFunRat -&gt; SeqEnum
4<->AlgSrf_prm2 (Example H122E21)<->text1384.htm#15487<->AlgSrf_prm2 (Example H122E21)
4<->Example-prm2 :<->text1384.htm#15487<->Example-prm2 :: AlgSrf_prm2 (Example H122E21)
3<->param :<->text1384.htm#15482<->param :: Parametrization of Rational Surfaces (ALGEBRAIC SURFACES)
3<->param_spec :<->text1384.htm#15488<->param_spec :: Parametrization of Special  Surfaces (ALGEBRAIC SURFACES)
5<->ParametrizeQuadric(X,P2) <->text1384.htm#15489<->ParametrizeQuadric(X,P2) : Sch, Prj -&gt; BoolElt, MapSch
4<->AlgSrf_solve_quad (Example H122E22)<->text1384.htm#15490<->AlgSrf_solve_quad (Example H122E22)
4<->Example-solve_quad :<->text1384.htm#15490<->Example-solve_quad :: AlgSrf_solve_quad (Example H122E22)
5<->ParametrizePencil(phi, P2) <->text1384.htm#15491<->ParametrizePencil(phi, P2) : MapSch, Prj -&gt; BoolElt, MapSch
4<->AlgSrf_ruled_ex (Example H122E23)<->text1384.htm#15492<->AlgSrf_ruled_ex (Example H122E23)
4<->Example-ruled_ex :<->text1384.htm#15492<->Example-ruled_ex :: AlgSrf_ruled_ex (Example H122E23)
5<->ParametrizeDelPezzo(X, P2) <->text1384.htm#15493<->ParametrizeDelPezzo(X, P2) : Sch, Prj -&gt; BoolElt, MapSch
3<->param_spec :<->text1384.htm#15488<->param_spec :: Parametrization of Special  Surfaces (ALGEBRAIC SURFACES)
3<->srfcs-P3 :<->text1384.htm<->srfcs-P3 :: Surfaces in P<sup>3</sup> (ALGEBRAIC SURFACES)
3<->dp-srfcs :<->text1385.htm<->dp-srfcs :: Del Pezzo Surfaces (ALGEBRAIC SURFACES)
3<->intro-DP :<->text1385.htm#15495<->intro-DP :: Introduction (ALGEBRAIC SURFACES)
3<->dp-creation :<->text1385.htm#15496<->dp-creation :: Creation of General Del Pezzos (ALGEBRAIC SURFACES)
5<->DelPezzoSurface(S) <->text1385.htm#15497<->DelPezzoSurface(S) : Setq[Pt] -> SrfDelPezzo
5<->DelPezzoSurface(Z) <->text1385.htm#15497<->DelPezzoSurface(Z) : Clstr -> SrfDelPezzo
5<->DelPezzoSurface(P,L) <->text1385.htm#15497<->DelPezzoSurface(P,L) : Prj,List -&gt; SrfDelPezzo
5<->DelPezzoSurface(f) <->text1385.htm#15498<->DelPezzoSurface(f) : RngMPolElt -&gt; SrfDelPezzo
5<->IsDelPezzo(Y) <->text1385.htm#15499<->IsDelPezzo(Y) : Sch -&gt; BoolElt, SrfDelPezzo, MapSch
3<->dp-creation :<->text1385.htm#15496<->dp-creation :: Creation of General Del Pezzos (ALGEBRAIC SURFACES)
3<->del-pezzo :<->text1385.htm#15500<->del-pezzo :: Parametrization of Del Pezzo  Surfaces (ALGEBRAIC SURFACES)
5<->SetVerbose("ParamDP", v) <->text1385.htm#15501<->SetVerbose("ParamDP", v) : MonStgElt, RngIntElt -&gt;
5<->ParametrizeDegree9DelPezzo(X) <->text1385.htm#15502<->ParametrizeDegree9DelPezzo(X) : Sch -&gt; BoolElt, MapIsoSch
5<->ParametrizeDegree8DelPezzo(X) <->text1385.htm#15503<->ParametrizeDegree8DelPezzo(X) : Sch -&gt; BoolElt, MapSch
4<->AlgSrf_del-pezzo-ex-8 (Example H122E24)<->text1385.htm#15504<->AlgSrf_del-pezzo-ex-8 (Example H122E24)
4<->Example-del-pezzo-ex-8 :<->text1385.htm#15504<->Example-del-pezzo-ex-8 :: AlgSrf_del-pezzo-ex-8 (Example H122E24)
5<->ParametrizeDegree7DelPezzo(X) <->text1385.htm#15505<->ParametrizeDegree7DelPezzo(X) : Sch -&gt; MapIsoSch
5<->ParametrizeDegree6DelPezzo(X) <->text1385.htm#15506<->ParametrizeDegree6DelPezzo(X) : Sch -&gt; BoolElt, MapIsoSch
5<->Degree6DelPezzoType2\_2(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType2\_2(K,pt) : FldNum, Pt -> Sch
5<->Degree6DelPezzoType2\_3(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType2\_3(K,pt) : FldNum, Pt -> Sch
5<->Degree6DelPezzoType3 :: Degree6DelPezzoType2_1(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType3 :: Degree6DelPezzoType2_1(K,pt) : FldNum, Pt -&gt; Sch
5<->Degree6DelPezzoType4 :: Degree6DelPezzoType2_1(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType4 :: Degree6DelPezzoType2_1(K,pt) : FldNum, Pt -&gt; Sch
5<->Degree6DelPezzoType6 :: Degree6DelPezzoType2_1(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType6 :: Degree6DelPezzoType2_1(K,pt) : FldNum, Pt -&gt; Sch
5<->Degree6DelPezzoType2_1(K,pt) <->text1385.htm#15507<->Degree6DelPezzoType2_1(K,pt) : FldNum, Pt -&gt; Sch
5<->ParametrizeDelPezzoDeg6(X) <->text1385.htm#15508<->ParametrizeDelPezzoDeg6(X) : Sch -&gt; BoolElt, MapIsoSch
4<->AlgSrf_del-pezzo-ex-6 (Example H122E25)<->text1385.htm#15509<->AlgSrf_del-pezzo-ex-6 (Example H122E25)
4<->Example-del-pezzo-ex-6 :<->text1385.htm#15509<->Example-del-pezzo-ex-6 :: AlgSrf_del-pezzo-ex-6 (Example H122E25)
5<->ParametrizeDegree5DelPezzo(X) <->text1385.htm#15510<->ParametrizeDegree5DelPezzo(X) : Sch -&gt; MapIsoSch
5<->ParametrizeSingularDegree4DelPezzo :: ParametrizeSingularDegree3DelPezzo(X,P2) <->text1385.htm#15511<->ParametrizeSingularDegree4DelPezzo :: ParametrizeSingularDegree3DelPezzo(X,P2) : Sch, Prj -&gt; BoolElt, MapIsoSch
5<->ParametrizeSingularDegree3DelPezzo(X,P2) <->text1385.htm#15511<->ParametrizeSingularDegree3DelPezzo(X,P2) : Sch, Prj -&gt; BoolElt, MapIsoSch
4<->AlgSrf_del-pezzo-ex-3-sing (Example H122E26)<->text1385.htm#15512<->AlgSrf_del-pezzo-ex-3-sing (Example H122E26)
4<->Example-del-pezzo-ex-3-sing :<->text1385.htm#15512<->Example-del-pezzo-ex-3-sing :: AlgSrf_del-pezzo-ex-3-sing (Example H122E26)
3<->del-pezzo :<->text1385.htm#15500<->del-pezzo :: Parametrization of Del Pezzo  Surfaces (ALGEBRAIC SURFACES)
3<->minredcubic :<->text1385.htm#15513<->minredcubic :: Minimization and Reduction of Surfaces (ALGEBRAIC SURFACES)
5<->MinimizeCubicSurface(f, p) <->text1385.htm#15514<->MinimizeCubicSurface(f, p) : RngMPolElt, RngIntElt -&gt; RngMPolElt, Mtrx
5<->ReduceCubicSurface(f) <->text1385.htm#15515<->ReduceCubicSurface(f) : RngMPolElt -&gt; RngMPolElt, Mtrx
5<->MinimizeReduceCubicSurface(f) <->text1385.htm#15516<->MinimizeReduceCubicSurface(f) : MPolElt -&gt; RngMPolElt, Mtrx
5<->MinimizeDeg4delPezzo(f, p) <->text1385.htm#15517<->MinimizeDeg4delPezzo(f, p) : SeqEnum, RngIntElt -&gt; SeqEnum, Mtrx
5<->MinimizeReduceDeg4delPezzo(f) <->text1385.htm#15518<->MinimizeReduceDeg4delPezzo(f) : SeqEnum -&gt; SeqEnum, Mtrx
5<->MinimizeReduce(S) <->text1385.htm#15519<->MinimizeReduce(S) : SrfDelPezzo -&gt;  SrfDelPezzo, Mtrx
4<->AlgSrf_dp34 (Example H122E27)<->text1385.htm#15520<->AlgSrf_dp34 (Example H122E27)
4<->Example-dp34 :<->text1385.htm#15520<->Example-dp34 :: AlgSrf_dp34 (Example H122E27)
3<->minredcubic :<->text1385.htm#15513<->minredcubic :: Minimization and Reduction of Surfaces (ALGEBRAIC SURFACES)
3<->cubic_ff :<->text1385.htm#15521<->cubic_ff :: Cubic Surfaces over Finite  Fields (ALGEBRAIC SURFACES)
5<->NumberOfPointsOnCubicSurface(f) <->text1385.htm#15522<->NumberOfPointsOnCubicSurface(f) : RngMPolElt -&gt; RngIntElt, RngIntElt
4<->AlgSrf_numptscubic (Example H122E28)<->text1385.htm#15523<->AlgSrf_numptscubic (Example H122E28)
4<->Example-numptscubic :<->text1385.htm#15523<->Example-numptscubic :: AlgSrf_numptscubic (Example H122E28)
5<->IsIsomorphicCubicSurface(f,g) <->text1385.htm#15524<->IsIsomorphicCubicSurface(f,g) : MPolElt, MPolElt -&gt; BoolElt, List
4<->AlgSrf_isisocubic (Example H122E29)<->text1385.htm#15525<->AlgSrf_isisocubic (Example H122E29)
4<->Example-isisocubic :<->text1385.htm#15525<->Example-isisocubic :: AlgSrf_isisocubic (Example H122E29)
3<->cubic_ff :<->text1385.htm#15521<->cubic_ff :: Cubic Surfaces over Finite  Fields (ALGEBRAIC SURFACES)
3<->constr_cubic :<->text1385.htm#15526<->constr_cubic :: Construction of Cubic Surfaces (ALGEBRAIC SURFACES)
5<->CubicSurfaceByHexahedralCoefficients(p) <->text1385.htm#15527<->CubicSurfaceByHexahedralCoefficients(p) : RngUPolElt -&gt; RngMPolElt
5<->CoblesRadicand(p) <->text1385.htm#15528<->CoblesRadicand(p) : RngUPolElt -&gt; FldElt
4<->AlgSrf_hex (Example H122E30)<->text1385.htm#15529<->AlgSrf_hex (Example H122E30)
4<->Example-hex :<->text1385.htm#15529<->Example-hex :: AlgSrf_hex (Example H122E30)
3<->constr_cubic :<->text1385.htm#15526<->constr_cubic :: Construction of Cubic Surfaces (ALGEBRAIC SURFACES)
3<->invcubsurf :<->text1385.htm#15530<->invcubsurf :: Invariant Theory of Cubic Surfaces (ALGEBRAIC SURFACES)
3<->inv_cub :<->text1385.htm#15531<->inv_cub :: Invariants (ALGEBRAIC SURFACES)
5<->ClebschSalmonInvariants(f) <->text1385.htm#15532<->ClebschSalmonInvariants(f) : RngMPolElt -&gt; SeqEnum, RngElt
5<->SkewInvariant100(f) <->text1385.htm#15533<->SkewInvariant100(f) : RngMPolElt -&gt; RngElt
5<->CubicSurfaceFromClebschSalmon(inv) <->text1385.htm#15534<->CubicSurfaceFromClebschSalmon(inv) : SeqEnum -&gt; RngMPolElt
4<->AlgSrf_inv_cub (Example H122E31)<->text1385.htm#15535<->AlgSrf_inv_cub (Example H122E31)
4<->Example-inv_cub :<->text1385.htm#15535<->Example-inv_cub :: AlgSrf_inv_cub (Example H122E31)
3<->inv_cub :<->text1385.htm#15531<->inv_cub :: Invariants (ALGEBRAIC SURFACES)
3<->cov_cubic :<->text1385.htm#15536<->cov_cubic :: Covariants (ALGEBRAIC SURFACES)
5<->LinearCovariants(f) <->text1385.htm#15537<->LinearCovariants(f) : RngMPolElt -&gt; SeqEnum
5<->ClassicalCovariantsOfCubicSurface(f) <->text1385.htm#15538<->ClassicalCovariantsOfCubicSurface(f) : RngMPolElt -&gt; SeqEnum
3<->cov_cubic :<->text1385.htm#15536<->cov_cubic :: Covariants (ALGEBRAIC SURFACES)
3<->cont_cubic :<->text1385.htm#15539<->cont_cubic :: Contravariants (ALGEBRAIC SURFACES)
5<->NumericClebschTransfer(f, inv, p) <->text1385.htm#15540<->NumericClebschTransfer(f, inv, p) : RngMPolElt,  UserProgram,  SeqEnum -&gt; RngElt
5<->ContravariantsOfCubicSurface(f) <->text1385.htm#15541<->ContravariantsOfCubicSurface(f) : RngMPolElt -&gt; SeqEnum
4<->AlgSrf_cayley_dual (Example H122E32)<->text1385.htm#15542<->AlgSrf_cayley_dual (Example H122E32)
4<->Example-cayley_dual :<->text1385.htm#15542<->Example-cayley_dual :: AlgSrf_cayley_dual (Example H122E32)
3<->cont_cubic :<->text1385.htm#15539<->cont_cubic :: Contravariants (ALGEBRAIC SURFACES)
3<->diff_op :<->text1385.htm#15543<->diff_op :: Interaction of Covariants and Contravariants (ALGEBRAIC SURFACES)
5<->ApplyContravariant(c, d) <->text1385.htm#15544<->ApplyContravariant(c, d) : MPolElt, MPolElt -&gt; MPolElt
4<->AlgSrf_co_cont (Example H122E33)<->text1385.htm#15545<->AlgSrf_co_cont (Example H122E33)
4<->Example-co_cont :<->text1385.htm#15545<->Example-co_cont :: AlgSrf_co_cont (Example H122E33)
3<->diff_op :<->text1385.htm#15543<->diff_op :: Interaction of Covariants and Contravariants (ALGEBRAIC SURFACES)
3<->invcubsurf :<->text1385.htm#15530<->invcubsurf :: Invariant Theory of Cubic Surfaces (ALGEBRAIC SURFACES)
3<->penta :<->text1385.htm#15546<->penta :: The Pentahedron of a Cubic Surface (ALGEBRAIC SURFACES)
5<->PentahedronIdeal(f) <->text1385.htm#15547<->PentahedronIdeal(f) : RngMPolElt -&gt; RngMPol
4<->AlgSrf_penta (Example H122E34)<->text1385.htm#15548<->AlgSrf_penta (Example H122E34)
4<->Example-penta :<->text1385.htm#15548<->Example-penta :: AlgSrf_penta (Example H122E34)
3<->penta :<->text1385.htm#15546<->penta :: The Pentahedron of a Cubic Surface (ALGEBRAIC SURFACES)
3<->dp-srfcs :<->text1385.htm<->dp-srfcs :: Del Pezzo Surfaces (ALGEBRAIC SURFACES)
3<->algebraic-surfaces :<->text1379.htm<->algebraic-surfaces :: ALGEBRAIC SURFACES
3<->grd-rng :<->text1388.htm<->grd-rng :: HILBERT SERIES OF POLARISED VARIETIES
3<->introduction :<->text1389.htm<->introduction :: Introduction (HILBERT SERIES OF POLARISED VARIETIES)
3<->dis :<->text1389.htm#15553<->dis :: Key Warning and Disclaimer (HILBERT SERIES OF POLARISED VARIETIES)
3<->over :<->text1389.htm#15554<->over :: Overview of the Chapter (HILBERT SERIES OF POLARISED VARIETIES)
3<->introduction :<->text1389.htm<->introduction :: Introduction (HILBERT SERIES OF POLARISED VARIETIES)
3<->series :<->text1390.htm<->series :: Hilbert Series and Graded  Rings (HILBERT SERIES OF POLARISED VARIETIES)
3<->series-polys :<->text1390.htm#15556<->series-polys :: Hilbert Series and Hilbert Polynomials (HILBERT SERIES OF POLARISED VARIETIES)
5<->HilbertFunction(Q,V) <->text1390.htm#15557<->HilbertFunction(Q,V) : SeqEnum, SeqEnum -> UserProgram
5<->HilbertFunction(p,V) <->text1390.htm#15557<->HilbertFunction(p,V) : RngUPolElt, SeqEnum -&gt; UserProgram
5<->HilbertSeries(Q,V) <->text1390.htm#15558<->HilbertSeries(Q,V) : SeqEnum, SeqEnum -> FldFunRatUElt
5<->HilbertSeries(p,V) <->text1390.htm#15558<->HilbertSeries(p,V) : RngUPolElt, SeqEnum -&gt; FldFunRatUElt
3<->series-polys :<->text1390.htm#15556<->series-polys :: Hilbert Series and Hilbert Polynomials (HILBERT SERIES OF POLARISED VARIETIES)
3<->numer :<->text1390.htm#15559<->numer :: Interpreting the Hilbert Numerator (HILBERT SERIES OF POLARISED VARIETIES)
5<->HilbertSeriesMultipliedByMinimalDenominator(Q,V) <->text1390.htm#15560<->HilbertSeriesMultipliedByMinimalDenominator(Q,V) : SeqEnum, SeqEnum -> RngUPolElt, SeqEnum
5<->HilbertSeriesMultipliedByMinimalDenominator(p,V) <->text1390.htm#15560<->HilbertSeriesMultipliedByMinimalDenominator(p,V) : RngUPolElt, SeqEnum -&gt; RngUPolElt, SeqEnum
5<->HilbertNumerator(g, D) <->text1390.htm#15561<->HilbertNumerator(g, D) : FldFunRatUElt, SeqEnum -&gt; FldFunRatUElt
4<->GrdRng_gr-genus4curve (Example H123E1)<->text1390.htm#15562<->GrdRng_gr-genus4curve (Example H123E1)
4<->Example-gr-genus4curve :<->text1390.htm#15562<->Example-gr-genus4curve :: GrdRng_gr-genus4curve (Example H123E1)
5<->FindFirstGenerators(g) <->text1390.htm#15563<->FindFirstGenerators(g) : FldFunRatUElt -&gt; SeqEnum
4<->GrdRng_gr-grfirstgens (Example H123E2)<->text1390.htm#15564<->GrdRng_gr-grfirstgens (Example H123E2)
4<->Example-gr-grfirstgens :<->text1390.htm#15564<->Example-gr-grfirstgens :: GrdRng_gr-grfirstgens (Example H123E2)
5<->ApparentEquationDegrees :: ApparentCodimension(f) <->text1390.htm#15565<->ApparentEquationDegrees :: ApparentCodimension(f) : RngUPolElt -&gt; RngIntElt
5<->ApparentSyzygyDegrees :: ApparentCodimension(f) <->text1390.htm#15565<->ApparentSyzygyDegrees :: ApparentCodimension(f) : RngUPolElt -&gt; RngIntElt
5<->ApparentCodimension(f) <->text1390.htm#15565<->ApparentCodimension(f) : RngUPolElt -&gt; RngIntElt
3<->numer :<->text1390.htm#15559<->numer :: Interpreting the Hilbert Numerator (HILBERT SERIES OF POLARISED VARIETIES)
3<->series :<->text1390.htm<->series :: Hilbert Series and Graded  Rings (HILBERT SERIES OF POLARISED VARIETIES)
3<->baskets :<->text1391.htm<->baskets :: Baskets of Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->sing :<->text1391.htm#15567<->sing :: Point Singularities (HILBERT SERIES OF POLARISED VARIETIES)
4<->GrdRng_gr-grpoints (Example H123E3)<->text1391.htm#15568<->GrdRng_gr-grpoints (Example H123E3)
4<->Example-gr-grpoints :<->text1391.htm#15568<->Example-gr-grpoints :: GrdRng_gr-grpoints (Example H123E3)
3<->p-sing :<->text1391.htm#15569<->p-sing :: Creation of Point Singularities (HILBERT SERIES OF POLARISED VARIETIES)
5<->Point(r,Q) <->text1391.htm#15570<->Point(r,Q) : RngIntElt, RngIntElt, SeqEnum -> GRPtS
5<->Point(r,n,Q) <->text1391.htm#15570<->Point(r,n,Q) : RngIntElt, RngIntElt, SeqEnum -&gt; GRPtS
3<->p-sing :<->text1391.htm#15569<->p-sing :: Creation of Point Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->key-data :<->text1391.htm#15571<->key-data :: Accessing the Key Data and Testing Equality (HILBERT SERIES OF POLARISED VARIETIES)
5<->Dimension(p) <->text1391.htm#15572<->Dimension(p) : GRPtS -&gt; RngIntElt
5<->Index(p) <->text1391.htm#15573<->Index(p) : GRPtS -&gt; RngIntElt
5<->Polarisation(p) <->text1391.htm#15574<->Polarisation(p) : GRPtS -&gt; SeqEnum
5<->Eigenspace(p) <->text1391.htm#15575<->Eigenspace(p) : GRPtS -&gt; RngIntElt
5<->p eq q <->text1391.htm#15576<->p eq q : GRPtS, GRPtS -&gt; BoolElt
3<->key-data :<->text1391.htm#15571<->key-data :: Accessing the Key Data and Testing Equality (HILBERT SERIES OF POLARISED VARIETIES)
3<->types-sing :<->text1391.htm#15577<->types-sing :: Identifying Special Types of Point Singularity (HILBERT SERIES OF POLARISED VARIETIES)
5<->IsIsolated(p) <->text1391.htm#15578<->IsIsolated(p) : GRPtS -&gt; BoolElt
5<->IsGorensteinSurface(p) <->text1391.htm#15579<->IsGorensteinSurface(p) : GRPtS -&gt; BoolElt
5<->IsTerminalThreefold(p) <->text1391.htm#15580<->IsTerminalThreefold(p) : GRPtS -&gt; BoolElt
5<->TerminalIndex(p) <->text1391.htm#15581<->TerminalIndex(p) : GRPtS -&gt; RngIntElt
5<->TerminalPolarisation(p) <->text1391.htm#15582<->TerminalPolarisation(p) : GRPtS -&gt; SeqEnum
5<->IsCanonical(p) <->text1391.htm#15583<->IsCanonical(p) : GRPtS -&gt; BoolElt
3<->types-sing :<->text1391.htm#15577<->types-sing :: Identifying Special Types of Point Singularity (HILBERT SERIES OF POLARISED VARIETIES)
3<->sing :<->text1391.htm#15567<->sing :: Point Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->curve-sing :<->text1391.htm#15584<->curve-sing :: Curve Singularities (HILBERT SERIES OF POLARISED VARIETIES)
4<->GrdRng_gr-curvesing (Example H123E4)<->text1391.htm#15585<->GrdRng_gr-curvesing (Example H123E4)
4<->Example-gr-curvesing :<->text1391.htm#15585<->Example-gr-curvesing :: GrdRng_gr-curvesing (Example H123E4)
3<->c-curve-sing :<->text1391.htm#15586<->c-curve-sing :: Creation of Curve Singularities (HILBERT SERIES OF POLARISED VARIETIES)
5<->Curve(d,p,N) <->text1391.htm#15587<->Curve(d,p,N) : FldRatElt,GRPtS,RngIntElt -> GRCrvS
5<->Curve(d,p,N,t) <->text1391.htm#15587<->Curve(d,p,N,t) : FldRatElt,GRPtS,RngIntElt,RngIntElt -> GRCrvS
5<->Curve(d,p,m) <->text1391.htm#15587<->Curve(d,p,m) : FldRatElt,GRPtS,FldRatElt -&gt; GRCrvS
3<->c-curve-sing :<->text1391.htm#15586<->c-curve-sing :: Creation of Curve Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->c-key-data :<->text1391.htm#15588<->c-key-data :: Accessing the Key Data and Testing Equality (HILBERT SERIES OF POLARISED VARIETIES)
5<->Degree(C) <->text1391.htm#15589<->Degree(C) : GRCrvS -&gt; RngIntElt
5<->TransverseType(C) <->text1391.htm#15590<->TransverseType(C) : GRCrvS -&gt; GRPtS
5<->TransverseIndex(C) <->text1391.htm#15591<->TransverseIndex(C) : GRCrvS -&gt; RngIntElt
5<->NormalNumber(C) <->text1391.htm#15592<->NormalNumber(C) : GRCrvS -&gt; RngIntElt
5<->Index(C) <->text1391.htm#15593<->Index(C) : GRCrvS -&gt; RngIntElt
5<->MagicNumber(C) <->text1391.htm#15594<->MagicNumber(C) : GRCrvS -&gt; RngIntElt
5<->Dimension(C) <->text1391.htm#15595<->Dimension(C) : GRCrvS -&gt; RngIntElt
5<->IsCanonical(C) <->text1391.htm#15596<->IsCanonical(C) : GRCrvS -&gt; BoolElt
5<->C eq D <->text1391.htm#15597<->C eq D : GRCrvS, GRCrvS -&gt; BoolElt
3<->c-key-data :<->text1391.htm#15588<->c-key-data :: Accessing the Key Data and Testing Equality (HILBERT SERIES OF POLARISED VARIETIES)
3<->curve-sing :<->text1391.htm#15584<->curve-sing :: Curve Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->c-basket :<->text1391.htm#15598<->c-basket :: Baskets of Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->cm-baskets :<->text1391.htm#15599<->cm-baskets :: Creation and Modification of Baskets (HILBERT SERIES OF POLARISED VARIETIES)
5<->Basket(Q1,Q2) <->text1391.htm#15600<->Basket(Q1,Q2) : SeqEnum,SeqEnum -> GRBskt
5<->Basket(Q) <->text1391.htm#15600<->Basket(Q) : SeqEnum -&gt; GRBskt
5<->EmptyBasket() <->text1391.htm#15601<->EmptyBasket() : . -&gt; GRBskt
5<->MakeBasket(Q) <->text1391.htm#15602<->MakeBasket(Q) : SeqEnum -&gt; GRBskt
5<->Points(B) <->text1391.htm#15603<->Points(B) : GRBskt -&gt; SeqEnum
5<->Curves(B) <->text1391.htm#15604<->Curves(B) : GRBskt -&gt; SeqEnum
3<->cm-baskets :<->text1391.htm#15599<->cm-baskets :: Creation and Modification of Baskets (HILBERT SERIES OF POLARISED VARIETIES)
3<->basket-test :<->text1391.htm#15605<->basket-test :: Tests for Baskets (HILBERT SERIES OF POLARISED VARIETIES)
5<->IsIsolated(B) <->text1391.htm#15606<->IsIsolated(B) : GRBskt -&gt; BoolElt
5<->IsGorensteinSurface(B) <->text1391.htm#15607<->IsGorensteinSurface(B) : GRBskt -&gt; BoolElt
5<->IsTerminalThreefold(B) <->text1391.htm#15608<->IsTerminalThreefold(B) : GRBskt -&gt; BoolElt
5<->IsCanonical(B) <->text1391.htm#15609<->IsCanonical(B) : GRBskt -&gt; BoolElt
3<->basket-test :<->text1391.htm#15605<->basket-test :: Tests for Baskets (HILBERT SERIES OF POLARISED VARIETIES)
3<->c-basket :<->text1391.htm#15598<->c-basket :: Baskets of Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->dissid :<->text1391.htm#15610<->dissid :: Curves and Dissident Points (HILBERT SERIES OF POLARISED VARIETIES)
5<->CanonicalDissidentPoints(C) <->text1391.htm#15611<->CanonicalDissidentPoints(C) : GRCrvS -&gt; SeqEnum
5<->SimpleCanonicalDissidentPoints(C) <->text1391.htm#15612<->SimpleCanonicalDissidentPoints(C) : GRCrvS -&gt; SeqEnum
5<->PossibleCanonicalDissidentPoints(C) <->text1391.htm#15613<->PossibleCanonicalDissidentPoints(C) : GRCrvS -&gt; SeqEnum
5<->PossibleSimpleCanonicalDissidentPoints(C) <->text1391.htm#15614<->PossibleSimpleCanonicalDissidentPoints(C) : GRCrvS -&gt; SeqEnum
3<->dissid :<->text1391.htm#15610<->dissid :: Curves and Dissident Points (HILBERT SERIES OF POLARISED VARIETIES)
3<->baskets :<->text1391.htm<->baskets :: Baskets of Singularities (HILBERT SERIES OF POLARISED VARIETIES)
3<->pol-var :<->text1392.htm<->pol-var :: Generic Polarised Varieties (HILBERT SERIES OF POLARISED VARIETIES)
5<->PolarisedVariety(d,W,n) <->text1392.htm#15616<->PolarisedVariety(d,W,n) : RngIntElt,SeqEnum,RngUPolElt-&gt; GRSch
3<->data-access :<->text1392.htm#15617<->data-access :: Accessing the Data (HILBERT SERIES OF POLARISED VARIETIES)
5<->Weights(X) <->text1392.htm#15618<->Weights(X) : GRSch -&gt; SeqEnum
5<->Degree(X) <->text1392.htm#15619<->Degree(X) : GRSch -&gt; FldRatElt
5<->Basket(X) <->text1392.htm#15620<->Basket(X) : GRSch -&gt; Bskt
5<->RawBasket(X) <->text1392.htm#15621<->RawBasket(X) : GRSch -&gt; SeqEnum
5<->Dimension(X) <->text1392.htm#15622<->Dimension(X) : GRSch -&gt; RngIntElt
5<->Codimension(X) <->text1392.htm#15623<->Codimension(X) : GRSch -&gt; RngIntElt
5<->HilbertNumerator(X) <->text1392.htm#15624<->HilbertNumerator(X) : GRSch -&gt; RngUPolElt
5<->NoetherWeights(X) <->text1392.htm#15625<->NoetherWeights(X) : GRSch -&gt; SeqEnum
5<->NoetherNumerator(X) <->text1392.htm#15626<->NoetherNumerator(X) : GRSch -&gt; RngUPolElt
5<->NoetherNormalisation(X) <->text1392.htm#15627<->NoetherNormalisation(X) : GRSch -&gt; Tup
5<->HilbertSeries(X) <->text1392.htm#15628<->HilbertSeries(X) : GRSch -&gt; FldFunRatUElt
5<->InitialCoefficients(X) <->text1392.htm#15629<->InitialCoefficients(X) : GRSch -&gt; SeqEnum
5<->ApparentEquationDegrees :: ApparentCodimension(X) <->text1392.htm#15630<->ApparentEquationDegrees :: ApparentCodimension(X) : GRSch -&gt; RngIntElt
5<->ApparentSyzygyDegrees :: ApparentCodimension(X) <->text1392.htm#15630<->ApparentSyzygyDegrees :: ApparentCodimension(X) : GRSch -&gt; RngIntElt
5<->BettiNumbers :: ApparentCodimension(X) <->text1392.htm#15630<->BettiNumbers :: ApparentCodimension(X) : GRSch -&gt; RngIntElt
5<->ApparentCodimension(X) <->text1392.htm#15630<->ApparentCodimension(X) : GRSch -&gt; RngIntElt
3<->data-access :<->text1392.htm#15617<->data-access :: Accessing the Data (HILBERT SERIES OF POLARISED VARIETIES)
3<->ccc :<->text1392.htm#15631<->ccc :: Generic Creation, Checking,  Changing (HILBERT SERIES OF POLARISED VARIETIES)
5<->X eq Y <->text1392.htm#15632<->X eq Y : GRSch,GRSch -&gt; BoolElt
5<->CheckCodimension(X) <->text1392.htm#15633<->CheckCodimension(X) : GRSch -&gt; BoolElt
5<->FirstWeights(X) <->text1392.htm#15634<->FirstWeights(X) : GRSch -&gt; SeqEnum
5<->IncludeWeight(~X,w) <->text1392.htm#15635<->IncludeWeight(~X,w) : GRSch,RngIntElt -&gt;
5<->RemoveWeight(~X,w) <->text1392.htm#15636<->RemoveWeight(~X,w) : GRSch,RngIntElt -&gt;
5<->MinimiseWeights(~X) <->text1392.htm#15637<->MinimiseWeights(~X) : GRSch -&gt;
3<->ccc :<->text1392.htm#15631<->ccc :: Generic Creation, Checking,  Changing (HILBERT SERIES OF POLARISED VARIETIES)
3<->pol-var :<->text1392.htm<->pol-var :: Generic Polarised Varieties (HILBERT SERIES OF POLARISED VARIETIES)
3<->subcan :<->text1393.htm<->subcan :: Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
3<->subcan-curv-create :<->text1393.htm#15639<->subcan-curv-create :: Creation of Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
5<->SubcanonicalCurve(g,d,Q) <->text1393.htm#15640<->SubcanonicalCurve(g,d,Q) : RngIntElt,RngIntElt,SeqEnum -&gt; GRCrvK
5<->IsSubcanonicalCurve(g,d,Q) <->text1393.htm#15641<->IsSubcanonicalCurve(g,d,Q) : RngIntElt,RngIntElt,SeqEnum -&gt; BoolElt,GRCrvK
5<->HilbertPolynomialOfCurve(g,m) <->text1393.htm#15642<->HilbertPolynomialOfCurve(g,m) : RngIntElt,RngIntElt -&gt; RngUPolElt
5<->IsEffective(C) <->text1393.htm#15643<->IsEffective(C) : GRCrvK -&gt; BoolElt
3<->subcan-curv-create :<->text1393.htm#15639<->subcan-curv-create :: Creation of Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
3<->cata :<->text1393.htm#15644<->cata :: Catalogue of Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
5<->EffectiveSubcanonicalCurves(g,d) <->text1393.htm#15645<->EffectiveSubcanonicalCurves(g,d) : RngIntElt,RngIntElt -> SeqEnum
5<->EffectiveSubcanonicalCurves(g) <->text1393.htm#15645<->EffectiveSubcanonicalCurves(g) : RngIntElt -&gt; SeqEnum
5<->IneffectiveSubcanonicalCurves(g,d) <->text1393.htm#15646<->IneffectiveSubcanonicalCurves(g,d) : RngIntElt,RngIntElt -> SeqEnum
5<->IneffectiveSubcanonicalCurves(g) <->text1393.htm#15646<->IneffectiveSubcanonicalCurves(g) : RngIntElt -&gt; SeqEnum
3<->cata :<->text1393.htm#15644<->cata :: Catalogue of Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
3<->subcan :<->text1393.htm<->subcan :: Subcanonical Curves (HILBERT SERIES OF POLARISED VARIETIES)
3<->k3 :<->text1394.htm<->k3 :: K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-lists :<->text1394.htm#15648<->gr-lists :: Creating and Comparing K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
5<->K3Surface(g,B) <->text1394.htm#15649<->K3Surface(g,B) : RngIntElt,SeqEnum -> GRK3
5<->K3Surface(g,B) <->text1394.htm#15649<->K3Surface(g,B) : RngIntElt,GRBskt -&gt; GRK3
5<->K3Copy(X) <->text1394.htm#15650<->K3Copy(X) : GRK3 -&gt; GRK3
3<->gr-lists :<->text1394.htm#15648<->gr-lists :: Creating and Comparing K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-lists :<->text1394.htm#15651<->gr-lists :: Accessing the Key Data (HILBERT SERIES OF POLARISED VARIETIES)
5<->Genus(X) <->text1394.htm#15652<->Genus(X) : GRK3 -&gt; RngIntElt
5<->TwoGenus(X) <->text1394.htm#15653<->TwoGenus(X) : GRK3 -&gt; RngIntElt
5<->SingularRank(X) <->text1394.htm#15654<->SingularRank(X) : GRK3 -&gt; RngIntElt
5<->AFRNumber(X) <->text1394.htm#15655<->AFRNumber(X) : GRK3 -&gt; RngIntElt
3<->gr-lists :<->text1394.htm#15651<->gr-lists :: Accessing the Key Data (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-lists :<->text1394.htm#15656<->gr-lists :: Modifying K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
5<->IncludeWeight(X,w) <->text1394.htm#15657<->IncludeWeight(X,w) : GRK3,RngIntElt -&gt; GRK3
5<->RemoveWeight(X,w) <->text1394.htm#15658<->RemoveWeight(X,w) : GRK3,RngIntElt -&gt; GRK3
3<->gr-lists :<->text1394.htm#15656<->gr-lists :: Modifying K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->k3 :<->text1394.htm<->k3 :: K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->weilpoly :<->text1395.htm<->weilpoly :: Weil Polynomials (HILBERT SERIES OF POLARISED VARIETIES)
5<->SetVerbose("WeilPolynomials", v) <->text1395.htm#15660<->SetVerbose("WeilPolynomials", v) : MonStgElt, RngIntElt -&gt;
5<->HasAllRootsOnUnitCircle(f) <->text1395.htm#15661<->HasAllRootsOnUnitCircle(f) : RngUPolElt -&gt; BoolElt
5<->FrobeniusTracesToWeilPolynomials(tr, q, i, deg) <->text1395.htm#15662<->FrobeniusTracesToWeilPolynomials(tr, q, i, deg) : SeqEnum, RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->WeilPolynomialToRankBound(f, q) <->text1395.htm#15663<->WeilPolynomialToRankBound(f, q) : RngUPolElt, RngIntElt -&gt; RngIntElt
5<->ArtinTateFormula(f, q, h20) <->text1395.htm#15664<->ArtinTateFormula(f, q, h20) : RngUPolElt, RngIntElt, RngIntElt -&gt; RngIntElt, RngIntElt
5<->WeilPolynomialOverFieldExtension(f, deg) <->text1395.htm#15665<->WeilPolynomialOverFieldExtension(f, deg) : RngUPolElt, RngIntElt -&gt; RngUPolElt
5<->CheckWeilPolynomial(f, q, h20) <->text1395.htm#15666<->CheckWeilPolynomial(f, q, h20) : RngUPolElt, RngIntElt, RngIntElt -&gt; BoolElt
4<->GrdRng_weilpoly (Example H123E5)<->text1395.htm#15667<->GrdRng_weilpoly (Example H123E5)
4<->Example-weilpoly :<->text1395.htm#15667<->Example-weilpoly :: GrdRng_weilpoly (Example H123E5)
4<->GrdRng_weilpoly2 (Example H123E6)<->text1395.htm#15668<->GrdRng_weilpoly2 (Example H123E6)
4<->Example-weilpoly2 :<->text1395.htm#15668<->Example-weilpoly2 :: GrdRng_weilpoly2 (Example H123E6)
3<->weilpoly :<->text1395.htm<->weilpoly :: Weil Polynomials (HILBERT SERIES OF POLARISED VARIETIES)
3<->deg_2_K3_surf :<->text1396.htm<->deg_2_K3_surf :: Point Counting on Degree Two K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
5<->SetVerbose("Degree2K3", v) <->text1396.htm#15670<->SetVerbose("Degree2K3", v) : MonStgElt, RngIntElt -&gt;
5<->WeilPolynomialOfDegree2K3Surface(f6) <->text1396.htm#15671<->WeilPolynomialOfDegree2K3Surface(f6) : RngMPolElt -&gt; RngUPolElt, RngUPolElt
5<->NonOrdinaryPrimes(f6,lim) <->text1396.htm#15672<->NonOrdinaryPrimes(f6,lim) : RngMPolElt, RngIntElt -&gt; SeqEnum
5<->NumbersOfPointsOnDegree2K3Surface(f6,p,d) <->text1396.htm#15673<->NumbersOfPointsOnDegree2K3Surface(f6,p,d) : RngMPolElt, RngIntElt, RngIntElt -&gt; SeqEnum
4<->GrdRng_Degree2K3 (Example H123E7)<->text1396.htm#15674<->GrdRng_Degree2K3 (Example H123E7)
4<->Example-Degree2K3 :<->text1396.htm#15674<->Example-Degree2K3 :: GrdRng_Degree2K3 (Example H123E7)
3<->deg_2_K3_surf :<->text1396.htm<->deg_2_K3_surf :: Point Counting on Degree Two K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->k3db :<->text1397.htm<->k3db :: The K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->k3-use :<->text1397.htm#15676<->k3-use :: Searching the K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
4<->GrdRng_k3db-ex1 (Example H123E8)<->text1397.htm#15677<->GrdRng_k3db-ex1 (Example H123E8)
4<->Example-k3db-ex1 :<->text1397.htm#15677<->Example-k3db-ex1 :: GrdRng_k3db-ex1 (Example H123E8)
5<->K3Database() <->text1397.htm#15678<->K3Database() : -&gt; DB
5<->Number(D,X) <->text1397.htm#15679<->Number(D,X) : DB,GRK3 -&gt; RngIntElt,GRK3
5<->Index(D,X) <->text1397.htm#15680<->Index(D,X) : DB,GRK3 -&gt; RngIntElt,GRK3
4<->GrdRng_gr-k3surface (Example H123E9)<->text1397.htm#15681<->GrdRng_gr-k3surface (Example H123E9)
4<->Example-gr-k3surface :<->text1397.htm#15681<->Example-gr-k3surface :: GrdRng_gr-k3surface (Example H123E9)
3<->k3-use :<->text1397.htm#15676<->k3-use :: Searching the K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-lists :<->text1397.htm#15682<->gr-lists :: Working with the K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
5<->K3Surface(D,i) <->text1397.htm#15683<->K3Surface(D,i) : DB,RngIntElt -&gt; GRK3
5<->K3Surface(D,Q,i) <->text1397.htm#15684<->K3Surface(D,Q,i) : DB,SeqEnum,RngIntElt -&gt; GRK3
5<->K3Surface(D,g,i) <->text1397.htm#15685<->K3Surface(D,g,i) : DB,RngIntElt,RngIntElt -&gt; GRK3
5<->K3Surface(D,g1,g2,i) <->text1397.htm#15686<->K3Surface(D,g1,g2,i) : DB,RngIntElt,RngIntElt,RngIntElt -&gt; GRK3
5<->K3Surface(D,W) <->text1397.htm#15687<->K3Surface(D,W) : DB,SeqEnum -&gt; GRK3
5<->K3Surface(D,g,B) <->text1397.htm#15688<->K3Surface(D,g,B) : DB,RngIntElt,SeqEnum -> GRK3
5<->K3Surface(D,g,B) <->text1397.htm#15688<->K3Surface(D,g,B) : DB,RngIntElt,GRBskt -&gt; GRK3
3<->gr-lists :<->text1397.htm#15682<->gr-lists :: Working with the K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->k3db :<->text1397.htm<->k3db :: The K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->fano :<->text1398.htm<->fano :: Fano 3-folds (HILBERT SERIES OF POLARISED VARIETIES)
4<->GrdRng_gr-fano (Example H123E10)<->text1398.htm#15690<->GrdRng_gr-fano (Example H123E10)
4<->Example-gr-fano :<->text1398.htm#15690<->Example-gr-fano :: GrdRng_gr-fano (Example H123E10)
3<->fano-f12 :: Creation<->text1398.htm#15691<->fano-f12 :: Creation: f=1, 2 or &ge;3 (HILBERT SERIES OF POLARISED VARIETIES)
5<->Fano(f,B,g) <->text1398.htm#15692<->Fano(f,B,g) : RngIntElt,GRBskt,RngIntElt -&gt; GRFano
5<->Fano(f,B) <->text1398.htm#15693<->Fano(f,B) : RngIntElt,GRBskt -&gt; GRFano
5<->FanoIndex(X) <->text1398.htm#15694<->FanoIndex(X) : GRFano -&gt; RngIntElt
5<->FanoGenus(X) <->text1398.htm#15695<->FanoGenus(X) : GRFano -&gt; RngIntElt
5<->FanoBaseGenus(X) <->text1398.htm#15696<->FanoBaseGenus(X) : GRFano -&gt; RngIntElt
5<->BogomolovNumber(X) <->text1398.htm#15697<->BogomolovNumber(X) : GRFano -&gt; FldRatElt
5<->IsBogomolovUnstable(X) <->text1398.htm#15698<->IsBogomolovUnstable(X) : GRFano -&gt; BoolElt
3<->fano-f12 :: Creation<->text1398.htm#15691<->fano-f12 :: Creation: f=1, 2 or &ge;3 (HILBERT SERIES OF POLARISED VARIETIES)
3<->fano-db :<->text1398.htm#15699<->fano-db :: A Preliminary Fano Database (HILBERT SERIES OF POLARISED VARIETIES)
5<->FanoDatabase() <->text1398.htm#15700<->FanoDatabase() : -&gt; DB
5<->Fano(D,i) <->text1398.htm#15701<->Fano(D,i) : DB,RngIntElt -&gt; GRFano
5<->Fano(D,f,i) <->text1398.htm#15702<->Fano(D,f,i) : DB,RngIntElt,RngIntElt -&gt; GRFano
5<->Fano(D,f,Q,i) <->text1398.htm#15703<->Fano(D,f,Q,i) : DB,SeqEnum,RngIntElt -&gt; GRFano
3<->fano-db :<->text1398.htm#15699<->fano-db :: A Preliminary Fano Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->fano :<->text1398.htm<->fano :: Fano 3-folds (HILBERT SERIES OF POLARISED VARIETIES)
3<->cy :<->text1399.htm<->cy :: Calabi--Yau 3-folds (HILBERT SERIES OF POLARISED VARIETIES)
5<->CalabiYau(p1,p2,B) <->text1399.htm#15705<->CalabiYau(p1,p2,B) : RngIntElt,RngIntElt,GRBskt -&gt; GRCY
5<->FindN(X) <->text1399.htm#15706<->FindN(X) : GRCY -&gt; RngIntElt,RngIntElt
5<->FindN(p1,p2,B) <->text1399.htm#15707<->FindN(p1,p2,B) : RngIntElt,RngIntElt,GRBskt -&gt; RngIntElt,RngIntElt
3<->cy :<->text1399.htm<->cy :: Calabi--Yau 3-folds (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makedb :<->text1400.htm<->gr-makedb :: Building Databases (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15709<->gr-makek3db :: The K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15710<->gr-makek3db :: Creating Many K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
5<->CreateK3Data(g,r) <->text1400.htm#15711<->CreateK3Data(g,r) : RngIntElt,RngIntElt -> SeqEnum
5<->CreateK3Data(g,B) <->text1400.htm#15711<->CreateK3Data(g,B) : RngIntElt,SeqEnum -> SeqEnum
5<->CreateK3Data(g) <->text1400.htm#15711<->CreateK3Data(g) : RngIntElt -&gt; SeqEnum
3<->gr-makek3db :<->text1400.htm#15710<->gr-makek3db :: Creating Many K3 Surfaces (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15712<->gr-makek3db :: K3 Surfaces as Records (HILBERT SERIES OF POLARISED VARIETIES)
5<->K3SurfaceToRecord(X) <->text1400.htm#15713<->K3SurfaceToRecord(X) : GRK3 -&gt; Rec
5<->K3Surface(x) <->text1400.htm#15714<->K3Surface(x) : Rec -&gt; GRK3
3<->gr-makek3db :<->text1400.htm#15712<->gr-makek3db :: K3 Surfaces as Records (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15715<->gr-makek3db :: Writing K3 Surfaces to a File (HILBERT SERIES OF POLARISED VARIETIES)
5<->WriteK3Data(Q,F) <->text1400.htm#15716<->WriteK3Data(Q,F) : SeqEnum,MonStgElt -&gt;
3<->gr-makek3db :<->text1400.htm#15715<->gr-makek3db :: Writing K3 Surfaces to a File (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15717<->gr-makek3db :: Writing the Data and Index Files (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15718<->gr-makek3db :: Reading the Raw Data (HILBERT SERIES OF POLARISED VARIETIES)
5<->K3SurfaceRaw(D,Q,i) <->text1400.htm#15719<->K3SurfaceRaw(D,Q,i) : DB,SeqEnum,RngIntElt -> Tup
5<->K3SurfaceRaw(D,i) <->text1400.htm#15719<->K3SurfaceRaw(D,i) : DB,RngIntElt -&gt; Tup
5<->K3Surface(x) <->text1400.htm#15720<->K3Surface(x) : Tup -&gt; GRK3
3<->gr-makek3db :<->text1400.htm#15718<->gr-makek3db :: Reading the Raw Data (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makek3db :<->text1400.htm#15709<->gr-makek3db :: The K3 Database (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makenewdb :<->text1400.htm#15721<->gr-makenewdb :: Making New Databases (HILBERT SERIES OF POLARISED VARIETIES)
3<->gr-makedb :<->text1400.htm<->gr-makedb :: Building Databases (HILBERT SERIES OF POLARISED VARIETIES)
3<->grd-rng :<->text1388.htm<->grd-rng :: HILBERT SERIES OF POLARISED VARIETIES
3<->toric :<->text1403.htm<->toric :: TORIC VARIETIES
3<->introduction :<->text1404.htm<->introduction :: Introduction and First Examples (TORIC VARIETIES)
3<->projective-plane :<->text1404.htm#15726<->projective-plane :: The Projective Plane as a Toric Variety (TORIC VARIETIES)
4<->Toric_toric-example1 (Example H124E1)<->text1404.htm#15727<->Toric_toric-example1 (Example H124E1)
4<->Example-toric-example1 :<->text1404.htm#15727<->Example-toric-example1 :: Toric_toric-example1 (Example H124E1)
3<->projective-plane :<->text1404.htm#15726<->projective-plane :: The Projective Plane as a Toric Variety (TORIC VARIETIES)
3<->non-projective-variety :<->text1404.htm#15728<->non-projective-variety :: Resolution of a Nonprojective Toric Variety (TORIC VARIETIES)
4<->Toric_toric-example10 (Example H124E2)<->text1404.htm#15729<->Toric_toric-example10 (Example H124E2)
4<->Example-toric-example10 :<->text1404.htm#15729<->Example-toric-example10 :: Toric_toric-example10 (Example H124E2)
4<->Toric_toric-divisor-scroll-example (Example H124E3)<->text1404.htm#15730<->Toric_toric-divisor-scroll-example (Example H124E3)
4<->Example-toric-divisor-scroll-example :<->text1404.htm#15730<->Example-toric-divisor-scroll-example :: Toric_toric-divisor-scroll-example (Example H124E3)
4<->Toric_toric-fano-index-example (Example H124E4)<->text1404.htm#15731<->Toric_toric-fano-index-example (Example H124E4)
4<->Example-toric-fano-index-example :<->text1404.htm#15731<->Example-toric-fano-index-example :: Toric_toric-fano-index-example (Example H124E4)
3<->non-projective-variety :<->text1404.htm#15728<->non-projective-variety :: Resolution of a Nonprojective Toric Variety (TORIC VARIETIES)
3<->cox-ring-example :<->text1404.htm#15732<->cox-ring-example :: The Cox Ring of a Toric Variety (TORIC VARIETIES)
4<->Toric_cox-ring-example (Example H124E5)<->text1404.htm#15733<->Toric_cox-ring-example (Example H124E5)
4<->Example-cox-ring-example :<->text1404.htm#15733<->Example-cox-ring-example :: Toric_cox-ring-example (Example H124E5)
3<->cox-ring-example :<->text1404.htm#15732<->cox-ring-example :: The Cox Ring of a Toric Variety (TORIC VARIETIES)
3<->introduction :<->text1404.htm<->introduction :: Introduction and First Examples (TORIC VARIETIES)
3<->toric-fans :<->text1405.htm<->toric-fans :: Fans in Toric Lattices (TORIC VARIETIES)
3<->toric-fans-constructors :<->text1405.htm#15735<->toric-fans-constructors :: Construction of Fans (TORIC VARIETIES)
5<->Fan(Q) <->text1405.htm#15736<->Fan(Q) : [TorCon] -&gt; TorFan
5<->Fan(R,S) <->text1405.htm#15737<->Fan(R,S) : [TorLatElt],[[RngIntElt]] -&gt; TorFan
5<->Fan(C) <->text1405.htm#15738<->Fan(C) : TorCon -&gt; TorFan
5<->FanOfAffineSpace(n) <->text1405.htm#15739<->FanOfAffineSpace(n) : RngIntElt -&gt; TorFac
5<->FanOfWPS(W) <->text1405.htm#15740<->FanOfWPS(W) : SeqEnum -&gt; TorFan
5<->[Future release] FanOfProjectiveSpace(n) <->text1405.htm#15741<->[Future release] FanOfProjectiveSpace(n) : RngIntElt -&gt; TorFac
5<->FanOfFakeProjectiveSpace(W,Q) <->text1405.htm#15742<->FanOfFakeProjectiveSpace(W,Q) : SeqEnum, SeqEnum -&gt; TorFan
5<->ZeroFan(L) <->text1405.htm#15743<->ZeroFan(L) : TorLat -&gt; TorFan
5<->NormalFan(F,C) <->text1405.htm#15744<->NormalFan(F,C) : TorFan,TorCon -&gt; TorFan,Map
5<->DualFan :: NormalFan(P) <->text1405.htm#15745<->DualFan :: NormalFan(P) : TorPol -&gt; TorFan
5<->NormalFan(P) <->text1405.htm#15745<->NormalFan(P) : TorPol -&gt; TorFan
5<->SpanningFan(P) <->text1405.htm#15746<->SpanningFan(P) : TorPol -&gt; TorFan
4<->Toric_toric-spanning-fan-example (Example H124E6)<->text1405.htm#15747<->Toric_toric-spanning-fan-example (Example H124E6)
4<->Example-toric-spanning-fan-example :<->text1405.htm#15747<->Example-toric-spanning-fan-example :: Toric_toric-spanning-fan-example (Example H124E6)
5<->FanWithWeights(W) <->text1405.htm#15748<->FanWithWeights(W) : SeqEnum -&gt; TorFan
5<->Blowup(F,v)<->text1405.htm#15749<->Blowup(F,v): TorFan,TorLatElt -&gt; TorFan
4<->Toric_toric-fan-with-weights-example (Example H124E7)<->text1405.htm#15750<->Toric_toric-fan-with-weights-example (Example H124E7)
4<->Example-toric-fan-with-weights-example :<->text1405.htm#15750<->Example-toric-fan-with-weights-example :: Toric_toric-fan-with-weights-example (Example H124E7)
5<->IsInSupport(v,F) <->text1405.htm#15751<->IsInSupport(v,F) : TorLatElt,TorFan -&gt; BoolElt,RngIntElt
5<->OneSkeleton(F) <->text1405.htm#15752<->OneSkeleton(F) : TorFan -&gt; TorFan
5<->* :: Fan(F1,F2) <->text1405.htm#15753<->* :: Fan(F1,F2) : TorFan,TorFan -&gt; TorFan
5<->Fan(Q) <->text1405.htm#15753<->Fan(Q) : [TorFan] -> TorFan
5<->^ :: Fan(F1,F2) <->text1405.htm#15753<->^ :: Fan(F1,F2) : TorFan,TorFan -&gt; TorFan
5<->Fan(F1,F2) <->text1405.htm#15753<->Fan(F1,F2) : TorFan,TorFan -&gt; TorFan
5<->F eq G <->text1405.htm#15754<->F eq G : TorFan,TorFan -&gt; BoolElt
3<->toric-fans-constructors :<->text1405.htm#15735<->toric-fans-constructors :: Construction of Fans (TORIC VARIETIES)
3<->toric-fans-components :<->text1405.htm#15755<->toric-fans-components :: Components of Fans (TORIC VARIETIES)
5<->Skeleton(F,n) <->text1405.htm#15756<->Skeleton(F,n) : TorFan,RngIntElt -&gt; TorFan
5<->C in F <->text1405.htm#15757<->C in F : TorCon,TorFan -&gt; BoolElt
5<->Cones(F) <->text1405.htm#15758<->Cones(F) : TorFan -&gt; SeqEnum
5<->Cones(F,i) <->text1405.htm#15759<->Cones(F,i) : TorFan,RngIntElt -&gt; SeqEnum
5<->ConesOfCodimension(F,i) <->text1405.htm#15760<->ConesOfCodimension(F,i) : TorFan,RngIntElt -&gt; SeqEnum
5<->MaxCones(F) <->text1405.htm#15761<->MaxCones(F) : TorFan -&gt; SeqEnum
5<->AllCones(F) <->text1405.htm#15762<->AllCones(F) : TorFan -&gt; SeqEnum
5<->Cone(F,i) <->text1405.htm#15763<->Cone(F,i) : TorFan,RngIntElt -&gt; TorCon
5<->Cone(F,S) <->text1405.htm#15764<->Cone(F,S) : TorFan,[RngIntElt] -&gt; TorCon
5<->NonSimplicialCones(F) <->text1405.htm#15765<->NonSimplicialCones(F) : TorFan -&gt; SeqEnum, SeqEnum
5<->SingularCones(F) <->text1405.htm#15766<->SingularCones(F) : TorFan -&gt; SeqEnum,SeqEnum
4<->Toric_toric-singular-cones-example (Example H124E8)<->text1405.htm#15767<->Toric_toric-singular-cones-example (Example H124E8)
4<->Example-toric-singular-cones-example :<->text1405.htm#15767<->Example-toric-singular-cones-example :: Toric_toric-singular-cones-example (Example H124E8)
5<->ConeIndices(F) <->text1405.htm#15768<->ConeIndices(F) : TorFan -&gt; SeqEnum
5<->ConeIndices(F,C) <->text1405.htm#15769<->ConeIndices(F,C) : TorFan, TorCon -&gt; SeqEnum
5<->ConeIntersection(F,C1,C2) <->text1405.htm#15770<->ConeIntersection(F,C1,C2) : TorFan,TorCon,TorCon -&gt; TorCon
5<->Face(F,C) <->text1405.htm#15771<->Face(F,C) : TorFan,TorCon -&gt; TorCon
5<->OuterNormals :: InnerNormals(F) <->text1405.htm#15772<->OuterNormals :: InnerNormals(F) : TorFan -&gt; SeqEnum
5<->InnerNormals(F) <->text1405.htm#15772<->InnerNormals(F) : TorFan -&gt; SeqEnum
5<->DualFaceInDualFan(P,Q) <->text1405.htm#15773<->DualFaceInDualFan(P,Q) : TorPol,[RngIntElt] -&gt; TorFan
5<->Rays(F) <->text1405.htm#15774<->Rays(F) : TorFan -&gt; SeqEnum
5<->Ray(F,i) <->text1405.htm#15775<->Ray(F,i) : TorFan,RngIntElt -&gt; TorLatElt
5<->AllRays(F) <->text1405.htm#15776<->AllRays(F) : TorFan -&gt; SeqEnum
5<->PureRays(F) <->text1405.htm#15777<->PureRays(F) : TorFan -&gt; SeqEnum
5<->PureRayIndices(F) <->text1405.htm#15778<->PureRayIndices(F) : TorFan -&gt; SeqEnum
5<->CreateVirtualRays(S) <->text1405.htm#15779<->CreateVirtualRays(S) : [TorLatElt] -&gt; SeqEnum
5<->VirtualRays(F) <->text1405.htm#15780<->VirtualRays(F) : TorFan -&gt; SeqEnum
5<->VirtualRayIndices(F) <->text1405.htm#15781<->VirtualRayIndices(F) : TorFan -&gt; SeqEnum
3<->toric-fans-components :<->text1405.htm#15755<->toric-fans-components :: Components of Fans (TORIC VARIETIES)
3<->toric-fans-properties :<->text1405.htm#15782<->toric-fans-properties :: Properties of Fans (TORIC VARIETIES)
5<->Ambient(F) <->text1405.htm#15783<->Ambient(F) : TorFan -&gt; TorLat
5<->IsComplete(F) <->text1405.htm#15784<->IsComplete(F) : TorFan -&gt; BoolElt
5<->IsSingular(F) <->text1405.htm#15785<->IsSingular(F) : TorFan -&gt; BoolElt
5<->IsNonsingular :: IsNonSingular(F) <->text1405.htm#15786<->IsNonsingular :: IsNonSingular(F) : TorFan -&gt; BoolElt
5<->IsNonSingular(F) <->text1405.htm#15786<->IsNonSingular(F) : TorFan -&gt; BoolElt
5<->IsQFactorial(F) <->text1405.htm#15787<->IsQFactorial(F) : TorFan -&gt; BoolElt
5<->IsIsolated(F) <->text1405.htm#15788<->IsIsolated(F) : TorFan -&gt; BoolElt
5<->IsTerminal(F) <->text1405.htm#15789<->IsTerminal(F) : TorFan -&gt; BoolElt
5<->IsCanonical(F) <->text1405.htm#15790<->IsCanonical(F) : TorFan -&gt; BoolElt
5<->IsGorenstein(F) <->text1405.htm#15791<->IsGorenstein(F) : TorFan -&gt; BoolElt
5<->IsQGorenstein(F) <->text1405.htm#15792<->IsQGorenstein(F) : TorFan -&gt; BoolElt
3<->toric-fans-properties :<->text1405.htm#15782<->toric-fans-properties :: Properties of Fans (TORIC VARIETIES)
3<->toric-fan-ops :<->text1405.htm#15793<->toric-fan-ops :: Maps of Fans (TORIC VARIETIES)
5<->F @ f <->text1405.htm#15794<->F @ f : TorFan,Map -&gt; TorFan
5<->SimplicialSubdivision(C) <->text1405.htm#15795<->SimplicialSubdivision(C) : TorCon -> TorFan
5<->SimplicialSubdivision(F) <->text1405.htm#15795<->SimplicialSubdivision(F) : TorFan -&gt; TorFan
4<->Toric_toric-simplicial-example (Example H124E9)<->text1405.htm#15796<->Toric_toric-simplicial-example (Example H124E9)
4<->Example-toric-simplicial-example :<->text1405.htm#15796<->Example-toric-simplicial-example :: Toric_toric-simplicial-example (Example H124E9)
5<->IsFanMap(F1,F2) <->text1405.htm#15797<->IsFanMap(F1,F2) : TorFan,TorFan -&gt; BoolElt
5<->IsFanMap(F1,F2,f) <->text1405.htm#15798<->IsFanMap(F1,F2,f) : TorFan,TorFan,Map -&gt; BoolElt
5<->ResolveFanMap(F1,F2) <->text1405.htm#15799<->ResolveFanMap(F1,F2) : TorFan,TorFan -&gt; TorFan
5<->Resolution(F) <->text1405.htm#15800<->Resolution(F) : TorFan -&gt; TorFan
5<->Terminalisation(F) <->text1405.htm#15801<->Terminalisation(F) : TorFan -&gt; TorFan
5<->Canonicalisation(F) <->text1405.htm#15802<->Canonicalisation(F) : TorFan -&gt; TorFan
3<->toric-fan-ops :<->text1405.htm#15793<->toric-fan-ops :: Maps of Fans (TORIC VARIETIES)
3<->toric-fans :<->text1405.htm<->toric-fans :: Fans in Toric Lattices (TORIC VARIETIES)
3<->toric-cones-and-polyhedra :<->text1406.htm<->toric-cones-and-polyhedra :: Geometrical Properties of  Cones and Polyhedra (TORIC VARIETIES)
5<->IsSingular(C) <->text1406.htm#15804<->IsSingular(C) : TorCon -&gt; BoolElt
5<->IsNonsingular :: IsNonSingular(C) <->text1406.htm#15805<->IsNonsingular :: IsNonSingular(C) : TorCon -&gt; BoolElt
5<->IsNonSingular(C) <->text1406.htm#15805<->IsNonSingular(C) : TorCon -&gt; BoolElt
5<->IsSmooth(P) <->text1406.htm#15806<->IsSmooth(P) : TorPol -&gt; BoolElt
5<->IsGorenstein(C) <->text1406.htm#15807<->IsGorenstein(C) : TorCon -&gt; BoolElt
5<->IsReflexive(P) <->text1406.htm#15808<->IsReflexive(P) : TorPol -&gt; BoolElt
5<->IsQGorenstein(C) <->text1406.htm#15809<->IsQGorenstein(C) : TorCon -&gt; BoolElt
5<->GorensteinIndex(C) <->text1406.htm#15810<->GorensteinIndex(C) : TorCon -&gt; RngIntElt,TorLatElt
5<->GorensteinIndex(P) <->text1406.htm#15811<->GorensteinIndex(P) : TorPol -&gt; RngIntElt
5<->IsIsolated(C) <->text1406.htm#15812<->IsIsolated(C) : TorCon -&gt; BoolElt
5<->IsSimplicial :: IsQFactorial(C) <->text1406.htm#15813<->IsSimplicial :: IsQFactorial(C) : TorCon -&gt; BoolElt
5<->IsQFactorial(C) <->text1406.htm#15813<->IsQFactorial(C) : TorCon -&gt; BoolElt
5<->IsTerminal(C) <->text1406.htm#15814<->IsTerminal(C) : TorCon -&gt; BoolElt
5<->IsCanonical(C) <->text1406.htm#15815<->IsCanonical(C) : TorCon -&gt; BoolElt
5<->IsFano(P) <->text1406.htm#15816<->IsFano(P) : TorPol -&gt; BoolElt
4<->Toric_toric-terminal-polytope-example (Example H124E10)<->text1406.htm#15817<->Toric_toric-terminal-polytope-example (Example H124E10)
4<->Example-toric-terminal-polytope-example :<->text1406.htm#15817<->Example-toric-terminal-polytope-example :: Toric_toric-terminal-polytope-example (Example H124E10)
3<->toric-cones-and-polyhedra :<->text1406.htm<->toric-cones-and-polyhedra :: Geometrical Properties of  Cones and Polyhedra (TORIC VARIETIES)
3<->toric-varieties :<->text1407.htm<->toric-varieties :: Toric Varieties (TORIC VARIETIES)
3<->toric-torvar :<->text1407.htm#15819<->toric-torvar :: Constructors for Toric Varieties (TORIC VARIETIES)
5<->ToricVariety(k,n) <->text1407.htm#15820<->ToricVariety(k,n) : Fld,RngIntElt -&gt; TorVar
5<->ToricVariety(k,Z) <->text1407.htm#15821<->ToricVariety(k,Z) : Fld,[RngIntElt] -&gt; TorVar
5<->ToricVariety(k,Z,Q) <->text1407.htm#15822<->ToricVariety(k,Z,Q) : Fld,[RngIntElt],[FldRatElt] -&gt; TorVar
5<->ToricVariety(k,M,v) <->text1407.htm#15823<->ToricVariety(k,M,v) : Fld,[[RngIntElt]],[RngIntElt] -&gt; TorVar
4<->Toric_toric-cox-example2 (Example H124E11)<->text1407.htm#15824<->Toric_toric-cox-example2 (Example H124E11)
4<->Example-toric-cox-example2 :<->text1407.htm#15824<->Example-toric-cox-example2 :: Toric_toric-cox-example2 (Example H124E11)
5<->ToricVariety(k) <->text1407.htm#15825<->ToricVariety(k) : Fld -&gt; TorVar
5<->ProjectiveSpaceAsToricVariety :: ProjectiveSpace(k,n) <->text1407.htm#15826<->ProjectiveSpaceAsToricVariety :: ProjectiveSpace(k,n) : Fld,RngIntElt -&gt; Prj
5<->WeightedProjectiveSpace :: ProjectiveSpace(k,n) <->text1407.htm#15826<->WeightedProjectiveSpace :: ProjectiveSpace(k,n) : Fld,RngIntElt -&gt; Prj
5<->WPS :: ProjectiveSpace(k,n) <->text1407.htm#15826<->WPS :: ProjectiveSpace(k,n) : Fld,RngIntElt -&gt; Prj
5<->ProjectiveSpace(k,n) <->text1407.htm#15826<->ProjectiveSpace(k,n) : Fld,RngIntElt -&gt; Prj
5<->ProjectiveSpaceAsToricVariety :: ProjectiveSpace(k,W) <->text1407.htm#15827<->ProjectiveSpaceAsToricVariety :: ProjectiveSpace(k,W) : Fld,[RngIntElt] -&gt; Prj
5<->WeightedProjectiveSpace :: ProjectiveSpace(k,W) <->text1407.htm#15827<->WeightedProjectiveSpace :: ProjectiveSpace(k,W) : Fld,[RngIntElt] -&gt; Prj
5<->WPS :: ProjectiveSpace(k,W) <->text1407.htm#15827<->WPS :: ProjectiveSpace(k,W) : Fld,[RngIntElt] -&gt; Prj
5<->FakeProjectiveSpace :: ProjectiveSpace(k,W) <->text1407.htm#15827<->FakeProjectiveSpace :: ProjectiveSpace(k,W) : Fld,[RngIntElt] -&gt; Prj
5<->ProjectiveSpace(k,W) <->text1407.htm#15827<->ProjectiveSpace(k,W) : Fld,[RngIntElt] -&gt; Prj
5<->AbsoluteRationalScroll(k,S) <->text1407.htm#15828<->AbsoluteRationalScroll(k,S) : Fld,[RngIntElt] -&gt; TorVar
5<->RationalScroll(k,s,A) <->text1407.htm#15829<->RationalScroll(k,s,A) : Fld, RngIntElt, [RngIntElt] -&gt; TorVar
5<->BigTorus(k,N) <->text1407.htm#15830<->BigTorus(k,N) : Rng,TorLat -&gt; TorVar
5<->BigTorus(X) <->text1407.htm#15831<->BigTorus(X) : TorVar -&gt; TorVar, TorMap, TorMap
5<->RestrictionToSubtorus(Z) <->text1407.htm#15832<->RestrictionToSubtorus(Z) : Sch -&gt; Sch, TorMap
3<->toric-torvar :<->text1407.htm#15819<->toric-torvar :: Constructors for Toric Varieties (TORIC VARIETIES)
3<->toric-torvar :<->text1407.htm#15833<->toric-torvar :: Toric Varieties and their Fans (TORIC VARIETIES)
5<->ToricVariety(k,F) <->text1407.htm#15834<->ToricVariety(k,F) : Fld,TorFan -&gt; TorVar
5<->Fan(X) <->text1407.htm#15835<->Fan(X) : TorVar -&gt; TorLat
5<->Rays(X) <->text1407.htm#15836<->Rays(X) : TorVar -&gt; SeqEnum
5<->OneParameterSubgroupsLattice(X) <->text1407.htm#15837<->OneParameterSubgroupsLattice(X) : TorVar -&gt; TorLat
5<->MonomialLattice(X) <->text1407.htm#15838<->MonomialLattice(X) : TorVar -&gt; TorLat
5<->CoxMonomialLattice(X) <->text1407.htm#15839<->CoxMonomialLattice(X) : TorVar -&gt; TorLat
5<->PicardLattice(X) <->text1407.htm#15840<->PicardLattice(X) : TorVar -&gt; TorLat
5<->DivisorClassLattice(X) <->text1407.htm#15841<->DivisorClassLattice(X) : TorVar -&gt; TorLat
5<->IrrelevantIdeal(X) <->text1407.htm#15842<->IrrelevantIdeal(X) : TorVar -&gt; SeqEnum
5<->Gradings(X) <->text1407.htm#15843<->Gradings(X) : Sch -&gt; SeqEnum
5<->NumberOfGradings(X) <->text1407.htm#15844<->NumberOfGradings(X) : Sch -&gt; RngIntElt
5<->QuotientGradings(X) <->text1407.htm#15845<->QuotientGradings(X) : TorVar -&gt; SeqEnum
5<->NumberOfQuotientGradings(X) <->text1407.htm#15846<->NumberOfQuotientGradings(X) : TorVar -&gt; RngIntElt
3<->toric-torvar :<->text1407.htm#15833<->toric-torvar :: Toric Varieties and their Fans (TORIC VARIETIES)
3<->toric-properties :<->text1407.htm#15847<->toric-properties :: Properties of Toric Varieties (TORIC VARIETIES)
5<->IsSingular(X) <->text1407.htm#15848<->IsSingular(X) : TorVar -&gt; BoolElt
5<->IsNonsingular :: IsNonSingular(X) <->text1407.htm#15849<->IsNonsingular :: IsNonSingular(X) : TorVar -&gt; BoolElt
5<->IsNonSingular(X) <->text1407.htm#15849<->IsNonSingular(X) : TorVar -&gt; BoolElt
5<->IsGorenstein(X) <->text1407.htm#15850<->IsGorenstein(X) : TorVar -&gt; BoolElt
5<->IsQGorenstein(X) <->text1407.htm#15851<->IsQGorenstein(X) : TorVar -&gt; BoolElt
5<->IsQFactorial(X) <->text1407.htm#15852<->IsQFactorial(X) : TorVar -&gt; BoolElt
5<->IsIsolated(X) <->text1407.htm#15853<->IsIsolated(X) : TorVar -&gt; BoolElt
5<->IsTerminal(X) <->text1407.htm#15854<->IsTerminal(X) : TorVar -&gt; BoolElt
5<->IsCanonical(X) <->text1407.htm#15855<->IsCanonical(X) : TorVar -&gt; BoolElt
5<->IsComplete(X) <->text1407.htm#15856<->IsComplete(X) : TorVar -&gt; BoolElt
5<->IsProjective(X) <->text1407.htm#15857<->IsProjective(X) : TorVar -&gt; BoolElt
5<->IsFano(X) <->text1407.htm#15858<->IsFano(X) : TorVar -&gt; BoolElt
5<->IsWeakFano(X) <->text1407.htm#15859<->IsWeakFano(X) : TorVar -&gt; BoolElt
5<->IsFakeWeightedProjectiveSpace(X) <->text1407.htm#15860<->IsFakeWeightedProjectiveSpace(X) : TorVar -&gt; BoolElt
5<->IsWeightedProjectiveSpace(X) <->text1407.htm#15861<->IsWeightedProjectiveSpace(X) : TorVar -&gt; BoolElt
3<->toric-properties :<->text1407.htm#15847<->toric-properties :: Properties of Toric Varieties (TORIC VARIETIES)
3<->toric-patches :<->text1407.htm#15862<->toric-patches :: Affine Patches on Toric Varieties (TORIC VARIETIES)
5<->ToricAffinePatch(X,i) <->text1407.htm#15863<->ToricAffinePatch(X,i) : TorVar,RngIntElt -&gt; TorVar,TorMap
5<->ToricAffinePatch(X,S) <->text1407.htm#15864<->ToricAffinePatch(X,S) : TorVar,[RngMPolElt] -> TorVar,TorMap
5<->ToricAffinePatch(X,S) <->text1407.htm#15864<->ToricAffinePatch(X,S) : TorVar,[RngIntElt] -&gt; TorVar,TorMap
3<->toric-patches :<->text1407.htm#15862<->toric-patches :: Affine Patches on Toric Varieties (TORIC VARIETIES)
3<->toric-varieties :<->text1407.htm<->toric-varieties :: Toric Varieties (TORIC VARIETIES)
3<->cox-rings :<->text1408.htm<->cox-rings :: Cox Rings (TORIC VARIETIES)
3<->toric-cox :<->text1408.htm#15866<->toric-cox :: The Cox Ring of a Toric Variety (TORIC VARIETIES)
5<->CoxRing(X) <->text1408.htm#15867<->CoxRing(X) : TorVar -&gt; RngCox
5<->CoxRing(k,F) <->text1408.htm#15868<->CoxRing(k,F) : Fld,TorFan -&gt; RngCox
4<->Toric_toric-cox-example1 (Example H124E12)<->text1408.htm#15869<->Toric_toric-cox-example1 (Example H124E12)
4<->Example-toric-cox-example1 :<->text1408.htm#15869<->Example-toric-cox-example1 :: Toric_toric-cox-example1 (Example H124E12)
4<->Toric_toric-cox-example2 (Example H124E13)<->text1408.htm#15870<->Toric_toric-cox-example2 (Example H124E13)
4<->Example-toric-cox-example2 :<->text1408.htm#15870<->Example-toric-cox-example2 :: Toric_toric-cox-example2 (Example H124E13)
3<->toric-cox :<->text1408.htm#15866<->toric-cox :: The Cox Ring of a Toric Variety (TORIC VARIETIES)
3<->toric-cox-ring :<->text1408.htm#15871<->toric-cox-ring :: Cox Rings in Their Own Right (TORIC VARIETIES)
5<->CoxRing(R,B,Z,Q) <->text1408.htm#15872<->CoxRing(R,B,Z,Q) : RngMPol,SeqEnum,SeqEnum,SeqEnum -&gt; RngCox
5<->C1 eq C2 <->text1408.htm#15873<->C1 eq C2 : RngCox,RngCox -&gt; BoolElt
5<->CoefficientRing :: BaseRing(C) <->text1408.htm#15874<->CoefficientRing :: BaseRing(C) : RngCox -&gt; Fld
5<->BaseRing(C) <->text1408.htm#15874<->BaseRing(C) : RngCox -&gt; Fld
5<->UnderlyingRing(C) <->text1408.htm#15875<->UnderlyingRing(C) : RngCox -&gt; RngMPol
5<->Length(C) <->text1408.htm#15876<->Length(C) : RngCox -&gt; RngIntElt
5<->IrrelevantIdeal(C) <->text1408.htm#15877<->IrrelevantIdeal(C) : RngCox -&gt; SeqEnum
5<->IrrelevantComponents(C) <->text1408.htm#15878<->IrrelevantComponents(C) : RngCox -&gt; SeqEnum
5<->IrrelevantGenerators(C) <->text1408.htm#15879<->IrrelevantGenerators(C) : RngCox -&gt; SeqEnum
5<->Gradings(C) <->text1408.htm#15880<->Gradings(C) : RngCox -&gt; RngIntElt
5<->NumberOfGradings(C) <->text1408.htm#15881<->NumberOfGradings(C) : RngCox -&gt; RngIntElt
5<->QuotientGradings(C) <->text1408.htm#15882<->QuotientGradings(C) : RngCox -&gt; RngIntElt
5<->NumberOfQuotientGradings(C) <->text1408.htm#15883<->NumberOfQuotientGradings(C) : RngCox -&gt; RngIntElt
5<->C . i <->text1408.htm#15884<->C . i : RngCox, RngInt -&gt; RngMPolElt
5<->AssignNames(~C, S) <->text1408.htm#15885<->AssignNames(~C, S) : RngCox, [MonStgElt] -&gt;
5<->Name(C,i) <->text1408.htm#15886<->Name(C,i) : RngCox,RngIntElt -&gt; RngMPolElt
3<->toric-cox-ring :<->text1408.htm#15871<->toric-cox-ring :: Cox Rings in Their Own Right (TORIC VARIETIES)
3<->toric-cox-to-geometry :<->text1408.htm#15887<->toric-cox-to-geometry :: Recovering a Toric Variety From a Cox Ring (TORIC VARIETIES)
5<->ToricVariety(C) <->text1408.htm#15888<->ToricVariety(C) : RngCox -&gt; TorVar
4<->Toric_toric-from-cox-example (Example H124E14)<->text1408.htm#15889<->Toric_toric-from-cox-example (Example H124E14)
4<->Example-toric-from-cox-example :<->text1408.htm#15889<->Example-toric-from-cox-example :: Toric_toric-from-cox-example (Example H124E14)
5<->Fan(C) <->text1408.htm#15890<->Fan(C) : RngCox -&gt; TorFan
5<->CoxMonomialLattice(C) <->text1408.htm#15891<->CoxMonomialLattice(C) : RngCox -&gt; TorLat
5<->BasisOfRationalFunctionField(X) <->text1408.htm#15892<->BasisOfRationalFunctionField(X) : TorVar -&gt; SeqEnum
5<->BasisOfDegree0CoxMonomials(X) <->text1408.htm#15893<->BasisOfDegree0CoxMonomials(X) : TorVar -&gt; SeqEnum
5<->DivisorClassLattice(C) <->text1408.htm#15894<->DivisorClassLattice(C) : RngCox -&gt; TorLat
5<->MonomialLattice(C) <->text1408.htm#15895<->MonomialLattice(C) : RngCox -&gt; TorLat
5<->OneParameterSubgroupsLattice(C) <->text1408.htm#15896<->OneParameterSubgroupsLattice(C) : RngCox -&gt; TorLat
5<->RayLattice(C) <->text1408.htm#15897<->RayLattice(C) : RngCox -&gt; TorLat
5<->DivisorClassGroup(C) <->text1408.htm#15898<->DivisorClassGroup(C) : RngCox -&gt; TorLat
5<->RayLatticeMap(C) <->text1408.htm#15899<->RayLatticeMap(C) : RngCox -&gt; Map
5<->WeilToClassLatticesMap :: WeilToClassGroupsMap(C) <->text1408.htm#15900<->WeilToClassLatticesMap :: WeilToClassGroupsMap(C) : RngCox -&gt; Map
5<->WeilToClassGroupsMap(C) <->text1408.htm#15900<->WeilToClassGroupsMap(C) : RngCox -&gt; Map
3<->toric-cox-to-geometry :<->text1408.htm#15887<->toric-cox-to-geometry :: Recovering a Toric Variety From a Cox Ring (TORIC VARIETIES)
3<->cox-rings :<->text1408.htm<->cox-rings :: Cox Rings (TORIC VARIETIES)
3<->toric-divisors :<->text1409.htm<->toric-divisors :: Invariant Divisors and  Riemann-Roch Spaces (TORIC VARIETIES)
3<->toric-div-group :<->text1409.htm#15902<->toric-div-group :: Divisor Group (TORIC VARIETIES)
5<->DivisorGroup(X) <->text1409.htm#15903<->DivisorGroup(X) : TorVar -&gt; DivTor
5<->ToricVariety(G) <->text1409.htm#15904<->ToricVariety(G) : DivTor -&gt; TorVar
5<->G1 eq G2 <->text1409.htm#15905<->G1 eq G2 : DivTor,DivTor -&gt; BoolElt
5<->Divisor(G,S) <->text1409.htm#15906<->Divisor(G,S) : DivTor,[FldRatElt] -> DivTorElt
5<->Divisor(G,S) <->text1409.htm#15906<->Divisor(G,S) : DivTor,[RngIntElt] -&gt; DivTorElt
5<->Divisor(G,i) <->text1409.htm#15907<->Divisor(G,i) : DivTor,RngIntElt -&gt; DivTorElt
3<->toric-div-group :<->text1409.htm#15902<->toric-div-group :: Divisor Group (TORIC VARIETIES)
3<->toric-div :<->text1409.htm#15908<->toric-div :: Constructing Invariant Divisors (TORIC VARIETIES)
5<->Divisor(X,S) <->text1409.htm#15909<->Divisor(X,S) : TorVar,[RngIntElt] -&gt; DivTorElt
5<->Divisor(X,i) <->text1409.htm#15910<->Divisor(X,i) : TorVar,RngIntElt -&gt; DivTorElt
5<->Divisor(X,f) <->text1409.htm#15911<->Divisor(X,f) : TorVar,RngMPolElt -&gt; DivTorElt
5<->Divisor(X,m) <->text1409.htm#15912<->Divisor(X,m) : TorVar,TorLatElt -&gt; DivTorElt
5<->ZeroDivisor(X) <->text1409.htm#15913<->ZeroDivisor(X) : TorVar -&gt; DivTorElt
5<->Representative(X,m) <->text1409.htm#15914<->Representative(X,m) : TorVar,ModEDElt -&gt; DivTorElt
5<->Representative(X,m) <->text1409.htm#15915<->Representative(X,m) : TorVar,TorLatElt -&gt; DivTorElt
5<->CanonicalDivisor(X) <->text1409.htm#15916<->CanonicalDivisor(X) : TorVar -&gt; DivTorElt
5<->CanonicalClass(X) <->text1409.htm#15917<->CanonicalClass(X) : TorVar -&gt; DivTorElt
4<->Toric_toric-kawamata-blowup-example (Example H124E15)<->text1409.htm#15918<->Toric_toric-kawamata-blowup-example (Example H124E15)
4<->Example-toric-kawamata-blowup-example :<->text1409.htm#15918<->Example-toric-kawamata-blowup-example :: Toric_toric-kawamata-blowup-example (Example H124E15)
3<->toric-div :<->text1409.htm#15908<->toric-div :: Constructing Invariant Divisors (TORIC VARIETIES)
3<->toric-div :<->text1409.htm#15919<->toric-div :: Properties of Divisors (TORIC VARIETIES)
5<->Variety(D) <->text1409.htm#15920<->Variety(D) : DivTorElt -&gt; TorVar
5<->Parent(D) <->text1409.htm#15921<->Parent(D) : DivTorElt -&gt; DivTor
5<->Weil(D) <->text1409.htm#15922<->Weil(D) : DivTorElt -&gt; SeqEnum
5<->Cartier(D) <->text1409.htm#15923<->Cartier(D) : DivTorElt -&gt; SeqEnum[TorLatElt]
5<->IsQCartier(D) <->text1409.htm#15924<->IsQCartier(D) : DivTorElt -&gt; BoolElt
5<->IsCartier(D) <->text1409.htm#15925<->IsCartier(D) : DivTorElt -&gt; BoolElt
5<->IsWeil(D) <->text1409.htm#15926<->IsWeil(D) : DivTorElt -&gt; BoolElt
5<->IsAmple(D) <->text1409.htm#15927<->IsAmple(D) : DivTorElt -&gt; BoolElt
5<->IsNef(D) <->text1409.htm#15928<->IsNef(D) : DivTorElt -&gt; BoolElt
5<->IsBig(D) <->text1409.htm#15929<->IsBig(D) : DivTorElt -&gt; BoolElt
5<->IsEffective(D) <->text1409.htm#15930<->IsEffective(D) : DivTorElt -&gt; BoolElt
5<->PicardClass(D) <->text1409.htm#15931<->PicardClass(D) : DivTorElt -&gt; TorLatElt
5<->MovablePart(D) <->text1409.htm#15932<->MovablePart(D) : DivTorElt -&gt; DivTorElt
4<->Toric_toric-movable-example (Example H124E16)<->text1409.htm#15933<->Toric_toric-movable-example (Example H124E16)
4<->Example-toric-movable-example :<->text1409.htm#15933<->Example-toric-movable-example :: Toric_toric-movable-example (Example H124E16)
5<->ImageFan(D) <->text1409.htm#15934<->ImageFan(D) : DivTorElt -&gt; TorFan
5<->Proj(D) <->text1409.htm#15935<->Proj(D) : DivTorElt -&gt; TorVar, PlcEnum
5<->RelativeProj(D) <->text1409.htm#15936<->RelativeProj(D) : DivTorElt -&gt; TorVar
5<->IntersectionForm(X,C) <->text1409.htm#15937<->IntersectionForm(X,C) : TorVar,TorCon -&gt; TorLatElt
5<->IntersectionForms(X) <->text1409.htm#15938<->IntersectionForms(X) : TorVar -&gt; [TorLatElt]
5<->CartierToWeilMap(X) <->text1409.htm#15939<->CartierToWeilMap(X) : TorVar -&gt; Map
5<->PicardToClassGroupsMap(X) <->text1409.htm#15940<->PicardToClassGroupsMap(X) : TorVar -&gt; Map
5<->PicardToClassLatticesMap(X) <->text1409.htm#15941<->PicardToClassLatticesMap(X) : TorVar -&gt; Map
3<->toric-div :<->text1409.htm#15919<->toric-div :: Properties of Divisors (TORIC VARIETIES)
3<->toric-lineq :<->text1409.htm#15942<->toric-lineq :: Linear Equivalence of Divisors (TORIC VARIETIES)
5<->IsQPrincipal(D) <->text1409.htm#15943<->IsQPrincipal(D) : DivTorElt -&gt; BoolElt
5<->IsPrincipal(D) <->text1409.htm#15944<->IsPrincipal(D) : DivTorElt -&gt; BoolElt
5<->IsLinearlyEquivalentToCartier(D) <->text1409.htm#15945<->IsLinearlyEquivalentToCartier(D) : DivTorElt -&gt; BoolElt, DivTorElt
5<->IsLinearlyEquivalent :: AreLinearlyEquivalent(D,E) <->text1409.htm#15946<->IsLinearlyEquivalent :: AreLinearlyEquivalent(D,E) : DivTorElt,DivTorElt -&gt; BoolElt
5<->AreLinearlyEquivalent(D,E) <->text1409.htm#15946<->AreLinearlyEquivalent(D,E) : DivTorElt,DivTorElt -&gt; BoolElt
5<->LinearlyEquivalentDivisorWithNoSupportOn(D,S) <->text1409.htm#15947<->LinearlyEquivalentDivisorWithNoSupportOn(D,S) : DivTorElt,[RngMPolElt] -&gt; DivTorElt
5<->DefiningMonomial(D) <->text1409.htm#15948<->DefiningMonomial(D) : DivTorElt -&gt; RngMPolElt
5<->LatticeElementToMonomial(D,v) <->text1409.htm#15949<->LatticeElementToMonomial(D,v) : DivTorElt,TorLatElt -&gt; RngMPolElt
3<->toric-lineq :<->text1409.htm#15942<->toric-lineq :: Linear Equivalence of Divisors (TORIC VARIETIES)
3<->toric-rr :<->text1409.htm#15950<->toric-rr :: Riemann--Roch Spaces of Invariant Divisors (TORIC VARIETIES)
5<->RiemannRochPolytope(D) <->text1409.htm#15951<->RiemannRochPolytope(D) : DivTorElt -&gt; TorPol
5<->RiemannRochBasis(D) <->text1409.htm#15952<->RiemannRochBasis(D) : DivTorElt -&gt; [RngElt]
5<->RiemannRochDimension(D) <->text1409.htm#15953<->RiemannRochDimension(D) : DivTorElt -&gt; RngIntElt
5<->GradedCone(D) <->text1409.htm#15954<->GradedCone(D) : DivTorElt -&gt; TorCon
5<->Polyhedron(D) <->text1409.htm#15955<->Polyhedron(D) : DivTorElt -&gt; TorPol
4<->Toric_toric-rr-example (Example H124E17)<->text1409.htm#15956<->Toric_toric-rr-example (Example H124E17)
4<->Example-toric-rr-example :<->text1409.htm#15956<->Example-toric-rr-example :: Toric_toric-rr-example (Example H124E17)
5<->HilbertSeries(D) <->text1409.htm#15957<->HilbertSeries(D) : DivTor -&gt; FldFunRatUElt
5<->HilbertPolynomial(D) <->text1409.htm#15958<->HilbertPolynomial(D) : DivTor -&gt; [RngUPolElt]
5<->HilbertCoefficients(D,l) <->text1409.htm#15959<->HilbertCoefficients(D,l) : DivTor,RngIntElt -&gt; [RngIntElt]
5<->HilbertCoefficient(D,i) <->text1409.htm#15960<->HilbertCoefficient(D,i) : DivTor,RngIntElt -&gt; RngIntElt
5<->HilbertDeltaVector(D) <->text1409.htm#15961<->HilbertDeltaVector(D) : DivTor -&gt; [RngIntElt]
4<->Toric_toric-rr-by-hand (Example H124E18)<->text1409.htm#15962<->Toric_toric-rr-by-hand (Example H124E18)
4<->Example-toric-rr-by-hand :<->text1409.htm#15962<->Example-toric-rr-by-hand :: Toric_toric-rr-by-hand (Example H124E18)
3<->toric-rr :<->text1409.htm#15950<->toric-rr :: Riemann--Roch Spaces of Invariant Divisors (TORIC VARIETIES)
3<->toric-divisors :<->text1409.htm<->toric-divisors :: Invariant Divisors and  Riemann-Roch Spaces (TORIC VARIETIES)
3<->toric-maps :<->text1410.htm<->toric-maps :: Maps of Toric Varieties (TORIC VARIETIES)
3<->toric-maps-lattices :<->text1410.htm#15964<->toric-maps-lattices :: Maps from Lattice Maps (TORIC VARIETIES)
5<->ToricVarietyMap(X,Y) <->text1410.htm#15965<->ToricVarietyMap(X,Y) : TorVar,TorVar -> TorMap
5<->ToricVarietyMap(X,Y,f) <->text1410.htm#15965<->ToricVarietyMap(X,Y,f) : TorVar,TorVar,Map -&gt; TorMap
5<->Blowup(X,v) <->text1410.htm#15966<->Blowup(X,v) : TorVar,TorLatElt -&gt; TorVar,TorMap
5<->ToricIdentityMap(X) <->text1410.htm#15967<->ToricIdentityMap(X) : TorVar -&gt; TorMap
3<->toric-maps-lattices :<->text1410.htm#15964<->toric-maps-lattices :: Maps from Lattice Maps (TORIC VARIETIES)
3<->toric-maps :<->text1410.htm#15968<->toric-maps :: Properties of Toric Maps (TORIC VARIETIES)
5<->IsRegular(f) <->text1410.htm#15969<->IsRegular(f) : TorMap -&gt; BoolElt
5<->IndeterminacyLocus(f) <->text1410.htm#15970<->IndeterminacyLocus(f) : TorMap -&gt; [Sch]
4<->Toric_toric-simplicial-example (Example H124E19)<->text1410.htm#15971<->Toric_toric-simplicial-example (Example H124E19)
4<->Example-toric-simplicial-example :<->text1410.htm#15971<->Example-toric-simplicial-example :: Toric_toric-simplicial-example (Example H124E19)
3<->toric-maps :<->text1410.htm#15968<->toric-maps :: Properties of Toric Maps (TORIC VARIETIES)
3<->toric-maps :<->text1410.htm<->toric-maps :: Maps of Toric Varieties (TORIC VARIETIES)
3<->toric-geometry :<->text1411.htm<->toric-geometry :: The Geometry of Toric Varieties (TORIC VARIETIES)
3<->toric-res :<->text1411.htm#15973<->toric-res :: Resolution of Singularities and Linear Systems (TORIC VARIETIES)
5<->Resolution(X) <->text1411.htm#15974<->Resolution(X) : TorVar -&gt; TorVar,TorMap
5<->QFactorialisation(X) <->text1411.htm#15975<->QFactorialisation(X) : TorVar -&gt; TorVar, TorMap
5<->Terminalisation(X) <->text1411.htm#15976<->Terminalisation(X) : TorVar -&gt; TorVar, TorMap
5<->Canonicalisation(X) <->text1411.htm#15977<->Canonicalisation(X) : TorVar -&gt; TorVar, TorMap
5<->ResolveLinearSystem(D) <->text1411.htm#15978<->ResolveLinearSystem(D) : DivTorElt -&gt; TorVar
3<->toric-res :<->text1411.htm#15973<->toric-res :: Resolution of Singularities and Linear Systems (TORIC VARIETIES)
3<->toric-maps :<->text1411.htm#15979<->toric-maps :: Mori Theory of Toric Varieties (TORIC VARIETIES)
5<->MoriCone(X) <->text1411.htm#15980<->MoriCone(X) : TorVar -&gt; TorCon
5<->NefCone(X) <->text1411.htm#15981<->NefCone(X) : TorVar -&gt; TorCon
5<->ExtremalRayContractions :: ExtremalRays(X) <->text1411.htm#15982<->ExtremalRayContractions :: ExtremalRays(X) : TorVar -&gt; SeqEnum
5<->ExtremalRays(X) <->text1411.htm#15982<->ExtremalRays(X) : TorVar -&gt; SeqEnum
5<->ExtremalRayContraction(X,i) <->text1411.htm#15983<->ExtremalRayContraction(X,i) : TorVar,RngIntElt -&gt; TorVar,TorMap
5<->ExtremalRayContractionDivisor(X,i) <->text1411.htm#15984<->ExtremalRayContractionDivisor(X,i) : TorVar,RngIntElt -&gt; DivTorElt
5<->TypesOfContractions :: TypeOfContraction(X,i) <->text1411.htm#15985<->TypesOfContractions :: TypeOfContraction(X,i) : TorVar,RngIntElt -&gt; MonStgElt
5<->TypeOfContraction(X,i) <->text1411.htm#15985<->TypeOfContraction(X,i) : TorVar,RngIntElt -&gt; MonStgElt
5<->IsDivisorialContraction(X,i) <->text1411.htm#15986<->IsDivisorialContraction(X,i) : TorVar,RngIntElt -&gt; BoolElt
5<->IsMoriFibreSpace(X,i) <->text1411.htm#15987<->IsMoriFibreSpace(X,i) : TorVar,RngIntElt -&gt; BoolElt
5<->IsFlipping(X,i) <->text1411.htm#15988<->IsFlipping(X,i) : TorVar,RngIntElt -&gt; BoolElt
5<->Flip(X,i) <->text1411.htm#15989<->Flip(X,i) : TorVar,RngIntElt -&gt; TorVar
5<->Flip(D) <->text1411.htm#15990<->Flip(D) : DivTorElt -&gt; TorVar
5<->WeightsOfFlip(X,i) <->text1411.htm#15991<->WeightsOfFlip(X,i) : TorVar,RngIntElt -&gt; SeqEnum
4<->Toric_toric-flipwts-example (Example H124E20)<->text1411.htm#15992<->Toric_toric-flipwts-example (Example H124E20)
4<->Example-toric-flipwts-example :<->text1411.htm#15992<->Example-toric-flipwts-example :: Toric_toric-flipwts-example (Example H124E20)
4<->Toric_toric-weights-of-flip-example (Example H124E21)<->text1411.htm#15993<->Toric_toric-weights-of-flip-example (Example H124E21)
4<->Example-toric-weights-of-flip-example :<->text1411.htm#15993<->Example-toric-weights-of-flip-example :: Toric_toric-weights-of-flip-example (Example H124E21)
5<->MMP(X) <->text1411.htm#15994<->MMP(X) : TorVar -&gt; SeqEnum,SeqEnum
4<->Toric_toric-mmp-example1 (Example H124E22)<->text1411.htm#15995<->Toric_toric-mmp-example1 (Example H124E22)
4<->Example-toric-mmp-example1 :<->text1411.htm#15995<->Example-toric-mmp-example1 :: Toric_toric-mmp-example1 (Example H124E22)
3<->toric-maps :<->text1411.htm#15979<->toric-maps :: Mori Theory of Toric Varieties (TORIC VARIETIES)
3<->toric-decomposition :<->text1411.htm#15996<->toric-decomposition :: Decomposition of Toric Morphisms (TORIC VARIETIES)
4<->Toric_toric-decomposition-example (Example H124E23)<->text1411.htm#15997<->Toric_toric-decomposition-example (Example H124E23)
4<->Example-toric-decomposition-example :<->text1411.htm#15997<->Example-toric-decomposition-example :: Toric_toric-decomposition-example (Example H124E23)
3<->toric-decomposition :<->text1411.htm#15996<->toric-decomposition :: Decomposition of Toric Morphisms (TORIC VARIETIES)
3<->toric-geometry :<->text1411.htm<->toric-geometry :: The Geometry of Toric Varieties (TORIC VARIETIES)
3<->toric-subschemes :<->text1412.htm<->toric-subschemes :: Schemes in Toric Varieties (TORIC VARIETIES)
3<->toric-scheme :<->text1412.htm#15999<->toric-scheme :: Construction of Subschemes (TORIC VARIETIES)
5<->Scheme(X,f) <->text1412.htm#16000<->Scheme(X,f) : TorVar,RngMPolElt -&gt; Sch
5<->Scheme(X,Q) <->text1412.htm#16001<->Scheme(X,Q) : TorVar,[RngMPolElt] -&gt; Sch
5<->BinomialToricEmbedding(Z) <->text1412.htm#16002<->BinomialToricEmbedding(Z) : Sch -&gt; Sch, TorMap
4<->Toric_toric-mmp-example1 (Example H124E24)<->text1412.htm#16003<->Toric_toric-mmp-example1 (Example H124E24)
4<->Example-toric-mmp-example1 :<->text1412.htm#16003<->Example-toric-mmp-example1 :: Toric_toric-mmp-example1 (Example H124E24)
3<->toric-scheme :<->text1412.htm#15999<->toric-scheme :: Construction of Subschemes (TORIC VARIETIES)
3<->toric-subschemes :<->text1412.htm<->toric-subschemes :: Schemes in Toric Varieties (TORIC VARIETIES)
3<->toric :<->text1403.htm<->toric :: TORIC VARIETIES
3<->conic :<->text1415.htm<->conic :: RATIONAL CURVES AND CONICS
3<->crvgen0-sec:introduction :<->text1416.htm<->crvgen0-sec:introduction :: Introduction (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:main :<->text1417.htm<->crvgen0-sec:main :: Rational Curves and Conics (RATIONAL CURVES AND CONICS)
3<->crvgen0-subsec:creation :<->text1417.htm#16009<->crvgen0-subsec:creation :: Rational Curve and Conic Creation (RATIONAL CURVES AND CONICS)
5<->Conic(coeffs) <->text1417.htm#16010<->Conic(coeffs) : [RngElt] -&gt; CrvCon
5<->Conic(M) <->text1417.htm#16011<->Conic(M) : Mtrx -&gt; CrvCon
5<->Conic(X, f) <->text1417.htm#16012<->Conic(X, f) : Prj, RngMPolElt -&gt; CrvCon
5<->IsConic(S) <->text1417.htm#16013<->IsConic(S) : Sch -&gt; BoolElt, CrvCon
5<->RationalCurve(X, f) <->text1417.htm#16014<->RationalCurve(X, f) : Prj, RngMPolElt -&gt; CrvRat
5<->IsRationalCurve(S) <->text1417.htm#16015<->IsRationalCurve(S) : Sch -&gt; BoolElt, CrvRat
4<->CrvCon_ConicCreation (Example H125E1)<->text1417.htm#16016<->CrvCon_ConicCreation (Example H125E1)
4<->Example-ConicCreation :<->text1417.htm#16016<->Example-ConicCreation :: CrvCon_ConicCreation (Example H125E1)
3<->crvgen0-subsec:creation :<->text1417.htm#16009<->crvgen0-subsec:creation :: Rational Curve and Conic Creation (RATIONAL CURVES AND CONICS)
3<->crvgen0-subsec:access :<->text1417.htm#16017<->crvgen0-subsec:access :: Access Functions (RATIONAL CURVES AND CONICS)
5<->DefiningPolynomial(C) <->text1417.htm#16018<->DefiningPolynomial(C) : Crv -&gt; RngMPolElt
5<->DefiningIdeal(C) <->text1417.htm#16019<->DefiningIdeal(C) : Crv -&gt; RngMPol
3<->crvgen0-subsec:access :<->text1417.htm#16017<->crvgen0-subsec:access :: Access Functions (RATIONAL CURVES AND CONICS)
3<->examples :<->text1417.htm#16020<->examples :: Rational Curve and Conic Examples (RATIONAL CURVES AND CONICS)
4<->CrvCon_RationalCurveExample (Example H125E2)<->text1417.htm#16021<->CrvCon_RationalCurveExample (Example H125E2)
4<->Example-RationalCurveExample :<->text1417.htm#16021<->Example-RationalCurveExample :: CrvCon_RationalCurveExample (Example H125E2)
4<->CrvCon_ConicCurve (Example H125E3)<->text1417.htm#16022<->CrvCon_ConicCurve (Example H125E3)
4<->Example-ConicCurve :<->text1417.htm#16022<->Example-ConicCurve :: CrvCon_ConicCurve (Example H125E3)
4<->CrvCon_ConicAccess (Example H125E4)<->text1417.htm#16023<->CrvCon_ConicAccess (Example H125E4)
4<->Example-ConicAccess :<->text1417.htm#16023<->Example-ConicAccess :: CrvCon_ConicAccess (Example H125E4)
3<->examples :<->text1417.htm#16020<->examples :: Rational Curve and Conic Examples (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:main :<->text1417.htm<->crvgen0-sec:main :: Rational Curves and Conics (RATIONAL CURVES AND CONICS)
3<->crvcon-sec:models :<->text1418.htm<->crvcon-sec:models :: Conics (RATIONAL CURVES AND CONICS)
3<->discriminant :<->text1418.htm#16025<->discriminant :: Elementary Invariants (RATIONAL CURVES AND CONICS)
5<->Discriminant(C) <->text1418.htm#16026<->Discriminant(C) : CrvCon -&gt; FldElt
3<->discriminant :<->text1418.htm#16025<->discriminant :: Elementary Invariants (RATIONAL CURVES AND CONICS)
3<->access :<->text1418.htm#16027<->access :: Alternative Defining Polynomials (RATIONAL CURVES AND CONICS)
5<->LegendrePolynomial(C) <->text1418.htm#16028<->LegendrePolynomial(C) : CrvCon -&gt; RngMPolElt, ModMatRngElt
5<->ReducedLegendrePolynomial(C) <->text1418.htm#16029<->ReducedLegendrePolynomial(C) : CrvCon -&gt; RngMPolElt, ModMatRngElt
3<->access :<->text1418.htm#16027<->access :: Alternative Defining Polynomials (RATIONAL CURVES AND CONICS)
3<->models :<->text1418.htm#16030<->models :: Alternative Models (RATIONAL CURVES AND CONICS)
5<->LegendreModel(C) <->text1418.htm#16031<->LegendreModel(C) : CrvCon -&gt; CrvCon, MapIsoSch
5<->ReducedLegendreModel(C) <->text1418.htm#16032<->ReducedLegendreModel(C) : CrvCon -&gt; CrvCon, MapIsoSch
3<->models :<->text1418.htm#16030<->models :: Alternative Models (RATIONAL CURVES AND CONICS)
3<->other :<->text1418.htm#16033<->other :: Other Functions on Conics (RATIONAL CURVES AND CONICS)
5<->MinimalModel(C) <->text1418.htm#16034<->MinimalModel(C) : CrvCon -&gt; CrvCon, Map
4<->CrvCon_ConicMinimalModel (Example H125E5)<->text1418.htm#16035<->CrvCon_ConicMinimalModel (Example H125E5)
4<->Example-ConicMinimalModel :<->text1418.htm#16035<->Example-ConicMinimalModel :: CrvCon_ConicMinimalModel (Example H125E5)
3<->other :<->text1418.htm#16033<->other :: Other Functions on Conics (RATIONAL CURVES AND CONICS)
3<->crvcon-sec:models :<->text1418.htm<->crvcon-sec:models :: Conics (RATIONAL CURVES AND CONICS)
3<->local-global :<->text1419.htm<->local-global :: Local-Global Correspondence (RATIONAL CURVES AND CONICS)
3<->local-global :<->text1419.htm#16037<->local-global :: Local Conditions for Conics (RATIONAL CURVES AND CONICS)
5<->BadPrimes(C) <->text1419.htm#16038<->BadPrimes(C) : CrvCon -&gt; SeqEnum
3<->local-global :<->text1419.htm#16037<->local-global :: Local Conditions for Conics (RATIONAL CURVES AND CONICS)
3<->local-sol :<->text1419.htm#16039<->local-sol :: Local Solubility (RATIONAL CURVES AND CONICS)
5<->IsLocallySolvable(C) <->text1419.htm#16040<->IsLocallySolvable(C) : CrvCon -&gt; BoolElt
3<->local-sol :<->text1419.htm#16039<->local-sol :: Local Solubility (RATIONAL CURVES AND CONICS)
3<->local-global :<->text1419.htm#16041<->local-global :: Norm Residue Symbol (RATIONAL CURVES AND CONICS)
5<->NormResidueSymbol(a, b, p) <->text1419.htm#16042<->NormResidueSymbol(a, b, p) : RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->NormResidueSymbol(a, b, p) <->text1419.htm#16042<->NormResidueSymbol(a, b, p) : FldRatElt, FldRatElt, RngIntElt -&gt; RngIntElt
5<->HilbertSymbol(a, b, p :\ \parameters) <->text1419.htm#16043<->HilbertSymbol(a, b, p :\ \parameters) : RngIntElt, RngIntElt, RngIntElt -> RngIntElt
5<->HilbertSymbol(a, b, p) <->text1419.htm#16043<->HilbertSymbol(a, b, p) : FldAlgElt, FldAlgElt, RngOrdIdl -> RngIntElt
5<->HilbertSymbol(a, b, p : parameters) <->text1419.htm#16043<->HilbertSymbol(a, b, p : parameters) : FldRatElt, FldRatElt, RngIntElt -&gt; RngIntElt
4<->CrvCon_LocalGlobal (Example H125E6)<->text1419.htm#16044<->CrvCon_LocalGlobal (Example H125E6)
4<->Example-LocalGlobal :<->text1419.htm#16044<->Example-LocalGlobal :: CrvCon_LocalGlobal (Example H125E6)
3<->local-global :<->text1419.htm#16041<->local-global :: Norm Residue Symbol (RATIONAL CURVES AND CONICS)
3<->local-global :<->text1419.htm<->local-global :: Local-Global Correspondence (RATIONAL CURVES AND CONICS)
3<->crvcon-sec:ratpoints :<->text1420.htm<->crvcon-sec:ratpoints :: Rational Points on Conics (RATIONAL CURVES AND CONICS)
3<->point-finding :<->text1420.htm#16046<->point-finding :: Finding Points (RATIONAL CURVES AND CONICS)
5<->HasRationalPoint(C) <->text1420.htm#16047<->HasRationalPoint(C) : CrvCon -&gt; BoolElt, Pt
5<->RationalPoint(C) <->text1420.htm#16048<->RationalPoint(C) : CrvCon -&gt; Pt
5<->Random(C : parameters) <->text1420.htm#16049<->Random(C : parameters) : CrvCon -&gt; Pt
5<->RationalPoints :: Points(C : parameters) <->text1420.htm#16050<->RationalPoints :: Points(C : parameters) : CrvCon -&gt; SetIndx
5<->Points(C : parameters) <->text1420.htm#16050<->Points(C : parameters) : CrvCon -&gt; SetIndx
4<->CrvCon_rational-point-enum (Example H125E7)<->text1420.htm#16051<->CrvCon_rational-point-enum (Example H125E7)
4<->Example-rational-point-enum :<->text1420.htm#16051<->Example-rational-point-enum :: CrvCon_rational-point-enum (Example H125E7)
3<->point-finding :<->text1420.htm#16046<->point-finding :: Finding Points (RATIONAL CURVES AND CONICS)
3<->point_reduction :<->text1420.htm#16052<->point_reduction :: Point Reduction (RATIONAL CURVES AND CONICS)
5<->IsReduced(p) <->text1420.htm#16053<->IsReduced(p) : Pt -&gt; BoolElt
5<->Reduction(p) <->text1420.htm#16054<->Reduction(p) : Pt -&gt; Pt
4<->CrvCon_PointReduction (Example H125E8)<->text1420.htm#16055<->CrvCon_PointReduction (Example H125E8)
4<->Example-PointReduction :<->text1420.htm#16055<->Example-PointReduction :: CrvCon_PointReduction (Example H125E8)
4<->CrvCon_PointFinding (Example H125E9)<->text1420.htm#16056<->CrvCon_PointFinding (Example H125E9)
4<->Example-PointFinding :<->text1420.htm#16056<->Example-PointFinding :: CrvCon_PointFinding (Example H125E9)
3<->point_reduction :<->text1420.htm#16052<->point_reduction :: Point Reduction (RATIONAL CURVES AND CONICS)
3<->crvcon-sec:ratpoints :<->text1420.htm<->crvcon-sec:ratpoints :: Rational Points on Conics (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:isoms :<->text1421.htm<->crvgen0-sec:isoms :: Isomorphisms (RATIONAL CURVES AND CONICS)
3<->crvgen0-subsec:isoms :<->text1421.htm#16058<->crvgen0-subsec:isoms :: Isomorphisms with Standard Models (RATIONAL CURVES AND CONICS)
5<->Conic(C) <->text1421.htm#16059<->Conic(C) : Crv -&gt; MapSch
4<->CrvCon_ (Example H125E10)<->text1421.htm#16060<->CrvCon_ (Example H125E10)
4<->Example- :<->text1421.htm#16060<->Example- :: CrvCon_ (Example H125E10)
5<->ParametrizationMatrix(C) <->text1421.htm#16061<->ParametrizationMatrix(C) : CrvCon -&gt; ModMatRngElt
4<->CrvCon_ (Example H125E11)<->text1421.htm#16062<->CrvCon_ (Example H125E11)
4<->Example- :<->text1421.htm#16062<->Example- :: CrvCon_ (Example H125E11)
5<->Parametrization(C, P) <->text1421.htm#16063<->Parametrization(C, P) : CrvCon, Crv -> MapSch
5<->Parametrization(C, p) <->text1421.htm#16063<->Parametrization(C, p) : Crv, Pt -> MapSch
5<->Parametrization(C, p) <->text1421.htm#16063<->Parametrization(C, p) : Crv, PlcCrvElt -> MapSch
5<->Parametrization(C, p, P) <->text1421.htm#16063<->Parametrization(C, p, P) : CrvCon, Pt, Crv -> MapSch
5<->Parametrization(C, p, P) <->text1421.htm#16063<->Parametrization(C, p, P) : CrvRat, Pt, Crv -> MapSch
5<->Parametrization(C, p, P) <->text1421.htm#16063<->Parametrization(C, p, P) : CrvCon, PlcCrvElt, Crv -> MapSch
5<->Parametrization(C, p, P) <->text1421.htm#16063<->Parametrization(C, p, P) : CrvRat, PlcCrvElt, Crv -> MapSch
5<->Parametrization(C) <->text1421.htm#16063<->Parametrization(C) : CrvCon -&gt; MapSch
5<->ParametrizeOrdinaryCurve(C, p) <->text1421.htm#16064<->ParametrizeOrdinaryCurve(C, p) : Crv, Pt -> MapSch
5<->ParametrizeOrdinaryCurve(C, p) <->text1421.htm#16064<->ParametrizeOrdinaryCurve(C, p) : Crv, PlcCrvElt -> MapSch
5<->ParametrizeOrdinaryCurve(C, p, I) <->text1421.htm#16064<->ParametrizeOrdinaryCurve(C, p, I) : Crv, Pt, RngMPol -> MapSch
5<->ParametrizeOrdinaryCurve(C, p, I) <->text1421.htm#16064<->ParametrizeOrdinaryCurve(C, p, I) : Crv, PlcCrvElt, RngMPol -> MapSch
5<->ParametrizeRationalNormalCurve :: ParametrizeOrdinaryCurve(C) <->text1421.htm#16064<->ParametrizeRationalNormalCurve :: ParametrizeOrdinaryCurve(C) : Crv -&gt; MapSch
5<->ParametrizeOrdinaryCurve(C) <->text1421.htm#16064<->ParametrizeOrdinaryCurve(C) : Crv -&gt; MapSch
4<->CrvCon_RationalParametrization (Example H125E12)<->text1421.htm#16065<->CrvCon_RationalParametrization (Example H125E12)
4<->Example-RationalParametrization :<->text1421.htm#16065<->Example-RationalParametrization :: CrvCon_RationalParametrization (Example H125E12)
3<->crvgen0-subsec:isoms :<->text1421.htm#16058<->crvgen0-subsec:isoms :: Isomorphisms with Standard Models (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:isoms :<->text1421.htm<->crvgen0-sec:isoms :: Isomorphisms (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:autom :<->text1422.htm<->crvgen0-sec:autom :: Automorphisms (RATIONAL CURVES AND CONICS)
3<->crvrat-subsec:autom :<->text1422.htm#16067<->crvrat-subsec:autom :: Automorphisms of Rational Curves (RATIONAL CURVES AND CONICS)
5<->Automorphism(C, S, T) <->text1422.htm#16068<->Automorphism(C, S, T) : CrvRat, SetIndx, SetIndx -&gt; MapIsoSch
3<->crvrat-subsec:autom :<->text1422.htm#16067<->crvrat-subsec:autom :: Automorphisms of Rational Curves (RATIONAL CURVES AND CONICS)
3<->crvcon-subsec:autom :<->text1422.htm#16069<->crvcon-subsec:autom :: Automorphisms of Conics (RATIONAL CURVES AND CONICS)
5<->QuaternionAlgebra(C) <->text1422.htm#16070<->QuaternionAlgebra(C) : CrvCon-&gt; AlgQuat
5<->Automorphism(C, a) <->text1422.htm#16071<->Automorphism(C, a) : CrvCon, AlgQuatElt -&gt; MapIsoSch
4<->CrvCon_ConicAutomorphisms (Example H125E13)<->text1422.htm#16072<->CrvCon_ConicAutomorphisms (Example H125E13)
4<->Example-ConicAutomorphisms :<->text1422.htm#16072<->Example-ConicAutomorphisms :: CrvCon_ConicAutomorphisms (Example H125E13)
3<->crvcon-subsec:autom :<->text1422.htm#16069<->crvcon-subsec:autom :: Automorphisms of Conics (RATIONAL CURVES AND CONICS)
3<->crvgen0-sec:autom :<->text1422.htm<->crvgen0-sec:autom :: Automorphisms (RATIONAL CURVES AND CONICS)
3<->conic :<->text1415.htm<->conic :: RATIONAL CURVES AND CONICS
3<->elliptic-curve :<->text1425.htm<->elliptic-curve :: ELLIPTIC CURVES
3<->introduction :<->text1426.htm<->introduction :: Introduction (ELLIPTIC CURVES)
3<->creation :<->text1427.htm<->creation :: Creation Functions (ELLIPTIC CURVES)
3<->creation-curve :<->text1427.htm#16078<->creation-curve :: Creation of an Elliptic Curve (ELLIPTIC CURVES)
5<->EllipticCurve([a1, a2, a3, a4, a6]) <->text1427.htm#16079<->EllipticCurve([a1, a2, a3, a4, a6]) : [ RngElt ] -> CrvEll
5<->EllipticCurve([a, b]) <->text1427.htm#16079<->EllipticCurve([a, b]) : [ RngElt ] -&gt; CrvEll
5<->EllipticCurve(f, h) <->text1427.htm#16080<->EllipticCurve(f, h) : RngUPolElt, RngUPolElt -> CrvEll
5<->EllipticCurve(f) <->text1427.htm#16080<->EllipticCurve(f) : RngUPolElt -&gt; CrvEll
5<->EllipticCurveWithjInvariant :: EllipticCurveFromjInvariant(j) <->text1427.htm#16081<->EllipticCurveWithjInvariant :: EllipticCurveFromjInvariant(j) : RngElt -&gt; CrvEll
5<->EllipticCurveFromjInvariant(j) <->text1427.htm#16081<->EllipticCurveFromjInvariant(j) : RngElt -&gt; CrvEll
4<->CrvEll_Creation (Example H126E1)<->text1427.htm#16082<->CrvEll_Creation (Example H126E1)
4<->Example-Creation :<->text1427.htm#16082<->Example-Creation :: CrvEll_Creation (Example H126E1)
5<->EllipticCurve(C) <->text1427.htm#16083<->EllipticCurve(C) : Sch -&gt; CrvEll, MapSch
5<->EllipticCurve(C, P) <->text1427.htm#16084<->EllipticCurve(C, P) : Crv, Pt -&gt; CrvEll, MapSch
5<->EllipticCurve(C, pl) <->text1427.htm#16085<->EllipticCurve(C, pl) : Crv, PlcCrvElt -&gt; CrvEll, MapSch
5<->SupersingularEllipticCurve(K) <->text1427.htm#16086<->SupersingularEllipticCurve(K) : FldFin -&gt; CrvEll
4<->CrvEll_CreationFromCurve (Example H126E2)<->text1427.htm#16087<->CrvEll_CreationFromCurve (Example H126E2)
4<->Example-CreationFromCurve :<->text1427.htm#16087<->Example-CreationFromCurve :: CrvEll_CreationFromCurve (Example H126E2)
4<->CrvEll_CreationFromCurve2 (Example H126E3)<->text1427.htm#16088<->CrvEll_CreationFromCurve2 (Example H126E3)
4<->Example-CreationFromCurve2 :<->text1427.htm#16088<->Example-CreationFromCurve2 :: CrvEll_CreationFromCurve2 (Example H126E3)
3<->creation-curve :<->text1427.htm#16078<->creation-curve :: Creation of an Elliptic Curve (ELLIPTIC CURVES)
3<->creation-predicates :<->text1427.htm#16089<->creation-predicates :: Creation Predicates (ELLIPTIC CURVES)
5<->IsEllipticCurve([a1, a2, a3, a4, a6]) <->text1427.htm#16090<->IsEllipticCurve([a1, a2, a3, a4, a6]) : [ RngElt ] -> BoolElt, CrvEll
5<->IsEllipticCurve([a, b]) <->text1427.htm#16090<->IsEllipticCurve([a, b]) : [ RngElt ] -&gt; BoolElt, CrvEll
5<->IsEllipticCurve(C) <->text1427.htm#16091<->IsEllipticCurve(C) : CrvHyp -&gt; BoolElt, CrvEll, MapIsoSch, MapIsoSch
4<->CrvEll_CreationTest (Example H126E4)<->text1427.htm#16092<->CrvEll_CreationTest (Example H126E4)
4<->Example-CreationTest :<->text1427.htm#16092<->Example-CreationTest :: CrvEll_CreationTest (Example H126E4)
3<->creation-predicates :<->text1427.htm#16089<->creation-predicates :: Creation Predicates (ELLIPTIC CURVES)
3<->creation-change_ring :<->text1427.htm#16093<->creation-change_ring :: Changing the Base Ring (ELLIPTIC CURVES)
5<->BaseExtend :: BaseChange(E, K) <->text1427.htm#16094<->BaseExtend :: BaseChange(E, K) : CrvEll, Rng -&gt; CrvEll
5<->BaseChange(E, K) <->text1427.htm#16094<->BaseChange(E, K) : CrvEll, Rng -&gt; CrvEll
5<->ChangeRing(E, K) <->text1427.htm#16095<->ChangeRing(E, K) : CrvEll, Rng -&gt; CrvEll
5<->BaseExtend :: BaseChange(E, h) <->text1427.htm#16096<->BaseExtend :: BaseChange(E, h) : CrvEll, Map -&gt; CrvEll
5<->BaseChange(E, h) <->text1427.htm#16096<->BaseChange(E, h) : CrvEll, Map -&gt; CrvEll
5<->BaseExtend :: BaseChange(E, n) <->text1427.htm#16097<->BaseExtend :: BaseChange(E, n) : CrvEll, RngIntElt -&gt; CrvEll
5<->BaseChange(E, n) <->text1427.htm#16097<->BaseChange(E, n) : CrvEll, RngIntElt -&gt; CrvEll
4<->CrvEll_BaseExtend (Example H126E5)<->text1427.htm#16098<->CrvEll_BaseExtend (Example H126E5)
4<->Example-BaseExtend :<->text1427.htm#16098<->Example-BaseExtend :: CrvEll_BaseExtend (Example H126E5)
3<->creation-change_ring :<->text1427.htm#16093<->creation-change_ring :: Changing the Base Ring (ELLIPTIC CURVES)
3<->creation-models :<->text1427.htm#16099<->creation-models :: Alternative Models (ELLIPTIC CURVES)
5<->WeierstrassModel(E) <->text1427.htm#16100<->WeierstrassModel(E) : CrvEll -&gt; CrvEll, Map, Map
5<->IntegralModel(E) <->text1427.htm#16101<->IntegralModel(E) : CrvEll -&gt; CrvEll, Map, Map
5<->SimplifiedModel(E)<->text1427.htm#16102<->SimplifiedModel(E): CrvEll -&gt; CrvEll, Map, Map
5<->MinimalModel(E) <->text1427.htm#16103<->MinimalModel(E) : CrvEll -&gt; CrvEll, Map, Map
5<->MinimalModel(E, P :\ \parameters) <->text1427.htm#16104<->MinimalModel(E, P :\ \parameters) : CrvEll, RngOrdIdl -> CrvEll, Map
5<->MinimalModel(E, p) <->text1427.htm#16104<->MinimalModel(E, p) : CrvEll, RngIntElt -&gt; CrvEll, Map, Map
3<->creation-models :<->text1427.htm#16099<->creation-models :: Alternative Models (ELLIPTIC CURVES)
3<->creation-model-predicates :<->text1427.htm#16105<->creation-model-predicates :: Predicates on Curve Models (ELLIPTIC CURVES)
5<->IsWeierstrassModel(E) <->text1427.htm#16106<->IsWeierstrassModel(E) : CrvEll -&gt; BoolElt
5<->IsIntegralModel(E) <->text1427.htm#16107<->IsIntegralModel(E) : CrvEll -&gt; BoolElt
5<->IsSimplifiedModel(E) <->text1427.htm#16108<->IsSimplifiedModel(E) : CrvEll -&gt; BoolElt
5<->IsMinimalModel(E) <->text1427.htm#16109<->IsMinimalModel(E) : CrvEll -&gt; BoolElt
5<->IsIntegralModel(E, P) <->text1427.htm#16110<->IsIntegralModel(E, P) : CrvEll, RngOrdIdl -&gt; BoolElt
4<->CrvEll_Models (Example H126E6)<->text1427.htm#16111<->CrvEll_Models (Example H126E6)
4<->Example-Models :<->text1427.htm#16111<->Example-Models :: CrvEll_Models (Example H126E6)
3<->creation-model-predicates :<->text1427.htm#16105<->creation-model-predicates :: Predicates on Curve Models (ELLIPTIC CURVES)
3<->twists :<->text1427.htm#16112<->twists :: Twists of Elliptic Curves (ELLIPTIC CURVES)
5<->QuadraticTwist(E, d) <->text1427.htm#16113<->QuadraticTwist(E, d) : CrvEll, RngElt -&gt; CrvEll
5<->QuadraticTwist(E) <->text1427.htm#16114<->QuadraticTwist(E) : CrvEll -&gt; CrvEll
5<->QuadraticTwists(E) <->text1427.htm#16115<->QuadraticTwists(E) : CrvEll -&gt; SeqEnum
5<->Twists(E) <->text1427.htm#16116<->Twists(E) : CrvEll -&gt; SeqEnum
4<->CrvEll_QuadraticTwists (Example H126E7)<->text1427.htm#16117<->CrvEll_QuadraticTwists (Example H126E7)
4<->Example-QuadraticTwists :<->text1427.htm#16117<->Example-QuadraticTwists :: CrvEll_QuadraticTwists (Example H126E7)
5<->IsTwist(E, F) <->text1427.htm#16118<->IsTwist(E, F) : CrvEll, CrvEll -&gt; BoolElt
5<->IsQuadraticTwist(E, F) <->text1427.htm#16119<->IsQuadraticTwist(E, F) : CrvEll, CrvEll -&gt; BoolElt, RngElt
4<->CrvEll_NonquadraticTwists (Example H126E8)<->text1427.htm#16120<->CrvEll_NonquadraticTwists (Example H126E8)
4<->Example-NonquadraticTwists :<->text1427.htm#16120<->Example-NonquadraticTwists :: CrvEll_NonquadraticTwists (Example H126E8)
5<->MinimalQuadraticTwist(E) <->text1427.htm#16121<->MinimalQuadraticTwist(E) : CrvEll -&gt; CrvEll, RngIntElt
4<->CrvEll_min_twist (Example H126E9)<->text1427.htm#16122<->CrvEll_min_twist (Example H126E9)
4<->Example-min_twist :<->text1427.htm#16122<->Example-min_twist :: CrvEll_min_twist (Example H126E9)
3<->twists :<->text1427.htm#16112<->twists :: Twists of Elliptic Curves (ELLIPTIC CURVES)
3<->creation :<->text1427.htm<->creation :: Creation Functions (ELLIPTIC CURVES)
3<->operations_curve :<->text1428.htm<->operations_curve :: Operations on Curves (ELLIPTIC CURVES)
3<->operations_curve-invariants :<->text1428.htm#16124<->operations_curve-invariants :: Elementary Invariants (ELLIPTIC CURVES)
5<->Coefficients :: aInvariants(E) <->text1428.htm#16125<->Coefficients :: aInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->ElementToSequence :: aInvariants(E) <->text1428.htm#16125<->ElementToSequence :: aInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->Eltseq :: aInvariants(E) <->text1428.htm#16125<->Eltseq :: aInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->aInvariants(E) <->text1428.htm#16125<->aInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->bInvariants(E) <->text1428.htm#16126<->bInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->cInvariants(E) <->text1428.htm#16127<->cInvariants(E) : CrvEll -&gt; [ RngElt ]
5<->Discriminant(E) <->text1428.htm#16128<->Discriminant(E) : CrvEll -&gt; RngElt
5<->jInvariant(E) <->text1428.htm#16129<->jInvariant(E) : CrvEll -&gt; RngElt
5<->HyperellipticPolynomials(E) <->text1428.htm#16130<->HyperellipticPolynomials(E) : CrvEll -&gt; RngUPolElt, RngUPolElt
4<->CrvEll_Invariants (Example H126E10)<->text1428.htm#16131<->CrvEll_Invariants (Example H126E10)
4<->Example-Invariants :<->text1428.htm#16131<->Example-Invariants :: CrvEll_Invariants (Example H126E10)
4<->CrvEll_GenericCurve (Example H126E11)<->text1428.htm#16132<->CrvEll_GenericCurve (Example H126E11)
4<->Example-GenericCurve :<->text1428.htm#16132<->Example-GenericCurve :: CrvEll_GenericCurve (Example H126E11)
3<->operations_curve-invariants :<->text1428.htm#16124<->operations_curve-invariants :: Elementary Invariants (ELLIPTIC CURVES)
3<->operations_curve-category :<->text1428.htm#16133<->operations_curve-category :: Associated Structures (ELLIPTIC CURVES)
5<->Type :: Category(E) <->text1428.htm#16134<->Type :: Category(E) : CrvEll -&gt; Cat
5<->Category(E) <->text1428.htm#16134<->Category(E) : CrvEll -&gt; Cat
5<->CoefficientRing :: BaseRing(E) <->text1428.htm#16135<->CoefficientRing :: BaseRing(E) : CrvEll -&gt; Rng
5<->BaseRing(E) <->text1428.htm#16135<->BaseRing(E) : CrvEll -&gt; Rng
3<->operations_curve-category :<->text1428.htm#16133<->operations_curve-category :: Associated Structures (ELLIPTIC CURVES)
3<->operations_curve-predicates :<->text1428.htm#16136<->operations_curve-predicates :: Predicates on Elliptic Curves (ELLIPTIC CURVES)
5<->E eq F <->text1428.htm#16137<->E eq F : CrvEll, CrvEll -&gt; BoolElt
5<->E ne F <->text1428.htm#16138<->E ne F : CrvEll, CrvEll -&gt; BoolElt
5<->IsIsomorphic(E, F) <->text1428.htm#16139<->IsIsomorphic(E, F) : CrvEll, CrvEll -&gt; BoolElt, Map
5<->IsIsogenous(E, F) <->text1428.htm#16140<->IsIsogenous(E, F) : CrvEll[FldFin], CrvEll[FldFin] -> BoolElt
5<->IsIsogenous(E, F) <->text1428.htm#16140<->IsIsogenous(E, F) : CrvEll[FldRat], CrvEll[FldRat] -&gt; BoolElt, Map
4<->CrvEll_Twists2 (Example H126E12)<->text1428.htm#16141<->CrvEll_Twists2 (Example H126E12)
4<->Example-Twists2 :<->text1428.htm#16141<->Example-Twists2 :: CrvEll_Twists2 (Example H126E12)
3<->operations_curve-predicates :<->text1428.htm#16136<->operations_curve-predicates :: Predicates on Elliptic Curves (ELLIPTIC CURVES)
3<->operations_curve :<->text1428.htm<->operations_curve :: Operations on Curves (ELLIPTIC CURVES)
3<->function_field :<->text1429.htm<->function_field :: Polynomials (ELLIPTIC CURVES)
5<->DefiningPolynomial(E) <->text1429.htm#16143<->DefiningPolynomial(E) : CrvEll -&gt; RngMPolElt
5<->DivisionPolynomial(E, n, g) <->text1429.htm#16144<->DivisionPolynomial(E, n, g) : CrvEll, RngIntElt, RngUPolElt   -> RngUPolElt, RngUPolElt, RngUPolElt
5<->DivisionPolynomial(E, n) <->text1429.htm#16144<->DivisionPolynomial(E, n) : CrvEll, RngIntElt   -&gt; RngUPolElt, RngUPolElt, RngUPolElt
5<->TwoTorsionPolynomial(E) <->text1429.htm#16145<->TwoTorsionPolynomial(E) : CrvEll -&gt; RngMPolElt
4<->CrvEll_DivisionPolynomial (Example H126E13)<->text1429.htm#16146<->CrvEll_DivisionPolynomial (Example H126E13)
4<->Example-DivisionPolynomial :<->text1429.htm#16146<->Example-DivisionPolynomial :: CrvEll_DivisionPolynomial (Example H126E13)
3<->function_field :<->text1429.htm<->function_field :: Polynomials (ELLIPTIC CURVES)
3<->subgroup_schemes :<->text1430.htm<->subgroup_schemes :: Subgroup Schemes (ELLIPTIC CURVES)
3<->subgroup_schemes-creation :<->text1430.htm#16148<->subgroup_schemes-creation :: Creation of Subgroup Schemes (ELLIPTIC CURVES)
5<->SubgroupScheme(G, f) <->text1430.htm#16149<->SubgroupScheme(G, f) : SchGrpEll, RngUPolElt -&gt; SchGrpEll
5<->TorsionSubgroupScheme(G, n) <->text1430.htm#16150<->TorsionSubgroupScheme(G, n) : SchGrpEll, RngIntElt -&gt; SchGrpEll
3<->subgroup_schemes-creation :<->text1430.htm#16148<->subgroup_schemes-creation :: Creation of Subgroup Schemes (ELLIPTIC CURVES)
3<->subgroup_schemes-category :<->text1430.htm#16151<->subgroup_schemes-category :: Associated Structures (ELLIPTIC CURVES)
5<->Type :: Category(G) <->text1430.htm#16152<->Type :: Category(G) : SchGrpEll -&gt; Cat
5<->Category(G) <->text1430.htm#16152<->Category(G) : SchGrpEll -&gt; Cat
5<->Generic :: Curve(G) <->text1430.htm#16153<->Generic :: Curve(G) : SchGrpEll -&gt; CrvEll
5<->Curve(G) <->text1430.htm#16153<->Curve(G) : SchGrpEll -&gt; CrvEll
5<->CoefficientRing :: BaseRing(G) <->text1430.htm#16154<->CoefficientRing :: BaseRing(G) : SchGrpEll -&gt; Rng
5<->BaseRing(G) <->text1430.htm#16154<->BaseRing(G) : SchGrpEll -&gt; Rng
5<->DefiningSubschemePolynomial(G) <->text1430.htm#16155<->DefiningSubschemePolynomial(G) : SchGrpEll -&gt; RngUPolElt
3<->subgroup_schemes-category :<->text1430.htm#16151<->subgroup_schemes-category :: Associated Structures (ELLIPTIC CURVES)
3<->subgroup_schemes-predicates :<->text1430.htm#16156<->subgroup_schemes-predicates :: Predicates on Subgroup Schemes (ELLIPTIC CURVES)
5<->G1 eq G2 <->text1430.htm#16157<->G1 eq G2 : SchGrpEll, SchGrpEll -&gt; BoolElt
5<->G1 ne G2 <->text1430.htm#16158<->G1 ne G2 : SchGrpEll, SchGrpEll -&gt; BoolElt
3<->subgroup_schemes-predicates :<->text1430.htm#16156<->subgroup_schemes-predicates :: Predicates on Subgroup Schemes (ELLIPTIC CURVES)
3<->subgroup_schemes-points :<->text1430.htm#16159<->subgroup_schemes-points :: Points of Subgroup Schemes (ELLIPTIC CURVES)
5<->Order :: # G<->text1430.htm#16160<->Order :: # G: SchGrpEll -&gt; RngIntElt
5<-># G<->text1430.htm#16160<-># G: SchGrpEll -&gt; RngIntElt
5<->FactoredOrder(G) <->text1430.htm#16161<->FactoredOrder(G) : SchGrpEll -&gt; RngIntElt
5<->RationalPoints :: Points(G) <->text1430.htm#16162<->RationalPoints :: Points(G) : SchGrpEll -&gt; SetIndx
5<->Points(G) <->text1430.htm#16162<->Points(G) : SchGrpEll -&gt; SetIndx
4<->CrvEll_SubgroupSchemes (Example H126E14)<->text1430.htm#16163<->CrvEll_SubgroupSchemes (Example H126E14)
4<->Example-SubgroupSchemes :<->text1430.htm#16163<->Example-SubgroupSchemes :: CrvEll_SubgroupSchemes (Example H126E14)
3<->subgroup_schemes-points :<->text1430.htm#16159<->subgroup_schemes-points :: Points of Subgroup Schemes (ELLIPTIC CURVES)
3<->subgroup_schemes :<->text1430.htm<->subgroup_schemes :: Subgroup Schemes (ELLIPTIC CURVES)
3<->formal :<->text1431.htm<->formal :: The Formal Group (ELLIPTIC CURVES)
5<->FormalGroupLaw(E, prec) <->text1431.htm#16165<->FormalGroupLaw(E, prec) : CrvEll, RngIntElt -&gt; RngMPolElt
5<->FormalGroupHomomorphism(phi, prec) <->text1431.htm#16166<->FormalGroupHomomorphism(phi, prec) : MapSch, RngIntElt -&gt; RngSerPowElt
5<->FormalLog(E) <->text1431.htm#16167<->FormalLog(E) : CrvEll -&gt; RngSerPowElt, PtEll
3<->formal :<->text1431.htm<->formal :: The Formal Group (ELLIPTIC CURVES)
3<->pointset :<->text1432.htm<->pointset :: Operations on Point Sets (ELLIPTIC CURVES)
3<->pointset-creation :<->text1432.htm#16169<->pointset-creation :: Creation of Point Sets (ELLIPTIC CURVES)
5<->PointSet :: E(L) <->text1432.htm#16170<->PointSet :: E(L) : CrvEll, Rng -&gt; SetPtEll
5<->() :: E(L) <->text1432.htm#16170<->() :: E(L) : CrvEll, Rng -&gt; SetPtEll
5<->PointSet :: E(m) <->text1432.htm#16171<->PointSet :: E(m) : CrvEll, Map -&gt; SetPtEll
5<->() :: E(m) <->text1432.htm#16171<->() :: E(m) : CrvEll, Map -&gt; SetPtEll
3<->pointset-creation :<->text1432.htm#16169<->pointset-creation :: Creation of Point Sets (ELLIPTIC CURVES)
3<->pointset-category :<->text1432.htm#16172<->pointset-category :: Associated Structures (ELLIPTIC CURVES)
5<->Type :: Category(H) <->text1432.htm#16173<->Type :: Category(H) : SetPtEll -&gt; Cat
5<->Category(H) <->text1432.htm#16173<->Category(H) : SetPtEll -&gt; Cat
5<->Scheme(H) <->text1432.htm#16174<->Scheme(H) : SetPtEll -&gt; CrvEll
5<->Curve(H) <->text1432.htm#16175<->Curve(H) : SetPtEll -&gt; CrvEll
5<->Ring(H) <->text1432.htm#16176<->Ring(H) : SetPtEll -&gt; Rng
3<->pointset-category :<->text1432.htm#16172<->pointset-category :: Associated Structures (ELLIPTIC CURVES)
3<->pointset-predicates :<->text1432.htm#16177<->pointset-predicates :: Predicates on Point Sets (ELLIPTIC CURVES)
5<->H1 eq H2 <->text1432.htm#16178<->H1 eq H2 : SetPtEll, SetPtEll -&gt; BoolElt
5<->H1 ne H2 <->text1432.htm#16179<->H1 ne H2 : SetPtEll, SetPtEll -&gt; BoolElt
4<->CrvEll_PointSets (Example H126E15)<->text1432.htm#16180<->CrvEll_PointSets (Example H126E15)
4<->Example-PointSets :<->text1432.htm#16180<->Example-PointSets :: CrvEll_PointSets (Example H126E15)
3<->pointset-predicates :<->text1432.htm#16177<->pointset-predicates :: Predicates on Point Sets (ELLIPTIC CURVES)
3<->pointset :<->text1432.htm<->pointset :: Operations on Point Sets (ELLIPTIC CURVES)
3<->morphism :<->text1433.htm<->morphism :: Morphisms (ELLIPTIC CURVES)
3<->morphism_creation :<->text1433.htm#16182<->morphism_creation :: Creation Functions (ELLIPTIC CURVES)
4<->CrvEll_Isogeny (Example H126E16)<->text1433.htm#16183<->CrvEll_Isogeny (Example H126E16)
4<->Example-Isogeny :<->text1433.htm#16183<->Example-Isogeny :: CrvEll_Isogeny (Example H126E16)
5<->Isomorphism(E, F, [r, s, t, u]) <->text1433.htm#16184<->Isomorphism(E, F, [r, s, t, u]) : CrvEll, CrvEll, SeqEnum -&gt; Map
5<->Isomorphism(E, F) <->text1433.htm#16185<->Isomorphism(E, F) : CrvEll, CrvEll -&gt; Map
5<->Automorphism(E, [r, s, t, u]) <->text1433.htm#16186<->Automorphism(E, [r, s, t, u]) : CrvEll, SeqEnum -&gt; Map
5<->IsomorphismData(I) <->text1433.htm#16187<->IsomorphismData(I) : Map -&gt; [ RngElt ]
4<->CrvEll_Isomorphisms (Example H126E17)<->text1433.htm#16188<->CrvEll_Isomorphisms (Example H126E17)
4<->Example-Isomorphisms :<->text1433.htm#16188<->Example-Isomorphisms :: CrvEll_Isomorphisms (Example H126E17)
5<->IsIsomorphism(I) <->text1433.htm#16189<->IsIsomorphism(I) : Map -&gt; BoolElt, Map
5<->IsomorphismToIsogeny(I) <->text1433.htm#16190<->IsomorphismToIsogeny(I) : Map -&gt; Map
4<->CrvEll_Isomorphism (Example H126E18)<->text1433.htm#16191<->CrvEll_Isomorphism (Example H126E18)
4<->Example-Isomorphism :<->text1433.htm#16191<->Example-Isomorphism :: CrvEll_Isomorphism (Example H126E18)
5<->TranslationMap(E, P) <->text1433.htm#16192<->TranslationMap(E, P) : CrvEll, PtEll -&gt; Map
5<->RationalMap(i, t) <->text1433.htm#16193<->RationalMap(i, t) : Map, Map -&gt; Map
5<->TwoIsogeny(P) <->text1433.htm#16194<->TwoIsogeny(P) : PtEll -&gt; Map
4<->CrvEll_Map (Example H126E19)<->text1433.htm#16195<->CrvEll_Map (Example H126E19)
4<->Example-Map :<->text1433.htm#16195<->Example-Map :: CrvEll_Map (Example H126E19)
5<->IsogenyFromKernel(G) <->text1433.htm#16196<->IsogenyFromKernel(G) : SchGrpEll -&gt; CrvEll, Map
5<->IsogenyFromKernelFactored(G) <->text1433.htm#16197<->IsogenyFromKernelFactored(G) : SchGrpEll -&gt; CrvEll, Map
5<->IsogenyFromKernel(E, psi) <->text1433.htm#16198<->IsogenyFromKernel(E, psi) : CrvEll, RngUPolElt -&gt; CrvEll, Map
5<->IsogenyFromKernelFactored(E, psi) <->text1433.htm#16199<->IsogenyFromKernelFactored(E, psi) : SchGrpEll, RngUPolElt -&gt; CrvEll, Map
5<->PushThroughIsogeny(I, G) <->text1433.htm#16200<->PushThroughIsogeny(I, G) : Map, SchGrpEll -> SchGrpEll
5<->PushThroughIsogeny(I, v) <->text1433.htm#16200<->PushThroughIsogeny(I, v) : Map, RngUPolElt -&gt; RngUPolElt
5<->DualIsogeny(phi) <->text1433.htm#16201<->DualIsogeny(phi) : Map -&gt; Map
4<->CrvEll_DualIsogeny (Example H126E20)<->text1433.htm#16202<->CrvEll_DualIsogeny (Example H126E20)
4<->Example-DualIsogeny :<->text1433.htm#16202<->Example-DualIsogeny :: CrvEll_DualIsogeny (Example H126E20)
3<->morphism_creation :<->text1433.htm#16182<->morphism_creation :: Creation Functions (ELLIPTIC CURVES)
3<->morphism_predicates :<->text1433.htm#16203<->morphism_predicates :: Predicates on Isogenies (ELLIPTIC CURVES)
5<->IsConstant :: IsZero(I) <->text1433.htm#16204<->IsConstant :: IsZero(I) : Map -&gt; BoolElt
5<->IsZero(I) <->text1433.htm#16204<->IsZero(I) : Map -&gt; BoolElt
5<->I eq J <->text1433.htm#16205<->I eq J : Map, Map -&gt; BoolElt
3<->morphism_predicates :<->text1433.htm#16203<->morphism_predicates :: Predicates on Isogenies (ELLIPTIC CURVES)
3<->morphism_operations :<->text1433.htm#16206<->morphism_operations :: Structure Operations (ELLIPTIC CURVES)
5<->IsogenyMapPsi(I) <->text1433.htm#16207<->IsogenyMapPsi(I) : Map -&gt; RngUPolElt
5<->IsogenyMapPsiMulti(I) <->text1433.htm#16208<->IsogenyMapPsiMulti(I) : Map -&gt; RngUPolElt
5<->IsogenyMapPsiSquared(I) <->text1433.htm#16209<->IsogenyMapPsiSquared(I) : Map -&gt; RngUPolElt
5<->IsogenyMapPhi(I) <->text1433.htm#16210<->IsogenyMapPhi(I) : Map -&gt; RngUPolElt
5<->IsogenyMapPhiMulti(I) <->text1433.htm#16211<->IsogenyMapPhiMulti(I) : Map -&gt; RngUPolElt
5<->IsogenyMapOmega(I) <->text1433.htm#16212<->IsogenyMapOmega(I) : Map -&gt; RngMPolElt
5<->Kernel(I) <->text1433.htm#16213<->Kernel(I) : Map -&gt; SchGrpEll
5<->Degree(I) <->text1433.htm#16214<->Degree(I) : Map -&gt; RngIntElt
3<->morphism_operations :<->text1433.htm#16206<->morphism_operations :: Structure Operations (ELLIPTIC CURVES)
3<->endomorphism_ring :<->text1433.htm#16215<->endomorphism_ring :: Endomorphisms (ELLIPTIC CURVES)
5<->MultiplicationByMMap(E, m) <->text1433.htm#16216<->MultiplicationByMMap(E, m) : CrvEll, RngIntElt -&gt; Map
5<->IdentityIsogeny(E) <->text1433.htm#16217<->IdentityIsogeny(E) : CrvEll -&gt; Map
5<->IdentityMap(E) <->text1433.htm#16218<->IdentityMap(E) : CrvEll -&gt; Map
5<->NegationMap(E) <->text1433.htm#16219<->NegationMap(E) : CrvEll -&gt; Map
5<->FrobeniusMap(E, i) <->text1433.htm#16220<->FrobeniusMap(E, i) : CrvEll, RngIntElt -&gt; Map
5<->FrobeniusMap(E) <->text1433.htm#16221<->FrobeniusMap(E) : CrvEll -&gt; Map
4<->CrvEll_Frobenius (Example H126E21)<->text1433.htm#16222<->CrvEll_Frobenius (Example H126E21)
4<->Example-Frobenius :<->text1433.htm#16222<->Example-Frobenius :: CrvEll_Frobenius (Example H126E21)
3<->endomorphism_ring :<->text1433.htm#16215<->endomorphism_ring :: Endomorphisms (ELLIPTIC CURVES)
3<->automorphism_group :<->text1433.htm#16223<->automorphism_group :: Automorphisms (ELLIPTIC CURVES)
5<->AutomorphismGroup(E) <->text1433.htm#16224<->AutomorphismGroup(E) : CrvEll -&gt; Grp, Map
5<->Automorphisms(E) <->text1433.htm#16225<->Automorphisms(E) : CrvEll -&gt; SeqEnum
3<->automorphism_group :<->text1433.htm#16223<->automorphism_group :: Automorphisms (ELLIPTIC CURVES)
3<->morphism :<->text1433.htm<->morphism :: Morphisms (ELLIPTIC CURVES)
3<->point :<->text1434.htm<->point :: Operations on Points (ELLIPTIC CURVES)
3<->point-creation :<->text1434.htm#16227<->point-creation :: Creation of Points (ELLIPTIC CURVES)
5<->Points(E, x) <->text1434.htm#16228<->Points(E, x) : CrvEll, RngElt -> [ PtEll ]
5<->Points(H, x) <->text1434.htm#16228<->Points(H, x) : SetPtEll, RngElt -&gt; [ PtEll ]
5<->PointsAtInfinity(E) <->text1434.htm#16229<->PointsAtInfinity(E) : CrvEll -> @ PtEll @
5<->PointsAtInfinity(H) <->text1434.htm#16229<->PointsAtInfinity(H) : SetPtEll -&gt; @ PtEll @
3<->point-creation :<->text1434.htm#16227<->point-creation :: Creation of Points (ELLIPTIC CURVES)
3<->point-creation_predicates :<->text1434.htm#16230<->point-creation_predicates :: Creation Predicates (ELLIPTIC CURVES)
5<->IsPoint(E, S) <->text1434.htm#16231<->IsPoint(E, S) : CrvEll, [ RngElt ] -> BoolElt, PtEll
5<->IsPoint(H, S) <->text1434.htm#16231<->IsPoint(H, S) : SetPtEll, [ RngElt ] -&gt; BoolElt, PtEll
5<->IsPoint(E, x) <->text1434.htm#16232<->IsPoint(E, x) : CrvEll, RngElt -> BoolElt, PtEll
5<->IsPoint(H, x) <->text1434.htm#16232<->IsPoint(H, x) : SetPtEll, RngElt -&gt; BoolElt, PtEll
3<->point-creation_predicates :<->text1434.htm#16230<->point-creation_predicates :: Creation Predicates (ELLIPTIC CURVES)
3<->point-access :<->text1434.htm#16233<->point-access :: Access Operations (ELLIPTIC CURVES)
5<->[] :: P[i] <->text1434.htm#16234<->[] :: P[i] : PtEll, RngIntElt -&gt; RngElt
5<->Eltseq :: ElementToSequence(P)<->text1434.htm#16235<->Eltseq :: ElementToSequence(P): PtEll -&gt; [ RngElt ]
5<->ElementToSequence(P)<->text1434.htm#16235<->ElementToSequence(P): PtEll -&gt; [ RngElt ]
3<->point-access :<->text1434.htm#16233<->point-access :: Access Operations (ELLIPTIC CURVES)
3<->point-category :<->text1434.htm#16236<->point-category :: Associated Structures (ELLIPTIC CURVES)
5<->Type :: Category(P) <->text1434.htm#16237<->Type :: Category(P) : PtEll -&gt; Cat
5<->Category(P) <->text1434.htm#16237<->Category(P) : PtEll -&gt; Cat
5<->Parent(P) <->text1434.htm#16238<->Parent(P) : PtEll -&gt; SetPtEll
5<->Curve :: Scheme(P) <->text1434.htm#16239<->Curve :: Scheme(P) : SetPtEll -&gt; CrvEll
5<->Scheme(P) <->text1434.htm#16239<->Scheme(P) : SetPtEll -&gt; CrvEll
3<->point-category :<->text1434.htm#16236<->point-category :: Associated Structures (ELLIPTIC CURVES)
3<->point-arithmetic :<->text1434.htm#16240<->point-arithmetic :: Arithmetic (ELLIPTIC CURVES)
5<->- P <->text1434.htm#16241<->- P : PtEll -&gt; PtEll
5<->P + Q <->text1434.htm#16242<->P + Q : PtEll, PtEll -&gt; PtEll
5<->P +:= Q <->text1434.htm#16243<->P +:= Q : PtEll, PtEll -&gt;
5<->P - Q <->text1434.htm#16244<->P - Q : PtEll, PtEll -&gt; PtEll
5<->P -:= Q <->text1434.htm#16245<->P -:= Q : PtEll, PtEll -&gt;
5<->P * n <->text1434.htm#16246<->P * n : PtEll, RngIntElt -> PtEll
5<->n * P <->text1434.htm#16246<->n * P : RngIntElt, PtEll -&gt; PtEll
5<->P *:= n <->text1434.htm#16247<->P *:= n : PtEll, RngIntElt -&gt;
3<->point-arithmetic :<->text1434.htm#16240<->point-arithmetic :: Arithmetic (ELLIPTIC CURVES)
3<->division-points :<->text1434.htm#16248<->division-points :: Division Points (ELLIPTIC CURVES)
5<->P / n <->text1434.htm#16249<->P / n : PtEll, RngIntElt -&gt; PtEll
5<->P /:= n <->text1434.htm#16250<->P /:= n : PtEll, RngIntElt -&gt;
5<->DivisionPoints(P, n) <->text1434.htm#16251<->DivisionPoints(P, n) : PtEll, RngIntElt -&gt; [ PtEll ]
5<->IsDivisibleBy(P, n) <->text1434.htm#16252<->IsDivisibleBy(P, n) : PtEll, RngIntElt -&gt; BoolElt, PtEll
4<->CrvEll_PointArithmetic1 (Example H126E22)<->text1434.htm#16253<->CrvEll_PointArithmetic1 (Example H126E22)
4<->Example-PointArithmetic1 :<->text1434.htm#16253<->Example-PointArithmetic1 :: CrvEll_PointArithmetic1 (Example H126E22)
4<->CrvEll_PointArithmetic2 (Example H126E23)<->text1434.htm#16254<->CrvEll_PointArithmetic2 (Example H126E23)
4<->Example-PointArithmetic2 :<->text1434.htm#16254<->Example-PointArithmetic2 :: CrvEll_PointArithmetic2 (Example H126E23)
4<->CrvEll_GenericPoint (Example H126E24)<->text1434.htm#16255<->CrvEll_GenericPoint (Example H126E24)
4<->Example-GenericPoint :<->text1434.htm#16255<->Example-GenericPoint :: CrvEll_GenericPoint (Example H126E24)
3<->division-points :<->text1434.htm#16248<->division-points :: Division Points (ELLIPTIC CURVES)
3<->point-order :<->text1434.htm#16256<->point-order :: Point Order (ELLIPTIC CURVES)
5<->Order(P) <->text1434.htm#16257<->Order(P) : PtEll -&gt; RngIntElt
5<->FactoredOrder(P) <->text1434.htm#16258<->FactoredOrder(P) : PtEll -&gt; RngIntElt
4<->CrvEll_PlayWithPoints (Example H126E25)<->text1434.htm#16259<->CrvEll_PlayWithPoints (Example H126E25)
4<->Example-PlayWithPoints :<->text1434.htm#16259<->Example-PlayWithPoints :: CrvEll_PlayWithPoints (Example H126E25)
3<->point-order :<->text1434.htm#16256<->point-order :: Point Order (ELLIPTIC CURVES)
3<->point-predicates :<->text1434.htm#16260<->point-predicates :: Predicates on Points (ELLIPTIC CURVES)
5<->IsIdentity :: IsId(P) <->text1434.htm#16261<->IsIdentity :: IsId(P) : PtEll -&gt; BoolElt
5<->IsZero :: IsId(P) <->text1434.htm#16261<->IsZero :: IsId(P) : PtEll -&gt; BoolElt
5<->IsId(P) <->text1434.htm#16261<->IsId(P) : PtEll -&gt; BoolElt
5<->P eq Q <->text1434.htm#16262<->P eq Q : PtEll, PtEll -&gt; BoolElt
5<->P ne Q <->text1434.htm#16263<->P ne Q : PtEll, PtEll -&gt; BoolElt
5<->P in H <->text1434.htm#16264<->P in H : PtEll, SetPtEll -&gt; BoolElt
5<->P in E <->text1434.htm#16265<->P in E : PtEll, CrvEll -&gt; BoolElt
5<->IsOrder(P, m) <->text1434.htm#16266<->IsOrder(P, m) : PtEll, RngIntElt -&gt; BoolElt
5<->IsIntegral(P) <->text1434.htm#16267<->IsIntegral(P) : PtEll -&gt; BoolElt
5<->IsSIntegral(P, S) <->text1434.htm#16268<->IsSIntegral(P, S) : PtEll, SeqEnum -&gt; BoolElt
4<->CrvEll_PointPredicates (Example H126E26)<->text1434.htm#16269<->CrvEll_PointPredicates (Example H126E26)
4<->Example-PointPredicates :<->text1434.htm#16269<->Example-PointPredicates :: CrvEll_PointPredicates (Example H126E26)
3<->point-predicates :<->text1434.htm#16260<->point-predicates :: Predicates on Points (ELLIPTIC CURVES)
3<->weil_pairing :<->text1434.htm#16270<->weil_pairing :: Weil Pairing (ELLIPTIC CURVES)
5<->WeilPairing(P, Q, n) <->text1434.htm#16271<->WeilPairing(P, Q, n) : PtEll, PtEll, RngIntElt -&gt; RngElt
5<->IsLinearlyIndependent(S, n) <->text1434.htm#16272<->IsLinearlyIndependent(S, n) : [ PtEll ], RngIntElt -&gt; BoolElt
5<->IsLinearlyIndependent(P, Q, n) <->text1434.htm#16273<->IsLinearlyIndependent(P, Q, n) : PtEll, PtEll, RngIntElt -&gt; BoolElt
4<->CrvEll_WeilPairing (Example H126E27)<->text1434.htm#16274<->CrvEll_WeilPairing (Example H126E27)
4<->Example-WeilPairing :<->text1434.htm#16274<->Example-WeilPairing :: CrvEll_WeilPairing (Example H126E27)
3<->weil_pairing :<->text1434.htm#16270<->weil_pairing :: Weil Pairing (ELLIPTIC CURVES)
3<->point :<->text1434.htm<->point :: Operations on Points (ELLIPTIC CURVES)
3<->elliptic-curve :<->text1425.htm<->elliptic-curve :: ELLIPTIC CURVES
3<->elliptic-curve-fldfin :<->text1437.htm<->elliptic-curve-fldfin :: ELLIPTIC CURVES OVER FINITE FIELDS
3<->ff_curves-supersingular_curves :<->text1438.htm<->ff_curves-supersingular_curves :: Supersingular Curves (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->IsSupersingular(E : parameters) <->text1438.htm#16279<->IsSupersingular(E : parameters) : CrvEll -&gt; BoolElt
5<->SupersingularPolynomial(p) <->text1438.htm#16280<->SupersingularPolynomial(p) : RngIntElt -&gt; RngUPolElt
5<->IsOrdinary(E) <->text1438.htm#16281<->IsOrdinary(E) : CrvEll -&gt; BoolElt
5<->IsProbablySupersingular(E) <->text1438.htm#16282<->IsProbablySupersingular(E) : CrvEll -&gt; BoolElt
3<->ff_curves-supersingular_curves :<->text1438.htm<->ff_curves-supersingular_curves :: Supersingular Curves (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-group_points :<->text1439.htm<->ff_curves-group_points :: The Order of the Group of Points (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-point_counting :<->text1439.htm#16284<->ff_curves-point_counting :: Point Counting (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->\# E <->text1439.htm#16285<->\# E : CrvEll -> RngIntElt
5<->Order :: # H <->text1439.htm#16285<->Order :: # H : SetPtEll -&gt; RngIntElt
5<->Order(E) : CrvEll -> RngIntElt :: # H <->text1439.htm#16285<->Order(E) : CrvEll -> RngIntElt :: # H : SetPtEll -&gt; RngIntElt
5<-># H <->text1439.htm#16285<-># H : SetPtEll -&gt; RngIntElt
5<->FactoredOrder(E) <->text1439.htm#16286<->FactoredOrder(E) : CrvEll -> RngIntElt
5<->FactoredOrder(H) <->text1439.htm#16286<->FactoredOrder(H) : SetPtEll -&gt; RngIntElt
5<->\nameSEAf{SEA}(E :\ \parameters) <->text1439.htm#16287<->\nameSEAf{SEA}(E :\ \parameters) : CrvEll -> RngIntElt
5<->SEA(H : parameters) <->text1439.htm#16287<->SEA(H : parameters) : SetPtEll -&gt; RngIntElt
4<->CrvEllFldFin_SEA (Example H127E1)<->text1439.htm#16288<->CrvEllFldFin_SEA (Example H127E1)
4<->Example-SEA :<->text1439.htm#16288<->Example-SEA :: CrvEllFldFin_SEA (Example H127E1)
5<->SetVerbose("SEA", v) <->text1439.htm#16289<->SetVerbose("SEA", v) : MonStgElt, RngIntElt -&gt;
5<->Order(E, r) <->text1439.htm#16290<->Order(E, r) : CrvEll, RngIntElt -> RngIntElt
5<->Order(H, r) <->text1439.htm#16290<->Order(H, r) : SetPtEll, RngIntElt -&gt; RngIntElt
5<->Trace(E)<->text1439.htm#16291<->Trace(E): CrvEll -> RngIntElt
5<->TraceOfFrobenius :: Trace(H)<->text1439.htm#16291<->TraceOfFrobenius :: Trace(H): SetPtEll -&gt; RngIntElt
5<->Trace(H)<->text1439.htm#16291<->Trace(H): SetPtEll -&gt; RngIntElt
5<->Trace(E, r)<->text1439.htm#16292<->Trace(E, r): CrvEll, RngIntElt -> RngIntElt
5<->TraceOfFrobenius :: Trace(H, r)<->text1439.htm#16292<->TraceOfFrobenius :: Trace(H, r): SetPtEll, RngIntElt -&gt; RngIntElt
5<->TraceOfFrobenius(E, r): CrvEll, RngIntElt -> RngIntElt :: Trace(H, r)<->text1439.htm#16292<->TraceOfFrobenius(E, r): CrvEll, RngIntElt -> RngIntElt :: Trace(H, r): SetPtEll, RngIntElt -&gt; RngIntElt
5<->Trace(H, r)<->text1439.htm#16292<->Trace(H, r): SetPtEll, RngIntElt -&gt; RngIntElt
4<->CrvEllFldFin_Order (Example H127E2)<->text1439.htm#16293<->CrvEllFldFin_Order (Example H127E2)
4<->Example-Order :<->text1439.htm#16293<->Example-Order :: CrvEllFldFin_Order (Example H127E2)
4<->CrvEllFldFin_Twists (Example H127E3)<->text1439.htm#16294<->CrvEllFldFin_Twists (Example H127E3)
4<->Example-Twists :<->text1439.htm#16294<->Example-Twists :: CrvEllFldFin_Twists (Example H127E3)
3<->ff_curves-point_counting :<->text1439.htm#16284<->ff_curves-point_counting :: Point Counting (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-zeta_functions :<->text1439.htm#16295<->ff_curves-zeta_functions :: Zeta Functions (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->ZetaFunction(E) <->text1439.htm#16296<->ZetaFunction(E) : CrvEll -&gt; FldFunRatUElt
4<->CrvEllFldFin_Invariants to Read (Example H127E4)<->text1439.htm#16297<->CrvEllFldFin_Invariants to Read (Example H127E4)
4<->Example-Invariants to Read :<->text1439.htm#16297<->Example-Invariants to Read :: CrvEllFldFin_Invariants to Read (Example H127E4)
3<->ff_curves-zeta_functions :<->text1439.htm#16295<->ff_curves-zeta_functions :: Zeta Functions (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-crypto_curve :<->text1439.htm#16298<->ff_curves-crypto_curve :: Cryptographic Elliptic Curve Domains (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->ValidateCryptographicCurve :: CryptographicCurve(F) <->text1439.htm#16299<->ValidateCryptographicCurve :: CryptographicCurve(F) : FldFin -&gt; CrvEll, PtEll, RngIntElt, RngIntElt
5<->CryptographicCurve(F) <->text1439.htm#16299<->CryptographicCurve(F) : FldFin -&gt; CrvEll, PtEll, RngIntElt, RngIntElt
5<->SetVerbose("ECDom", v) <->text1439.htm#16300<->SetVerbose("ECDom", v) : MonStgElt, RngIntElt -&gt;
4<->CrvEllFldFin_CryptographicCurve (Example H127E5)<->text1439.htm#16301<->CrvEllFldFin_CryptographicCurve (Example H127E5)
4<->Example-CryptographicCurve :<->text1439.htm#16301<->Example-CryptographicCurve :: CrvEllFldFin_CryptographicCurve (Example H127E5)
3<->ff_curves-crypto_curve :<->text1439.htm#16298<->ff_curves-crypto_curve :: Cryptographic Elliptic Curve Domains (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-group_points :<->text1439.htm<->ff_curves-group_points :: The Order of the Group of Points (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ff_curves-points :<->text1440.htm<->ff_curves-points :: Enumeration of Points (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->Points(H) <->text1440.htm#16303<->Points(H) : SetPtEll -> @ PtEll @
5<->RationalPoints :: Points(E) <->text1440.htm#16303<->RationalPoints :: Points(E) : CrvEll -&gt; @ PtEll @
5<->RationalPoints(H) : SetPtEll -> @ PtEll @ :: Points(E) <->text1440.htm#16303<->RationalPoints(H) : SetPtEll -> @ PtEll @ :: Points(E) : CrvEll -&gt; @ PtEll @
5<->Points(E) <->text1440.htm#16303<->Points(E) : CrvEll -&gt; @ PtEll @
5<->Random(H)<->text1440.htm#16304<->Random(H): SetPtEll -> PtEll
5<->Random(E)<->text1440.htm#16304<->Random(E): CrvEll -&gt; PtEll
3<->ff_curves-points :<->text1440.htm<->ff_curves-points :: Enumeration of Points (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->abelian_group :<->text1441.htm<->abelian_group :: Abelian Group Structure (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->AbelianGroup(E) <->text1441.htm#16306<->AbelianGroup(E) :  CrvEll -> GrpAb, Map
5<->TorsionSubgroup :: AbelianGroup(H) <->text1441.htm#16306<->TorsionSubgroup :: AbelianGroup(H) : SetPtEll -&gt; GrpAb, Map
5<->TorsionSubgroup(E) : CrvEll -> GrpAb, Map :: AbelianGroup(H) <->text1441.htm#16306<->TorsionSubgroup(E) : CrvEll -> GrpAb, Map :: AbelianGroup(H) : SetPtEll -&gt; GrpAb, Map
5<->AbelianGroup(H) <->text1441.htm#16306<->AbelianGroup(H) : SetPtEll -&gt; GrpAb, Map
5<->Generators(E) <->text1441.htm#16307<->Generators(E) : CrvEll -> [ PtEll ]
5<->Generators(H) <->text1441.htm#16307<->Generators(H) : SetPtEll -&gt; [ PtEll ]
5<->NumberOfGenerators(E) <->text1441.htm#16308<->NumberOfGenerators(E) : CrvEll -> RngIntElt
5<->Ngens :: NumberOfGenerators(H) <->text1441.htm#16308<->Ngens :: NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
5<->Ngens(E) : CrvEll -> RngIntElt :: NumberOfGenerators(H) <->text1441.htm#16308<->Ngens(E) : CrvEll -> RngIntElt :: NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
5<->NumberOfGenerators(H) <->text1441.htm#16308<->NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
4<->CrvEllFldFin_AbelianGroup (Example H127E6)<->text1441.htm#16309<->CrvEllFldFin_AbelianGroup (Example H127E6)
4<->Example-AbelianGroup :<->text1441.htm#16309<->Example-AbelianGroup :: CrvEllFldFin_AbelianGroup (Example H127E6)
3<->abelian_group :<->text1441.htm<->abelian_group :: Abelian Group Structure (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm<->pairings :: Pairings on Elliptic Curves (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm#16311<->pairings :: Weil Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->WeilPairing(P, Q, n) <->text1442.htm#16312<->WeilPairing(P, Q, n) : PtEll, PtEll, RngIntElt -&gt; RngElt
3<->pairings :<->text1442.htm#16311<->pairings :: Weil Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm#16313<->pairings :: Tate Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->TatePairing(P, Q, n) <->text1442.htm#16314<->TatePairing(P, Q, n) : PtEll, PtEll, RngIntElt -&gt; RngElt
5<->ReducedTatePairing(P, Q, n) <->text1442.htm#16315<->ReducedTatePairing(P, Q, n) : PtEll, PtEll, RngIntElt -&gt; RngElt
3<->pairings :<->text1442.htm#16313<->pairings :: Tate Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm#16316<->pairings :: Eta Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->EtaTPairing(P, Q, n, q) <->text1442.htm#16317<->EtaTPairing(P, Q, n, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
5<->ReducedEtaTPairing(P, Q, n, q) <->text1442.htm#16318<->ReducedEtaTPairing(P, Q, n, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
5<->EtaqPairing(P, Q, n, q) <->text1442.htm#16319<->EtaqPairing(P, Q, n, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
3<->pairings :<->text1442.htm#16316<->pairings :: Eta Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm#16320<->pairings :: Ate Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->AteTPairing(Q, P, n, q) <->text1442.htm#16321<->AteTPairing(Q, P, n, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
5<->ReducedAteTPairing(Q, P, n, q) <->text1442.htm#16322<->ReducedAteTPairing(Q, P, n, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
5<->AteqPairing(P, Q, m, q) <->text1442.htm#16323<->AteqPairing(P, Q, m, q) : PtEll, PtEll, RngIntElt, RngIntElt -&gt; RngElt
4<->CrvEllFldFin_PairingsFiniteFields (Example H127E7)<->text1442.htm#16324<->CrvEllFldFin_PairingsFiniteFields (Example H127E7)
4<->Example-PairingsFiniteFields :<->text1442.htm#16324<->Example-PairingsFiniteFields :: CrvEllFldFin_PairingsFiniteFields (Example H127E7)
4<->CrvEllFldFin_MOVWithWeilPairing (Example H127E8)<->text1442.htm#16325<->CrvEllFldFin_MOVWithWeilPairing (Example H127E8)
4<->Example-MOVWithWeilPairing :<->text1442.htm#16325<->Example-MOVWithWeilPairing :: CrvEllFldFin_MOVWithWeilPairing (Example H127E8)
3<->pairings :<->text1442.htm#16320<->pairings :: Ate Pairing (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->pairings :<->text1442.htm<->pairings :: Pairings on Elliptic Curves (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->ec_weil_desc :<->text1443.htm<->ec_weil_desc :: Weil Descent in Characteristic Two (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->WeilDescent(E, k, c) <->text1443.htm#16327<->WeilDescent(E, k, c) : FldFun, FldFin, FldFinElt -&gt; CrvPln, Map
5<->WeilDescentGenus(E, k, c) <->text1443.htm#16328<->WeilDescentGenus(E, k, c) : FldFun, FldFin, FldFinElt -&gt; RngIntElt
5<->WeilDescentDegree(E, k, c) <->text1443.htm#16329<->WeilDescentDegree(E, k, c) : FldFun, FldFin, FldFinElt -&gt; RngIntElt
4<->CrvEllFldFin_ec_weil_desc (Example H127E9)<->text1443.htm#16330<->CrvEllFldFin_ec_weil_desc (Example H127E9)
4<->Example-ec_weil_desc :<->text1443.htm#16330<->Example-ec_weil_desc :: CrvEllFldFin_ec_weil_desc (Example H127E9)
3<->ec_weil_desc :<->text1443.htm<->ec_weil_desc :: Weil Descent in Characteristic Two (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->discrete_logs :<->text1444.htm<->discrete_logs :: Discrete Logarithms (ELLIPTIC CURVES OVER FINITE FIELDS)
5<->Log(Q, P) <->text1444.htm#16332<->Log(Q, P) : PtEll, PtEll -&gt; RngIntElt
5<->Log(Q, P, t) <->text1444.htm#16333<->Log(Q, P, t) : PtEll, PtEll, RngIntElt -&gt; RngIntElt
4<->CrvEllFldFin_ECDL (Example H127E10)<->text1444.htm#16334<->CrvEllFldFin_ECDL (Example H127E10)
4<->Example-ECDL :<->text1444.htm#16334<->Example-ECDL :: CrvEllFldFin_ECDL (Example H127E10)
3<->discrete_logs :<->text1444.htm<->discrete_logs :: Discrete Logarithms (ELLIPTIC CURVES OVER FINITE FIELDS)
3<->elliptic-curve-fldfin :<->text1437.htm<->elliptic-curve-fldfin :: ELLIPTIC CURVES OVER FINITE FIELDS
3<->elliptic-curve-qnf :<->text1447.htm<->elliptic-curve-qnf :: ELLIPTIC CURVES OVER Q AND NUMBER FIELDS
3<->intro :<->text1448.htm<->intro :: Introduction (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->intro :<->text1449.htm<->intro :: Curves over the Rationals (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->rational_curves-local :<->text1449.htm#16340<->rational_curves-local :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->Conductor(E) <->text1449.htm#16341<->Conductor(E) : CrvEll -&gt; RngIntElt
5<->BadPrimes(E) <->text1449.htm#16342<->BadPrimes(E) : CrvEll -&gt; [ RngIntElt ]
5<->TamagawaNumber(E, p) <->text1449.htm#16343<->TamagawaNumber(E, p) : CrvEll, RngIntElt -&gt; RngIntElt
5<->TamagawaNumbers(E) <->text1449.htm#16344<->TamagawaNumbers(E) : CrvEll -&gt; [ RngIntElt ]
5<->LocalInformation(E, p) <->text1449.htm#16345<->LocalInformation(E, p) : CrvEll, RngIntElt    -&gt; &lt;RngIntElt, RngIntElt, RngIntElt, RngIntElt, SymKod, BoolElt&gt;, CrvEll
5<->LocalInformation(E) <->text1449.htm#16346<->LocalInformation(E) : CrvEll -&gt; [ Tup ]
5<->ReductionType(E, p) <->text1449.htm#16347<->ReductionType(E, p) : CrvEll, RngIntElt -&gt; MonStgElt
5<->TraceOfFrobeniusDirect(E, p) <->text1449.htm#16348<->TraceOfFrobeniusDirect(E, p) : CrvEll, RngIntElt -&gt; RngIntElt
5<->TracesOfFrobenius(E, B) <->text1449.htm#16349<->TracesOfFrobenius(E, B) : CrvEll, RngIntElt -&gt; SeqEnum
4<->CrvEllQNF_frobenius-traces (Example H128E1)<->text1449.htm#16350<->CrvEllQNF_frobenius-traces (Example H128E1)
4<->Example-frobenius-traces :<->text1449.htm#16350<->Example-frobenius-traces :: CrvEllQNF_frobenius-traces (Example H128E1)
3<->rational_curves-local :<->text1449.htm#16340<->rational_curves-local :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->rational_curves-kodaira :<->text1449.htm#16351<->rational_curves-kodaira :: Kodaira Symbols (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->KodairaSymbol(E, p) <->text1449.htm#16352<->KodairaSymbol(E, p) : CrvEll, RngIntElt -&gt; SymKod
5<->KodairaSymbols(E) <->text1449.htm#16353<->KodairaSymbols(E) : CrvEll -&gt; [ SymKod ]
5<->KodairaSymbol(s) <->text1449.htm#16354<->KodairaSymbol(s) : MonStgElt -&gt; SymKod
5<->h eq k <->text1449.htm#16355<->h eq k : SymKod, SymKod -&gt; BoolElt
5<->h ne k <->text1449.htm#16356<->h ne k : SymKod, SymKod -&gt; BoolElt
4<->CrvEllQNF_Kodaira (Example H128E2)<->text1449.htm#16357<->CrvEllQNF_Kodaira (Example H128E2)
4<->Example-Kodaira :<->text1449.htm#16357<->Example-Kodaira :: CrvEllQNF_Kodaira (Example H128E2)
3<->rational_curves-kodaira :<->text1449.htm#16351<->rational_curves-kodaira :: Kodaira Symbols (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->complex-multiplication-over-Q :<->text1449.htm#16358<->complex-multiplication-over-Q :: Complex Multiplication (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->HasComplexMultiplication(E) <->text1449.htm#16359<->HasComplexMultiplication(E) : CrvEll -&gt; BoolElt, RngIntElt
3<->complex-multiplication-over-Q :<->text1449.htm#16358<->complex-multiplication-over-Q :: Complex Multiplication (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->rational_curves-isogenies :<->text1449.htm#16360<->rational_curves-isogenies :: Isogenous Curves (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->IsogenousCurves(E) <->text1449.htm#16361<->IsogenousCurves(E) : CrvEll[FldRat] -&gt; SeqEnum, RngIntElt
5<->FaltingsHeight(E) <->text1449.htm#16362<->FaltingsHeight(E) : CrvEll[FldRat] -&gt; FldReElt
4<->CrvEllQNF_isog-curves (Example H128E3)<->text1449.htm#16363<->CrvEllQNF_isog-curves (Example H128E3)
4<->Example-isog-curves :<->text1449.htm#16363<->Example-isog-curves :: CrvEllQNF_isog-curves (Example H128E3)
3<->rational_curves-isogenies :<->text1449.htm#16360<->rational_curves-isogenies :: Isogenous Curves (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->rational_curves-height :<->text1449.htm#16364<->rational_curves-height :: Heights and Height Pairing (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->WeilHeight :: NaiveHeight(P) <->text1449.htm#16365<->WeilHeight :: NaiveHeight(P) : PtEll -&gt; FldPrElt
5<->NaiveHeight(P) <->text1449.htm#16365<->NaiveHeight(P) : PtEll -&gt; FldPrElt
5<->CanonicalHeight :: Height(P: parameters) <->text1449.htm#16366<->CanonicalHeight :: Height(P: parameters) : PtEll -&gt; NFldComElt
5<->Height(P: parameters) <->text1449.htm#16366<->Height(P: parameters) : PtEll -&gt; NFldComElt
5<->LocalHeight(P, p) <->text1449.htm#16367<->LocalHeight(P, p) : PtEll, RngIntElt -&gt; FldComElt
5<->HeightPairing(P, Q: parameters) <->text1449.htm#16368<->HeightPairing(P, Q: parameters) : PtEll, PtEll -&gt; FldComElt
5<->HeightPairingMatrix(E\col\ \parameters) <->text1449.htm#16369<->HeightPairingMatrix(E\col\ \parameters) : CrvEll  -> AlgMat
5<->HeightPairingMatrix(S: parameters) <->text1449.htm#16369<->HeightPairingMatrix(S: parameters) : [PtEll]  -&gt; AlgMat
5<->Regulator(S) <->text1449.htm#16370<->Regulator(S) : [ PtEll ] -&gt; FldComElt
5<->Regulator(E) <->text1449.htm#16371<->Regulator(E) : CrvEll -&gt; FldComElt
4<->CrvEllQNF_FunWithHeights (Example H128E4)<->text1449.htm#16372<->CrvEllQNF_FunWithHeights (Example H128E4)
4<->Example-FunWithHeights :<->text1449.htm#16372<->Example-FunWithHeights :: CrvEllQNF_FunWithHeights (Example H128E4)
5<->SilvermanBound(E) <->text1449.htm#16373<->SilvermanBound(E) : CrvEll -> FldPrElt
5<->SilvermanBound(H) <->text1449.htm#16373<->SilvermanBound(H) : SetPtEll -&gt; FldPrElt
5<->SiksekBound(E\col\ \parameters) <->text1449.htm#16374<->SiksekBound(E\col\ \parameters) : CrvEll -> FldPrElt
5<->SiksekBound(H: parameters) <->text1449.htm#16374<->SiksekBound(H: parameters) : SetPtEll -&gt; FldPrElt
4<->CrvEllQNF_Bounds (Example H128E5)<->text1449.htm#16375<->CrvEllQNF_Bounds (Example H128E5)
4<->Example-Bounds :<->text1449.htm#16375<->Example-Bounds :: CrvEllQNF_Bounds (Example H128E5)
5<->IsLinearlyIndependent(P, Q) <->text1449.htm#16376<->IsLinearlyIndependent(P, Q) : PtEll, PtEll  -&gt; BoolElt, ModTupElt
5<->IsLinearlyIndependent(S) <->text1449.htm#16377<->IsLinearlyIndependent(S) : [ PtEll ]  -&gt; BoolElt, ModTupElt
5<->ReducedBasis(S) <->text1449.htm#16378<->ReducedBasis(S) : [ PtEll ]  -&gt;  [ PtEll ]
4<->CrvEllQNF_LinearIndependence (Example H128E6)<->text1449.htm#16379<->CrvEllQNF_LinearIndependence (Example H128E6)
4<->Example-LinearIndependence :<->text1449.htm#16379<->Example-LinearIndependence :: CrvEllQNF_LinearIndependence (Example H128E6)
5<->pAdicHeight(P, p) <->text1449.htm#16380<->pAdicHeight(P, p) : PtEll, RngIntElt -&gt; FldPadElt
5<->pAdicRegulator(S, p) <->text1449.htm#16381<->pAdicRegulator(S, p) : [PtEll], RngIntElt -&gt; FldPadElt
5<->EisensteinTwo(E, p) <->text1449.htm#16382<->EisensteinTwo(E, p) : CrvEll, RngIntElt -&gt; FldPadElt
5<->FrobeniusMatrix(E, p) <->text1449.htm#16383<->FrobeniusMatrix(E, p) : CrvEll, RngIntElt -&gt; Mtrx
4<->CrvEllQNF_padic-height (Example H128E7)<->text1449.htm#16384<->CrvEllQNF_padic-height (Example H128E7)
4<->Example-padic-height :<->text1449.htm#16384<->Example-padic-height :: CrvEllQNF_padic-height (Example H128E7)
3<->rational_curves-height :<->text1449.htm#16364<->rational_curves-height :: Heights and Height Pairing (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->heegner-points :<->text1449.htm#16385<->heegner-points :: Heegner Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->HeegnerPoint(E : parameters) <->text1449.htm#16386<->HeegnerPoint(E : parameters) : CrvEll -&gt; BoolElt, PtEll
5<->HeegnerPoint(f \col\ \parameters) <->text1449.htm#16387<->HeegnerPoint(f \col\ \parameters) : RngUPolElt -> BoolElt, PtHyp
5<->HeegnerPoint(C \col\ \parameters) <->text1449.htm#16387<->HeegnerPoint(C \col\ \parameters) : Crv -> BoolElt, Pt
5<->HeegnerPoint(C : parameters) <->text1449.htm#16387<->HeegnerPoint(C : parameters) : CrvHyp -&gt; BoolElt, PtHyp
5<->ModularParametrisation :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, z \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, z \col\ \parameters) : CrvEll[FldRat], FldComElt -> FldComElt
5<->ModularParametrisation(E, z \col\ \parameters) : CrvEll[FldRat], FldComElt -> FldComElt :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, z \col\ \parameters) : CrvEll[FldRat], FldComElt -> FldComElt :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, Z, B \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, Z, B \col\ \parameters) : CrvEll[FldRat], [FldComElt], RngIntElt -> [FldComElt]
5<->ModularParametrisation(E, Z, B \col\ \parameters) : CrvEll[FldRat], [FldComElt], RngIntElt -> [FldComElt] :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, Z, B \col\ \parameters) : CrvEll[FldRat], [FldComElt], RngIntElt -> [FldComElt] :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, Z \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, Z \col\ \parameters) : CrvEll[FldRat], [FldComElt] -> [FldComElt]
5<->ModularParametrisation(E, Z \col\ \parameters) : CrvEll[FldRat], [FldComElt] -> [FldComElt] :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, Z \col\ \parameters) : CrvEll[FldRat], [FldComElt] -> [FldComElt] :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, f, B \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, f, B \col\ \parameters) : CrvEll[FldRat], QuadBinElt, RngIntElt -> FldComElt
5<->ModularParametrisation(E, f, B \col\ \parameters) : CrvEll[FldRat], QuadBinElt, RngIntElt -> FldComElt :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, f, B \col\ \parameters) : CrvEll[FldRat], QuadBinElt, RngIntElt -> FldComElt :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, f \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, f \col\ \parameters) : CrvEll[FldRat], QuadBinElt -> FldComElt
5<->ModularParametrisation(E, f \col\ \parameters) : CrvEll[FldRat], QuadBinElt -> FldComElt :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, f \col\ \parameters) : CrvEll[FldRat], QuadBinElt -> FldComElt :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, F, B \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, F, B \col\ \parameters) : CrvEll[FldRat], [QuadBinElt], RngIntElt -> [FldComElt]
5<->ModularParametrisation(E, F, B \col\ \parameters) : CrvEll[FldRat], [QuadBinElt], RngIntElt -> [FldComElt] :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, F, B \col\ \parameters) : CrvEll[FldRat], [QuadBinElt], RngIntElt -> [FldComElt] :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, F \col\ \parameters) <->text1449.htm#16388<->ModularParametrization(E, F \col\ \parameters) : CrvEll[FldRat], [QuadBinElt] -> [FldComElt]
5<->ModularParametrisation(E, F \col\ \parameters) : CrvEll[FldRat], [QuadBinElt] -> [FldComElt] :: ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrisation(E, F \col\ \parameters) : CrvEll[FldRat], [QuadBinElt] -> [FldComElt] :: ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->ModularParametrization(E, z, B : parameters) <->text1449.htm#16388<->ModularParametrization(E, z, B : parameters) : CrvEll[FldRat], FldComElt, RngIntElt -&gt; FldComElt
5<->HeegnerDiscriminants(E,lo,hi) <->text1449.htm#16389<->HeegnerDiscriminants(E,lo,hi) : CrvEll[FldRat], RngIntElt, RngIntElt -&gt; SeqEnum
5<->HeegnerForms(E,D  : parameters) <->text1449.htm#16390<->HeegnerForms(E,D  : parameters) : CrvEll[FldRat], RngIntElt -&gt; SeqEnum
5<->HeegnerForms(N,D  : parameters) <->text1449.htm#16391<->HeegnerForms(N,D  : parameters) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ManinConstant(E) <->text1449.htm#16392<->ManinConstant(E) : CrvEll[FldRat] -&gt; RngIntElt
5<->HeegnerTorsionElement(E, Q) <->text1449.htm#16393<->HeegnerTorsionElement(E, Q) : CrvEll[FldRat], RngIntElt -&gt; PtEll
5<->HeegnerPoints(E, D : parameters) <->text1449.htm#16394<->HeegnerPoints(E, D : parameters) : CrvEll[FldRat], RngIntElt -&gt; Tup, PtEll
4<->CrvEllQNF_Heegner (Example H128E8)<->text1449.htm#16395<->CrvEllQNF_Heegner (Example H128E8)
4<->Example-Heegner :<->text1449.htm#16395<->Example-Heegner :: CrvEllQNF_Heegner (Example H128E8)
4<->CrvEllQNF_Heegner2 (Example H128E9)<->text1449.htm#16396<->CrvEllQNF_Heegner2 (Example H128E9)
4<->Example-Heegner2 :<->text1449.htm#16396<->Example-Heegner2 :: CrvEllQNF_Heegner2 (Example H128E9)
4<->CrvEllQNF_Heegner3 (Example H128E10)<->text1449.htm#16397<->CrvEllQNF_Heegner3 (Example H128E10)
4<->Example-Heegner3 :<->text1449.htm#16397<->Example-Heegner3 :: CrvEllQNF_Heegner3 (Example H128E10)
4<->CrvEllQNF_Heegner4 (Example H128E11)<->text1449.htm#16398<->CrvEllQNF_Heegner4 (Example H128E11)
4<->Example-Heegner4 :<->text1449.htm#16398<->Example-Heegner4 :: CrvEllQNF_Heegner4 (Example H128E11)
4<->CrvEllQNF_Heegner5 (Example H128E12)<->text1449.htm#16399<->CrvEllQNF_Heegner5 (Example H128E12)
4<->Example-Heegner5 :<->text1449.htm#16399<->Example-Heegner5 :: CrvEllQNF_Heegner5 (Example H128E12)
3<->heegner-points :<->text1449.htm#16385<->heegner-points :: Heegner Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->rational_curves-elliptic_logs :<->text1449.htm#16400<->rational_curves-elliptic_logs :: Analytic Information (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->Periods(E: parameters) <->text1449.htm#16401<->Periods(E: parameters) : CrvEll -&gt; [ FldComElt ]
5<->Periods(E, k) <->text1449.htm#16402<->Periods(E, k) : CrvEll, RngIntElt -&gt; [ FldComElt ]
5<->EllipticCurveFromPeriods(om: parameters) <->text1449.htm#16403<->EllipticCurveFromPeriods(om: parameters) : [ FldComElt ] -&gt; CrvEll
5<->RealPeriod(E: parameters) <->text1449.htm#16404<->RealPeriod(E: parameters) : CrvEll -&gt; FldReElt
5<->EllipticExponential(E, z) <->text1449.htm#16405<->EllipticExponential(E, z) : CrvEll, FldComElt -&gt; [ FldComElt ]
5<->EllipticExponential(E, k, z) <->text1449.htm#16406<->EllipticExponential(E, k, z) : CrvEll, RngIntElt, FldComElt -&gt; [ FldComElt ]
5<->EllipticExponential(E, S) <->text1449.htm#16407<->EllipticExponential(E, S) : CrvEll, [ FldRat ] -&gt; [ FldComElt ]
5<->EllipticLogarithm(P)<->text1449.htm#16408<->EllipticLogarithm(P): PtEll[FldRat] -&gt; FldComElt
5<->EllipticLogarithm(P, k)<->text1449.htm#16409<->EllipticLogarithm(P, k): PtEll[FldNum], RngIntElt -&gt; FldComElt
5<->EllipticLogarithm(E, S)<->text1449.htm#16410<->EllipticLogarithm(E, S):  CrvEll, [ FldComElt ] -&gt; FldComElt
5<->pAdicEllipticLogarithm(P, p: parameters)<->text1449.htm#16411<->pAdicEllipticLogarithm(P, p: parameters): PtEll, RngIntElt -&gt; FldLocElt
4<->CrvEllQNF_ell-exp (Example H128E13)<->text1449.htm#16412<->CrvEllQNF_ell-exp (Example H128E13)
4<->Example-ell-exp :<->text1449.htm#16412<->Example-ell-exp :: CrvEllQNF_ell-exp (Example H128E13)
4<->CrvEllQNF_ellexp-nf (Example H128E14)<->text1449.htm#16413<->CrvEllQNF_ellexp-nf (Example H128E14)
4<->Example-ellexp-nf :<->text1449.htm#16413<->Example-ellexp-nf :: CrvEllQNF_ellexp-nf (Example H128E14)
5<->RootNumber(E) <->text1449.htm#16414<->RootNumber(E) : CrvEll -&gt; RngIntElt
5<->RootNumber(E, p) <->text1449.htm#16415<->RootNumber(E, p) : CrvEll, RngIntElt  -&gt; RngIntElt
5<->AnalyticRank(E) <->text1449.htm#16416<->AnalyticRank(E) : CrvEll -&gt; RngIntElt, FldReElt
5<->ConjecturalRegulator(E) <->text1449.htm#16417<->ConjecturalRegulator(E) : CrvEll -&gt; FldReElt, RngIntElt
5<->ConjecturalRegulator(E, v) <->text1449.htm#16418<->ConjecturalRegulator(E, v) : CrvEll, FldReElt -&gt; FldReElt
4<->CrvEllQNF_analytic-rank (Example H128E15)<->text1449.htm#16419<->CrvEllQNF_analytic-rank (Example H128E15)
4<->Example-analytic-rank :<->text1449.htm#16419<->Example-analytic-rank :: CrvEllQNF_analytic-rank (Example H128E15)
4<->CrvEllQNF_conjectural-regulator (Example H128E16)<->text1449.htm#16420<->CrvEllQNF_conjectural-regulator (Example H128E16)
4<->Example-conjectural-regulator :<->text1449.htm#16420<->Example-conjectural-regulator :: CrvEllQNF_conjectural-regulator (Example H128E16)
5<->ModularDegree(E) <->text1449.htm#16421<->ModularDegree(E) : CrvEll -&gt; RngIntElt
4<->CrvEllQNF_mod-deg (Example H128E17)<->text1449.htm#16422<->CrvEllQNF_mod-deg (Example H128E17)
4<->Example-mod-deg :<->text1449.htm#16422<->Example-mod-deg :: CrvEllQNF_mod-deg (Example H128E17)
3<->rational_curves-elliptic_logs :<->text1449.htm#16400<->rational_curves-elliptic_logs :: Analytic Information (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->integral_points :<->text1449.htm#16423<->integral_points :: Integral and S-integral Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->IntegralPoints(E) <->text1449.htm#16424<->IntegralPoints(E) : CrvEll -&gt; [ PtEll ]
5<->SIntegralPoints(E, S) <->text1449.htm#16425<->SIntegralPoints(E, S) : CrvEll, SeqEnum -&gt; [ PtEll ]
4<->CrvEllQNF_IntegralPoints (Example H128E18)<->text1449.htm#16426<->CrvEllQNF_IntegralPoints (Example H128E18)
4<->Example-IntegralPoints :<->text1449.htm#16426<->Example-IntegralPoints :: CrvEllQNF_IntegralPoints (Example H128E18)
4<->CrvEllQNF_SIntegralPoints (Example H128E19)<->text1449.htm#16427<->CrvEllQNF_SIntegralPoints (Example H128E19)
4<->Example-SIntegralPoints :<->text1449.htm#16427<->Example-SIntegralPoints :: CrvEllQNF_SIntegralPoints (Example H128E19)
5<->IntegralQuarticPoints(Q) <->text1449.htm#16428<->IntegralQuarticPoints(Q) : [ RngIntElt ] -&gt; [ SeqEnum ]
5<->IntegralQuarticPoints(Q, P) <->text1449.htm#16429<->IntegralQuarticPoints(Q, P) : [ RngIntElt ], [ RngIntElt ] -&gt; [ SeqEnum ]
5<->SIntegralQuarticPoints(Q, S) <->text1449.htm#16430<->SIntegralQuarticPoints(Q, S) : [ RngIntElt ], [ RngIntElt ] -&gt; [ SeqEnum ]
4<->CrvEllQNF_IntegralPointsSequence (Example H128E20)<->text1449.htm#16431<->CrvEllQNF_IntegralPointsSequence (Example H128E20)
4<->Example-IntegralPointsSequence :<->text1449.htm#16431<->Example-IntegralPointsSequence :: CrvEllQNF_IntegralPointsSequence (Example H128E20)
5<->SIntegralLjunggrenPoints(Q, S) <->text1449.htm#16432<->SIntegralLjunggrenPoints(Q, S) : [ RngIntElt ], [ RngIntElt ]  -&gt; [ SeqEnum ]
5<->SIntegralDesbovesPoints(Q, S) <->text1449.htm#16433<->SIntegralDesbovesPoints(Q, S) : [ RngIntElt ], [ RngIntElt ] -&gt; [ SeqEnum ]
4<->CrvEllQNF_Desboves (Example H128E21)<->text1449.htm#16434<->CrvEllQNF_Desboves (Example H128E21)
4<->Example-Desboves :<->text1449.htm#16434<->Example-Desboves :: CrvEllQNF_Desboves (Example H128E21)
3<->integral_points :<->text1449.htm#16423<->integral_points :: Integral and S-integral Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->database :<->text1449.htm#16435<->database :: Elliptic Curve Database (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->CremonaDatabase :: EllipticCurveDatabase(: parameters) <->text1449.htm#16436<->CremonaDatabase :: EllipticCurveDatabase(: parameters) : -&gt; DB
5<->EllipticCurveDatabase(: parameters) <->text1449.htm#16436<->EllipticCurveDatabase(: parameters) : -&gt; DB
5<->SetBufferSize(D, n) <->text1449.htm#16437<->SetBufferSize(D, n) : DB, RngIntElt -&gt;
5<->LargestConductor(D) <->text1449.htm#16438<->LargestConductor(D) : DB -&gt; RngIntElt
5<->ConductorRange(D) <->text1449.htm#16439<->ConductorRange(D) : DB -&gt; RngIntElt, RngIntElt
5<->NumberOfCurves :: # D <->text1449.htm#16440<->NumberOfCurves :: # D : DB -&gt; RngIntElt
5<-># D <->text1449.htm#16440<-># D : DB -&gt; RngIntElt
5<->NumberOfCurves(D, N) <->text1449.htm#16441<->NumberOfCurves(D, N) : DB, RngIntElt -&gt; RngIntElt
5<->NumberOfCurves(D, N, i) <->text1449.htm#16442<->NumberOfCurves(D, N, i) : DB, RngIntElt, RngIntElt -&gt; RngIntElt
5<->NumberOfIsogenyClasses(D, N) <->text1449.htm#16443<->NumberOfIsogenyClasses(D, N) : DB, RngIntElt -&gt; RngIntElt
5<->EllipticCurve(D, N, S, J)<->text1449.htm#16444<->EllipticCurve(D, N, S, J): DB, RngIntElt, MonStgElt, RngIntElt -> CrvEll
5<->EllipticCurve(D, N, I, J)<->text1449.htm#16444<->EllipticCurve(D, N, I, J): DB, RngIntElt, RngIntElt, RngIntElt -&gt; CrvEll
5<->EllipticCurve(S)<->text1449.htm#16445<->EllipticCurve(S): MonStgElt -> CrvEll
5<->EllipticCurve(D, S)<->text1449.htm#16445<->EllipticCurve(D, S): DB, MonStgElt -&gt; CrvEll
5<->Random(D) <->text1449.htm#16446<->Random(D) : DB -&gt; CrvEll
5<->CremonaReference(E) <->text1449.htm#16447<->CremonaReference(E) : CrvEll -> MonStgElt
5<->CremonaReference(D, E) <->text1449.htm#16447<->CremonaReference(D, E) : DB, CrvEll -&gt; MonStgElt
4<->CrvEllQNF_ecdb1 (Example H128E22)<->text1449.htm#16448<->CrvEllQNF_ecdb1 (Example H128E22)
4<->Example-ecdb1 :<->text1449.htm#16448<->Example-ecdb1 :: CrvEllQNF_ecdb1 (Example H128E22)
5<->EllipticCurves(D, N, S) <->text1449.htm#16449<->EllipticCurves(D, N, S) : DB, RngIntElt, MonStgElt -> [ CrvEll ]
5<->EllipticCurves(D, N, I) <->text1449.htm#16449<->EllipticCurves(D, N, I) : DB, RngIntElt, RngIntElt -&gt; [ CrvEll ]
5<->EllipticCurves(D, N) <->text1449.htm#16450<->EllipticCurves(D, N) : DB, RngIntElt -&gt; [ CrvEll ]
5<->EllipticCurves(D, S) <->text1449.htm#16451<->EllipticCurves(D, S) : DB, MonStgElt -&gt; [ CrvEll ]
5<->EllipticCurves(D) <->text1449.htm#16452<->EllipticCurves(D) : DB -&gt; [ CrvEll ]
4<->CrvEllQNF_ecdb2 (Example H128E23)<->text1449.htm#16453<->CrvEllQNF_ecdb2 (Example H128E23)
4<->Example-ecdb2 :<->text1449.htm#16453<->Example-ecdb2 :: CrvEllQNF_ecdb2 (Example H128E23)
3<->database :<->text1449.htm#16435<->database :: Elliptic Curve Database (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->intro :<->text1449.htm<->intro :: Curves over the Rationals (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_anf :<->text1450.htm<->over_anf :: Curves over Number Fields (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_anf-invar :<->text1450.htm#16455<->over_anf-invar :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->Conductor(E) <->text1450.htm#16456<->Conductor(E) : CrvEll -&gt; RngOrdIdl
5<->BadPlaces(E) <->text1450.htm#16457<->BadPlaces(E) : CrvEll -&gt; SeqEnum
5<->BadPlaces(E, L) <->text1450.htm#16458<->BadPlaces(E, L) : CrvEll, FldNum -&gt; SeqEnum
5<->LocalInformation(E, P) <->text1450.htm#16459<->LocalInformation(E, P) : CrvEll, RngOrdIdl -&gt; Tup, CrvEll
5<->LocalInformation(E) <->text1450.htm#16460<->LocalInformation(E) : CrvEll -&gt; [ Tup ]
5<->Reduction(E, p) <->text1450.htm#16461<->Reduction(E, p) : CrvEll, RngOrdIdl -&gt; CrvEll, Map
3<->over_anf-invar :<->text1450.htm#16455<->over_anf-invar :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->complex-multiplication :<->text1450.htm#16462<->complex-multiplication :: Complex Multiplication (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->HasComplexMultiplication(E) <->text1450.htm#16463<->HasComplexMultiplication(E) : CrvEll -&gt; BoolElt, RngIntElt
3<->complex-multiplication :<->text1450.htm#16462<->complex-multiplication :: Complex Multiplication (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_anf-heights :<->text1450.htm#16464<->over_anf-heights :: Heights (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->NaiveHeight(P) <->text1450.htm#16465<->NaiveHeight(P) : PtEll -&gt; FldPrElt
5<->Height(P : parameters) <->text1450.htm#16466<->Height(P : parameters) : PtEll -&gt; FldPrElt
5<->HeightPairingMatrix(P : parameters) <->text1450.htm#16467<->HeightPairingMatrix(P : parameters) : [PtEll] -&gt; AlgMatElt
5<->LocalHeight(P, Pl : parameters) <->text1450.htm#16468<->LocalHeight(P, Pl : parameters) : PtEll, PlcNumElt -&gt; FldPrElt
5<->HeightDifferenceLowerBound :: HeightDifferenceBounds(E) <->text1450.htm#16469<->HeightDifferenceLowerBound :: HeightDifferenceBounds(E) : CrvEll -&gt; FldReElt, FldReElt
5<->HeightDifferenceUpperBound :: HeightDifferenceBounds(E) <->text1450.htm#16469<->HeightDifferenceUpperBound :: HeightDifferenceBounds(E) : CrvEll -&gt; FldReElt, FldReElt
5<->HeightDifferenceBounds(E) <->text1450.htm#16469<->HeightDifferenceBounds(E) : CrvEll -&gt; FldReElt, FldReElt
5<->CPSHeightBounds(E) <->text1450.htm#16470<->CPSHeightBounds(E) : CrvEll -&gt; FldReElt, FldReElt
5<->SilvermanHeightBounds(E) <->text1450.htm#16471<->SilvermanHeightBounds(E) : CrvEll -&gt; FldReElt, FldReElt
3<->over_anf-heights :<->text1450.htm#16464<->over_anf-heights :: Heights (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->integral_points :<->text1450.htm#16472<->integral_points :: Integral Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->IntegralPoints(E) <->text1450.htm#16473<->IntegralPoints(E) : CrvEll -&gt; [ PtEll ]
3<->integral_points :<->text1450.htm#16472<->integral_points :: Integral Points (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->elliptic-curve-chabauty :<->text1450.htm#16474<->elliptic-curve-chabauty :: Elliptic Curve Chabauty (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->Chabauty(MWmap, Ecov) <->text1450.htm#16475<->Chabauty(MWmap, Ecov) : Map, MapSch -&gt; SetEnum, RngIntElt
5<->Chabauty(MWmap, Ecov, p) <->text1450.htm#16476<->Chabauty(MWmap, Ecov, p) : Map, MapSch, RngIntElt -&gt; RngIntElt, SetEnum, RngIntElt, Tup
4<->CrvEllQNF_ECchabauty (Example H128E24)<->text1450.htm#16477<->CrvEllQNF_ECchabauty (Example H128E24)
4<->Example-ECchabauty :<->text1450.htm#16477<->Example-ECchabauty :: CrvEllQNF_ECchabauty (Example H128E24)
3<->elliptic-curve-chabauty :<->text1450.htm#16474<->elliptic-curve-chabauty :: Elliptic Curve Chabauty (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_anf-selmer-etale :<->text1450.htm#16478<->over_anf-selmer-etale :: Auxiliary Functions for Etale Algebras (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->AbsoluteAlgebra(A) <->text1450.htm#16479<->AbsoluteAlgebra(A) : RngUPolRes -&gt; SetCart, Map
5<->pSelmerGroup(A, p, S) <->text1450.htm#16480<->pSelmerGroup(A, p, S) : RngUPolRes, RngIntElt, SetEnum[RngOrdIdl] -&gt; GrpAb, Map
5<->LocalTwoSelmerMap(P) <->text1450.htm#16481<->LocalTwoSelmerMap(P) : RngOrdIdl -&gt; Map
5<->LocalTwoSelmerMap(A, P) <->text1450.htm#16482<->LocalTwoSelmerMap(A, P) : RngUPolRes, RngOrdIdl -&gt; Map, SeqEnum
4<->CrvEllQNF_selmer-etale (Example H128E25)<->text1450.htm#16483<->CrvEllQNF_selmer-etale (Example H128E25)
4<->Example-selmer-etale :<->text1450.htm#16483<->Example-selmer-etale :: CrvEllQNF_selmer-etale (Example H128E25)
3<->over_anf-selmer-etale :<->text1450.htm#16478<->over_anf-selmer-etale :: Auxiliary Functions for Etale Algebras (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->analytic :<->text1450.htm#16484<->analytic :: Analytic Information (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->RootNumber(E, P) <->text1450.htm#16485<->RootNumber(E, P) : CrvEll, RngOrdIdl -&gt; RngIntElt
5<->RootNumber(E) <->text1450.htm#16486<->RootNumber(E) : CrvEll -&gt; RngIntElt
5<->AnalyticRank(E) <->text1450.htm#16487<->AnalyticRank(E) : CrvEll -&gt; RngIntElt, FldReElt
5<->ConjecturalRegulator(E) <->text1450.htm#16488<->ConjecturalRegulator(E) : CrvEll -&gt; FldReElt, RngIntElt
5<->ConjecturalSha(E, Pts) <->text1450.htm#16489<->ConjecturalSha(E, Pts) : CrvEll, SeqEnum[PtEll] -&gt; FldReElt
3<->analytic :<->text1450.htm#16484<->analytic :: Analytic Information (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->ecsearch :<->text1450.htm#16490<->ecsearch :: Elliptic Curves of Given Conductor (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->EllipticCurveWithGoodReductionSearch :: EllipticCurveSearch(N, Effort) <->text1450.htm#16491<->EllipticCurveWithGoodReductionSearch :: EllipticCurveSearch(N, Effort) : RngOrdIdl, RngIntElt -&gt; SeqEnum
5<->EllipticCurveWithGoodReductionSearch(N, Effort) : RngOrdIdl, RngIntElt -> SeqEnum :: EllipticCurveSearch(N, Effort) <->text1450.htm#16491<->EllipticCurveWithGoodReductionSearch(N, Effort) : RngOrdIdl, RngIntElt -> SeqEnum :: EllipticCurveSearch(N, Effort) : RngOrdIdl, RngIntElt -&gt; SeqEnum
5<->EllipticCurveSearch(N, Effort) <->text1450.htm#16491<->EllipticCurveSearch(N, Effort) : RngOrdIdl, RngIntElt -&gt; SeqEnum
3<->ecsearch :<->text1450.htm#16490<->ecsearch :: Elliptic Curves of Given Conductor (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_anf :<->text1450.htm<->over_anf :: Curves over Number Fields (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_pad :<->text1451.htm<->over_pad :: Curves over p-adic Fields (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_pad-invar :<->text1451.htm#16493<->over_pad-invar :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->Conductor(E) <->text1451.htm#16494<->Conductor(E) : CrvEll -&gt; FldPadElt
5<->LocalInformation(E) <->text1451.htm#16495<->LocalInformation(E) : CrvEll -&gt; Tup, CrvEll
5<->RootNumber(E) <->text1451.htm#16496<->RootNumber(E) : CrvEll -&gt; RngIntElt
3<->over_pad-invar :<->text1451.htm#16493<->over_pad-invar :: Local Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->over_pad :<->text1451.htm<->over_pad :: Curves over p-adic Fields (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->mordell-weil :<->text1452.htm<->mordell-weil :: Mordell-Weil Groups and Descent Methods (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->torsion :<->text1452.htm#16498<->torsion :: Torsion (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->TorsionSubgroup(H) <->text1452.htm#16499<->TorsionSubgroup(H) : SetPtEll -> GrpAb, Map
5<->TorsionSubgroup(E) <->text1452.htm#16499<->TorsionSubgroup(E) : CrvEll -&gt; GrpAb, Map
5<->TwoTorsionSubgroup(E) <->text1452.htm#16500<->TwoTorsionSubgroup(E) : CrvEll -&gt; GrpAb, Map
5<->TorsionBound(E, n) <->text1452.htm#16501<->TorsionBound(E, n) : CrvEll, RngIntElt -&gt; RngIntElt
5<->pPowerTorsion(E, p) <->text1452.htm#16502<->pPowerTorsion(E, p) : CrvEll, RngIntElt -&gt; GrpAb, Map
3<->torsion :<->text1452.htm#16498<->torsion :: Torsion (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->mwgroup :<->text1452.htm#16503<->mwgroup :: Mordell-Weil Group and Rank (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->RankBounds(E\col\ \parameters) <->text1452.htm#16504<->RankBounds(E\col\ \parameters) : CrvEll -> RngIntElt, RngIntElt
5<->MordellWeilRankBounds :: RankBounds(H: parameters) <->text1452.htm#16504<->MordellWeilRankBounds :: RankBounds(H: parameters) : SetPtEll -&gt; RngIntElt, RngIntElt
5<->MordellWeilRankBounds(E\col\ \parameters) : CrvEll -> RngIntElt, RngIntElt :: RankBounds(H: parameters) <->text1452.htm#16504<->MordellWeilRankBounds(E\col\ \parameters) : CrvEll -> RngIntElt, RngIntElt :: RankBounds(H: parameters) : SetPtEll -&gt; RngIntElt, RngIntElt
5<->RankBounds(H: parameters) <->text1452.htm#16504<->RankBounds(H: parameters) : SetPtEll -&gt; RngIntElt, RngIntElt
5<->Rank(E\col\ \parameters) <->text1452.htm#16505<->Rank(E\col\ \parameters) : CrvEll -> RngIntElt, BoolElt
5<->RankBound :: Rank(H: parameters) <->text1452.htm#16505<->RankBound :: Rank(H: parameters) : SetPtEll -&gt; RngIntElt, BoolElt
5<->MordellWeilRank :: Rank(H: parameters) <->text1452.htm#16505<->MordellWeilRank :: Rank(H: parameters) : SetPtEll -&gt; RngIntElt, BoolElt
5<->MordellWeilRank(E\col\ \parameters) : CrvEll -> RngIntElt, BoolElt :: Rank(H: parameters) <->text1452.htm#16505<->MordellWeilRank(E\col\ \parameters) : CrvEll -> RngIntElt, BoolElt :: Rank(H: parameters) : SetPtEll -&gt; RngIntElt, BoolElt
5<->Rank(H: parameters) <->text1452.htm#16505<->Rank(H: parameters) : SetPtEll -&gt; RngIntElt, BoolElt
5<->MordellWeilGroup(E\col\ \parameters) <->text1452.htm#16506<->MordellWeilGroup(E\col\ \parameters) : CrvEll -> GrpAb, Map, BoolElt, BoolElt
5<->AbelianGroup :: MordellWeilGroup(H: parameters) <->text1452.htm#16506<->AbelianGroup :: MordellWeilGroup(H: parameters) : SetPtEll -&gt; GrpAb, Map, BoolElt, BoolElt
5<->AbelianGroup(E\col\ \parameters) : CrvEll -> GrpAb, Map, BoolElt, BoolElt :: MordellWeilGroup(H: parameters) <->text1452.htm#16506<->AbelianGroup(E\col\ \parameters) : CrvEll -> GrpAb, Map, BoolElt, BoolElt :: MordellWeilGroup(H: parameters) : SetPtEll -&gt; GrpAb, Map, BoolElt, BoolElt
5<->MordellWeilGroup(H: parameters) <->text1452.htm#16506<->MordellWeilGroup(H: parameters) : SetPtEll -&gt; GrpAb, Map, BoolElt, BoolElt
5<->Generators(E) <->text1452.htm#16507<->Generators(E) : CrvEll -> [ PtEll ]
5<->Generators(H) <->text1452.htm#16507<->Generators(H) : SetPtEll -&gt; [ PtEll ]
5<->NumberOfGenerators(E) <->text1452.htm#16508<->NumberOfGenerators(E) : CrvEll -> RngIntElt
5<->Ngens :: NumberOfGenerators(H) <->text1452.htm#16508<->Ngens :: NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
5<->Ngens(E) : CrvEll -> RngIntElt :: NumberOfGenerators(H) <->text1452.htm#16508<->Ngens(E) : CrvEll -> RngIntElt :: NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
5<->NumberOfGenerators(H) <->text1452.htm#16508<->NumberOfGenerators(H) : SetPtEll -&gt; RngIntElt
5<->Saturation(points, n) <->text1452.htm#16509<->Saturation(points, n) : [ PtEll ], RngIntElt -&gt; [ PtEll ]
5<->Saturation(points) <->text1452.htm#16510<->Saturation(points) : [ PtEll ] -&gt; [ PtEll ]
4<->CrvEllQNF_MordellWeil (Example H128E26)<->text1452.htm#16511<->CrvEllQNF_MordellWeil (Example H128E26)
4<->Example-MordellWeil :<->text1452.htm#16511<->Example-MordellWeil :: CrvEllQNF_MordellWeil (Example H128E26)
4<->CrvEllQNF_Rank (Example H128E27)<->text1452.htm#16512<->CrvEllQNF_Rank (Example H128E27)
4<->Example-Rank :<->text1452.htm#16512<->Example-Rank :: CrvEllQNF_Rank (Example H128E27)
5<->DescentInformation :: MordellWeilShaInformation(E: parameters) <->text1452.htm#16513<->DescentInformation :: MordellWeilShaInformation(E: parameters) : CrvEll -&gt; [RngIntElt], [PtEll], [Tup]
5<->MordellWeilShaInformation(E: parameters) <->text1452.htm#16513<->MordellWeilShaInformation(E: parameters) : CrvEll -&gt; [RngIntElt], [PtEll], [Tup]
4<->CrvEllQNF_mwsha-example (Example H128E28)<->text1452.htm#16514<->CrvEllQNF_mwsha-example (Example H128E28)
4<->Example-mwsha-example :<->text1452.htm#16514<->Example-mwsha-example :: CrvEllQNF_mwsha-example (Example H128E28)
3<->mwgroup :<->text1452.htm#16503<->mwgroup :: Mordell-Weil Group and Rank (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->two_descent :<->text1452.htm#16515<->two_descent :: Two-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->TwoDescent(E: parameters) <->text1452.htm#16516<->TwoDescent(E: parameters) : CrvEll -&gt; [CrvHyp] , [Map], Map
5<->AssociatedEllipticCurve(C) <->text1452.htm#16517<->AssociatedEllipticCurve(C) : CrvHyp -> CrvEll, Map
5<->AssociatedEllipticCurve(f) <->text1452.htm#16517<->AssociatedEllipticCurve(f) : RngUPolElt -&gt; CrvEll, Map
5<->TwoCover(e) <->text1452.htm#16518<->TwoCover(e) : RngUPolResElt -> CrvHyp,  Map
5<->TwoCover(e) <->text1452.htm#16518<->TwoCover(e) : FldNumElt -&gt; CrvHyp,  Map
4<->CrvEllQNF_twodescent (Example H128E29)<->text1452.htm#16519<->CrvEllQNF_twodescent (Example H128E29)
4<->Example-twodescent :<->text1452.htm#16519<->Example-twodescent :: CrvEllQNF_twodescent (Example H128E29)
3<->two-descent-using-isogenies :<->text1452.htm#16520<->two-descent-using-isogenies :: Two Descent Using Isogenies (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->TwoIsogenyDescent(E : parameters) <->text1452.htm#16521<->TwoIsogenyDescent(E : parameters) : CrvEll -&gt; SeqEnum[CrvHyp], List, SeqEnum[CrvHyp], List, MapSch, MapSch
5<->TwoDescendantsOverTwoIsogenyDescendant :: LiftDescendant(C) <->text1452.htm#16522<->TwoDescendantsOverTwoIsogenyDescendant :: LiftDescendant(C) : CrvHyp -&gt; SeqEnum[ CrvHyp ], List, MapSch
5<->LiftDescendant(C) <->text1452.htm#16522<->LiftDescendant(C) : CrvHyp -&gt; SeqEnum[ CrvHyp ], List, MapSch
3<->two-descent-using-isogenies :<->text1452.htm#16520<->two-descent-using-isogenies :: Two Descent Using Isogenies (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->two-descent-invariants :<->text1452.htm#16523<->two-descent-invariants :: Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->QuarticG4Covariant :: QuarticIInvariant(q) <->text1452.htm#16524<->QuarticG4Covariant :: QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticHSeminvariant :: QuarticIInvariant(q) <->text1452.htm#16524<->QuarticHSeminvariant :: QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticPSeminvariant :: QuarticIInvariant(q) <->text1452.htm#16524<->QuarticPSeminvariant :: QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticQSeminvariant :: QuarticIInvariant(q) <->text1452.htm#16524<->QuarticQSeminvariant :: QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticRSeminvariant :: QuarticIInvariant(q) <->text1452.htm#16524<->QuarticRSeminvariant :: QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticIInvariant(q) <->text1452.htm#16524<->QuarticIInvariant(q) : RngUPolElt -&gt; RngIntElt
5<->QuarticNumberOfRealRoots(q) <->text1452.htm#16525<->QuarticNumberOfRealRoots(q) : RngUPolElt -&gt; RngUPolElt
5<->QuarticMinimise(q) <->text1452.htm#16526<->QuarticMinimise(q) : RngUPolElt -&gt; RngUPolElt, AlgMatElt
5<->QuarticReduce(q) <->text1452.htm#16527<->QuarticReduce(q) : RngUPolElt -&gt; RngUPolElt, AlgMatElt
5<->IsEquivalent(f,g) <->text1452.htm#16528<->IsEquivalent(f,g) : RngUPolElt, RngUPolElt -&gt; BoolElt
3<->two-descent-invariants :<->text1452.htm#16523<->two-descent-invariants :: Invariants (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->two_descent :<->text1452.htm#16515<->two_descent :: Two-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->selmer :<->text1452.htm#16529<->selmer :: Selmer Groups (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->CasselsMap :: DescentMaps(phi) <->text1452.htm#16530<->CasselsMap :: DescentMaps(phi) : Map -&gt; Map, Map
5<->DescentMaps(phi) <->text1452.htm#16530<->DescentMaps(phi) : Map -&gt; Map, Map
5<->SelmerGroup(phi) <->text1452.htm#16531<->SelmerGroup(phi) : Map -&gt; GrpAb, Map, Map, SeqEnum, SetEnum
5<->TwoSelmerGroup(E) <->text1452.htm#16532<->TwoSelmerGroup(E) : CrvEll -&gt; GrpAb, Map, SetEnum, Map, SeqEnum
4<->CrvEllQNF_selmer (Example H128E30)<->text1452.htm#16533<->CrvEllQNF_selmer (Example H128E30)
4<->Example-selmer :<->text1452.htm#16533<->Example-selmer :: CrvEllQNF_selmer (Example H128E30)
4<->CrvEllQNF_selmer2 (Example H128E31)<->text1452.htm#16534<->CrvEllQNF_selmer2 (Example H128E31)
4<->Example-selmer2 :<->text1452.htm#16534<->Example-selmer2 :: CrvEllQNF_selmer2 (Example H128E31)
4<->CrvEllQNF_selmer3 (Example H128E32)<->text1452.htm#16535<->CrvEllQNF_selmer3 (Example H128E32)
4<->Example-selmer3 :<->text1452.htm#16535<->Example-selmer3 :: CrvEllQNF_selmer3 (Example H128E32)
4<->CrvEllQNF_selmer4 (Example H128E33)<->text1452.htm#16536<->CrvEllQNF_selmer4 (Example H128E33)
4<->Example-selmer4 :<->text1452.htm#16536<->Example-selmer4 :: CrvEllQNF_selmer4 (Example H128E33)
3<->selmer :<->text1452.htm#16529<->selmer :: Selmer Groups (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->cassels-tate :<->text1452.htm#16537<->cassels-tate :: The Cassels-Tate Pairing (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->CasselsTatePairing(C, D) <->text1452.htm#16538<->CasselsTatePairing(C, D) : CrvHyp, CrvHyp -&gt; RngIntElt
5<->CasselsTatePairing(C, D) <->text1452.htm#16539<->CasselsTatePairing(C, D) : Crv, CrvHyp -&gt; RngIntElt
4<->CrvEllQNF_cassels-tate-example (Example H128E34)<->text1452.htm#16540<->CrvEllQNF_cassels-tate-example (Example H128E34)
4<->Example-cassels-tate-example :<->text1452.htm#16540<->Example-cassels-tate-example :: CrvEllQNF_cassels-tate-example (Example H128E34)
3<->cassels-tate :<->text1452.htm#16537<->cassels-tate :: The Cassels-Tate Pairing (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->four_descent :<->text1452.htm#16541<->four_descent :: Four-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->FourDescent(f \col\ \parameters) <->text1452.htm#16542<->FourDescent(f \col\ \parameters) : RngUPolElt -> [Crv]
5<->FourDescent(S \col\ \parameters) <->text1452.htm#16542<->FourDescent(S \col\ \parameters) : SeqEnum -> [Crv]
5<->FourDescent(C \col\ \parameters) <->text1452.htm#16542<->FourDescent(C \col\ \parameters) : ModelG1 -> [Crv]
5<->FourDescent(C : parameters) <->text1452.htm#16542<->FourDescent(C : parameters) : CrvHyp -&gt; [Crv]
4<->CrvEllQNF_simplefourdesc (Example H128E35)<->text1452.htm#16543<->CrvEllQNF_simplefourdesc (Example H128E35)
4<->Example-simplefourdesc :<->text1452.htm#16543<->Example-simplefourdesc :: CrvEllQNF_simplefourdesc (Example H128E35)
5<->AssociatedHyperellipticCurve :: AssociatedEllipticCurve(qi) <->text1452.htm#16544<->AssociatedHyperellipticCurve :: AssociatedEllipticCurve(qi) : Crv -&gt; CrvEll, Map
5<->AssociatedEllipticCurve(qi) <->text1452.htm#16544<->AssociatedEllipticCurve(qi) : Crv -&gt; CrvEll, Map
5<->QuadricIntersection(P, F) <->text1452.htm#16545<->QuadricIntersection(P, F) : Prj, [AlgMatElt] -> Crv
5<->QuadricIntersection(F) <->text1452.htm#16545<->QuadricIntersection(F) : [AlgMatElt] -&gt; Crv
5<->QuadricIntersection(C) <->text1452.htm#16546<->QuadricIntersection(C) : CrvHyp -> Crv, MapIsoSch
5<->QuadricIntersection(E) <->text1452.htm#16546<->QuadricIntersection(E) : CrvEll -&gt; Crv, MapIsoSch
5<->IsQuadricIntersection(C) <->text1452.htm#16547<->IsQuadricIntersection(C) : Crv -&gt; BoolElt, [AlgMatElt]
5<->PointsQI(C, B : parameters) <->text1452.htm#16548<->PointsQI(C, B : parameters) : Crv, RngIntElt -&gt; [Pt]
5<->TwoCoverPullback(f, pt) <->text1452.htm#16549<->TwoCoverPullback(f, pt) : RngUPolElt[FldRat], PtEll[FldRat] -> [PtHyp]
5<->TwoCoverPullback(H, pt) <->text1452.htm#16549<->TwoCoverPullback(H, pt) : CrvHyp[FldRat], PtEll[FldRat] -&gt; [PtHyp]
5<->FourCoverPullback(C, pt) <->text1452.htm#16550<->FourCoverPullback(C, pt) : Crv[FldRat], PtHyp[FldRat] -> [Pt]
5<->FourCoverPullback(C, pt) <->text1452.htm#16550<->FourCoverPullback(C, pt) : Crv[FldRat], PtEll[FldRat] -&gt; [Pt]
4<->CrvEllQNF_fourdescent (Example H128E36)<->text1452.htm#16551<->CrvEllQNF_fourdescent (Example H128E36)
4<->Example-fourdescent :<->text1452.htm#16551<->Example-fourdescent :: CrvEllQNF_fourdescent (Example H128E36)
3<->four_descent :<->text1452.htm#16541<->four_descent :: Four-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->eight-descent :<->text1452.htm#16552<->eight-descent :: Eight-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->EightDescent(C : parameters) <->text1452.htm#16553<->EightDescent(C : parameters) : Crv -&gt; [ Crv ], [ MapSch ]
3<->eight-descent :<->text1452.htm#16552<->eight-descent :: Eight-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->three-descent :<->text1452.htm#16554<->three-descent :: Three-Descent and Five-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->ThreeDescent(E : parameters) <->text1452.htm#16555<->ThreeDescent(E : parameters) : CrvEll -&gt; [ Crv ], List
4<->CrvEllQNF_selmer-famous-example (Example H128E37)<->text1452.htm#16556<->CrvEllQNF_selmer-famous-example (Example H128E37)
4<->Example-selmer-famous-example :<->text1452.htm#16556<->Example-selmer-famous-example :: CrvEllQNF_selmer-famous-example (Example H128E37)
5<->ThreeSelmerGroup(E : parameters) <->text1452.htm#16557<->ThreeSelmerGroup(E : parameters) : CrvEll -&gt; GrpAb, Map
5<->ThreeDescentCubic(E, &alpha; : parameters) <->text1452.htm#16558<->ThreeDescentCubic(E, &alpha; : parameters) : CrvEll, Tup -&gt; Crv, MapSch
5<->ThreeIsogenyDescent(E : parameters) <->text1452.htm#16559<->ThreeIsogenyDescent(E : parameters) : CrvEll -&gt; [ Crv ], List, [ Crv ], List, MapSch
5<->ThreeIsogenySelmerGroups(E : parameters) <->text1452.htm#16560<->ThreeIsogenySelmerGroups(E : parameters) : CrvEll -&gt; GrpAb, Map, GrpAb, Map, MapSch
5<->ThreeIsogenyDescentCubic(&phi;, &alpha;) <->text1452.htm#16561<->ThreeIsogenyDescentCubic(&phi;, &alpha;) : MapSch, Any -&gt; Crv, MapSch
5<->ThreeDescentByIsogeny(E) <->text1452.htm#16562<->ThreeDescentByIsogeny(E) : CrvEll -&gt; [ Crv ], [ Map ]
4<->CrvEllQNF_ThreeDescentByIsogeny (Example H128E38)<->text1452.htm#16563<->CrvEllQNF_ThreeDescentByIsogeny (Example H128E38)
4<->Example-ThreeDescentByIsogeny :<->text1452.htm#16563<->Example-ThreeDescentByIsogeny :: CrvEllQNF_ThreeDescentByIsogeny (Example H128E38)
5<->Jacobian(C) <->text1452.htm#16564<->Jacobian(C) : RngMPolElt -&gt; CrvEll
5<->ThreeSelmerElement(E, C) <->text1452.htm#16565<->ThreeSelmerElement(E, C) : CrvEll, Crv -> Tup
5<->ThreeSelmerElement(C) <->text1452.htm#16565<->ThreeSelmerElement(C) : RngMPolElt -> Tup
5<->ThreeSelmerElement(C) <->text1452.htm#16565<->ThreeSelmerElement(C) : Crv -> Tup
5<->ThreeSelmerElement(E, C) <->text1452.htm#16565<->ThreeSelmerElement(E, C) : CrvEll, RngMPolElt -&gt; Tup
5<->AddCubics(cubic1, cubic2 : parameters) <->text1452.htm#16566<->AddCubics(cubic1, cubic2 : parameters) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->ThreeTorsionType(E) <->text1452.htm#16567<->ThreeTorsionType(E) : CrvEll -&gt; MonStgElt
5<->ThreeTorsionPoints(E : parameters) <->text1452.htm#16568<->ThreeTorsionPoints(E : parameters) : CrvEll -&gt; Tup
5<->ThreeTorsionMatrices(E, C) <->text1452.htm#16569<->ThreeTorsionMatrices(E, C) : CrvEll, RngMPolElt -&gt; Tup
3<->three-descent :<->text1452.htm#16554<->three-descent :: Three-Descent and Five-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->six-and_twelve-descent :<->text1452.htm#16570<->six-and_twelve-descent :: Six and Twelve Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->SixDescent(model2, model3) <->text1452.htm#16571<->SixDescent(model2, model3) : ModelG1, ModelG1 -> Crv, MapSch
5<->SixDescent(C2, C3) <->text1452.htm#16571<->SixDescent(C2, C3) : CrvHyp, Crv -&gt; Crv, MapSch
5<->TwelveDescent(model3, model4) <->text1452.htm#16572<->TwelveDescent(model3, model4) : ModelG1, ModelG1 -> SeqEnum, MapSch
5<->TwelveDescent(C3, C4) <->text1452.htm#16572<->TwelveDescent(C3, C4) : Crv, Crv -&gt; SeqEnum, MapSch
3<->six-and_twelve-descent :<->text1452.htm#16570<->six-and_twelve-descent :: Six and Twelve Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->NineDescent :<->text1452.htm#16573<->NineDescent :: Nine-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->NineDescent(C : parameters) <->text1452.htm#16574<->NineDescent(C : parameters) : Crv -&gt; SeqEnum, List
5<->NineSelmerSet(C) <->text1452.htm#16575<->NineSelmerSet(C) : Crv -&gt; RngIntElt
3<->NineDescent :<->text1452.htm#16573<->NineDescent :: Nine-Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->higher-two :<->text1452.htm#16576<->higher-two :: Higher 2-power Isogeny Descents (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->TwoPowerIsogenyDescentRankBound(E \col\ \parameters) <->text1452.htm#16577<->TwoPowerIsogenyDescentRankBound(E \col\ \parameters) : CrvEll[FldRat], PtEll[FldRat] ) -> RngIntElt, SeqEnum, SeqEnum
5<->TwoPowerIsogenyDescentRankBound(E, T  : parameters) <->text1452.htm#16577<->TwoPowerIsogenyDescentRankBound(E, T  : parameters) : CrvEll[FldRat], PtEll[FldRat] ) -&gt; RngIntElt, SeqEnum, SeqEnum
3<->higher-two :<->text1452.htm#16576<->higher-two :: Higher 2-power Isogeny Descents (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->pIsogenyDescent :<->text1452.htm#16578<->pIsogenyDescent :: p-Isogeny Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
5<->pIsogneyDescent :: pIsogenyDescent(E,P) <->text1452.htm#16579<->pIsogneyDescent :: pIsogenyDescent(E,P) : CrvEll, PtEll -&gt; RngIntElt, RngIntElt, SeqEnum, CrvEll
5<->pIsogenyDescent(lambda,p) <->text1452.htm#16579<->pIsogenyDescent(lambda,p) : FldRatElt, RngIntElt -> RngIntElt, RngIntElt, SeqEnum, CrvEll, CrvEll
5<->pIsogenyDescent(E,P) <->text1452.htm#16579<->pIsogenyDescent(E,P) : CrvEll, PtEll -&gt; RngIntElt, RngIntElt, SeqEnum, CrvEll
5<->pIsogenyDescent(C,E1,E2) <->text1452.htm#16580<->pIsogenyDescent(C,E1,E2) : Crv, CrvEll, CrvEll -> SeqEnum, List
5<->pIsogenyDescent(C,P) <->text1452.htm#16580<->pIsogenyDescent(C,P) : Crv, PtEll -> SeqEnum, List
5<->pIsogenyDescent(C,phi) <->text1452.htm#16580<->pIsogenyDescent(C,phi) : Crv, MapSch -&gt; SeqEnum, List
5<->FakeIsogenySelmerSet(C,E1,E2) <->text1452.htm#16581<->FakeIsogenySelmerSet(C,E1,E2) : Crv, CrvEll, CrvEll -> RngIntElt
5<->FakeIsogenySelmerSet(C,P) <->text1452.htm#16581<->FakeIsogenySelmerSet(C,P) : Crv, PtEll -> RngIntElt
5<->FakeIsogenySelmerSet(C,phi) <->text1452.htm#16581<->FakeIsogenySelmerSet(C,phi) : Crv, MapSch -&gt; RngIntElt
4<->CrvEllQNF_pIsogenyDesent (Example H128E39)<->text1452.htm#16582<->CrvEllQNF_pIsogenyDesent (Example H128E39)
4<->Example-pIsogenyDesent :<->text1452.htm#16582<->Example-pIsogenyDesent :: CrvEllQNF_pIsogenyDesent (Example H128E39)
4<->CrvEllQNF_pIsogenyDescent2 (Example H128E40)<->text1452.htm#16583<->CrvEllQNF_pIsogenyDescent2 (Example H128E40)
4<->Example-pIsogenyDescent2 :<->text1452.htm#16583<->Example-pIsogenyDescent2 :: CrvEllQNF_pIsogenyDescent2 (Example H128E40)
4<->CrvEllQNF_pIsogenyDescent3 (Example H128E41)<->text1452.htm#16584<->CrvEllQNF_pIsogenyDescent3 (Example H128E41)
4<->Example-pIsogenyDescent3 :<->text1452.htm#16584<->Example-pIsogenyDescent3 :: CrvEllQNF_pIsogenyDescent3 (Example H128E41)
3<->pIsogenyDescent :<->text1452.htm#16578<->pIsogenyDescent :: p-Isogeny Descent (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->mordell-weil :<->text1452.htm<->mordell-weil :: Mordell-Weil Groups and Descent Methods (ELLIPTIC CURVES OVER Q AND NUMBER FIELDS)
3<->elliptic-curve-qnf :<->text1447.htm<->elliptic-curve-qnf :: ELLIPTIC CURVES OVER Q AND NUMBER FIELDS
3<->elliptic-curve-fldfun :<->text1455.htm<->elliptic-curve-fldfun :: ELLIPTIC CURVES OVER FUNCTION FIELDS
3<->theory :<->text1456.htm<->theory :: An Overview of Relevant Theory (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->local :<->text1457.htm<->local :: Local Computations (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->BadPlaces(E) <->text1457.htm#16590<->BadPlaces(E) : CrvEll -&gt; [ PlcFunElt ]
5<->Conductor(E) <->text1457.htm#16591<->Conductor(E) : CrvEll -&gt; DivFunElt
5<->LocalInformation(E, f) <->text1457.htm#16592<->LocalInformation(E, f) : CrvEll[FldFunRat], FldFunRatUElt -> Tup, CrvEll
5<->LocalInformation(E, Pl) <->text1457.htm#16592<->LocalInformation(E, Pl) : CrvEll[FldFun], PlcFunElt -&gt; Tup, CrvEll
5<->LocalInformation(E) <->text1457.htm#16593<->LocalInformation(E) : CrvEll -&gt; [ &lt; Tup &gt; ]
5<->KodairaSymbols(E) <->text1457.htm#16594<->KodairaSymbols(E) : CrvEll -&gt; [ &lt;SymKod, RngIntElt&gt; ]
5<->NumberOfComponents(K) <->text1457.htm#16595<->NumberOfComponents(K) : SymKod -&gt; RngIntElt
5<->MinimalModel(E) <->text1457.htm#16596<->MinimalModel(E) : CrvEll[FldFunG] -&gt; CrvEll, MapIsoSch
5<->MinimalDegreeModel(E) <->text1457.htm#16597<->MinimalDegreeModel(E) : CrvEll[FldFunRat] -&gt; CrvEll, Map, Map
5<->IsConstantCurve(E) <->text1457.htm#16598<->IsConstantCurve(E) : CrvEll[FldFunRat] -&gt; BoolElt, CrvEll
5<->TraceOfFrobenius(E, p) <->text1457.htm#16599<->TraceOfFrobenius(E, p) : CrvEll[FldFunRat], RngElt -&gt; BoolElt, CrvEll
3<->local :<->text1457.htm<->local :: Local Computations (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->ecsearch :<->text1458.htm<->ecsearch :: Elliptic Curves of Given Conductor (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->EllipticCurveSearch(N, Effort) <->text1458.htm#16601<->EllipticCurveSearch(N, Effort) : [], RngIntElt -&gt; SeqEnum
3<->ecsearch :<->text1458.htm<->ecsearch :: Elliptic Curves of Given Conductor (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->heights :<->text1459.htm<->heights :: Heights (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->NaiveHeight(P) <->text1459.htm#16603<->NaiveHeight(P) : PtEll -&gt; FldPrElt
5<->Height(P) <->text1459.htm#16604<->Height(P) : PtEll -&gt; FldRatElt
5<->LocalHeight(P, Pl) <->text1459.htm#16605<->LocalHeight(P, Pl) : PtEll, PlcFunElt -&gt; FldPrElt
5<->HeightPairing(P, Q) <->text1459.htm#16606<->HeightPairing(P, Q) : PtEll[FldFunG], PtEll[FldFunG] -&gt; FldRatElt
5<->HeightPairingMatrix(S) <->text1459.htm#16607<->HeightPairingMatrix(S) : SeqEnum[PtEll[FldFunG]] -&gt; AlgMatElt
5<->HeightPairingLattice(S) <->text1459.htm#16608<->HeightPairingLattice(S) : [PtEll[FldFunG]]  -&gt; AlgMatElt, Map
5<->Basis(S) <->text1459.htm#16609<->Basis(S) : [ PtEll ] -&gt; [ PtEll ], ModMatAlgElt
5<->Basis(S, r, disc) <->text1459.htm#16610<->Basis(S, r, disc) : SeqEnum, RngIntElt, RngIntElt -&gt; SeqEnum
5<->IsLinearlyIndependent :: IsLinearlyDependent(points) <->text1459.htm#16611<->IsLinearlyIndependent :: IsLinearlyDependent(points) : [PtEll] -&gt; BoolElt, ModTupRngElt
5<->IndependentGenerators :: IsLinearlyDependent(points) <->text1459.htm#16611<->IndependentGenerators :: IsLinearlyDependent(points) : [PtEll] -&gt; BoolElt, ModTupRngElt
5<->IsLinearlyDependent(points) <->text1459.htm#16611<->IsLinearlyDependent(points) : [PtEll] -&gt; BoolElt, ModTupRngElt
3<->heights :<->text1459.htm<->heights :: Heights (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->torsion :<->text1460.htm<->torsion :: The Torsion Subgroup (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->TorsionSubgroup(E) <->text1460.htm#16613<->TorsionSubgroup(E) : CrvEll[FldFunG] -&gt; GrpAb, Map
5<->TorsionBound(E, n, B) <->text1460.htm#16614<->TorsionBound(E, n, B) : CrvEll[FldFunG], RngIntElt, RngIntElt -> RngIntElt
5<->TorsionBound(E, n) <->text1460.htm#16614<->TorsionBound(E, n) : CrvEll[FldFunG], RngIntElt -&gt; RngIntElt
5<->GeometricTorsionBound(E) <->text1460.htm#16615<->GeometricTorsionBound(E) : CrvEll[FldFunG] -&gt; RngIntElt
3<->torsion :<->text1460.htm<->torsion :: The Torsion Subgroup (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->mordell-weil-group :<->text1461.htm<->mordell-weil-group :: The Mordell--Weil Group (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->RankBounds(E) <->text1461.htm#16617<->RankBounds(E) : CrvEll[FldFunG] -&gt; RngIntElt, RngIntElt
5<->MordellWeilGroup(E : parameters) <->text1461.htm#16618<->MordellWeilGroup(E : parameters) : CrvEll[FldFunRat] -&gt; GrpAb, Map
5<->MordellWeilLattice(E) <->text1461.htm#16619<->MordellWeilLattice(E) : CrvEll[FldFunRat] -&gt; Lat, Map
5<->GeometricMordellWeilLattice(E) <->text1461.htm#16620<->GeometricMordellWeilLattice(E) : CrvEll[FldFunRat] -&gt; Lat, Map
5<->Generators(E) <->text1461.htm#16621<->Generators(E) : CrvEll[FldFunRat] -&gt; SeqEnum
4<->CrvEllFldFun_rank2 (Example H129E1)<->text1461.htm#16622<->CrvEllFldFun_rank2 (Example H129E1)
4<->Example-rank2 :<->text1461.htm#16622<->Example-rank2 :: CrvEllFldFun_rank2 (Example H129E1)
3<->mordell-weil-group :<->text1461.htm<->mordell-weil-group :: The Mordell--Weil Group (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->two-descent :<->text1462.htm<->two-descent :: Two Descent (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->TwoSelmerGroup(E) <->text1462.htm#16624<->TwoSelmerGroup(E) : CrvEll[FldFunG] -&gt; GrpAb, MapSch
5<->TwoDescent(E) <->text1462.htm#16625<->TwoDescent(E) : CrvEll[FldFunG] -&gt; SeqEnum[CrvHyp], List[MapSch]
5<->QuarticMinimize(f) <->text1462.htm#16626<->QuarticMinimize(f) : RngMPolElt[FldFunRat] -&gt; RngMPolElt[FldFunRat]
5<->Points(C : parameters) <->text1462.htm#16627<->Points(C : parameters) : CrvHyp -&gt; [Pt]
5<->PointsQI(C, H) <->text1462.htm#16628<->PointsQI(C, H) : Crv, RngIntElt -&gt; [Pt]
5<->TwoIsogenySelmerGroups(E) <->text1462.htm#16629<->TwoIsogenySelmerGroups(E) : CrvEll[FldFunG] -&gt; GrpAb, GrpAb, MapSch, MapSch
3<->two-descent :<->text1462.htm<->two-descent :: Two Descent (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->Lfunction :<->text1463.htm<->Lfunction :: The L-function and Counting Points (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->LFunction(E, S) <->text1463.htm#16631<->LFunction(E, S) : CrvEll[FldFunRat], <SeqEnum>  -> RngUPolElt
5<->LFunction(E) <->text1463.htm#16631<->LFunction(E) : CrvEll[FldFunRat] -&gt; RngUPolElt
5<->LFunction(E, e) <->text1463.htm#16632<->LFunction(E, e) : CrvEll[FldFunRat], RngIntElt -&gt; RngUPolElt
5<->AnalyticRank(E) <->text1463.htm#16633<->AnalyticRank(E) : CrvEll[FldFunG] -&gt; RngIntElt
5<->AnalyticInformation(E, L) <->text1463.htm#16634<->AnalyticInformation(E, L) : CrvEll[FldFunG], RngUPolElt -> Tup
5<->AnalyticInformation(E, e) <->text1463.htm#16634<->AnalyticInformation(E, e) : CrvEll[FldFunG], RngIntElt -> Tup
5<->AnalyticInformation(E) <->text1463.htm#16634<->AnalyticInformation(E) : CrvEll[FldFunG] -&gt; Tup
4<->CrvEllFldFun_sha3 (Example H129E2)<->text1463.htm#16635<->CrvEllFldFun_sha3 (Example H129E2)
4<->Example-sha3 :<->text1463.htm#16635<->Example-sha3 :: CrvEllFldFun_sha3 (Example H129E2)
4<->CrvEllFldFun_rank2-continued (Example H129E3)<->text1463.htm#16636<->CrvEllFldFun_rank2-continued (Example H129E3)
4<->Example-rank2-continued :<->text1463.htm#16636<->Example-rank2-continued :: CrvEllFldFun_rank2-continued (Example H129E3)
5<->NumberOfPointsOnSurface(E, e) <->text1463.htm#16637<->NumberOfPointsOnSurface(E, e) : CrvEll, RngIntElt -&gt; RngIntElt
5<->NumbersOfPointsOnSurface(E, e) <->text1463.htm#16638<->NumbersOfPointsOnSurface(E, e) : CrvEll, RngIntElt -&gt; [ RngIntElt ], [ RngIntElt ]
5<->BettiNumber(E, i) <->text1463.htm#16639<->BettiNumber(E, i) : CrvEll, RngIntElt -&gt; RngIntElt
5<->CharacteristicPolynomialFromTraces(traces) <->text1463.htm#16640<->CharacteristicPolynomialFromTraces(traces) : [ Fld ] -&gt; RngUPolElt
5<->CharacteristicPolynomialFromTraces(traces, d, q, i) <->text1463.htm#16641<->CharacteristicPolynomialFromTraces(traces, d, q, i) : [ Fld ], RngIntElt, RngIntElt, RngIntElt -&gt; RngUPolElt, RngUPolElt
3<->Lfunction :<->text1463.htm<->Lfunction :: The L-function and Counting Points (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->frobenius-action :<->text1464.htm<->frobenius-action :: Action of Frobenius (ELLIPTIC CURVES OVER FUNCTION FIELDS)
5<->Frobenius(P, q) <->text1464.htm#16643<->Frobenius(P, q) : PtEll[FldFunRat], RngIntElt -&gt; PtEll
5<->FrobeniusActionOnPoints(S, q : parameters) <->text1464.htm#16644<->FrobeniusActionOnPoints(S, q : parameters) : [ PtEll ], RngIntElt -&gt; AlgMatElt
5<->FrobeniusActionOnReducibleFiber(L) <->text1464.htm#16645<->FrobeniusActionOnReducibleFiber(L) : &lt; Tup &gt; -&gt; AlgMatElt
5<->FrobeniusActionOnTrivialLattice(E) <->text1464.htm#16646<->FrobeniusActionOnTrivialLattice(E) : CrvEll -&gt; AlgMatElt
3<->frobenius-action :<->text1464.htm<->frobenius-action :: Action of Frobenius (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->extended-examples :<->text1465.htm<->extended-examples :: Extended Examples (ELLIPTIC CURVES OVER FUNCTION FIELDS)
4<->CrvEllFldFun_ellfunfld1 (Example H129E4)<->text1465.htm#16648<->CrvEllFldFun_ellfunfld1 (Example H129E4)
4<->Example-ellfunfld1 :<->text1465.htm#16648<->Example-ellfunfld1 :: CrvEllFldFun_ellfunfld1 (Example H129E4)
4<->CrvEllFldFun_Reductionmodp (Example H129E5)<->text1465.htm#16649<->CrvEllFldFun_Reductionmodp (Example H129E5)
4<->Example-Reductionmodp :<->text1465.htm#16649<->Example-Reductionmodp :: CrvEllFldFun_Reductionmodp (Example H129E5)
4<->CrvEllFldFun_LFunctionbyhand (Example H129E6)<->text1465.htm#16650<->CrvEllFldFun_LFunctionbyhand (Example H129E6)
4<->Example-LFunctionbyhand :<->text1465.htm#16650<->Example-LFunctionbyhand :: CrvEllFldFun_LFunctionbyhand (Example H129E6)
3<->extended-examples :<->text1465.htm<->extended-examples :: Extended Examples (ELLIPTIC CURVES OVER FUNCTION FIELDS)
3<->elliptic-curve-fldfun :<->text1455.htm<->elliptic-curve-fldfun :: ELLIPTIC CURVES OVER FUNCTION FIELDS
3<->genus-one-models :<->text1468.htm<->genus-one-models :: MODELS OF GENUS ONE CURVES
3<->introduction :<->text1469.htm<->introduction :: Introduction (MODELS OF GENUS ONE CURVES)
3<->creation :<->text1470.htm<->creation :: Creation of Genus One Models (MODELS OF GENUS ONE CURVES)
5<->GenusOneModel(n, seq) <->text1470.htm#16656<->GenusOneModel(n, seq) : RngIntElt, [ RngElt ] -> ModelG1
5<->GenusOneModel(R, n, seq) <->text1470.htm#16656<->GenusOneModel(R, n, seq) : RngIntElt, [ RngElt ] -> ModelG1
5<->GenusOneModel(n, str) <->text1470.htm#16656<->GenusOneModel(n, str) : RngIntElt, MonStgElt -> ModelG1
5<->GenusOneModel(seq) <->text1470.htm#16656<->GenusOneModel(seq) : [ RngElt ] -&gt; ModelG1
5<->GenusOneModel(C) <->text1470.htm#16657<->GenusOneModel(C) : Crv  -&gt; ModelG1
5<->GenusOneModel(f) <->text1470.htm#16658<->GenusOneModel(f) : RngUPolElt -> ModelG1
5<->GenusOneModel(seq) <->text1470.htm#16658<->GenusOneModel(seq) : [ RngMPolElt ] -> ModelG1
5<->GenusOneModel(f) <->text1470.htm#16658<->GenusOneModel(f) : RngMPolElt -&gt; ModelG1
5<->GenusOneModel(n, E) <->text1470.htm#16659<->GenusOneModel(n, E) : RngIntElt, CrvEll -&gt; ModelG1, Crv, MapSch, MapSch
5<->GenusOneModel(mat) <->text1470.htm#16660<->GenusOneModel(mat) : Mtrx -&gt; ModelG1
5<->GenusOneModel(mats) <->text1470.htm#16661<->GenusOneModel(mats) : [ AlgMatElt ] -&gt; ModelG1
5<->IsGenusOneModel(f) <->text1470.htm#16662<->IsGenusOneModel(f) : RngMPolElt -> BoolElt, ModelG1
5<->IsGenusOneModel(seq) <->text1470.htm#16662<->IsGenusOneModel(seq) : [ RngMPolElt ] -> BoolElt, ModelG1
5<->IsGenusOneModel(mat) <->text1470.htm#16662<->IsGenusOneModel(mat) : Mtrx -> BoolElt, ModelG1
5<->IsGenusOneModel(f) <->text1470.htm#16662<->IsGenusOneModel(f) : RngUPolElt -&gt; BoolElt, ModelG1
5<->GenericModel(n) <->text1470.htm#16663<->GenericModel(n) : RngIntElt -&gt; ModelG1
5<->RandomModel :: RandomGenusOneModel(n) <->text1470.htm#16664<->RandomModel :: RandomGenusOneModel(n) : RngIntElt -&gt; ModelG1
5<->RandomGenusOneModel(n) <->text1470.htm#16664<->RandomGenusOneModel(n) : RngIntElt -&gt; ModelG1
5<->ChangeRing(model, R) <->text1470.htm#16665<->ChangeRing(model, R) : ModelG1, Rng -&gt; ModelG1
5<->CompleteTheSquare(model) <->text1470.htm#16666<->CompleteTheSquare(model) : ModelG1 -&gt; ModelG1
5<->CubicFromPoint(E, P) <->text1470.htm#16667<->CubicFromPoint(E, P) : CrvEll, PtEll -&gt; RngMPolElt, MapSch, Pt
5<->HesseModel(n, seq) <->text1470.htm#16668<->HesseModel(n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1
5<->DiagonalModel(n, seq) <->text1470.htm#16669<->DiagonalModel(n, seq) : RngIntElt, [ RngElt ] -&gt; ModelG1
4<->CrvG1_generic-model (Example H130E1)<->text1470.htm#16670<->CrvG1_generic-model (Example H130E1)
4<->Example-generic-model :<->text1470.htm#16670<->Example-generic-model :: CrvG1_generic-model (Example H130E1)
3<->creation :<->text1470.htm<->creation :: Creation of Genus One Models (MODELS OF GENUS ONE CURVES)
3<->attributes :<->text1471.htm<->attributes :: Attributes of Genus One Models (MODELS OF GENUS ONE CURVES)
5<->Degree(model) <->text1471.htm#16672<->Degree(model) : ModelG1 -&gt; RngIntElt
5<->DefiningEquations(model) <->text1471.htm#16673<->DefiningEquations(model) : ModelG1 -&gt; [ RngMPolElt ]
5<->Equations(model) <->text1471.htm#16674<->Equations(model) : ModelG1 -&gt; [ RngMPolElt ]
5<->Matrix(model) <->text1471.htm#16675<->Matrix(model) : ModelG1 -&gt; Mtrx
5<->HyperellipticCurve :: Curve(model) <->text1471.htm#16676<->HyperellipticCurve :: Curve(model) : ModelG1 -&gt; Crv
5<->QuadricIntersection :: Curve(model) <->text1471.htm#16676<->QuadricIntersection :: Curve(model) : ModelG1 -&gt; Crv
5<->Curve(model) <->text1471.htm#16676<->Curve(model) : ModelG1 -&gt; Crv
5<->Matrices(model) <->text1471.htm#16677<->Matrices(model) : ModelG1 -&gt; [ AlgMatElt ]
5<->BaseRing(model) <->text1471.htm#16678<->BaseRing(model) : ModelG1 -&gt; Rng
5<->PolynomialRing(model) <->text1471.htm#16679<->PolynomialRing(model) : ModelG1 -&gt; RngMPol
5<->Eltseq :: ModelToSequence(model) <->text1471.htm#16680<->Eltseq :: ModelToSequence(model) : ModelG1 -&gt; [ RngElt ]
5<->ModelToSequence(model) <->text1471.htm#16680<->ModelToSequence(model) : ModelG1 -&gt; [ RngElt ]
5<->ModelToString(model) <->text1471.htm#16681<->ModelToString(model) : ModelG1 -&gt; MonStgElt
3<->attributes :<->text1471.htm<->attributes :: Attributes of Genus One Models (MODELS OF GENUS ONE CURVES)
3<->transformations :<->text1472.htm<->transformations :: Transformations between  Genus One Models (MODELS OF GENUS ONE CURVES)
5<->IsTransformation(n, g) <->text1472.htm#16683<->IsTransformation(n, g) : RngIntElt, Tup -&gt; BoolElt, TransG1
5<->Tuple(g) <->text1472.htm#16684<->Tuple(g) : TransG1 -&gt; Tup
5<->ChangeRing(g, R) <->text1472.htm#16685<->ChangeRing(g, R) : TransG1, Rng -&gt; TransG1
5<->IdentityTransformation(n, R) <->text1472.htm#16686<->IdentityTransformation(n, R) : RngIntElt, Rng -&gt; TransG1
5<->RandomTransformation(n : parameters) <->text1472.htm#16687<->RandomTransformation(n : parameters) : RngIntElt -&gt; TransG1
5<->ApplyTransformation :: g * model <->text1472.htm#16688<->ApplyTransformation :: g * model : TransG1, ModelG1 -&gt; ModelG1
5<->g * model <->text1472.htm#16688<->g * model : TransG1, ModelG1 -&gt; ModelG1
5<->ComposeTransformations :: g1 * g2 <->text1472.htm#16689<->ComposeTransformations :: g1 * g2 : TransG1, TransG1 -&gt; TransG1
5<->MultiplyTransformations :: g1 * g2 <->text1472.htm#16689<->MultiplyTransformations :: g1 * g2 : TransG1, TransG1 -&gt; TransG1
5<->g1 * g2 <->text1472.htm#16689<->g1 * g2 : TransG1, TransG1 -&gt; TransG1
5<->InverseTransformation :: Inverse(g) <->text1472.htm#16690<->InverseTransformation :: Inverse(g) : TransG1 -&gt; TransG1
5<->InverseTransformation(n, g) : RngIntElt, TransG1 -> TransG1 :: Inverse(g) <->text1472.htm#16690<->InverseTransformation(n, g) : RngIntElt, TransG1 -> TransG1 :: Inverse(g) : TransG1 -&gt; TransG1
5<->Inverse(g) <->text1472.htm#16690<->Inverse(g) : TransG1 -&gt; TransG1
5<->ScalingFactor(n, g) <->text1472.htm#16691<->ScalingFactor(n, g) : RngIntElt, TransG1 -> RngElt
5<->ScalingFactor(g) <->text1472.htm#16691<->ScalingFactor(g) : TransG1 -&gt; RngElt
5<->Determinant(g) <->text1472.htm#16692<->Determinant(g) : TransG1 -&gt; RngElt
3<->transformations :<->text1472.htm<->transformations :: Transformations between  Genus One Models (MODELS OF GENUS ONE CURVES)
3<->equivalence :<->text1473.htm<->equivalence :: Equivalence of Genus One  Models (MODELS OF GENUS ONE CURVES)
5<->IsEquivalent(cubic1, cubic2) <->text1473.htm#16694<->IsEquivalent(cubic1, cubic2) : RngMPolElt, RngMPolElt -> BoolElt, TransG1
5<->IsEquivalent(model1, model2) <->text1473.htm#16694<->IsEquivalent(model1, model2) : ModelG1, ModelG1 -&gt; BoolElt, TransG1
3<->equivalence :<->text1473.htm<->equivalence :: Equivalence of Genus One  Models (MODELS OF GENUS ONE CURVES)
3<->g1minred :<->text1474.htm<->g1minred :: Minimisation and Reduction (MODELS OF GENUS ONE CURVES)
5<->Minimise(model : parameters) <->text1474.htm#16696<->Minimise(model : parameters) : ModelG1 -&gt; ModelG1, TransG1
5<->Minimise(f) <->text1474.htm#16697<->Minimise(f) : RngMPolElt -&gt; RngMPolElt, TransG1
5<->pMinimise(f, p) <->text1474.htm#16698<->pMinimise(f, p) : RngMPolElt, RngIntElt -&gt; RngMPolElt, AlgMatElt
5<->Reduce(f) <->text1474.htm#16699<->Reduce(f) : RngMPolElt -> RngMPolElt, TransG1
5<->Reduce(model) <->text1474.htm#16699<->Reduce(model) : ModelG1 -&gt; ModelG1, TransG1
5<->ReduceQuadrics(seq) <->text1474.htm#16700<->ReduceQuadrics(seq) : [RngMPolElt] -&gt; [RngMPolElt], AlgMatElt, AlgMatElt
3<->g1minred :<->text1474.htm<->g1minred :: Minimisation and Reduction (MODELS OF GENUS ONE CURVES)
3<->local-solubility :<->text1475.htm<->local-solubility :: Local Solubility (MODELS OF GENUS ONE CURVES)
5<->IsLocallySoluble(model, p) <->text1475.htm#16702<->IsLocallySoluble(model, p) : ModelG1, RngIntElt -&gt; BoolElt, Any
5<->IsLocallySoluble(model) <->text1475.htm#16703<->IsLocallySoluble(model) : ModelG1 -&gt; BoolElt
3<->local-solubility :<->text1475.htm<->local-solubility :: Local Solubility (MODELS OF GENUS ONE CURVES)
3<->coverings :<->text1476.htm<->coverings :: Genus One Models as Coverings (MODELS OF GENUS ONE CURVES)
5<->Jacobian(C) <->text1476.htm#16705<->Jacobian(C) : Crv  -> CrvEll
5<->Jacobian(model) <->text1476.htm#16705<->Jacobian(model) : ModelG1  -&gt; CrvEll
5<->nCovering(model : parameters) <->text1476.htm#16706<->nCovering(model : parameters) : ModelG1  -&gt; Crv, CrvEll, MapSch
5<->AddCubics(model1, model2 \col\ \parameters) <->text1476.htm#16707<->AddCubics(model1, model2 \col\ \parameters) : ModelG1, ModelG1 -> ModelG1
5<->+ :: AddCubics(cubic1, cubic2 : parameters) <->text1476.htm#16707<->+ :: AddCubics(cubic1, cubic2 : parameters) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->AddCubics(cubic1, cubic2 : parameters) <->text1476.htm#16707<->AddCubics(cubic1, cubic2 : parameters) : RngMPolElt, RngMPolElt -&gt; RngMPolElt
5<->DoubleGenusOneModel(model) <->text1476.htm#16708<->DoubleGenusOneModel(model) : ModelG1 -&gt; ModelG1
5<->FourToTwoCovering(C \col\ \parameters) <->text1476.htm#16709<->FourToTwoCovering(C \col\ \parameters) : Crv -> Crv, Crv, MapSch
5<->FourToTwoCovering(model : parameters) <->text1476.htm#16709<->FourToTwoCovering(model : parameters) : ModelG1 -&gt; Crv, Crv, MapSch
3<->coverings :<->text1476.htm<->coverings :: Genus One Models as Coverings (MODELS OF GENUS ONE CURVES)
3<->n-torsion-families :<->text1477.htm<->n-torsion-families :: Families of Elliptic Curves  with Prescribed n-Torsion (MODELS OF GENUS ONE CURVES)
5<->RubinSilverbergPolynomials(n, J : parameters) <->text1477.htm#16711<->RubinSilverbergPolynomials(n, J : parameters) : RngIntElt, RngElt -&gt; RngElt, RngElt
3<->n-torsion-families :<->text1477.htm<->n-torsion-families :: Families of Elliptic Curves  with Prescribed n-Torsion (MODELS OF GENUS ONE CURVES)
3<->invariants :<->text1478.htm<->invariants :: Invariants for Genus One Models (MODELS OF GENUS ONE CURVES)
5<->aInvariants(model) <->text1478.htm#16713<->aInvariants(model) : ModelG1 -&gt; [ RngElt ]
5<->bInvariants(model) <->text1478.htm#16714<->bInvariants(model) : ModelG1 -&gt; [ RngElt ]
5<->cInvariants(model) <->text1478.htm#16715<->cInvariants(model) : ModelG1 -&gt; [ RngElt ]
5<->Invariants(model) <->text1478.htm#16716<->Invariants(model) : ModelG1 -&gt; RngElt, RngElt, RngElt
5<->Discriminant(model) <->text1478.htm#16717<->Discriminant(model) : ModelG1 -&gt; RngElt
5<->SL4Invariants(model) <->text1478.htm#16718<->SL4Invariants(model) : ModelG1 -&gt; [ RngElt ]
3<->invariants :<->text1478.htm<->invariants :: Invariants for Genus One Models (MODELS OF GENUS ONE CURVES)
3<->covariants :<->text1479.htm<->covariants :: Covariants and Contravariants for Genus One Models (MODELS OF GENUS ONE CURVES)
5<->Hessian(model) <->text1479.htm#16720<->Hessian(model) : ModelG1 -&gt; ModelG1
5<->CoveringCovariants(model) <->text1479.htm#16721<->CoveringCovariants(model) : ModelG1 -&gt; [ RngMPolElt ]
5<->Contravariants(model) <->text1479.htm#16722<->Contravariants(model) : ModelG1 -&gt; ModelG1, ModelG1
5<->HesseCovariants(model, r) <->text1479.htm#16723<->HesseCovariants(model, r) : ModelG1, RngIntElt -&gt; ModelG1, ModelG1
5<->HessePolynomials(n, r, invariants : parameters) <->text1479.htm#16724<->HessePolynomials(n, r, invariants : parameters) : RngIntElt, RngIntElt, [RngElt] -&gt; RngElt, RngElt, RngElt
3<->covariants :<->text1479.htm<->covariants :: Covariants and Contravariants for Genus One Models (MODELS OF GENUS ONE CURVES)
3<->extended-examples :<->text1480.htm<->extended-examples :: Examples (MODELS OF GENUS ONE CURVES)
4<->CrvG1_visible-three-sha (Example H130E2)<->text1480.htm#16726<->CrvG1_visible-three-sha (Example H130E2)
4<->Example-visible-three-sha :<->text1480.htm#16726<->Example-visible-three-sha :: CrvG1_visible-three-sha (Example H130E2)
3<->extended-examples :<->text1480.htm<->extended-examples :: Examples (MODELS OF GENUS ONE CURVES)
3<->genus-one-models :<->text1468.htm<->genus-one-models :: MODELS OF GENUS ONE CURVES
3<->hyperelliptic-curve :<->text1483.htm<->hyperelliptic-curve :: HYPERELLIPTIC CURVES
3<->introduction :<->text1484.htm<->introduction :: Introduction (HYPERELLIPTIC CURVES)
3<->creation :<->text1485.htm<->creation :: Creation Functions (HYPERELLIPTIC CURVES)
3<->creation-hypcurve :<->text1485.htm#16732<->creation-hypcurve :: Creation of a Hyperelliptic Curve (HYPERELLIPTIC CURVES)
5<->HyperellipticCurve(f, h) <->text1485.htm#16733<->HyperellipticCurve(f, h) : RngElt, RngUPolElt -> CrvHyp
5<->HyperellipticCurve(f, h) <->text1485.htm#16733<->HyperellipticCurve(f, h) : RngUPolElt, RngElt -> CrvHyp
5<->HyperellipticCurve(f) <->text1485.htm#16733<->HyperellipticCurve(f) : RngUPolElt  -> CrvHyp
5<->HyperellipticCurve([f, h]) <->text1485.htm#16733<->HyperellipticCurve([f, h]) : [ RngUPolElt ] -> CrvHyp
5<->HyperellipticCurve(f, h) <->text1485.htm#16733<->HyperellipticCurve(f, h) : RngUPolElt, RngUPolElt -&gt; CrvHyp
5<->HyperellipticCurve(P, f, h) <->text1485.htm#16734<->HyperellipticCurve(P, f, h) : Prj, RngUPolElt, RngUPolElt -&gt; CrvHyp
5<->HyperellipticCurveOfGenus(g, f, h) <->text1485.htm#16735<->HyperellipticCurveOfGenus(g, f, h) : RngIntElt, RngElt, RngUPolElt -> CrvHyp
5<->HyperellipticCurveOfGenus(g, f, h) <->text1485.htm#16735<->HyperellipticCurveOfGenus(g, f, h) : RngIntElt, RngUPolElt, RngElt -> CrvHyp
5<->HyperellipticCurveOfGenus(g, f) <->text1485.htm#16735<->HyperellipticCurveOfGenus(g, f) : RngIntElt, RngUPolElt -> CrvHyp
5<->HyperellipticCurveOfGenus(g, [f, h]) <->text1485.htm#16735<->HyperellipticCurveOfGenus(g, [f, h]) : RngIntElt, [RngUPolElt] -> CrvHyp
5<->HyperellipticCurveOfGenus(g, f, h) <->text1485.htm#16735<->HyperellipticCurveOfGenus(g, f, h) : RngIntElt, RngUPolElt, RngUPolElt -&gt; CrvHyp
5<->HyperellipticCurve(E) <->text1485.htm#16736<->HyperellipticCurve(E) : CrvEll  -&gt; CrvHyp, Map
3<->creation-hypcurve :<->text1485.htm#16732<->creation-hypcurve :: Creation of a Hyperelliptic Curve (HYPERELLIPTIC CURVES)
3<->creation-predicates-hypcurve :<->text1485.htm#16737<->creation-predicates-hypcurve :: Creation Predicates (HYPERELLIPTIC CURVES)
5<->IsHyperellipticCurve([f, h]) <->text1485.htm#16738<->IsHyperellipticCurve([f, h]) : [ RngUPolElt ] -&gt; BoolElt, CrvHyp
5<->IsHyperellipticCurveOfGenus(g, [f, h]) <->text1485.htm#16739<->IsHyperellipticCurveOfGenus(g, [f, h]) : RngIntElt, [RngUPolElt] -&gt; BoolElt, CrvHyp
4<->CrvHyp_Creation (Example H131E1)<->text1485.htm#16740<->CrvHyp_Creation (Example H131E1)
4<->Example-Creation :<->text1485.htm#16740<->Example-Creation :: CrvHyp_Creation (Example H131E1)
3<->creation-predicates-hypcurve :<->text1485.htm#16737<->creation-predicates-hypcurve :: Creation Predicates (HYPERELLIPTIC CURVES)
3<->base_change_curve :<->text1485.htm#16741<->base_change_curve :: Changing the Base Ring (HYPERELLIPTIC CURVES)
5<->BaseExtend :: BaseChange(C, K) <->text1485.htm#16742<->BaseExtend :: BaseChange(C, K) : Sch, Fld  -&gt; Sch
5<->BaseChange(C, K) <->text1485.htm#16742<->BaseChange(C, K) : Sch, Fld  -&gt; Sch
5<->BaseExtend :: BaseChange(C, j) <->text1485.htm#16743<->BaseExtend :: BaseChange(C, j) : Sch, Map -&gt; Sch
5<->BaseChange(C, j) <->text1485.htm#16743<->BaseChange(C, j) : Sch, Map -&gt; Sch
5<->BaseExtend :: BaseChange(C, n) <->text1485.htm#16744<->BaseExtend :: BaseChange(C, n) : Sch, RngIntElt -&gt; Sch
5<->BaseChange(C, n) <->text1485.htm#16744<->BaseChange(C, n) : Sch, RngIntElt -&gt; Sch
5<->ChangeRing(C, K) <->text1485.htm#16745<->ChangeRing(C, K) : Sch, Rng -&gt; Sch
4<->CrvHyp_BaseExtension (Example H131E2)<->text1485.htm#16746<->CrvHyp_BaseExtension (Example H131E2)
4<->Example-BaseExtension :<->text1485.htm#16746<->Example-BaseExtension :: CrvHyp_BaseExtension (Example H131E2)
3<->base_change_curve :<->text1485.htm#16741<->base_change_curve :: Changing the Base Ring (HYPERELLIPTIC CURVES)
3<->alternate_models :<->text1485.htm#16747<->alternate_models :: Models (HYPERELLIPTIC CURVES)
5<->SimplifiedModel(C) <->text1485.htm#16748<->SimplifiedModel(C) : CrvHyp -&gt; CrvHyp, MapIsoSch
5<->HasOddDegreeModel(C) <->text1485.htm#16749<->HasOddDegreeModel(C) : CrvHyp -&gt; BoolElt, CrvHyp, MapIsoSch
5<->IntegralModel(C) <->text1485.htm#16750<->IntegralModel(C) : CrvHyp -&gt; CrvHyp, MapIsoSch
5<->MinimalWeierstrassModel(C) <->text1485.htm#16751<->MinimalWeierstrassModel(C) : CrvHyp -&gt; CrvHyp, MapIsoSch
5<->pIntegralModel(C, p) <->text1485.htm#16752<->pIntegralModel(C, p) : CrvHyp, FldRatElt -> CrvHyp, MapIsoSch
5<->pIntegralModel(C, p) <->text1485.htm#16752<->pIntegralModel(C, p) : CrvHyp, RngUPolElt -> CrvHyp, MapIsoSch
5<->pIntegralModel(C, p) <->text1485.htm#16752<->pIntegralModel(C, p) : CrvHyp, FldFunRatUElt -> CrvHyp, MapIsoSch
5<->pIntegralModel(C, p) <->text1485.htm#16752<->pIntegralModel(C, p) : CrvHyp, Infty -> CrvHyp, MapIsoSch
5<->pIntegralModel(C, p) <->text1485.htm#16752<->pIntegralModel(C, p) : CrvHyp, RngIntElt -&gt; CrvHyp, MapIsoSch
5<->pNormalModel(C, p) <->text1485.htm#16753<->pNormalModel(C, p) : CrvHyp, FldRatElt -> CrvHyp, MapIsoSch
5<->pNormalModel(C, p) <->text1485.htm#16753<->pNormalModel(C, p) : CrvHyp, RngUPolElt -> CrvHyp, MapIsoSch
5<->pNormalModel(C, p) <->text1485.htm#16753<->pNormalModel(C, p) : CrvHyp, FldFunRatUElt -> CrvHyp, MapIsoSch
5<->pNormalModel(C, p) <->text1485.htm#16753<->pNormalModel(C, p) : CrvHyp, Infty -> CrvHyp, MapIsoSch
5<->pNormalModel(C, p) <->text1485.htm#16753<->pNormalModel(C, p) : CrvHyp, RngIntElt -&gt; CrvHyp, MapIsoSch
5<->pMinimalWeierstrassModel(C, p) <->text1485.htm#16754<->pMinimalWeierstrassModel(C, p) : CrvHyp, FldRatElt -> CrvHyp, MapIsoSch
5<->pMinimalWeierstrassModel(C, p) <->text1485.htm#16754<->pMinimalWeierstrassModel(C, p) : CrvHyp, RngUPolElt -> CrvHyp, MapIsoSch
5<->pMinimalWeierstrassModel(C, p) <->text1485.htm#16754<->pMinimalWeierstrassModel(C, p) : CrvHyp, FldFunRatUElt -> CrvHyp, MapIsoSch
5<->pMinimalWeierstrassModel(C, p) <->text1485.htm#16754<->pMinimalWeierstrassModel(C, p) : CrvHyp, Infty -> CrvHyp, MapIsoSch
5<->pMinimalWeierstrassModel(C, p) <->text1485.htm#16754<->pMinimalWeierstrassModel(C, p) : CrvHyp, RngIntElt -&gt; CrvHyp, MapIsoSch
5<->ReducedModel(C) <->text1485.htm#16755<->ReducedModel(C) : CrvHyp -&gt; CrvHyp, MapIsoSch
5<->ReducedMinimalWeierstrassModel(C) <->text1485.htm#16756<->ReducedMinimalWeierstrassModel(C) : CrvHyp -&gt; CrvHyp, MapIsoSch
5<->SetVerbose("CrvHypReduce", v) <->text1485.htm#16757<->SetVerbose("CrvHypReduce", v) : MonStgElt, RngIntElt -&gt;
3<->alternate_models :<->text1485.htm#16747<->alternate_models :: Models (HYPERELLIPTIC CURVES)
3<->creation-model-predicates :<->text1485.htm#16758<->creation-model-predicates :: Predicates on Models (HYPERELLIPTIC CURVES)
5<->IsSimplifiedModel(C) <->text1485.htm#16759<->IsSimplifiedModel(C) : CrvHyp -&gt; BoolElt
5<->IsIntegral(C) <->text1485.htm#16760<->IsIntegral(C) : CrvHyp -&gt; BoolElt
5<->IspIntegral(C, p) <->text1485.htm#16761<->IspIntegral(C, p) : CrvHyp, RngUPolElt -> BoolElt
5<->IspIntegral(C, p) <->text1485.htm#16761<->IspIntegral(C, p) : CrvHyp, Infty -> BoolElt
5<->IspIntegral(C, p) <->text1485.htm#16761<->IspIntegral(C, p) : CrvHyp, RngIntElt -&gt; BoolElt
5<->IspNormal(C, p) <->text1485.htm#16762<->IspNormal(C, p) : CrvHyp, RngUPolElt -> BoolElt
5<->IspNormal(C, p) <->text1485.htm#16762<->IspNormal(C, p) : CrvHyp, Infty -> BoolElt
5<->IspNormal(C, p) <->text1485.htm#16762<->IspNormal(C, p) : CrvHyp, RngIntElt -&gt; BoolElt
5<->IspMinimal(C, p) <->text1485.htm#16763<->IspMinimal(C, p) : CrvHyp, RngUPolElt -> BoolElt, BoolElt
5<->IspMinimal(C, p) <->text1485.htm#16763<->IspMinimal(C, p) : CrvHyp, Infty -> BoolElt, BoolElt
5<->IspMinimal(C, p) <->text1485.htm#16763<->IspMinimal(C, p) : CrvHyp, RngIntElt -&gt; BoolElt, BoolElt
3<->creation-model-predicates :<->text1485.htm#16758<->creation-model-predicates :: Predicates on Models (HYPERELLIPTIC CURVES)
3<->quadratic-twists :<->text1485.htm#16764<->quadratic-twists :: Twisting Hyperelliptic Curves (HYPERELLIPTIC CURVES)
5<->QuadraticTwist(C, d) <->text1485.htm#16765<->QuadraticTwist(C, d) : CrvHyp, RngElt -&gt; CrvHyp
5<->QuadraticTwist(C) <->text1485.htm#16766<->QuadraticTwist(C) : CrvHyp -&gt; CrvHyp
5<->QuadraticTwists(C) <->text1485.htm#16767<->QuadraticTwists(C) : CrvHyp -&gt; SeqEnum
5<->IsQuadraticTwist(C, D) <->text1485.htm#16768<->IsQuadraticTwist(C, D) : CrvHyp, CrvHyp -&gt; BoolElt, RngElt
5<->Twists(GI) <->text1485.htm#16769<->Twists(GI) : SeqEnum[FldFin] -> SeqEnum[CrvHyp], GrpPerm
5<->Twists(C) <->text1485.htm#16769<->Twists(C) : CrvHyp -&gt; SeqEnum[CrvHyp], GrpPerm
5<->HyperellipticPolynomialsFromShiodaInvariants(JI) <->text1485.htm#16770<->HyperellipticPolynomialsFromShiodaInvariants(JI) : SeqEnum -&gt; SeqEnum, GrpPerm
4<->CrvHyp_QuadraticTwists (Example H131E3)<->text1485.htm#16771<->CrvHyp_QuadraticTwists (Example H131E3)
4<->Example-QuadraticTwists :<->text1485.htm#16771<->Example-QuadraticTwists :: CrvHyp_QuadraticTwists (Example H131E3)
4<->CrvHyp_QuadraticTwists (Example H131E4)<->text1485.htm#16772<->CrvHyp_QuadraticTwists (Example H131E4)
4<->Example-QuadraticTwists :<->text1485.htm#16772<->Example-QuadraticTwists :: CrvHyp_QuadraticTwists (Example H131E4)
4<->CrvHyp_QuadraticTwists (Example H131E5)<->text1485.htm#16773<->CrvHyp_QuadraticTwists (Example H131E5)
4<->Example-QuadraticTwists :<->text1485.htm#16773<->Example-QuadraticTwists :: CrvHyp_QuadraticTwists (Example H131E5)
3<->quadratic-twists :<->text1485.htm#16764<->quadratic-twists :: Twisting Hyperelliptic Curves (HYPERELLIPTIC CURVES)
3<->quadratic-twists :<->text1485.htm#16774<->quadratic-twists :: Type Change Predicates (HYPERELLIPTIC CURVES)
5<->IsEllipticCurve(C) <->text1485.htm#16775<->IsEllipticCurve(C) : CrvHyp -&gt; BoolElt, CrvEll, MapIsoSch, MapIsoSch
3<->quadratic-twists :<->text1485.htm#16774<->quadratic-twists :: Type Change Predicates (HYPERELLIPTIC CURVES)
3<->creation :<->text1485.htm<->creation :: Creation Functions (HYPERELLIPTIC CURVES)
3<->structure_operations :<->text1486.htm<->structure_operations :: Operations on Curves (HYPERELLIPTIC CURVES)
3<->elementary_invariants :<->text1486.htm#16777<->elementary_invariants :: Elementary Invariants (HYPERELLIPTIC CURVES)
5<->HyperellipticPolynomials(C) <->text1486.htm#16778<->HyperellipticPolynomials(C) : CrvHyp -&gt; RngUPolElt, RngUPolElt
5<->Degree(C) <->text1486.htm#16779<->Degree(C) : SetPtHyp -> RngIntElt
5<->Degree(C) <->text1486.htm#16779<->Degree(C) : CrvHyp -&gt; RngIntElt
5<->Discriminant(C) <->text1486.htm#16780<->Discriminant(C) : CrvHyp -&gt; RngElt
5<->Genus(C) <->text1486.htm#16781<->Genus(C) : CrvHyp -&gt; RngIntElt
5<->Conductor(C) <->text1486.htm#16782<->Conductor(C) : CrvHyp -&gt; RngIntElt
5<->Conductor(C,P) <->text1486.htm#16783<->Conductor(C,P) : CrvHyp[FldNum], RngOrdIdl -> RngIntElt
5<->Conductor(C,p) <->text1486.htm#16783<->Conductor(C,p) : CrvHyp[FldRat], RngIntElt -&gt; RngIntElt
4<->CrvHyp_crvhyp-conductor-Q (Example H131E6)<->text1486.htm#16784<->CrvHyp_crvhyp-conductor-Q (Example H131E6)
4<->Example-crvhyp-conductor-Q :<->text1486.htm#16784<->Example-crvhyp-conductor-Q :: CrvHyp_crvhyp-conductor-Q (Example H131E6)
5<->ConductorExponent(C) <->text1486.htm#16785<->ConductorExponent(C) : CrvHyp[FldPad] -&gt; RngIntElt
4<->CrvHyp_crvhyp-conductor-padic (Example H131E7)<->text1486.htm#16786<->CrvHyp_crvhyp-conductor-padic (Example H131E7)
4<->Example-crvhyp-conductor-padic :<->text1486.htm#16786<->Example-crvhyp-conductor-padic :: CrvHyp_crvhyp-conductor-padic (Example H131E7)
5<->EulerFactor(C,P) <->text1486.htm#16787<->EulerFactor(C,P) : CrvHyp[FldNum], RngOrdIdl -> RngUPolElt
5<->EulerFactor(C) <->text1486.htm#16787<->EulerFactor(C) : CrvHyp[FldPad] -> RngUPolElt
5<->EulerFactor(C,p) <->text1486.htm#16787<->EulerFactor(C,p) : CrvHyp[FldRat], RngIntElt -&gt; RngUPolElt
5<->EulerFactor(C,p) <->text1486.htm#16788<->EulerFactor(C,p) : CrvHyp[FldNum], RngIntElt -&gt; RngUPolElt
4<->CrvHyp_crvhyp-eulerfactor (Example H131E8)<->text1486.htm#16789<->CrvHyp_crvhyp-eulerfactor (Example H131E8)
4<->Example-crvhyp-eulerfactor :<->text1486.htm#16789<->Example-crvhyp-eulerfactor :: CrvHyp_crvhyp-eulerfactor (Example H131E8)
3<->elementary_invariants :<->text1486.htm#16777<->elementary_invariants :: Elementary Invariants (HYPERELLIPTIC CURVES)
3<->igusa_invariants :<->text1486.htm#16790<->igusa_invariants :: Igusa Invariants (HYPERELLIPTIC CURVES)
5<->ClebschInvariants(C) <->text1486.htm#16791<->ClebschInvariants(C) : CrvHyp -&gt; SeqEnum
5<->ClebschInvariants(f) <->text1486.htm#16792<->ClebschInvariants(f) : RngUPolElt -&gt; SeqEnum
5<->IgusaClebschInvariants(C: parameters) <->text1486.htm#16793<->IgusaClebschInvariants(C: parameters) : CrvHyp -&gt; SeqEnum
5<->IgusaClebschInvariants(f, h) <->text1486.htm#16794<->IgusaClebschInvariants(f, h) : RngUPolElt, RngUPolElt -&gt; SeqEnum
5<->IgusaClebschInvariants(f: parameters) <->text1486.htm#16795<->IgusaClebschInvariants(f: parameters) : RngUPolElt -&gt; SeqEnum
5<->JInvariants :: IgusaInvariants(C: parameters)<->text1486.htm#16796<->JInvariants :: IgusaInvariants(C: parameters): CrvHyp -&gt; SeqEnum
5<->IgusaInvariants(C: parameters)<->text1486.htm#16796<->IgusaInvariants(C: parameters): CrvHyp -&gt; SeqEnum
5<->JInvariants :: IgusaInvariants(f, h)<->text1486.htm#16797<->JInvariants :: IgusaInvariants(f, h): RngUPolElt, RngUPolElt -&gt; SeqEnum
5<->IgusaInvariants(f, h)<->text1486.htm#16797<->IgusaInvariants(f, h): RngUPolElt, RngUPolElt -&gt; SeqEnum
5<->JInvariants :: IgusaInvariants(f: parameters) <->text1486.htm#16798<->JInvariants :: IgusaInvariants(f: parameters) : RngUPolElt -&gt; SeqEnum
5<->IgusaInvariants(f: parameters) <->text1486.htm#16798<->IgusaInvariants(f: parameters) : RngUPolElt -&gt; SeqEnum
5<->ScaledIgusaInvariants(f, h)<->text1486.htm#16799<->ScaledIgusaInvariants(f, h): RngUPolElt, RngUPolElt -&gt; SeqEnum
5<->ScaledIgusaInvariants(f)<->text1486.htm#16800<->ScaledIgusaInvariants(f): RngUPolElt -&gt; SeqEnum
5<->AbsoluteInvariants(C) <->text1486.htm#16801<->AbsoluteInvariants(C) : CrvHyp -&gt; SeqEnum
5<->ClebschToIgusaClebsch(Q) <->text1486.htm#16802<->ClebschToIgusaClebsch(Q) : SeqEnum  -&gt; SeqEnum
5<->IgusaClebschToIgusa(S) <->text1486.htm#16803<->IgusaClebschToIgusa(S) : SeqEnum  -&gt; SeqEnum
5<->G2Invariants(C) <->text1486.htm#16804<->G2Invariants(C) : CrvHyp -&gt; SeqEnum
5<->G2ToIgusaInvariants(GI) <->text1486.htm#16805<->G2ToIgusaInvariants(GI) : SeqEnum -&gt; SeqEnum
5<->IgusaToG2Invariants(JI) <->text1486.htm#16806<->IgusaToG2Invariants(JI) : SeqEnum -&gt; SeqEnum
3<->igusa_invariants :<->text1486.htm#16790<->igusa_invariants :: Igusa Invariants (HYPERELLIPTIC CURVES)
3<->shioda_invariants :<->text1486.htm#16807<->shioda_invariants :: Shioda Invariants (HYPERELLIPTIC CURVES)
5<->ShiodaInvariants(f) <->text1486.htm#16808<->ShiodaInvariants(f) : RngUPolElt -> SeqEnum, SeqEnum
5<->ShiodaInvariants(fh) <->text1486.htm#16808<->ShiodaInvariants(fh) : SeqEnum -> SeqEnum, SeqEnum
5<->ShiodaInvariants(C) <->text1486.htm#16808<->ShiodaInvariants(C) : CrvHyp -&gt; SeqEnum, SeqEnum
5<->ShiodaInvariantsEqual(V1,V2) <->text1486.htm#16809<->ShiodaInvariantsEqual(V1,V2) : SeqEnum, SeqEnum -&gt; BoolElt
5<->DiscriminantFromShiodaInvariants(JI) <->text1486.htm#16810<->DiscriminantFromShiodaInvariants(JI) : SeqEnum -&gt; RngElt
5<->ShiodaAlgebraicInvariants(FJI) <->text1486.htm#16811<->ShiodaAlgebraicInvariants(FJI) : SeqEnum -&gt; SeqEnum
4<->CrvHyp_shioda-inv-ex (Example H131E9)<->text1486.htm#16812<->CrvHyp_shioda-inv-ex (Example H131E9)
4<->Example-shioda-inv-ex :<->text1486.htm#16812<->Example-shioda-inv-ex :: CrvHyp_shioda-inv-ex (Example H131E9)
5<->MaedaInvariants(f) <->text1486.htm#16813<->MaedaInvariants(f) : RngUPolElt-> SeqEnum
5<->MaedaInvariants(C) <->text1486.htm#16813<->MaedaInvariants(C) : CrvHyp -&gt; SeqEnum
3<->shioda_invariants :<->text1486.htm#16807<->shioda_invariants :: Shioda Invariants (HYPERELLIPTIC CURVES)
3<->base_ring_curve :<->text1486.htm#16814<->base_ring_curve :: Base Ring (HYPERELLIPTIC CURVES)
5<->BaseRing :: BaseField(C) <->text1486.htm#16815<->BaseRing :: BaseField(C) : Sch -&gt; Fld
5<->CoefficientRing :: BaseField(C) <->text1486.htm#16815<->CoefficientRing :: BaseField(C) : Sch -&gt; Fld
5<->BaseField(C) <->text1486.htm#16815<->BaseField(C) : Sch -&gt; Fld
3<->base_ring_curve :<->text1486.htm#16814<->base_ring_curve :: Base Ring (HYPERELLIPTIC CURVES)
3<->structure_operations :<->text1486.htm<->structure_operations :: Operations on Curves (HYPERELLIPTIC CURVES)
3<->curve_from_invariants :<->text1487.htm<->curve_from_invariants :: Creation from Invariants (HYPERELLIPTIC CURVES)
5<->HyperellipticCurveFromIgusaClebsch(S) <->text1487.htm#16817<->HyperellipticCurveFromIgusaClebsch(S) : SeqEnum -&gt; CrvHyp
5<->HyperellipticCurveFromG2Invariants(S) <->text1487.htm#16818<->HyperellipticCurveFromG2Invariants(S) : SeqEnum[FldFin] -&gt; CrvHyp, GrpFP
5<->HyperellipticPolynomialFromShiodaInvariants :: HyperellipticCurveFromShiodaInvariants(JI) <->text1487.htm#16819<->HyperellipticPolynomialFromShiodaInvariants :: HyperellipticCurveFromShiodaInvariants(JI) : SeqEnum[FldFin] -&gt; CrvHyp, GrpPerm
5<->HyperellipticCurveFromShiodaInvariants(JI) <->text1487.htm#16819<->HyperellipticCurveFromShiodaInvariants(JI) : SeqEnum[FldFin] -&gt; CrvHyp, GrpPerm
4<->CrvHyp_CurveFromInvts (Example H131E10)<->text1487.htm#16820<->CrvHyp_CurveFromInvts (Example H131E10)
4<->Example-CurveFromInvts :<->text1487.htm#16820<->Example-CurveFromInvts :: CrvHyp_CurveFromInvts (Example H131E10)
3<->curve_from_invariants :<->text1487.htm<->curve_from_invariants :: Creation from Invariants (HYPERELLIPTIC CURVES)
3<->function_field :<->text1488.htm<->function_field :: Function Field (HYPERELLIPTIC CURVES)
3<->function_field_and_polynomials :<->text1488.htm#16822<->function_field_and_polynomials :: Function Field and Polynomial  Ring (HYPERELLIPTIC CURVES)
5<->FunctionField(C) <->text1488.htm#16823<->FunctionField(C) : Sch -&gt; FldFunG
5<->DefiningPolynomial(C) <->text1488.htm#16824<->DefiningPolynomial(C) : Sch -&gt; RngMPolElt
5<->EvaluatePolynomial(C, [a, b, c]) <->text1488.htm#16825<->EvaluatePolynomial(C, [a, b, c]) : CrvHyp, [RngElt] -> RngElt
5<->EvaluatePolynomial(C, a, b, c) <->text1488.htm#16825<->EvaluatePolynomial(C, a, b, c) : CrvHyp, RngElt, RngElt, RngElt -&gt; RngElt
3<->function_field_and_polynomials :<->text1488.htm#16822<->function_field_and_polynomials :: Function Field and Polynomial  Ring (HYPERELLIPTIC CURVES)
3<->function_field :<->text1488.htm<->function_field :: Function Field (HYPERELLIPTIC CURVES)
3<->points :<->text1489.htm<->points :: Points (HYPERELLIPTIC CURVES)
3<->alternate_models :<->text1489.htm#16827<->alternate_models :: Creation of Points (HYPERELLIPTIC CURVES)
5<->C ! [x, y, z] <->text1489.htm#16828<->C ! [x, y, z] :  CrvHyp, [RngElt] -> PtHyp
5<->elt :: C ! [x, y] <->text1489.htm#16828<->elt :: C ! [x, y] : CrvHyp, [RngElt] -&gt; PtHyp
5<->elt : SetPtHyp, RngElt, RngElt, RngElt -> PtHyp :: C ! [x, y] <->text1489.htm#16828<->elt< PS | x, y, z > : SetPtHyp, RngElt, RngElt, RngElt -> PtHyp :: C ! [x, y] : CrvHyp, [RngElt] -&gt; PtHyp
5<->C ! [x, y] <->text1489.htm#16828<->C ! [x, y] : CrvHyp, [RngElt] -&gt; PtHyp
5<->C ! P <->text1489.htm#16829<->C ! P : CrvHyp, PtHyp -&gt; PtHyp
5<->RationalPoints :: Points(C, x) <->text1489.htm#16830<->RationalPoints :: Points(C, x) : CrvHyp, RngElt -&gt; SetIndx
5<->Points(C, x) <->text1489.htm#16830<->Points(C, x) : CrvHyp, Infty -> SetIndx
5<->RationalPoints(C, x) : CrvHyp, Infty -> SetIndx :: Points(C, x) <->text1489.htm#16830<->RationalPoints(C, x) : CrvHyp, Infty -> SetIndx :: Points(C, x) : CrvHyp, RngElt -&gt; SetIndx
5<->Points(C, x) <->text1489.htm#16830<->Points(C, x) : CrvHyp, RngElt -&gt; SetIndx
5<->PointsAtInfinity(C) <->text1489.htm#16831<->PointsAtInfinity(C) : CrvHyp -&gt; SetIndx
5<->IsPoint(C, S) <->text1489.htm#16832<->IsPoint(C, S) : CrvHyp, SeqEnum -&gt; BoolElt, PtHyp
4<->CrvHyp_points-at-infinity-on-hypcurves (Example H131E11)<->text1489.htm#16833<->CrvHyp_points-at-infinity-on-hypcurves (Example H131E11)
4<->Example-points-at-infinity-on-hypcurves :<->text1489.htm#16833<->Example-points-at-infinity-on-hypcurves :: CrvHyp_points-at-infinity-on-hypcurves (Example H131E11)
3<->alternate_models :<->text1489.htm#16827<->alternate_models :: Creation of Points (HYPERELLIPTIC CURVES)
3<->random-points :<->text1489.htm#16834<->random-points :: Random Points (HYPERELLIPTIC CURVES)
5<->Random(C) <->text1489.htm#16835<->Random(C) : CrvHyp -&gt; PtHyp
3<->random-points :<->text1489.htm#16834<->random-points :: Random Points (HYPERELLIPTIC CURVES)
3<->point_predicates :<->text1489.htm#16836<->point_predicates :: Predicates on Points (HYPERELLIPTIC CURVES)
5<->P eq Q <->text1489.htm#16837<->P eq Q : PtHyp, PtHyp -&gt; BoolElt
5<->P ne Q <->text1489.htm#16838<->P ne Q : PtHyp, PtHyp -&gt; BoolElt
3<->point_predicates :<->text1489.htm#16836<->point_predicates :: Predicates on Points (HYPERELLIPTIC CURVES)
3<->point_access_curve :<->text1489.htm#16839<->point_access_curve :: Access Operations (HYPERELLIPTIC CURVES)
5<->[] :: P[i] <->text1489.htm#16840<->[] :: P[i] : PtHyp, RngIntElt -&gt; RngElt
5<->ElementToSequence :: Eltseq(P) <->text1489.htm#16841<->ElementToSequence :: Eltseq(P) : PtHyp -&gt; SeqEnum
5<->Eltseq(P) <->text1489.htm#16841<->Eltseq(P) : PtHyp -&gt; SeqEnum
3<->point_access_curve :<->text1489.htm#16839<->point_access_curve :: Access Operations (HYPERELLIPTIC CURVES)
3<->point_arithmetic_curve :<->text1489.htm#16842<->point_arithmetic_curve :: Arithmetic of Points (HYPERELLIPTIC CURVES)
5<->Involution :: - P <->text1489.htm#16843<->Involution :: - P : PtHyp -&gt; PtHyp
5<->- P <->text1489.htm#16843<->- P : PtHyp -&gt; PtHyp
3<->point_arithmetic_curve :<->text1489.htm#16842<->point_arithmetic_curve :: Arithmetic of Points (HYPERELLIPTIC CURVES)
3<->point_enumeration_curve :<->text1489.htm#16844<->point_enumeration_curve :: Enumeration and Counting Points (HYPERELLIPTIC CURVES)
5<->NumberOfPointsAtInfinity(C) <->text1489.htm#16845<->NumberOfPointsAtInfinity(C) : CrvHyp -&gt; RngIntElt
5<->PointsAtInfinity(C) <->text1489.htm#16846<->PointsAtInfinity(C) : CrvHyp -&gt; SetIndx
5<-># C <->text1489.htm#16847<-># C : CrvHyp -&gt;  RngIntElt
5<->RationalPoints :: Points(C) <->text1489.htm#16848<->RationalPoints :: Points(C) : CrvHyp -&gt; SetIndx
5<->RationalPoints(C) : SetPtHyp -> SetIndx :: Points(C) <->text1489.htm#16848<->RationalPoints(C) : SetPtHyp -> SetIndx :: Points(C) : CrvHyp -&gt; SetIndx
5<->Points(C) <->text1489.htm#16848<->Points(C) : CrvHyp -&gt; SetIndx
5<->PointsKnown(C) <->text1489.htm#16849<->PointsKnown(C) : CrvHyp -&gt; BoolElt
5<->ZetaFunction(C) <->text1489.htm#16850<->ZetaFunction(C) : CrvHyp -&gt; FldFunRatUElt
5<->ZetaFunction(C, K) <->text1489.htm#16851<->ZetaFunction(C, K) : CrvHyp, FldFin -&gt; FldFunRatUElt
4<->CrvHyp_PointEnumeration (Example H131E12)<->text1489.htm#16852<->CrvHyp_PointEnumeration (Example H131E12)
4<->Example-PointEnumeration :<->text1489.htm#16852<->Example-PointEnumeration :: CrvHyp_PointEnumeration (Example H131E12)
3<->point_enumeration_curve :<->text1489.htm#16844<->point_enumeration_curve :: Enumeration and Counting Points (HYPERELLIPTIC CURVES)
3<->frobenius :<->text1489.htm#16853<->frobenius :: Frobenius (HYPERELLIPTIC CURVES)
5<->Frobenius(P, F) <->text1489.htm#16854<->Frobenius(P, F) : PtHyp, FldFin -&gt; PtHyp
5<->FrobeniusMatrix(C, p) <->text1489.htm#16855<->FrobeniusMatrix(C, p) : CrvHyp, RngIntElt -&gt; Mtrx
3<->frobenius :<->text1489.htm#16853<->frobenius :: Frobenius (HYPERELLIPTIC CURVES)
3<->points :<->text1489.htm<->points :: Points (HYPERELLIPTIC CURVES)
3<->transforms :<->text1490.htm<->transforms :: Isomorphisms and  Transformations (HYPERELLIPTIC CURVES)
3<->isomorphism-creation :<->text1490.htm#16857<->isomorphism-creation :: Creation of Isomorphisms (HYPERELLIPTIC CURVES)
5<->Aut(C) <->text1490.htm#16858<->Aut(C) : CrvHyp -&gt; PowAutSch
5<->Iso(C1, C2) <->text1490.htm#16859<->Iso(C1, C2) : CrvHyp, CrvHyp -&gt; PowIsoSch
5<->Transformation(C, u) <->text1490.htm#16860<->Transformation(C, u) : CrvHyp, RngUPolElt -> CrvHyp, MapIsoSch
5<->Transformation(C, e) <->text1490.htm#16860<->Transformation(C, e) : CrvHyp, RngElt -> CrvHyp, MapIsoSch
5<->Transformation(C, e, u) <->text1490.htm#16860<->Transformation(C, e, u) : CrvHyp, RngElt, RngUPolElt  -> CrvHyp, MapIsoSch
5<->Transformation(C, t, e, u) <->text1490.htm#16860<->Transformation(C, t, e, u) : CrvHyp, [RngElt], RngElt, RngUPolElt -> CrvHyp, MapIsoSch
5<->Transformation(C, t) <->text1490.htm#16860<->Transformation(C, t) : CrvHyp, [RngElt]  -&gt; CrvHyp, MapIsoSch
4<->CrvHyp_Transformation (Example H131E13)<->text1490.htm#16861<->CrvHyp_Transformation (Example H131E13)
4<->Example-Transformation :<->text1490.htm#16861<->Example-Transformation :: CrvHyp_Transformation (Example H131E13)
3<->isomorphism-creation :<->text1490.htm#16857<->isomorphism-creation :: Creation of Isomorphisms (HYPERELLIPTIC CURVES)
3<->isomorphism-arithmetic :<->text1490.htm#16862<->isomorphism-arithmetic :: Arithmetic with Isomorphisms (HYPERELLIPTIC CURVES)
5<->f * g <->text1490.htm#16863<->f * g : MapIsoSch, MapIsoSch -&gt; MapIsoSch
5<->Inverse(f) <->text1490.htm#16864<->Inverse(f) : MapIsoSch -&gt; MapIsoSch
5<->f in M <->text1490.htm#16865<->f in M : MapIsoSch, PowIsoSch -&gt; BoolElt
5<->Evaluate :: P @ f <->text1490.htm#16866<->Evaluate :: P @ f : PtHyp, MapIsoSch -&gt; PtHyp
5<->P @ f <->text1490.htm#16866<->P @ f : PtHyp, MapIsoSch -&gt; PtHyp
5<->Pullback :: P @@ f <->text1490.htm#16867<->Pullback :: P @@ f : PtHyp, MapIsoSch -&gt; PtHyp
5<->P @@ f <->text1490.htm#16867<->P @@ f : PtHyp, MapIsoSch -&gt; PtHyp
5<->f eq g <->text1490.htm#16868<->f eq g : MapIsoSch, MapIsoSch -&gt; BoolElt
3<->isomorphism-arithmetic :<->text1490.htm#16862<->isomorphism-arithmetic :: Arithmetic with Isomorphisms (HYPERELLIPTIC CURVES)
3<->invariants-isomorphisms :<->text1490.htm#16869<->invariants-isomorphisms :: Invariants of Isomorphisms (HYPERELLIPTIC CURVES)
5<->Parent(f) <->text1490.htm#16870<->Parent(f) : MapIsoSch -&gt; PowIsoSch
5<->Domain(f) <->text1490.htm#16871<->Domain(f) : MapIsoSch -&gt; CrvHyp
5<->Codomain(f) <->text1490.htm#16872<->Codomain(f) : MapIsoSch -&gt; CrvHyp
3<->invariants-isomorphisms :<->text1490.htm#16869<->invariants-isomorphisms :: Invariants of Isomorphisms (HYPERELLIPTIC CURVES)
3<->isomor-check :<->text1490.htm#16873<->isomor-check :: Automorphism Group and  Isomorphism Testing (HYPERELLIPTIC CURVES)
5<->IsGL2Equivalent(f, g, n) <->text1490.htm#16874<->IsGL2Equivalent(f, g, n) : RngUPolElt, RngUPolElt, RngIntElt -&gt; BoolElt, SeqEnum
5<->IsIsomorphic(C1, C2) <->text1490.htm#16875<->IsIsomorphic(C1, C2) : CrvHyp, CrvHyp -&gt; BoolElt, MapIsoSch
5<->AutomorphismGroup(C) <->text1490.htm#16876<->AutomorphismGroup(C) : CrvHyp -&gt; GrpPerm, Map, Map
4<->CrvHyp_Automorphism_Group (Example H131E14)<->text1490.htm#16877<->CrvHyp_Automorphism_Group (Example H131E14)
4<->Example-Automorphism_Group :<->text1490.htm#16877<->Example-Automorphism_Group :: CrvHyp_Automorphism_Group (Example H131E14)
5<->GeometricAutomorphismGroup(GI) <->text1490.htm#16878<->GeometricAutomorphismGroup(GI) : SeqEnum -> GrpFP
5<->GeometricAutomorphismGroup(C) <->text1490.htm#16878<->GeometricAutomorphismGroup(C) : CrvHyp -&gt; GrpFP
5<->GeometricAutomorphismGroupFromShiodaInvariants(JI) <->text1490.htm#16879<->GeometricAutomorphismGroupFromShiodaInvariants(JI) : SeqEnum -&gt; GrpPerm
4<->CrvHyp_Geometric_Automorphism_Group (Example H131E15)<->text1490.htm#16880<->CrvHyp_Geometric_Automorphism_Group (Example H131E15)
4<->Example-Geometric_Automorphism_Group :<->text1490.htm#16880<->Example-Geometric_Automorphism_Group :: CrvHyp_Geometric_Automorphism_Group (Example H131E15)
5<->GeometricAutomorphismGroupGenus2Classification(F) <->text1490.htm#16881<->GeometricAutomorphismGroupGenus2Classification(F) : FldFin -&gt; SeqEnum,SeqEnum
5<->GeometricAutomorphismGroupGenus3Classification(F) <->text1490.htm#16882<->GeometricAutomorphismGroupGenus3Classification(F) : FldFin -&gt; SeqEnum,SeqEnum
4<->CrvHyp_aut_class (Example H131E16)<->text1490.htm#16883<->CrvHyp_aut_class (Example H131E16)
4<->Example-aut_class :<->text1490.htm#16883<->Example-aut_class :: CrvHyp_aut_class (Example H131E16)
3<->isomor-check :<->text1490.htm#16873<->isomor-check :: Automorphism Group and  Isomorphism Testing (HYPERELLIPTIC CURVES)
3<->transforms :<->text1490.htm<->transforms :: Isomorphisms and  Transformations (HYPERELLIPTIC CURVES)
3<->jacobian :<->text1491.htm<->jacobian :: Jacobians (HYPERELLIPTIC CURVES)
3<->jacobian_creation :<->text1491.htm#16885<->jacobian_creation :: Creation of a Jacobian (HYPERELLIPTIC CURVES)
5<->Jacobian(C) <->text1491.htm#16886<->Jacobian(C) : CrvHyp -&gt; JacHyp
3<->jacobian_creation :<->text1491.htm#16885<->jacobian_creation :: Creation of a Jacobian (HYPERELLIPTIC CURVES)
3<->point_access_jacobian :<->text1491.htm#16887<->point_access_jacobian :: Access Operations (HYPERELLIPTIC CURVES)
5<->Curve(J) <->text1491.htm#16888<->Curve(J) : JacHyp -&gt; CrvHyp
5<->Dimension(J) <->text1491.htm#16889<->Dimension(J) : JacHyp -&gt; RngIntElt
3<->point_access_jacobian :<->text1491.htm#16887<->point_access_jacobian :: Access Operations (HYPERELLIPTIC CURVES)
3<->base_ring_jacobian :<->text1491.htm#16890<->base_ring_jacobian :: Base Ring (HYPERELLIPTIC CURVES)
5<->BaseRing :: BaseField(J) <->text1491.htm#16891<->BaseRing :: BaseField(J) : JacHyp -&gt; Fld
5<->CoefficientRing :: BaseField(J) <->text1491.htm#16891<->CoefficientRing :: BaseField(J) : JacHyp -&gt; Fld
5<->BaseField(J) <->text1491.htm#16891<->BaseField(J) : JacHyp -&gt; Fld
3<->base_ring_jacobian :<->text1491.htm#16890<->base_ring_jacobian :: Base Ring (HYPERELLIPTIC CURVES)
3<->base_change_jacobian :<->text1491.htm#16892<->base_change_jacobian :: Changing the Base Ring (HYPERELLIPTIC CURVES)
5<->BaseExtend :: BaseChange(J, F) <->text1491.htm#16893<->BaseExtend :: BaseChange(J, F) : JacHyp, Rng -&gt; JacHyp
5<->BaseChange(J, F) <->text1491.htm#16893<->BaseChange(J, F) : JacHyp, Rng -&gt; JacHyp
5<->BaseExtend :: BaseChange(J, j) <->text1491.htm#16894<->BaseExtend :: BaseChange(J, j) : JacHyp, Map -&gt; JacHyp
5<->BaseChange(J, j) <->text1491.htm#16894<->BaseChange(J, j) : JacHyp, Map -&gt; JacHyp
5<->BaseExtend :: BaseChange(J, n) <->text1491.htm#16895<->BaseExtend :: BaseChange(J, n) : JacHyp, RngIntElt -&gt; JacHyp
5<->BaseChange(J, n) <->text1491.htm#16895<->BaseChange(J, n) : JacHyp, RngIntElt -&gt; JacHyp
3<->base_change_jacobian :<->text1491.htm#16892<->base_change_jacobian :: Changing the Base Ring (HYPERELLIPTIC CURVES)
3<->jacobian :<->text1491.htm<->jacobian :: Jacobians (HYPERELLIPTIC CURVES)
3<->richelot :<->text1492.htm<->richelot :: Richelot Isogenies (HYPERELLIPTIC CURVES)
5<->RichelotIsogenousSurfaces(C) <->text1492.htm#16897<->RichelotIsogenousSurfaces(C) : CrvHyp -> List, List
5<->RichelotIsogenousSurfaces(J) <->text1492.htm#16897<->RichelotIsogenousSurfaces(J) : JacHyp -&gt; List, List
5<->RichelotIsogenousSurface(C, kernel) <->text1492.htm#16898<->RichelotIsogenousSurface(C, kernel) : CrvHyp, RngUPolElt[RngUPolRes] -> .
5<->RichelotIsogenousSurface(J, kernel) <->text1492.htm#16898<->RichelotIsogenousSurface(J, kernel) : JacHyp, RngUPolElt[RngUPolRes] -&gt; .
4<->CrvHyp_richelot_isogeny (Example H131E17)<->text1492.htm#16899<->CrvHyp_richelot_isogeny (Example H131E17)
4<->Example-richelot_isogeny :<->text1492.htm#16899<->Example-richelot_isogeny :: CrvHyp_richelot_isogeny (Example H131E17)
3<->richelot :<->text1492.htm<->richelot :: Richelot Isogenies (HYPERELLIPTIC CURVES)
3<->points-jac :<->text1493.htm<->points-jac :: Points on the Jacobian (HYPERELLIPTIC CURVES)
3<->point_creation_jacobian :<->text1493.htm#16901<->point_creation_jacobian :: Creation of Points (HYPERELLIPTIC CURVES)
5<->Id :: J ! 0 <->text1493.htm#16902<->Id :: J ! 0 : JacHyp, RngIntElt  -&gt; JacHypPt
5<->Identity :: J ! 0 <->text1493.htm#16902<->Identity :: J ! 0 : JacHyp, RngIntElt  -&gt; JacHypPt
5<->J ! 0 <->text1493.htm#16902<->J ! 0 : JacHyp, RngIntElt  -&gt; JacHypPt
5<->elt :: J ! [a, b] <->text1493.htm#16903<->elt :: J ! [a, b] : JacHyp, [ RngUPolElt ] -&gt; JacHypPt
5<->elt : JacHyp, [ RngUPolElt ] -> JacHypPt :: J ! [a, b] <->text1493.htm#16903<->elt< J | [a, b] > : JacHyp, [ RngUPolElt ] -> JacHypPt :: J ! [a, b] : JacHyp, [ RngUPolElt ] -&gt; JacHypPt
5<->elt : JacHyp, RngUPolElt, RngUPolElt, RngIntElt -> JacHypPt :: J ! [a, b] <->text1493.htm#16903<->elt< J | a, b, d > : JacHyp, RngUPolElt, RngUPolElt, RngIntElt -> JacHypPt :: J ! [a, b] : JacHyp, [ RngUPolElt ] -&gt; JacHypPt
5<->elt : JacHyp, [ RngUPolElt ], RngIntElt -> JacHypPt :: J ! [a, b] <->text1493.htm#16903<->elt< J | [a, b], d > : JacHyp, [ RngUPolElt ], RngIntElt -> JacHypPt :: J ! [a, b] : JacHyp, [ RngUPolElt ] -&gt; JacHypPt
5<->J ! [a, b] <->text1493.htm#16903<->J ! [a, b] : JacHyp, [ RngUPolElt ] -&gt; JacHypPt
5<->! :: P - Q <->text1493.htm#16904<->! :: P - Q : PtHyp, PtHyp -&gt; JacHypPt
5<->elt :: P - Q <->text1493.htm#16904<->elt :: P - Q : PtHyp, PtHyp -&gt; JacHypPt
5<->P - Q <->text1493.htm#16904<->P - Q : PtHyp, PtHyp -&gt; JacHypPt
5<->elt :: J ! [S, T] <->text1493.htm#16905<->elt :: J ! [S, T] : JacHyp, [SeqEnum] -&gt; JacHypPt
5<->J ! [S, T] <->text1493.htm#16905<->J ! [S, T] : JacHyp, [SeqEnum] -&gt; JacHypPt
5<->JacobianPoint(J, D) <->text1493.htm#16906<->JacobianPoint(J, D) : JacHyp, DivCrvElt -&gt; JacHypPt
5<->J ! P <->text1493.htm#16907<->J ! P : JacHyp, JacHypPt -&gt; JacHypPt
5<->RationalPoints :: Points(J, a, d) <->text1493.htm#16908<->RationalPoints :: Points(J, a, d) : JacHyp, RngUPolElt, RngIntElt -&gt; SetIndx
5<->Points(J, a, d) <->text1493.htm#16908<->Points(J, a, d) : JacHyp, RngUPolElt, RngIntElt -&gt; SetIndx
4<->CrvHyp_point_creation_jacobian (Example H131E18)<->text1493.htm#16909<->CrvHyp_point_creation_jacobian (Example H131E18)
4<->Example-point_creation_jacobian :<->text1493.htm#16909<->Example-point_creation_jacobian :: CrvHyp_point_creation_jacobian (Example H131E18)
4<->CrvHyp_point_creation_jacobian2 (Example H131E19)<->text1493.htm#16910<->CrvHyp_point_creation_jacobian2 (Example H131E19)
4<->Example-point_creation_jacobian2 :<->text1493.htm#16910<->Example-point_creation_jacobian2 :: CrvHyp_point_creation_jacobian2 (Example H131E19)
4<->CrvHyp_point_creation_jacobian3 (Example H131E20)<->text1493.htm#16911<->CrvHyp_point_creation_jacobian3 (Example H131E20)
4<->Example-point_creation_jacobian3 :<->text1493.htm#16911<->Example-point_creation_jacobian3 :: CrvHyp_point_creation_jacobian3 (Example H131E20)
3<->point_creation_jacobian :<->text1493.htm#16901<->point_creation_jacobian :: Creation of Points (HYPERELLIPTIC CURVES)
3<->random_points_jacobian :<->text1493.htm#16912<->random_points_jacobian :: Random Points (HYPERELLIPTIC CURVES)
5<->Random(J) <->text1493.htm#16913<->Random(J) : JacHyp -&gt; JacHypPt
3<->random_points_jacobian :<->text1493.htm#16912<->random_points_jacobian :: Random Points (HYPERELLIPTIC CURVES)
3<->point_predicates_jacobian :<->text1493.htm#16914<->point_predicates_jacobian :: Booleans and Predicates for Points (HYPERELLIPTIC CURVES)
5<->P eq Q <->text1493.htm#16915<->P eq Q : JacHypPt, JacHypPt -&gt;  BoolElt
5<->P ne Q <->text1493.htm#16916<->P ne Q : JacHypPt, JacHypPt -&gt;  BoolElt
5<->IsIdentity :: IsZero(P) <->text1493.htm#16917<->IsIdentity :: IsZero(P) : JacHypPt -&gt; BoolElt
5<->IsZero(P) <->text1493.htm#16917<->IsZero(P) : JacHypPt -&gt; BoolElt
3<->point_predicates_jacobian :<->text1493.htm#16914<->point_predicates_jacobian :: Booleans and Predicates for Points (HYPERELLIPTIC CURVES)
3<->point_access_jacobian :<->text1493.htm#16918<->point_access_jacobian :: Access Operations (HYPERELLIPTIC CURVES)
5<->[] :: P[i] <->text1493.htm#16919<->[] :: P[i] : JacHypPt, RngIntElt -&gt; RngElt
5<->ElementToSequence :: Eltseq(P) <->text1493.htm#16920<->ElementToSequence :: Eltseq(P) : PtHyp -&gt; SeqEnum, RngIntElt
5<->Eltseq(P) <->text1493.htm#16920<->Eltseq(P) : PtHyp -&gt; SeqEnum, RngIntElt
3<->point_access_jacobian :<->text1493.htm#16918<->point_access_jacobian :: Access Operations (HYPERELLIPTIC CURVES)
3<->arithmetic_jacobian :<->text1493.htm#16921<->arithmetic_jacobian :: Arithmetic of Points (HYPERELLIPTIC CURVES)
5<->- P <->text1493.htm#16922<->- P : JacHypPt -&gt; JacHypPt
5<->P + Q <->text1493.htm#16923<->P + Q : JacHypPt, JacHypPt -&gt; JacHypPt
5<->P +:= Q <->text1493.htm#16924<->P +:= Q : JacHypPt, JacHypPt -&gt;
5<->P - Q <->text1493.htm#16925<->P - Q : JacHypPt, JacHypPt -&gt; JacHypPt
5<->P -:= Q <->text1493.htm#16926<->P -:= Q : JacHypPt, JacHypPt -&gt;
5<->P * n <->text1493.htm#16927<->P * n : JacHypPt, RngIntElt -> JacHypPt
5<->n * P <->text1493.htm#16927<->n * P : RngIntElt, JacHypPt -&gt; JacHypPt
5<->P *:= n <->text1493.htm#16928<->P *:= n : JacHypPt, RngIntElt -&gt;
3<->arithmetic_jacobian :<->text1493.htm#16921<->arithmetic_jacobian :: Arithmetic of Points (HYPERELLIPTIC CURVES)
3<->point_order_jacobian :<->text1493.htm#16929<->point_order_jacobian :: Order of Points on the Jacobian (HYPERELLIPTIC CURVES)
5<->Order(P) <->text1493.htm#16930<->Order(P) : JacHypPt -&gt; RngIntElt
5<->Order(P, l, u) <->text1493.htm#16931<->Order(P, l, u) : JacHypPt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Order(P, l, u, n, m) <->text1493.htm#16932<->Order(P, l, u, n, m) : JacHypPt, RngIntElt, RngIntElt ,RngIntElt, RngIntElt -&gt; RngIntElt
5<->HasOrder(P, n) <->text1493.htm#16933<->HasOrder(P, n) : JacHypPt, RngIntElt -&gt; BoolElt
3<->point_order_jacobian :<->text1493.htm#16929<->point_order_jacobian :: Order of Points on the Jacobian (HYPERELLIPTIC CURVES)
3<->frobenius :<->text1493.htm#16934<->frobenius :: Frobenius (HYPERELLIPTIC CURVES)
5<->Frobenius(P, k) <->text1493.htm#16935<->Frobenius(P, k) : JacHypPt, FldFin -&gt; JacHypPt
3<->frobenius :<->text1493.htm#16934<->frobenius :: Frobenius (HYPERELLIPTIC CURVES)
3<->weilpairing :<->text1493.htm#16936<->weilpairing :: Weil Pairing (HYPERELLIPTIC CURVES)
5<->WeilPairing(P, Q, m) <->text1493.htm#16937<->WeilPairing(P, Q, m) : JacHypPt, JacHypPt, RngIntElt -&gt; RngElt
4<->CrvHyp_Jac_WeilPairing (Example H131E21)<->text1493.htm#16938<->CrvHyp_Jac_WeilPairing (Example H131E21)
4<->Example-Jac_WeilPairing :<->text1493.htm#16938<->Example-Jac_WeilPairing :: CrvHyp_Jac_WeilPairing (Example H131E21)
3<->weilpairing :<->text1493.htm#16936<->weilpairing :: Weil Pairing (HYPERELLIPTIC CURVES)
3<->points-jac :<->text1493.htm<->points-jac :: Points on the Jacobian (HYPERELLIPTIC CURVES)
3<->point_structures_jacobian :<->text1494.htm<->point_structures_jacobian :: Rational Points and Group  Structure over Finite Fields (HYPERELLIPTIC CURVES)
3<->enumeration_jacobian :<->text1494.htm#16940<->enumeration_jacobian :: Enumeration of Points (HYPERELLIPTIC CURVES)
5<->RationalPoints :: Points(J) <->text1494.htm#16941<->RationalPoints :: Points(J) : JacHyp -&gt; SetIndx
5<->Points(J) <->text1494.htm#16941<->Points(J) : JacHyp -&gt; SetIndx
3<->enumeration_jacobian :<->text1494.htm#16940<->enumeration_jacobian :: Enumeration of Points (HYPERELLIPTIC CURVES)
3<->counting_jacobian :<->text1494.htm#16942<->counting_jacobian :: Counting Points on the Jacobian (HYPERELLIPTIC CURVES)
5<->SetVerbose("JacHypCnt", v) <->text1494.htm#16943<->SetVerbose("JacHypCnt", v) : MonStgElt, RngIntElt -&gt;
5<->Order :: # J <->text1494.htm#16944<->Order :: # J : JacHyp -&gt; RngIntElt
5<-># J <->text1494.htm#16944<-># J : JacHyp -&gt; RngIntElt
4<->CrvHyp_Jac_Point_Counting (Example H131E22)<->text1494.htm#16945<->CrvHyp_Jac_Point_Counting (Example H131E22)
4<->Example-Jac_Point_Counting :<->text1494.htm#16945<->Example-Jac_Point_Counting :: CrvHyp_Jac_Point_Counting (Example H131E22)
4<->CrvHyp_kedlaya (Example H131E23)<->text1494.htm#16946<->CrvHyp_kedlaya (Example H131E23)
4<->Example-kedlaya :<->text1494.htm#16946<->Example-kedlaya :: CrvHyp_kedlaya (Example H131E23)
4<->CrvHyp_kedlaya2 (Example H131E24)<->text1494.htm#16947<->CrvHyp_kedlaya2 (Example H131E24)
4<->Example-kedlaya2 :<->text1494.htm#16947<->Example-kedlaya2 :: CrvHyp_kedlaya2 (Example H131E24)
4<->CrvHyp_mestre (Example H131E25)<->text1494.htm#16948<->CrvHyp_mestre (Example H131E25)
4<->Example-mestre :<->text1494.htm#16948<->Example-mestre :: CrvHyp_mestre (Example H131E25)
4<->CrvHyp_shanks-pollard (Example H131E26)<->text1494.htm#16949<->CrvHyp_shanks-pollard (Example H131E26)
4<->Example-shanks-pollard :<->text1494.htm#16949<->Example-shanks-pollard :: CrvHyp_shanks-pollard (Example H131E26)
4<->CrvHyp_shanks-pollard (Example H131E27)<->text1494.htm#16950<->CrvHyp_shanks-pollard (Example H131E27)
4<->Example-shanks-pollard :<->text1494.htm#16950<->Example-shanks-pollard :: CrvHyp_shanks-pollard (Example H131E27)
5<->FactoredOrder(J) <->text1494.htm#16951<->FactoredOrder(J) : JacHyp -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->EulerFactor(J) <->text1494.htm#16952<->EulerFactor(J) : JacHyp -&gt; RngUPolElt
5<->EulerFactorModChar(J) <->text1494.htm#16953<->EulerFactorModChar(J) : JacHyp -&gt; RngUPolElt
5<->EulerFactor(J, K) <->text1494.htm#16954<->EulerFactor(J, K) : JacHyp, FldFin -&gt; RngUPolElt
3<->counting_jacobian :<->text1494.htm#16942<->counting_jacobian :: Counting Points on the Jacobian (HYPERELLIPTIC CURVES)
3<->def_hyp_point_cnt :<->text1494.htm#16955<->def_hyp_point_cnt :: Deformation Point Counting (HYPERELLIPTIC CURVES)
5<->EulerFactorsByDeformation :: JacobianOrdersByDeformation(Q, Y) <->text1494.htm#16956<->EulerFactorsByDeformation :: JacobianOrdersByDeformation(Q, Y) : RngMPolElt, SeqEnum -&gt; SeqEnum
5<->ZetaFunctionsByDeformation :: JacobianOrdersByDeformation(Q, Y) <->text1494.htm#16956<->ZetaFunctionsByDeformation :: JacobianOrdersByDeformation(Q, Y) : RngMPolElt, SeqEnum -&gt; SeqEnum
5<->JacobianOrdersByDeformation(Q, Y) <->text1494.htm#16956<->JacobianOrdersByDeformation(Q, Y) : RngMPolElt, SeqEnum -&gt; SeqEnum
4<->CrvHyp_def_hyp_pt_cnt_ex (Example H131E28)<->text1494.htm#16957<->CrvHyp_def_hyp_pt_cnt_ex (Example H131E28)
4<->Example-def_hyp_pt_cnt_ex :<->text1494.htm#16957<->Example-def_hyp_pt_cnt_ex :: CrvHyp_def_hyp_pt_cnt_ex (Example H131E28)
3<->def_hyp_point_cnt :<->text1494.htm#16955<->def_hyp_point_cnt :: Deformation Point Counting (HYPERELLIPTIC CURVES)
3<->abelian_group_jacobian :<->text1494.htm#16958<->abelian_group_jacobian :: Abelian Group Structure (HYPERELLIPTIC CURVES)
5<->Sylow(J, p) <->text1494.htm#16959<->Sylow(J, p) : JacHyp, RngIntElt -&gt; GrpAb, Map, Eseq
5<->AbelianGroup(J) <->text1494.htm#16960<->AbelianGroup(J) : JacHyp -&gt; GrpAb, Map
5<->HasAdditionAlgorithm(J) <->text1494.htm#16961<->HasAdditionAlgorithm(J) : JacHyp -&gt; Bool
3<->abelian_group_jacobian :<->text1494.htm#16958<->abelian_group_jacobian :: Abelian Group Structure (HYPERELLIPTIC CURVES)
3<->point_structures_jacobian :<->text1494.htm<->point_structures_jacobian :: Rational Points and Group  Structure over Finite Fields (HYPERELLIPTIC CURVES)
3<->jacobians-number-fields :<->text1495.htm<->jacobians-number-fields :: Jacobians over Number Fields or Q (HYPERELLIPTIC CURVES)
3<->enumeration-of-points :<->text1495.htm#16963<->enumeration-of-points :: Searching For Points (HYPERELLIPTIC CURVES)
5<->RationalPoints :: Points(J) <->text1495.htm#16964<->RationalPoints :: Points(J) : JacHyp -&gt; SetIndx
5<->Points(J) <->text1495.htm#16964<->Points(J) : JacHyp -&gt; SetIndx
3<->enumeration-of-points :<->text1495.htm#16963<->enumeration-of-points :: Searching For Points (HYPERELLIPTIC CURVES)
3<->torsion :<->text1495.htm#16965<->torsion :: Torsion (HYPERELLIPTIC CURVES)
5<->TwoTorsionSubgroup(J) <->text1495.htm#16966<->TwoTorsionSubgroup(J) : JacHyp -&gt; GrpAb, Map
5<->TorsionBound(J, n) <->text1495.htm#16967<->TorsionBound(J, n) : JacHyp, RngIntElt -&gt; RngIntElt
5<->TorsionSubgroup(J) <->text1495.htm#16968<->TorsionSubgroup(J) : JacHyp  -&gt; GrpAb, Map
4<->CrvHyp_TorsionGroups (Example H131E29)<->text1495.htm#16969<->CrvHyp_TorsionGroups (Example H131E29)
4<->Example-TorsionGroups :<->text1495.htm#16969<->Example-TorsionGroups :: CrvHyp_TorsionGroups (Example H131E29)
3<->torsion :<->text1495.htm#16965<->torsion :: Torsion (HYPERELLIPTIC CURVES)
3<->mordell-weil-heights-hyp :<->text1495.htm#16970<->mordell-weil-heights-hyp :: Heights and Regulator (HYPERELLIPTIC CURVES)
5<->NaiveHeight(P) <->text1495.htm#16971<->NaiveHeight(P) : SrfKumPt -> FldPrElt
5<->NaiveHeight(P) <->text1495.htm#16971<->NaiveHeight(P) : JacHypPt -&gt; FldPrElt
5<->Height(P\col\ Precision) <->text1495.htm#16972<->Height(P\col\ Precision) : SrfKumPt -> FldPrElt
5<->CanonicalHeight :: Height(P: parameters) <->text1495.htm#16972<->CanonicalHeight :: Height(P: parameters) : JacHypPt -&gt; FldPrElt
5<->CanonicalHeight(P\col\ Precision) : SrfKumPt -> FldPrElt :: Height(P: parameters) <->text1495.htm#16972<->CanonicalHeight(P\col\ Precision) : SrfKumPt -> FldPrElt :: Height(P: parameters) : JacHypPt -&gt; FldPrElt
5<->Height(P: parameters) <->text1495.htm#16972<->Height(P: parameters) : JacHypPt -&gt; FldPrElt
5<->HeightConstant(J: parameters) <->text1495.htm#16973<->HeightConstant(J: parameters) : JacHyp -&gt; FldPrElt, FldPrElt
5<->HeightPairing(P, Q: parameters) <->text1495.htm#16974<->HeightPairing(P, Q: parameters) : JacHypPt, JacHypPt -&gt; FldPrElt
5<->HeightPairingMatrix(S: Precision) <->text1495.htm#16975<->HeightPairingMatrix(S: Precision) : [JacHypPt] -&gt; AlgMat
5<->Regulator(S: Precision) <->text1495.htm#16976<->Regulator(S: Precision) : [JacHypPt] -&gt; FldPrElt
5<->ReducedBasis(S\col\ Precision) <->text1495.htm#16977<->ReducedBasis(S\col\ Precision) : @JacHypPt@ -> SeqEnum, AlgMatElt
5<->ReducedBasis(S\col\ Precision) <->text1495.htm#16977<->ReducedBasis(S\col\ Precision) : JacHypPt -> SeqEnum, AlgMatElt
5<->ReducedBasis(S: Precision) <->text1495.htm#16977<->ReducedBasis(S: Precision) : [JacHypPt] -&gt; SeqEnum, AlgMatElt
4<->CrvHyp_HeightPairing (Example H131E30)<->text1495.htm#16978<->CrvHyp_HeightPairing (Example H131E30)
4<->Example-HeightPairing :<->text1495.htm#16978<->Example-HeightPairing :: CrvHyp_HeightPairing (Example H131E30)
4<->CrvHyp_HeightPairing2 (Example H131E31)<->text1495.htm#16979<->CrvHyp_HeightPairing2 (Example H131E31)
4<->Example-HeightPairing2 :<->text1495.htm#16979<->Example-HeightPairing2 :: CrvHyp_HeightPairing2 (Example H131E31)
3<->mordell-weil-heights-hyp :<->text1495.htm#16970<->mordell-weil-heights-hyp :: Heights and Regulator (HYPERELLIPTIC CURVES)
3<->saturation :<->text1495.htm#16980<->saturation :: Saturation (HYPERELLIPTIC CURVES)
5<->IsDivisibleBy(P, n) <->text1495.htm#16981<->IsDivisibleBy(P, n) : JacHypPt, RngIntElt -&gt; BoolElt, JacHypPt
5<->Saturation(bas, p) <->text1495.htm#16982<->Saturation(bas, p) : [ JacHypPt ] , RngIntElt -&gt; [ JacHypPt ]
3<->saturation :<->text1495.htm#16980<->saturation :: Saturation (HYPERELLIPTIC CURVES)
3<->2-selmer-group :<->text1495.htm#16983<->2-selmer-group :: The 2-Selmer Group (HYPERELLIPTIC CURVES)
5<->BadPrimes(J) <->text1495.htm#16984<->BadPrimes(J) : JacHyp -> SeqEnum
5<->BadPrimes(C) <->text1495.htm#16984<->BadPrimes(C) : CrvHyp  -&gt; SeqEnum
5<->IsEven :: HasSquareSha(J) <->text1495.htm#16985<->IsEven :: HasSquareSha(J) : JacHyp -&gt; BoolElt
5<->HasSquareSha(J) <->text1495.htm#16985<->HasSquareSha(J) : JacHyp -&gt; BoolElt
5<->IsDeficient(C, p) <->text1495.htm#16986<->IsDeficient(C, p) : CrvHyp, RngIntElt -&gt; BoolElt
5<->HasIndexOne(C,p) <->text1495.htm#16987<->HasIndexOne(C,p) : CrvHyp, RngOrdIdl -> BoolElt
5<->HasIndexOne(C,p) <->text1495.htm#16987<->HasIndexOne(C,p) : CrvHyp, RngIntElt -&gt; BoolElt
5<->HasIndexOneEverywhereLocally(C) <->text1495.htm#16988<->HasIndexOneEverywhereLocally(C) : CrvHyp -&gt; BoolElt
5<->TwoSelmerGroup(J) <->text1495.htm#16989<->TwoSelmerGroup(J) : JacHyp -&gt; GrpAb, Map, Any, Any
5<->RankBounds :: RankBound(J) <->text1495.htm#16990<->RankBounds :: RankBound(J) : JacHyp -&gt; RngIntElt
5<->RankBound(J) <->text1495.htm#16990<->RankBound(J) : JacHyp -&gt; RngIntElt
4<->CrvHyp_2-selmer-group (Example H131E32)<->text1495.htm#16991<->CrvHyp_2-selmer-group (Example H131E32)
4<->Example-2-selmer-group :<->text1495.htm#16991<->Example-2-selmer-group :: CrvHyp_2-selmer-group (Example H131E32)
4<->CrvHyp_nonsquare-sha (Example H131E33)<->text1495.htm#16992<->CrvHyp_nonsquare-sha (Example H131E33)
4<->Example-nonsquare-sha :<->text1495.htm#16992<->Example-nonsquare-sha :: CrvHyp_nonsquare-sha (Example H131E33)
4<->CrvHyp_sha_visibility (Example H131E34)<->text1495.htm#16993<->CrvHyp_sha_visibility (Example H131E34)
4<->Example-sha_visibility :<->text1495.htm#16993<->Example-sha_visibility :: CrvHyp_sha_visibility (Example H131E34)
4<->CrvHyp_BetterRankBounds (Example H131E35)<->text1495.htm#16994<->CrvHyp_BetterRankBounds (Example H131E35)
4<->Example-BetterRankBounds :<->text1495.htm#16994<->Example-BetterRankBounds :: CrvHyp_BetterRankBounds (Example H131E35)
4<->CrvHyp_DisregardTheWarning (Example H131E36)<->text1495.htm#16995<->CrvHyp_DisregardTheWarning (Example H131E36)
4<->Example-DisregardTheWarning :<->text1495.htm#16995<->Example-DisregardTheWarning :: CrvHyp_DisregardTheWarning (Example H131E36)
3<->2-selmer-group :<->text1495.htm#16983<->2-selmer-group :: The 2-Selmer Group (HYPERELLIPTIC CURVES)
3<->jacobians-number-fields :<->text1495.htm<->jacobians-number-fields :: Jacobians over Number Fields or Q (HYPERELLIPTIC CURVES)
3<->two-selmer-set :<->text1496.htm<->two-selmer-set :: Two-Selmer Set of a Curve (HYPERELLIPTIC CURVES)
5<->TwoCoverDescent(C) <->text1496.htm#16997<->TwoCoverDescent(C) : CrvHyp -&gt; SetEnum, Map, [Map, SeqEnum]
4<->CrvHyp_Two-cover descent (Example H131E37)<->text1496.htm#16998<->CrvHyp_Two-cover descent (Example H131E37)
4<->Example-Two-cover descent :<->text1496.htm#16998<->Example-Two-cover descent :: CrvHyp_Two-cover descent (Example H131E37)
3<->two-selmer-set :<->text1496.htm<->two-selmer-set :: Two-Selmer Set of a Curve (HYPERELLIPTIC CURVES)
3<->chabauty-method :<->text1497.htm<->chabauty-method :: Chabauty's Method (HYPERELLIPTIC CURVES)
5<->Chabauty0(J) <->text1497.htm#17000<->Chabauty0(J) : JacHyp -&gt; SetIndx
5<->Chabauty(P : ptC) <->text1497.htm#17001<->Chabauty(P : ptC) : JacHypPt -&gt; SetIndx
5<->Chabauty(P, p: Precision) <->text1497.htm#17002<->Chabauty(P, p: Precision) : JacHypPt, RngIntElt -&gt; SetIndx
4<->CrvHyp_chabauty-method1 (Example H131E38)<->text1497.htm#17003<->CrvHyp_chabauty-method1 (Example H131E38)
4<->Example-chabauty-method1 :<->text1497.htm#17003<->Example-chabauty-method1 :: CrvHyp_chabauty-method1 (Example H131E38)
4<->CrvHyp_chabauty-method2 (Example H131E39)<->text1497.htm#17004<->CrvHyp_chabauty-method2 (Example H131E39)
4<->Example-chabauty-method2 :<->text1497.htm#17004<->Example-chabauty-method2 :: CrvHyp_chabauty-method2 (Example H131E39)
4<->CrvHyp_chabauty-method4 (Example H131E40)<->text1497.htm#17005<->CrvHyp_chabauty-method4 (Example H131E40)
4<->Example-chabauty-method4 :<->text1497.htm#17005<->Example-chabauty-method4 :: CrvHyp_chabauty-method4 (Example H131E40)
4<->CrvHyp_chabauty-method3 (Example H131E41)<->text1497.htm#17006<->CrvHyp_chabauty-method3 (Example H131E41)
4<->Example-chabauty-method3 :<->text1497.htm#17006<->Example-chabauty-method3 :: CrvHyp_chabauty-method3 (Example H131E41)
3<->chabauty-method :<->text1497.htm<->chabauty-method :: Chabauty's Method (HYPERELLIPTIC CURVES)
3<->cyclic-covers :<->text1498.htm<->cyclic-covers :: Cyclic Covers of P<sup>1</sup> (HYPERELLIPTIC CURVES)
3<->points :<->text1498.htm#17008<->points :: Points (HYPERELLIPTIC CURVES)
5<->RationalPoints(f,q) <->text1498.htm#17009<->RationalPoints(f,q) : RngUPolElt, RngIntElt -&gt; SetIndx
5<->HasPoint(f,q,v) <->text1498.htm#17010<->HasPoint(f,q,v) : RngUPolElt, RngIntElt, RngOrdIdl -> BoolElt, SeqEnum
5<->HasPoint(f,q,v) <->text1498.htm#17010<->HasPoint(f,q,v) : RngUPolElt, RngIntElt, RngIntElt -&gt; BoolElt, SeqEnum
5<->HasPointsEverywhereLocally(f,q) <->text1498.htm#17011<->HasPointsEverywhereLocally(f,q) : RngUPolElt, RngIntElt -&gt; BoolElt
3<->points :<->text1498.htm#17008<->points :: Points (HYPERELLIPTIC CURVES)
3<->descent :<->text1498.htm#17012<->descent :: Descent (HYPERELLIPTIC CURVES)
5<->qCoverDescent(f,q) <->text1498.htm#17013<->qCoverDescent(f,q) : RngUPolElt, RngIntElt -&gt; Set, Map
4<->CrvHyp_qcoverdescent (Example H131E42)<->text1498.htm#17014<->CrvHyp_qcoverdescent (Example H131E42)
4<->Example-qcoverdescent :<->text1498.htm#17014<->Example-qcoverdescent :: CrvHyp_qcoverdescent (Example H131E42)
3<->descent :<->text1498.htm#17012<->descent :: Descent (HYPERELLIPTIC CURVES)
3<->jacobian-descent :<->text1498.htm#17015<->jacobian-descent :: Descent on the Jacobian (HYPERELLIPTIC CURVES)
5<->PhiSelmerGroup(f,q) <->text1498.htm#17016<->PhiSelmerGroup(f,q) : RngUPolElt, RngIntElt -&gt; GrpAb, Map
5<->PicnDescent(f,q) <->text1498.htm#17017<->PicnDescent(f,q) : RngUPolElt, RngIntElt -&gt; RngIntElt, GrpAb, Tup, RngIntElt, Map, GrpAb, ., .
5<->RankBounds :: RankBound(f,q) <->text1498.htm#17018<->RankBounds :: RankBound(f,q) : RngUPolElt, RngIntElt -&gt; RngIntElt
5<->RankBound(f,q) <->text1498.htm#17018<->RankBound(f,q) : RngUPolElt, RngIntElt -&gt; RngIntElt
4<->CrvHyp_qcoverdescent (Example H131E43)<->text1498.htm#17019<->CrvHyp_qcoverdescent (Example H131E43)
4<->Example-qcoverdescent :<->text1498.htm#17019<->Example-qcoverdescent :: CrvHyp_qcoverdescent (Example H131E43)
3<->jacobian-descent :<->text1498.htm#17015<->jacobian-descent :: Descent on the Jacobian (HYPERELLIPTIC CURVES)
3<->partial-descent :<->text1498.htm#17020<->partial-descent :: Partial Descent (HYPERELLIPTIC CURVES)
5<->qCoverPartialDescent(f,factors,q) <->text1498.htm#17021<->qCoverPartialDescent(f,factors,q) : RngUPolElt, [* RngUPolElt *], RngIntElt -&gt; Set, Map
4<->CrvHyp_qcoverpartialdescent (Example H131E44)<->text1498.htm#17022<->CrvHyp_qcoverpartialdescent (Example H131E44)
4<->Example-qcoverpartialdescent :<->text1498.htm#17022<->Example-qcoverpartialdescent :: CrvHyp_qcoverpartialdescent (Example H131E44)
3<->partial-descent :<->text1498.htm#17020<->partial-descent :: Partial Descent (HYPERELLIPTIC CURVES)
3<->cyclic-covers :<->text1498.htm<->cyclic-covers :: Cyclic Covers of P<sup>1</sup> (HYPERELLIPTIC CURVES)
3<->kummer-surfaces :<->text1499.htm<->kummer-surfaces :: Kummer Surfaces (HYPERELLIPTIC CURVES)
3<->creation-kummer :<->text1499.htm#17024<->creation-kummer :: Creation of a Kummer Surface (HYPERELLIPTIC CURVES)
5<->KummerSurface(J) <->text1499.htm#17025<->KummerSurface(J) : JacHyp -&gt; SrfKum
3<->creation-kummer :<->text1499.htm#17024<->creation-kummer :: Creation of a Kummer Surface (HYPERELLIPTIC CURVES)
3<->kummer_structure :<->text1499.htm#17026<->kummer_structure :: Structure Operations (HYPERELLIPTIC CURVES)
5<->DefiningPolynomial(K) <->text1499.htm#17027<->DefiningPolynomial(K) : SrfKum -&gt; RngMPolElt
3<->kummer_structure :<->text1499.htm#17026<->kummer_structure :: Structure Operations (HYPERELLIPTIC CURVES)
3<->base_ring_kummer :<->text1499.htm#17028<->base_ring_kummer :: Base Ring (HYPERELLIPTIC CURVES)
5<->BaseRing :: BaseField(K) <->text1499.htm#17029<->BaseRing :: BaseField(K) : SrfKum -&gt; Fld
5<->CoefficientRing :: BaseField(K) <->text1499.htm#17029<->CoefficientRing :: BaseField(K) : SrfKum -&gt; Fld
5<->BaseField(K) <->text1499.htm#17029<->BaseField(K) : SrfKum -&gt; Fld
3<->base_ring_kummer :<->text1499.htm#17028<->base_ring_kummer :: Base Ring (HYPERELLIPTIC CURVES)
3<->base_field_kummer :<->text1499.htm#17030<->base_field_kummer :: Changing the Base Ring (HYPERELLIPTIC CURVES)
5<->BaseExtend :: BaseChange(K, F) <->text1499.htm#17031<->BaseExtend :: BaseChange(K, F) : SrfKum, Rng -&gt; SrfKum
5<->BaseChange(K, F) <->text1499.htm#17031<->BaseChange(K, F) : SrfKum, Rng -&gt; SrfKum
5<->BaseExtend :: BaseChange(K, j) <->text1499.htm#17032<->BaseExtend :: BaseChange(K, j) : SrfKum, Map -&gt; SrfKum
5<->BaseChange(K, j) <->text1499.htm#17032<->BaseChange(K, j) : SrfKum, Map -&gt; SrfKum
5<->BaseExtend :: BaseChange(K, n)<->text1499.htm#17033<->BaseExtend :: BaseChange(K, n): SrfKum, RngIntElt -&gt; SrfKum
5<->BaseChange(K, n)<->text1499.htm#17033<->BaseChange(K, n): SrfKum, RngIntElt -&gt; SrfKum
3<->base_field_kummer :<->text1499.htm#17030<->base_field_kummer :: Changing the Base Ring (HYPERELLIPTIC CURVES)
3<->kummer-surfaces :<->text1499.htm<->kummer-surfaces :: Kummer Surfaces (HYPERELLIPTIC CURVES)
3<->points_kummer :<->text1500.htm<->points_kummer :: Points on the Kummer Surface (HYPERELLIPTIC CURVES)
3<->points_creation_kummer :<->text1500.htm#17035<->points_creation_kummer :: Creation of Points (HYPERELLIPTIC CURVES)
5<->K ! 0 <->text1500.htm#17036<->K ! 0 : SrfKum, RngIntElt  -&gt; SrfKumPt
5<->K ! [x1, x2, x3, x4] <->text1500.htm#17037<->K ! [x1, x2, x3, x4] : SrfKum, [ RngElt ] -&gt; SrfKumPt
5<->K ! P <->text1500.htm#17038<->K ! P : SrfKum, JacHypPt -> SrfKumPt
5<->K ! P <->text1500.htm#17038<->K ! P : SrfKum, SrfKumPt -&gt; SrfKumPt
5<->IsPoint(K, S) <->text1500.htm#17039<->IsPoint(K, S) : SrfKum, [RngElt] -&gt; BoolElt, SrfKumPt
5<->Points(K,[x1, x2, x3]) <->text1500.htm#17040<->Points(K,[x1, x2, x3]) : SrfKum, [RngElt] -&gt; SetIndx
3<->points_creation_kummer :<->text1500.htm#17035<->points_creation_kummer :: Creation of Points (HYPERELLIPTIC CURVES)
3<->point_access_kummer :<->text1500.htm#17041<->point_access_kummer :: Access Operations (HYPERELLIPTIC CURVES)
5<->[] :: P[i] <->text1500.htm#17042<->[] :: P[i] : SrfKumPt, RngIntElt -&gt; RngElt
5<->ElementToSequence :: Eltseq(P) <->text1500.htm#17043<->ElementToSequence :: Eltseq(P) : SrfKumPt -&gt; SeqEnum
5<->Eltseq(P) <->text1500.htm#17043<->Eltseq(P) : SrfKumPt -&gt; SeqEnum
3<->point_access_kummer :<->text1500.htm#17041<->point_access_kummer :: Access Operations (HYPERELLIPTIC CURVES)
3<->point_predicates_kummer :<->text1500.htm#17044<->point_predicates_kummer :: Predicates on Points (HYPERELLIPTIC CURVES)
5<->P eq Q <->text1500.htm#17045<->P eq Q : SrfKumPt, SrfKumPt -&gt; BoolElt
5<->P ne Q <->text1500.htm#17046<->P ne Q : SrfKumPt, SrfKumPt -&gt; BoolElt
3<->point_predicates_kummer :<->text1500.htm#17044<->point_predicates_kummer :: Predicates on Points (HYPERELLIPTIC CURVES)
3<->arith-points-kummer :<->text1500.htm#17047<->arith-points-kummer :: Arithmetic of Points (HYPERELLIPTIC CURVES)
5<->- P <->text1500.htm#17048<->- P : SrfKumPt -&gt; SrfKumPt
5<->P * n <->text1500.htm#17049<->P * n : SrfKumPt, RngIntElt  -> SrfKumPt
5<->n * P <->text1500.htm#17049<->n * P : RngIntElt, SrfKumPt  -&gt; SrfKumPt
5<->Double(P) <->text1500.htm#17050<->Double(P) : SrfKumPt -&gt; SrfKumPt
5<->PseudoAdd(P1, P2, P3) <->text1500.htm#17051<->PseudoAdd(P1, P2, P3) : SrfKumPt, SrfKumPt, SrfKumPt -&gt; SrfKumPt
5<->PseudoAddMultiple(P1, P2, P3, n) <->text1500.htm#17052<->PseudoAddMultiple(P1, P2, P3, n) : SrfKumPt, SrfKumPt, SrfKumPt, RngIntElt -&gt; SrfKumPt
3<->arith-points-kummer :<->text1500.htm#17047<->arith-points-kummer :: Arithmetic of Points (HYPERELLIPTIC CURVES)
3<->kummer_rational_points :<->text1500.htm#17053<->kummer_rational_points :: Rational Points on the Kummer Surface (HYPERELLIPTIC CURVES)
5<->RationalPoints(K, Q) <->text1500.htm#17054<->RationalPoints(K, Q) : SrfKum, [RngElt] -&gt; SetIndx
4<->CrvHyp_KummerRationalPoints (Example H131E45)<->text1500.htm#17055<->CrvHyp_KummerRationalPoints (Example H131E45)
4<->Example-KummerRationalPoints :<->text1500.htm#17055<->Example-KummerRationalPoints :: CrvHyp_KummerRationalPoints (Example H131E45)
3<->kummer_rational_points :<->text1500.htm#17053<->kummer_rational_points :: Rational Points on the Kummer Surface (HYPERELLIPTIC CURVES)
3<->kummer_pullback_points :<->text1500.htm#17056<->kummer_pullback_points :: Pullback to the Jacobian (HYPERELLIPTIC CURVES)
5<->RationalPoints :: Points(J, P) <->text1500.htm#17057<->RationalPoints :: Points(J, P) : JacHyp, SrfKumPt -&gt; SetIndx
5<->Points(J, P) <->text1500.htm#17057<->Points(J, P) : JacHyp, SrfKumPt -&gt; SetIndx
3<->kummer_pullback_points :<->text1500.htm#17056<->kummer_pullback_points :: Pullback to the Jacobian (HYPERELLIPTIC CURVES)
3<->points_kummer :<->text1500.htm<->points_kummer :: Points on the Kummer Surface (HYPERELLIPTIC CURVES)
3<->analytic :<->text1501.htm<->analytic :: Analytic Jacobians of Hyperelliptic Curves (HYPERELLIPTIC CURVES)
3<->creation-access :<->text1501.htm#17059<->creation-access :: Creation and Access Functions (HYPERELLIPTIC CURVES)
5<->AnalyticJacobian(f) <->text1501.htm#17060<->AnalyticJacobian(f) : RngUPolElt -&gt; AnHcJac
5<->HyperellipticPolynomial(A) <->text1501.htm#17061<->HyperellipticPolynomial(A) : AnHcJac -&gt; RngUPolElt
5<->SmallPeriodMatrix(A) <->text1501.htm#17062<->SmallPeriodMatrix(A) : AnHcJac -&gt; AlgMatElt
5<->BigPeriodMatrix(A) <->text1501.htm#17063<->BigPeriodMatrix(A) : AnHcJac -&gt; AlgMatElt
5<->HomologyBasis(A) <->text1501.htm#17064<->HomologyBasis(A) : AnHcJac -&gt; SeqEnum, SeqEnum, Mtrx
5<->Genus :: Dimension(A) <->text1501.htm#17065<->Genus :: Dimension(A) : AnHcJac -&gt; RngIntElt
5<->Dimension(A) <->text1501.htm#17065<->Dimension(A) : AnHcJac -&gt; RngIntElt
5<->BaseRing :: BaseField(A) <->text1501.htm#17066<->BaseRing :: BaseField(A) : JacHyp -&gt; Fld
5<->CoefficientRing :: BaseField(A) <->text1501.htm#17066<->CoefficientRing :: BaseField(A) : JacHyp -&gt; Fld
5<->BaseField(A) <->text1501.htm#17066<->BaseField(A) : JacHyp -&gt; Fld
3<->creation-access :<->text1501.htm#17059<->creation-access :: Creation and Access Functions (HYPERELLIPTIC CURVES)
3<->maps :<->text1501.htm#17067<->maps :: Maps between Jacobians (HYPERELLIPTIC CURVES)
5<->ToAnalyticJacobian(x, y, A) <->text1501.htm#17068<->ToAnalyticJacobian(x, y, A) : FldComElt, FldComElt, AnHcJac -&gt; Mtrx
5<->FromAnalyticJacobian(z, A) <->text1501.htm#17069<->FromAnalyticJacobian(z, A) : Mtrx, AnHcJac -&gt; SeqEnum
4<->CrvHyp_Analytic_Jacobian_Addition (Example H131E46)<->text1501.htm#17070<->CrvHyp_Analytic_Jacobian_Addition (Example H131E46)
4<->Example-Analytic_Jacobian_Addition :<->text1501.htm#17070<->Example-Analytic_Jacobian_Addition :: CrvHyp_Analytic_Jacobian_Addition (Example H131E46)
3<->analytic-jacobian-isos :<->text1501.htm#17071<->analytic-jacobian-isos :: Isomorphisms, Isogenies and Endomorphism Rings of Analytic Jacobians (HYPERELLIPTIC CURVES)
5<->To2DUpperHalfSpaceFundamentalDomian(z) <->text1501.htm#17072<->To2DUpperHalfSpaceFundamentalDomian(z) : Mtrx -&gt; Mtrx, Mtrx
5<->AnalyticHomomorphisms(t1, t2) <->text1501.htm#17073<->AnalyticHomomorphisms(t1, t2) : Mtrx, Mtrx -&gt; SeqEnum
5<->IsIsomorphicSmallPeriodMatrices(t1,t2) <->text1501.htm#17074<->IsIsomorphicSmallPeriodMatrices(t1,t2) : Mtrx, Mtrx -&gt; Bool, Mtrx
5<->IsIsomorphicBigPeriodMatrices(P1, P2) <->text1501.htm#17075<->IsIsomorphicBigPeriodMatrices(P1, P2) : Mtrx, Mtrx -&gt; Bool, Mtrx, Mtrx
5<->IsIsomorphic(A1, A2) <->text1501.htm#17076<->IsIsomorphic(A1, A2) : AnHcJac, AnHcJac -&gt; Bool, Mtrx, Mtrx
5<->IsIsogenousPeriodMatrices(P1, P2) <->text1501.htm#17077<->IsIsogenousPeriodMatrices(P1, P2) : Mtrx, Mtrx -&gt; Bool, Mtrx
5<->IsIsogenous(A1, A2) <->text1501.htm#17078<->IsIsogenous(A1, A2) : AnHcJac, AnHcJac -&gt; Bool, Mtrx, Mtrx
5<->EndomorphismRing(P) <->text1501.htm#17079<->EndomorphismRing(P) : Mtrx -&gt; AlgMat
5<->EndomorphismRing(A) <->text1501.htm#17080<->EndomorphismRing(A) : AnHcJac -&gt; AlgMat, SeqEnum
4<->CrvHyp_Find_Rational_Isogeny (Example H131E47)<->text1501.htm#17081<->CrvHyp_Find_Rational_Isogeny (Example H131E47)
4<->Example-Find_Rational_Isogeny :<->text1501.htm#17081<->Example-Find_Rational_Isogeny :: CrvHyp_Find_Rational_Isogeny (Example H131E47)
3<->analytic-jacobian-isos :<->text1501.htm#17071<->analytic-jacobian-isos :: Isomorphisms, Isogenies and Endomorphism Rings of Analytic Jacobians (HYPERELLIPTIC CURVES)
3<->maps :<->text1501.htm#17067<->maps :: Maps between Jacobians (HYPERELLIPTIC CURVES)
3<->rosenhain :<->text1501.htm#17082<->rosenhain :: From Period Matrix to Curve (HYPERELLIPTIC CURVES)
5<->RosenhainInvariants(t) <->text1501.htm#17083<->RosenhainInvariants(t) : Mtrx -&gt; Set
4<->CrvHyp_Find_CM_Curve (Example H131E48)<->text1501.htm#17084<->CrvHyp_Find_CM_Curve (Example H131E48)
4<->Example-Find_CM_Curve :<->text1501.htm#17084<->Example-Find_CM_Curve :: CrvHyp_Find_CM_Curve (Example H131E48)
3<->rosenhain :<->text1501.htm#17082<->rosenhain :: From Period Matrix to Curve (HYPERELLIPTIC CURVES)
3<->voronoi :<->text1501.htm#17085<->voronoi :: Voronoi Cells (HYPERELLIPTIC CURVES)
5<->Delaunay(sites) <->text1501.htm#17086<->Delaunay(sites) : SeqEnum -&gt; SeqEnum
5<->Voronoi(sites) <->text1501.htm#17087<->Voronoi(sites) : SeqEnum -&gt; SeqEnum, SeqEnum, SeqEnum
3<->voronoi :<->text1501.htm#17085<->voronoi :: Voronoi Cells (HYPERELLIPTIC CURVES)
3<->analytic :<->text1501.htm<->analytic :: Analytic Jacobians of Hyperelliptic Curves (HYPERELLIPTIC CURVES)
3<->hyperelliptic-curve :<->text1483.htm<->hyperelliptic-curve :: HYPERELLIPTIC CURVES
3<->hypergeometric-motives :<->text1504.htm<->hypergeometric-motives :: HYPERGEOMETRIC MOTIVES
3<->Introduction (HYPERGEOMETRIC MOTIVES)<->text1505.htm<->Introduction (HYPERGEOMETRIC MOTIVES)
3<->Functionality (HYPERGEOMETRIC MOTIVES)<->text1506.htm<->Functionality (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-creation :<->text1506.htm#17093<->hypergeom-creation :: Creation Functions (HYPERGEOMETRIC MOTIVES)
5<->HypergeometricData(F, G) <->text1506.htm#17094<->HypergeometricData(F, G) : RngUPolElt, RngUPolElt -> HypGeomData
5<->HypergeometricData(A, B) <->text1506.htm#17094<->HypergeometricData(A, B) : SeqEnum, SeqEnum -&gt; HypGeomData
5<->HypergeometricData(G) <->text1506.htm#17095<->HypergeometricData(G) : SeqEnum[RngIntElt] -&gt; HypGeomData
5<->HypergeometricData(G) <->text1506.htm#17096<->HypergeometricData(G) : List -&gt; HypGeomData
5<->HypergeometricData(F, G) <->text1506.htm#17097<->HypergeometricData(F, G) : SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; HypGeomData
5<->HypergeometricData(E) <->text1506.htm#17098<->HypergeometricData(E) : SeqEnum[SeqEnum] -&gt; HypGeomData
5<->Twist(H) <->text1506.htm#17099<->Twist(H) : HypGeomData -&gt; HypGeomData
5<->PrimitiveData(H) <->text1506.htm#17100<->PrimitiveData(H) : HypGeomData -&gt; HypGeomData
5<->PossibleHypergeometricData(d) <->text1506.htm#17101<->PossibleHypergeometricData(d) : RngIntElt -&gt; SeqEnum
3<->hypergeom-creation :<->text1506.htm#17093<->hypergeom-creation :: Creation Functions (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-access :<->text1506.htm#17102<->hypergeom-access :: Access Functions (HYPERGEOMETRIC MOTIVES)
5<->Weight(H) <->text1506.htm#17103<->Weight(H) : HypGeomData -&gt; RngIntElt
5<->Degree(H) <->text1506.htm#17104<->Degree(H) : HypGeomData -&gt; RngIntElt
5<->DefiningPolynomials(H) <->text1506.htm#17105<->DefiningPolynomials(H) : HypGeomData -&gt; RngUPolElt, RngUPolElt
5<->CyclotomicData(H) <->text1506.htm#17106<->CyclotomicData(H) : HypGeomData -&gt; SeqEnum, SeqEnum
5<->AlphaBetaData(H) <->text1506.htm#17107<->AlphaBetaData(H) : HypGeomData -&gt; SeqEnum, SeqEnum
5<->MValue(H) <->text1506.htm#17108<->MValue(H) : HypGeomData -&gt; FldRatElt
5<->GammaArray(H) <->text1506.htm#17109<->GammaArray(H) : HypGeomData -&gt; SeqEnum
5<->GammaList(H) <->text1506.htm#17110<->GammaList(H) : HypGeomData -&gt; List
5<->ne :: H1 eq H2 <->text1506.htm#17111<->ne :: H1 eq H2 : HypGeomData, HypGeomDat -&gt; BoolElt
5<->H1 eq H2 <->text1506.htm#17111<->H1 eq H2 : HypGeomData, HypGeomDat -&gt; BoolElt
5<->IsPrimitive(H) <->text1506.htm#17112<->IsPrimitive(H) : HypGeomData -&gt; BoolElt, RngIntElt
3<->hypergeom-access :<->text1506.htm#17102<->hypergeom-access :: Access Functions (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-lseries :<->text1506.htm#17113<->hypergeom-lseries :: Functionality with L-series and Euler Factors (HYPERGEOMETRIC MOTIVES)
5<->EulerFactor(H, t, p) <->text1506.htm#17114<->EulerFactor(H, t, p) : HypGeomData, RngQZElt, RngIntElt -&gt; RngUPolElt
5<->LSeries(H, t) <->text1506.htm#17115<->LSeries(H, t) : HypGeomData, RngQZElt -&gt; LSer, LSer
3<->hypergeom-identify :<->text1506.htm#17116<->hypergeom-identify :: Identification of Hypergeometric Data as Other Objects (HYPERGEOMETRIC MOTIVES)
5<->ArtinRepresentation(H, t) <->text1506.htm#17117<->ArtinRepresentation(H, t) : HypGeomData, RngQZElt -&gt; ArtRep
5<->EllipticCurve(H, t) <->text1506.htm#17118<->EllipticCurve(H, t) : HypGeomData, RngQZElt -> CrvEll
5<->EllipticCurve(H) <->text1506.htm#17118<->EllipticCurve(H) : HypGeomData -&gt; CrvEll
5<->HyperellipticCurve(H, t) <->text1506.htm#17119<->HyperellipticCurve(H, t) : HypGeomData, RngQZElt -> CrvHyp
5<->HyperellipticCurve(H) <->text1506.htm#17119<->HyperellipticCurve(H) : HypGeomData -&gt; CrvHyp
5<->Identify(H, t) <->text1506.htm#17120<->Identify(H, t) : HypGeomData, RngQZElt -&gt; Any
3<->hypergeom-identify :<->text1506.htm#17116<->hypergeom-identify :: Identification of Hypergeometric Data as Other Objects (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-lseries :<->text1506.htm#17113<->hypergeom-lseries :: Functionality with L-series and Euler Factors (HYPERGEOMETRIC MOTIVES)
3<->associated-objects :<->text1506.htm#17121<->associated-objects :: Associated Schemes and Curves (HYPERGEOMETRIC MOTIVES)
5<->CanonicalScheme(H, t) <->text1506.htm#17122<->CanonicalScheme(H, t) : HypGeomData, RngQZElt -> Sch
5<->CanonicalScheme(H) <->text1506.htm#17122<->CanonicalScheme(H) : HypGeomData -&gt; Sch
5<->CanonicalCurve(H, t) <->text1506.htm#17123<->CanonicalCurve(H, t) : HypGeomData, RngQZElt -> Crv
5<->CanonicalCurve(H) <->text1506.htm#17123<->CanonicalCurve(H) : HypGeomData -&gt; Crv
3<->associated-objects :<->text1506.htm#17121<->associated-objects :: Associated Schemes and Curves (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-utility :<->text1506.htm#17124<->hypergeom-utility :: Utility Functions (HYPERGEOMETRIC MOTIVES)
5<->HypergeometricMotiveClearTable :: HypergeometricMotiveSaveLimit(n) <->text1506.htm#17125<->HypergeometricMotiveClearTable :: HypergeometricMotiveSaveLimit(n) : RngIntElt -&gt;
5<->HypergeometricMotiveSaveLimit(n) <->text1506.htm#17125<->HypergeometricMotiveSaveLimit(n) : RngIntElt -&gt;
5<->pParts :: pPart(H, p) <->text1506.htm#17126<->pParts :: pPart(H, p) : HypGeomMot, RngIntElt -&gt; Tup
5<->pPart(H, p) <->text1506.htm#17126<->pPart(H, p) : HypGeomMot, RngIntElt -&gt; Tup
3<->hypergeom-utility :<->text1506.htm#17124<->hypergeom-utility :: Utility Functions (HYPERGEOMETRIC MOTIVES)
3<->Functionality (HYPERGEOMETRIC MOTIVES)<->text1506.htm<->Functionality (HYPERGEOMETRIC MOTIVES)
3<->hypergeom-examples :<->text1507.htm<->hypergeom-examples :: Examples (HYPERGEOMETRIC MOTIVES)
4<->HypGeomMot_hypergeom-mot-first-example (Example H132E1)<->text1507.htm#17128<->HypGeomMot_hypergeom-mot-first-example (Example H132E1)
4<->Example-hypergeom-mot-first-example :<->text1507.htm#17128<->Example-hypergeom-mot-first-example :: HypGeomMot_hypergeom-mot-first-example (Example H132E1)
4<->HypGeomMot_hg-twist-example (Example H132E2)<->text1507.htm#17129<->HypGeomMot_hg-twist-example (Example H132E2)
4<->Example-hg-twist-example :<->text1507.htm#17129<->Example-hg-twist-example :: HypGeomMot_hg-twist-example (Example H132E2)
4<->HypGeomMot_imprimitivity (Example H132E3)<->text1507.htm#17130<->HypGeomMot_imprimitivity (Example H132E3)
4<->Example-imprimitivity :<->text1507.htm#17130<->Example-imprimitivity :: HypGeomMot_imprimitivity (Example H132E3)
4<->HypGeomMot_canonical-schemes-and-curves (Example H132E4)<->text1507.htm#17131<->HypGeomMot_canonical-schemes-and-curves (Example H132E4)
4<->Example-canonical-schemes-and-curves :<->text1507.htm#17131<->Example-canonical-schemes-and-curves :: HypGeomMot_canonical-schemes-and-curves (Example H132E4)
4<->HypGeomMot_hg-siegel-modular-form (Example H132E5)<->text1507.htm#17132<->HypGeomMot_hg-siegel-modular-form (Example H132E5)
4<->Example-hg-siegel-modular-form :<->text1507.htm#17132<->Example-hg-siegel-modular-form :: HypGeomMot_hg-siegel-modular-form (Example H132E5)
4<->HypGeomMot_hg-bad-reduction (Example H132E6)<->text1507.htm#17133<->HypGeomMot_hg-bad-reduction (Example H132E6)
4<->Example-hg-bad-reduction :<->text1507.htm#17133<->Example-hg-bad-reduction :: HypGeomMot_hg-bad-reduction (Example H132E6)
4<->HypGeomMot_hg-quintic-3fold (Example H132E7)<->text1507.htm#17134<->HypGeomMot_hg-quintic-3fold (Example H132E7)
4<->Example-hg-quintic-3fold :<->text1507.htm#17134<->Example-hg-quintic-3fold :: HypGeomMot_hg-quintic-3fold (Example H132E7)
4<->HypGeomMot_tame-primes (Example H132E8)<->text1507.htm#17135<->HypGeomMot_tame-primes (Example H132E8)
4<->Example-tame-primes :<->text1507.htm#17135<->Example-tame-primes :: HypGeomMot_tame-primes (Example H132E8)
4<->HypGeomMot_more-tame-primes (Example H132E9)<->text1507.htm#17136<->HypGeomMot_more-tame-primes (Example H132E9)
4<->Example-more-tame-primes :<->text1507.htm#17136<->Example-more-tame-primes :: HypGeomMot_more-tame-primes (Example H132E9)
4<->HypGeomMot_hgm-speed-test (Example H132E10)<->text1507.htm#17137<->HypGeomMot_hgm-speed-test (Example H132E10)
4<->Example-hgm-speed-test :<->text1507.htm#17137<->Example-hgm-speed-test :: HypGeomMot_hgm-speed-test (Example H132E10)
3<->hypergeom-examples :<->text1507.htm<->hypergeom-examples :: Examples (HYPERGEOMETRIC MOTIVES)
3<->Jacobi_motives :<->text1508.htm<->Jacobi_motives :: Jacobi Motives (HYPERGEOMETRIC MOTIVES)
3<->jacobi-background :<->text1508.htm#17139<->jacobi-background :: Background (HYPERGEOMETRIC MOTIVES)
3<->jacobi-kummer-tate :<->text1508.htm#17140<->jacobi-kummer-tate :: Kummer and Tate Twists (HYPERGEOMETRIC MOTIVES)
3<->Jacobi_motives :<->text1508.htm<->Jacobi_motives :: Jacobi Motives (HYPERGEOMETRIC MOTIVES)
3<->jacmot-functionality :<->text1509.htm<->jacmot-functionality :: Jacobi Motive Functionality (HYPERGEOMETRIC MOTIVES)
3<->jacobi-creation :<->text1509.htm#17142<->jacobi-creation :: Creation Functions (HYPERGEOMETRIC MOTIVES)
5<->JacobiMotive(A, B) <->text1509.htm#17143<->JacobiMotive(A, B) : SeqEnum, SeqEnum -&gt; JacketMot
5<->JacketMotive(A, B, t, rho, j) <->text1509.htm#17144<->JacketMotive(A, B, t, rho, j) : SeqEnum, SeqEnum, RngQZElt, RngQZElt, RngIntElt -&gt; JacketMot
5<->KummerTwist(J, t, rho) <->text1509.htm#17145<->KummerTwist(J, t, rho) : JacketMot, RngQZElt, RngQZElt -&gt; JacketMot
5<->TateTwist(J, j) <->text1509.htm#17146<->TateTwist(J, j) : JacketMot, RngIntElt -&gt; JacketMot
3<->jacobi-creation :<->text1509.htm#17142<->jacobi-creation :: Creation Functions (HYPERGEOMETRIC MOTIVES)
3<->jacobi-operations :<->text1509.htm#17147<->jacobi-operations :: Operations (HYPERGEOMETRIC MOTIVES)
5<->J1 * J2 <->text1509.htm#17148<->J1 * J2 : JacketMot, JacketMot -&gt; JacketMot
5<->J1 / J2 <->text1509.htm#17149<->J1 / J2 : JacketMot, JacketMot -&gt; JacketMot
5<->ne :: J1 eq J2 <->text1509.htm#17150<->ne :: J1 eq J2 : JacketMot, JacketMot -&gt; JacketMot
5<->J1 eq J2 <->text1509.htm#17150<->J1 eq J2 : JacketMot, JacketMot -&gt; JacketMot
5<->Scale(J, q) <->text1509.htm#17151<->Scale(J, q) : JacketMot, RngQZElt -&gt; JacketMot
3<->jacobi-operations :<->text1509.htm#17147<->jacobi-operations :: Operations (HYPERGEOMETRIC MOTIVES)
3<->jacobi-attributes :<->text1509.htm#17152<->jacobi-attributes :: Attributes (HYPERGEOMETRIC MOTIVES)
5<->Field(J) <->text1509.htm#17153<->Field(J) : JacketMot -&gt; FldNum
5<->Weight(J) <->text1509.htm#17154<->Weight(J) : JacketMot -&gt; RngIntElt
5<->EffectiveWeight(J) <->text1509.htm#17155<->EffectiveWeight(J) : JacketMot -&gt; RngIntElt
5<->HodgeVector :: HodgeStructure(J) <->text1509.htm#17156<->HodgeVector :: HodgeStructure(J) : JacketMot -&gt; HodgeStruc
5<->EffectiveHodgeStructure :: HodgeStructure(J) <->text1509.htm#17156<->EffectiveHodgeStructure :: HodgeStructure(J) : JacketMot -&gt; HodgeStruc
5<->HodgeStructure(J) <->text1509.htm#17156<->HodgeStructure(J) : JacketMot -&gt; HodgeStruc
3<->jacobi-attributes :<->text1509.htm#17152<->jacobi-attributes :: Attributes (HYPERGEOMETRIC MOTIVES)
3<->jacobi-l-func :<->text1509.htm#17157<->jacobi-l-func :: L-function (HYPERGEOMETRIC MOTIVES)
5<->EulerFactor(J, p) <->text1509.htm#17158<->EulerFactor(J, p) : JacketMot, RngIntElt -&gt; RngUPolElt
5<->ComplexEvaluation(J, P) <->text1509.htm#17159<->ComplexEvaluation(J, P) : JacketMot, RngOrdIdl -&gt; FldComElt
5<->Grossencharacter(J) <->text1509.htm#17160<->Grossencharacter(J) : JacketMot -&gt; GrossenChar
3<->jacobi-l-func :<->text1509.htm#17157<->jacobi-l-func :: L-function (HYPERGEOMETRIC MOTIVES)
3<->jacmot-functionality :<->text1509.htm<->jacmot-functionality :: Jacobi Motive Functionality (HYPERGEOMETRIC MOTIVES)
3<->jacobi-examples :<->text1510.htm<->jacobi-examples :: Jacobi Motive Examples (HYPERGEOMETRIC MOTIVES)
4<->HypGeomMot_jacobi-motive-first-example (Example H132E11)<->text1510.htm#17162<->HypGeomMot_jacobi-motive-first-example (Example H132E11)
4<->Example-jacobi-motive-first-example :<->text1510.htm#17162<->Example-jacobi-motive-first-example :: HypGeomMot_jacobi-motive-first-example (Example H132E11)
4<->HypGeomMot_jacobi-motive7 (Example H132E12)<->text1510.htm#17163<->HypGeomMot_jacobi-motive7 (Example H132E12)
4<->Example-jacobi-motive7 :<->text1510.htm#17163<->Example-jacobi-motive7 :: HypGeomMot_jacobi-motive7 (Example H132E12)
4<->HypGeomMot_jacobi-arith (Example H132E13)<->text1510.htm#17164<->HypGeomMot_jacobi-arith (Example H132E13)
4<->Example-jacobi-arith :<->text1510.htm#17164<->Example-jacobi-arith :: HypGeomMot_jacobi-arith (Example H132E13)
4<->HypGeomMot_jacobi-same-overQ (Example H132E14)<->text1510.htm#17165<->HypGeomMot_jacobi-same-overQ (Example H132E14)
4<->Example-jacobi-same-overQ :<->text1510.htm#17165<->Example-jacobi-same-overQ :: HypGeomMot_jacobi-same-overQ (Example H132E14)
4<->HypGeomMot_jacobi-relation-to-hypergeom (Example H132E15)<->text1510.htm#17166<->HypGeomMot_jacobi-relation-to-hypergeom (Example H132E15)
4<->Example-jacobi-relation-to-hypergeom :<->text1510.htm#17166<->Example-jacobi-relation-to-hypergeom :: HypGeomMot_jacobi-relation-to-hypergeom (Example H132E15)
3<->jacobi-examples :<->text1510.htm<->jacobi-examples :: Jacobi Motive Examples (HYPERGEOMETRIC MOTIVES)
3<->hypergeometric-motives :<->text1504.htm<->hypergeometric-motives :: HYPERGEOMETRIC MOTIVES
3<->lseries :<->text1513.htm<->lseries :: L-FUNCTIONS
3<->overview :<->text1514.htm<->overview :: Overview (L-FUNCTIONS)
3<->builtin :<->text1515.htm<->builtin :: Built-in L-series (L-FUNCTIONS)
5<->RiemannZeta() <->text1515.htm#17172<->RiemannZeta() : -&gt; LSer
4<->Lseries_lseries-sig-riemann (Example H133E1)<->text1515.htm#17173<->Lseries_lseries-sig-riemann (Example H133E1)
4<->Example-lseries-sig-riemann :<->text1515.htm#17173<->Example-lseries-sig-riemann :: Lseries_lseries-sig-riemann (Example H133E1)
5<->LSeries(K) <->text1515.htm#17174<->LSeries(K) : FldNum -&gt; LSer
4<->Lseries_lseries-sig-dedekind (Example H133E2)<->text1515.htm#17175<->Lseries_lseries-sig-dedekind (Example H133E2)
4<->Example-lseries-sig-dedekind :<->text1515.htm#17175<->Example-lseries-sig-dedekind :: Lseries_lseries-sig-dedekind (Example H133E2)
4<->Lseries_lseries-sig-dedekind2 (Example H133E3)<->text1515.htm#17176<->Lseries_lseries-sig-dedekind2 (Example H133E3)
4<->Example-lseries-sig-dedekind2 :<->text1515.htm#17176<->Example-lseries-sig-dedekind2 :: Lseries_lseries-sig-dedekind2 (Example H133E3)
4<->Lseries_armitage (Example H133E4)<->text1515.htm#17177<->Lseries_armitage (Example H133E4)
4<->Example-armitage :<->text1515.htm#17177<->Example-armitage :: Lseries_armitage (Example H133E4)
5<->LSeries(A) <->text1515.htm#17178<->LSeries(A) : ArtRep -&gt; LSer
4<->Lseries_lseries-artin (Example H133E5)<->text1515.htm#17179<->Lseries_lseries-artin (Example H133E5)
4<->Example-lseries-artin :<->text1515.htm#17179<->Example-lseries-artin :: Lseries_lseries-artin (Example H133E5)
4<->Lseries_lseries-a7 (Example H133E6)<->text1515.htm#17180<->Lseries_lseries-a7 (Example H133E6)
4<->Example-lseries-a7 :<->text1515.htm#17180<->Example-lseries-a7 :: Lseries_lseries-a7 (Example H133E6)
5<->LSeries(E) <->text1515.htm#17181<->LSeries(E) : CrvEll -&gt; LSer
4<->Lseries_lseries-sig-elliptic (Example H133E7)<->text1515.htm#17182<->Lseries_lseries-sig-elliptic (Example H133E7)
4<->Example-lseries-sig-elliptic :<->text1515.htm#17182<->Example-lseries-sig-elliptic :: Lseries_lseries-sig-elliptic (Example H133E7)
5<->LSeries(E, K) <->text1515.htm#17183<->LSeries(E, K) : CrvEll, FldNum -&gt; LSer
4<->Lseries_lseries-sig-ellnf (Example H133E8)<->text1515.htm#17184<->Lseries_lseries-sig-ellnf (Example H133E8)
4<->Example-lseries-sig-ellnf :<->text1515.htm#17184<->Example-lseries-sig-ellnf :: Lseries_lseries-sig-ellnf (Example H133E8)
5<->LSeries(E, A) <->text1515.htm#17185<->LSeries(E, A) : CrvEll, ArtRep -&gt; LSer
4<->Lseries_lseries-sig-ellartintwist (Example H133E9)<->text1515.htm#17186<->Lseries_lseries-sig-ellartintwist (Example H133E9)
4<->Example-lseries-sig-ellartintwist :<->text1515.htm#17186<->Example-lseries-sig-ellartintwist :: Lseries_lseries-sig-ellartintwist (Example H133E9)
4<->Lseries_lseries-etw-quaternion (Example H133E10)<->text1515.htm#17187<->Lseries_lseries-etw-quaternion (Example H133E10)
4<->Example-lseries-etw-quaternion :<->text1515.htm#17187<->Example-lseries-etw-quaternion :: Lseries_lseries-etw-quaternion (Example H133E10)
5<->LSeries(C) <->text1515.htm#17188<->LSeries(C) : CrvHyp[FldRat] -&gt; LSer
4<->Lseries_lseries-sig-crvhyp (Example H133E11)<->text1515.htm#17189<->Lseries_lseries-sig-crvhyp (Example H133E11)
4<->Example-lseries-sig-crvhyp :<->text1515.htm#17189<->Example-lseries-sig-crvhyp :: Lseries_lseries-sig-crvhyp (Example H133E11)
5<->LSeries(C,K) <->text1515.htm#17190<->LSeries(C,K) : CrvHyp[FldRat],FldNum -&gt; LSer
4<->Lseries_lseries-crvhyp-qnf (Example H133E12)<->text1515.htm#17191<->Lseries_lseries-crvhyp-qnf (Example H133E12)
4<->Example-lseries-crvhyp-qnf :<->text1515.htm#17191<->Example-lseries-crvhyp-qnf :: Lseries_lseries-crvhyp-qnf (Example H133E12)
5<->LSeries(C) <->text1515.htm#17192<->LSeries(C) : CrvHyp[FldNum] -&gt; LSer
4<->Lseries_lseries-crvhyp-nf (Example H133E13)<->text1515.htm#17193<->Lseries_lseries-crvhyp-nf (Example H133E13)
4<->Example-lseries-crvhyp-nf :<->text1515.htm#17193<->Example-lseries-crvhyp-nf :: Lseries_lseries-crvhyp-nf (Example H133E13)
5<->LSeries(Chi) <->text1515.htm#17194<->LSeries(Chi) : GrpDrchElt -&gt; LSer
4<->Lseries_lseries-sig-character (Example H133E14)<->text1515.htm#17195<->Lseries_lseries-sig-character (Example H133E14)
4<->Example-lseries-sig-character :<->text1515.htm#17195<->Example-lseries-sig-character :: Lseries_lseries-sig-character (Example H133E14)
5<->LSeries(hmf) <->text1515.htm#17196<->LSeries(hmf) : ModFrmHilElt -&gt; LSer
4<->Lseries_lseries-hilbert-modfom (Example H133E15)<->text1515.htm#17197<->Lseries_lseries-hilbert-modfom (Example H133E15)
4<->Example-lseries-hilbert-modfom :<->text1515.htm#17197<->Example-lseries-hilbert-modfom :: Lseries_lseries-hilbert-modfom (Example H133E15)
5<->LSeries(psi) <->text1515.htm#17198<->LSeries(psi) : GrossenChar -> LSer
5<->LSeries(psi) <->text1515.htm#17198<->LSeries(psi) : GrpHeckeElt -&gt; LSer
5<->LSeries(f) <->text1515.htm#17199<->LSeries(f) : ModFrmElt -&gt; LSer
4<->Lseries_lseries-sig-modfrm (Example H133E16)<->text1515.htm#17200<->Lseries_lseries-sig-modfrm (Example H133E16)
4<->Example-lseries-sig-modfrm :<->text1515.htm#17200<->Example-lseries-sig-modfrm :: Lseries_lseries-sig-modfrm (Example H133E16)
5<->LSeries(S) <->text1515.htm#17201<->LSeries(S) : ModSym -&gt; LSer
4<->Lseries_lseries-sig-modsym (Example H133E17)<->text1515.htm#17202<->Lseries_lseries-sig-modsym (Example H133E17)
4<->Example-lseries-sig-modsym :<->text1515.htm#17202<->Example-lseries-sig-modsym :: Lseries_lseries-sig-modsym (Example H133E17)
3<->builtin :<->text1515.htm<->builtin :: Built-in L-series (L-FUNCTIONS)
3<->computing :<->text1516.htm<->computing :: Computing L-values (L-FUNCTIONS)
5<->Evaluate(L, s0) <->text1516.htm#17204<->Evaluate(L, s0) : LSer, FldComElt -&gt; FldComElt
5<->CentralValue(L) <->text1516.htm#17205<->CentralValue(L) : LSer -&gt; FldComElt
5<->LStar(L, s0) <->text1516.htm#17206<->LStar(L, s0) : LSer, FldComElt -&gt; FldComElt
5<->LTaylor(L,s0,n) <->text1516.htm#17207<->LTaylor(L,s0,n) : LSer, FldComElt, RngIntElt -&gt; FldComElt
4<->Lseries_lseries-evaluate (Example H133E18)<->text1516.htm#17208<->Lseries_lseries-evaluate (Example H133E18)
4<->Example-lseries-evaluate :<->text1516.htm#17208<->Example-lseries-evaluate :: Lseries_lseries-evaluate (Example H133E18)
3<->computing :<->text1516.htm<->computing :: Computing L-values (L-FUNCTIONS)
3<->general :<->text1517.htm<->general :: General L-series (L-FUNCTIONS)
3<->terminology :<->text1517.htm#17210<->terminology :: Terminology (L-FUNCTIONS)
3<->lser-general :<->text1517.htm#17211<->lser-general :: Constructing a General L-Series (L-FUNCTIONS)
5<->LSeries(HS, N, cffun) <->text1517.htm#17212<->LSeries(HS, N, cffun) : HodgeStruc, RngIntElt, Any -> LSer
5<->LSeries(weight, gamma, conductor, cffun) <->text1517.htm#17212<->LSeries(weight, gamma, conductor, cffun) : FldReElt,[FldRatElt],FldReElt,Any -&gt; LSer
5<->CFENew :: CheckFunctionalEquation(L) <->text1517.htm#17213<->CFENew :: CheckFunctionalEquation(L) : LSer -&gt; FldComElt
5<->CheckFunctionalEquation(L) <->text1517.htm#17213<->CheckFunctionalEquation(L) : LSer -&gt; FldComElt
4<->Lseries_lseries-checkfun (Example H133E19)<->text1517.htm#17214<->Lseries_lseries-checkfun (Example H133E19)
4<->Example-lseries-checkfun :<->text1517.htm#17214<->Example-lseries-checkfun :: Lseries_lseries-checkfun (Example H133E19)
3<->lser-general :<->text1517.htm#17211<->lser-general :: Constructing a General L-Series (L-FUNCTIONS)
3<->lsetcoefficients :<->text1517.htm#17215<->lsetcoefficients :: Setting the Coefficients (L-FUNCTIONS)
5<->LSetCoefficients(L,cffun) <->text1517.htm#17216<->LSetCoefficients(L,cffun) : LSer, Any -&gt;
3<->lsetcoefficients :<->text1517.htm#17215<->lsetcoefficients :: Setting the Coefficients (L-FUNCTIONS)
3<->cflater :<->text1517.htm#17217<->cflater :: Specifying the Coefficients Later (L-FUNCTIONS)
4<->Lseries_lseries-lcfrequired (Example H133E20)<->text1517.htm#17218<->Lseries_lseries-lcfrequired (Example H133E20)
4<->Example-lseries-lcfrequired :<->text1517.htm#17218<->Example-lseries-lcfrequired :: Lseries_lseries-lcfrequired (Example H133E20)
3<->cflater :<->text1517.htm#17217<->cflater :: Specifying the Coefficients Later (L-FUNCTIONS)
3<->locfac :<->text1517.htm#17219<->locfac :: Generating the Coefficients from Local Factors (L-FUNCTIONS)
3<->general :<->text1517.htm<->general :: General L-series (L-FUNCTIONS)
3<->invariants :<->text1518.htm<->invariants :: Accessing the Invariants (L-FUNCTIONS)
5<->LCfRequired(L) <->text1518.htm#17221<->LCfRequired(L) : LSer -&gt; RngIntElt
5<->LGetCoefficients(L, N) <->text1518.htm#17222<->LGetCoefficients(L, N) : LSer, RngIntElt -&gt; List
5<->EulerFactor(L, p) <->text1518.htm#17223<->EulerFactor(L, p) : LSer, RngIntElt -&gt; RngElt
5<->Degree(L) <->text1518.htm#17224<->Degree(L) : LSer -&gt; RngIntElt
5<->Conductor(L) <->text1518.htm#17225<->Conductor(L) : LSer -&gt; RngElt
5<->Sign(L) <->text1518.htm#17226<->Sign(L) : LSer -&gt; RngElt
5<->MotivicWeight(L) <->text1518.htm#17227<->MotivicWeight(L) : LSer -&gt; RngIntElt
5<->GammaFactors(L) <->text1518.htm#17228<->GammaFactors(L) : LSer -&gt; SeqEnum
5<->LSeriesData(L) <->text1518.htm#17229<->LSeriesData(L) : LSer -&gt; Info
5<->BadPrimeData(L) <->text1518.htm#17230<->BadPrimeData(L) : LSer -&gt; SeqEnum
4<->Lseries_lseries-invariants (Example H133E21)<->text1518.htm#17231<->Lseries_lseries-invariants (Example H133E21)
4<->Example-lseries-invariants :<->text1518.htm#17231<->Example-lseries-invariants :: Lseries_lseries-invariants (Example H133E21)
5<->Factorisation :: Factorization(L) <->text1518.htm#17232<->Factorisation :: Factorization(L) : LSer -&gt; SeqEnum[Tup]
5<->Factorization(L) <->text1518.htm#17232<->Factorization(L) : LSer -&gt; SeqEnum[Tup]
4<->Lseries_lseries-invariants (Example H133E22)<->text1518.htm#17233<->Lseries_lseries-invariants (Example H133E22)
4<->Example-lseries-invariants :<->text1518.htm#17233<->Example-lseries-invariants :: Lseries_lseries-invariants (Example H133E22)
3<->invariants :<->text1518.htm<->invariants :: Accessing the Invariants (L-FUNCTIONS)
3<->modifyL :<->text1519.htm<->modifyL :: Modifying the L-function (L-FUNCTIONS)
5<->ChangeEulerFactor(L,p,f) <->text1519.htm#17235<->ChangeEulerFactor(L,p,f) : LSer, RngIntElt, RngUPolElt -&gt; LSer
5<->ChangeLocalInformation(L,p,d,f) <->text1519.htm#17236<->ChangeLocalInformation(L,p,d,f) : LSer, RngIntElt, RngIntElt, RngUPolElt -&gt; LSer
5<->ChangeLocalInformation(L,bp) <->text1519.htm#17237<->ChangeLocalInformation(L,bp) : LSer, List -&gt; LSer
5<->CopyCoefficients(L,M) <->text1519.htm#17238<->CopyCoefficients(L,M) : LSer, LSer -&gt;
4<->Lseries_change-local-info (Example H133E23)<->text1519.htm#17239<->Lseries_change-local-info (Example H133E23)
4<->Example-change-local-info :<->text1519.htm#17239<->Example-change-local-info :: Lseries_change-local-info (Example H133E23)
3<->modifyL :<->text1519.htm<->modifyL :: Modifying the L-function (L-FUNCTIONS)
3<->precision :<->text1520.htm<->precision :: Precision (L-FUNCTIONS)
5<->LSetPrecision(L,precision) <->text1520.htm#17241<->LSetPrecision(L,precision) : LSer, RngIntElt -&gt;
3<->cfgrowth :<->text1520.htm#17242<->cfgrowth :: L-series with Unusual Coefficient Growth (L-FUNCTIONS)
3<->ims :<->text1520.htm#17243<->ims :: Computing L(s) when Im(s) is  Large (<TT>ImS</TT> Parameter) (L-FUNCTIONS)
3<->asymptotics :<->text1520.htm#17244<->asymptotics :: Implementation of L-series Computations (<TT>Asymptotics</TT> Parameter) (L-FUNCTIONS)
3<->precision :<->text1520.htm<->precision :: Precision (L-FUNCTIONS)
3<->verbose :<->text1521.htm<->verbose :: Verbose Printing (L-FUNCTIONS)
3<->arithmetic :<->text1522.htm<->arithmetic :: Arithmetic with L-series (L-FUNCTIONS)
5<->L1 * L2 <->text1522.htm#17247<->L1 * L2 : LSer, LSer -&gt; LSer
5<->L1 / L2 <->text1522.htm#17248<->L1 / L2 : LSer, LSer -&gt; LSer
3<->hodge-struc :<->text1522.htm#17249<->hodge-struc :: Hodge Structure (L-FUNCTIONS)
5<->HasHodgeStructure(L) <->text1522.htm#17250<->HasHodgeStructure(L) : LSer -&gt; BoolElt, HodgeStruc
5<->TateTwist(HS, k) <->text1522.htm#17251<->TateTwist(HS, k) : HodgeStruc, RngIntElt -&gt; HodgeStruc
5<->Translate(L, z) <->text1522.htm#17252<->Translate(L, z) : LSer, FldRatElt -> LSer
5<->Translate(L, z) <->text1522.htm#17252<->Translate(L, z) : LSer, RngIntElt -&gt; LSer
5<->GammaShifts :: GammaFactors(HS) <->text1522.htm#17253<->GammaShifts :: GammaFactors(HS) : HodgeStruc -&gt; SeqEnum
5<->Degree :: GammaFactors(HS) <->text1522.htm#17253<->Degree :: GammaFactors(HS) : HodgeStruc -&gt; SeqEnum
5<->Weight :: GammaFactors(HS) <->text1522.htm#17253<->Weight :: GammaFactors(HS) : HodgeStruc -&gt; SeqEnum
5<->GammaFactors(HS) <->text1522.htm#17253<->GammaFactors(HS) : HodgeStruc -&gt; SeqEnum
5<->EffectiveHodgeStructure(HS) <->text1522.htm#17254<->EffectiveHodgeStructure(HS) : HodgeStruc -&gt; HodgeStruc, RngIntElt
5<->RootNumber(HS) <->text1522.htm#17255<->RootNumber(HS) : HodgeStruc -&gt; FldCycElt
5<->TensorProduct(H1, H2) <->text1522.htm#17256<->TensorProduct(H1, H2) : HodgeStruc, HodgeStruc -&gt; HodgeStruc
5<->SymmetricPower(HS, m) <->text1522.htm#17257<->SymmetricPower(HS, m) : HodgeStruc, RngIntElt -&gt; HodgeStruc
5<->Determinant(HS) <->text1522.htm#17258<->Determinant(HS) : HodgeStruc, -&gt; HodgeStruc
5<->AlternatingSquare(HS) <->text1522.htm#17259<->AlternatingSquare(HS) : HodgeStruc -&gt; HodgeStruc
5<->CriticalPoints(L) <->text1522.htm#17260<->CriticalPoints(L) : LSer -> SeqEnum
5<->CriticalPoints(HS) <->text1522.htm#17260<->CriticalPoints(HS) : HodgeStruc -&gt; SeqEnum
5<->ImaginaryTwist(HS) <->text1522.htm#17261<->ImaginaryTwist(HS) : HodgeStruc -&gt; HodgeStruc
4<->Lseries_lseries-hodge-struc (Example H133E24)<->text1522.htm#17262<->Lseries_lseries-hodge-struc (Example H133E24)
4<->Example-lseries-hodge-struc :<->text1522.htm#17262<->Example-lseries-hodge-struc :: Lseries_lseries-hodge-struc (Example H133E24)
3<->hodge-struc :<->text1522.htm#17249<->hodge-struc :: Hodge Structure (L-FUNCTIONS)
3<->tensprod :<->text1522.htm#17263<->tensprod :: Tensor Products (L-FUNCTIONS)
5<->TensorProduct(L1, L2, ExcFactors, K) <->text1522.htm#17264<->TensorProduct(L1, L2, ExcFactors, K) : LSer, LSer, [<>], FldNum -> LSer
5<->TensorProduct(L1, L2) <->text1522.htm#17264<->TensorProduct(L1, L2) : LSer, LSer, -> LSer
5<->TensorProduct(L1, L2, K) <->text1522.htm#17264<->TensorProduct(L1, L2, K) : LSer, LSer, FldNum -> LSer
5<->TensorProduct(L1, L2, ExcFactors) <->text1522.htm#17264<->TensorProduct(L1, L2, ExcFactors) : LSer, LSer, [&lt;&gt;] -&gt; LSer
4<->Lseries_ec-tensorprod (Example H133E25)<->text1522.htm#17265<->Lseries_ec-tensorprod (Example H133E25)
4<->Example-ec-tensorprod :<->text1522.htm#17265<->Example-ec-tensorprod :: Lseries_ec-tensorprod (Example H133E25)
4<->Lseries_level1-modform (Example H133E26)<->text1522.htm#17266<->Lseries_level1-modform (Example H133E26)
4<->Example-level1-modform :<->text1522.htm#17266<->Example-level1-modform :: Lseries_level1-modform (Example H133E26)
4<->Lseries_siegel-modular-form (Example H133E27)<->text1522.htm#17267<->Lseries_siegel-modular-form (Example H133E27)
4<->Example-siegel-modular-form :<->text1522.htm#17267<->Example-siegel-modular-form :: Lseries_siegel-modular-form (Example H133E27)
4<->Lseries_tensprod-overK (Example H133E28)<->text1522.htm#17268<->Lseries_tensprod-overK (Example H133E28)
4<->Example-tensprod-overK :<->text1522.htm#17268<->Example-tensprod-overK :: Lseries_tensprod-overK (Example H133E28)
4<->Lseries_consani-scholten (Example H133E29)<->text1522.htm#17269<->Lseries_consani-scholten (Example H133E29)
4<->Example-consani-scholten :<->text1522.htm#17269<->Example-consani-scholten :: Lseries_consani-scholten (Example H133E29)
3<->tensprod :<->text1522.htm#17263<->tensprod :: Tensor Products (L-FUNCTIONS)
3<->sympow :<->text1522.htm#17270<->sympow :: Symmetric Powers (L-FUNCTIONS)
5<->Determinant(L) <->text1522.htm#17271<->Determinant(L) : LSer -&gt; LSer
5<->SymmetricPower(L, m) <->text1522.htm#17272<->SymmetricPower(L, m) : LSer, RngIntElt -&gt; LSer
4<->Lseries_lseries-sympow (Example H133E30)<->text1522.htm#17273<->Lseries_lseries-sympow (Example H133E30)
4<->Example-lseries-sympow :<->text1522.htm#17273<->Example-lseries-sympow :: Lseries_lseries-sympow (Example H133E30)
4<->Lseries_sympow-gross (Example H133E31)<->text1522.htm#17274<->Lseries_sympow-gross (Example H133E31)
4<->Example-sympow-gross :<->text1522.htm#17274<->Example-sympow-gross :: Lseries_sympow-gross (Example H133E31)
4<->Lseries_sympow-ec (Example H133E32)<->text1522.htm#17275<->Lseries_sympow-ec (Example H133E32)
4<->Example-sympow-ec :<->text1522.htm#17275<->Example-sympow-ec :: Lseries_sympow-ec (Example H133E32)
4<->Lseries_sympow-ec2 (Example H133E33)<->text1522.htm#17276<->Lseries_sympow-ec2 (Example H133E33)
4<->Example-sympow-ec2 :<->text1522.htm#17276<->Example-sympow-ec2 :: Lseries_sympow-ec2 (Example H133E33)
5<->Symmetrization(L, p) <->text1522.htm#17277<->Symmetrization(L, p) : LSer, SeqEnum -&gt; LSer
5<->IsSymplectic :: IsOrthogonal(L) <->text1522.htm#17278<->IsSymplectic :: IsOrthogonal(L) : LSer -&gt; BoolElt
5<->IsOrthogonal(L) <->text1522.htm#17278<->IsOrthogonal(L) : LSer -&gt; BoolElt
5<->SymplecticSymmetrization :: OrthogonalSymmetrization(L, p) <->text1522.htm#17279<->SymplecticSymmetrization :: OrthogonalSymmetrization(L, p) : LSer, SeqEnum -&gt; LSer
5<->OrthogonalSymmetrization(L, p) <->text1522.htm#17279<->OrthogonalSymmetrization(L, p) : LSer, SeqEnum -&gt; LSer
4<->Lseries_general-symm (Example H133E34)<->text1522.htm#17280<->Lseries_general-symm (Example H133E34)
4<->Example-general-symm :<->text1522.htm#17280<->Example-general-symm :: Lseries_general-symm (Example H133E34)
4<->Lseries_orthog-symm (Example H133E35)<->text1522.htm#17281<->Lseries_orthog-symm (Example H133E35)
4<->Example-orthog-symm :<->text1522.htm#17281<->Example-orthog-symm :: Lseries_orthog-symm (Example H133E35)
4<->Lseries_symplectic-symm (Example H133E36)<->text1522.htm#17282<->Lseries_symplectic-symm (Example H133E36)
4<->Example-symplectic-symm :<->text1522.htm#17282<->Example-symplectic-symm :: Lseries_symplectic-symm (Example H133E36)
4<->Lseries_more-orthog (Example H133E37)<->text1522.htm#17283<->Lseries_more-orthog (Example H133E37)
4<->Example-more-orthog :<->text1522.htm#17283<->Example-more-orthog :: Lseries_more-orthog (Example H133E37)
4<->Lseries_final-symm-examples (Example H133E38)<->text1522.htm#17284<->Lseries_final-symm-examples (Example H133E38)
4<->Example-final-symm-examples :<->text1522.htm#17284<->Example-final-symm-examples :: Lseries_final-symm-examples (Example H133E38)
3<->sympow :<->text1522.htm#17270<->sympow :: Symmetric Powers (L-FUNCTIONS)
3<->arithmetic :<->text1522.htm<->arithmetic :: Arithmetic with L-series (L-FUNCTIONS)
3<->examples :<->text1523.htm<->examples :: Advanced Examples (L-FUNCTIONS)
3<->ex1 :<->text1523.htm#17286<->ex1 :: Handmade L-series of an Elliptic Curve (L-FUNCTIONS)
4<->Lseries_lseries-elliptic-selfmade (Example H133E39)<->text1523.htm#17287<->Lseries_lseries-elliptic-selfmade (Example H133E39)
4<->Example-lseries-elliptic-selfmade :<->text1523.htm#17287<->Example-lseries-elliptic-selfmade :: Lseries_lseries-elliptic-selfmade (Example H133E39)
3<->ex1 :<->text1523.htm#17286<->ex1 :: Handmade L-series of an Elliptic Curve (L-FUNCTIONS)
3<->ex2 :<->text1523.htm#17288<->ex2 :: Self-made Dedekind Zeta Function (L-FUNCTIONS)
4<->Lseries_lseries-dedekind-selfmade (Example H133E40)<->text1523.htm#17289<->Lseries_lseries-dedekind-selfmade (Example H133E40)
4<->Example-lseries-dedekind-selfmade :<->text1523.htm#17289<->Example-lseries-dedekind-selfmade :: Lseries_lseries-dedekind-selfmade (Example H133E40)
3<->ex2 :<->text1523.htm#17288<->ex2 :: Self-made Dedekind Zeta Function (L-FUNCTIONS)
3<->ex3 :<->text1523.htm#17290<->ex3 :: Handmade L-series of a hyperelliptic curve (L-FUNCTIONS)
4<->Lseries_lseries-genus2 (Example H133E41)<->text1523.htm#17291<->Lseries_lseries-genus2 (Example H133E41)
4<->Example-lseries-genus2 :<->text1523.htm#17291<->Example-lseries-genus2 :: Lseries_lseries-genus2 (Example H133E41)
3<->ex3 :<->text1523.htm#17290<->ex3 :: Handmade L-series of a hyperelliptic curve (L-FUNCTIONS)
3<->ex4 :<->text1523.htm#17292<->ex4 :: Experimental Mathematics for  Small Conductor (L-FUNCTIONS)
4<->Lseries_lseries-experimental (Example H133E42)<->text1523.htm#17293<->Lseries_lseries-experimental (Example H133E42)
4<->Example-lseries-experimental :<->text1523.htm#17293<->Example-lseries-experimental :: Lseries_lseries-experimental (Example H133E42)
3<->ex4 :<->text1523.htm#17292<->ex4 :: Experimental Mathematics for  Small Conductor (L-FUNCTIONS)
3<->ex5 :<->text1523.htm#17294<->ex5 :: Tensor Product of L-series Coming from l-adic Representations (L-FUNCTIONS)
4<->Lseries_lseries-tensor (Example H133E43)<->text1523.htm#17295<->Lseries_lseries-tensor (Example H133E43)
4<->Example-lseries-tensor :<->text1523.htm#17295<->Example-lseries-tensor :: Lseries_lseries-tensor (Example H133E43)
3<->ex5 :<->text1523.htm#17294<->ex5 :: Tensor Product of L-series Coming from l-adic Representations (L-FUNCTIONS)
3<->ex6 :<->text1523.htm#17296<->ex6 :: Non-abelian Twist of an Elliptic Curve (L-FUNCTIONS)
4<->Lseries_lseries-nonabtwist (Example H133E44)<->text1523.htm#17297<->Lseries_lseries-nonabtwist (Example H133E44)
4<->Example-lseries-nonabtwist :<->text1523.htm#17297<->Example-lseries-nonabtwist :: Lseries_lseries-nonabtwist (Example H133E44)
3<->ex6 :<->text1523.htm#17296<->ex6 :: Non-abelian Twist of an Elliptic Curve (L-FUNCTIONS)
3<->examples :<->text1523.htm<->examples :: Advanced Examples (L-FUNCTIONS)
3<->lseries :<->text1513.htm<->lseries :: L-FUNCTIONS
3<->modular-curves :<->text1526.htm<->modular-curves :: MODULAR CURVES
3<->introduction :<->text1527.htm<->introduction :: Introduction (MODULAR CURVES)
3<->creation :<->text1528.htm<->creation :: Creation Functions (MODULAR CURVES)
3<->creation-curve :<->text1528.htm#17303<->creation-curve :: Creation of a Modular Curve (MODULAR CURVES)
5<->ModularCurve(X,t,N) <->text1528.htm#17304<->ModularCurve(X,t,N) : Sch, MonStgElt, RngIntElt -&gt; CrvMod
5<->ModularCurve(D, N) <->text1528.htm#17305<->ModularCurve(D, N) : DB, RngIntElt -&gt; CrvMod
3<->creation-curve :<->text1528.htm#17303<->creation-curve :: Creation of a Modular Curve (MODULAR CURVES)
3<->point-creation :<->text1528.htm#17306<->point-creation :: Creation of Points (MODULAR CURVES)
5<->ModuliPoints(X,E) <->text1528.htm#17307<->ModuliPoints(X,E) : CrvMod, CrvEll -&gt; SeqEnum
4<->CrvMod_Moduli points (Example H134E1)<->text1528.htm#17308<->CrvMod_Moduli points (Example H134E1)
4<->Example-Moduli points :<->text1528.htm#17308<->Example-Moduli points :: CrvMod_Moduli points (Example H134E1)
3<->point-creation :<->text1528.htm#17306<->point-creation :: Creation of Points (MODULAR CURVES)
3<->creation :<->text1528.htm<->creation :: Creation Functions (MODULAR CURVES)
3<->attribute :<->text1529.htm<->attribute :: Invariants (MODULAR CURVES)
5<->Level(X) <->text1529.htm#17310<->Level(X) : CrvMod -&gt; RngIntElt
5<->Genus(X) <->text1529.htm#17311<->Genus(X) : CrvMod -&gt; RngIntElt
5<->ModelType(X) <->text1529.htm#17312<->ModelType(X) : CrvMod -&gt; MonStgElt
5<->Indices(X) <->text1529.htm#17313<->Indices(X) : CrvMod -&gt; SeqEnum
3<->attribute :<->text1529.htm<->attribute :: Invariants (MODULAR CURVES)
3<->attribute :<->text1530.htm<->attribute :: Modular Polynomial  Databases (MODULAR CURVES)
5<->AtkinModularPolynomial(N) <->text1530.htm#17315<->AtkinModularPolynomial(N) : RngIntElt -&gt; RngMPolElt
5<->CanonicalModularPolynomial(N) <->text1530.htm#17316<->CanonicalModularPolynomial(N) : RngIntElt -&gt; RngMPolElt
5<->ClassicalModularPolynomial(N) <->text1530.htm#17317<->ClassicalModularPolynomial(N) : RngIntElt -&gt; RngMPolElt
5<->ModularCurveDatabase(t,i) <->text1530.htm#17318<->ModularCurveDatabase(t,i) : MonStgElt, RngIntElt -> DB
5<->ModularCurveDatabase(t) <->text1530.htm#17318<->ModularCurveDatabase(t) : MonStgElt -&gt; DB
5<->N in D<->text1530.htm#17319<->N in D: RngIntElt, DB -&gt; BoolElt
5<->ExistsModularCurveDatabase(t,i) <->text1530.htm#17320<->ExistsModularCurveDatabase(t,i) : MonStgElt, RngIntElt -> BoolElt
5<->ExistsModularCurveDatabase(t) <->text1530.htm#17320<->ExistsModularCurveDatabase(t) : MonStgElt -&gt; BoolElt
4<->CrvMod_Modular polynomials (Example H134E2)<->text1530.htm#17321<->CrvMod_Modular polynomials (Example H134E2)
4<->Example-Modular polynomials :<->text1530.htm#17321<->Example-Modular polynomials :: CrvMod_Modular polynomials (Example H134E2)
3<->attribute :<->text1530.htm<->attribute :: Modular Polynomial  Databases (MODULAR CURVES)
3<->automorphisms :<->text1531.htm<->automorphisms :: Parametrized Structures (MODULAR CURVES)
5<->Isogeny(E,P) <->text1531.htm#17323<->Isogeny(E,P) : CrvEll, Pt -&gt; MapCrvEll
5<->SubgroupScheme(E,P) <->text1531.htm#17324<->SubgroupScheme(E,P) : CrvEll, Pt -&gt; CrvEllSubgroup
4<->CrvMod_Parametrized subgroup schemes (Example H134E3)<->text1531.htm#17325<->CrvMod_Parametrized subgroup schemes (Example H134E3)
4<->Example-Parametrized subgroup schemes :<->text1531.htm#17325<->Example-Parametrized subgroup schemes :: CrvMod_Parametrized subgroup schemes (Example H134E3)
3<->automorphisms :<->text1531.htm<->automorphisms :: Parametrized Structures (MODULAR CURVES)
3<->functions :<->text1532.htm<->functions :: Associated Structures (MODULAR CURVES)
5<->FunctionField(X) <->text1532.htm#17327<->FunctionField(X) : CrvMod -&gt; FldFun
5<->jFunction(X) <->text1532.htm#17328<->jFunction(X) : CrvMod -&gt; FldFunElt
5<->BaseCurve(X) <->text1532.htm#17329<->BaseCurve(X) : CrvMod -&gt; CrvMod, MapSch
4<->CrvMod_Modular base curve (Example H134E4)<->text1532.htm#17330<->CrvMod_Modular base curve (Example H134E4)
4<->Example-Modular base curve :<->text1532.htm#17330<->Example-Modular base curve :: CrvMod_Modular base curve (Example H134E4)
3<->functions :<->text1532.htm<->functions :: Associated Structures (MODULAR CURVES)
3<->automorphisms :<->text1533.htm<->automorphisms :: Automorphisms (MODULAR CURVES)
5<->AtkinLehnerInvolution :: CanonicalInvolution(X) <->text1533.htm#17332<->AtkinLehnerInvolution :: CanonicalInvolution(X) : CrvMod -&gt; MapSch
5<->CanonicalInvolution(X) <->text1533.htm#17332<->CanonicalInvolution(X) : CrvMod -&gt; MapSch
3<->automorphisms :<->text1533.htm<->automorphisms :: Automorphisms (MODULAR CURVES)
3<->attribute :<->text1534.htm<->attribute :: Class Polynomials (MODULAR CURVES)
5<->HilbertClassPolynomial(D) <->text1534.htm#17334<->HilbertClassPolynomial(D) : RngIntElt -&gt; RngUPolElt
5<->WeberClassPolynomial(D) <->text1534.htm#17335<->WeberClassPolynomial(D) : RngIntElt -&gt; RngUPolElt, FldFunRatUElt
5<->WeberToHilbertClassPolynomial(f,D) <->text1534.htm#17336<->WeberToHilbertClassPolynomial(f,D) : RngUPolElt, RngIntElt -&gt; RngUPolElt
4<->CrvMod_Standard class polynomials (Example H134E5)<->text1534.htm#17337<->CrvMod_Standard class polynomials (Example H134E5)
4<->Example-Standard class polynomials :<->text1534.htm#17337<->Example-Standard class polynomials :: CrvMod_Standard class polynomials (Example H134E5)
3<->attribute :<->text1534.htm<->attribute :: Class Polynomials (MODULAR CURVES)
3<->mod-crv-quotient :<->text1535.htm<->mod-crv-quotient :: Modular Curves and Quotients (Canonical Embeddings) (MODULAR CURVES)
5<->ModularCurveQuotient(N,A) <->text1535.htm#17339<->ModularCurveQuotient(N,A) : RngIntElt, [RngIntElt] -&gt; Crv
4<->CrvMod_x0n-quotient (Example H134E6)<->text1535.htm#17340<->CrvMod_x0n-quotient (Example H134E6)
4<->Example-x0n-quotient :<->text1535.htm#17340<->Example-x0n-quotient :: CrvMod_x0n-quotient (Example H134E6)
3<->mod-crv-quotient :<->text1535.htm<->mod-crv-quotient :: Modular Curves and Quotients (Canonical Embeddings) (MODULAR CURVES)
3<->jim_mod_crvs :<->text1536.htm<->jim_mod_crvs :: Modular Curves of Given Level and Genus (MODULAR CURVES)
5<->SetVerbose("ModularCurve", v) <->text1536.htm#17342<->SetVerbose("ModularCurve", v) : MonStgElt, RngIntElt -&gt;
5<->NewModularHyperellipticCurves(N, g) <->text1536.htm#17343<->NewModularHyperellipticCurves(N, g) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->NewModularHyperellipticCurve(B) <->text1536.htm#17344<->NewModularHyperellipticCurve(B) : [ModSym] -&gt; BoolElt, RngUPol
5<->NewModularHyperellipticCurve(F) <->text1536.htm#17345<->NewModularHyperellipticCurve(F) : [RngSerPowElt] -&gt; BoolElt, RngUPol
5<->ModularHyperellipticCurve(B) <->text1536.htm#17346<->ModularHyperellipticCurve(B) : [ModSym] -&gt; BoolElt, RngUPol
5<->ModularHyperellipticCurve(F) <->text1536.htm#17347<->ModularHyperellipticCurve(F) : [RngSerPowElt] -&gt; BoolElt, RngUPol
5<->NewModularNonHyperellipticCurvesGenus3(N) <->text1536.htm#17348<->NewModularNonHyperellipticCurvesGenus3(N) : RngIntElt -&gt; SeqEnum
5<->NewModularNonHyperellipticCurveGenus3(B) <->text1536.htm#17349<->NewModularNonHyperellipticCurveGenus3(B) : [ModSym] -&gt; BoolElt, RngMPolElt
5<->NewModularNonHyperellipticCurveGenus3(F) <->text1536.htm#17350<->NewModularNonHyperellipticCurveGenus3(F) : [RngSerPowElt] -&gt;  BoolElt, RngMPolElt
5<->ModularNonHyperellipticCurveGenus3(F) <->text1536.htm#17351<->ModularNonHyperellipticCurveGenus3(F) : [RngSerPowElt] -&gt;  BoolElt, RngMPolElt
4<->CrvMod_jim_ex_mod_crvs_hyp (Example H134E7)<->text1536.htm#17352<->CrvMod_jim_ex_mod_crvs_hyp (Example H134E7)
4<->Example-jim_ex_mod_crvs_hyp :<->text1536.htm#17352<->Example-jim_ex_mod_crvs_hyp :: CrvMod_jim_ex_mod_crvs_hyp (Example H134E7)
4<->CrvMod_jim_ex_mod_crvs_jeon (Example H134E8)<->text1536.htm#17353<->CrvMod_jim_ex_mod_crvs_jeon (Example H134E8)
4<->Example-jim_ex_mod_crvs_jeon :<->text1536.htm#17353<->Example-jim_ex_mod_crvs_jeon :: CrvMod_jim_ex_mod_crvs_jeon (Example H134E8)
4<->CrvMod_jim_ex_mod_crvs_jeon (Example H134E9)<->text1536.htm#17354<->CrvMod_jim_ex_mod_crvs_jeon (Example H134E9)
4<->Example-jim_ex_mod_crvs_jeon :<->text1536.htm#17354<->Example-jim_ex_mod_crvs_jeon :: CrvMod_jim_ex_mod_crvs_jeon (Example H134E9)
4<->CrvMod_jim_ex_mod_crvs_gen3 (Example H134E10)<->text1536.htm#17355<->CrvMod_jim_ex_mod_crvs_gen3 (Example H134E10)
4<->Example-jim_ex_mod_crvs_gen3 :<->text1536.htm#17355<->Example-jim_ex_mod_crvs_gen3 :: CrvMod_jim_ex_mod_crvs_gen3 (Example H134E10)
3<->jim_mod_crvs :<->text1536.htm<->jim_mod_crvs :: Modular Curves of Given Level and Genus (MODULAR CURVES)
3<->modular-curves :<->text1526.htm<->modular-curves :: MODULAR CURVES
3<->small-modular-curves :<->text1539.htm<->small-modular-curves :: SMALL MODULAR CURVES
3<->introduction :<->text1540.htm<->introduction :: Introduction (SMALL MODULAR CURVES)
3<->create_small_mod_crv :<->text1541.htm<->create_small_mod_crv :: Small Modular Curve Models (SMALL MODULAR CURVES)
5<->SmallModularCurve(N,K) <->text1541.htm#17361<->SmallModularCurve(N,K) : RngIntElt, Rng -> Crv
5<->SmallModularCurve(N) <->text1541.htm#17361<->SmallModularCurve(N) : RngIntElt -&gt; Crv
5<->IsInSmallModularCurveDatabase(N) <->text1541.htm#17362<->IsInSmallModularCurveDatabase(N) : RngIntElt -&gt; Boolelt
4<->SmallModCrv_sm_mod_crvs_basic_ex (Example H135E1)<->text1541.htm#17363<->SmallModCrv_sm_mod_crvs_basic_ex (Example H135E1)
4<->Example-sm_mod_crvs_basic_ex :<->text1541.htm#17363<->Example-sm_mod_crvs_basic_ex :: SmallModCrv_sm_mod_crvs_basic_ex (Example H135E1)
3<->create_small_mod_crv :<->text1541.htm<->create_small_mod_crv :: Small Modular Curve Models (SMALL MODULAR CURVES)
3<->prj_mp_small_mod_crv :<->text1542.htm<->prj_mp_small_mod_crv :: Projection Maps (SMALL MODULAR CURVES)
5<->ProjectionMap(CN,N,CM,M) <->text1542.htm#17365<->ProjectionMap(CN,N,CM,M) : Crv, RngIntElt, Crv, RngIntElt -&gt; MapSch
5<->ProjectionMap(CN,N,CM,M,r) <->text1542.htm#17366<->ProjectionMap(CN,N,CM,M,r) : Crv, RngIntElt, Crv, RngIntElt, RngIntElt -&gt; MapSch
4<->SmallModCrv_sm_mod_crvs_proj_ex (Example H135E2)<->text1542.htm#17367<->SmallModCrv_sm_mod_crvs_proj_ex (Example H135E2)
4<->Example-sm_mod_crvs_proj_ex :<->text1542.htm#17367<->Example-sm_mod_crvs_proj_ex :: SmallModCrv_sm_mod_crvs_proj_ex (Example H135E2)
3<->prj_mp_small_mod_crv :<->text1542.htm<->prj_mp_small_mod_crv :: Projection Maps (SMALL MODULAR CURVES)
3<->auts_small_mod_crv :<->text1543.htm<->auts_small_mod_crv :: Automorphisms (SMALL MODULAR CURVES)
5<->AtkinLehnerInvolution(CN,N,d) <->text1543.htm#17369<->AtkinLehnerInvolution(CN,N,d) : Crv, RngIntElt, RngIntElt -&gt; MapAutSch
5<->SrAutomorphism(CN,N,r,u)<->text1543.htm#17370<->SrAutomorphism(CN,N,r,u): Crv, RngIntElt, RngIntElt, RngElt -&gt; MapAutSch
5<->ExtraAutomorphism(CN,N,u)<->text1543.htm#17371<->ExtraAutomorphism(CN,N,u): Crv, RngIntElt, RngElt -&gt; MapAutSch
5<->AutomorphismGroupOverQ(CN,N)<->text1543.htm#17372<->AutomorphismGroupOverQ(CN,N): Crv, RngIntElt -&gt; GrpAutCrv
5<->AutomorphismGroupOverCyclotomicExtension(CN,N,n)<->text1543.htm#17373<->AutomorphismGroupOverCyclotomicExtension(CN,N,n): Crv, RngIntElt, RngIntElt -&gt; GrpAutCrv
5<->AutomorphismGroupOverExtension(CN,N,n,u)<->text1543.htm#17374<->AutomorphismGroupOverExtension(CN,N,n,u): Crv, RngIntElt, RngIntElt, RngElt -&gt; GrpAutCrv
4<->SmallModCrv_sm_mod_crvs_auto_ex (Example H135E3)<->text1543.htm#17375<->SmallModCrv_sm_mod_crvs_auto_ex (Example H135E3)
4<->Example-sm_mod_crvs_auto_ex :<->text1543.htm#17375<->Example-sm_mod_crvs_auto_ex :: SmallModCrv_sm_mod_crvs_auto_ex (Example H135E3)
3<->auts_small_mod_crv :<->text1543.htm<->auts_small_mod_crv :: Automorphisms (SMALL MODULAR CURVES)
3<->cusps_small_mod_crv :<->text1544.htm<->cusps_small_mod_crv :: Cusps and Rational Points (SMALL MODULAR CURVES)
5<->Cusp(CN,N,d) <->text1544.htm#17377<->Cusp(CN,N,d) : Crv, RngIntElt, RngIntElt -&gt; Any
5<->CuspIsSingular(N,d) <->text1544.htm#17378<->CuspIsSingular(N,d) : RngIntElt, RngIntElt -&gt; BoolElt
5<->CuspPlaces(CN,N,d) <->text1544.htm#17379<->CuspPlaces(CN,N,d) : Crv, RngIntElt, RngIntElt -&gt; SeqEnum[PlcCrvElt]
5<->NonCuspidalQRationalPoints(CN,N) <->text1544.htm#17380<->NonCuspidalQRationalPoints(CN,N) : Crv, RngIntElt -&gt; SeqEnum
4<->SmallModCrv_sm_mod_crvs_cusps (Example H135E4)<->text1544.htm#17381<->SmallModCrv_sm_mod_crvs_cusps (Example H135E4)
4<->Example-sm_mod_crvs_cusps :<->text1544.htm#17381<->Example-sm_mod_crvs_cusps :: SmallModCrv_sm_mod_crvs_cusps (Example H135E4)
3<->cusps_small_mod_crv :<->text1544.htm<->cusps_small_mod_crv :: Cusps and Rational Points (SMALL MODULAR CURVES)
3<->fns_frms_small_mod_crv :<->text1545.htm<->fns_frms_small_mod_crv :: Standard Functions and Forms (SMALL MODULAR CURVES)
5<->jFunction :: jInvariant(CN,N) <->text1545.htm#17383<->jFunction :: jInvariant(CN,N) : Crv, RngIntElt -&gt; FldFunRatMElt
5<->jInvariant(CN,N) <->text1545.htm#17383<->jInvariant(CN,N) : Crv, RngIntElt -&gt; FldFunRatMElt
5<->jInvariant(p,N) <->text1545.htm#17384<->jInvariant(p,N) : PlcCrvElt, RngIntElt -> RngElt
5<->jInvariant(p,N) <->text1545.htm#17384<->jInvariant(p,N) : Pt, RngIntElt -&gt; RngElt
5<->jNInvariant(p,N) <->text1545.htm#17385<->jNInvariant(p,N) : PlcCrvElt, RngIntElt -> RngElt
5<->jNInvariant(p,N) <->text1545.htm#17385<->jNInvariant(p,N) : Pt, RngIntElt -&gt; RngElt
5<->E2NForm(CN,N) <->text1545.htm#17386<->E2NForm(CN,N) : Crv, RngIntElt -&gt; DiffCrvElt
5<->E4Form(CN,N) <->text1545.htm#17387<->E4Form(CN,N) : Crv, RngIntElt -&gt; FldFunFracSchElt, DiffCrvElt
5<->E6Form(CN,N) <->text1545.htm#17388<->E6Form(CN,N) : Crv, RngIntElt -&gt; FldFunFracSchElt, DiffCrvElt
3<->fns_frms_small_mod_crv :<->text1545.htm<->fns_frms_small_mod_crv :: Standard Functions and Forms (SMALL MODULAR CURVES)
3<->isogs_sm_mod_crvs :<->text1546.htm<->isogs_sm_mod_crvs :: Parametrized Structures (SMALL MODULAR CURVES)
5<->SubgroupScheme(p,N) <->text1546.htm#17390<->SubgroupScheme(p,N) : PlcCrvElt, RngIntElt -> SchGrpEll, CrvEll
5<->SubgroupScheme(p,N,E) <->text1546.htm#17390<->SubgroupScheme(p,N,E) : Pt, RngIntElt, CrvEll -> SchGrpEll
5<->SubgroupScheme(p,N,E) <->text1546.htm#17390<->SubgroupScheme(p,N,E) : PlcCrvElt, RngIntElt, CrvEll -> SchGrpEll
5<->SubgroupScheme(p,N) <->text1546.htm#17390<->SubgroupScheme(p,N) : Pt, RngIntElt -&gt; SchGrpEll, CrvEll
5<->Isogeny(p,N) <->text1546.htm#17391<->Isogeny(p,N) : PlcCrvElt, RngIntElt -> MapSch
5<->Isogeny(p,N,E) <->text1546.htm#17391<->Isogeny(p,N,E) : Pt, RngIntElt, CrvEll -> MapSch
5<->Isogeny(p,N,E) <->text1546.htm#17391<->Isogeny(p,N,E) : PlcCrvElt, RngIntElt, CrvEll -> MapSch
5<->Isogeny(p,N) <->text1546.htm#17391<->Isogeny(p,N) : Pt, RngIntElt -&gt; MapSch
4<->SmallModCrv_sm_mod_crvs_prms (Example H135E5)<->text1546.htm#17392<->SmallModCrv_sm_mod_crvs_prms (Example H135E5)
4<->Example-sm_mod_crvs_prms :<->text1546.htm#17392<->Example-sm_mod_crvs_prms :: SmallModCrv_sm_mod_crvs_prms (Example H135E5)
3<->isogs_sm_mod_crvs :<->text1546.htm<->isogs_sm_mod_crvs :: Parametrized Structures (SMALL MODULAR CURVES)
3<->q_exps_sm_mod_crvs :<->text1547.htm<->q_exps_sm_mod_crvs :: Modular Generators and  q-Expansions (SMALL MODULAR CURVES)
5<->qExpansionExpressions(N) <->text1547.htm#17394<->qExpansionExpressions(N) : RngIntElt -&gt;
5<->qExpansionsOfGenerators(N,R,r) <->text1547.htm#17395<->qExpansionsOfGenerators(N,R,r) : RngIntElt, RngSerLaur, RngIntElt -&gt; SeqEnum
4<->SmallModCrv_q_exps_ex_sm_mod_crvs (Example H135E6)<->text1547.htm#17396<->SmallModCrv_q_exps_ex_sm_mod_crvs (Example H135E6)
4<->Example-q_exps_ex_sm_mod_crvs :<->text1547.htm#17396<->Example-q_exps_ex_sm_mod_crvs :: SmallModCrv_q_exps_ex_sm_mod_crvs (Example H135E6)
3<->q_exps_sm_mod_crvs :<->text1547.htm<->q_exps_sm_mod_crvs :: Modular Generators and  q-Expansions (SMALL MODULAR CURVES)
3<->sm_mod_crvs_big_ex :<->text1548.htm<->sm_mod_crvs_big_ex :: Extended Example (SMALL MODULAR CURVES)
4<->SmallModCrv_big_ex (Example H135E7)<->text1548.htm#17398<->SmallModCrv_big_ex (Example H135E7)
4<->Example-big_ex :<->text1548.htm#17398<->Example-big_ex :: SmallModCrv_big_ex (Example H135E7)
3<->sm_mod_crvs_big_ex :<->text1548.htm<->sm_mod_crvs_big_ex :: Extended Example (SMALL MODULAR CURVES)
3<->small-modular-curves :<->text1539.htm<->small-modular-curves :: SMALL MODULAR CURVES
3<->GrpPSL2 :<->text1551.htm<->GrpPSL2 :: CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R)
3<->introduction :<->text1552.htm<->introduction :: Introduction (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
4<->GrpPSL2_basic-example (Example H136E1)<->text1552.htm#17403<->GrpPSL2_basic-example (Example H136E1)
4<->Example-basic-example :<->text1552.htm#17403<->Example-basic-example :: GrpPSL2_basic-example (Example H136E1)
3<->introduction :<->text1552.htm<->introduction :: Introduction (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->Congruence-subgroups :<->text1553.htm<->Congruence-subgroups :: Congruence Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->creation-GrpPsl2 :<->text1553.htm#17405<->creation-GrpPsl2 :: Creation of Subgroups of PSL<sub>2</sub>(R) (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->PSL2(R) <->text1553.htm#17406<->PSL2(R) : Rng -&gt;  GrpPSL2
5<->Gamma0(N) <->text1553.htm#17407<->Gamma0(N) : RngIntElt -&gt; GrpPSL2
5<->Gamma1(N) <->text1553.htm#17408<->Gamma1(N) : RngIntElt -&gt; GrpPSL2
5<->GammaUpper0(N) <->text1553.htm#17409<->GammaUpper0(N) : RngIntElt -&gt; GrpPSL2
5<->GammaUpper1(N) <->text1553.htm#17410<->GammaUpper1(N) : RngIntElt -&gt; GrpPSL2
5<->CongruenceSubgroup(N) <->text1553.htm#17411<->CongruenceSubgroup(N) : RngIntElt -&gt; GrpPSL2
5<->CongruenceSubgroup(i,N) <->text1553.htm#17412<->CongruenceSubgroup(i,N) : RngIntElt, RngIntElt -&gt; GrpPSL2
5<->CongruenceSubgroup([N,M,P]) <->text1553.htm#17413<->CongruenceSubgroup([N,M,P]) : SeqEnum -&gt; GrpPSL2
5<->meet :: Intersection(G,H) <->text1553.htm#17414<->meet :: Intersection(G,H) : GrpPSL2, GrpPSL2 -&gt; GrpPSL2
5<->Intersection(G,H) <->text1553.htm#17414<->Intersection(G,H) : GrpPSL2, GrpPSL2 -&gt; GrpPSL2
4<->GrpPSL2_Creation (Example H136E2)<->text1553.htm#17415<->GrpPSL2_Creation (Example H136E2)
4<->Example-Creation :<->text1553.htm#17415<->Example-Creation :: GrpPSL2_Creation (Example H136E2)
3<->creation-GrpPsl2 :<->text1553.htm#17405<->creation-GrpPsl2 :: Creation of Subgroups of PSL<sub>2</sub>(R) (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->relations-GrpPsl2 :<->text1553.htm#17416<->relations-GrpPsl2 :: Relations (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->G eq H <->text1553.htm#17417<->G eq H : GrpPSL2, GrpPSL2 -&gt; BoolElt
5<->H subset G <->text1553.htm#17418<->H subset G : GrpPSL2, GrpPSL2 -&gt; BoolElt
5<->Index(G,H) <->text1553.htm#17419<->Index(G,H) : GrpPSL2, GrpPSL2 -&gt; RngIntElt
5<->Index(G) <->text1553.htm#17420<->Index(G) : GrpPSL2 -&gt; RngIntElt
3<->relations-GrpPsl2 :<->text1553.htm#17416<->relations-GrpPsl2 :: Relations (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->predicates-GrpPsl2 :<->text1553.htm#17421<->predicates-GrpPsl2 :: Basic Attributes (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->Level(G) <->text1553.htm#17422<->Level(G) : GrpPSL2  -&gt; RngIntElt
5<->IsCongruence(G) <->text1553.htm#17423<->IsCongruence(G) : GrpPSL2 -&gt; BoolElt
5<->IsGamma0(G) <->text1553.htm#17424<->IsGamma0(G) : GrpPSL2 -&gt; BoolElt
5<->IsGamma1(G) <->text1553.htm#17425<->IsGamma1(G) : GrpPSL2 -&gt; BoolElt
5<->BaseRing(G) <->text1553.htm#17426<->BaseRing(G) : GrpPSL2 -&gt; Rng
5<->Identity(G) <->text1553.htm#17427<->Identity(G) : GrpPSL2 -&gt; GrpPSL2Elt
3<->predicates-GrpPsl2 :<->text1553.htm#17421<->predicates-GrpPsl2 :: Basic Attributes (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->Congruence-subgroups :<->text1553.htm<->Congruence-subgroups :: Congruence Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->structure-of-congruence-groups :<->text1554.htm<->structure-of-congruence-groups :: Structure of Congruence  Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->CosetRepresentatives(G) <->text1554.htm#17429<->CosetRepresentatives(G) : GrpPSL2 -&gt; SeqEnum
5<->Generators(G) <->text1554.htm#17430<->Generators(G) : GrpPSL2 -&gt; SeqEnum
5<->FindWord(G,g) <->text1554.htm#17431<->FindWord(G,g) : GrpPSL2, GrpPSL2Elt -&gt; SeqEnum
5<->Genus(G) <->text1554.htm#17432<->Genus(G) : GrpPSL2 -&gt; RngIntElt
5<->FundamentalDomain(G) <->text1554.htm#17433<->FundamentalDomain(G) : GrpPSL2  -&gt; SeqEnum
4<->GrpPSL2_Example-of-finding-coset-representatives (Example H136E3)<->text1554.htm#17434<->GrpPSL2_Example-of-finding-coset-representatives (Example H136E3)
4<->Example-Example-of-finding-coset-representatives :<->text1554.htm#17434<->Example-Example-of-finding-coset-representatives :: GrpPSL2_Example-of-finding-coset-representatives (Example H136E3)
4<->GrpPSL2_Element-of-congruence-subgroup-in-terms-of-generators (Example H136E4)<->text1554.htm#17435<->GrpPSL2_Element-of-congruence-subgroup-in-terms-of-generators (Example H136E4)
4<->Example-Element-of-congruence-subgroup-in-terms-of-generators :<->text1554.htm#17435<->Example-Element-of-congruence-subgroup-in-terms-of-generators :: GrpPSL2_Element-of-congruence-subgroup-in-terms-of-generators (Example H136E4)
3<->cusps-and-elliptic-points :<->text1554.htm#17436<->cusps-and-elliptic-points :: Cusps and Elliptic Points of Congruence Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->Cusps(G) <->text1554.htm#17437<->Cusps(G) : GrpPSL2 -&gt; SeqEnum
5<->CuspWidth(G,x) <->text1554.htm#17438<->CuspWidth(G,x) : GrpPSL2, SetCspElt -&gt; RngIntElt
5<->EllipticPoints(G,H) <->text1554.htm#17439<->EllipticPoints(G,H) : GrpPSL2, SpcHyp -> [SpcHypElt]
5<->EllipticPoints(G) <->text1554.htm#17439<->EllipticPoints(G) : GrpPSL2 -&gt; [SpcHypElt]
4<->GrpPSL2_cusp-example (Example H136E5)<->text1554.htm#17440<->GrpPSL2_cusp-example (Example H136E5)
4<->Example-cusp-example :<->text1554.htm#17440<->Example-cusp-example :: GrpPSL2_cusp-example (Example H136E5)
3<->cusps-and-elliptic-points :<->text1554.htm#17436<->cusps-and-elliptic-points :: Cusps and Elliptic Points of Congruence Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->structure-of-congruence-groups :<->text1554.htm<->structure-of-congruence-groups :: Structure of Congruence  Subgroups (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->GrpPSL2Elt :<->text1555.htm<->GrpPSL2Elt :: Elements of PSL<sub>2</sub>(R) (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->creation-GrpPsl2Elt :<->text1555.htm#17442<->creation-GrpPsl2Elt :: Creation (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->G ! x <->text1555.htm#17443<->G ! x : GrpPSL2, RngIntElt -> GrpPSL2
5<->G ! x <->text1555.htm#17443<->G ! x : GrpPSL2, GrpMatElt -> GrpPSL2
5<->G ! x <->text1555.htm#17443<->G ! x : GrpPSL2, AlgMatElt -> GrpPSL2
5<->G ! x <->text1555.htm#17443<->G ! x : GrpPSL2, GrpPSL2Elt -> GrpPSL2
5<->G ! x <->text1555.htm#17443<->G ! x : GrpPSL2, . -&gt; GrpPSL2
5<->Random(G,m) <->text1555.htm#17444<->Random(G,m) : GrpPSL2, RngIntElt -&gt; GrpPSL2Elt
3<->creation-GrpPsl2Elt :<->text1555.htm#17442<->creation-GrpPsl2Elt :: Creation (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->membership-GrpPSL2Elt :<->text1555.htm#17445<->membership-GrpPSL2Elt :: Membership and Equality Testing (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->g eq h <->text1555.htm#17446<->g eq h : GrpPSL2Elt, GrpPSL2Elt -&gt; BoolElt
5<->IsEquivalent(g,h,G) <->text1555.htm#17447<->IsEquivalent(g,h,G) : GrpPSL2Elt, GrpPSL2Elt, GrpPSL2 -&gt; BoolElt
5<->g in G <->text1555.htm#17448<->g in G : GrpPSL2Elt, GrpPSL2 -&gt; BoolElt
3<->membership-GrpPSL2Elt :<->text1555.htm#17445<->membership-GrpPSL2Elt :: Membership and Equality Testing (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->predicates-GrpPSL2Elt :<->text1555.htm#17449<->predicates-GrpPSL2Elt :: Basic Functions (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->Eltseq(g) <->text1555.htm#17450<->Eltseq(g) : GrpPSL2Elt -&gt; SeqEnum
5<->g * h <->text1555.htm#17451<->g * h : GrpPSL2Elt, GrpPSL2Elt -&gt; GrpPSL2Elt
5<->g ^ n <->text1555.htm#17452<->g ^ n : GrpPSL2Elt, RngIntElt -&gt; GrpPSL2Elt
4<->GrpPSL2_Creation-CongruenceSubgroups (Example H136E6)<->text1555.htm#17453<->GrpPSL2_Creation-CongruenceSubgroups (Example H136E6)
4<->Example-Creation-CongruenceSubgroups :<->text1555.htm#17453<->Example-Creation-CongruenceSubgroups :: GrpPSL2_Creation-CongruenceSubgroups (Example H136E6)
3<->predicates-GrpPSL2Elt :<->text1555.htm#17449<->predicates-GrpPSL2Elt :: Basic Functions (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->GrpPSL2Elt :<->text1555.htm<->GrpPSL2Elt :: Elements of PSL<sub>2</sub>(R) (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->upper-plane :<->text1556.htm<->upper-plane :: The Upper Half Plane (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->creation-spchyp :<->text1556.htm#17455<->creation-spchyp :: Creation (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->UpperHalfPlane() <->text1556.htm#17456<->UpperHalfPlane() : -&gt; SpcHyp
5<->H ! x <->text1556.htm#17457<->H ! x : SpcHyp, . -&gt; SpcHypElt
4<->GrpPSL2_Upper-half-plane-example (Example H136E7)<->text1556.htm#17458<->GrpPSL2_Upper-half-plane-example (Example H136E7)
4<->Example-Upper-half-plane-example :<->text1556.htm#17458<->Example-Upper-half-plane-example :: GrpPSL2_Upper-half-plane-example (Example H136E7)
3<->creation-spchyp :<->text1556.htm#17455<->creation-spchyp :: Creation (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->predicates :<->text1556.htm#17459<->predicates :: Basic Attributes (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->Imaginary(z) <->text1556.htm#17460<->Imaginary(z) : SpcHypElt -&gt; FldReElt
5<->Real(z) <->text1556.htm#17461<->Real(z) : SpcHypElt -&gt; FldReElt
5<->IsReal(z) <->text1556.htm#17462<->IsReal(z) : SpcHypElt -&gt; BoolElt
5<->IsCusp(z) <->text1556.htm#17463<->IsCusp(z) : SpcHypElt -&gt; BoolElt
5<->IsInfinite(z) <->text1556.htm#17464<->IsInfinite(z) : SpcHypElt -&gt; BoolElt
5<->IsExact(z) <->text1556.htm#17465<->IsExact(z) : SpcHypElt -&gt; BoolElt
5<->ExactValue(z) <->text1556.htm#17466<->ExactValue(z) : SpcHypElt -&gt; .
5<->ComplexValue(x) <->text1556.htm#17467<->ComplexValue(x) : SpcHypElt -&gt; FldComElt
5<->x eq y <->text1556.htm#17468<->x eq y : SpcHypElt, SpcHypElt -&gt; BoolElt
3<->predicates :<->text1556.htm#17459<->predicates :: Basic Attributes (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->upper-plane :<->text1556.htm<->upper-plane :: The Upper Half Plane (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->group-action :<->text1557.htm<->group-action :: Action of PSL<sub>2</sub>(R) on the Upper Half Plane (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->g * z <->text1557.htm#17470<->g * z : GrpPSL2Elt, [SpcHypElt] ->  [SpcHypElt] 
5<->g * z <->text1557.htm#17470<->g * z : GrpPSL2Elt, SetCspElt   ->  SetCspElt   
5<->g * z <->text1557.htm#17470<->g * z : RngIntElt, SpcHypElt -> SpcHypElt	
5<->g * z <->text1557.htm#17470<->g * z : RngIntElt,  [SpcHypElt] ->  [SpcHypElt] 
5<->g * z <->text1557.htm#17470<->g * z : RngIntElt,  SetCspElt   ->  SetCspElt   
5<->g * z <->text1557.htm#17470<->g * z : GrpPSL2Elt, SpcHypElt   -&gt; SpcHypElt
5<->FixedPoints(g,H) <->text1557.htm#17471<->FixedPoints(g,H) : GrpPSL2Elt, SpcHyp -&gt; SeqEnum
5<->IsEquivalent(G,a,b) <->text1557.htm#17472<->IsEquivalent(G,a,b) : GrpPSL2, SpcHypElt, SpcHypElt -&gt; BoolElt, GrpPSL2Elt
5<->EquivalentPoint(x) <->text1557.htm#17473<->EquivalentPoint(x) : SpcHypElt -&gt; SpcHypElt, GrpPSL2Elt
5<->Stabilizer(a,G) <->text1557.htm#17474<->Stabilizer(a,G) : SpcHypElt, GrpPSL2 -&gt; GrpPSL2Elt
5<->FixedArc(g,H) <->text1557.htm#17475<->FixedArc(g,H) : GrpPSL2Elt, SpcHyp -&gt; SeqEnum
3<->uhp-arithmetic :<->text1557.htm#17476<->uhp-arithmetic :: Arithmetic (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->z + a <->text1557.htm#17477<->z + a : SpcHypElt,  FldRatElt  -> SpcHypElt
5<->z + a <->text1557.htm#17477<->z + a : SpcHypElt,  RngIntElt  -&gt; SpcHypElt
5<->z - a <->text1557.htm#17477<->z - a : SpcHypElt,  FldRatElt  -> SpcHypElt
5<->z + a <->text1557.htm#17477<->z + a : SpcHypElt,  RngIntElt  -&gt; SpcHypElt
5<->z * a <->text1557.htm#17478<->z * a : SpcHypElt, RngElt -> SpcHypElt
5<->a * z <->text1557.htm#17478<->a * z : RngIntElt, SetCspElt -> SetCspElt
5<->a * z <->text1557.htm#17478<->a * z : FldRatElt, SetCspElt -> SetCspElt
5<->a * seq <->text1557.htm#17478<->a * seq : RngElt, [SpcHypElt] -> [SpcHypElt]
5<->a * z <->text1557.htm#17478<->a * z : RngIntElt, [SetCspElt] -> [SetCspElt]
5<->a * z <->text1557.htm#17478<->a * z : FldRatElt, [SetCspElt] -> [SetCspElt]
5<->z * a <->text1557.htm#17478<->z * a : SpcHypElt,  RngIntElt  -> SpcHypElt
5<->/ :: a * z <->text1557.htm#17478<->/ :: a * z : RngElt, SpcHypElt -&gt; SpcHypElt
5<->a * z <->text1557.htm#17478<->a * z : RngElt, SpcHypElt -&gt; SpcHypElt
3<->uhp-arithmetic :<->text1557.htm#17476<->uhp-arithmetic :: Arithmetic (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->uhp-DistanceAngle :<->text1557.htm#17479<->uhp-DistanceAngle :: Distances, Angles and Geodesics (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->Distance(z,w) <->text1557.htm#17480<->Distance(z,w) : SpcHypElt, SpcHypElt -&gt; FldReElt
5<->TangentAngle(x,y) <->text1557.htm#17481<->TangentAngle(x,y) : SpcHypElt, SpcHypElt -&gt; FldReElt
5<->Angle(e1,e2) <->text1557.htm#17482<->Angle(e1,e2) : [SpcHypElt], [SpcHypElt] -&gt; FldReElt
5<->ExtendGeodesic([z1,z2], H) <->text1557.htm#17483<->ExtendGeodesic([z1,z2], H) : [SpcHypElt], SpcHyp -&gt; [SpcHypElt]
5<->GeodesicsIntersection(x1,x2) <->text1557.htm#17484<->GeodesicsIntersection(x1,x2) : [SetCspElt], [SetCspElt]) -> SeqEnum
5<->GeodesicsIntersection(x1,x2) <->text1557.htm#17484<->GeodesicsIntersection(x1,x2) : [SpcHypElt], [SpcHypElt]) -&gt; SeqEnum
3<->uhp-DistanceAngle :<->text1557.htm#17479<->uhp-DistanceAngle :: Distances, Angles and Geodesics (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->group-action :<->text1557.htm<->group-action :: Action of PSL<sub>2</sub>(R) on the Upper Half Plane (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->Farey-Symbols :<->text1558.htm<->Farey-Symbols :: Farey Symbols and Fundamental Domains (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->FareySymbol(G) <->text1558.htm#17486<->FareySymbol(G) : GrpPSL2 -&gt; SymFry
5<->Cusps(FS) <->text1558.htm#17487<->Cusps(FS) : SymFry -&gt; SeqEnum
5<->Labels(FS) <->text1558.htm#17488<->Labels(FS) : SymFry-&gt; SeqEnum
5<->Generators(FS) <->text1558.htm#17489<->Generators(FS) : SymFry -&gt; SeqEnum
5<->Group(FS) <->text1558.htm#17490<->Group(FS) : SymFry -&gt; GrpPSL2
5<->Widths(FS) <->text1558.htm#17491<->Widths(FS) : SymFry -&gt; SeqEnum
5<->Index(FS) <->text1558.htm#17492<->Index(FS) : SymFry -&gt; RngIntElt
5<->FundamentalDomain(FS,H) <->text1558.htm#17493<->FundamentalDomain(FS,H) : SymFry, SpcHyp -> SeqEnum
5<->FundamentalDomain(FS) <->text1558.htm#17493<->FundamentalDomain(FS) : SymFry -&gt; SeqEnum
5<->CosetRepresentatives(FS) <->text1558.htm#17494<->CosetRepresentatives(FS) : SymFry -&gt; SeqEnum
5<->InternalEdges(FS) <->text1558.htm#17495<->InternalEdges(FS) : SymFry -&gt; SeqEnum
3<->Farey-Symbols :<->text1558.htm<->Farey-Symbols :: Farey Symbols and Fundamental Domains (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->Points and Geodesics (CONGRUENCE SUBGROUPS OF PSL2(R))<->text1559.htm<->Points and Geodesics (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->GeodesicsIntersection(x,y) <->text1559.htm#17497<->GeodesicsIntersection(x,y) : [SetCspElt],[SetCspElt] -> SpcHypElt
5<->GeodesicsIntersection(x,y) <->text1559.htm#17497<->GeodesicsIntersection(x,y) : [SpcHypElt],[SpcHypElt] -&gt; SpcHypElt
4<->GrpPSL2_geodesic-intersection (Example H136E8)<->text1559.htm#17498<->GrpPSL2_geodesic-intersection (Example H136E8)
4<->Example-geodesic-intersection :<->text1559.htm#17498<->Example-geodesic-intersection :: GrpPSL2_geodesic-intersection (Example H136E8)
3<->Points and Geodesics (CONGRUENCE SUBGROUPS OF PSL2(R))<->text1559.htm<->Points and Geodesics (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->graphics :<->text1560.htm<->graphics :: Graphical Output (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
5<->DisplayPolygons(P,file) <->text1560.htm#17500<->DisplayPolygons(P,file) : SeqEnum, MonStgElt -&gt;
5<->DisplayFareySymbolDomain(G,file) <->text1560.htm#17501<->DisplayFareySymbolDomain(G,file) : GrpPSL2, MonStgElt -> SeqEnum
5<->DisplayFareySymbolDomain(FS,file) <->text1560.htm#17501<->DisplayFareySymbolDomain(FS,file) : SymFry, MonStgElt -&gt; SeqEnum
4<->GrpPSL2_Graphics (Example H136E9)<->text1560.htm#17502<->GrpPSL2_Graphics (Example H136E9)
4<->Example-Graphics :<->text1560.htm#17502<->Example-Graphics :: GrpPSL2_Graphics (Example H136E9)
4<->GrpPSL2_more-graphics (Example H136E10)<->text1560.htm#17503<->GrpPSL2_more-graphics (Example H136E10)
4<->Example-more-graphics :<->text1560.htm#17503<->Example-more-graphics :: GrpPSL2_more-graphics (Example H136E10)
4<->GrpPSL2_Graphics (Example H136E11)<->text1560.htm#17504<->GrpPSL2_Graphics (Example H136E11)
4<->Example-Graphics :<->text1560.htm#17504<->Example-Graphics :: GrpPSL2_Graphics (Example H136E11)
3<->graphics :<->text1560.htm<->graphics :: Graphical Output (CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R))
3<->GrpPSL2 :<->text1551.htm<->GrpPSL2 :: CONGRUENCE SUBGROUPS OF PSL<sub>2</sub>(R)
3<->GrpPSL2Shim :<->text1563.htm<->GrpPSL2Shim :: ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES
3<->ArithmeticFuchsianGroups :<->text1564.htm<->ArithmeticFuchsianGroups :: Arithmetic Fuchsian Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->AFG-Creation :<->text1564.htm#17509<->AFG-Creation :: Creation (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->FuchsianGroup(O) <->text1564.htm#17510<->FuchsianGroup(O) : AlgAssVOrd -> GrpPSL2
5<->FuchsianGroup(O) <->text1564.htm#17510<->FuchsianGroup(O) : AlgQuatOrd -&gt; GrpPSL2
5<->FuchsianGroup(A) <->text1564.htm#17511<->FuchsianGroup(A) : AlgQuat -&gt; GrpPSL2
5<->FuchsianGroup(A, N) <->text1564.htm#17512<->FuchsianGroup(A, N) : AlgQuat, RngIntElt -> GrpPSL2
5<->FuchsianGroup(A, N) <->text1564.htm#17512<->FuchsianGroup(A, N) : AlgQuat, RngOrdIdl -&gt; GrpPSL2
4<->GrpPSL2Shim_ConstructAFG1 (Example H137E1)<->text1564.htm#17513<->GrpPSL2Shim_ConstructAFG1 (Example H137E1)
4<->Example-ConstructAFG1 :<->text1564.htm#17513<->Example-ConstructAFG1 :: GrpPSL2Shim_ConstructAFG1 (Example H137E1)
3<->AFG-Creation :<->text1564.htm#17509<->AFG-Creation :: Creation (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->AFG-Attributes :<->text1564.htm#17514<->AFG-Attributes :: Quaternionic Functions (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->BaseRing :: QuaternionOrder(G) <->text1564.htm#17515<->BaseRing :: QuaternionOrder(G) : GrpPSL2 -&gt; AlgQuatOrd
5<->QuaternionOrder(G) <->text1564.htm#17515<->QuaternionOrder(G) : GrpPSL2 -&gt; AlgQuatOrd
5<->QuaternionAlgebra(G) <->text1564.htm#17516<->QuaternionAlgebra(G) : GrpPSL2 -&gt; AlgQuat
5<->SplitRealPlace(A) <->text1564.htm#17517<->SplitRealPlace(A) : AlgQuat -&gt; PlcNum
5<->FuchsianMatrixRepresentation(A) <->text1564.htm#17518<->FuchsianMatrixRepresentation(A) : AlgQuat -&gt; Map
5<->DefiniteNorm(gamma) <->text1564.htm#17519<->DefiniteNorm(gamma) : AlgQuatElt -&gt; FldReElt
5<->DefiniteGramMatrix(B) <->text1564.htm#17520<->DefiniteGramMatrix(B) : SeqEnum[AlgQuatElt] -&gt; FldReElt
4<->GrpPSL2Shim_QuaternionicFunctions (Example H137E2)<->text1564.htm#17521<->GrpPSL2Shim_QuaternionicFunctions (Example H137E2)
4<->Example-QuaternionicFunctions :<->text1564.htm#17521<->Example-QuaternionicFunctions :: GrpPSL2Shim_QuaternionicFunctions (Example H137E2)
5<->MultiplicativeOrder(gamma) <->text1564.htm#17522<->MultiplicativeOrder(gamma) : AlgQuatElt -> SeqEnum
5<->MultiplicativeOrder(gamma) <->text1564.htm#17522<->MultiplicativeOrder(gamma) : AlgAssVOrdElt -&gt; SeqEnum
5<->Quaternion(g) <->text1564.htm#17523<->Quaternion(g) : GrpPSL2Elt -&gt; AlgQuatElt
3<->AFG-Attributes :<->text1564.htm#17514<->AFG-Attributes :: Quaternionic Functions (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->AFG-BasicInvariants :<->text1564.htm#17524<->AFG-BasicInvariants :: Basic Invariants (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->ArithmeticVolume(G) <->text1564.htm#17525<->ArithmeticVolume(G) : GrpPSL2 -&gt; FldRatElt
5<->EllipticInvariants(G) <->text1564.htm#17526<->EllipticInvariants(G) : GrpPSL2 -&gt; SeqEnum
5<->Signature(G) <->text1564.htm#17527<->Signature(G) : GrpPSL2 -&gt; SeqEnum
3<->AFG-BasicInvariants :<->text1564.htm#17524<->AFG-BasicInvariants :: Basic Invariants (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->AFG-Structure :<->text1564.htm#17528<->AFG-Structure :: Group Structure (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->Group(G) <->text1564.htm#17529<->Group(G) : GrpPSL2 -&gt; GrpFP, Map, Map
4<->GrpPSL2Shim_BasicInvariants (Example H137E3)<->text1564.htm#17530<->GrpPSL2Shim_BasicInvariants (Example H137E3)
4<->Example-BasicInvariants :<->text1564.htm#17530<->Example-BasicInvariants :: GrpPSL2Shim_BasicInvariants (Example H137E3)
3<->AFG-Structure :<->text1564.htm#17528<->AFG-Structure :: Group Structure (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ArithmeticFuchsianGroups :<->text1564.htm<->ArithmeticFuchsianGroups :: Arithmetic Fuchsian Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->unit-disc :<->text1565.htm<->unit-disc :: Unit Disc (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ud-Creation :<->text1565.htm#17532<->ud-Creation :: Creation (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->UnitDisc() <->text1565.htm#17533<->UnitDisc() : -&gt; SpcHyd
3<->ud-Creation :<->text1565.htm#17532<->ud-Creation :: Creation (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ud-BasicOperations :<->text1565.htm#17534<->ud-BasicOperations :: Basic Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->D ! x <->text1565.htm#17535<->D ! x : SpcHyd, . -&gt; SeqEnum
5<->x eq y <->text1565.htm#17536<->x eq y : SpcHydElt, SpcHydElt -&gt; BoolElt
5<->x * a <->text1565.htm#17537<->x * a : SpcHydElt, RngElt -> RngElt
5<->a * x <->text1565.htm#17537<->a * x : RngElt, SpcHydElt -&gt; RngElt
5<->y + x <->text1565.htm#17538<->y + x : RngElt, SpcHydElt -> RngElt
5<->x + y <->text1565.htm#17538<->x + y : SpcHydElt, SpcHydElt -> RngElt
5<->x + y <->text1565.htm#17538<->x + y : SpcHydElt, RngElt -&gt; RngElt
5<->x - y <->text1565.htm#17539<->x - y : RngElt, SpcHydElt -> RngElt
5<->x - y <->text1565.htm#17539<->x - y : SpcHydElt, SpcHydElt -> RngElt
5<->x - y <->text1565.htm#17539<->x - y : SpcHydElt, RngElt -&gt; RngElt
5<->x / a <->text1565.htm#17540<->x / a : SpcHydElt, RngElt -&gt; RngElt
3<->ud-BasicOperations :<->text1565.htm#17534<->ud-BasicOperations :: Basic Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ud-AccessOperations :<->text1565.htm#17541<->ud-AccessOperations :: Access Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->IsExact(z) <->text1565.htm#17542<->IsExact(z) : SpcHydElt -&gt; BoolElt, .
5<->ExactValue(z) <->text1565.htm#17543<->ExactValue(z) : SpcHydElt -&gt; .
5<->ComplexValue(z) <->text1565.htm#17544<->ComplexValue(z) : SpcHydElt -&gt; FldComElt
5<->Imaginary :: Im(z) <->text1565.htm#17545<->Imaginary :: Im(z) : SpcHydElt -&gt; FldReElt
5<->Im(z) <->text1565.htm#17545<->Im(z) : SpcHydElt -&gt; FldReElt
5<->Real :: Re(z) <->text1565.htm#17546<->Real :: Re(z) : SpcHydElt -&gt; FldReElt
5<->Re(z) <->text1565.htm#17546<->Re(z) : SpcHydElt -&gt; FldReElt
5<->Argument(z) <->text1565.htm#17547<->Argument(z) : SpcHydElt -&gt; FldReElt
5<->AbsoluteValue :: Abs(z) <->text1565.htm#17548<->AbsoluteValue :: Abs(z) : SpcHydElt -&gt; FldReElt
5<->Abs(z) <->text1565.htm#17548<->Abs(z) : SpcHydElt -&gt; FldReElt
4<->GrpPSL2Shim_UnitDiscBasics (Example H137E4)<->text1565.htm#17549<->GrpPSL2Shim_UnitDiscBasics (Example H137E4)
4<->Example-UnitDiscBasics :<->text1565.htm#17549<->Example-UnitDiscBasics :: GrpPSL2Shim_UnitDiscBasics (Example H137E4)
3<->ud-AccessOperations :<->text1565.htm#17541<->ud-AccessOperations :: Access Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ud-DistanceAngle :<->text1565.htm#17550<->ud-DistanceAngle :: Distance and Angles (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->Distance(z,w) <->text1565.htm#17551<->Distance(z,w) : SpcHydElt, SpcHydElt -&gt; FldReElt
5<->Geodesic(z,w) <->text1565.htm#17552<->Geodesic(z,w) : SpcHydElt, SpcHydElt -&gt; RngElt, RngElt
5<->TangentAngle(x,y) <->text1565.htm#17553<->TangentAngle(x,y) : SpcHydElt, SpcHydElt -&gt; FldReElt
5<->Angle(e1,e2) <->text1565.htm#17554<->Angle(e1,e2) : [SpcHydElt], [SpcHydElt] -&gt; FldReElt
5<->ArithmeticVolume(P) <->text1565.htm#17555<->ArithmeticVolume(P) : [SpcHydElt] -&gt; FldReElt
4<->GrpPSL2Shim_UnitDiscAngle (Example H137E5)<->text1565.htm#17556<->GrpPSL2Shim_UnitDiscAngle (Example H137E5)
4<->Example-UnitDiscAngle :<->text1565.htm#17556<->Example-UnitDiscAngle :: GrpPSL2Shim_UnitDiscAngle (Example H137E5)
3<->ud-DistanceAngle :<->text1565.htm#17550<->ud-DistanceAngle :: Distance and Angles (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->ud-StructuralOperations :<->text1565.htm#17557<->ud-StructuralOperations :: Structural Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->T * x <->text1565.htm#17558<->T * x : GrpPSL2Elt, SpcHydElt -&gt; SpcHydElt
5<->Center(D) <->text1565.htm#17559<->Center(D) : SpcHyd -&gt; RngElt
5<->DiscToPlane(H,z) <->text1565.htm#17560<->DiscToPlane(H,z) : SpcHyp, SpcHydElt -&gt; SpcHypElt
5<->PlaneToDisc(D,z) <->text1565.htm#17561<->PlaneToDisc(D,z) : SpcHyd, SpcHypElt -&gt; SpcHydElt
5<->Matrix(g,D) <->text1565.htm#17562<->Matrix(g,D) : GrpPSL2Elt, SpcHyd -&gt; AlgMatElt
5<->FixedPoints(g,D) <->text1565.htm#17563<->FixedPoints(g,D) : GrpPSL2Elt, SpcHyd -&gt; SeqEnum
5<->IsometricCircle(g,H) <->text1565.htm#17564<->IsometricCircle(g,H) : GrpPSL2Elt, SpcHyp -> RngElt, RngElt
5<->IsometricCircle(g) <->text1565.htm#17564<->IsometricCircle(g) : GrpPSL2Elt -&gt; RngElt, RngElt
5<->IsometricCircle(g,D) <->text1565.htm#17565<->IsometricCircle(g,D) : GrpPSL2Elt, SpcHyd -&gt; RngElt, RngElt
5<->GeodesicsIntersection(x1,x2) <->text1565.htm#17566<->GeodesicsIntersection(x1,x2) : [SpcHydElt], [SpcHydElt]) -&gt; .
5<->BoundaryIntersection(x) <->text1565.htm#17567<->BoundaryIntersection(x) : [SpcHydElt] -&gt; [FldComElt]
4<->GrpPSL2Shim_UnitDiscPractice2 (Example H137E6)<->text1565.htm#17568<->GrpPSL2Shim_UnitDiscPractice2 (Example H137E6)
4<->Example-UnitDiscPractice2 :<->text1565.htm#17568<->Example-UnitDiscPractice2 :: GrpPSL2Shim_UnitDiscPractice2 (Example H137E6)
3<->ud-StructuralOperations :<->text1565.htm#17557<->ud-StructuralOperations :: Structural Operations (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->unit-disc :<->text1565.htm<->unit-disc :: Unit Disc (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->fundamental-domains :<->text1566.htm<->fundamental-domains :: Fundamental Domains (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->FundamentalDomain(G,D) <->text1566.htm#17570<->FundamentalDomain(G,D) : GrpPSL2, SpcHyd -&gt; SeqEnum
5<->FundamentalDomain(G) <->text1566.htm#17571<->FundamentalDomain(G) : GrpPSL2 -&gt; SeqEnum
4<->GrpPSL2Shim_FundamentalDomains (Example H137E7)<->text1566.htm#17572<->GrpPSL2Shim_FundamentalDomains (Example H137E7)
4<->Example-FundamentalDomains :<->text1566.htm#17572<->Example-FundamentalDomains :: GrpPSL2Shim_FundamentalDomains (Example H137E7)
5<->ShimuraReduceUnit(delta, gammagens, G, D) <->text1566.htm#17573<->ShimuraReduceUnit(delta, gammagens, G, D) : AlgQuatElt, SeqEnum[AlgQuatElt],                                          GrpPSL2, SpcHyd -> SeqEnum 
5<->ShimuraReduceUnit(delta, gammagens, G, D) <->text1566.htm#17573<->ShimuraReduceUnit(delta, gammagens, G, D) : AlgAssVOrdElt, SeqEnum[AlgAssVOrdElt],                                         GrpPSL2, SpcHyd -&gt; SeqEnum
3<->fundamental-domains :<->text1566.htm<->fundamental-domains :: Fundamental Domains (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->triangle-groups :<->text1567.htm<->triangle-groups :: Triangle Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->tg-creation :<->text1567.htm#17575<->tg-creation :: Creation of Triangle Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->ArithmeticTriangleGroup(p,q,r) <->text1567.htm#17576<->ArithmeticTriangleGroup(p,q,r) : RngIntElt, RngIntElt, RngIntElt -&gt; GrpPSL2, Rng
5<->AdmissableTriangleGroups() <->text1567.htm#17577<->AdmissableTriangleGroups() : -&gt; SeqEnum
5<->IsTriangleGroup(G) <->text1567.htm#17578<->IsTriangleGroup(G) : GrpPSL2 -&gt; BoolElt
3<->tg-creation :<->text1567.htm#17575<->tg-creation :: Creation of Triangle Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->tg-fundamental-domains :<->text1567.htm#17579<->tg-fundamental-domains :: Fundamental Domain (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->ReduceToTriangleVertices(G,z) <->text1567.htm#17580<->ReduceToTriangleVertices(G,z) : GrpPSL2, SpcHypElt -&gt; SpcHypElt
3<->tg-fundamental-domains :<->text1567.htm#17579<->tg-fundamental-domains :: Fundamental Domain (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->tg-cm-points :<->text1567.htm#17581<->tg-cm-points :: CM Points (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
5<->HypergeometricSeries2F1(A,B,C,z) <->text1567.htm#17582<->HypergeometricSeries2F1(A,B,C,z) : FldRatElt, FldRatElt, FldRatElt, FldComElt -&gt; FldComElt
4<->GrpPSL2Shim_Hypergeometric2F1 (Example H137E8)<->text1567.htm#17583<->GrpPSL2Shim_Hypergeometric2F1 (Example H137E8)
4<->Example-Hypergeometric2F1 :<->text1567.htm#17583<->Example-Hypergeometric2F1 :: GrpPSL2Shim_Hypergeometric2F1 (Example H137E8)
5<->ShimuraConjugates(mu) <->text1567.htm#17584<->ShimuraConjugates(mu) : AlgAssVOrdElt -&gt; SeqEnum
5<->jParameter(G,z) <->text1567.htm#17585<->jParameter(G,z) : GrpPSL2, SpcHypElt -&gt; FldComElt, SeqEnum
4<->GrpPSL2Shim_Triangle239CMPoints1 (Example H137E9)<->text1567.htm#17586<->GrpPSL2Shim_Triangle239CMPoints1 (Example H137E9)
4<->Example-Triangle239CMPoints1 :<->text1567.htm#17586<->Example-Triangle239CMPoints1 :: GrpPSL2Shim_Triangle239CMPoints1 (Example H137E9)
5<->CMPoints(G,mu) <->text1567.htm#17587<->CMPoints(G,mu) : GrpPSL2, AlgAssVOrdElt -&gt; RngUPolElt, SeqEnum
4<->GrpPSL2Shim_Triangle239CMPoints2 (Example H137E10)<->text1567.htm#17588<->GrpPSL2Shim_Triangle239CMPoints2 (Example H137E10)
4<->Example-Triangle239CMPoints2 :<->text1567.htm#17588<->Example-Triangle239CMPoints2 :: GrpPSL2Shim_Triangle239CMPoints2 (Example H137E10)
3<->tg-cm-points :<->text1567.htm#17581<->tg-cm-points :: CM Points (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->triangle-groups :<->text1567.htm<->triangle-groups :: Triangle Groups (ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES)
3<->GrpPSL2Shim :<->text1563.htm<->GrpPSL2Shim :: ARITHMETIC FUCHSIAN GROUPS AND SHIMURA CURVES
3<->modular-forms :<->text1570.htm<->modular-forms :: MODULAR FORMS
3<->introduction :<->text1571.htm<->introduction :: Introduction (MODULAR FORMS)
3<->modular-forms :<->text1571.htm#17593<->modular-forms :: Modular Forms (MODULAR FORMS)
3<->status :<->text1571.htm#17594<->status :: About the Package (MODULAR FORMS)
3<->categories :<->text1571.htm#17595<->categories :: Categories (MODULAR FORMS)
3<->verbose :<->text1571.htm#17596<->verbose :: Verbose Output (MODULAR FORMS)
4<->ModFrm_Basics (Example H138E1)<->text1571.htm#17597<->ModFrm_Basics (Example H138E1)
4<->Example-Basics :<->text1571.htm#17597<->Example-Basics :: ModFrm_Basics (Example H138E1)
3<->verbose :<->text1571.htm#17596<->verbose :: Verbose Output (MODULAR FORMS)
3<->modular-forms :<->text1571.htm#17598<->modular-forms :: An Illustrative Overview (MODULAR FORMS)
4<->ModFrm_Overview (Example H138E2)<->text1571.htm#17599<->ModFrm_Overview (Example H138E2)
4<->Example-Overview :<->text1571.htm#17599<->Example-Overview :: ModFrm_Overview (Example H138E2)
3<->modular-forms :<->text1571.htm#17598<->modular-forms :: An Illustrative Overview (MODULAR FORMS)
3<->introduction :<->text1571.htm<->introduction :: Introduction (MODULAR FORMS)
3<->creation :<->text1572.htm<->creation :: Creation Functions (MODULAR FORMS)
3<->creation-ambient :<->text1572.htm#17601<->creation-ambient :: Ambient Spaces (MODULAR FORMS)
5<->ModularForms(N) <->text1572.htm#17602<->ModularForms(N) : RngIntElt -&gt; ModFrm
5<->ModularForms(N, k) <->text1572.htm#17603<->ModularForms(N, k) : RngIntElt, RngIntElt -&gt; ModFrm
5<->ModularForms(eps, k) <->text1572.htm#17604<->ModularForms(eps, k) : GrpDrchElt, RngIntElt -&gt; ModFrm
5<->ModularForms(chars, k) <->text1572.htm#17605<->ModularForms(chars, k) : [GrpDrchElt], RngIntElt -&gt; ModFrm
5<->ModularForms(G) <->text1572.htm#17606<->ModularForms(G) : GrpPSL2 -> ModFrm
5<->ModularForms(G, k) <->text1572.htm#17606<->ModularForms(G, k) : GrpPSL2, RngIntElt -&gt; ModFrm
5<->CuspForms(x, y) <->text1572.htm#17607<->CuspForms(x, y) : Any, Any -> ModFrm
5<->CuspForms(x) <->text1572.htm#17607<->CuspForms(x) : Any -&gt; ModFrm
4<->ModFrm_Creation-Space (Example H138E3)<->text1572.htm#17608<->ModFrm_Creation-Space (Example H138E3)
4<->Example-Creation-Space :<->text1572.htm#17608<->Example-Creation-Space :: ModFrm_Creation-Space (Example H138E3)
3<->half-integral-weight-forms :<->text1572.htm#17609<->half-integral-weight-forms :: Half-integral Weight Forms (MODULAR FORMS)
5<->HalfIntegralWeightForms(N, w) <->text1572.htm#17610<->HalfIntegralWeightForms(N, w) : RngIntElt, FldRatElt -&gt; ModFrm
5<->HalfIntegralWeightForms(chi, w) <->text1572.htm#17611<->HalfIntegralWeightForms(chi, w) : GrpDrchElt, FldRatElt -&gt; ModFrm
5<->HalfIntegralWeightForms(G, w) <->text1572.htm#17612<->HalfIntegralWeightForms(G, w) : GrpPSL2, FldRatElt -&gt; ModFrm
3<->half-integral-weight-forms :<->text1572.htm#17609<->half-integral-weight-forms :: Half-integral Weight Forms (MODULAR FORMS)
3<->creation-ambient :<->text1572.htm#17601<->creation-ambient :: Ambient Spaces (MODULAR FORMS)
3<->base-extend :<->text1572.htm#17613<->base-extend :: Base Extension (MODULAR FORMS)
5<->BaseExtend(M, R) <->text1572.htm#17614<->BaseExtend(M, R) : ModFrm, Rng -&gt; ModFrm, Map
5<->BaseExtend(M, phi) <->text1572.htm#17615<->BaseExtend(M, phi) : ModFrm, Map -&gt; ModFrm, Map
4<->ModFrm_BaseExtend (Example H138E4)<->text1572.htm#17616<->ModFrm_BaseExtend (Example H138E4)
4<->Example-BaseExtend :<->text1572.htm#17616<->Example-BaseExtend :: ModFrm_BaseExtend (Example H138E4)
3<->base-extend :<->text1572.htm#17613<->base-extend :: Base Extension (MODULAR FORMS)
3<->creation-elements :<->text1572.htm#17617<->creation-elements :: Elements (MODULAR FORMS)
5<->M . i <->text1572.htm#17618<->M . i : ModFrm, RngIntElt -&gt; ModFrmElt
5<->M ! f <->text1572.htm#17619<->M ! f : ModFrm, . -&gt; ModFrmElt
5<->ModularForm(E) <->text1572.htm#17620<->ModularForm(E) : CrvEll -&gt; ModFrm
4<->ModFrm_CreationElements (Example H138E5)<->text1572.htm#17621<->ModFrm_CreationElements (Example H138E5)
4<->Example-CreationElements :<->text1572.htm#17621<->Example-CreationElements :: ModFrm_CreationElements (Example H138E5)
3<->creation-elements :<->text1572.htm#17617<->creation-elements :: Elements (MODULAR FORMS)
3<->creation :<->text1572.htm<->creation :: Creation Functions (MODULAR FORMS)
3<->Bases (MODULAR FORMS)<->text1573.htm<->Bases (MODULAR FORMS)
5<->Basis(M) <->text1573.htm#17623<->Basis(M) : ModFrm -&gt; SeqEnum
5<->qExpansionBasis :: Basis(M, prec) <->text1573.htm#17624<->qExpansionBasis :: Basis(M, prec) : ModFrm, RngIntElt -&gt; [RngSerPowElt]
5<->Basis(M, prec) <->text1573.htm#17624<->Basis(M, prec) : ModFrm, RngIntElt -&gt; [RngSerPowElt]
5<->PrecisionBound(M : parameters) <->text1573.htm#17625<->PrecisionBound(M : parameters) : ModFrm  -&gt; RngIntElt
5<->RSpace :: RModule(M) <->text1573.htm#17626<->RSpace :: RModule(M) : ModFrm -&gt; ModTupRng, Map
5<->VectorSpace :: RModule(M) <->text1573.htm#17626<->VectorSpace :: RModule(M) : ModFrm -&gt; ModTupRng, Map
5<->RModule(M) <->text1573.htm#17626<->RModule(M) : ModFrm -&gt; ModTupRng, Map
4<->ModFrm_Bases (Example H138E6)<->text1573.htm#17627<->ModFrm_Bases (Example H138E6)
4<->Example-Bases :<->text1573.htm#17627<->Example-Bases :: ModFrm_Bases (Example H138E6)
3<->Bases (MODULAR FORMS)<->text1573.htm<->Bases (MODULAR FORMS)
3<->q-expansions :<->text1574.htm<->q-expansions :: q-Expansions (MODULAR FORMS)
5<->qExpansion(f, prec) <->text1574.htm#17629<->qExpansion(f, prec) : ModFrmElt, RngIntElt -> RngSerPowElt
5<->PowerSeries :: qExpansion(f) <->text1574.htm#17629<->PowerSeries :: qExpansion(f) : ModFrmElt -&gt; RngSerPowElt
5<->PowerSeries(f, prec) : ModFrmElt, RngIntElt -> RngSerPowElt :: qExpansion(f) <->text1574.htm#17629<->PowerSeries(f, prec) : ModFrmElt, RngIntElt -> RngSerPowElt :: qExpansion(f) : ModFrmElt -&gt; RngSerPowElt
5<->qExpansion(f) <->text1574.htm#17629<->qExpansion(f) : ModFrmElt -&gt; RngSerPowElt
5<->Coefficient(f, n) <->text1574.htm#17630<->Coefficient(f, n) : ModFrmElt, RngIntElt -&gt; RngElt
5<->SetPrecision :: Precision(M) <->text1574.htm#17631<->SetPrecision :: Precision(M) : ModFrm -&gt; RngIntElt
5<->Precision(M) <->text1574.htm#17631<->Precision(M) : ModFrm -&gt; RngIntElt
4<->ModFrm_qExpansion (Example H138E7)<->text1574.htm#17632<->ModFrm_qExpansion (Example H138E7)
4<->Example-qExpansion :<->text1574.htm#17632<->Example-qExpansion :: ModFrm_qExpansion (Example H138E7)
4<->ModFrm_WeierstrassPoints (Example H138E8)<->text1574.htm#17633<->ModFrm_WeierstrassPoints (Example H138E8)
4<->Example-WeierstrassPoints :<->text1574.htm#17633<->Example-WeierstrassPoints :: ModFrm_WeierstrassPoints (Example H138E8)
3<->q-expansions :<->text1574.htm<->q-expansions :: q-Expansions (MODULAR FORMS)
3<->arithmetic :<->text1575.htm<->arithmetic :: Arithmetic (MODULAR FORMS)
5<->f + g <->text1575.htm#17635<->f + g : ModFrmElt, ModFrmElt -&gt; ModFrmElt
5<->f + g <->text1575.htm#17636<->f + g : ModFrmElt, RngSerPowElt -&gt; RngSerPowElt
5<->f - g <->text1575.htm#17637<->f - g : ModFrmElt, ModFrmElt -&gt; ModFrmElt
5<->a * f <->text1575.htm#17638<->a * f : RngElt, ModFrmElt -&gt; ModFrmElt
5<->f / a <->text1575.htm#17639<->f / a : ModFrmElt, RngElt -&gt; ModFrmElt
5<->f ^ n <->text1575.htm#17640<->f ^ n : ModFrmElt, RngIntElt -&gt; ModFrmElt
5<->f * g <->text1575.htm#17641<->f * g : ModFrmElt, ModFrmElt -&gt; ModFrmElt
4<->ModFrm_Arithmetic (Example H138E9)<->text1575.htm#17642<->ModFrm_Arithmetic (Example H138E9)
4<->Example-Arithmetic :<->text1575.htm#17642<->Example-Arithmetic :: ModFrm_Arithmetic (Example H138E9)
3<->arithmetic :<->text1575.htm<->arithmetic :: Arithmetic (MODULAR FORMS)
3<->predicates :<->text1576.htm<->predicates :: Predicates (MODULAR FORMS)
5<->IsAmbientSpace(M) <->text1576.htm#17644<->IsAmbientSpace(M) : ModFrm -&gt; BoolElt
5<->IsCuspidal(M) <->text1576.htm#17645<->IsCuspidal(M) : ModFrm -&gt; BoolElt
5<->IsEisenstein(M) <->text1576.htm#17646<->IsEisenstein(M) : ModFrm -&gt; BoolElt
5<->IsEisensteinSeries(f) <->text1576.htm#17647<->IsEisensteinSeries(f) : ModFrmElt -&gt; BoolElt
5<->IsGamma0(M) <->text1576.htm#17648<->IsGamma0(M) : ModFrm -&gt; BoolElt
5<->IsGamma1(M) <->text1576.htm#17649<->IsGamma1(M) : ModFrm -&gt; BoolElt
5<->IsNew(M) <->text1576.htm#17650<->IsNew(M) : ModFrm -&gt; BoolElt
5<->IsNewform(f) <->text1576.htm#17651<->IsNewform(f) : ModFrmElt -&gt; BoolElt
5<->IsRingOfAllModularForms(M) <->text1576.htm#17652<->IsRingOfAllModularForms(M) : ModFrm -&gt; BoolElt
4<->ModFrm_Predicates (Example H138E10)<->text1576.htm#17653<->ModFrm_Predicates (Example H138E10)
4<->Example-Predicates :<->text1576.htm#17653<->Example-Predicates :: ModFrm_Predicates (Example H138E10)
3<->predicates :<->text1576.htm<->predicates :: Predicates (MODULAR FORMS)
3<->properties :<->text1577.htm<->properties :: Properties (MODULAR FORMS)
5<->AmbientSpace(M) <->text1577.htm#17655<->AmbientSpace(M) : ModFrm -&gt; ModFrm
5<->CoefficientRing :: BaseRing(M) <->text1577.htm#17656<->CoefficientRing :: BaseRing(M) : ModFrm -&gt; Rng
5<->BaseRing(M) <->text1577.htm#17656<->BaseRing(M) : ModFrm -&gt; Rng
5<->Degree(f) <->text1577.htm#17657<->Degree(f) : ModFrmElt -&gt; RngIntElt
5<->Dimension(M) <->text1577.htm#17658<->Dimension(M) : ModFrm -&gt; RngIntElt
5<->DimensionByFormula(M) <->text1577.htm#17659<->DimensionByFormula(M) : ModFrm -&gt; RngIntElt
5<->DimensionByFormula(chi, k) <->text1577.htm#17660<->DimensionByFormula(chi, k) : GrpDrchElt, FldRatElt -> RngIntElt
5<->DimensionByFormula(N, chi, k) <->text1577.htm#17660<->DimensionByFormula(N, chi, k) : RngIntElt, GrpDrchElt, FldRatElt -> RngIntElt
5<->DimensionByFormula(N, k) <->text1577.htm#17660<->DimensionByFormula(N, k) : RngIntElt, FldRatElt -&gt; RngIntElt
5<->DirichletCharacters(M) <->text1577.htm#17661<->DirichletCharacters(M) : ModFrm -&gt; [GrpDrchElt]
5<->DirichletCharacter(f) <->text1577.htm#17662<->DirichletCharacter(f) : ModFrmElt -&gt; GrpDrchElt
5<->Eltseq(f) <->text1577.htm#17663<->Eltseq(f) : ModFrmElt -&gt; SeqEnum
5<->Level(f) <->text1577.htm#17664<->Level(f) : ModFrmElt -&gt; RngIntElt
5<->Level(M) <->text1577.htm#17665<->Level(M) : ModFrm -&gt; RngIntElt
5<->Weight(f) <->text1577.htm#17666<->Weight(f) : ModFrmElt -&gt; RngIntElt
5<->Weight(M) <->text1577.htm#17667<->Weight(M) : ModFrm -&gt; RngIntElt
5<->WeightOneHalfData(H) <->text1577.htm#17668<->WeightOneHalfData(H) : ModFrm -&gt; List
4<->ModFrm_Properties (Example H138E11)<->text1577.htm#17669<->ModFrm_Properties (Example H138E11)
4<->Example-Properties :<->text1577.htm#17669<->Example-Properties :: ModFrm_Properties (Example H138E11)
3<->properties :<->text1577.htm<->properties :: Properties (MODULAR FORMS)
3<->subspaces :<->text1578.htm<->subspaces :: Subspaces (MODULAR FORMS)
5<->ZeroSubspace(M) <->text1578.htm#17671<->ZeroSubspace(M) : ModFrm  -&gt; ModFrm
5<->CuspidalSubspace(M) <->text1578.htm#17672<->CuspidalSubspace(M) : ModFrm -&gt; ModFrm
5<->EisensteinSubspace(M) <->text1578.htm#17673<->EisensteinSubspace(M) : ModFrm -&gt; ModFrm
5<->CuspidalProjection :: EisensteinProjection(f) <->text1578.htm#17674<->CuspidalProjection :: EisensteinProjection(f) : ModFrmElt -&gt; ModFrmElt
5<->EisensteinProjection(f) <->text1578.htm#17674<->EisensteinProjection(f) : ModFrmElt -&gt; ModFrmElt
5<->NewSubspace(M) <->text1578.htm#17675<->NewSubspace(M) : ModFrm -&gt; ModFrm
5<->DihedralSubspace(M) <->text1578.htm#17676<->DihedralSubspace(M) : ModFrm -&gt; ModFrm
4<->ModFrm_Subspaces (Example H138E12)<->text1578.htm#17677<->ModFrm_Subspaces (Example H138E12)
4<->Example-Subspaces :<->text1578.htm#17677<->Example-Subspaces :: ModFrm_Subspaces (Example H138E12)
3<->subspaces :<->text1578.htm<->subspaces :: Subspaces (MODULAR FORMS)
3<->operators :<->text1579.htm<->operators :: Operators (MODULAR FORMS)
5<->HeckeOperator(M, n) <->text1579.htm#17679<->HeckeOperator(M, n) : ModFrm, RngIntElt -&gt; AlgMatElt
5<->HeckeOperator(n,f) <->text1579.htm#17680<->HeckeOperator(n,f) : RngIntElt, ModFrmElt -&gt; ModFrmElt
5<->HeckePolynomial(M, n : parameters) <->text1579.htm#17681<->HeckePolynomial(M, n : parameters) : ModFrm, RngIntElt -&gt; RngUPolElt
5<->AtkinLehnerOperator(M, q) <->text1579.htm#17682<->AtkinLehnerOperator(M, q) : ModFrm, RngIntElt -&gt; AlgMatElt
5<->AtkinLehnerOperator(q,f) <->text1579.htm#17683<->AtkinLehnerOperator(q,f) : RngIntElt, ModFrmElt -&gt; ModFrmElt
4<->ModFrm_HeckePolynomials (Example H138E13)<->text1579.htm#17684<->ModFrm_HeckePolynomials (Example H138E13)
4<->Example-HeckePolynomials :<->text1579.htm#17684<->Example-HeckePolynomials :: ModFrm_HeckePolynomials (Example H138E13)
3<->operators :<->text1579.htm<->operators :: Operators (MODULAR FORMS)
3<->eisenstein-series :<->text1580.htm<->eisenstein-series :: Eisenstein Series (MODULAR FORMS)
5<->EisensteinSeries(M) <->text1580.htm#17686<->EisensteinSeries(M) : ModFrm -&gt; List
5<->IsEisensteinSeries(f) <->text1580.htm#17687<->IsEisensteinSeries(f) : ModFrmElt -&gt; BoolElt
5<->EisensteinData(f) <->text1580.htm#17688<->EisensteinData(f) : ModFrmElt -&gt; Tup
4<->ModFrm_EisensteinSeries (Example H138E14)<->text1580.htm#17689<->ModFrm_EisensteinSeries (Example H138E14)
4<->Example-EisensteinSeries :<->text1580.htm#17689<->Example-EisensteinSeries :: ModFrm_EisensteinSeries (Example H138E14)
3<->eisenstein-series :<->text1580.htm<->eisenstein-series :: Eisenstein Series (MODULAR FORMS)
3<->weight-half-forms :<->text1581.htm<->weight-half-forms :: Weight Half Forms (MODULAR FORMS)
5<->WeightOneHalfData(M) <->text1581.htm#17691<->WeightOneHalfData(M) : ModFrm -&gt; List
3<->weight-half-forms :<->text1581.htm<->weight-half-forms :: Weight Half Forms (MODULAR FORMS)
3<->weight-one-forms :<->text1582.htm<->weight-one-forms :: Weight One Forms (MODULAR FORMS)
5<->DihedralForms(M) <->text1582.htm#17693<->DihedralForms(M) : ModFrm -&gt; List
3<->weight-one-forms :<->text1582.htm<->weight-one-forms :: Weight One Forms (MODULAR FORMS)
3<->newforms :<->text1583.htm<->newforms :: Newforms (MODULAR FORMS)
5<->NumberOfNewformClasses(M : parameters) <->text1583.htm#17695<->NumberOfNewformClasses(M : parameters) : ModFrm  -&gt; RngIntElt
5<->Newform(M, i, j : parameters) <->text1583.htm#17696<->Newform(M, i, j : parameters) : ModFrm, RngIntElt, RngIntElt  -&gt; ModFrmElt
5<->Newform(M, i : parameters) <->text1583.htm#17697<->Newform(M, i : parameters) : ModFrm, RngIntElt -&gt; ModFrmElt
5<->Newforms(M : parameters) <->text1583.htm#17698<->Newforms(M : parameters) : ModFrm -&gt; List
5<->Newforms(I, M) <->text1583.htm#17699<->Newforms(I, M) : [Tup], ModFrm -&gt; ModFrm
4<->ModFrm_Newforms (Example H138E15)<->text1583.htm#17700<->ModFrm_Newforms (Example H138E15)
4<->Example-Newforms :<->text1583.htm#17700<->Example-Newforms :: ModFrm_Newforms (Example H138E15)
3<->creation-labels :<->text1583.htm#17701<->creation-labels :: Labels (MODULAR FORMS)
5<->Newforms(label) <->text1583.htm#17702<->Newforms(label) : MonStgElt -&gt; ModFrmElt
4<->ModFrm_NewformLabeling (Example H138E16)<->text1583.htm#17703<->ModFrm_NewformLabeling (Example H138E16)
4<->Example-NewformLabeling :<->text1583.htm#17703<->Example-NewformLabeling :: ModFrm_NewformLabeling (Example H138E16)
3<->creation-labels :<->text1583.htm#17701<->creation-labels :: Labels (MODULAR FORMS)
3<->newforms :<->text1583.htm<->newforms :: Newforms (MODULAR FORMS)
3<->reductions-embeddings :<->text1584.htm<->reductions-embeddings :: Reductions and Embeddings (MODULAR FORMS)
5<->Reductions(f, p) <->text1584.htm#17705<->Reductions(f, p) : ModFrmElt, RngIntElt -&gt; List
5<->pAdicEmbeddings(f, p) <->text1584.htm#17706<->pAdicEmbeddings(f, p) : ModFrmElt, RngIntElt -&gt; List
5<->ComplexEmbeddings(f) <->text1584.htm#17707<->ComplexEmbeddings(f) : ModFrmElt -&gt; List
4<->ModFrm_ReductionsAndEmbeddings (Example H138E17)<->text1584.htm#17708<->ModFrm_ReductionsAndEmbeddings (Example H138E17)
4<->Example-ReductionsAndEmbeddings :<->text1584.htm#17708<->Example-ReductionsAndEmbeddings :: ModFrm_ReductionsAndEmbeddings (Example H138E17)
3<->reductions-embeddings :<->text1584.htm<->reductions-embeddings :: Reductions and Embeddings (MODULAR FORMS)
3<->congruences :<->text1585.htm<->congruences :: Congruences (MODULAR FORMS)
5<->CongruenceGroup(M1, M2, prec) <->text1585.htm#17710<->CongruenceGroup(M1, M2, prec) : ModFrm, ModFrm, RngIntElt -&gt; GrpAb
5<->CongruenceGroupAnemic(M1, M2, prec) <->text1585.htm#17711<->CongruenceGroupAnemic(M1, M2, prec) : ModFrm, ModFrm, RngIntElt -&gt; GrpAb
4<->ModFrm_Congruences (Example H138E18)<->text1585.htm#17712<->ModFrm_Congruences (Example H138E18)
4<->Example-Congruences :<->text1585.htm#17712<->Example-Congruences :: ModFrm_Congruences (Example H138E18)
3<->congruences :<->text1585.htm<->congruences :: Congruences (MODULAR FORMS)
3<->overconvergent :<->text1586.htm<->overconvergent :: Overconvergent Modular  Forms (MODULAR FORMS)
5<->OverconvergentHeckeSeriesDegreeBound(p, N, k, m) <->text1586.htm#17714<->OverconvergentHeckeSeriesDegreeBound(p, N, k, m) : RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->OverconvergentHeckeSeries(p, N, k, m) <->text1586.htm#17715<->OverconvergentHeckeSeries(p, N, k, m) : RngIntElt, RngIntElt, [ RngIntElt ], RngIntElt -> [ RngUPolElt ]
5<->OverconvergentHeckeSeries(p, chi, k, m) <->text1586.htm#17715<->OverconvergentHeckeSeries(p, chi, k, m) : RngIntElt, GrpDrchElt, RngIntElt, RngIntElt -> RngUPolElt, RngPadElt
5<->OverconvergentHeckeSeries(p, chi, k, m) <->text1586.htm#17715<->OverconvergentHeckeSeries(p, chi, k, m) : RngIntElt, GrpDrchElt, [ RngIntElt ], RngIntElt -> [ RngUPolElt ], RngPadElt
5<->OverconvergentHeckeSeries(p, N, k, m) <->text1586.htm#17715<->OverconvergentHeckeSeries(p, N, k, m) : RngIntElt, RngIntElt, RngIntElt, RngIntElt -&gt; RngUPolElt
4<->ModFrm_overconvergent (Example H138E19)<->text1586.htm#17716<->ModFrm_overconvergent (Example H138E19)
4<->Example-overconvergent :<->text1586.htm#17716<->Example-overconvergent :: ModFrm_overconvergent (Example H138E19)
3<->overconvergent :<->text1586.htm<->overconvergent :: Overconvergent Modular  Forms (MODULAR FORMS)
3<->relations :<->text1587.htm<->relations :: Algebraic Relations (MODULAR FORMS)
5<->Relations(M, d, prec) <->text1587.htm#17718<->Relations(M, d, prec) : ModFrm, RngIntElt, RngIntElt -&gt; SeqEnum
4<->ModFrm_Relations (Example H138E20)<->text1587.htm#17719<->ModFrm_Relations (Example H138E20)
4<->Example-Relations :<->text1587.htm#17719<->Example-Relations :: ModFrm_Relations (Example H138E20)
3<->relations :<->text1587.htm<->relations :: Algebraic Relations (MODULAR FORMS)
3<->abelian-varieties :<->text1588.htm<->abelian-varieties :: Elliptic Curves (MODULAR FORMS)
5<->Newform :: ModularForm(E) <->text1588.htm#17721<->Newform :: ModularForm(E) : CrvEll -&gt; ModFrmElt
5<->ModularForm(E) <->text1588.htm#17721<->ModularForm(E) : CrvEll -&gt; ModFrmElt
5<->qEigenform :: Eigenform(E, prec) <->text1588.htm#17722<->qEigenform :: Eigenform(E, prec) : CrvEll, RngIntElt -&gt; RngSerPowElt
5<->Eigenform(E, prec) <->text1588.htm#17722<->Eigenform(E, prec) : CrvEll, RngIntElt -&gt; RngSerPowElt
5<->EllipticCurve(f) <->text1588.htm#17723<->EllipticCurve(f) : ModFrmElt -&gt; CrvEll
4<->ModFrm_EllipticCurves (Example H138E21)<->text1588.htm#17724<->ModFrm_EllipticCurves (Example H138E21)
4<->Example-EllipticCurves :<->text1588.htm#17724<->Example-EllipticCurves :: ModFrm_EllipticCurves (Example H138E21)
3<->abelian-varieties :<->text1588.htm<->abelian-varieties :: Elliptic Curves (MODULAR FORMS)
3<->modular-symbols :<->text1589.htm<->modular-symbols :: Modular Symbols (MODULAR FORMS)
5<->ModularSymbols(M) <->text1589.htm#17726<->ModularSymbols(M) : ModFrm -&gt; SeqEnum
5<->ModularSymbols(M, sign) <->text1589.htm#17727<->ModularSymbols(M, sign) : ModFrm, RngIntElt -&gt; ModSym
4<->ModFrm_ModularSymbols (Example H138E22)<->text1589.htm#17728<->ModFrm_ModularSymbols (Example H138E22)
4<->Example-ModularSymbols :<->text1589.htm#17728<->Example-ModularSymbols :: ModFrm_ModularSymbols (Example H138E22)
3<->modular-symbols :<->text1589.htm<->modular-symbols :: Modular Symbols (MODULAR FORMS)
3<->modular-forms :<->text1570.htm<->modular-forms :: MODULAR FORMS
3<->modular-symbol :<->text1592.htm<->modular-symbol :: MODULAR SYMBOLS
3<->introduction :<->text1593.htm<->introduction :: Introduction (MODULAR SYMBOLS)
3<->modular-symbols :<->text1593.htm#17733<->modular-symbols :: Modular Symbols (MODULAR SYMBOLS)
3<->introduction :<->text1593.htm<->introduction :: Introduction (MODULAR SYMBOLS)
3<->introduction :<->text1594.htm<->introduction :: Basics (MODULAR SYMBOLS)
3<->verbose :<->text1594.htm#17735<->verbose :: Verbose Output (MODULAR SYMBOLS)
3<->categories :<->text1594.htm#17736<->categories :: Categories (MODULAR SYMBOLS)
4<->ModSym_Creation (Example H139E1)<->text1594.htm#17737<->ModSym_Creation (Example H139E1)
4<->Example-Creation :<->text1594.htm#17737<->Example-Creation :: ModSym_Creation (Example H139E1)
3<->categories :<->text1594.htm#17736<->categories :: Categories (MODULAR SYMBOLS)
3<->introduction :<->text1594.htm<->introduction :: Basics (MODULAR SYMBOLS)
3<->creation :<->text1595.htm<->creation :: Creation Functions (MODULAR SYMBOLS)
3<->creation-ambient :<->text1595.htm#17739<->creation-ambient :: Ambient Spaces (MODULAR SYMBOLS)
5<->ModularSymbols(N) <->text1595.htm#17740<->ModularSymbols(N) : RngIntElt -&gt; ModSym
5<->ModularSymbols(N, k) <->text1595.htm#17741<->ModularSymbols(N, k) : RngIntElt, RngIntElt -&gt; ModSym
5<->ModularSymbols(N, k, F) <->text1595.htm#17742<->ModularSymbols(N, k, F) : RngIntElt, RngIntElt, Fld -&gt; ModSym
5<->ModularSymbols(N, k, sign) <->text1595.htm#17743<->ModularSymbols(N, k, sign) : RngIntElt, RngIntElt, RngIntElt -&gt; ModSym
5<->ModularSymbols(N, k, F, sign) <->text1595.htm#17744<->ModularSymbols(N, k, F, sign) : RngIntElt, RngIntElt, Fld, RngIntElt -&gt; ModSym
5<->ModularSymbols(eps, k) <->text1595.htm#17745<->ModularSymbols(eps, k) : GrpDrchElt, RngIntElt -&gt; ModSym
5<->ModularSymbols(eps, k, sign) <->text1595.htm#17746<->ModularSymbols(eps, k, sign) : GrpDrchElt, RngIntElt, RngIntElt -&gt; ModSym
4<->ModSym_Creation-Ambient (Example H139E2)<->text1595.htm#17747<->ModSym_Creation-Ambient (Example H139E2)
4<->Example-Creation-Ambient :<->text1595.htm#17747<->Example-Creation-Ambient :: ModSym_Creation-Ambient (Example H139E2)
3<->creation-ambient :<->text1595.htm#17739<->creation-ambient :: Ambient Spaces (MODULAR SYMBOLS)
3<->creation-spaces :<->text1595.htm#17748<->creation-spaces :: Labels (MODULAR SYMBOLS)
5<->ModularSymbols(s) <->text1595.htm#17749<->ModularSymbols(s) : MonStgElt -> ModSym
5<->ModularSymbols(s, sign) <->text1595.htm#17749<->ModularSymbols(s, sign) : MonStgElt, RngIntElt -&gt; ModSym
4<->ModSym_Creation-Spaces (Example H139E3)<->text1595.htm#17750<->ModSym_Creation-Spaces (Example H139E3)
4<->Example-Creation-Spaces :<->text1595.htm#17750<->Example-Creation-Spaces :: ModSym_Creation-Spaces (Example H139E3)
3<->creation-spaces :<->text1595.htm#17748<->creation-spaces :: Labels (MODULAR SYMBOLS)
3<->creation-elements :<->text1595.htm#17751<->creation-elements :: Creation of Elements (MODULAR SYMBOLS)
4<->ModSym_Creation-Elements-1 (Example H139E4)<->text1595.htm#17752<->ModSym_Creation-Elements-1 (Example H139E4)
4<->Example-Creation-Elements-1 :<->text1595.htm#17752<->Example-Creation-Elements-1 :: ModSym_Creation-Elements-1 (Example H139E4)
4<->ModSym_RepresentationConversion (Example H139E5)<->text1595.htm#17753<->ModSym_RepresentationConversion (Example H139E5)
4<->Example-RepresentationConversion :<->text1595.htm#17753<->Example-RepresentationConversion :: ModSym_RepresentationConversion (Example H139E5)
5<->M ! x <->text1595.htm#17754<->M ! x : ModSym, . -&gt; ModSymElt
5<->ConvertFromManinSymbol(M, x) <->text1595.htm#17755<->ConvertFromManinSymbol(M, x) : ModSym, Tup -&gt; ModSymElt
5<->ManinSymbol(x) <->text1595.htm#17756<->ManinSymbol(x) : ModSymElt -&gt; SeqEnum
4<->ModSym_Creation-Elements-2 (Example H139E6)<->text1595.htm#17757<->ModSym_Creation-Elements-2 (Example H139E6)
4<->Example-Creation-Elements-2 :<->text1595.htm#17757<->Example-Creation-Elements-2 :: ModSym_Creation-Elements-2 (Example H139E6)
3<->creation-elements :<->text1595.htm#17751<->creation-elements :: Creation of Elements (MODULAR SYMBOLS)
3<->creation :<->text1595.htm<->creation :: Creation Functions (MODULAR SYMBOLS)
3<->bases :<->text1596.htm<->bases :: Bases (MODULAR SYMBOLS)
5<->Basis(M) <->text1596.htm#17759<->Basis(M) : ModSym -&gt; SeqEnum
5<->IntegralBasis(M) <->text1596.htm#17760<->IntegralBasis(M) : ModSym -&gt; SeqEnum
4<->ModSym_IntegralBasis (Example H139E7)<->text1596.htm#17761<->ModSym_IntegralBasis (Example H139E7)
4<->Example-IntegralBasis :<->text1596.htm#17761<->Example-IntegralBasis :: ModSym_IntegralBasis (Example H139E7)
3<->bases :<->text1596.htm<->bases :: Bases (MODULAR SYMBOLS)
3<->underlying-representation :<->text1597.htm<->underlying-representation :: Associated Vector Space (MODULAR SYMBOLS)
5<->VectorSpace(M) <->text1597.htm#17763<->VectorSpace(M) : ModSym -&gt; ModTupFld, Map, Map
5<->DualVectorSpace(M) <->text1597.htm#17764<->DualVectorSpace(M) : ModSym -&gt; ModTupFld
5<->Lattice(M) <->text1597.htm#17765<->Lattice(M) : ModSym -&gt; Lat
4<->ModSym_Representation (Example H139E8)<->text1597.htm#17766<->ModSym_Representation (Example H139E8)
4<->Example-Representation :<->text1597.htm#17766<->Example-Representation :: ModSym_Representation (Example H139E8)
3<->underlying-representation :<->text1597.htm<->underlying-representation :: Associated Vector Space (MODULAR SYMBOLS)
3<->changing-level :<->text1598.htm<->changing-level :: Degeneracy Maps (MODULAR SYMBOLS)
5<->DegeneracyMap(M1, M2, d) <->text1598.htm#17768<->DegeneracyMap(M1, M2, d) : ModSym, ModSym, RngIntElt -&gt; Map
5<->DegeneracyMatrix(M1, M2, d) <->text1598.htm#17769<->DegeneracyMatrix(M1, M2, d) : ModSym, ModSym, RngIntElt -&gt; AlgMatElt
5<->ModularSymbols(M, N') <->text1598.htm#17770<->ModularSymbols(M, N') : ModSym, RngIntElt -&gt; ModSym
5<->M1 !! M2 <->text1598.htm#17771<->M1 !! M2 : ModSym, ModSym -&gt; ModSym
4<->ModSym_Coercion-spaces (Example H139E9)<->text1598.htm#17772<->ModSym_Coercion-spaces (Example H139E9)
4<->Example-Coercion-spaces :<->text1598.htm#17772<->Example-Coercion-spaces :: ModSym_Coercion-spaces (Example H139E9)
3<->changing-level :<->text1598.htm<->changing-level :: Degeneracy Maps (MODULAR SYMBOLS)
3<->decomposition :<->text1599.htm<->decomposition :: Decomposition (MODULAR SYMBOLS)
5<->Decomposition(M, bound : parameters) <->text1599.htm#17774<->Decomposition(M, bound : parameters) : ModSym, RngIntElt -&gt; SeqEnum
5<->NewformDecomposition(M : parameters) <->text1599.htm#17775<->NewformDecomposition(M : parameters) : ModSym -&gt; SeqEnum
5<->AssociatedNewSpace(M) <->text1599.htm#17776<->AssociatedNewSpace(M) : ModSym -&gt; ModSym
5<->SortDecomposition(D) <->text1599.htm#17777<->SortDecomposition(D) : [ModSym] -&gt; SeqEnum
5<->IsIrreducible(M) <->text1599.htm#17778<->IsIrreducible(M) : ModSym -&gt; BoolElt
5<->M1 lt M2 <->text1599.htm#17779<->M1 lt M2 : ModSym, ModSym -&gt; BoolElt
4<->ModSym_Decomposition (Example H139E10)<->text1599.htm#17780<->ModSym_Decomposition (Example H139E10)
4<->Example-Decomposition :<->text1599.htm#17780<->Example-Decomposition :: ModSym_Decomposition (Example H139E10)
3<->decomposition :<->text1599.htm<->decomposition :: Decomposition (MODULAR SYMBOLS)
3<->subspaces :<->text1600.htm<->subspaces :: Subspaces (MODULAR SYMBOLS)
5<->CuspidalSubspace(M) <->text1600.htm#17782<->CuspidalSubspace(M) : ModSym -&gt; ModSym
5<->IsCuspidal(M) <->text1600.htm#17783<->IsCuspidal(M) : ModSym -&gt; BoolElt
5<->EisensteinSubspace(M) <->text1600.htm#17784<->EisensteinSubspace(M) : ModSym -&gt; ModSym
5<->IsEisenstein(M) <->text1600.htm#17785<->IsEisenstein(M) : ModSym -&gt; BoolElt
5<->NewSubspace(M) <->text1600.htm#17786<->NewSubspace(M) : ModSym-&gt; ModSym
5<->IsNew(M) <->text1600.htm#17787<->IsNew(M) : ModSym -&gt; BoolElt
5<->NewSubspace(M, p) <->text1600.htm#17788<->NewSubspace(M, p) : ModSym, RngIntElt -&gt; ModSym
5<->Kernel(I, M) <->text1600.htm#17789<->Kernel(I, M) : [Tup], ModSym -&gt; ModSym
5<->Complement(M) <->text1600.htm#17790<->Complement(M) : ModSym -&gt; ModSym
5<->BoundaryMap(M) <->text1600.htm#17791<->BoundaryMap(M) : ModSym -&gt; ModMatFldElt
4<->ModSym_Subspaces (Example H139E11)<->text1600.htm#17792<->ModSym_Subspaces (Example H139E11)
4<->Example-Subspaces :<->text1600.htm#17792<->Example-Subspaces :: ModSym_Subspaces (Example H139E11)
4<->ModSym_BoundaryMap (Example H139E12)<->text1600.htm#17793<->ModSym_BoundaryMap (Example H139E12)
4<->Example-BoundaryMap :<->text1600.htm#17793<->Example-BoundaryMap :: ModSym_BoundaryMap (Example H139E12)
3<->subspaces :<->text1600.htm<->subspaces :: Subspaces (MODULAR SYMBOLS)
3<->twists :<->text1601.htm<->twists :: Twists (MODULAR SYMBOLS)
5<->IsTwist(M1, M2, p) <->text1601.htm#17795<->IsTwist(M1, M2, p) : ModSym, ModSym, RngIntElt -&gt; BoolElt, GrpDrchElt
5<->IsMinimalTwist(M, p) <->text1601.htm#17796<->IsMinimalTwist(M, p) : ModSym, RngIntElt -&gt; BoolElt, ModSym, GrpDrchElt
4<->ModSym_example-twists (Example H139E13)<->text1601.htm#17797<->ModSym_example-twists (Example H139E13)
4<->Example-example-twists :<->text1601.htm#17797<->Example-example-twists :: ModSym_example-twists (Example H139E13)
3<->twists :<->text1601.htm<->twists :: Twists (MODULAR SYMBOLS)
3<->operators :<->text1602.htm<->operators :: Operators (MODULAR SYMBOLS)
4<->ModSym_HeckeOperators (Example H139E14)<->text1602.htm#17799<->ModSym_HeckeOperators (Example H139E14)
4<->Example-HeckeOperators :<->text1602.htm#17799<->Example-HeckeOperators :: ModSym_HeckeOperators (Example H139E14)
5<->HeckeOperator(M, n) <->text1602.htm#17800<->HeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt
5<->HeckePolynomial(M, n) <->text1602.htm#17801<->HeckePolynomial(M, n) : ModSym, RngIntElt -&gt; RngUPolResElt
5<->IntegralHeckeOperator(M, n) <->text1602.htm#17802<->IntegralHeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt
5<->DualHeckeOperator(M, n) <->text1602.htm#17803<->DualHeckeOperator(M, n) : ModSym, RngIntElt -&gt; AlgMatElt
5<->AtkinLehner(M, q) <->text1602.htm#17804<->AtkinLehner(M, q) : ModSym, RngIntElt -&gt; AlgMatElt
5<->DualAtkinLehner(M, q) <->text1602.htm#17805<->DualAtkinLehner(M, q) : ModSym, RngIntElt -&gt; AlgMatElt
5<->StarInvolution(M) <->text1602.htm#17806<->StarInvolution(M) : ModSym -&gt; AlgMatElt
5<->DualStarInvolution(M) <->text1602.htm#17807<->DualStarInvolution(M) : ModSym -&gt; AlgMatElt
5<->ThetaOperator(M1, M2) <->text1602.htm#17808<->ThetaOperator(M1, M2) : ModSym, ModSym  -&gt; Map
4<->ModSym_Operators (Example H139E15)<->text1602.htm#17809<->ModSym_Operators (Example H139E15)
4<->Example-Operators :<->text1602.htm#17809<->Example-Operators :: ModSym_Operators (Example H139E15)
4<->ModSym_ThetaOperator (Example H139E16)<->text1602.htm#17810<->ModSym_ThetaOperator (Example H139E16)
4<->Example-ThetaOperator :<->text1602.htm#17810<->Example-ThetaOperator :: ModSym_ThetaOperator (Example H139E16)
3<->operators :<->text1602.htm<->operators :: Operators (MODULAR SYMBOLS)
3<->hecke-algebra :<->text1603.htm<->hecke-algebra :: The Hecke Algebra (MODULAR SYMBOLS)
5<->HeckeBound(M) <->text1603.htm#17812<->HeckeBound(M) : ModSym -&gt; RngIntElt
5<->SetHeckeBound(M, n) <->text1603.htm#17813<->SetHeckeBound(M, n) : ModSym, RngIntElt -&gt; RngIntElt
5<->HeckeAlgebra(M : Bound) <->text1603.htm#17814<->HeckeAlgebra(M : Bound) : ModSym -&gt; AlgMat
5<->DiscriminantOfHeckeAlgebra(M : Bound) <->text1603.htm#17815<->DiscriminantOfHeckeAlgebra(M : Bound) : ModSym -&gt; RngIntElt
5<->HeckeEigenvalueRing(M : parameters) <->text1603.htm#17816<->HeckeEigenvalueRing(M : parameters) : ModSym -&gt; Rng, Map
5<->HeckeEigenvalueField(M) <->text1603.htm#17817<->HeckeEigenvalueField(M) : ModSym -&gt; Fld, Map
4<->ModSym_HeckeAlgebra (Example H139E17)<->text1603.htm#17818<->ModSym_HeckeAlgebra (Example H139E17)
4<->Example-HeckeAlgebra :<->text1603.htm#17818<->Example-HeckeAlgebra :: ModSym_HeckeAlgebra (Example H139E17)
3<->hecke-algebra :<->text1603.htm<->hecke-algebra :: The Hecke Algebra (MODULAR SYMBOLS)
3<->intersection_pairing :<->text1604.htm<->intersection_pairing :: The Intersection Pairing (MODULAR SYMBOLS)
5<->IntersectionPairing(x, y) <->text1604.htm#17820<->IntersectionPairing(x, y) : ModSymElt, ModSymElt -&gt; FldRatElt
4<->ModSym_IntersectionPairing (Example H139E18)<->text1604.htm#17821<->ModSym_IntersectionPairing (Example H139E18)
4<->Example-IntersectionPairing :<->text1604.htm#17821<->Example-IntersectionPairing :: ModSym_IntersectionPairing (Example H139E18)
3<->intersection_pairing :<->text1604.htm<->intersection_pairing :: The Intersection Pairing (MODULAR SYMBOLS)
3<->qexpansions :<->text1605.htm<->qexpansions :: q-Expansions (MODULAR SYMBOLS)
5<->Eigenform(M) <->text1605.htm#17823<->Eigenform(M) : ModSym -> RngSerPowElt
5<->qEigenform :: Eigenform(M, prec) <->text1605.htm#17823<->qEigenform :: Eigenform(M, prec) : ModSym, RngIntElt -&gt; RngSerPowElt
5<->qEigenform(M) : ModSym -> RngSerPowElt :: Eigenform(M, prec) <->text1605.htm#17823<->qEigenform(M) : ModSym -> RngSerPowElt :: Eigenform(M, prec) : ModSym, RngIntElt -&gt; RngSerPowElt
5<->PowerSeries :: Eigenform(M, prec) <->text1605.htm#17823<->PowerSeries :: Eigenform(M, prec) : ModSym, RngIntElt -&gt; RngSerPowElt
5<->PowerSeries(M) : ModSym -> RngSerPowElt :: Eigenform(M, prec) <->text1605.htm#17823<->PowerSeries(M) : ModSym -> RngSerPowElt :: Eigenform(M, prec) : ModSym, RngIntElt -&gt; RngSerPowElt
5<->Eigenform(M, prec) <->text1605.htm#17823<->Eigenform(M, prec) : ModSym, RngIntElt -&gt; RngSerPowElt
5<->qExpansionBasis(M, prec : parameters) <->text1605.htm#17824<->qExpansionBasis(M, prec : parameters) : ModSym, RngIntElt -&gt; SeqEnum
5<->qIntegralBasis(M, prec) <->text1605.htm#17825<->qIntegralBasis(M, prec) : ModSym, RngIntElt -> SeqEnum
5<->qIntegralBasis(seq, prec) <->text1605.htm#17825<->qIntegralBasis(seq, prec) : [ModSym], RngIntElt -> SeqEnum
5<->qIntegralBasis(M) <->text1605.htm#17825<->qIntegralBasis(M) : ModSym -&gt; SeqEnum
5<->SystemOfEigenvalues(M, prec) <->text1605.htm#17826<->SystemOfEigenvalues(M, prec) : ModSym, RngIntElt -&gt; SeqEnum
4<->ModSym_qExpansions (Example H139E19)<->text1605.htm#17827<->ModSym_qExpansions (Example H139E19)
4<->Example-qExpansions :<->text1605.htm#17827<->Example-qExpansions :: ModSym_qExpansions (Example H139E19)
3<->qexpansions :<->text1605.htm<->qexpansions :: q-Expansions (MODULAR SYMBOLS)
3<->l-series :<->text1606.htm<->l-series :: Special Values of L-functions (MODULAR SYMBOLS)
5<->LSeries(M, j, prec) <->text1606.htm#17829<->LSeries(M, j, prec) : ModSym, RngIntElt, RngIntElt -&gt; FldPrElt
5<->LSeriesLeadingCoefficient(M, j, prec) <->text1606.htm#17830<->LSeriesLeadingCoefficient(M, j, prec) : ModSym, RngIntElt, RngIntElt                            -&gt; FldPrElt, RngIntElt
5<->RealVolume(M, prec) <->text1606.htm#17831<->RealVolume(M, prec) : ModSym, RngIntElt -&gt; FldPrElt
5<->MinusVolume(M, prec) <->text1606.htm#17832<->MinusVolume(M, prec) : ModSym, RngIntElt -&gt; FldPrElt
5<->LRatio(M, j : parameters) <->text1606.htm#17833<->LRatio(M, j : parameters) : ModSym, RngIntElt -&gt; FldRatElt
5<->LRatioOddPart(M, j) <->text1606.htm#17834<->LRatioOddPart(M, j) : ModSym, RngIntElt -&gt; FldRatElt
4<->ModSym_LSeries (Example H139E20)<->text1606.htm#17835<->ModSym_LSeries (Example H139E20)
4<->Example-LSeries :<->text1606.htm#17835<->Example-LSeries :: ModSym_LSeries (Example H139E20)
3<->winding :<->text1606.htm#17836<->winding :: Winding Elements (MODULAR SYMBOLS)
5<->WindingElement(M) <->text1606.htm#17837<->WindingElement(M) : ModSym -&gt; ModSymElt
5<->WindingElement(M, i) <->text1606.htm#17838<->WindingElement(M, i) : ModSym, RngIntElt -&gt; ModSymElt
5<->TwistedWindingElement(M, i, eps) <->text1606.htm#17839<->TwistedWindingElement(M, i, eps) : ModSym, RngIntElt, GrpDrchElt -&gt; ModSymElt
5<->WindingLattice(M, j : parameters) <->text1606.htm#17840<->WindingLattice(M, j : parameters) : ModSym,                                      RngIntElt -&gt; Lat
5<->WindingSubmodule(M, j : parameters) <->text1606.htm#17841<->WindingSubmodule(M, j : parameters) : ModSym, RngIntElt -&gt; ModTupFld
5<->TwistedWindingSubmodule(M, j, eps) <->text1606.htm#17842<->TwistedWindingSubmodule(M, j, eps) : ModSym, RngIntElt,                                              GrpDrchElt -&gt; ModTupFld
3<->winding :<->text1606.htm#17836<->winding :: Winding Elements (MODULAR SYMBOLS)
3<->l-series :<->text1606.htm<->l-series :: Special Values of L-functions (MODULAR SYMBOLS)
3<->complex-tori :<->text1607.htm<->complex-tori :: The Associated Complex  Torus (MODULAR SYMBOLS)
5<->SubgroupOfTorus(M, x) <->text1607.htm#17844<->SubgroupOfTorus(M, x) : ModSym, ModSymElt -&gt; RngIntElt
5<->SubgroupOfTorus(M, s) <->text1607.htm#17845<->SubgroupOfTorus(M, s) : ModSym, SeqEnum -&gt; GrpAb
4<->ModSym_CuspidalSubgroup (Example H139E21)<->text1607.htm#17846<->ModSym_CuspidalSubgroup (Example H139E21)
4<->Example-CuspidalSubgroup :<->text1607.htm#17846<->Example-CuspidalSubgroup :: ModSym_CuspidalSubgroup (Example H139E21)
4<->ModSym_CuspidalSubgroupTable (Example H139E22)<->text1607.htm#17847<->ModSym_CuspidalSubgroupTable (Example H139E22)
4<->Example-CuspidalSubgroupTable :<->text1607.htm#17847<->Example-CuspidalSubgroupTable :: ModSym_CuspidalSubgroupTable (Example H139E22)
5<->ModularKernel(M) <->text1607.htm#17848<->ModularKernel(M) : ModSym -&gt; GrpAb
5<->CongruenceGroup(M : parameters) <->text1607.htm#17849<->CongruenceGroup(M : parameters) : ModSym -&gt; GrpAb
5<->IntersectionGroup(M1, M2) <->text1607.htm#17850<->IntersectionGroup(M1, M2) : ModSym, ModSym -&gt; GrpAb
5<->IntersectionGroup(S) <->text1607.htm#17851<->IntersectionGroup(S) : SeqEnum -&gt; GrpAb
4<->ModSym_BSD (Example H139E23)<->text1607.htm#17852<->ModSym_BSD (Example H139E23)
4<->Example-BSD :<->text1607.htm#17852<->Example-BSD :: ModSym_BSD (Example H139E23)
3<->period-map :<->text1607.htm#17853<->period-map :: The Period Map (MODULAR SYMBOLS)
5<->PeriodMapping(M, prec) <->text1607.htm#17854<->PeriodMapping(M, prec) : ModSym, RngIntElt -&gt; Map
5<->Periods(M, prec) <->text1607.htm#17855<->Periods(M, prec) : ModSym, RngIntElt -&gt; SeqEnum
5<->ClassicalPeriod(M, j, prec) <->text1607.htm#17856<->ClassicalPeriod(M, j, prec) : ModSym, RngIntElt, RngIntElt -&gt; FldPrElt
3<->period-map :<->text1607.htm#17853<->period-map :: The Period Map (MODULAR SYMBOLS)
3<->modular-abvars-rational :<->text1607.htm#17857<->modular-abvars-rational :: Projection Mappings (MODULAR SYMBOLS)
5<->RationalMapping(M) <->text1607.htm#17858<->RationalMapping(M) : ModSym -&gt; Map
5<->IntegralMapping(M) <->text1607.htm#17859<->IntegralMapping(M) : ModSym -&gt; Map
4<->ModSym_ModularAbVarRational (Example H139E24)<->text1607.htm#17860<->ModSym_ModularAbVarRational (Example H139E24)
4<->Example-ModularAbVarRational :<->text1607.htm#17860<->Example-ModularAbVarRational :: ModSym_ModularAbVarRational (Example H139E24)
3<->modular-abvars-rational :<->text1607.htm#17857<->modular-abvars-rational :: Projection Mappings (MODULAR SYMBOLS)
3<->complex-tori :<->text1607.htm<->complex-tori :: The Associated Complex  Torus (MODULAR SYMBOLS)
3<->modular-abvars :<->text1608.htm<->modular-abvars :: Modular Abelian Varieties (MODULAR SYMBOLS)
3<->modular-abvars-arith :<->text1608.htm#17862<->modular-abvars-arith :: Modular Degree and Torsion (MODULAR SYMBOLS)
5<->ModularDegree(M) <->text1608.htm#17863<->ModularDegree(M) : ModSym -&gt; RngIntElt
5<->CongruenceModulus(M : parameters) <->text1608.htm#17864<->CongruenceModulus(M : parameters) : ModSym -&gt; RngIntElt
5<->TorsionBound(M, maxp) <->text1608.htm#17865<->TorsionBound(M, maxp) : ModSym, RngIntElt -&gt; RngIntElt
4<->ModSym_ModularAbVarArithmetic (Example H139E25)<->text1608.htm#17866<->ModSym_ModularAbVarArithmetic (Example H139E25)
4<->Example-ModularAbVarArithmetic :<->text1608.htm#17866<->Example-ModularAbVarArithmetic :: ModSym_ModularAbVarArithmetic (Example H139E25)
3<->modular-abvars-arith :<->text1608.htm#17862<->modular-abvars-arith :: Modular Degree and Torsion (MODULAR SYMBOLS)
3<->modular-abvars-compgrp :<->text1608.htm#17867<->modular-abvars-compgrp :: Tamagawa Numbers and Orders of Component Groups (MODULAR SYMBOLS)
5<->ComponentGroupOrder(M, p) <->text1608.htm#17868<->ComponentGroupOrder(M, p) : ModSym, RngIntElt -&gt; RngIntElt
5<->TamagawaNumber(M, p) <->text1608.htm#17869<->TamagawaNumber(M, p) : ModSym, RngIntElt -&gt; RngIntElt
5<->RealTamagawaNumber(M) <->text1608.htm#17870<->RealTamagawaNumber(M) : ModSym -&gt; RngIntElt
5<->MinusTamagawaNumber(M) <->text1608.htm#17871<->MinusTamagawaNumber(M) : ModSym -&gt; RngIntElt
4<->ModSym_ModularAbVarCompGrp (Example H139E26)<->text1608.htm#17872<->ModSym_ModularAbVarCompGrp (Example H139E26)
4<->Example-ModularAbVarCompGrp :<->text1608.htm#17872<->Example-ModularAbVarCompGrp :: ModSym_ModularAbVarCompGrp (Example H139E26)
3<->modular-abvars-compgrp :<->text1608.htm#17867<->modular-abvars-compgrp :: Tamagawa Numbers and Orders of Component Groups (MODULAR SYMBOLS)
3<->modular-abvars :<->text1608.htm<->modular-abvars :: Modular Abelian Varieties (MODULAR SYMBOLS)
3<->elliptic-curves :<->text1609.htm<->elliptic-curves :: Elliptic Curves (MODULAR SYMBOLS)
5<->ModularSymbols(E, sign) <->text1609.htm#17874<->ModularSymbols(E, sign) : CrvEll, RngIntElt -> ModSym
5<->ModularSymbols(E) <->text1609.htm#17874<->ModularSymbols(E) : CrvEll -&gt; ModSym
5<->EllipticCurve(M) <->text1609.htm#17875<->EllipticCurve(M) : ModSym -&gt; CrvEll
5<->pAdicLSeries(E, p) <->text1609.htm#17876<->pAdicLSeries(E, p) : CrvEll, RngIntElt -&gt; RngSerPowElt
4<->ModSym_BSD389A (Example H139E27)<->text1609.htm#17877<->ModSym_BSD389A (Example H139E27)
4<->Example-BSD389A :<->text1609.htm#17877<->Example-BSD389A :: ModSym_BSD389A (Example H139E27)
3<->elliptic-curves :<->text1609.htm<->elliptic-curves :: Elliptic Curves (MODULAR SYMBOLS)
3<->dimension-formulas :<->text1610.htm<->dimension-formulas :: Dimension Formulas (MODULAR SYMBOLS)
5<->DimensionCuspFormsGamma0(N, k) <->text1610.htm#17879<->DimensionCuspFormsGamma0(N, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->DimensionNewCuspFormsGamma0(N, k) <->text1610.htm#17880<->DimensionNewCuspFormsGamma0(N, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->DimensionCuspFormsGamma1(N, k) <->text1610.htm#17881<->DimensionCuspFormsGamma1(N, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->DimensionNewCuspFormsGamma1(N, k) <->text1610.htm#17882<->DimensionNewCuspFormsGamma1(N, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->DimensionCuspForms(eps, k) <->text1610.htm#17883<->DimensionCuspForms(eps, k) : GrpDrchElt, RngIntElt -&gt; RngIntElt
4<->ModSym_DimensionFormulas (Example H139E28)<->text1610.htm#17884<->ModSym_DimensionFormulas (Example H139E28)
4<->Example-DimensionFormulas :<->text1610.htm#17884<->Example-DimensionFormulas :: ModSym_DimensionFormulas (Example H139E28)
3<->dimension-formulas :<->text1610.htm<->dimension-formulas :: Dimension Formulas (MODULAR SYMBOLS)
3<->modular-symbol :<->text1592.htm<->modular-symbol :: MODULAR SYMBOLS
3<->brandt-modules :<->text1613.htm<->brandt-modules :: BRANDT MODULES
3<->ModBrdt:introduction :<->text1614.htm<->ModBrdt:introduction :: Introduction (BRANDT MODULES)
3<->ModBrdt:brandt-modules :<->text1615.htm<->ModBrdt:brandt-modules :: Brandt Module Creation (BRANDT MODULES)
5<->BrandtModule(D, m) <->text1615.htm#17890<->BrandtModule(D, m) : RngIntElt, RngIntElt -> ModBrdt 
5<->BrandtModule(D) <->text1615.htm#17890<->BrandtModule(D) : RngIntElt -&gt; ModBrdt
5<->BrandtModule(A, R) <->text1615.htm#17891<->BrandtModule(A, R) : AlgQuatOrd, Rng -> ModBrdt
5<->BrandtModule(A) <->text1615.htm#17891<->BrandtModule(A) : AlgQuatOrd -&gt; ModBrdt
5<->BaseExtend(M, R) <->text1615.htm#17892<->BaseExtend(M, R) : ModBrdt, Rng -&gt; ModBrdt
5<->BrandtModule(M, N) <->text1615.htm#17893<->BrandtModule(M, N) : AlgQuatOrd, RngElt -&gt; ModBrdt
4<->ModBrdt_ModBrdt<->text1615.htm#17894<->ModBrdt_ModBrdt:Constructors (Example H140E1)
4<->Example-ModBrdt:Constructors :: ModBrdt_ModBrdt<->text1615.htm#17894<->Example-ModBrdt:Constructors :: ModBrdt_ModBrdt:Constructors (Example H140E1)
3<->Element-Creation :<->text1615.htm#17895<->Element-Creation :: Creation of Elements (BRANDT MODULES)
5<->M ! x <->text1615.htm#17896<->M ! x : ModBrdt, . -&gt; ModBrdtElt
5<->M . i <->text1615.htm#17897<->M . i : ModBrdt, RngIntElt -&gt; ModBrdtElt
3<->Element-Creation :<->text1615.htm#17895<->Element-Creation :: Creation of Elements (BRANDT MODULES)
3<->Element-Creation :<->text1615.htm#17898<->Element-Creation :: Operations on Elements (BRANDT MODULES)
5<->x * a <->text1615.htm#17899<->x * a : ModBrdtElt, RngElt -> ModBrdtElt
5<->a * x <->text1615.htm#17899<->a * x : RngElt, ModBrdtElt -&gt; ModBrdtElt
5<->x * T <->text1615.htm#17900<->x * T : ModBrdtElt, AlgMatElt -&gt; ModBrdtElt
5<->x + y <->text1615.htm#17901<->x + y : ModBrdtElt, ModBrdtElt -&gt; ModBrdtElt
5<->x - y <->text1615.htm#17902<->x - y : ModBrdtElt, ModBrdtElt -&gt; ModBrdtElt
5<->x eq y <->text1615.htm#17903<->x eq y : ModBrdtElt, ModBrdtElt -&gt; BoolElt
5<->Eltseq(x) <->text1615.htm#17904<->Eltseq(x) : ModBrdtElt -&gt; SeqEnum
5<->InnerProduct(x, y) <->text1615.htm#17905<->InnerProduct(x, y) : ModBrdtElt, ModBrdtElt -&gt; RngElt
5<->Norm(x) <->text1615.htm#17906<->Norm(x) : ModBrdtElt  -&gt; RngElt
3<->Element-Creation :<->text1615.htm#17898<->Element-Creation :: Operations on Elements (BRANDT MODULES)
3<->Categories and Parent (BRANDT MODULES)<->text1615.htm#17907<->Categories and Parent (BRANDT MODULES)
5<->Parent(x) <->text1615.htm#17908<->Parent(x) : ModBrdtElt -&gt; ModBrdt
5<->x in M <->text1615.htm#17909<->x in M : ModBrdtElt, ModBrdt -&gt; BoolElt
3<->Categories and Parent (BRANDT MODULES)<->text1615.htm#17907<->Categories and Parent (BRANDT MODULES)
3<->Elementary-Invariants :<->text1615.htm#17910<->Elementary-Invariants :: Elementary Invariants (BRANDT MODULES)
5<->Level(M) <->text1615.htm#17911<->Level(M) : ModBrdt -&gt; RngIntElt
5<->Discriminant(M) <->text1615.htm#17912<->Discriminant(M) : ModBrdt -&gt; RngIntElt
5<->Conductor(M) <->text1615.htm#17913<->Conductor(M) : ModBrdt -&gt; RngIntElt
5<->BaseRing(M) <->text1615.htm#17914<->BaseRing(M) : ModBrdt -&gt; Rng
5<->Basis(M) <->text1615.htm#17915<->Basis(M) : ModBrdt -&gt; SeqEnum
3<->Elementary-Invariants :<->text1615.htm#17910<->Elementary-Invariants :: Elementary Invariants (BRANDT MODULES)
3<->Associated-Structures :<->text1615.htm#17916<->Associated-Structures :: Associated Structures (BRANDT MODULES)
5<->AmbientModule(M) <->text1615.htm#17917<->AmbientModule(M) : ModBrdt -&gt; ModBrdt
5<->IsAmbient(M) <->text1615.htm#17918<->IsAmbient(M) : ModBrdt -&gt; BoolElt
5<->Rank :: Dimension(M) <->text1615.htm#17919<->Rank :: Dimension(M) : ModBrdt -&gt; RngIntElt
5<->Dimension(M) <->text1615.htm#17919<->Dimension(M) : ModBrdt -&gt; RngIntElt
5<->Degree(M) <->text1615.htm#17920<->Degree(M) : ModBrdt -&gt; RngIntElt
5<->GramMatrix(M) <->text1615.htm#17921<->GramMatrix(M) : ModBrdt -&gt; AlgMatElt
5<->InnerProductMatrix(M) <->text1615.htm#17922<->InnerProductMatrix(M) : ModBrdt -&gt; AlgMatElt
4<->ModBrdt_ModBrdt<->text1615.htm#17923<->ModBrdt_ModBrdt:Module-Creation (Example H140E2)
4<->Example-ModBrdt:Module-Creation :: ModBrdt_ModBrdt<->text1615.htm#17923<->Example-ModBrdt:Module-Creation :: ModBrdt_ModBrdt:Module-Creation (Example H140E2)
5<->Ideals(M) <->text1615.htm#17924<->Ideals(M) : ModBrdt -&gt; []
3<->Associated-Structures :<->text1615.htm#17916<->Associated-Structures :: Associated Structures (BRANDT MODULES)
3<->Verbose-Output :<->text1615.htm#17925<->Verbose-Output :: Verbose Output (BRANDT MODULES)
4<->ModBrdt_ModBrdt<->text1615.htm#17926<->ModBrdt_ModBrdt:Verbose-Output (Example H140E3)
4<->Example-ModBrdt:Verbose-Output :: ModBrdt_ModBrdt<->text1615.htm#17926<->Example-ModBrdt:Verbose-Output :: ModBrdt_ModBrdt:Verbose-Output (Example H140E3)
3<->Verbose-Output :<->text1615.htm#17925<->Verbose-Output :: Verbose Output (BRANDT MODULES)
3<->ModBrdt:brandt-modules :<->text1615.htm<->ModBrdt:brandt-modules :: Brandt Module Creation (BRANDT MODULES)
3<->ModBrdt:Subspaces :<->text1616.htm<->ModBrdt:Subspaces :: Subspaces and Decomposition (BRANDT MODULES)
5<->EisensteinSubspace(M) <->text1616.htm#17928<->EisensteinSubspace(M) : ModBrdt -&gt; ModBrdt
5<->CuspidalSubspace(M) <->text1616.htm#17929<->CuspidalSubspace(M) : ModBrdt -&gt; ModBrdt
5<->OrthogonalComplement(M) <->text1616.htm#17930<->OrthogonalComplement(M) : ModBrdt -&gt; ModBrdt
5<->M meet N <->text1616.htm#17931<->M meet N : ModBrdt, ModBrdt -&gt; ModBrdt
5<->Decomposition(M, B) <->text1616.htm#17932<->Decomposition(M, B) : ModBrdt, RngIntElt -&gt; [ModBrdt]
5<->SortDecomposition(D) <->text1616.htm#17933<->SortDecomposition(D) : [ModBrdt] -&gt; SeqEnum
4<->ModBrdt_ModBrdt<->text1616.htm#17934<->ModBrdt_ModBrdt:Decomposition (Example H140E4)
4<->Example-ModBrdt:Decomposition :: ModBrdt_ModBrdt<->text1616.htm#17934<->Example-ModBrdt:Decomposition :: ModBrdt_ModBrdt:Decomposition (Example H140E4)
3<->ModBrdt:Subspaces-Tests :<->text1616.htm#17935<->ModBrdt:Subspaces-Tests :: Boolean Tests on Subspaces (BRANDT MODULES)
5<->IsEisenstein(M) <->text1616.htm#17936<->IsEisenstein(M) : ModBrdt -&gt; BoolElt
5<->IsCuspidal(M) <->text1616.htm#17937<->IsCuspidal(M) : ModBrdt -&gt; BoolElt
5<->IsIndecomposable(M, B) <->text1616.htm#17938<->IsIndecomposable(M, B) : ModBrdt, RngIntElt -&gt; BoolElt
5<->M1 subset M2 <->text1616.htm#17939<->M1 subset M2 : ModBrdt, ModBrdt -&gt; BoolElt
5<->M1 lt M2 <->text1616.htm#17940<->M1 lt M2 : ModBrdt, ModBrdt -&gt; BoolElt
5<->M1 gt M2 <->text1616.htm#17941<->M1 gt M2 : ModBrdt, ModBrdt -&gt; BoolElt
4<->ModBrdt_ModBrdt<->text1616.htm#17942<->ModBrdt_ModBrdt:EisensteinSubspace (Example H140E5)
4<->Example-ModBrdt:EisensteinSubspace :: ModBrdt_ModBrdt<->text1616.htm#17942<->Example-ModBrdt:EisensteinSubspace :: ModBrdt_ModBrdt:EisensteinSubspace (Example H140E5)
3<->ModBrdt:Subspaces-Tests :<->text1616.htm#17935<->ModBrdt:Subspaces-Tests :: Boolean Tests on Subspaces (BRANDT MODULES)
3<->ModBrdt:Subspaces :<->text1616.htm<->ModBrdt:Subspaces :: Subspaces and Decomposition (BRANDT MODULES)
3<->hecke-operators :<->text1617.htm<->hecke-operators :: Hecke Operators (BRANDT MODULES)
5<->HeckeOperator(M, n) <->text1617.htm#17944<->HeckeOperator(M, n) : ModBrdt, RngIntElt -&gt; AlgMatElt
5<->AtkinLehnerOperator(M, p) <->text1617.htm#17945<->AtkinLehnerOperator(M, p) : ModBrdt, RngIntElt -&gt; AlgMatElt
3<->hecke-operators :<->text1617.htm<->hecke-operators :: Hecke Operators (BRANDT MODULES)
3<->qexpansions :<->text1618.htm<->qexpansions :: q-Expansions (BRANDT MODULES)
5<->ThetaSeries(x, y, prec) <->text1618.htm#17947<->ThetaSeries(x, y, prec) : ModBrdtElt, ModBrdtElt, RngIntElt -&gt; RngSerElt
5<->qExpansionBasis(M, prec) <->text1618.htm#17948<->qExpansionBasis(M, prec) : ModBrdt, RngIntElt -&gt; SeqEnum
3<->qexpansions :<->text1618.htm<->qexpansions :: q-Expansions (BRANDT MODULES)
3<->ModBrdt:dimension-formulas :<->text1619.htm<->ModBrdt:dimension-formulas :: Dimensions of Spaces (BRANDT MODULES)
5<->BrandtModuleDimension(D, N) <->text1619.htm#17950<->BrandtModuleDimension(D, N) : RngIntElt, RngIntElt -&gt; RngIntElt
4<->ModBrdt_ModBrdt<->text1619.htm#17951<->ModBrdt_ModBrdt:Dimension (Example H140E6)
4<->Example-ModBrdt:Dimension :: ModBrdt_ModBrdt<->text1619.htm#17951<->Example-ModBrdt:Dimension :: ModBrdt_ModBrdt:Dimension (Example H140E6)
3<->ModBrdt:dimension-formulas :<->text1619.htm<->ModBrdt:dimension-formulas :: Dimensions of Spaces (BRANDT MODULES)
3<->ModBrdt:fldfunrat :<->text1620.htm<->ModBrdt:fldfunrat :: Brandt Modules Over F<sub>q</sub>[t] (BRANDT MODULES)
5<->BrandtModuleDimensionOfNewSubspace :: BrandtModuleDimension(D, N) <->text1620.htm#17953<->BrandtModuleDimensionOfNewSubspace :: BrandtModuleDimension(D, N) : RngElt, RngElt -&gt; RngIntElt
5<->BrandtModuleDimension(D, N) <->text1620.htm#17953<->BrandtModuleDimension(D, N) : RngElt, RngElt -&gt; RngIntElt
5<->HeckeEigenvectors(M) <->text1620.htm#17954<->HeckeEigenvectors(M) : ModBrdt -&gt; [ ModBrdt ]
5<->HeckeEigenvalue(f, p) <->text1620.htm#17955<->HeckeEigenvalue(f, p) : ModBrdtElt, RngElt -&gt; RngElt
3<->ModBrdt:fldfunrat :<->text1620.htm<->ModBrdt:fldfunrat :: Brandt Modules Over F<sub>q</sub>[t] (BRANDT MODULES)
3<->brandt-modules :<->text1613.htm<->brandt-modules :: BRANDT MODULES
3<->supersingular-divisors-on-module-curves :<->text1623.htm<->supersingular-divisors-on-module-curves :: SUPERSINGULAR DIVISORS ON MODULAR CURVES
3<->introduction :<->text1624.htm<->introduction :: Introduction (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->categories :<->text1624.htm#17960<->categories :: Categories (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->verbose :<->text1624.htm#17961<->verbose :: Verbose Output (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->introduction :<->text1624.htm<->introduction :: Introduction (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->creation :<->text1625.htm<->creation :: Creation Functions (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->creation-ambient :<->text1625.htm#17963<->creation-ambient :: Ambient Spaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->SupersingularModule(p,N : parameters) <->text1625.htm#17964<->SupersingularModule(p,N : parameters) : RngIntElt, RngInt -&gt; ModSS
5<->SupersingularModule(p) <->text1625.htm#17965<->SupersingularModule(p) : RngIntElt -&gt; ModForm
4<->ModSS_Creation-Spaces (Example H141E1)<->text1625.htm#17966<->ModSS_Creation-Spaces (Example H141E1)
4<->Example-Creation-Spaces :<->text1625.htm#17966<->Example-Creation-Spaces :: ModSS_Creation-Spaces (Example H141E1)
3<->creation-ambient :<->text1625.htm#17963<->creation-ambient :: Ambient Spaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->creation-elements :<->text1625.htm#17967<->creation-elements :: Elements (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->M . i <->text1625.htm#17968<->M . i : ModSS, RngIntElt -&gt; ModSSElt
5<->M ! x <->text1625.htm#17969<->M ! x : ModSS, . -&gt; ModSSElt
4<->ModSS_Creation-Elements (Example H141E2)<->text1625.htm#17970<->ModSS_Creation-Elements (Example H141E2)
4<->Example-Creation-Elements :<->text1625.htm#17970<->Example-Creation-Elements :: ModSS_Creation-Elements (Example H141E2)
3<->creation-elements :<->text1625.htm#17967<->creation-elements :: Elements (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->creation-subspaces :<->text1625.htm#17971<->creation-subspaces :: Subspaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->CuspidalSubspace(M) <->text1625.htm#17972<->CuspidalSubspace(M) : ModSS -&gt; ModSS
5<->EisensteinSubspace(M) <->text1625.htm#17973<->EisensteinSubspace(M) : ModSS -&gt; ModSS
5<->OrthogonalComplement(M) <->text1625.htm#17974<->OrthogonalComplement(M) : ModSS -&gt; ModSS
5<->Kernel(I, M) <->text1625.htm#17975<->Kernel(I, M) : [Tup], ModSS -&gt; ModSS
5<->Decomposition(M, n) <->text1625.htm#17976<->Decomposition(M, n) : ModSS, RngIntElt -&gt; [ModSS]
4<->ModSS_Creation-Subspaces (Example H141E3)<->text1625.htm#17977<->ModSS_Creation-Subspaces (Example H141E3)
4<->Example-Creation-Subspaces :<->text1625.htm#17977<->Example-Creation-Subspaces :: ModSS_Creation-Subspaces (Example H141E3)
3<->creation-subspaces :<->text1625.htm#17971<->creation-subspaces :: Subspaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->creation :<->text1625.htm<->creation :: Creation Functions (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->basis :<->text1626.htm<->basis :: Basis (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->Basis(M) <->text1626.htm#17979<->Basis(M) : ModSS -&gt; SeqEnum
3<->basis :<->text1626.htm<->basis :: Basis (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->properties :<->text1627.htm<->properties :: Properties (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->AuxiliaryLevel(M) <->text1627.htm#17981<->AuxiliaryLevel(M) : ModSS -&gt; RngIntElt
5<->BaseRing(M) <->text1627.htm#17982<->BaseRing(M) : ModSS -&gt; Rng
5<->Degree(P) <->text1627.htm#17983<->Degree(P) : ModSSElt -&gt; RngElt
5<->Dimension(M) <->text1627.htm#17984<->Dimension(M) : ModSS -&gt; RngIntElt
5<->Eltseq(P) <->text1627.htm#17985<->Eltseq(P) : ModSSElt -&gt; SeqEnum
5<->Level(M) <->text1627.htm#17986<->Level(M) : ModSS -&gt; RngIntElt
5<->ModularEquation(M) <->text1627.htm#17987<->ModularEquation(M) : ModSS -&gt; RngMPolElt
5<->Prime(M) <->text1627.htm#17988<->Prime(M) : ModSS -&gt; RngIntElt
4<->ModSS_Properties (Example H141E4)<->text1627.htm#17989<->ModSS_Properties (Example H141E4)
4<->Example-Properties :<->text1627.htm#17989<->Example-Properties :: ModSS_Properties (Example H141E4)
3<->properties :<->text1627.htm<->properties :: Properties (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->associated-spaces :<->text1628.htm<->associated-spaces :: Associated Spaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->BrandtModule(M) <->text1628.htm#17991<->BrandtModule(M) : ModSS -&gt; ModBrdt
5<->ModularSymbols(M : parameters) <->text1628.htm#17992<->ModularSymbols(M : parameters) : ModSS -&gt; ModSym
5<->ModularSymbols(M, sign : parameters) <->text1628.htm#17993<->ModularSymbols(M, sign : parameters) : ModSS, RngIntElt -&gt; ModSym
5<->RSpace(M) <->text1628.htm#17994<->RSpace(M) : ModSS -&gt; ModTupRng, Map
4<->ModSS_Associated (Example H141E5)<->text1628.htm#17995<->ModSS_Associated (Example H141E5)
4<->Example-Associated :<->text1628.htm#17995<->Example-Associated :: ModSS_Associated (Example H141E5)
3<->associated-spaces :<->text1628.htm<->associated-spaces :: Associated Spaces (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->predicates :<->text1629.htm<->predicates :: Predicates (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->IsAmbientSpace(M) <->text1629.htm#17997<->IsAmbientSpace(M) : ModSS -&gt; BoolElt
5<->M1 eq M2 <->text1629.htm#17998<->M1 eq M2 : ModSS, ModSS -&gt; BoolElt
5<->P eq Q <->text1629.htm#17999<->P eq Q : ModSSElt, ModSSElt -&gt; BoolElt
5<->M1 subset M2 <->text1629.htm#18000<->M1 subset M2 : ModSS, ModSS -&gt; BoolElt
5<->UsesBrandt(M) <->text1629.htm#18001<->UsesBrandt(M) : ModSS -&gt; BoolElt
5<->UsesMestre(M) <->text1629.htm#18002<->UsesMestre(M) : ModSS -&gt; BoolElt
4<->ModSS_Predicates (Example H141E6)<->text1629.htm#18003<->ModSS_Predicates (Example H141E6)
4<->Example-Predicates :<->text1629.htm#18003<->Example-Predicates :: ModSS_Predicates (Example H141E6)
3<->predicates :<->text1629.htm<->predicates :: Predicates (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->arithmetic :<->text1630.htm<->arithmetic :: Arithmetic (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->M1 + M2 <->text1630.htm#18005<->M1 + M2 : ModSS, ModSS -&gt; ModSS
5<->M1 meet M2 <->text1630.htm#18006<->M1 meet M2 : ModSS, ModSS -&gt; ModSS
4<->ModSS_Arithmetic (Example H141E7)<->text1630.htm#18007<->ModSS_Arithmetic (Example H141E7)
4<->Example-Arithmetic :<->text1630.htm#18007<->Example-Arithmetic :: ModSS_Arithmetic (Example H141E7)
3<->arithmetic :<->text1630.htm<->arithmetic :: Arithmetic (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->operators :<->text1631.htm<->operators :: Operators (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->HeckeOperator(M, n) <->text1631.htm#18009<->HeckeOperator(M, n) : ModSS, RngIntElt -&gt; AlgMatElt
5<->AtkinLehnerOperator(M, q) <->text1631.htm#18010<->AtkinLehnerOperator(M, q) : ModSS, RngIntElt -&gt; AlgMatElt
4<->ModSS_Operators (Example H141E8)<->text1631.htm#18011<->ModSS_Operators (Example H141E8)
4<->Example-Operators :<->text1631.htm#18011<->Example-Operators :: ModSS_Operators (Example H141E8)
3<->operators :<->text1631.htm<->operators :: Operators (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->monodromy-pairing :<->text1632.htm<->monodromy-pairing :: The Monodromy Pairing (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
5<->MonodromyPairing(P, Q) <->text1632.htm#18013<->MonodromyPairing(P, Q) : ModSSElt, ModSSElt -&gt; RngIntElt
5<->MonodromyWeights(M) <->text1632.htm#18014<->MonodromyWeights(M) : ModSS -&gt; SeqEnum
4<->ModSS_Monodromy (Example H141E9)<->text1632.htm#18015<->ModSS_Monodromy (Example H141E9)
4<->Example-Monodromy :<->text1632.htm#18015<->Example-Monodromy :: ModSS_Monodromy (Example H141E9)
3<->monodromy-pairing :<->text1632.htm<->monodromy-pairing :: The Monodromy Pairing (SUPERSINGULAR DIVISORS ON MODULAR CURVES)
3<->supersingular-divisors-on-module-curves :<->text1623.htm<->supersingular-divisors-on-module-curves :: SUPERSINGULAR DIVISORS ON MODULAR CURVES
3<->modular-forms :<->text1635.htm<->modular-forms :: MODULAR ABELIAN VARIETIES
3<->introduction :<->text1636.htm<->introduction :: Introduction (MODULAR ABELIAN VARIETIES)
3<->categories :<->text1636.htm#18020<->categories :: Categories (MODULAR ABELIAN VARIETIES)
4<->ModAbVar_Categories (Example H142E1)<->text1636.htm#18021<->ModAbVar_Categories (Example H142E1)
4<->Example-Categories :<->text1636.htm#18021<->Example-Categories :: ModAbVar_Categories (Example H142E1)
3<->categories :<->text1636.htm#18020<->categories :: Categories (MODULAR ABELIAN VARIETIES)
3<->verbose :<->text1636.htm#18022<->verbose :: Verbose Output (MODULAR ABELIAN VARIETIES)
4<->ModAbVar_Verbosity (Example H142E2)<->text1636.htm#18023<->ModAbVar_Verbosity (Example H142E2)
4<->Example-Verbosity :<->text1636.htm#18023<->Example-Verbosity :: ModAbVar_Verbosity (Example H142E2)
3<->verbose :<->text1636.htm#18022<->verbose :: Verbose Output (MODULAR ABELIAN VARIETIES)
3<->introduction :<->text1636.htm<->introduction :: Introduction (MODULAR ABELIAN VARIETIES)
3<->modabvar :<->text1637.htm<->modabvar :: Creation and Basic Functions (MODULAR ABELIAN VARIETIES)
3<->subsec_creating_the_modular_jacobian_$j_0(n)$ :<->text1637.htm#18025<->subsec_creating_the_modular_jacobian_$j_0(n)$ :: Creating the Modular Jacobian  J<sub>0</sub>(N) (MODULAR ABELIAN VARIETIES)
5<->JZero(N, k $\colon$ \parameters) <->text1637.htm#18026<->JZero(N, k $\colon$ \parameters) : RngIntElt, RngIntElt ->  ModAbVar
5<->JZero(N : parameters) <->text1637.htm#18026<->JZero(N : parameters) : RngIntElt -&gt;  ModAbVar
4<->ModAbVar_Modabvar-Creating_the_Modular_Jacobian_$J_0(N)$ (Example H142E3)<->text1637.htm#18027<->ModAbVar_Modabvar-Creating_the_Modular_Jacobian_$J_0(N)$ (Example H142E3)
4<->Example-Modabvar-Creating_the_Modular_Jacobian_$J_0(N)$ :<->text1637.htm#18027<->Example-Modabvar-Creating_the_Modular_Jacobian_$J_0(N)$ :: ModAbVar_Modabvar-Creating_the_Modular_Jacobian_$J_0(N)$ (Example H142E3)
3<->subsec_creating_the_modular_jacobian_$j_0(n)$ :<->text1637.htm#18025<->subsec_creating_the_modular_jacobian_$j_0(n)$ :: Creating the Modular Jacobian  J<sub>0</sub>(N) (MODULAR ABELIAN VARIETIES)
3<->subsec_creating_the_modular_jacobians_j_1(n)_and_j_h(n) :<->text1637.htm#18028<->subsec_creating_the_modular_jacobians_j_1(n)_and_j_h(n) :: Creating the Modular Jacobians J<sub>1</sub>(N) and J<sub>H</sub>(N) (MODULAR ABELIAN VARIETIES)
5<->JOne(N, k $\colon$ \parameters) <->text1637.htm#18029<->JOne(N, k $\colon$ \parameters) : RngIntElt, RngIntElt ->  ModAbVar
5<->JOne(N : parameters) <->text1637.htm#18029<->JOne(N : parameters) : RngIntElt -&gt;  ModAbVar
5<->Js(N, k $\colon$ \parameters) <->text1637.htm#18030<->Js(N, k $\colon$ \parameters) : RngIntElt, RngIntElt ->  ModAbVar
5<->Js(N : parameters) <->text1637.htm#18030<->Js(N : parameters) : RngIntElt -&gt;  ModAbVar
5<->JH(N, k, d $\colon$ \parameters) <->text1637.htm#18031<->JH(N, k, d $\colon$ \parameters) : RngIntElt, RngIntElt, RngIntElt ->  ModAbVar
5<->JH(N, d : parameters) <->text1637.htm#18031<->JH(N, d : parameters) : RngIntElt, RngIntElt -&gt;  ModAbVar
5<->JH(N, k, gens $\colon$ \parameters) <->text1637.htm#18032<->JH(N, k, gens $\colon$ \parameters) : RngIntElt, RngIntElt, [RngIntElt] ->  ModAbVar
5<->JH(N, gens : parameters) <->text1637.htm#18032<->JH(N, gens : parameters) : RngIntElt, [RngIntElt] -&gt;  ModAbVar
4<->ModAbVar_Modabvar-Creating_the_Modular_Jacobians_$J_1(N)$_and_$J_H(N)$ (Example H142E4)<->text1637.htm#18033<->ModAbVar_Modabvar-Creating_the_Modular_Jacobians_$J_1(N)$_and_$J_H(N)$ (Example H142E4)
4<->Example-Modabvar-Creating_the_Modular_Jacobians_$J_1(N)$_and_$J_H(N)$ :<->text1637.htm#18033<->Example-Modabvar-Creating_the_Modular_Jacobians_$J_1(N)$_and_$J_H(N)$ :: ModAbVar_Modabvar-Creating_the_Modular_Jacobians_$J_1(N)$_and_$J_H(N)$ (Example H142E4)
3<->subsec_creating_the_modular_jacobians_j_1(n)_and_j_h(n) :<->text1637.htm#18028<->subsec_creating_the_modular_jacobians_j_1(n)_and_j_h(n) :: Creating the Modular Jacobians J<sub>1</sub>(N) and J<sub>H</sub>(N) (MODULAR ABELIAN VARIETIES)
3<->subsec_abelian_varieties_attached_to_modular_forms :<->text1637.htm#18034<->subsec_abelian_varieties_attached_to_modular_forms :: Abelian Varieties Attached to  Modular Forms (MODULAR ABELIAN VARIETIES)
5<->ModularAbelianVariety(M : parameters) <->text1637.htm#18035<->ModularAbelianVariety(M : parameters) : ModFrm -&gt;  ModAbVar
5<->ModularAbelianVariety(X : parameters) <->text1637.htm#18036<->ModularAbelianVariety(X : parameters) : [ModFrm] -&gt;  ModAbVar
5<->ModularAbelianVariety(eps, k $\colon$ \parameters) <->text1637.htm#18037<->ModularAbelianVariety(eps, k $\colon$ \parameters) : GrpDrchElt, RngIntElt ->   ModAbVar
5<->ModularAbelianVariety(eps : parameters) <->text1637.htm#18037<->ModularAbelianVariety(eps : parameters) : GrpDrchElt -&gt;  ModAbVar
5<->ModularAbelianVariety(f) <->text1637.htm#18038<->ModularAbelianVariety(f) : ModFrmElt -&gt;  ModAbVar
5<->Newform(A) <->text1637.htm#18039<->Newform(A) : ModAbVar -&gt;  ModFrmElt
4<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms (Example H142E5)<->text1637.htm#18040<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms (Example H142E5)
4<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms :<->text1637.htm#18040<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms :: ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms (Example H142E5)
4<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms3 (Example H142E6)<->text1637.htm#18041<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms3 (Example H142E6)
4<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms3 :<->text1637.htm#18041<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms3 :: ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms3 (Example H142E6)
4<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms5 (Example H142E7)<->text1637.htm#18042<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms5 (Example H142E7)
4<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms5 :<->text1637.htm#18042<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Forms5 :: ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Forms5 (Example H142E7)
3<->subsec_abelian_varieties_attached_to_modular_forms :<->text1637.htm#18034<->subsec_abelian_varieties_attached_to_modular_forms :: Abelian Varieties Attached to  Modular Forms (MODULAR ABELIAN VARIETIES)
3<->subsec_abelian_varieties_attached_to_modular_symbols :<->text1637.htm#18043<->subsec_abelian_varieties_attached_to_modular_symbols :: Abelian Varieties Attached to  Modular Symbols (MODULAR ABELIAN VARIETIES)
5<->ModularAbelianVariety(M) <->text1637.htm#18044<->ModularAbelianVariety(M) : ModSym -&gt;  ModAbVar
5<->ModularAbelianVariety(X) <->text1637.htm#18045<->ModularAbelianVariety(X) : [ModSym] -&gt;  ModAbVar
5<->ModularSymbols(A) <->text1637.htm#18046<->ModularSymbols(A) : ModAbVar -&gt;  SeqEnum
4<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Symbols (Example H142E8)<->text1637.htm#18047<->ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Symbols (Example H142E8)
4<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Symbols :<->text1637.htm#18047<->Example-Modabvar-Abelian_Varieties_Attached_to_Modular_Symbols :: ModAbVar_Modabvar-Abelian_Varieties_Attached_to_Modular_Symbols (Example H142E8)
3<->subsec_abelian_varieties_attached_to_modular_symbols :<->text1637.htm#18043<->subsec_abelian_varieties_attached_to_modular_symbols :: Abelian Varieties Attached to  Modular Symbols (MODULAR ABELIAN VARIETIES)
3<->subsec_creation_of_abelian_subvarieties :<->text1637.htm#18048<->subsec_creation_of_abelian_subvarieties :: Creation of Abelian Subvarieties (MODULAR ABELIAN VARIETIES)
5<->DefinesAbelianSubvariety(A, V) <->text1637.htm#18049<->DefinesAbelianSubvariety(A, V) : ModAbVar, ModTupFld -&gt;                              BoolElt, ModAbVar
5<->ZeroModularAbelianVariety() <->text1637.htm#18050<->ZeroModularAbelianVariety() : -&gt;  ModAbVar
5<->ZeroModularAbelianVariety(k) <->text1637.htm#18051<->ZeroModularAbelianVariety(k) : RngIntElt -&gt;  ModAbVar
5<->ZeroSubvariety(A) <->text1637.htm#18052<->ZeroSubvariety(A) : ModAbVar -&gt;  ModAbVar
4<->ModAbVar_Modabvar-Creation_of_Abelian_Subvarieties (Example H142E9)<->text1637.htm#18053<->ModAbVar_Modabvar-Creation_of_Abelian_Subvarieties (Example H142E9)
4<->Example-Modabvar-Creation_of_Abelian_Subvarieties :<->text1637.htm#18053<->Example-Modabvar-Creation_of_Abelian_Subvarieties :: ModAbVar_Modabvar-Creation_of_Abelian_Subvarieties (Example H142E9)
3<->subsec_creation_of_abelian_subvarieties :<->text1637.htm#18048<->subsec_creation_of_abelian_subvarieties :: Creation of Abelian Subvarieties (MODULAR ABELIAN VARIETIES)
3<->subsec_creation_using_a_label :<->text1637.htm#18054<->subsec_creation_using_a_label :: Creation Using a Label (MODULAR ABELIAN VARIETIES)
5<->ModularAbelianVariety(s : parameters) <->text1637.htm#18055<->ModularAbelianVariety(s : parameters) : MonStgElt -&gt;  ModAbVar
4<->ModAbVar_Modabvar-Creation_Using_a_Label (Example H142E10)<->text1637.htm#18056<->ModAbVar_Modabvar-Creation_Using_a_Label (Example H142E10)
4<->Example-Modabvar-Creation_Using_a_Label :<->text1637.htm#18056<->Example-Modabvar-Creation_Using_a_Label :: ModAbVar_Modabvar-Creation_Using_a_Label (Example H142E10)
3<->subsec_creation_using_a_label :<->text1637.htm#18054<->subsec_creation_using_a_label :: Creation Using a Label (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1637.htm#18057<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->BaseRing(A) <->text1637.htm#18058<->BaseRing(A) : ModAbVar -&gt;  Rng
5<->Dimension(A) <->text1637.htm#18059<->Dimension(A) : ModAbVar -&gt;  RngIntElt
5<->DirichletCharacter(A) <->text1637.htm#18060<->DirichletCharacter(A) : ModAbVar -&gt;  GrpDrchElt
5<->DirichletCharacters(A) <->text1637.htm#18061<->DirichletCharacters(A) : ModAbVar -&gt;  List
5<->FieldOfDefinition(A) <->text1637.htm#18062<->FieldOfDefinition(A) : ModAbVar -&gt;  Fld
5<->Level(A) <->text1637.htm#18063<->Level(A) : ModAbVar -&gt;  RngIntElt
5<->Sign(A) <->text1637.htm#18064<->Sign(A) : ModAbVar -&gt;  RngIntElt
5<->Weights(A) <->text1637.htm#18065<->Weights(A) : ModAbVar -&gt;  Set
4<->ModAbVar_Modabvar-Invariants (Example H142E11)<->text1637.htm#18066<->ModAbVar_Modabvar-Invariants (Example H142E11)
4<->Example-Modabvar-Invariants :<->text1637.htm#18066<->Example-Modabvar-Invariants :: ModAbVar_Modabvar-Invariants (Example H142E11)
4<->ModAbVar_Modabvar-Invariants2 (Example H142E12)<->text1637.htm#18067<->ModAbVar_Modabvar-Invariants2 (Example H142E12)
4<->Example-Modabvar-Invariants2 :<->text1637.htm#18067<->Example-Modabvar-Invariants2 :: ModAbVar_Modabvar-Invariants2 (Example H142E12)
4<->ModAbVar_Modabvar-Invariants3 (Example H142E13)<->text1637.htm#18068<->ModAbVar_Modabvar-Invariants3 (Example H142E13)
4<->Example-Modabvar-Invariants3 :<->text1637.htm#18068<->Example-Modabvar-Invariants3 :: ModAbVar_Modabvar-Invariants3 (Example H142E13)
4<->ModAbVar_Modabvar-Invariants3 (Example H142E14)<->text1637.htm#18069<->ModAbVar_Modabvar-Invariants3 (Example H142E14)
4<->Example-Modabvar-Invariants3 :<->text1637.htm#18069<->Example-Modabvar-Invariants3 :: ModAbVar_Modabvar-Invariants3 (Example H142E14)
4<->ModAbVar_Modabvar-Invariants4 (Example H142E15)<->text1637.htm#18070<->ModAbVar_Modabvar-Invariants4 (Example H142E15)
4<->Example-Modabvar-Invariants4 :<->text1637.htm#18070<->Example-Modabvar-Invariants4 :: ModAbVar_Modabvar-Invariants4 (Example H142E15)
3<->subsec_invariants :<->text1637.htm#18057<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_conductor :<->text1637.htm#18071<->subsec_conductor :: Conductor (MODULAR ABELIAN VARIETIES)
5<->Conductor(A) <->text1637.htm#18072<->Conductor(A) : ModAbVar -&gt;  RngIntElt
4<->ModAbVar_Modabvar-Conductor (Example H142E16)<->text1637.htm#18073<->ModAbVar_Modabvar-Conductor (Example H142E16)
4<->Example-Modabvar-Conductor :<->text1637.htm#18073<->Example-Modabvar-Conductor :: ModAbVar_Modabvar-Conductor (Example H142E16)
3<->subsec_conductor :<->text1637.htm#18071<->subsec_conductor :: Conductor (MODULAR ABELIAN VARIETIES)
3<->subsec_number_of_points :<->text1637.htm#18074<->subsec_number_of_points :: Number of Points (MODULAR ABELIAN VARIETIES)
5<->NumberOfRationalPoints(A) <->text1637.htm#18075<->NumberOfRationalPoints(A) : ModAbVar -&gt;  RngIntElt, RngIntElt
5<->#A <->text1637.htm#18076<->#A : ModAbVar -&gt; RngIntElt
4<->ModAbVar_Modabvar-Number_of_Points (Example H142E17)<->text1637.htm#18077<->ModAbVar_Modabvar-Number_of_Points (Example H142E17)
4<->Example-Modabvar-Number_of_Points :<->text1637.htm#18077<->Example-Modabvar-Number_of_Points :: ModAbVar_Modabvar-Number_of_Points (Example H142E17)
3<->subsec_number_of_points :<->text1637.htm#18074<->subsec_number_of_points :: Number of Points (MODULAR ABELIAN VARIETIES)
3<->subsec_inner_twists_and_complex_multiplication :<->text1637.htm#18078<->subsec_inner_twists_and_complex_multiplication :: Inner Twists and Complex Multiplication (MODULAR ABELIAN VARIETIES)
5<->CMTwists(A : parameters) <->text1637.htm#18079<->CMTwists(A : parameters) : ModAbVar -&gt;  SeqEnum
5<->InnerTwists(A : parameters) <->text1637.htm#18080<->InnerTwists(A : parameters) : ModAbVar -&gt;  SeqEnum
4<->ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication (Example H142E18)<->text1637.htm#18081<->ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication (Example H142E18)
4<->Example-Modabvar-Inner_Twists_and_Complex_Multiplication :<->text1637.htm#18081<->Example-Modabvar-Inner_Twists_and_Complex_Multiplication :: ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication (Example H142E18)
4<->ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication2 (Example H142E19)<->text1637.htm#18082<->ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication2 (Example H142E19)
4<->Example-Modabvar-Inner_Twists_and_Complex_Multiplication2 :<->text1637.htm#18082<->Example-Modabvar-Inner_Twists_and_Complex_Multiplication2 :: ModAbVar_Modabvar-Inner_Twists_and_Complex_Multiplication2 (Example H142E19)
3<->subsec_inner_twists_and_complex_multiplication :<->text1637.htm#18078<->subsec_inner_twists_and_complex_multiplication :: Inner Twists and Complex Multiplication (MODULAR ABELIAN VARIETIES)
3<->subsec_predicates :<->text1637.htm#18083<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
5<->CanDetermineIsomorphism(A, B) <->text1637.htm#18084<->CanDetermineIsomorphism(A, B) : ModAbVar, ModAbVar -&gt;  BoolElt, BoolElt, MapModAbVar
5<->HasMultiplicityOne(A) <->text1637.htm#18085<->HasMultiplicityOne(A) : ModAbVar -&gt;  BoolElt
5<->IsAbelianVariety(A) <->text1637.htm#18086<->IsAbelianVariety(A) : ModAbVar -&gt;  BoolElt
5<->IsAttachedToModularSymbols(A) <->text1637.htm#18087<->IsAttachedToModularSymbols(A) : ModAbVar -&gt;  BoolElt
5<->IsAttachedToNewform(A) <->text1637.htm#18088<->IsAttachedToNewform(A) : ModAbVar -&gt;  BoolElt, ModAbVar, MapModAbVar
5<->IsIsogenous(A, B) <->text1637.htm#18089<->IsIsogenous(A, B) : ModAbVar, ModAbVar -&gt;  BoolElt
5<->IsIsomorphic(A, B) <->text1637.htm#18090<->IsIsomorphic(A, B) : ModAbVar, ModAbVar -&gt;  BoolElt, MapModAbVar
5<->IsOnlyMotivic(A) <->text1637.htm#18091<->IsOnlyMotivic(A) : ModAbVar -&gt;  BoolElt
5<->IsQuaternionic(A) <->text1637.htm#18092<->IsQuaternionic(A) : ModAbVar -&gt;  BoolElt
5<->IsSelfDual(A) <->text1637.htm#18093<->IsSelfDual(A) : ModAbVar -&gt;  BoolElt
5<->IsSimple(A) <->text1637.htm#18094<->IsSimple(A) : ModAbVar -&gt;  BoolElt
4<->ModAbVar_Modabvar-Predicates (Example H142E20)<->text1637.htm#18095<->ModAbVar_Modabvar-Predicates (Example H142E20)
4<->Example-Modabvar-Predicates :<->text1637.htm#18095<->Example-Modabvar-Predicates :: ModAbVar_Modabvar-Predicates (Example H142E20)
4<->ModAbVar_Modabvar-Predicates2 (Example H142E21)<->text1637.htm#18096<->ModAbVar_Modabvar-Predicates2 (Example H142E21)
4<->Example-Modabvar-Predicates2 :<->text1637.htm#18096<->Example-Modabvar-Predicates2 :: ModAbVar_Modabvar-Predicates2 (Example H142E21)
4<->ModAbVar_Modabvar-Predicates3 (Example H142E22)<->text1637.htm#18097<->ModAbVar_Modabvar-Predicates3 (Example H142E22)
4<->Example-Modabvar-Predicates3 :<->text1637.htm#18097<->Example-Modabvar-Predicates3 :: ModAbVar_Modabvar-Predicates3 (Example H142E22)
4<->ModAbVar_Modabvar-Predicates4 (Example H142E23)<->text1637.htm#18098<->ModAbVar_Modabvar-Predicates4 (Example H142E23)
4<->Example-Modabvar-Predicates4 :<->text1637.htm#18098<->Example-Modabvar-Predicates4 :: ModAbVar_Modabvar-Predicates4 (Example H142E23)
4<->ModAbVar_Modabvar-Predicates5 (Example H142E24)<->text1637.htm#18099<->ModAbVar_Modabvar-Predicates5 (Example H142E24)
4<->Example-Modabvar-Predicates5 :<->text1637.htm#18099<->Example-Modabvar-Predicates5 :: ModAbVar_Modabvar-Predicates5 (Example H142E24)
4<->ModAbVar_Modabvar-Predicates6 (Example H142E25)<->text1637.htm#18100<->ModAbVar_Modabvar-Predicates6 (Example H142E25)
4<->Example-Modabvar-Predicates6 :<->text1637.htm#18100<->Example-Modabvar-Predicates6 :: ModAbVar_Modabvar-Predicates6 (Example H142E25)
4<->ModAbVar_Modabvar-Predicates7 (Example H142E26)<->text1637.htm#18101<->ModAbVar_Modabvar-Predicates7 (Example H142E26)
4<->Example-Modabvar-Predicates7 :<->text1637.htm#18101<->Example-Modabvar-Predicates7 :: ModAbVar_Modabvar-Predicates7 (Example H142E26)
4<->ModAbVar_Modabvar-Predicates8 (Example H142E27)<->text1637.htm#18102<->ModAbVar_Modabvar-Predicates8 (Example H142E27)
4<->Example-Modabvar-Predicates8 :<->text1637.htm#18102<->Example-Modabvar-Predicates8 :: ModAbVar_Modabvar-Predicates8 (Example H142E27)
3<->subsec_predicates :<->text1637.htm#18083<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
3<->subsec_equality_and_inclusion_testing :<->text1637.htm#18103<->subsec_equality_and_inclusion_testing :: Equality and Inclusion Testing (MODULAR ABELIAN VARIETIES)
5<->A eq B <->text1637.htm#18104<->A eq B : ModAbVar, ModAbVar -&gt;  BoolElt
5<->A subset B <->text1637.htm#18105<->A subset B : ModAbVar, ModAbVar -&gt;  BoolElt
4<->ModAbVar_Modabvar-Equality_and_Inclusion_Testing (Example H142E28)<->text1637.htm#18106<->ModAbVar_Modabvar-Equality_and_Inclusion_Testing (Example H142E28)
4<->Example-Modabvar-Equality_and_Inclusion_Testing :<->text1637.htm#18106<->Example-Modabvar-Equality_and_Inclusion_Testing :: ModAbVar_Modabvar-Equality_and_Inclusion_Testing (Example H142E28)
4<->ModAbVar_Modabvar-Equality_and_Inclusion_Testing2 (Example H142E29)<->text1637.htm#18107<->ModAbVar_Modabvar-Equality_and_Inclusion_Testing2 (Example H142E29)
4<->Example-Modabvar-Equality_and_Inclusion_Testing2 :<->text1637.htm#18107<->Example-Modabvar-Equality_and_Inclusion_Testing2 :: ModAbVar_Modabvar-Equality_and_Inclusion_Testing2 (Example H142E29)
3<->subsec_equality_and_inclusion_testing :<->text1637.htm#18103<->subsec_equality_and_inclusion_testing :: Equality and Inclusion Testing (MODULAR ABELIAN VARIETIES)
3<->subsec_modular_embedding_and_parameterization :<->text1637.htm#18108<->subsec_modular_embedding_and_parameterization :: Modular Embedding and Parameterization (MODULAR ABELIAN VARIETIES)
5<->CommonModularStructure(X) <->text1637.htm#18109<->CommonModularStructure(X) : [ModAbVar] -&gt;  List, List
5<->ModularEmbedding(A) <->text1637.htm#18110<->ModularEmbedding(A) : ModAbVar -&gt;  MapModAbVar
5<->ModularParameterization(A) <->text1637.htm#18111<->ModularParameterization(A) : ModAbVar -&gt;  MapModAbVar
4<->ModAbVar_Modabvar-Modular_Embedding_and_Parameterization (Example H142E30)<->text1637.htm#18112<->ModAbVar_Modabvar-Modular_Embedding_and_Parameterization (Example H142E30)
4<->Example-Modabvar-Modular_Embedding_and_Parameterization :<->text1637.htm#18112<->Example-Modabvar-Modular_Embedding_and_Parameterization :: ModAbVar_Modabvar-Modular_Embedding_and_Parameterization (Example H142E30)
4<->ModAbVar_Modabvar-Modular_Embedding_and_Parameterization2 (Example H142E31)<->text1637.htm#18113<->ModAbVar_Modabvar-Modular_Embedding_and_Parameterization2 (Example H142E31)
4<->Example-Modabvar-Modular_Embedding_and_Parameterization2 :<->text1637.htm#18113<->Example-Modabvar-Modular_Embedding_and_Parameterization2 :: ModAbVar_Modabvar-Modular_Embedding_and_Parameterization2 (Example H142E31)
3<->subsec_modular_embedding_and_parameterization :<->text1637.htm#18108<->subsec_modular_embedding_and_parameterization :: Modular Embedding and Parameterization (MODULAR ABELIAN VARIETIES)
3<->subsec_coercion :<->text1637.htm#18114<->subsec_coercion :: Coercion (MODULAR ABELIAN VARIETIES)
5<->A ! x <->text1637.htm#18115<->A ! x : ModAbVar, . -&gt;  BoolElt, ModAbVarElt
4<->ModAbVar_Modabvar-Coercion (Example H142E32)<->text1637.htm#18116<->ModAbVar_Modabvar-Coercion (Example H142E32)
4<->Example-Modabvar-Coercion :<->text1637.htm#18116<->Example-Modabvar-Coercion :: ModAbVar_Modabvar-Coercion (Example H142E32)
4<->ModAbVar_Modabvar-Coercion2 (Example H142E33)<->text1637.htm#18117<->ModAbVar_Modabvar-Coercion2 (Example H142E33)
4<->Example-Modabvar-Coercion2 :<->text1637.htm#18117<->Example-Modabvar-Coercion2 :: ModAbVar_Modabvar-Coercion2 (Example H142E33)
3<->subsec_coercion :<->text1637.htm#18114<->subsec_coercion :: Coercion (MODULAR ABELIAN VARIETIES)
3<->subsec_modular_symbols_to_homology :<->text1637.htm#18118<->subsec_modular_symbols_to_homology :: Modular Symbols to Homology (MODULAR ABELIAN VARIETIES)
5<->ModularSymbolToIntegralHomology(A, x) <->text1637.htm#18119<->ModularSymbolToIntegralHomology(A, x) : ModAbVar, Tup ->  ModTupFldElt
5<->ModularSymbolToIntegralHomology(A, x) <->text1637.htm#18119<->ModularSymbolToIntegralHomology(A, x) : ModAbVar, SeqEnum -&gt;  ModTupFldElt
5<->ModularSymbolToRationalHomology(A, x) <->text1637.htm#18120<->ModularSymbolToRationalHomology(A, x) : ModAbVar, SeqEnum ->  ModTupFldElt
5<->ModularSymbolToRationalHomology(A, x) <->text1637.htm#18120<->ModularSymbolToRationalHomology(A, x) : ModAbVar, Tup ->  ModTupFldElt
5<->ModularSymbolToRationalHomology(A, x) <->text1637.htm#18120<->ModularSymbolToRationalHomology(A, x) : ModAbVar, ModSymElt -&gt;  ModTupFldElt
4<->ModAbVar_Modabvar-Modular_Symbols_to_Homology (Example H142E34)<->text1637.htm#18121<->ModAbVar_Modabvar-Modular_Symbols_to_Homology (Example H142E34)
4<->Example-Modabvar-Modular_Symbols_to_Homology :<->text1637.htm#18121<->Example-Modabvar-Modular_Symbols_to_Homology :: ModAbVar_Modabvar-Modular_Symbols_to_Homology (Example H142E34)
4<->ModAbVar_Modabvar-Modular_Symbols_to_Homology2 (Example H142E35)<->text1637.htm#18122<->ModAbVar_Modabvar-Modular_Symbols_to_Homology2 (Example H142E35)
4<->Example-Modabvar-Modular_Symbols_to_Homology2 :<->text1637.htm#18122<->Example-Modabvar-Modular_Symbols_to_Homology2 :: ModAbVar_Modabvar-Modular_Symbols_to_Homology2 (Example H142E35)
3<->subsec_modular_symbols_to_homology :<->text1637.htm#18118<->subsec_modular_symbols_to_homology :: Modular Symbols to Homology (MODULAR ABELIAN VARIETIES)
3<->subsec_embeddings :<->text1637.htm#18123<->subsec_embeddings :: Embeddings (MODULAR ABELIAN VARIETIES)
5<->Embeddings(A) <->text1637.htm#18124<->Embeddings(A) : ModAbVar -&gt;  List
5<->AssertEmbedding(~A, phi) <->text1637.htm#18125<->AssertEmbedding(~A, phi) : ModAbVar, MapModAbVar -&gt;
4<->ModAbVar_Modabvar-Embeddings (Example H142E36)<->text1637.htm#18126<->ModAbVar_Modabvar-Embeddings (Example H142E36)
4<->Example-Modabvar-Embeddings :<->text1637.htm#18126<->Example-Modabvar-Embeddings :: ModAbVar_Modabvar-Embeddings (Example H142E36)
3<->subsec_embeddings :<->text1637.htm#18123<->subsec_embeddings :: Embeddings (MODULAR ABELIAN VARIETIES)
3<->subsec_base_change :<->text1637.htm#18127<->subsec_base_change :: Base Change (MODULAR ABELIAN VARIETIES)
5<->CanChangeRing(A, R) <->text1637.htm#18128<->CanChangeRing(A, R) : ModAbVar, Rng -&gt;  BoolElt, ModAbVar
5<->ChangeRing(A, R) <->text1637.htm#18129<->ChangeRing(A, R) : ModAbVar, Rng -&gt;  ModAbVar
5<->BaseExtend(A, R) <->text1637.htm#18130<->BaseExtend(A, R) : ModAbVar, Rng -&gt;  ModAbVar
4<->ModAbVar_Modabvar-Base_Change (Example H142E37)<->text1637.htm#18131<->ModAbVar_Modabvar-Base_Change (Example H142E37)
4<->Example-Modabvar-Base_Change :<->text1637.htm#18131<->Example-Modabvar-Base_Change :: ModAbVar_Modabvar-Base_Change (Example H142E37)
3<->subsec_base_change :<->text1637.htm#18127<->subsec_base_change :: Base Change (MODULAR ABELIAN VARIETIES)
3<->subsec_additional_examples :<->text1637.htm#18132<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
4<->ModAbVar_modabvar1 (Example H142E38)<->text1637.htm#18133<->ModAbVar_modabvar1 (Example H142E38)
4<->Example-modabvar1 :<->text1637.htm#18133<->Example-modabvar1 :: ModAbVar_modabvar1 (Example H142E38)
4<->ModAbVar_additional2 (Example H142E39)<->text1637.htm#18134<->ModAbVar_additional2 (Example H142E39)
4<->Example-additional2 :<->text1637.htm#18134<->Example-additional2 :: ModAbVar_additional2 (Example H142E39)
4<->ModAbVar_additional3 (Example H142E40)<->text1637.htm#18135<->ModAbVar_additional3 (Example H142E40)
4<->Example-additional3 :<->text1637.htm#18135<->Example-additional3 :: ModAbVar_additional3 (Example H142E40)
4<->ModAbVar_additional4 (Example H142E41)<->text1637.htm#18136<->ModAbVar_additional4 (Example H142E41)
4<->Example-additional4 :<->text1637.htm#18136<->Example-additional4 :: ModAbVar_additional4 (Example H142E41)
4<->ModAbVar_additional5 (Example H142E42)<->text1637.htm#18137<->ModAbVar_additional5 (Example H142E42)
4<->Example-additional5 :<->text1637.htm#18137<->Example-additional5 :: ModAbVar_additional5 (Example H142E42)
4<->ModAbVar_additional6 (Example H142E43)<->text1637.htm#18138<->ModAbVar_additional6 (Example H142E43)
4<->Example-additional6 :<->text1637.htm#18138<->Example-additional6 :: ModAbVar_additional6 (Example H142E43)
3<->subsec_additional_examples :<->text1637.htm#18132<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
3<->modabvar :<->text1637.htm<->modabvar :: Creation and Basic Functions (MODULAR ABELIAN VARIETIES)
3<->homology :<->text1638.htm<->homology :: Homology  (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1638.htm#18140<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->Homology(A) <->text1638.htm#18141<->Homology(A) : ModAbVar -&gt;  ModAbVarHomol
4<->ModAbVar_Homology-Creation (Example H142E44)<->text1638.htm#18142<->ModAbVar_Homology-Creation (Example H142E44)
4<->Example-Homology-Creation :<->text1638.htm#18142<->Example-Homology-Creation :: ModAbVar_Homology-Creation (Example H142E44)
3<->subsec_creation :<->text1638.htm#18140<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1638.htm#18143<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->Dimension(H) <->text1638.htm#18144<->Dimension(H) : ModAbVarHomol -&gt;  RngIntElt
4<->ModAbVar_Homology-Invariants (Example H142E45)<->text1638.htm#18145<->ModAbVar_Homology-Invariants (Example H142E45)
4<->Example-Homology-Invariants :<->text1638.htm#18145<->Example-Homology-Invariants :: ModAbVar_Homology-Invariants (Example H142E45)
3<->subsec_invariants :<->text1638.htm#18143<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_functors_to_categories_of_lattices_and_vector_spaces :<->text1638.htm#18146<->subsec_functors_to_categories_of_lattices_and_vector_spaces :: Functors to Categories of Lattices and Vector Spaces (MODULAR ABELIAN VARIETIES)
5<->IntegralHomology(A) <->text1638.htm#18147<->IntegralHomology(A) : ModAbVar -&gt;  Lat
5<->Lattice(H) <->text1638.htm#18148<->Lattice(H) : ModAbVarHomol -&gt;  Lat
5<->RationalHomology(A) <->text1638.htm#18149<->RationalHomology(A) : ModAbVar -&gt;  ModTupFld
5<->RealHomology(A) <->text1638.htm#18150<->RealHomology(A) : ModAbVar -&gt;  ModTupFld
5<->RealVectorSpace(H) <->text1638.htm#18151<->RealVectorSpace(H) : ModAbVarHomol -&gt;  ModTupFld
5<->VectorSpace(H) <->text1638.htm#18152<->VectorSpace(H) : ModAbVarHomol -&gt;  ModTupFld
4<->ModAbVar_additional8 (Example H142E46)<->text1638.htm#18153<->ModAbVar_additional8 (Example H142E46)
4<->Example-additional8 :<->text1638.htm#18153<->Example-additional8 :: ModAbVar_additional8 (Example H142E46)
4<->ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces (Example H142E47)<->text1638.htm#18154<->ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces (Example H142E47)
4<->Example-Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces :<->text1638.htm#18154<->Example-Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces :: ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces (Example H142E47)
4<->ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces2 (Example H142E48)<->text1638.htm#18155<->ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces2 (Example H142E48)
4<->Example-Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces2 :<->text1638.htm#18155<->Example-Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces2 :: ModAbVar_Homology-Functors_to_Categories_of_Lattices_and_Vector_Spaces2 (Example H142E48)
3<->subsec_functors_to_categories_of_lattices_and_vector_spaces :<->text1638.htm#18146<->subsec_functors_to_categories_of_lattices_and_vector_spaces :: Functors to Categories of Lattices and Vector Spaces (MODULAR ABELIAN VARIETIES)
3<->subsec_modular_structure :<->text1638.htm#18156<->subsec_modular_structure :: Modular Structure (MODULAR ABELIAN VARIETIES)
5<->IsAttachedToModularSymbols(H) <->text1638.htm#18157<->IsAttachedToModularSymbols(H) : ModAbVarHomol -&gt;  BoolElt
5<->ModularSymbols(H) <->text1638.htm#18158<->ModularSymbols(H) : ModAbVarHomol -&gt;  SeqEnum
4<->ModAbVar_Homology-Modular_Structure (Example H142E49)<->text1638.htm#18159<->ModAbVar_Homology-Modular_Structure (Example H142E49)
4<->Example-Homology-Modular_Structure :<->text1638.htm#18159<->Example-Homology-Modular_Structure :: ModAbVar_Homology-Modular_Structure (Example H142E49)
3<->subsec_modular_structure :<->text1638.htm#18156<->subsec_modular_structure :: Modular Structure (MODULAR ABELIAN VARIETIES)
3<->subsec_additional_examples :<->text1638.htm#18160<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
4<->ModAbVar_homology1 (Example H142E50)<->text1638.htm#18161<->ModAbVar_homology1 (Example H142E50)
4<->Example-homology1 :<->text1638.htm#18161<->Example-homology1 :: ModAbVar_homology1 (Example H142E50)
4<->ModAbVar_additional20 (Example H142E51)<->text1638.htm#18162<->ModAbVar_additional20 (Example H142E51)
4<->Example-additional20 :<->text1638.htm#18162<->Example-additional20 :: ModAbVar_additional20 (Example H142E51)
3<->subsec_additional_examples :<->text1638.htm#18160<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
3<->homology :<->text1638.htm<->homology :: Homology  (MODULAR ABELIAN VARIETIES)
3<->Homomorphisms  (MODULAR ABELIAN VARIETIES)<->text1639.htm<->Homomorphisms  (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1639.htm#18164<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->IdentityMap(A) <->text1639.htm#18165<->IdentityMap(A) : ModAbVar -&gt;  MapModAbVar
5<->ZeroMap(A) <->text1639.htm#18166<->ZeroMap(A) : ModAbVar -&gt;  MapModAbVar
5<->nIsogeny(A, n) <->text1639.htm#18167<->nIsogeny(A, n) : ModAbVar, RngIntElt ->  MapModAbVar
5<->nIsogeny(A, n) <->text1639.htm#18167<->nIsogeny(A, n) : ModAbVar, FldRatElt -&gt;  MapModAbVar
4<->ModAbVar_Morphisms-Creation (Example H142E52)<->text1639.htm#18168<->ModAbVar_Morphisms-Creation (Example H142E52)
4<->Example-Morphisms-Creation :<->text1639.htm#18168<->Example-Morphisms-Creation :: ModAbVar_Morphisms-Creation (Example H142E52)
3<->subsec_creation :<->text1639.htm#18164<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_restriction,_evaluation,_and_other_manipulations :<->text1639.htm#18169<->subsec_restriction,_evaluation,_and_other_manipulations :: Restriction, Evaluation, and Other Manipulations (MODULAR ABELIAN VARIETIES)
5<->Restriction(phi, B) <->text1639.htm#18170<->Restriction(phi, B) : MapModAbVar, ModAbVar -&gt;  MapModAbVar
5<->RestrictEndomorphism(phi, B) <->text1639.htm#18171<->RestrictEndomorphism(phi, B) : MapModAbVar, ModAbVar -&gt;  MapModAbVar
5<->RestrictEndomorphism(phi, i) <->text1639.htm#18172<->RestrictEndomorphism(phi, i) : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
5<->RestrictionToImage(phi, i) <->text1639.htm#18173<->RestrictionToImage(phi, i) : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
5<->Evaluate(f, phi) <->text1639.htm#18174<->Evaluate(f, phi) : RngUPolElt, MapModAbVar -&gt;  MapModAbVar
5<->DivideOutIntegers(phi) <->text1639.htm#18175<->DivideOutIntegers(phi) : MapModAbVar -&gt;  MapModAbVar, RngIntElt
5<->SurjectivePart(phi) <->text1639.htm#18176<->SurjectivePart(phi) : MapModAbVar -&gt;  MapModAbVar
5<->UniversalPropertyOfCokernel(pi, f) <->text1639.htm#18177<->UniversalPropertyOfCokernel(pi, f) : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
4<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations (Example H142E53)<->text1639.htm#18178<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations (Example H142E53)
4<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations :<->text1639.htm#18178<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations :: ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations (Example H142E53)
4<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations2 (Example H142E54)<->text1639.htm#18179<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations2 (Example H142E54)
4<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations2 :<->text1639.htm#18179<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations2 :: ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations2 (Example H142E54)
4<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations3 (Example H142E55)<->text1639.htm#18180<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations3 (Example H142E55)
4<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations3 :<->text1639.htm#18180<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations3 :: ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations3 (Example H142E55)
4<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations4 (Example H142E56)<->text1639.htm#18181<->ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations4 (Example H142E56)
4<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations4 :<->text1639.htm#18181<->Example-Morphisms-Restriction,_Evaluation,_and_Other_Manipulations4 :: ModAbVar_Morphisms-Restriction,_Evaluation,_and_Other_Manipulations4 (Example H142E56)
3<->subsec_restriction,_evaluation,_and_other_manipulations :<->text1639.htm#18169<->subsec_restriction,_evaluation,_and_other_manipulations :: Restriction, Evaluation, and Other Manipulations (MODULAR ABELIAN VARIETIES)
3<->subsec_kernels :<->text1639.htm#18182<->subsec_kernels :: Kernels (MODULAR ABELIAN VARIETIES)
5<->ComponentGroupOfKernel(phi) <->text1639.htm#18183<->ComponentGroupOfKernel(phi) : MapModAbVar -&gt;  ModAbVarSubGrp
5<->ConnectedKernel(phi) <->text1639.htm#18184<->ConnectedKernel(phi) : MapModAbVar -&gt;  ModAbVar, MapModAbVar
5<->Kernel(phi) <->text1639.htm#18185<->Kernel(phi) : MapModAbVar -&gt;                            ModAbVarSubGrp, ModAbVar, MapModAbVar
4<->ModAbVar_Morphisms-Kernels (Example H142E57)<->text1639.htm#18186<->ModAbVar_Morphisms-Kernels (Example H142E57)
4<->Example-Morphisms-Kernels :<->text1639.htm#18186<->Example-Morphisms-Kernels :: ModAbVar_Morphisms-Kernels (Example H142E57)
3<->subsec_kernels :<->text1639.htm#18182<->subsec_kernels :: Kernels (MODULAR ABELIAN VARIETIES)
3<->subsec_images :<->text1639.htm#18187<->subsec_images :: Images (MODULAR ABELIAN VARIETIES)
5<->A @ phi <->text1639.htm#18188<->A @ phi : ModAbVar, MapModAbVar -&gt; ModAbVar
5<->G @ phi <->text1639.htm#18189<->G @ phi : ModAbVarSubGrp, MapModAbVar -&gt; ModAbVarSubGrp
5<->Image(phi) <->text1639.htm#18190<->Image(phi) : MapModAbVar -&gt;  ModAbVar, MapModAbVar, MapModAbVar
5<->G @@ phi <->text1639.htm#18191<->G @@ phi : ModAbVarSubGrp, MapModAbVar -&gt;  ModAbVarSubGrp
4<->ModAbVar_Morphisms-Images (Example H142E58)<->text1639.htm#18192<->ModAbVar_Morphisms-Images (Example H142E58)
4<->Example-Morphisms-Images :<->text1639.htm#18192<->Example-Morphisms-Images :: ModAbVar_Morphisms-Images (Example H142E58)
3<->subsec_images :<->text1639.htm#18187<->subsec_images :: Images (MODULAR ABELIAN VARIETIES)
3<->subsec_cokernels :<->text1639.htm#18193<->subsec_cokernels :: Cokernels (MODULAR ABELIAN VARIETIES)
5<->Cokernel(phi) <->text1639.htm#18194<->Cokernel(phi) : MapModAbVar -&gt;  ModAbVar, MapModAbVar
4<->ModAbVar_Morphisms-Cokernels (Example H142E59)<->text1639.htm#18195<->ModAbVar_Morphisms-Cokernels (Example H142E59)
4<->Example-Morphisms-Cokernels :<->text1639.htm#18195<->Example-Morphisms-Cokernels :: ModAbVar_Morphisms-Cokernels (Example H142E59)
3<->subsec_cokernels :<->text1639.htm#18193<->subsec_cokernels :: Cokernels (MODULAR ABELIAN VARIETIES)
3<->subsec_matrix_structure :<->text1639.htm#18196<->subsec_matrix_structure :: Matrix Structure (MODULAR ABELIAN VARIETIES)
5<->Matrix(phi) <->text1639.htm#18197<->Matrix(phi) : MapModAbVar -&gt;  ModMatFldElt
5<->Eltseq(phi) <->text1639.htm#18198<->Eltseq(phi) : MapModAbVar -&gt;  SeqEnum
5<->Ncols(phi) <->text1639.htm#18199<->Ncols(phi) : MapModAbVar -&gt;  RngIntElt
5<->Nrows(phi) <->text1639.htm#18200<->Nrows(phi) : MapModAbVar -&gt;  RngIntElt
5<->Rows(phi) <->text1639.htm#18201<->Rows(phi) : MapModAbVar -&gt;  SeqEnum
5<->IntegralMatrix(phi) <->text1639.htm#18202<->IntegralMatrix(phi) : MapModAbVar -&gt;  ModMatRngElt
5<->IntegralMatrixOverQ(phi) <->text1639.htm#18203<->IntegralMatrixOverQ(phi) : MapModAbVar -&gt;  ModMatFldElt
5<->RealMatrix(phi) <->text1639.htm#18204<->RealMatrix(phi) : MapModAbVar -&gt;   ModMatFldElt
4<->ModAbVar_Morphisms-Matrix_Structure (Example H142E60)<->text1639.htm#18205<->ModAbVar_Morphisms-Matrix_Structure (Example H142E60)
4<->Example-Morphisms-Matrix_Structure :<->text1639.htm#18205<->Example-Morphisms-Matrix_Structure :: ModAbVar_Morphisms-Matrix_Structure (Example H142E60)
3<->subsec_matrix_structure :<->text1639.htm#18196<->subsec_matrix_structure :: Matrix Structure (MODULAR ABELIAN VARIETIES)
3<->subsec_arithmetic :<->text1639.htm#18206<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
5<->Inverse(phi) <->text1639.htm#18207<->Inverse(phi) : MapModAbVar -&gt;  MapModAbVar, RngIntElt
5<->phi * psi <->text1639.htm#18208<->phi * psi : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
5<->a * phi <->text1639.htm#18209<->a * phi : RngIntElt, MapModAbVar ->  MapModAbVar
5<->a * phi <->text1639.htm#18209<->a * phi : FldRatElt, MapModAbVar -&gt;  MapModAbVar
5<->phi * psi <->text1639.htm#18210<->phi * psi : MapModAbVar, ModMatFldElt ->  ModMatFldElt
5<->phi * psi <->text1639.htm#18210<->phi * psi : MapModAbVar, AlgMatElt -&gt;  AlgMatElt
5<->psi * phi <->text1639.htm#18211<->psi * phi : ModMatFldElt, MapModAbVar ->  ModMatFldElt
5<->psi * phi <->text1639.htm#18211<->psi * phi : AlgMatElt, MapModAbVar -&gt;  AlgMatElt
5<->phi ^ n <->text1639.htm#18212<->phi ^ n : MapModAbVar, RngIntElt -&gt;  MapModAbVar
5<->phi + psi <->text1639.htm#18213<->phi + psi : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
5<->n + phi <->text1639.htm#18214<->n + phi : RngIntElt, MapModAbVar ->  MapModAbVar
5<->n + phi <->text1639.htm#18214<->n + phi : FldRatElt, MapModAbVar -&gt;  MapModAbVar
5<->phi + n <->text1639.htm#18215<->phi + n : MapModAbVar, RngIntElt -&gt;  MapModAbVar
5<->phi + psi <->text1639.htm#18216<->phi + psi : MapModAbVar, ModMatFldElt ->  ModMatFldElt
5<->phi + psi <->text1639.htm#18216<->phi + psi : MapModAbVar, AlgMatElt -&gt;  AlgMatElt
5<->psi + phi <->text1639.htm#18217<->psi + phi : ModMatFldElt, MapModAbVar ->  ModMatFldElt
5<->psi + phi <->text1639.htm#18217<->psi + phi : AlgMatElt, MapModAbVar -&gt;  AlgMatElt
5<->phi - psi <->text1639.htm#18218<->phi - psi : MapModAbVar, MapModAbVar -&gt;  MapModAbVar
5<->n - phi <->text1639.htm#18219<->n - phi : RngIntElt, MapModAbVar ->  MapModAbVar
5<->n - phi <->text1639.htm#18219<->n - phi : FldRatElt, MapModAbVar -&gt;  MapModAbVar
5<->phi - n <->text1639.htm#18220<->phi - n : MapModAbVar, RngIntElt ->  MapModAbVar
5<->phi - n <->text1639.htm#18220<->phi - n : MapModAbVar, FldRatElt -&gt;  MapModAbVar
5<->phi - psi <->text1639.htm#18221<->phi - psi : MapModAbVar, ModMatFldElt ->  ModMatFldElt
5<->phi - psi <->text1639.htm#18221<->phi - psi : MapModAbVar, AlgMatElt -&gt;  AlgMatElt
5<->psi - phi <->text1639.htm#18222<->psi - phi : ModMatFldElt, MapModAbVar ->  ModMatFldElt
5<->psi - phi <->text1639.htm#18222<->psi - phi : AlgMatElt, MapModAbVar -&gt;  AlgMatElt
4<->ModAbVar_Morphisms-Arithmetic (Example H142E61)<->text1639.htm#18223<->ModAbVar_Morphisms-Arithmetic (Example H142E61)
4<->Example-Morphisms-Arithmetic :<->text1639.htm#18223<->Example-Morphisms-Arithmetic :: ModAbVar_Morphisms-Arithmetic (Example H142E61)
3<->subsec_arithmetic :<->text1639.htm#18206<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
3<->subsec_polynomials :<->text1639.htm#18224<->subsec_polynomials :: Polynomials (MODULAR ABELIAN VARIETIES)
5<->CharacteristicPolynomial(phi) <->text1639.htm#18225<->CharacteristicPolynomial(phi) : MapModAbVar -&gt;  RngUPolElt
5<->FactoredCharacteristicPolynomial(phi) <->text1639.htm#18226<->FactoredCharacteristicPolynomial(phi) : MapModAbVar -&gt;  RngUPolElt
5<->MinimalPolynomial(phi) <->text1639.htm#18227<->MinimalPolynomial(phi) : MapModAbVar -&gt;  RngUPolElt
4<->ModAbVar_Morphisms-Polynomials (Example H142E62)<->text1639.htm#18228<->ModAbVar_Morphisms-Polynomials (Example H142E62)
4<->Example-Morphisms-Polynomials :<->text1639.htm#18228<->Example-Morphisms-Polynomials :: ModAbVar_Morphisms-Polynomials (Example H142E62)
3<->subsec_polynomials :<->text1639.htm#18224<->subsec_polynomials :: Polynomials (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1639.htm#18229<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->Domain(phi) <->text1639.htm#18230<->Domain(phi) : MapModAbVar -&gt;  ModAbVar
5<->Codomain(phi) <->text1639.htm#18231<->Codomain(phi) : MapModAbVar -&gt;  ModAbVar
5<->Degree(phi) <->text1639.htm#18232<->Degree(phi) : MapModAbVar -&gt;  RngIntElt
5<->Denominator(phi) <->text1639.htm#18233<->Denominator(phi) : MapModAbVar -&gt;  RngIntElt
5<->ClearDenominator(phi) <->text1639.htm#18234<->ClearDenominator(phi) : MapModAbVar -&gt;  MapModAbVar
5<->FieldOfDefinition(phi) <->text1639.htm#18235<->FieldOfDefinition(phi) : MapModAbVar -&gt;  ModAbVar
5<->Nullity(phi) <->text1639.htm#18236<->Nullity(phi) : MapModAbVar -&gt;  RngIntElt
5<->Rank(phi) <->text1639.htm#18237<->Rank(phi) : MapModAbVar -&gt;  RngIntElt
5<->Trace(phi) <->text1639.htm#18238<->Trace(phi) : MapModAbVar -&gt;  FldRatElt
4<->ModAbVar_Morphisms-Invariants (Example H142E63)<->text1639.htm#18239<->ModAbVar_Morphisms-Invariants (Example H142E63)
4<->Example-Morphisms-Invariants :<->text1639.htm#18239<->Example-Morphisms-Invariants :: ModAbVar_Morphisms-Invariants (Example H142E63)
3<->subsec_invariants :<->text1639.htm#18229<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_predicates :<->text1639.htm#18240<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
5<->IsMorphism(phi) <->text1639.htm#18241<->IsMorphism(phi) : MapModAbVar -&gt;  BoolElt
5<->OnlyUpToIsogeny(phi) <->text1639.htm#18242<->OnlyUpToIsogeny(phi) : MapModAbVar -&gt;  BoolElt
5<->HasFiniteKernel(phi) <->text1639.htm#18243<->HasFiniteKernel(phi) : MapModAbVar -&gt;  BoolElt
5<->IsInjective(phi) <->text1639.htm#18244<->IsInjective(phi) : MapModAbVar -&gt;  BoolElt
5<->IsSurjective(phi) <->text1639.htm#18245<->IsSurjective(phi) : MapModAbVar -&gt;  BoolElt
5<->IsEndomorphism(phi) <->text1639.htm#18246<->IsEndomorphism(phi) : MapModAbVar -&gt;  BoolElt
5<->IsInteger(phi) <->text1639.htm#18247<->IsInteger(phi) : MapModAbVar -&gt;  BoolElt, RngIntElt
5<->IsIsogeny(phi) <->text1639.htm#18248<->IsIsogeny(phi) : MapModAbVar -&gt;  BoolElt
5<->IsIsomorphism(phi) <->text1639.htm#18249<->IsIsomorphism(phi) : MapModAbVar -&gt;  BoolElt
5<->IsOptimal(phi) <->text1639.htm#18250<->IsOptimal(phi) : MapModAbVar -&gt;  BoolElt
5<->IsHeckeOperator(phi) <->text1639.htm#18251<->IsHeckeOperator(phi) : MapModAbVar -&gt;  BoolElt, RngIntElt
5<->IsZero(phi) <->text1639.htm#18252<->IsZero(phi) : MapModAbVar -&gt;  BoolElt
5<->phi eq psi <->text1639.htm#18253<->phi eq psi : MapModAbVar, MapModAbVar -&gt;  BoolElt
5<->phi eq n <->text1639.htm#18254<->phi eq n : MapModAbVar, RngIntElt ->  BoolElt
5<->n eq phi <->text1639.htm#18254<->n eq phi : RngIntElt, MapModAbVar -&gt;  BoolElt
5<->phi in X <->text1639.htm#18255<->phi in X : MapModAbVar, List -&gt;  BoolElt
4<->ModAbVar_Morphisms-Predicates (Example H142E64)<->text1639.htm#18256<->ModAbVar_Morphisms-Predicates (Example H142E64)
4<->Example-Morphisms-Predicates :<->text1639.htm#18256<->Example-Morphisms-Predicates :: ModAbVar_Morphisms-Predicates (Example H142E64)
3<->subsec_predicates :<->text1639.htm#18240<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
3<->Homomorphisms  (MODULAR ABELIAN VARIETIES)<->text1639.htm<->Homomorphisms  (MODULAR ABELIAN VARIETIES)
3<->homspace :<->text1640.htm<->homspace :: Endomorphism Algebras and Hom Spaces (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1640.htm#18258<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->Hom(A, B, oQ) <->text1640.htm#18259<->Hom(A, B, oQ) : ModAbVar, ModAbVar, BoolElt ->  HomModAbVar
5<->Hom(A, B) <->text1640.htm#18259<->Hom(A, B) : ModAbVar, ModAbVar -&gt;  HomModAbVar
5<->End(A, oQ) <->text1640.htm#18260<->End(A, oQ) : ModAbVar, BoolElt ->  HomModAbVar
5<->End(A) <->text1640.htm#18260<->End(A) : ModAbVar -&gt;  HomModAbVar
5<->BaseExtend(H, R) <->text1640.htm#18261<->BaseExtend(H, R) : HomModAbVar, Rng -&gt;  HomModAbVar
5<->HeckeAlgebra(A) <->text1640.htm#18262<->HeckeAlgebra(A) : ModAbVar -&gt;  HomModAbVar
4<->ModAbVar_Homspace-Creation (Example H142E65)<->text1640.htm#18263<->ModAbVar_Homspace-Creation (Example H142E65)
4<->Example-Homspace-Creation :<->text1640.htm#18263<->Example-Homspace-Creation :: ModAbVar_Homspace-Creation (Example H142E65)
3<->subsec_creation :<->text1640.htm#18258<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_subgroups__and_subrings :<->text1640.htm#18264<->subsec_subgroups__and_subrings :: Subgroups and Subrings (MODULAR ABELIAN VARIETIES)
5<->Subgroup(X) <->text1640.htm#18265<->Subgroup(X) : [MapModAbVar] -&gt;  HomModAbVar
5<->Subgroup(X, oQ : parameters) <->text1640.htm#18266<->Subgroup(X, oQ : parameters) : [MapModAbVar], BoolElt -&gt;  HomModAbVar
5<->Subring(X, oQ) <->text1640.htm#18267<->Subring(X, oQ) : [MapModAbVar], BoolElt ->  HomModAbVar
5<->Subring(X) <->text1640.htm#18267<->Subring(X) : [MapModAbVar] -&gt;  HomModAbVar
5<->Subring(phi) <->text1640.htm#18268<->Subring(phi) : MapModAbVar -&gt;  HomModAbVar
5<->Saturation(H) <->text1640.htm#18269<->Saturation(H) : HomModAbVar -&gt;  HomModAbVar
5<->RingGeneratedBy(H) <->text1640.htm#18270<->RingGeneratedBy(H) : HomModAbVar -&gt;  HomModAbVar
4<->ModAbVar_Homspace-Subgroups__and_Subrings (Example H142E66)<->text1640.htm#18271<->ModAbVar_Homspace-Subgroups__and_Subrings (Example H142E66)
4<->Example-Homspace-Subgroups__and_Subrings :<->text1640.htm#18271<->Example-Homspace-Subgroups__and_Subrings :: ModAbVar_Homspace-Subgroups__and_Subrings (Example H142E66)
4<->ModAbVar_Homspace-Subgroups__and_Subrings2 (Example H142E67)<->text1640.htm#18272<->ModAbVar_Homspace-Subgroups__and_Subrings2 (Example H142E67)
4<->Example-Homspace-Subgroups__and_Subrings2 :<->text1640.htm#18272<->Example-Homspace-Subgroups__and_Subrings2 :: ModAbVar_Homspace-Subgroups__and_Subrings2 (Example H142E67)
4<->ModAbVar_Homspace-Subgroups__and_Subrings3 (Example H142E68)<->text1640.htm#18273<->ModAbVar_Homspace-Subgroups__and_Subrings3 (Example H142E68)
4<->Example-Homspace-Subgroups__and_Subrings3 :<->text1640.htm#18273<->Example-Homspace-Subgroups__and_Subrings3 :: ModAbVar_Homspace-Subgroups__and_Subrings3 (Example H142E68)
4<->ModAbVar_Homspace-Subgroups__and_Subrings4 (Example H142E69)<->text1640.htm#18274<->ModAbVar_Homspace-Subgroups__and_Subrings4 (Example H142E69)
4<->Example-Homspace-Subgroups__and_Subrings4 :<->text1640.htm#18274<->Example-Homspace-Subgroups__and_Subrings4 :: ModAbVar_Homspace-Subgroups__and_Subrings4 (Example H142E69)
3<->subsec_subgroups__and_subrings :<->text1640.htm#18264<->subsec_subgroups__and_subrings :: Subgroups and Subrings (MODULAR ABELIAN VARIETIES)
3<->subsec_pullback_and_pushforward_of_hom_spaces :<->text1640.htm#18275<->subsec_pullback_and_pushforward_of_hom_spaces :: Pullback and Pushforward of Hom Spaces (MODULAR ABELIAN VARIETIES)
5<->Pullback(H, phi) <->text1640.htm#18276<->Pullback(H, phi) : HomModAbVar, MapModAbVar -&gt;  HomModAbVar
5<->Pullback(phi, H) <->text1640.htm#18277<->Pullback(phi, H) : MapModAbVar, HomModAbVar -&gt;  HomModAbVar
5<->Pullback(phi, H, psi) <->text1640.htm#18278<->Pullback(phi, H, psi) : MapModAbVar, HomModAbVar, MapModAbVar -&gt;  HomModAbVar
4<->ModAbVar_Homspace-Pullback_and_Pushforward_of_Hom_Spaces (Example H142E70)<->text1640.htm#18279<->ModAbVar_Homspace-Pullback_and_Pushforward_of_Hom_Spaces (Example H142E70)
4<->Example-Homspace-Pullback_and_Pushforward_of_Hom_Spaces :<->text1640.htm#18279<->Example-Homspace-Pullback_and_Pushforward_of_Hom_Spaces :: ModAbVar_Homspace-Pullback_and_Pushforward_of_Hom_Spaces (Example H142E70)
3<->subsec_pullback_and_pushforward_of_hom_spaces :<->text1640.htm#18275<->subsec_pullback_and_pushforward_of_hom_spaces :: Pullback and Pushforward of Hom Spaces (MODULAR ABELIAN VARIETIES)
3<->subsec_arithmetic :<->text1640.htm#18280<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
5<->H1 + H2 <->text1640.htm#18281<->H1 + H2 : HomModAbVar, HomModAbVar -&gt;  HomModAbVar
5<->H1 meet H2 <->text1640.htm#18282<->H1 meet H2 : HomModAbVar, HomModAbVar -&gt;  HomModAbVar
4<->ModAbVar_Homspace-Arithmetic (Example H142E71)<->text1640.htm#18283<->ModAbVar_Homspace-Arithmetic (Example H142E71)
4<->Example-Homspace-Arithmetic :<->text1640.htm#18283<->Example-Homspace-Arithmetic :: ModAbVar_Homspace-Arithmetic (Example H142E71)
3<->subsec_arithmetic :<->text1640.htm#18280<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
3<->subsec_quotients :<->text1640.htm#18284<->subsec_quotients :: Quotients (MODULAR ABELIAN VARIETIES)
5<->Index(H2, H1) <->text1640.htm#18285<->Index(H2, H1) : HomModAbVar, HomModAbVar -&gt;  RngIntElt
5<->/ :: Quotient(H2, H1) <->text1640.htm#18286<->/ :: Quotient(H2, H1) : HomModAbVar, HomModAbVar -&gt;  GrpAb, Map, Map
5<->Quotient(H2, H1) <->text1640.htm#18286<->Quotient(H2, H1) : HomModAbVar, HomModAbVar -&gt;  GrpAb, Map, Map
4<->ModAbVar_Homspace-Quotients (Example H142E72)<->text1640.htm#18287<->ModAbVar_Homspace-Quotients (Example H142E72)
4<->Example-Homspace-Quotients :<->text1640.htm#18287<->Example-Homspace-Quotients :: ModAbVar_Homspace-Quotients (Example H142E72)
3<->subsec_quotients :<->text1640.htm#18284<->subsec_quotients :: Quotients (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1640.htm#18288<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->Domain(H) <->text1640.htm#18289<->Domain(H) : HomModAbVar -&gt;  ModAbVar
5<->Codomain(H) <->text1640.htm#18290<->Codomain(H) : HomModAbVar -&gt;  ModAbVar
5<->FieldOfDefinition(H) <->text1640.htm#18291<->FieldOfDefinition(H) : HomModAbVar -&gt;  ModAbVar
5<->Discriminant(H) <->text1640.htm#18292<->Discriminant(H) : HomModAbVar -&gt;  FldRatElt, AlgMatElt
4<->ModAbVar_Homspace-Invariants (Example H142E73)<->text1640.htm#18293<->ModAbVar_Homspace-Invariants (Example H142E73)
4<->Example-Homspace-Invariants :<->text1640.htm#18293<->Example-Homspace-Invariants :: ModAbVar_Homspace-Invariants (Example H142E73)
3<->subsec_invariants :<->text1640.htm#18288<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_structural_invariants :<->text1640.htm#18294<->subsec_structural_invariants :: Structural Invariants (MODULAR ABELIAN VARIETIES)
5<->Generators :: Basis(H) <->text1640.htm#18295<->Generators :: Basis(H) : HomModAbVar -&gt;  SeqEnum
5<->Basis(H) <->text1640.htm#18295<->Basis(H) : HomModAbVar -&gt;  SeqEnum
5<->Rank :: Dimension(H) <->text1640.htm#18296<->Rank :: Dimension(H) : HomModAbVar -&gt;  RngIntElt
5<->Dimension(H) <->text1640.htm#18296<->Dimension(H) : HomModAbVar -&gt;  RngIntElt
5<->Ngens(H) <->text1640.htm#18297<->Ngens(H) : HomModAbVar -&gt;  RngIntElt
5<->H . i <->text1640.htm#18298<->H . i : HomModAbVar, RngIntElt -&gt;  MapModAbVar
4<->ModAbVar_Homspace-Structural_Invariants (Example H142E74)<->text1640.htm#18299<->ModAbVar_Homspace-Structural_Invariants (Example H142E74)
4<->Example-Homspace-Structural_Invariants :<->text1640.htm#18299<->Example-Homspace-Structural_Invariants :: ModAbVar_Homspace-Structural_Invariants (Example H142E74)
3<->subsec_structural_invariants :<->text1640.htm#18294<->subsec_structural_invariants :: Structural Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_matrix_and_module_structure :<->text1640.htm#18300<->subsec_matrix_and_module_structure :: Matrix and Module Structure (MODULAR ABELIAN VARIETIES)
5<->VectorSpace :: Lattice(H) <->text1640.htm#18301<->VectorSpace :: Lattice(H) : HomModAbVar -&gt;  Lat
5<->Lattice(H) <->text1640.htm#18301<->Lattice(H) : HomModAbVar -&gt;  Lat
5<->MatrixAlgebra(H) <->text1640.htm#18302<->MatrixAlgebra(H) : HomModAbVar -&gt;  AlgMat
5<->RMatrixSpace(H) <->text1640.htm#18303<->RMatrixSpace(H) : HomModAbVar -&gt;  ModMatFld
5<->RModuleWithAction(H) <->text1640.htm#18304<->RModuleWithAction(H) : HomModAbVar -&gt;  ModED
5<->RModuleWithAction(H, p) <->text1640.htm#18305<->RModuleWithAction(H, p) : HomModAbVar, RngIntElt -&gt;  ModED
4<->ModAbVar_Homspace-Matrix_and_Module_Structure (Example H142E75)<->text1640.htm#18306<->ModAbVar_Homspace-Matrix_and_Module_Structure (Example H142E75)
4<->Example-Homspace-Matrix_and_Module_Structure :<->text1640.htm#18306<->Example-Homspace-Matrix_and_Module_Structure :: ModAbVar_Homspace-Matrix_and_Module_Structure (Example H142E75)
4<->ModAbVar_Homspace-Matrix_and_Module_Structure3 (Example H142E76)<->text1640.htm#18307<->ModAbVar_Homspace-Matrix_and_Module_Structure3 (Example H142E76)
4<->Example-Homspace-Matrix_and_Module_Structure3 :<->text1640.htm#18307<->Example-Homspace-Matrix_and_Module_Structure3 :: ModAbVar_Homspace-Matrix_and_Module_Structure3 (Example H142E76)
3<->subsec_matrix_and_module_structure :<->text1640.htm#18300<->subsec_matrix_and_module_structure :: Matrix and Module Structure (MODULAR ABELIAN VARIETIES)
3<->subsec_predicates :<->text1640.htm#18308<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
5<->IsRing(H) <->text1640.htm#18309<->IsRing(H) : HomModAbVar -&gt;  BoolElt
5<->IsField(H) <->text1640.htm#18310<->IsField(H) : HomModAbVar -&gt;  BoolElt, Fld, Map, Map
5<->IsCommutative(H) <->text1640.htm#18311<->IsCommutative(H) : HomModAbVar -&gt;  BoolElt
5<->IsHeckeAlgebra(H) <->text1640.htm#18312<->IsHeckeAlgebra(H) : HomModAbVar -&gt;  BoolElt
5<->IsOverQ(H) <->text1640.htm#18313<->IsOverQ(H) : HomModAbVar -&gt;  HomModAbVar
5<->IsSaturated(H) <->text1640.htm#18314<->IsSaturated(H) : HomModAbVar -&gt;  BoolElt
5<->H1 eq H2 <->text1640.htm#18315<->H1 eq H2 : HomModAbVar, HomModAbVar -&gt;  BoolElt
5<->H1 subset H2 <->text1640.htm#18316<->H1 subset H2 : HomModAbVar, HomModAbVar -&gt;  BoolElt
4<->ModAbVar_Homspace-Predicates (Example H142E77)<->text1640.htm#18317<->ModAbVar_Homspace-Predicates (Example H142E77)
4<->Example-Homspace-Predicates :<->text1640.htm#18317<->Example-Homspace-Predicates :: ModAbVar_Homspace-Predicates (Example H142E77)
3<->subsec_predicates :<->text1640.htm#18308<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
3<->subsec_random_element :<->text1640.htm#18318<->subsec_random_element :: Elements (MODULAR ABELIAN VARIETIES)
5<->H ! x <->text1640.htm#18319<->H ! x : HomModAbVar, . -&gt;  BoolElt, MapModAbVar
4<->ModAbVar_Homspace-Random_Element (Example H142E78)<->text1640.htm#18320<->ModAbVar_Homspace-Random_Element (Example H142E78)
4<->Example-Homspace-Random_Element :<->text1640.htm#18320<->Example-Homspace-Random_Element :: ModAbVar_Homspace-Random_Element (Example H142E78)
3<->subsec_random_element :<->text1640.htm#18318<->subsec_random_element :: Elements (MODULAR ABELIAN VARIETIES)
3<->homspace :<->text1640.htm<->homspace :: Endomorphism Algebras and Hom Spaces (MODULAR ABELIAN VARIETIES)
3<->arithabvar :<->text1641.htm<->arithabvar :: Arithmetic of Abelian  Varieties (MODULAR ABELIAN VARIETIES)
3<->subsec_direct_sum :<->text1641.htm#18322<->subsec_direct_sum :: Direct Sum (MODULAR ABELIAN VARIETIES)
5<->DirectProduct :: DirectSum(A, B) <->text1641.htm#18323<->DirectProduct :: DirectSum(A, B) : ModAbVar, ModAbVar -&gt;  ModAbVar, List, List
5<->* :: DirectSum(A, B) <->text1641.htm#18323<->* :: DirectSum(A, B) : ModAbVar, ModAbVar -&gt;  ModAbVar, List, List
5<->DirectSum(A, B) <->text1641.htm#18323<->DirectSum(A, B) : ModAbVar, ModAbVar -&gt;  ModAbVar, List, List
5<->DirectProduct :: DirectSum(X) <->text1641.htm#18324<->DirectProduct :: DirectSum(X) : [ModAbVar] -&gt;  ModAbVar, List, List
5<->DirectSum(X) <->text1641.htm#18324<->DirectSum(X) : [ModAbVar] -&gt;  ModAbVar, List, List
5<->A ^ n <->text1641.htm#18325<->A ^ n : ModAbVar, RngIntElt -&gt;  ModAbVar
4<->ModAbVar_direct-sum (Example H142E79)<->text1641.htm#18326<->ModAbVar_direct-sum (Example H142E79)
4<->Example-direct-sum :<->text1641.htm#18326<->Example-direct-sum :: ModAbVar_direct-sum (Example H142E79)
3<->subsec_direct_sum :<->text1641.htm#18322<->subsec_direct_sum :: Direct Sum (MODULAR ABELIAN VARIETIES)
3<->subsec_sum_in_an_ambient_variety :<->text1641.htm#18327<->subsec_sum_in_an_ambient_variety :: Sum in an Ambient Variety (MODULAR ABELIAN VARIETIES)
5<->A + B <->text1641.htm#18328<->A + B : ModAbVar, ModAbVar -&gt;   ModAbVar
5<->SumOf(X) <->text1641.htm#18329<->SumOf(X) : [ModAbVar] -&gt;   ModAbVar
5<->SumOfImages(phi, psi) <->text1641.htm#18330<->SumOfImages(phi, psi) : MapModAbVar, MapModAbVar -&gt;  ModAbVar, MapModAbVar, List
5<->SumOfMorphismImages(X) <->text1641.htm#18331<->SumOfMorphismImages(X) : List -&gt;  ModAbVar, MapModAbVar, List
5<->FindCommonEmbeddings(X) <->text1641.htm#18332<->FindCommonEmbeddings(X) : [ModAbVar] -&gt;  BoolElt, List
3<->subsec_sum_in_an_ambient_variety :<->text1641.htm#18327<->subsec_sum_in_an_ambient_variety :: Sum in an Ambient Variety (MODULAR ABELIAN VARIETIES)
3<->subsec_intersections :<->text1641.htm#18333<->subsec_intersections :: Intersections (MODULAR ABELIAN VARIETIES)
5<->Intersection :: A meet B <->text1641.htm#18334<->Intersection :: A meet B : ModAbVar, ModAbVar -&gt;  ModAbVarSubGrp, ModAbVar, MapModAbVar
5<->A meet B <->text1641.htm#18334<->A meet B : ModAbVar, ModAbVar -&gt;  ModAbVarSubGrp, ModAbVar, MapModAbVar
5<->IntersectionOfImages(X) <->text1641.htm#18335<->IntersectionOfImages(X) : List -&gt;   ModAbVarSubGrp, ModAbVar, MapModAbVar
5<->ComponentGroupOfIntersection(X) <->text1641.htm#18336<->ComponentGroupOfIntersection(X) : [ModAbVar] ->  ModAbVarSubGrp
5<->ComponentGroupOfIntersection(A, B) <->text1641.htm#18336<->ComponentGroupOfIntersection(A, B) : ModAbVar, ModAbVar -&gt;  ModAbVarSubGrp
4<->ModAbVar_Arithabvar-Intersections (Example H142E80)<->text1641.htm#18337<->ModAbVar_Arithabvar-Intersections (Example H142E80)
4<->Example-Arithabvar-Intersections :<->text1641.htm#18337<->Example-Arithabvar-Intersections :: ModAbVar_Arithabvar-Intersections (Example H142E80)
4<->ModAbVar_Arithabvar-Intersections2 (Example H142E81)<->text1641.htm#18338<->ModAbVar_Arithabvar-Intersections2 (Example H142E81)
4<->Example-Arithabvar-Intersections2 :<->text1641.htm#18338<->Example-Arithabvar-Intersections2 :: ModAbVar_Arithabvar-Intersections2 (Example H142E81)
3<->subsec_intersections :<->text1641.htm#18333<->subsec_intersections :: Intersections (MODULAR ABELIAN VARIETIES)
3<->subsec_quotients :<->text1641.htm#18339<->subsec_quotients :: Quotients (MODULAR ABELIAN VARIETIES)
5<->A / B <->text1641.htm#18340<->A / B : ModAbVar, ModAbVar -&gt;  ModAbVar, MapModAbVar
5<->Cokernel(phi) <->text1641.htm#18341<->Cokernel(phi) : MapModAbVar -&gt;  ModAbVar, MapModAbVar
4<->ModAbVar_Arithabvar-Quotients (Example H142E82)<->text1641.htm#18342<->ModAbVar_Arithabvar-Quotients (Example H142E82)
4<->Example-Arithabvar-Quotients :<->text1641.htm#18342<->Example-Arithabvar-Quotients :: ModAbVar_Arithabvar-Quotients (Example H142E82)
3<->subsec_quotients :<->text1641.htm#18339<->subsec_quotients :: Quotients (MODULAR ABELIAN VARIETIES)
3<->arithabvar :<->text1641.htm<->arithabvar :: Arithmetic of Abelian  Varieties (MODULAR ABELIAN VARIETIES)
3<->decomp :<->text1642.htm<->decomp :: Decomposing and Factoring  Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->subsec_decomposition :<->text1642.htm#18344<->subsec_decomposition :: Decomposition (MODULAR ABELIAN VARIETIES)
5<->Decomposition(A) <->text1642.htm#18345<->Decomposition(A) : ModAbVar -&gt;  SeqEnum
5<->A(n) <->text1642.htm#18346<->A(n) : RngIntElt, ModAbVar -&gt;  ModAbVar
4<->ModAbVar_Decomp-Decomposition (Example H142E83)<->text1642.htm#18347<->ModAbVar_Decomp-Decomposition (Example H142E83)
4<->Example-Decomp-Decomposition :<->text1642.htm#18347<->Example-Decomp-Decomposition :: ModAbVar_Decomp-Decomposition (Example H142E83)
3<->subsec_decomposition :<->text1642.htm#18344<->subsec_decomposition :: Decomposition (MODULAR ABELIAN VARIETIES)
3<->subsec_factorization :<->text1642.htm#18348<->subsec_factorization :: Factorization (MODULAR ABELIAN VARIETIES)
5<->Factorization :: Factorisation(A) <->text1642.htm#18349<->Factorization :: Factorisation(A) : ModAbVar -&gt;  List
5<->Factorisation(A) <->text1642.htm#18349<->Factorisation(A) : ModAbVar -&gt;  List
4<->ModAbVar_Decomp-Factorization (Example H142E84)<->text1642.htm#18350<->ModAbVar_Decomp-Factorization (Example H142E84)
4<->Example-Decomp-Factorization :<->text1642.htm#18350<->Example-Decomp-Factorization :: ModAbVar_Decomp-Factorization (Example H142E84)
3<->subsec_factorization :<->text1642.htm#18348<->subsec_factorization :: Factorization (MODULAR ABELIAN VARIETIES)
3<->subsec_decomposition_with_respect_to_an_endomorphism_or_a_commutative_ring :<->text1642.htm#18351<->subsec_decomposition_with_respect_to_an_endomorphism_or_a_commutative_ring :: Decomposition with respect to an Endomorphism or a Commutative Ring (MODULAR ABELIAN VARIETIES)
5<->DecomposeUsing(R) <->text1642.htm#18352<->DecomposeUsing(R) : HomModAbVar -&gt;  SeqEnum
5<->DecomposeUsing(phi) <->text1642.htm#18353<->DecomposeUsing(phi) : MapModAbVar -&gt;  SeqEnum
4<->ModAbVar_Decomp-Decomposition_with_respect_to_an_Endomorphism_or_a_Commutative_Ring (Example H142E85)<->text1642.htm#18354<->ModAbVar_Decomp-Decomposition_with_respect_to_an_Endomorphism_or_a_Commutative_Ring (Example H142E85)
4<->Example-Decomp-Decomposition_with_respect_to_an_Endomorphism_or_a_Commutative_Ring :<->text1642.htm#18354<->Example-Decomp-Decomposition_with_respect_to_an_Endomorphism_or_a_Commutative_Ring :: ModAbVar_Decomp-Decomposition_with_respect_to_an_Endomorphism_or_a_Commutative_Ring (Example H142E85)
3<->subsec_decomposition_with_respect_to_an_endomorphism_or_a_commutative_ring :<->text1642.htm#18351<->subsec_decomposition_with_respect_to_an_endomorphism_or_a_commutative_ring :: Decomposition with respect to an Endomorphism or a Commutative Ring (MODULAR ABELIAN VARIETIES)
3<->subsec_additional_examples :<->text1642.htm#18355<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
4<->ModAbVar_homology1 (Example H142E86)<->text1642.htm#18356<->ModAbVar_homology1 (Example H142E86)
4<->Example-homology1 :<->text1642.htm#18356<->Example-homology1 :: ModAbVar_homology1 (Example H142E86)
3<->subsec_additional_examples :<->text1642.htm#18355<->subsec_additional_examples :: Additional Examples (MODULAR ABELIAN VARIETIES)
3<->decomp :<->text1642.htm<->decomp :: Decomposing and Factoring  Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->building-blocks :<->text1643.htm<->building-blocks :: Building Blocks (MODULAR ABELIAN VARIETIES)
3<->subsec_background_notation :<->text1643.htm#18358<->subsec_background_notation :: Background and Notation (MODULAR ABELIAN VARIETIES)
5<->BoundedFSubspace(epsilon, k, degrees) <->text1643.htm#18359<->BoundedFSubspace(epsilon, k, degrees) : GrpDrchElt, RngIntElt, [RngIntElt] -&gt; [ ModSym ]
5<->IsCM :: HasCM(M : parameters) <->text1643.htm#18360<->IsCM :: HasCM(M : parameters) : ModSym -&gt; BoolElt, RngIntElt
5<->HasCM(M : parameters) <->text1643.htm#18360<->HasCM(M : parameters) : ModSym -&gt; BoolElt, RngIntElt
5<->InnerTwists(M $\colon$ \parameters) <->text1643.htm#18361<->InnerTwists(M $\colon$ \parameters) : ModSym -> [ GrpDrchElt ]
5<->InnerTwists(A : parameters) <->text1643.htm#18361<->InnerTwists(A : parameters) : ModAbVar -&gt; [ GrpDrchElt ]
5<->DegreeMap(M : parameters) <->text1643.htm#18362<->DegreeMap(M : parameters) : ModSym -&gt; [ Tup ], Fld
5<->BrauerClass(M) <->text1643.htm#18363<->BrauerClass(M) : ModSym -&gt; SeqEnum
5<->ObstructionDescentBuildingBlock(M) <->text1643.htm#18364<->ObstructionDescentBuildingBlock(M) : ModSym -&gt; SeqEnum
4<->ModAbVar_Complements-Complements (Example H142E87)<->text1643.htm#18365<->ModAbVar_Complements-Complements (Example H142E87)
4<->Example-Complements-Complements :<->text1643.htm#18365<->Example-Complements-Complements :: ModAbVar_Complements-Complements (Example H142E87)
3<->subsec_background_notation :<->text1643.htm#18358<->subsec_background_notation :: Background and Notation (MODULAR ABELIAN VARIETIES)
3<->building-blocks :<->text1643.htm<->building-blocks :: Building Blocks (MODULAR ABELIAN VARIETIES)
3<->complements :<->text1644.htm<->complements :: Orthogonal Complements (MODULAR ABELIAN VARIETIES)
3<->subsec_complements :<->text1644.htm#18367<->subsec_complements :: Complements (MODULAR ABELIAN VARIETIES)
5<->Complement(A : parameters) <->text1644.htm#18368<->Complement(A : parameters) : ModAbVar -&gt;  ModAbVar, MapModAbVar
5<->ComplementOfImage(phi : parameters) <->text1644.htm#18369<->ComplementOfImage(phi : parameters) : MapModAbVar -&gt;  ModAbVar, MapModAbVar
4<->ModAbVar_Complements-Complements (Example H142E88)<->text1644.htm#18370<->ModAbVar_Complements-Complements (Example H142E88)
4<->Example-Complements-Complements :<->text1644.htm#18370<->Example-Complements-Complements :: ModAbVar_Complements-Complements (Example H142E88)
3<->subsec_complements :<->text1644.htm#18367<->subsec_complements :: Complements (MODULAR ABELIAN VARIETIES)
3<->subsec_dual_abelian_variety :<->text1644.htm#18371<->subsec_dual_abelian_variety :: Dual Abelian Variety (MODULAR ABELIAN VARIETIES)
5<->IsDualComputable(A) <->text1644.htm#18372<->IsDualComputable(A) : ModAbVar -&gt;  BoolElt, ModAbVar
5<->Dual(A) <->text1644.htm#18373<->Dual(A) : ModAbVar -&gt;  ModAbVar
5<->ModularPolarization(A) <->text1644.htm#18374<->ModularPolarization(A) : ModAbVar -&gt;  MapModAbVar
4<->ModAbVar_Complements-Dual_Abelian_Variety (Example H142E89)<->text1644.htm#18375<->ModAbVar_Complements-Dual_Abelian_Variety (Example H142E89)
4<->Example-Complements-Dual_Abelian_Variety :<->text1644.htm#18375<->Example-Complements-Dual_Abelian_Variety :: ModAbVar_Complements-Dual_Abelian_Variety (Example H142E89)
3<->subsec_dual_abelian_variety :<->text1644.htm#18371<->subsec_dual_abelian_variety :: Dual Abelian Variety (MODULAR ABELIAN VARIETIES)
3<->subsec_intersection_pairing :<->text1644.htm#18376<->subsec_intersection_pairing :: Intersection Pairing (MODULAR ABELIAN VARIETIES)
5<->IntersectionPairing(H) <->text1644.htm#18377<->IntersectionPairing(H) : ModAbVarHomol -&gt;  AlgMatElt
5<->IntersectionPairing(A) <->text1644.htm#18378<->IntersectionPairing(A) : ModAbVar -&gt;  AlgMatElt
5<->IntersectionPairingIntegral(A) <->text1644.htm#18379<->IntersectionPairingIntegral(A) : ModAbVar -&gt;  AlgMatElt
4<->ModAbVar_Complements-Intersection_Pairing (Example H142E90)<->text1644.htm#18380<->ModAbVar_Complements-Intersection_Pairing (Example H142E90)
4<->Example-Complements-Intersection_Pairing :<->text1644.htm#18380<->Example-Complements-Intersection_Pairing :: ModAbVar_Complements-Intersection_Pairing (Example H142E90)
3<->subsec_intersection_pairing :<->text1644.htm#18376<->subsec_intersection_pairing :: Intersection Pairing (MODULAR ABELIAN VARIETIES)
3<->subsec_projections :<->text1644.htm#18381<->subsec_projections :: Projections (MODULAR ABELIAN VARIETIES)
5<->ProjectionOntoImage :: ProjectionOnto(A : parameters) <->text1644.htm#18382<->ProjectionOntoImage :: ProjectionOnto(A : parameters) : ModAbVar -&gt;  MapModAbVar
5<->ProjectionOnto(A : parameters) <->text1644.htm#18382<->ProjectionOnto(A : parameters) : ModAbVar -&gt;  MapModAbVar
4<->ModAbVar_Complements-Projections (Example H142E91)<->text1644.htm#18383<->ModAbVar_Complements-Projections (Example H142E91)
4<->Example-Complements-Projections :<->text1644.htm#18383<->Example-Complements-Projections :: ModAbVar_Complements-Projections (Example H142E91)
4<->ModAbVar_Complements-Projections2 (Example H142E92)<->text1644.htm#18384<->ModAbVar_Complements-Projections2 (Example H142E92)
4<->Example-Complements-Projections2 :<->text1644.htm#18384<->Example-Complements-Projections2 :: ModAbVar_Complements-Projections2 (Example H142E92)
3<->subsec_projections :<->text1644.htm#18381<->subsec_projections :: Projections (MODULAR ABELIAN VARIETIES)
3<->subsec_left_and_right_inverses :<->text1644.htm#18385<->subsec_left_and_right_inverses :: Left and Right Inverses (MODULAR ABELIAN VARIETIES)
5<->LeftInverse(phi : parameters) <->text1644.htm#18386<->LeftInverse(phi : parameters) : MapModAbVar -&gt;  MapModAbVar, RngIntElt
5<->LeftInverseMorphism(phi : parameters) <->text1644.htm#18387<->LeftInverseMorphism(phi : parameters) : MapModAbVar -&gt;  MapModAbVar
5<->RightInverse(phi : parameters) <->text1644.htm#18388<->RightInverse(phi : parameters) : MapModAbVar -&gt;     MapModAbVar, RngIntElt
5<->RightInverseMorphism(phi : parameters) <->text1644.htm#18389<->RightInverseMorphism(phi : parameters) : MapModAbVar -&gt;  MapModAbVar
4<->ModAbVar_Complements-Left_and_Right_Inverses (Example H142E93)<->text1644.htm#18390<->ModAbVar_Complements-Left_and_Right_Inverses (Example H142E93)
4<->Example-Complements-Left_and_Right_Inverses :<->text1644.htm#18390<->Example-Complements-Left_and_Right_Inverses :: ModAbVar_Complements-Left_and_Right_Inverses (Example H142E93)
3<->subsec_left_and_right_inverses :<->text1644.htm#18385<->subsec_left_and_right_inverses :: Left and Right Inverses (MODULAR ABELIAN VARIETIES)
3<->subsec_congruence_computations :<->text1644.htm#18391<->subsec_congruence_computations :: Congruence Computations (MODULAR ABELIAN VARIETIES)
5<->CongruenceModulus(A) <->text1644.htm#18392<->CongruenceModulus(A) : ModAbVar -&gt;  RngIntElt
5<->ModularDegree(A) <->text1644.htm#18393<->ModularDegree(A) : ModAbVar -&gt;  RngIntElt
4<->ModAbVar_Complements-Congruence_Computations (Example H142E94)<->text1644.htm#18394<->ModAbVar_Complements-Congruence_Computations (Example H142E94)
4<->Example-Complements-Congruence_Computations :<->text1644.htm#18394<->Example-Complements-Congruence_Computations :: ModAbVar_Complements-Congruence_Computations (Example H142E94)
3<->subsec_congruence_computations :<->text1644.htm#18391<->subsec_congruence_computations :: Congruence Computations (MODULAR ABELIAN VARIETIES)
3<->complements :<->text1644.htm<->complements :: Orthogonal Complements (MODULAR ABELIAN VARIETIES)
3<->new_old :<->text1645.htm<->new_old :: New and Old Subvarieties and Natural Maps (MODULAR ABELIAN VARIETIES)
3<->subsec_natural_maps :<->text1645.htm#18396<->subsec_natural_maps :: Natural Maps (MODULAR ABELIAN VARIETIES)
5<->NaturalMap(A, B, d) <->text1645.htm#18397<->NaturalMap(A, B, d) : ModAbVar, ModAbVar, RngIntElt -&gt;  MapModAbVar
5<->NaturalMap(A, B) <->text1645.htm#18398<->NaturalMap(A, B) : ModAbVar, ModAbVar -&gt;  MapModAbVar
5<->NaturalMaps(A, B) <->text1645.htm#18399<->NaturalMaps(A, B) : ModAbVar, ModAbVar -&gt;  SeqEnum
4<->ModAbVar_New_old-Natural_Maps (Example H142E95)<->text1645.htm#18400<->ModAbVar_New_old-Natural_Maps (Example H142E95)
4<->Example-New_old-Natural_Maps :<->text1645.htm#18400<->Example-New_old-Natural_Maps :: ModAbVar_New_old-Natural_Maps (Example H142E95)
3<->subsec_natural_maps :<->text1645.htm#18396<->subsec_natural_maps :: Natural Maps (MODULAR ABELIAN VARIETIES)
3<->subsec_new_subvarieties_and_quotients :<->text1645.htm#18401<->subsec_new_subvarieties_and_quotients :: New Subvarieties and Quotients (MODULAR ABELIAN VARIETIES)
5<->NewSubvariety(A, r) <->text1645.htm#18402<->NewSubvariety(A, r) : ModAbVar, RngIntElt -&gt;  ModAbVar, MapModAbVar
5<->NewSubvariety(A) <->text1645.htm#18403<->NewSubvariety(A) : ModAbVar -&gt;  ModAbVar, MapModAbVar
5<->NewQuotient(A, r) <->text1645.htm#18404<->NewQuotient(A, r) : ModAbVar, RngIntElt -&gt;  ModAbVar, MapModAbVar
5<->NewQuotient(A) <->text1645.htm#18405<->NewQuotient(A) : ModAbVar -&gt;  ModAbVar, MapModAbVar
4<->ModAbVar_New_old-New_Subvarieties_and_Quotients (Example H142E96)<->text1645.htm#18406<->ModAbVar_New_old-New_Subvarieties_and_Quotients (Example H142E96)
4<->Example-New_old-New_Subvarieties_and_Quotients :<->text1645.htm#18406<->Example-New_old-New_Subvarieties_and_Quotients :: ModAbVar_New_old-New_Subvarieties_and_Quotients (Example H142E96)
3<->subsec_new_subvarieties_and_quotients :<->text1645.htm#18401<->subsec_new_subvarieties_and_quotients :: New Subvarieties and Quotients (MODULAR ABELIAN VARIETIES)
3<->subsec_old_subvarieties_and_quotients :<->text1645.htm#18407<->subsec_old_subvarieties_and_quotients :: Old Subvarieties and Quotients (MODULAR ABELIAN VARIETIES)
5<->OldSubvariety(A, r) <->text1645.htm#18408<->OldSubvariety(A, r) : ModAbVar, RngIntElt -&gt;  ModAbVar, MapModAbVar
5<->OldSubvariety(A) <->text1645.htm#18409<->OldSubvariety(A) : ModAbVar -&gt;  ModAbVar, MapModAbVar
5<->OldQuotient(A, r) <->text1645.htm#18410<->OldQuotient(A, r) : ModAbVar, RngIntElt -&gt;  ModAbVar, MapModAbVar
5<->OldQuotient(A) <->text1645.htm#18411<->OldQuotient(A) : ModAbVar -&gt;  ModAbVar, MapModAbVar
4<->ModAbVar_New_old-Old_Subvarieties_and_Quotients (Example H142E97)<->text1645.htm#18412<->ModAbVar_New_old-Old_Subvarieties_and_Quotients (Example H142E97)
4<->Example-New_old-Old_Subvarieties_and_Quotients :<->text1645.htm#18412<->Example-New_old-Old_Subvarieties_and_Quotients :: ModAbVar_New_old-Old_Subvarieties_and_Quotients (Example H142E97)
3<->subsec_old_subvarieties_and_quotients :<->text1645.htm#18407<->subsec_old_subvarieties_and_quotients :: Old Subvarieties and Quotients (MODULAR ABELIAN VARIETIES)
3<->new_old :<->text1645.htm<->new_old :: New and Old Subvarieties and Natural Maps (MODULAR ABELIAN VARIETIES)
3<->elt :<->text1646.htm<->elt :: Elements of Modular Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->subsec_arithmetic :<->text1646.htm#18414<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
5<->a * x <->text1646.htm#18415<->a * x : FldRatElt, ModAbVarElt ->  ModAbVarElt
5<->a * x <->text1646.htm#18415<->a * x : RngIntElt, ModAbVarElt ->  ModAbVarElt
5<->a * x <->text1646.htm#18415<->a * x : FldReElt, ModAbVarElt -&gt;  ModAbVarElt
5<->x * a <->text1646.htm#18416<->x * a : ModAbVarElt, FldRatElt ->  ModAbVarElt
5<->x * a <->text1646.htm#18416<->x * a : ModAbVarElt, RngIntElt ->  ModAbVarElt
5<->x * a <->text1646.htm#18416<->x * a : ModAbVarElt, FldReElt -&gt;  ModAbVarElt
5<->x + y <->text1646.htm#18417<->x + y : ModAbVarElt, ModAbVarElt -&gt;  ModAbVarElt
5<->x - y <->text1646.htm#18418<->x - y : ModAbVarElt, ModAbVarElt -&gt;  ModAbVarElt
4<->ModAbVar_Elt-Arithmetic (Example H142E98)<->text1646.htm#18419<->ModAbVar_Elt-Arithmetic (Example H142E98)
4<->Example-Elt-Arithmetic :<->text1646.htm#18419<->Example-Elt-Arithmetic :: ModAbVar_Elt-Arithmetic (Example H142E98)
3<->subsec_arithmetic :<->text1646.htm#18414<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1646.htm#18420<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->Order(x) <->text1646.htm#18421<->Order(x) : ModAbVarElt -&gt;  RngIntElt
5<->ApproximateOrder(x) <->text1646.htm#18422<->ApproximateOrder(x) : ModAbVarElt -&gt;  RngIntElt
5<->Degree(x) <->text1646.htm#18423<->Degree(x) : ModAbVarElt -&gt;  RngIntElt
5<->FieldOfDefinition(x) <->text1646.htm#18424<->FieldOfDefinition(x) : ModAbVarElt -&gt;  ModTupFldElt
4<->ModAbVar_Elt-Invariants (Example H142E99)<->text1646.htm#18425<->ModAbVar_Elt-Invariants (Example H142E99)
4<->Example-Elt-Invariants :<->text1646.htm#18425<->Example-Elt-Invariants :: ModAbVar_Elt-Invariants (Example H142E99)
3<->subsec_invariants :<->text1646.htm#18420<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_predicates :<->text1646.htm#18426<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
5<->x eq y <->text1646.htm#18427<->x eq y : ModAbVarElt, ModAbVarElt -&gt;  BoolElt
5<->x in X <->text1646.htm#18428<->x in X : ModAbVarElt, List -&gt;  BoolElt
5<->IsExact(x) <->text1646.htm#18429<->IsExact(x) : ModAbVarElt -&gt;  BoolElt
5<->IsZero(x) <->text1646.htm#18430<->IsZero(x) : ModAbVarElt -&gt;  BoolElt
4<->ModAbVar_Elt-Predicates (Example H142E100)<->text1646.htm#18431<->ModAbVar_Elt-Predicates (Example H142E100)
4<->Example-Elt-Predicates :<->text1646.htm#18431<->Example-Elt-Predicates :: ModAbVar_Elt-Predicates (Example H142E100)
3<->subsec_predicates :<->text1646.htm#18426<->subsec_predicates :: Predicates (MODULAR ABELIAN VARIETIES)
3<->subsec_homomorphisms :<->text1646.htm#18432<->subsec_homomorphisms :: Homomorphisms (MODULAR ABELIAN VARIETIES)
5<->x @ phi <->text1646.htm#18433<->x @ phi : ModAbVarElt, MapModAbVar -&gt;  ModAbVarElt
5<->x @@ phi <->text1646.htm#18434<->x @@ phi : ModAbVarElt, MapModAbVar -&gt;  ModAbVarElt
4<->ModAbVar_Elt-Homomorphisms (Example H142E101)<->text1646.htm#18435<->ModAbVar_Elt-Homomorphisms (Example H142E101)
4<->Example-Elt-Homomorphisms :<->text1646.htm#18435<->Example-Elt-Homomorphisms :: ModAbVar_Elt-Homomorphisms (Example H142E101)
3<->subsec_homomorphisms :<->text1646.htm#18432<->subsec_homomorphisms :: Homomorphisms (MODULAR ABELIAN VARIETIES)
3<->subsec_representation_of_torsion_points :<->text1646.htm#18436<->subsec_representation_of_torsion_points :: Representation of Torsion Points (MODULAR ABELIAN VARIETIES)
5<->ApproximateByTorsionPoint(x : parameters) <->text1646.htm#18437<->ApproximateByTorsionPoint(x : parameters) : ModAbVarElt -&gt;  ModAbVarElt
5<->Element(x) <->text1646.htm#18438<->Element(x) : ModAbVarElt -&gt;  ModTupFldElt
5<->LatticeCoordinates(x) <->text1646.htm#18439<->LatticeCoordinates(x) : ModAbVarElt -&gt;  ModTupFldElt
5<->Eltseq(x) <->text1646.htm#18440<->Eltseq(x) : ModAbVarElt -&gt;  SeqEnum
4<->ModAbVar_Elt-Representation_of_Torsion_Points (Example H142E102)<->text1646.htm#18441<->ModAbVar_Elt-Representation_of_Torsion_Points (Example H142E102)
4<->Example-Elt-Representation_of_Torsion_Points :<->text1646.htm#18441<->Example-Elt-Representation_of_Torsion_Points :: ModAbVar_Elt-Representation_of_Torsion_Points (Example H142E102)
3<->subsec_representation_of_torsion_points :<->text1646.htm#18436<->subsec_representation_of_torsion_points :: Representation of Torsion Points (MODULAR ABELIAN VARIETIES)
3<->elt :<->text1646.htm<->elt :: Elements of Modular Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->subgrp :<->text1647.htm<->subgrp :: Subgroups of Modular Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1647.htm#18443<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->Subgroup(X) <->text1647.htm#18444<->Subgroup(X) : [ModAbVarElt] -&gt;  ModAbVarSubGrp
5<->ZeroSubgroup(A) <->text1647.htm#18445<->ZeroSubgroup(A) : ModAbVar -&gt;  ModAbVarSubGrp
5<->nTorsionSubgroup(A, n) <->text1647.htm#18446<->nTorsionSubgroup(A, n) : ModAbVar, RngIntElt -&gt;  ModAbVarSubGrp
5<->nTorsionSubgroup(G, n) <->text1647.htm#18447<->nTorsionSubgroup(G, n) : ModAbVarSubGrp, RngIntElt -&gt;  ModAbVarSubGrp
5<->ApproximateByTorsionGroup(G : parameters) <->text1647.htm#18448<->ApproximateByTorsionGroup(G : parameters) : ModAbVarSubGrp -&gt;  ModAbVarSubGrp
4<->ModAbVar_Subgrp-Creation (Example H142E103)<->text1647.htm#18449<->ModAbVar_Subgrp-Creation (Example H142E103)
4<->Example-Subgrp-Creation :<->text1647.htm#18449<->Example-Subgrp-Creation :: ModAbVar_Subgrp-Creation (Example H142E103)
3<->subsec_creation :<->text1647.htm#18443<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_elements :<->text1647.htm#18450<->subsec_elements :: Elements (MODULAR ABELIAN VARIETIES)
5<->Elements(G) <->text1647.htm#18451<->Elements(G) : ModAbVarSubGrp -&gt;  SeqEnum
5<->Generators(G) <->text1647.htm#18452<->Generators(G) : ModAbVarSubGrp -&gt;  SeqEnum
5<->Ngens(G) <->text1647.htm#18453<->Ngens(G) : ModAbVarSubGrp -&gt;  RngIntElt
5<->G . i <->text1647.htm#18454<->G . i : ModAbVarSubGrp, RngIntElt -&gt;  ModAbVarElt
4<->ModAbVar_Subgrp-Elements (Example H142E104)<->text1647.htm#18455<->ModAbVar_Subgrp-Elements (Example H142E104)
4<->Example-Subgrp-Elements :<->text1647.htm#18455<->Example-Subgrp-Elements :: ModAbVar_Subgrp-Elements (Example H142E104)
3<->subsec_elements :<->text1647.htm#18450<->subsec_elements :: Elements (MODULAR ABELIAN VARIETIES)
3<->subsec_arithmetic :<->text1647.htm#18456<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
5<->Quotient(A, G) <->text1647.htm#18457<->Quotient(A, G) : ModAbVar, ModAbVarSubGrp -&gt;  ModAbVar, MapModAbVar
5<->Quotient(G) <->text1647.htm#18458<->Quotient(G) : ModAbVarSubGrp -&gt;  ModAbVar, MapModAbVar, MapModAbVar
5<->A / G <->text1647.htm#18459<->A / G : ModAbVar, ModAbVarSubGrp -&gt;  ModAbVar, MapModAbVar, MapModAbVar
5<->G meet A <->text1647.htm#18460<->G meet A : ModAbVarSubGrp, ModAbVar ->  ModAbVarSubGrp
5<->A meet G <->text1647.htm#18460<->A meet G : ModAbVar, ModAbVarSubGrp -&gt;  ModAbVarSubGrp
5<->G1 + G2 <->text1647.htm#18461<->G1 + G2 : ModAbVarSubGrp, ModAbVarSubGrp -&gt;  ModAbVarSubGrp
5<->G1 meet G2 <->text1647.htm#18462<->G1 meet G2 : ModAbVarSubGrp, ModAbVarSubGrp -&gt;  ModAbVarSubGrp
4<->ModAbVar_Subgrp-Arithmetic (Example H142E105)<->text1647.htm#18463<->ModAbVar_Subgrp-Arithmetic (Example H142E105)
4<->Example-Subgrp-Arithmetic :<->text1647.htm#18463<->Example-Subgrp-Arithmetic :: ModAbVar_Subgrp-Arithmetic (Example H142E105)
3<->subsec_arithmetic :<->text1647.htm#18456<->subsec_arithmetic :: Arithmetic (MODULAR ABELIAN VARIETIES)
3<->subsec_underlying_abelian_group_and_lattice :<->text1647.htm#18464<->subsec_underlying_abelian_group_and_lattice :: Underlying Abelian Group and  Lattice (MODULAR ABELIAN VARIETIES)
5<->AbelianGroup(G) <->text1647.htm#18465<->AbelianGroup(G) : ModAbVarSubGrp -&gt;  GrpAb, Map, Map
5<->Lattice(G) <->text1647.htm#18466<->Lattice(G) : ModAbVarSubGrp -&gt;  Lat
4<->ModAbVar_Subgrp-Underlying_Abelian_Group_and_Lattice (Example H142E106)<->text1647.htm#18467<->ModAbVar_Subgrp-Underlying_Abelian_Group_and_Lattice (Example H142E106)
4<->Example-Subgrp-Underlying_Abelian_Group_and_Lattice :<->text1647.htm#18467<->Example-Subgrp-Underlying_Abelian_Group_and_Lattice :: ModAbVar_Subgrp-Underlying_Abelian_Group_and_Lattice (Example H142E106)
3<->subsec_underlying_abelian_group_and_lattice :<->text1647.htm#18464<->subsec_underlying_abelian_group_and_lattice :: Underlying Abelian Group and  Lattice (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1647.htm#18468<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->AmbientVariety(G) <->text1647.htm#18469<->AmbientVariety(G) : ModAbVarSubGrp -&gt;  ModAbVar
5<->Exponent(G) <->text1647.htm#18470<->Exponent(G) : ModAbVarSubGrp -&gt;  RngIntElt
5<->Invariants(G) <->text1647.htm#18471<->Invariants(G) : ModAbVarSubGrp -&gt;  SeqEnum
5<-># :: Order(G) <->text1647.htm#18472<-># :: Order(G) : ModAbVarSubGrp -&gt;  RngIntElt
5<->Order(G) <->text1647.htm#18472<->Order(G) : ModAbVarSubGrp -&gt;  RngIntElt
5<->FieldOfDefinition(G) <->text1647.htm#18473<->FieldOfDefinition(G) : ModAbVarSubGrp -&gt;  Fld
4<->ModAbVar_Subgrp-Invariants (Example H142E107)<->text1647.htm#18474<->ModAbVar_Subgrp-Invariants (Example H142E107)
4<->Example-Subgrp-Invariants :<->text1647.htm#18474<->Example-Subgrp-Invariants :: ModAbVar_Subgrp-Invariants (Example H142E107)
3<->subsec_invariants :<->text1647.htm#18468<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_predicates_and_comparisons :<->text1647.htm#18475<->subsec_predicates_and_comparisons :: Predicates and Comparisons (MODULAR ABELIAN VARIETIES)
5<->IsFinite(G) <->text1647.htm#18476<->IsFinite(G) : ModAbVarSubGrp -&gt;  RngIntElt
5<->G1 subset G2 <->text1647.htm#18477<->G1 subset G2 : ModAbVarSubGrp, ModAbVarSubGrp -&gt;  BoolElt
5<->G subset A <->text1647.htm#18478<->G subset A : ModAbVarSubGrp, ModAbVar -&gt;  BoolElt
5<->A subset G <->text1647.htm#18479<->A subset G : ModAbVar, ModAbVarSubGrp -&gt;  BoolElt
5<->G1 eq G2 <->text1647.htm#18480<->G1 eq G2 : ModAbVarSubGrp, ModAbVarSubGrp -&gt;  BoolElt
4<->ModAbVar_Subgrp-Predicates_and_Comparisons (Example H142E108)<->text1647.htm#18481<->ModAbVar_Subgrp-Predicates_and_Comparisons (Example H142E108)
4<->Example-Subgrp-Predicates_and_Comparisons :<->text1647.htm#18481<->Example-Subgrp-Predicates_and_Comparisons :: ModAbVar_Subgrp-Predicates_and_Comparisons (Example H142E108)
3<->subsec_predicates_and_comparisons :<->text1647.htm#18475<->subsec_predicates_and_comparisons :: Predicates and Comparisons (MODULAR ABELIAN VARIETIES)
3<->subgrp :<->text1647.htm<->subgrp :: Subgroups of Modular Abelian Varieties (MODULAR ABELIAN VARIETIES)
3<->torsion :<->text1648.htm<->torsion ::  Rational Torsion Subgroups (MODULAR ABELIAN VARIETIES)
3<->subsec_cuspidal_subgroup :<->text1648.htm#18483<->subsec_cuspidal_subgroup :: Cuspidal Subgroup (MODULAR ABELIAN VARIETIES)
5<->CuspidalSubgroup(A) <->text1648.htm#18484<->CuspidalSubgroup(A) : ModAbVar -&gt;  ModAbVarSubGrp
5<->RationalCuspidalSubgroup(A) <->text1648.htm#18485<->RationalCuspidalSubgroup(A) : ModAbVar -&gt;  ModAbVarSubGrp
4<->ModAbVar_Torsion-Cuspidal_Subgroup (Example H142E109)<->text1648.htm#18486<->ModAbVar_Torsion-Cuspidal_Subgroup (Example H142E109)
4<->Example-Torsion-Cuspidal_Subgroup :<->text1648.htm#18486<->Example-Torsion-Cuspidal_Subgroup :: ModAbVar_Torsion-Cuspidal_Subgroup (Example H142E109)
3<->subsec_cuspidal_subgroup :<->text1648.htm#18483<->subsec_cuspidal_subgroup :: Cuspidal Subgroup (MODULAR ABELIAN VARIETIES)
3<->subsec_upper_and_lower_bounds :<->text1648.htm#18487<->subsec_upper_and_lower_bounds :: Upper and Lower Bounds (MODULAR ABELIAN VARIETIES)
5<->TorsionLowerBound(A) <->text1648.htm#18488<->TorsionLowerBound(A) : ModAbVar -&gt;  RngIntElt
5<->TorsionMultiple(A, n) <->text1648.htm#18489<->TorsionMultiple(A, n) : ModAbVar, RngIntElt ->  RngIntElt
5<->TorsionMultiple(A) <->text1648.htm#18489<->TorsionMultiple(A) : ModAbVar -&gt;  RngIntElt
4<->ModAbVar_Torsion-Upper_and_Lower_Bounds (Example H142E110)<->text1648.htm#18490<->ModAbVar_Torsion-Upper_and_Lower_Bounds (Example H142E110)
4<->Example-Torsion-Upper_and_Lower_Bounds :<->text1648.htm#18490<->Example-Torsion-Upper_and_Lower_Bounds :: ModAbVar_Torsion-Upper_and_Lower_Bounds (Example H142E110)
3<->subsec_upper_and_lower_bounds :<->text1648.htm#18487<->subsec_upper_and_lower_bounds :: Upper and Lower Bounds (MODULAR ABELIAN VARIETIES)
3<->subsec_torsion_subgroup :<->text1648.htm#18491<->subsec_torsion_subgroup :: Torsion Subgroup (MODULAR ABELIAN VARIETIES)
5<->TorsionSubgroup(A) <->text1648.htm#18492<->TorsionSubgroup(A) : ModAbVar -&gt;  BoolElt, ModAbVarSubGrp
4<->ModAbVar_Torsion-Torsion_Subgroup (Example H142E111)<->text1648.htm#18493<->ModAbVar_Torsion-Torsion_Subgroup (Example H142E111)
4<->Example-Torsion-Torsion_Subgroup :<->text1648.htm#18493<->Example-Torsion-Torsion_Subgroup :: ModAbVar_Torsion-Torsion_Subgroup (Example H142E111)
3<->subsec_torsion_subgroup :<->text1648.htm#18491<->subsec_torsion_subgroup :: Torsion Subgroup (MODULAR ABELIAN VARIETIES)
3<->torsion :<->text1648.htm<->torsion ::  Rational Torsion Subgroups (MODULAR ABELIAN VARIETIES)
3<->operators :<->text1649.htm<->operators :: Hecke and Atkin-Lehner Operators (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1649.htm#18495<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->AtkinLehnerOperator(A, q) <->text1649.htm#18496<->AtkinLehnerOperator(A, q) : ModAbVar, RngIntElt -&gt;  MapModAbVar, RngIntElt
5<->AtkinLehnerOperator(A) <->text1649.htm#18497<->AtkinLehnerOperator(A) : ModAbVar -&gt;  MapModAbVar
5<->HeckeOperator(A, n) <->text1649.htm#18498<->HeckeOperator(A, n) : ModAbVar, RngIntElt -&gt;  MapModAbVar
4<->ModAbVar_Operators-Creation (Example H142E112)<->text1649.htm#18499<->ModAbVar_Operators-Creation (Example H142E112)
4<->Example-Operators-Creation :<->text1649.htm#18499<->Example-Operators-Creation :: ModAbVar_Operators-Creation (Example H142E112)
3<->subsec_creation :<->text1649.htm#18495<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1649.htm#18500<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->HeckePolynomial(A, n) <->text1649.htm#18501<->HeckePolynomial(A, n) : ModAbVar, RngIntElt -&gt;  RngUPolElt
5<->FactoredHeckePolynomial(A, n) <->text1649.htm#18502<->FactoredHeckePolynomial(A, n) : ModAbVar, RngIntElt -&gt;  RngUPolElt
5<->MinimalHeckePolynomial(A, n) <->text1649.htm#18503<->MinimalHeckePolynomial(A, n) : ModAbVar, RngIntElt -&gt;  RngUPolElt
4<->ModAbVar_Operators-Invariants (Example H142E113)<->text1649.htm#18504<->ModAbVar_Operators-Invariants (Example H142E113)
4<->Example-Operators-Invariants :<->text1649.htm#18504<->Example-Operators-Invariants :: ModAbVar_Operators-Invariants (Example H142E113)
3<->subsec_invariants :<->text1649.htm#18500<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->operators :<->text1649.htm<->operators :: Hecke and Atkin-Lehner Operators (MODULAR ABELIAN VARIETIES)
3<->lser :<->text1650.htm<->lser :: L-series  (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1650.htm#18506<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->LSeries(A) <->text1650.htm#18507<->LSeries(A) : ModAbVar -&gt;  ModAbVarLSer
4<->ModAbVar_Lser-Creation (Example H142E114)<->text1650.htm#18508<->ModAbVar_Lser-Creation (Example H142E114)
4<->Example-Lser-Creation :<->text1650.htm#18508<->Example-Lser-Creation :: ModAbVar_Lser-Creation (Example H142E114)
3<->subsec_creation :<->text1650.htm#18506<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1650.htm#18509<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->CriticalStrip(L) <->text1650.htm#18510<->CriticalStrip(L) : ModAbVarLSer -&gt;  RngIntElt, RngIntElt
5<->ModularAbelianVariety(L) <->text1650.htm#18511<->ModularAbelianVariety(L) : ModAbVarLSer -&gt;  ModAbVar
4<->ModAbVar_Lser-Invariants (Example H142E115)<->text1650.htm#18512<->ModAbVar_Lser-Invariants (Example H142E115)
4<->Example-Lser-Invariants :<->text1650.htm#18512<->Example-Lser-Invariants :: ModAbVar_Lser-Invariants (Example H142E115)
3<->subsec_invariants :<->text1650.htm#18509<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->subsec_characteristic_polynomials_of_frobenius_elements :<->text1650.htm#18513<->subsec_characteristic_polynomials_of_frobenius_elements :: Characteristic Polynomials of  Frobenius Elements (MODULAR ABELIAN VARIETIES)
5<->FrobeniusPolynomial(A : parameters) <->text1650.htm#18514<->FrobeniusPolynomial(A : parameters) : ModAbVar -&gt;  RngUPolElt
5<->FrobeniusPolynomial(A, p : parameters) <->text1650.htm#18515<->FrobeniusPolynomial(A, p : parameters) : ModAbVar, RngIntElt -&gt;  RngUPolElt
5<->FrobeniusPolynomial(A, P) <->text1650.htm#18516<->FrobeniusPolynomial(A, P) : ModAbVar, RngOrdIdl -&gt;  RngUPolElt
4<->ModAbVar_Lser-Characteristic_Polynomials_of_Frobenius_Elements (Example H142E116)<->text1650.htm#18517<->ModAbVar_Lser-Characteristic_Polynomials_of_Frobenius_Elements (Example H142E116)
4<->Example-Lser-Characteristic_Polynomials_of_Frobenius_Elements :<->text1650.htm#18517<->Example-Lser-Characteristic_Polynomials_of_Frobenius_Elements :: ModAbVar_Lser-Characteristic_Polynomials_of_Frobenius_Elements (Example H142E116)
3<->subsec_characteristic_polynomials_of_frobenius_elements :<->text1650.htm#18513<->subsec_characteristic_polynomials_of_frobenius_elements :: Characteristic Polynomials of  Frobenius Elements (MODULAR ABELIAN VARIETIES)
3<->subsec_values_at_integers_in_the_critical_strip :<->text1650.htm#18518<->subsec_values_at_integers_in_the_critical_strip :: Values at Integers in the Critical Strip (MODULAR ABELIAN VARIETIES)
5<->Evaluate :: L(s) <->text1650.htm#18519<->Evaluate :: L(s) : RngIntElt, ModAbVarLSer -&gt;  RngElt
5<->Evaluate(L, s, prec) : ModAbVarLSer, RngIntElt, RngIntElt ->  FldReElt :: L(s) <->text1650.htm#18519<->Evaluate(L, s, prec) : ModAbVarLSer, RngIntElt, RngIntElt ->  FldReElt :: L(s) : RngIntElt, ModAbVarLSer -&gt;  RngElt
5<->L(s) <->text1650.htm#18519<->L(s) : RngIntElt, ModAbVarLSer -&gt;  RngElt
5<->LRatio(L, s) <->text1650.htm#18520<->LRatio(L, s) : ModAbVarLSer, RngIntElt ->  FldRatElt
5<->LRatio(A, s) <->text1650.htm#18520<->LRatio(A, s) : ModAbVar, RngIntElt -&gt;  FldRatElt
5<->IsZeroAt(L, s) <->text1650.htm#18521<->IsZeroAt(L, s) : ModAbVarLSer, RngIntElt -&gt;  BoolElt
4<->ModAbVar_Lser-Values_at_Integers_in_the_Critical_Strip (Example H142E117)<->text1650.htm#18522<->ModAbVar_Lser-Values_at_Integers_in_the_Critical_Strip (Example H142E117)
4<->Example-Lser-Values_at_Integers_in_the_Critical_Strip :<->text1650.htm#18522<->Example-Lser-Values_at_Integers_in_the_Critical_Strip :: ModAbVar_Lser-Values_at_Integers_in_the_Critical_Strip (Example H142E117)
3<->subsec_values_at_integers_in_the_critical_strip :<->text1650.htm#18518<->subsec_values_at_integers_in_the_critical_strip :: Values at Integers in the Critical Strip (MODULAR ABELIAN VARIETIES)
3<->subsec_leading_coefficient :<->text1650.htm#18523<->subsec_leading_coefficient :: Leading Coefficient (MODULAR ABELIAN VARIETIES)
5<->LeadingCoefficient(L, s, prec) <->text1650.htm#18524<->LeadingCoefficient(L, s, prec) : ModAbVarLSer, RngIntElt, RngIntElt -&gt;      FldReElt, RngIntElt
4<->ModAbVar_Lser-Leading_Coefficient (Example H142E118)<->text1650.htm#18525<->ModAbVar_Lser-Leading_Coefficient (Example H142E118)
4<->Example-Lser-Leading_Coefficient :<->text1650.htm#18525<->Example-Lser-Leading_Coefficient :: ModAbVar_Lser-Leading_Coefficient (Example H142E118)
4<->ModAbVar_Lser-Leading_Coefficient2 (Example H142E119)<->text1650.htm#18526<->ModAbVar_Lser-Leading_Coefficient2 (Example H142E119)
4<->Example-Lser-Leading_Coefficient2 :<->text1650.htm#18526<->Example-Lser-Leading_Coefficient2 :: ModAbVar_Lser-Leading_Coefficient2 (Example H142E119)
3<->subsec_leading_coefficient :<->text1650.htm#18523<->subsec_leading_coefficient :: Leading Coefficient (MODULAR ABELIAN VARIETIES)
3<->lser :<->text1650.htm<->lser :: L-series  (MODULAR ABELIAN VARIETIES)
3<->periods :<->text1651.htm<->periods :: Complex Period Lattice (MODULAR ABELIAN VARIETIES)
3<->subsec_period_map :<->text1651.htm#18528<->subsec_period_map :: Period Map (MODULAR ABELIAN VARIETIES)
5<->PeriodMapping(A, prec) <->text1651.htm#18529<->PeriodMapping(A, prec) : ModAbVar, RngIntElt -&gt;  Map
3<->subsec_period_map :<->text1651.htm#18528<->subsec_period_map :: Period Map (MODULAR ABELIAN VARIETIES)
3<->subsec_period_lattice :<->text1651.htm#18530<->subsec_period_lattice :: Period Lattice (MODULAR ABELIAN VARIETIES)
5<->Periods(A, n) <->text1651.htm#18531<->Periods(A, n) : ModAbVar, RngIntElt -&gt;  SeqEnum
3<->subsec_period_lattice :<->text1651.htm#18530<->subsec_period_lattice :: Period Lattice (MODULAR ABELIAN VARIETIES)
3<->periods :<->text1651.htm<->periods :: Complex Period Lattice (MODULAR ABELIAN VARIETIES)
3<->compgrp :<->text1652.htm<->compgrp :: Tamagawa Numbers and Component Groups of Neron Models (MODULAR ABELIAN VARIETIES)
3<->subsec_component_groups :<->text1652.htm#18533<->subsec_component_groups :: Component Groups (MODULAR ABELIAN VARIETIES)
5<->ComponentGroupOrder(A, p) <->text1652.htm#18534<->ComponentGroupOrder(A, p) : ModAbVar, RngIntElt -&gt;  RngIntElt
4<->ModAbVar_Compgrp-Component_Groups (Example H142E120)<->text1652.htm#18535<->ModAbVar_Compgrp-Component_Groups (Example H142E120)
4<->Example-Compgrp-Component_Groups :<->text1652.htm#18535<->Example-Compgrp-Component_Groups :: ModAbVar_Compgrp-Component_Groups (Example H142E120)
3<->subsec_component_groups :<->text1652.htm#18533<->subsec_component_groups :: Component Groups (MODULAR ABELIAN VARIETIES)
3<->subsec_tamagawa_numbers :<->text1652.htm#18536<->subsec_tamagawa_numbers :: Tamagawa Numbers (MODULAR ABELIAN VARIETIES)
5<->TamagawaNumber(A, p) <->text1652.htm#18537<->TamagawaNumber(A, p) : ModAbVar, RngIntElt -&gt;  RngIntElt, RngIntElt, BoolElt
5<->TamagawaNumber(A) <->text1652.htm#18538<->TamagawaNumber(A) : ModAbVar -&gt;  RngIntElt, RngIntElt, BoolElt
4<->ModAbVar_Compgrp-Tamagawa_Numbers (Example H142E121)<->text1652.htm#18539<->ModAbVar_Compgrp-Tamagawa_Numbers (Example H142E121)
4<->Example-Compgrp-Tamagawa_Numbers :<->text1652.htm#18539<->Example-Compgrp-Tamagawa_Numbers :: ModAbVar_Compgrp-Tamagawa_Numbers (Example H142E121)
3<->subsec_tamagawa_numbers :<->text1652.htm#18536<->subsec_tamagawa_numbers :: Tamagawa Numbers (MODULAR ABELIAN VARIETIES)
3<->compgrp :<->text1652.htm<->compgrp :: Tamagawa Numbers and Component Groups of Neron Models (MODULAR ABELIAN VARIETIES)
3<->ellcrv :<->text1653.htm<->ellcrv :: Elliptic Curves  (MODULAR ABELIAN VARIETIES)
3<->subsec_creation :<->text1653.htm#18541<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
5<->EllipticCurve(A) <->text1653.htm#18542<->EllipticCurve(A) : ModAbVar -&gt;  CrvEll
5<->ModularAbelianVariety(E) <->text1653.htm#18543<->ModularAbelianVariety(E) : CrvEll -&gt;  ModAbVar
4<->ModAbVar_Ellcrv-Creation (Example H142E122)<->text1653.htm#18544<->ModAbVar_Ellcrv-Creation (Example H142E122)
4<->Example-Ellcrv-Creation :<->text1653.htm#18544<->Example-Ellcrv-Creation :: ModAbVar_Ellcrv-Creation (Example H142E122)
3<->subsec_creation :<->text1653.htm#18541<->subsec_creation :: Creation (MODULAR ABELIAN VARIETIES)
3<->subsec_invariants :<->text1653.htm#18545<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
5<->EllipticInvariants(A, n) <->text1653.htm#18546<->EllipticInvariants(A, n) : ModAbVar, RngIntElt -&gt;     FldReElt, FldReElt, FldReElt, CrvEll
5<->EllipticPeriods(A, n) <->text1653.htm#18547<->EllipticPeriods(A, n) : ModAbVar, RngIntElt -&gt;  FldReElt, FldReElt
4<->ModAbVar_Ellcrv-Invariants (Example H142E123)<->text1653.htm#18548<->ModAbVar_Ellcrv-Invariants (Example H142E123)
4<->Example-Ellcrv-Invariants :<->text1653.htm#18548<->Example-Ellcrv-Invariants :: ModAbVar_Ellcrv-Invariants (Example H142E123)
3<->subsec_invariants :<->text1653.htm#18545<->subsec_invariants :: Invariants (MODULAR ABELIAN VARIETIES)
3<->ellcrv :<->text1653.htm<->ellcrv :: Elliptic Curves  (MODULAR ABELIAN VARIETIES)
3<->modular-forms :<->text1635.htm<->modular-forms :: MODULAR ABELIAN VARIETIES
3<->hilbert-modular-forms :<->text1656.htm<->hilbert-modular-forms :: HILBERT MODULAR FORMS
3<->introduction :<->text1657.htm<->introduction :: Introduction (HILBERT MODULAR FORMS)
3<->hmf :<->text1657.htm#18553<->hmf :: Definitions and Background (HILBERT MODULAR FORMS)
3<->algorithms :<->text1657.htm#18554<->algorithms :: Algorithms and the Jacquet-Lang-lands Correspondence (HILBERT MODULAR FORMS)
3<->definite :<->text1657.htm#18555<->definite :: Algorithm I (Using Definite  Quaternion Orders) (HILBERT MODULAR FORMS)
3<->indefinite :<->text1657.htm#18556<->indefinite :: Algorithm II (Using Indefinite  Quaternion Orders) (HILBERT MODULAR FORMS)
3<->categories :<->text1657.htm#18557<->categories :: Categories (HILBERT MODULAR FORMS)
3<->verbose :<->text1657.htm#18558<->verbose :: Verbose Output (HILBERT MODULAR FORMS)
3<->introduction :<->text1657.htm<->introduction :: Introduction (HILBERT MODULAR FORMS)
3<->creation :<->text1658.htm<->creation :: Creation of Full Cuspidal  Spaces (HILBERT MODULAR FORMS)
5<->HilbertCuspForms(F, N) <->text1658.htm#18560<->HilbertCuspForms(F, N) : FldNum, RngOrdIdl -> ModFrmHil
5<->HilbertCuspForms(F, N, k) <->text1658.htm#18560<->HilbertCuspForms(F, N, k) : FldNum, RngOrdIdl, SeqEnum -&gt; ModFrmHil
4<->ModFrmHil_creation-example (Example H143E1)<->text1658.htm#18561<->ModFrmHil_creation-example (Example H143E1)
4<->Example-creation-example :<->text1658.htm#18561<->Example-creation-example :: ModFrmHil_creation-example (Example H143E1)
3<->creation :<->text1658.htm<->creation :: Creation of Full Cuspidal  Spaces (HILBERT MODULAR FORMS)
3<->hmf-caching :<->text1659.htm<->hmf-caching :: Caching Spaces of Modular  Forms (HILBERT MODULAR FORMS)
5<->SetStoreModularForms(F, v) <->text1659.htm#18563<->SetStoreModularForms(F, v) : Fld, BoolElt -&gt;
5<->ClearStoredModularForms(F) <->text1659.htm#18564<->ClearStoredModularForms(F) : Fld -&gt;
3<->hmf-caching :<->text1659.htm<->hmf-caching :: Caching Spaces of Modular  Forms (HILBERT MODULAR FORMS)
3<->basic-properties :<->text1660.htm<->basic-properties :: Basic Properties (HILBERT MODULAR FORMS)
5<->BaseRing :: BaseField(M) <->text1660.htm#18566<->BaseRing :: BaseField(M) : ModFrmHil -&gt;
5<->CoefficientField :: BaseField(M) <->text1660.htm#18566<->CoefficientField :: BaseField(M) : ModFrmHil -&gt;
5<->CoefficientRing :: BaseField(M) <->text1660.htm#18566<->CoefficientRing :: BaseField(M) : ModFrmHil -&gt;
5<->BaseField(M) <->text1660.htm#18566<->BaseField(M) : ModFrmHil -&gt;
5<->Weight(M) <->text1660.htm#18567<->Weight(M) : ModFrmHil -&gt; SeqEnum[RngIntElt]
5<->CentralCharacter(M) <->text1660.htm#18568<->CentralCharacter(M) : ModFrmHil -&gt; RngIntElt
5<->Level(M) <->text1660.htm#18569<->Level(M) : ModFrmHil -&gt; RngOrdIdl
5<->DirichletCharacter(M) <->text1660.htm#18570<->DirichletCharacter(M) : ModFrmHil -&gt; GrpDrchNFElt
5<->IsCuspidal(M) <->text1660.htm#18571<->IsCuspidal(M) : ModFrmHil -&gt; BoolElt
5<->IsNew(M) <->text1660.htm#18572<->IsNew(M) : ModFrmHil -&gt; BoolElt
5<->NewLevel(M) <->text1660.htm#18573<->NewLevel(M) : ModFrmHil -&gt; RngOrdIdl
5<->Dimension(M) <->text1660.htm#18574<->Dimension(M) : ModFrmHil -&gt; RngIntElt
5<->QuaternionOrder(M) <->text1660.htm#18575<->QuaternionOrder(M) : ModFrmHil -&gt; AlgAssVOrd
5<->IsDefinite(M) <->text1660.htm#18576<->IsDefinite(M) : ModFrmHil -&gt; BoolElt
4<->ModFrmHil_basic-example (Example H143E2)<->text1660.htm#18577<->ModFrmHil_basic-example (Example H143E2)
4<->Example-basic-example :<->text1660.htm#18577<->Example-basic-example :: ModFrmHil_basic-example (Example H143E2)
3<->basic-properties :<->text1660.htm<->basic-properties :: Basic Properties (HILBERT MODULAR FORMS)
3<->elements :<->text1661.htm<->elements :: Elements (HILBERT MODULAR FORMS)
5<->Parent(f) <->text1661.htm#18579<->Parent(f) : ModFrmHilElt -&gt; ModFrmHil
5<->BaseField(f) <->text1661.htm#18580<->BaseField(f) : ModFrmHilElt -&gt; Fld
3<->elements :<->text1661.htm<->elements :: Elements (HILBERT MODULAR FORMS)
3<->operators :<->text1662.htm<->operators :: Operators (HILBERT MODULAR FORMS)
5<->HeckeOperator(M, P) <->text1662.htm#18582<->HeckeOperator(M, P) : ModFrmHil, RngOrdIdl -&gt; Mtrx
4<->ModFrmHil_hecke (Example H143E3)<->text1662.htm#18583<->ModFrmHil_hecke (Example H143E3)
4<->Example-hecke :<->text1662.htm#18583<->Example-hecke :: ModFrmHil_hecke (Example H143E3)
5<->AtkinLehnerOperator(M, P) <->text1662.htm#18584<->AtkinLehnerOperator(M, P) : ModFrmHil, RngOrdIdl -&gt; Mtrx
5<->DegeneracyOperator(M, P, Q) <->text1662.htm#18585<->DegeneracyOperator(M, P, Q) : ModFrmHil, RngOrdIdl, RngOrdIdl -&gt; Mtrx
5<->DeleteHeckePrecomputation(O, P) <->text1662.htm#18586<->DeleteHeckePrecomputation(O, P) : AlgAssVOrd, RngOrdIdl ->
5<->DeleteHeckePrecomputation(O) <->text1662.htm#18586<->DeleteHeckePrecomputation(O) : AlgAssVOrd -&gt;
3<->operators :<->text1662.htm<->operators :: Operators (HILBERT MODULAR FORMS)
3<->subspaces :<->text1663.htm<->subspaces :: Creation of Subspaces (HILBERT MODULAR FORMS)
5<->NewSubspace(M, I) <->text1663.htm#18588<->NewSubspace(M, I) : ModFrmHil, RngOrdIdl -> ModFrmHil
5<->NewSubspace(M) <->text1663.htm#18588<->NewSubspace(M) : ModFrmHil -&gt; ModFrmHil
5<->SetRationalBasis(M) <->text1663.htm#18589<->SetRationalBasis(M) : ModFrmHil -&gt;
4<->ModFrmHil_newsubspace-example1 (Example H143E4)<->text1663.htm#18590<->ModFrmHil_newsubspace-example1 (Example H143E4)
4<->Example-newsubspace-example1 :<->text1663.htm#18590<->Example-newsubspace-example1 :: ModFrmHil_newsubspace-example1 (Example H143E4)
4<->ModFrmHil_newsubspace-example2 (Example H143E5)<->text1663.htm#18591<->ModFrmHil_newsubspace-example2 (Example H143E5)
4<->Example-newsubspace-example2 :<->text1663.htm#18591<->Example-newsubspace-example2 :: ModFrmHil_newsubspace-example2 (Example H143E5)
3<->subspaces :<->text1663.htm<->subspaces :: Creation of Subspaces (HILBERT MODULAR FORMS)
3<->eigenforms :<->text1664.htm<->eigenforms :: Eigenspace Decomposition and  Eigenforms (HILBERT MODULAR FORMS)
5<->HeckeEigenvalueBound(M, P) <->text1664.htm#18593<->HeckeEigenvalueBound(M, P) : ModFrmHil, RngOrdIdl -&gt; RngIntElt
5<->NewformDecomposition(M) <->text1664.htm#18594<->NewformDecomposition(M) : ModFrmHil -&gt; List
5<->NewformsOfDegree1(M) <->text1664.htm#18595<->NewformsOfDegree1(M) : ModFrmHil -&gt; List
5<->Eigenform(M) <->text1664.htm#18596<->Eigenform(M) : ModFrmHil -&gt; ModFrmHilElt
5<->Eigenforms(M) <->text1664.htm#18597<->Eigenforms(M) : ModFrmHil -&gt; List
5<->HeckeEigenvalueField(M) <->text1664.htm#18598<->HeckeEigenvalueField(M) : ModFrmHil -&gt; Fld
5<->HeckeEigenvalue(f, P) <->text1664.htm#18599<->HeckeEigenvalue(f, P) : ModFrmHilElt, RngOrdIdl -&gt; FldAlgElt
4<->ModFrmHil_eigenform-examples (Example H143E6)<->text1664.htm#18600<->ModFrmHil_eigenform-examples (Example H143E6)
4<->Example-eigenform-examples :<->text1664.htm#18600<->Example-eigenform-examples :: ModFrmHil_eigenform-examples (Example H143E6)
3<->eigenforms :<->text1664.htm<->eigenforms :: Eigenspace Decomposition and  Eigenforms (HILBERT MODULAR FORMS)
3<->further-examples :<->text1665.htm<->further-examples :: Further Examples (HILBERT MODULAR FORMS)
4<->ModFrmHil_integral-hecke (Example H143E7)<->text1665.htm#18602<->ModFrmHil_integral-hecke (Example H143E7)
4<->Example-integral-hecke :<->text1665.htm#18602<->Example-integral-hecke :: ModFrmHil_integral-hecke (Example H143E7)
4<->ModFrmHil_classical-example (Example H143E8)<->text1665.htm#18603<->ModFrmHil_classical-example (Example H143E8)
4<->Example-classical-example :<->text1665.htm#18603<->Example-classical-example :: ModFrmHil_classical-example (Example H143E8)
3<->further-examples :<->text1665.htm<->further-examples :: Further Examples (HILBERT MODULAR FORMS)
3<->hilbert-modular-forms :<->text1656.htm<->hilbert-modular-forms :: HILBERT MODULAR FORMS
3<->bianchi-modular-forms :<->text1668.htm<->bianchi-modular-forms :: MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS
3<->introduction :<->text1669.htm<->introduction :: Introduction (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->algorithms :<->text1669.htm#18608<->algorithms :: Algorithms (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->categories :<->text1669.htm#18609<->categories :: Categories (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->verbose :<->text1669.htm#18610<->verbose :: Verbose Output (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->introduction :<->text1669.htm<->introduction :: Introduction (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->creation :<->text1670.htm<->creation :: Creation (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
5<->BianchiCuspForms(F, N) <->text1670.htm#18612<->BianchiCuspForms(F, N) : FldNum, RngOrdIdl -&gt; ModFrmBianchi
3<->creation :<->text1670.htm<->creation :: Creation (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->basic-properties :<->text1671.htm<->basic-properties :: Attributes (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
5<->BaseRing :: BaseField(M) <->text1671.htm#18614<->BaseRing :: BaseField(M) : ModFrmBianchi -&gt; FldNum
5<->CoefficientField :: BaseField(M) <->text1671.htm#18614<->CoefficientField :: BaseField(M) : ModFrmBianchi -&gt; FldNum
5<->CoefficientRing :: BaseField(M) <->text1671.htm#18614<->CoefficientRing :: BaseField(M) : ModFrmBianchi -&gt; FldNum
5<->BaseField(M) <->text1671.htm#18614<->BaseField(M) : ModFrmBianchi -&gt; FldNum
5<->Level(M) <->text1671.htm#18615<->Level(M) : ModFrmBianchi -&gt; RngOrdIdl
5<->Dimension(M) <->text1671.htm#18616<->Dimension(M) : ModFrmBianchi -&gt; RngIntElt
5<->VoronoiData(M) <->text1671.htm#18617<->VoronoiData(M) : ModFrmBianchi -&gt; Rec
4<->ModFrmBianchi_creation-example (Example H144E1)<->text1671.htm#18618<->ModFrmBianchi_creation-example (Example H144E1)
4<->Example-creation-example :<->text1671.htm#18618<->Example-creation-example :: ModFrmBianchi_creation-example (Example H144E1)
3<->basic-properties :<->text1671.htm<->basic-properties :: Attributes (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->hecke-operators :<->text1672.htm<->hecke-operators :: Hecke Operators (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
5<->HeckeOperator(M, P) <->text1672.htm#18620<->HeckeOperator(M, P) : ModFrmBianchi, RngOrdIdl -&gt; Mtrx
4<->ModFrmBianchi_hecke (Example H144E2)<->text1672.htm#18621<->ModFrmBianchi_hecke (Example H144E2)
4<->Example-hecke :<->text1672.htm#18621<->Example-hecke :: ModFrmBianchi_hecke (Example H144E2)
3<->hecke-operators :<->text1672.htm<->hecke-operators :: Hecke Operators (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->bianchi-new :<->text1673.htm<->bianchi-new :: New Spaces and Newforms (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
5<->NewSubspace(M) <->text1673.htm#18623<->NewSubspace(M) : ModFrmBianchi -&gt; ModFrmBianchi
5<->NewformDecomposition(M) <->text1673.htm#18624<->NewformDecomposition(M) : ModFrmBianchi -&gt; List
5<->Eigenform(M) <->text1673.htm#18625<->Eigenform(M) : ModFrmBianchi -&gt; ModFrmBianchiElt
3<->bianchi-new :<->text1673.htm<->bianchi-new :: New Spaces and Newforms (MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS)
3<->bianchi-modular-forms :<->text1668.htm<->bianchi-modular-forms :: MODULAR FORMS OVER IMAGINARY QUADRATIC FIELDS
3<->automorphic-representations :<->text1676.htm<->automorphic-representations :: ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>)
3<->introduction :<->text1677.htm<->introduction :: Introduction (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->motivation :<->text1677.htm#18630<->motivation :: Motivation (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->definitions :<->text1677.htm#18631<->definitions :: Definitions (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->principal-series :<->text1677.htm#18632<->principal-series :: The Principal Series (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->supercuspidal :<->text1677.htm#18633<->supercuspidal :: Supercuspidal Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->local-langlands :<->text1677.htm#18634<->local-langlands :: The Local Langlands Correspondence (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->connection :<->text1677.htm#18635<->connection :: Connection with Modular Forms (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->categories :<->text1677.htm#18636<->categories :: Category (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->verbose :<->text1677.htm#18637<->verbose :: Verbose Output (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->introduction :<->text1677.htm<->introduction :: Introduction (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->creation :<->text1678.htm<->creation :: Creation of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
5<->LocalComponent(M, p) <->text1678.htm#18639<->LocalComponent(M, p) : ModSym, RngIntElt -&gt; RepLoc
4<->RepLoc_creation-example (Example H145E1)<->text1678.htm#18640<->RepLoc_creation-example (Example H145E1)
4<->Example-creation-example :<->text1678.htm#18640<->Example-creation-example :: RepLoc_creation-example (Example H145E1)
3<->creation :<->text1678.htm<->creation :: Creation of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->attributes :<->text1679.htm<->attributes :: Attributes of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
5<->CentralCharacter(pi) <->text1679.htm#18642<->CentralCharacter(pi) : RepLoc -&gt; GrpDrchElt
5<->Conductor(pi) <->text1679.htm#18643<->Conductor(pi) : RepLoc -&gt; RngIntElt
5<->DefiningModularSymbolsSpace(pi) <->text1679.htm#18644<->DefiningModularSymbolsSpace(pi) : RepLoc -&gt; ModSym
5<->IsMinimal(pi) <->text1679.htm#18645<->IsMinimal(pi) : RepLoc -&gt; BoolElt, GrpDrchElt, RepLoc
4<->RepLoc_attributes-example (Example H145E2)<->text1679.htm#18646<->RepLoc_attributes-example (Example H145E2)
4<->Example-attributes-example :<->text1679.htm#18646<->Example-attributes-example :: RepLoc_attributes-example (Example H145E2)
3<->attributes :<->text1679.htm<->attributes :: Attributes of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->structure :<->text1680.htm<->structure :: Structure of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
5<->IsPrincipalSeries(pi) <->text1680.htm#18648<->IsPrincipalSeries(pi) : RepLoc -&gt; BoolElt
5<->IsSupercuspidal(pi) <->text1680.htm#18649<->IsSupercuspidal(pi) : RepLoc -&gt; BoolElt
5<->PrincipalSeriesParameters(pi) <->text1680.htm#18650<->PrincipalSeriesParameters(pi) : RepLoc -&gt; GrpDrchElt, GrpDrchElt
5<->CuspidalInducingDatum(pi) <->text1680.htm#18651<->CuspidalInducingDatum(pi) : RepLoc -&gt; ModGrp
3<->structure :<->text1680.htm<->structure :: Structure of Admissible Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->galois :<->text1681.htm<->galois :: Local Galois Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
5<->WeilRepresentation :: GaloisRepresentation(pi) <->text1681.htm#18653<->WeilRepresentation :: GaloisRepresentation(pi) : RepLoc -&gt; GalRep
5<->GaloisRepresentation(pi) <->text1681.htm#18653<->GaloisRepresentation(pi) : RepLoc -&gt; GalRep
5<->AdmissiblePair(pi) <->text1681.htm#18654<->AdmissiblePair(pi) : RepLoc -&gt; RngPad, Map
3<->galois :<->text1681.htm<->galois :: Local Galois Representations (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->examples :<->text1682.htm<->examples :: Examples (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
4<->RepLoc_example1 (Example H145E3)<->text1682.htm#18656<->RepLoc_example1 (Example H145E3)
4<->Example-example1 :<->text1682.htm#18656<->Example-example1 :: RepLoc_example1 (Example H145E3)
4<->RepLoc_example2 (Example H145E4)<->text1682.htm#18657<->RepLoc_example2 (Example H145E4)
4<->Example-example2 :<->text1682.htm#18657<->Example-example2 :: RepLoc_example2 (Example H145E4)
4<->RepLoc_example3 (Example H145E5)<->text1682.htm#18658<->RepLoc_example3 (Example H145E5)
4<->Example-example3 :<->text1682.htm#18658<->Example-example3 :: RepLoc_example3 (Example H145E5)
3<->examples :<->text1682.htm<->examples :: Examples (ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>))
3<->automorphic-representations :<->text1676.htm<->automorphic-representations :: ADMISSIBLE REPRESENTATIONS OF GL<sub>2</sub>(Q<sub>p</sub>)
3<->simplicial :<->text1685.htm<->simplicial :: SIMPLICIAL HOMOLOGY
3<->introduction :<->text1686.htm<->introduction :: Introduction (SIMPLICIAL HOMOLOGY)
3<->simplicial-complexes :<->text1687.htm<->simplicial-complexes :: Simplicial Complexes (SIMPLICIAL HOMOLOGY)
5<->SimplicialComplex(f) <->text1687.htm#18664<->SimplicialComplex(f) : SeqEnum[SetEnum] -&gt; SmpCpx
4<->SmpCpx_construct (Example H146E1)<->text1687.htm#18665<->SmpCpx_construct (Example H146E1)
4<->Example-construct :<->text1687.htm#18665<->Example-construct :: SmpCpx_construct (Example H146E1)
5<->SimplicialComplex(G) <->text1687.htm#18666<->SimplicialComplex(G) : Grph -&gt; SmpCpx
5<->CliqueComplex :: FlagComplex(G) <->text1687.htm#18667<->CliqueComplex :: FlagComplex(G) : Grph -&gt; SmpCpx
5<->FlagComplex(G) <->text1687.htm#18667<->FlagComplex(G) : Grph -&gt; SmpCpx
5<->Dimension(X) <->text1687.htm#18668<->Dimension(X) : SmpCpx -&gt; RngIntElt
4<->SmpCpx_dimension (Example H146E2)<->text1687.htm#18669<->SmpCpx_dimension (Example H146E2)
4<->Example-dimension :<->text1687.htm#18669<->Example-dimension :: SmpCpx_dimension (Example H146E2)
5<->Faces(X, d) <->text1687.htm#18670<->Faces(X, d) : SmpCpx, RngIntElt -&gt; SeqEnum[SetEnum]
4<->SmpCpx_faces (Example H146E3)<->text1687.htm#18671<->SmpCpx_faces (Example H146E3)
4<->Example-faces :<->text1687.htm#18671<->Example-faces :: SmpCpx_faces (Example H146E3)
5<->Facets(X) <->text1687.htm#18672<->Facets(X) : SmpCpx -&gt; SeqEnum[SetEnum]
4<->SmpCpx_facets (Example H146E4)<->text1687.htm#18673<->SmpCpx_facets (Example H146E4)
4<->Example-facets :<->text1687.htm#18673<->Example-facets :: SmpCpx_facets (Example H146E4)
5<->Normalization($\sim$X) <->text1687.htm#18674<->Normalization($\sim$X) : SmpCpx ->
5<->Normalization(X) <->text1687.htm#18674<->Normalization(X) : SmpCpx -&gt; SmpCpx
5<->Shift($\sim$X, n) <->text1687.htm#18675<->Shift($\sim$X, n) : SmpCpx, RngIntElt ->
5<->Shift(X, n) <->text1687.htm#18675<->Shift(X, n) : SmpCpx, RngIntElt -&gt; SmpCpx
4<->SmpCpx_normalize-shift (Example H146E5)<->text1687.htm#18676<->SmpCpx_normalize-shift (Example H146E5)
4<->Example-normalize-shift :<->text1687.htm#18676<->Example-normalize-shift :: SmpCpx_normalize-shift (Example H146E5)
5<->Boundary(X) <->text1687.htm#18677<->Boundary(X) : SmpCpx -&gt; SmpCpx
4<->SmpCpx_boundary (Example H146E6)<->text1687.htm#18678<->SmpCpx_boundary (Example H146E6)
4<->Example-boundary :<->text1687.htm#18678<->Example-boundary :: SmpCpx_boundary (Example H146E6)
5<->S + T <->text1687.htm#18679<->S + T : SmpCpx, SmpCpx -&gt; SmpCpx
4<->SmpCpx_sum (Example H146E7)<->text1687.htm#18680<->SmpCpx_sum (Example H146E7)
4<->Example-sum :<->text1687.htm#18680<->Example-sum :: SmpCpx_sum (Example H146E7)
5<->S eq T <->text1687.htm#18681<->S eq T : SmpCpx, SmpCpx -&gt; BoolElt
4<->SmpCpx_eq (Example H146E8)<->text1687.htm#18682<->SmpCpx_eq (Example H146E8)
4<->Example-eq :<->text1687.htm#18682<->Example-eq :: SmpCpx_eq (Example H146E8)
5<->Product(S,T) <->text1687.htm#18683<->Product(S,T) : SmpCpx, SmpCpx -&gt; SmpCpx
4<->SmpCpx_product (Example H146E9)<->text1687.htm#18684<->SmpCpx_product (Example H146E9)
4<->Example-product :<->text1687.htm#18684<->Example-product :: SmpCpx_product (Example H146E9)
5<->* :: Join(S,T) <->text1687.htm#18685<->* :: Join(S,T) : SmpCpx, SmpCpx -&gt; SmpCpx
5<->Join(S,T) <->text1687.htm#18685<->Join(S,T) : SmpCpx, SmpCpx -&gt; SmpCpx
4<->SmpCpx_join (Example H146E10)<->text1687.htm#18686<->SmpCpx_join (Example H146E10)
4<->Example-join :<->text1687.htm#18686<->Example-join :: SmpCpx_join (Example H146E10)
5<->AddSimplex($\sim$X, s) <->text1687.htm#18687<->AddSimplex($\sim$X, s) : SmpCpx, SetEnum ->
5<->AddSimplex(X, s) <->text1687.htm#18687<->AddSimplex(X, s) : SmpCpx, SeqEnum -> SmpCpx
5<->Addsimplex :: AddSimplex(X, s) <->text1687.htm#18687<->Addsimplex :: AddSimplex(X, s) : SmpCpx, SetEnum -&gt; SmpCpx
5<->AddSimplex(X, s) <->text1687.htm#18687<->AddSimplex(X, s) : SmpCpx, SetEnum -&gt; SmpCpx
5<->Prune($\sim$X, f) <->text1687.htm#18688<->Prune($\sim$X, f) : SmpCpx, SetEnum -> 
5<->Prune(X, f) <->text1687.htm#18688<->Prune(X, f) : SmpCpx, SetEnum -&gt; SmpCpx
5<->Glue($\sim$X, e) <->text1687.htm#18689<->Glue($\sim$X, e) : SmpCpx, SeqEnum ->
5<->Glue(X, e) <->text1687.htm#18689<->Glue(X, e) : SmpCpx, SeqEnum -&gt; SmpCpx
4<->SmpCpx_prune-glue (Example H146E11)<->text1687.htm#18690<->SmpCpx_prune-glue (Example H146E11)
4<->Example-prune-glue :<->text1687.htm#18690<->Example-prune-glue :: SmpCpx_prune-glue (Example H146E11)
5<->BarycentricSubdivision(X) <->text1687.htm#18691<->BarycentricSubdivision(X) : SmpCpx -&gt; SmpCpx
5<->Skeleton(X, q) <->text1687.htm#18692<->Skeleton(X, q) : SmpCpx, RngIntElt -&gt; SmpCpx
5<->UnderlyingGraph(X) <->text1687.htm#18693<->UnderlyingGraph(X) : SmpCpx -&gt; GrphUnd, GrphVertSet, GrphEdgeSet
5<->Cone(X) <->text1687.htm#18694<->Cone(X) : SmpCpx -&gt; SmpCpx
5<->Suspension(X) <->text1687.htm#18695<->Suspension(X) : SmpCpx -&gt; SmpCpx
4<->SmpCpx_cone-suspension (Example H146E12)<->text1687.htm#18696<->SmpCpx_cone-suspension (Example H146E12)
4<->Example-cone-suspension :<->text1687.htm#18696<->Example-cone-suspension :: SmpCpx_cone-suspension (Example H146E12)
3<->standard-objects :<->text1687.htm#18697<->standard-objects :: Standard Topological Objects (SIMPLICIAL HOMOLOGY)
5<->Simplex(n) <->text1687.htm#18698<->Simplex(n) : RngIntElt -&gt; SmpCpx
5<->Sphere(n) <->text1687.htm#18699<->Sphere(n) : RngIntElt -&gt; SmpCpx
5<->KleinBottle() <->text1687.htm#18700<->KleinBottle() : -&gt; SmpCpx
5<->Torus() <->text1687.htm#18701<->Torus() : -&gt; SmpCpx
5<->Cylinder() <->text1687.htm#18702<->Cylinder() : -&gt; SmpCpx
5<->MoebiusStrip() <->text1687.htm#18703<->MoebiusStrip() : -&gt; SmpCpx
5<->LensSpace(p) <->text1687.htm#18704<->LensSpace(p) : RngIntElt -&gt; SmpCpx
5<->SimplicialProjectivePlane() <->text1687.htm#18705<->SimplicialProjectivePlane() : -&gt; SmpCpx
3<->standard-objects :<->text1687.htm#18697<->standard-objects :: Standard Topological Objects (SIMPLICIAL HOMOLOGY)
3<->simplicial-complexes :<->text1687.htm<->simplicial-complexes :: Simplicial Complexes (SIMPLICIAL HOMOLOGY)
3<->homology-computation :<->text1688.htm<->homology-computation :: Homology Computation (SIMPLICIAL HOMOLOGY)
5<->Homology($\sim$X) <->text1688.htm#18707<->Homology($\sim$X) : SmpCpx -> 
5<->Homology(X,A) <->text1688.htm#18707<->Homology(X,A) : SmpCpx, Rng -> SeqEnum, SeqEnum
5<->Homology($\sim$X, A) <->text1688.htm#18707<->Homology($\sim$X, A) : SmpCpx, Rng -> 
5<->Homology(X) <->text1688.htm#18707<->Homology(X) : SmpCpx -&gt; SeqEnum, SeqEnum
4<->SmpCpx_homology (Example H146E13)<->text1688.htm#18708<->SmpCpx_homology (Example H146E13)
4<->Example-homology :<->text1688.htm#18708<->Example-homology :: SmpCpx_homology (Example H146E13)
5<->HomologyGroup(X, q, A) <->text1688.htm#18709<->HomologyGroup(X, q, A) : SmpCpx, RngIntElt, Rng -> ModRng
5<->HomologyGroup(X, q) <->text1688.htm#18709<->HomologyGroup(X, q) : SmpCpx, RngIntElt -&gt; ModRng
5<->BettiNumber(X,q,A) <->text1688.htm#18710<->BettiNumber(X,q,A) : SmpCpx, RngIntElt, Rng -> RngIntElt
5<->BettiNumber(X,q) <->text1688.htm#18710<->BettiNumber(X,q) : SmpCpx, RngIntElt -&gt; RngIntElt
5<->TorsionCoefficients(X, q, A) <->text1688.htm#18711<->TorsionCoefficients(X, q, A) : SmpCpx, RngIntElt, Rng -> SeqEnum[RngElt]
5<->TorsionCoefficients(X, q) <->text1688.htm#18711<->TorsionCoefficients(X, q) : SmpCpx, RngIntElt -&gt; SeqEnum[RngElt]
5<->EulerCharacteristic(X) <->text1688.htm#18712<->EulerCharacteristic(X) : SmpCpx -&gt; RngIntElt
5<->BoundaryMatrix(X, q, A) <->text1688.htm#18713<->BoundaryMatrix(X, q, A) : SmpCpx, RngIntElt, Rng -&gt; Mtrx
5<->ChainComplex(X, A) <->text1688.htm#18714<->ChainComplex(X, A) : SmpCpx, Rng -&gt; ModCpx
4<->SmpCpx_chaincomplex (Example H146E14)<->text1688.htm#18715<->SmpCpx_chaincomplex (Example H146E14)
4<->Example-chaincomplex :<->text1688.htm#18715<->Example-chaincomplex :: SmpCpx_chaincomplex (Example H146E14)
5<->HomologyGenerators(X, A) <->text1688.htm#18716<->HomologyGenerators(X, A) : SmpCpx, Rng -> 
5<->HomologyGenerators(H, M, X) <->text1688.htm#18716<->HomologyGenerators(H, M, X) : SeqEnum, SeqEnum, SmpCpx ->
5<->HomologyGenerators(X) <->text1688.htm#18716<->HomologyGenerators(X) : SmpCpx -&gt;
4<->SmpCpx_homologygenerators (Example H146E15)<->text1688.htm#18717<->SmpCpx_homologygenerators (Example H146E15)
4<->Example-homologygenerators :<->text1688.htm#18717<->Example-homologygenerators :: SmpCpx_homologygenerators (Example H146E15)
3<->homology-computation :<->text1688.htm<->homology-computation :: Homology Computation (SIMPLICIAL HOMOLOGY)
3<->simplicial :<->text1685.htm<->simplicial :: SIMPLICIAL HOMOLOGY
3<->plane :<->text1690.htm<->plane :: FINITE PLANES
3<->introduction :<->text1691.htm<->introduction :: Introduction (FINITE PLANES)
3<->planes-in-magma :<->text1691.htm#18721<->planes-in-magma :: Planes in Magma (FINITE PLANES)
3<->introduction :<->text1691.htm<->introduction :: Introduction (FINITE PLANES)
3<->creation :<->text1692.htm<->creation :: Construction of a Plane (FINITE PLANES)
5<->FiniteProjectivePlane  <->text1692.htm#18723<->FiniteProjectivePlane< V | X $\colon$ \parameters >  : SetIndx, List -> PlaneProj
5<->FiniteProjectivePlane< v | X : parameters > <->text1692.htm#18723<->FiniteProjectivePlane&lt; v | X : parameters &gt; : RngIntElt, List -&gt; PlaneProj
5<->FiniteProjectivePlane(F)  <->text1692.htm#18724<->FiniteProjectivePlane(F)  : FldFin -> PlaneProj
5<->FiniteProjectivePlane(q)  <->text1692.htm#18724<->FiniteProjectivePlane(q)  : RngIntElt -> PlaneProj
5<->FiniteProjectivePlane(W) <->text1692.htm#18724<->FiniteProjectivePlane(W) : ModTupFld -&gt; PlaneProj
5<->FiniteAffinePlane  <->text1692.htm#18725<->FiniteAffinePlane< V | X $\colon$ \parameters >  : SetIndx, List -> PlaneAff
5<->FiniteAffinePlane< v | X : parameters > <->text1692.htm#18725<->FiniteAffinePlane&lt; v | X : parameters &gt; : RngIntElt, List -&gt; PlaneAff
5<->FiniteAffinePlane(F)  <->text1692.htm#18726<->FiniteAffinePlane(F)  : FldFin -> PlaneProj
5<->FiniteAffinePlane(q)  <->text1692.htm#18726<->FiniteAffinePlane(q)  : RngIntElt -> PlaneProj
5<->FiniteAffinePlane(W) <->text1692.htm#18726<->FiniteAffinePlane(W) : ModFld -&gt; PlaneAff
4<->Plane_Constructors (Example H147E1)<->text1692.htm#18727<->Plane_Constructors (Example H147E1)
4<->Example-Constructors :<->text1692.htm#18727<->Example-Constructors :: Plane_Constructors (Example H147E1)
3<->creation :<->text1692.htm<->creation :: Construction of a Plane (FINITE PLANES)
3<->point-line-set :<->text1693.htm<->point-line-set :: The Point-Set and Line-Set of a Plane (FINITE PLANES)
3<->definition :<->text1693.htm#18729<->definition :: Introduction (FINITE PLANES)
3<->creation :<->text1693.htm#18730<->creation :: Creating Point-Sets and Line-Sets (FINITE PLANES)
5<->PointSet(P) <->text1693.htm#18731<->PointSet(P) : Plane -&gt; PlanePtSet
5<->LineSet(P) <->text1693.htm#18732<->LineSet(P) : Plane -&gt; PlaneLnSet
3<->creation :<->text1693.htm#18730<->creation :: Creating Point-Sets and Line-Sets (FINITE PLANES)
3<->point-line :<->text1693.htm#18733<->point-line :: Using the Point-Set and Line-Set to Create Points and Lines (FINITE PLANES)
5<->V . i <->text1693.htm#18734<->V . i : PlanePtSet, RngIntElt -&gt; PlanePt
5<->V ! [a, b, c] <->text1693.htm#18735<->V ! [a, b, c] : PlanePtSet, SeqEnum -&gt; PlanePt
5<->V ! [a, b] <->text1693.htm#18736<->V ! [a, b] : PlanePtSet, SeqEnum -&gt; PlanePt
5<->V ! x <->text1693.htm#18737<->V ! x : PlanePtSet, Elt -&gt; PlanePt
5<->Representative(V) <->text1693.htm#18738<->Representative(V) : PlanePtSet -&gt; PlanePt
5<->Random(V) <->text1693.htm#18739<->Random(V) : PlanePtSet -&gt; PlanePt
5<->L . i <->text1693.htm#18740<->L . i : PlanePtSet, RngIntElt -&gt; PlanePt
5<->L ! [a, b, c] <->text1693.htm#18741<->L ! [a, b, c] : PlaneLnSet, SeqEnum -&gt; PlaneLn
5<->L ! [m, b] <->text1693.htm#18742<->L ! [m, b] : PlaneLnSet, SeqEnum -&gt; PlaneLn
5<->L ! S <->text1693.htm#18743<->L ! S : PlaneLnSet, SeqEnum -> PlaneLn
5<->L ! S <->text1693.htm#18743<->L ! S : PlaneLnSet, SetEnum -&gt; PlaneLn
5<->L ! l <->text1693.htm#18744<->L ! l : PlaneLnSet, PlaneLn -&gt; PlaneLn
5<->Representative(L) <->text1693.htm#18745<->Representative(L) : PlaneLnSet -&gt; PlaneLn
5<->Random(L) <->text1693.htm#18746<->Random(L) : PlaneLnSet -&gt; PlaneLn
4<->Plane_points-lines (Example H147E2)<->text1693.htm#18747<->Plane_points-lines (Example H147E2)
4<->Example-points-lines :<->text1693.htm#18747<->Example-points-lines :: Plane_points-lines (Example H147E2)
3<->point-line :<->text1693.htm#18733<->point-line :: Using the Point-Set and Line-Set to Create Points and Lines (FINITE PLANES)
3<->parent :<->text1693.htm#18748<->parent :: Retrieving the Plane from Points, Lines, Point-Sets and Line-Sets (FINITE PLANES)
5<->ParentPlane(V) <->text1693.htm#18749<->ParentPlane(V) : PlanePtSet -&gt; Plane, PlanePtSet, PlaneLnSet
5<->ParentPlane(L) <->text1693.htm#18750<->ParentPlane(L) : PlaneLnSet -&gt; Plane, PlanePtSet, PlaneLnSet
5<->ParentPlane(p) <->text1693.htm#18751<->ParentPlane(p) : PlanePt -&gt; Plane, PlanePtSet, PlaneLnSet
5<->ParentPlane(l) <->text1693.htm#18752<->ParentPlane(l) : PlaneLn -&gt; Plane, PlanePtSet, PlaneLnSet
3<->parent :<->text1693.htm#18748<->parent :: Retrieving the Plane from Points, Lines, Point-Sets and Line-Sets (FINITE PLANES)
3<->point-line-set :<->text1693.htm<->point-line-set :: The Point-Set and Line-Set of a Plane (FINITE PLANES)
3<->point-line :<->text1694.htm<->point-line :: The Set of Points and Set of Lines (FINITE PLANES)
5<->Points(P) <->text1694.htm#18754<->Points(P) : Plane -&gt; { PlanePt }
5<->Lines(P) <->text1694.htm#18755<->Lines(P) : PlaneLnSet -&gt; { PlaneLn }
3<->point-line :<->text1694.htm<->point-line :: The Set of Points and Set of Lines (FINITE PLANES)
3<->support :<->text1695.htm<->support :: The Defining Points of a Plane (FINITE PLANES)
5<->Support(P) <->text1695.htm#18757<->Support(P) : Plane -&gt; { Elt }
5<->Support(l) <->text1695.htm#18758<->Support(l) : PlaneLn -&gt; SetEnum
5<->Support(p) <->text1695.htm#18759<->Support(p) : PlanePt -> .
5<->Support(P, p) <->text1695.htm#18759<->Support(P, p) : Plane, PlanePt -&gt; .
4<->Plane_supp (Example H147E3)<->text1695.htm#18760<->Plane_supp (Example H147E3)
4<->Example-supp :<->text1695.htm#18760<->Example-supp :: Plane_supp (Example H147E3)
3<->support :<->text1695.htm<->support :: The Defining Points of a Plane (FINITE PLANES)
3<->subplane :<->text1696.htm<->subplane :: Subplanes (FINITE PLANES)
5<->sub<P | L> <->text1696.htm#18762<->sub&lt;P | L&gt; : Plane, List -&gt; Plane
5<->SubfieldSubplane(P, F) <->text1696.htm#18763<->SubfieldSubplane(P, F) : Plane, FldFin -&gt; Plane, PlanePtSet, PlaneLnSet
4<->Plane_sub (Example H147E4)<->text1696.htm#18764<->Plane_sub (Example H147E4)
4<->Example-sub :<->text1696.htm#18764<->Example-sub :: Plane_sub (Example H147E4)
3<->subplane :<->text1696.htm<->subplane :: Subplanes (FINITE PLANES)
3<->access :<->text1697.htm<->access :: Structures Associated with a Plane (FINITE PLANES)
5<->VectorSpace(P) <->text1697.htm#18766<->VectorSpace(P) : Plane -&gt; ModTupFld
5<->Field(P) <->text1697.htm#18767<->Field(P) : Plane -&gt; FldFin
5<->IncidenceMatrix(P) <->text1697.htm#18768<->IncidenceMatrix(P) : Plane -&gt; AlgMatElt
5<->Dual(P) <->text1697.htm#18769<->Dual(P) : Plane -&gt; Plane, PlanePtSet, PlaneLnSet
4<->Plane_sub (Example H147E5)<->text1697.htm#18770<->Plane_sub (Example H147E5)
4<->Example-sub :<->text1697.htm#18770<->Example-sub :: Plane_sub (Example H147E5)
3<->access :<->text1697.htm<->access :: Structures Associated with a Plane (FINITE PLANES)
3<->invariant :<->text1698.htm<->invariant :: Numerical Invariants of a  Plane (FINITE PLANES)
5<->Order(P) <->text1698.htm#18772<->Order(P) : Plane -&gt; RngIntElt
5<-># :: NumberOfPoints(P) <->text1698.htm#18773<-># :: NumberOfPoints(P) : Plane -&gt; RngIntElt
5<->NumberOfPoints(P) <->text1698.htm#18773<->NumberOfPoints(P) : Plane -&gt; RngIntElt
5<-># :: NumberOfLines(P) <->text1698.htm#18774<-># :: NumberOfLines(P) : Plane -&gt; RngIntElt
5<->NumberOfLines(P) <->text1698.htm#18774<->NumberOfLines(P) : Plane -&gt; RngIntElt
5<->pRank(P) <->text1698.htm#18775<->pRank(P) : Plane -&gt; RngIntElt
5<->pRank(P, p) <->text1698.htm#18776<->pRank(P, p) : Plane, RngIntElt -&gt; RngIntElt
4<->Plane_invar (Example H147E6)<->text1698.htm#18777<->Plane_invar (Example H147E6)
4<->Example-invar :<->text1698.htm#18777<->Example-invar :: Plane_invar (Example H147E6)
3<->invariant :<->text1698.htm<->invariant :: Numerical Invariants of a  Plane (FINITE PLANES)
3<->boolean :<->text1699.htm<->boolean :: Properties of Planes (FINITE PLANES)
5<->IsDesarguesian(P) <->text1699.htm#18779<->IsDesarguesian(P) : Plane -&gt; BoolElt
5<->IsSelfDual(P) <->text1699.htm#18780<->IsSelfDual(P) : PlaneProj -&gt; BoolElt
3<->boolean :<->text1699.htm<->boolean :: Properties of Planes (FINITE PLANES)
3<->equality :<->text1700.htm<->equality :: Identity and Isomorphism (FINITE PLANES)
5<->P eq Q <->text1700.htm#18782<->P eq Q : Plane, Plane -&gt; BoolElt
5<->P ne Q <->text1700.htm#18783<->P ne Q : Plane, Plane -&gt; BoolElt
5<->IsIsomorphic(P, Q: parameters) <->text1700.htm#18784<->IsIsomorphic(P, Q: parameters) : Plane, Plane -&gt; BoolElt, Map
5<->P subset Q <->text1700.htm#18785<->P subset Q : Plane, Plane -&gt; BoolElt
3<->equality :<->text1700.htm<->equality :: Identity and Isomorphism (FINITE PLANES)
3<->projective-affine :<->text1701.htm<->projective-affine :: The Connection between Projective and Affine Planes (FINITE PLANES)
5<->FiniteAffinePlane(P, l) <->text1701.htm#18787<->FiniteAffinePlane(P, l) : PlaneProj, PlaneLn -&gt; PlaneAff, PlanePtSet, PlaneLnSet, Map
5<->ProjectiveEmbedding(P) <->text1701.htm#18788<->ProjectiveEmbedding(P) : PlaneAff -&gt; PlaneProj, PlanePtSet, PlaneLnSet, Map
4<->Plane_embedding (Example H147E7)<->text1701.htm#18789<->Plane_embedding (Example H147E7)
4<->Example-embedding :<->text1701.htm#18789<->Example-embedding :: Plane_embedding (Example H147E7)
3<->projective-affine :<->text1701.htm<->projective-affine :: The Connection between Projective and Affine Planes (FINITE PLANES)
3<->operation :<->text1702.htm<->operation :: Operations on Points and  Lines (FINITE PLANES)
3<->el-ops :<->text1702.htm#18791<->el-ops :: Elementary Operations (FINITE PLANES)
5<->p eq q <->text1702.htm#18792<->p eq q : PlanePt, PlanePt -&gt; BoolElt
5<->p ne q <->text1702.htm#18793<->p ne q : PlanePt, PlanePt -&gt; BoolElt
5<->l eq m <->text1702.htm#18794<->l eq m : PlaneLn, PlaneLn -&gt; BoolElt
5<->l ne m <->text1702.htm#18795<->l ne m : PlaneLn, PlaneLn -&gt; BoolElt
5<->p in l <->text1702.htm#18796<->p in l : PlanePt, PlaneLn -&gt; BoolElt
5<->p notin l <->text1702.htm#18797<->p notin l : PlanePt, PlaneLn -&gt; BoolElt
5<->S subset l <->text1702.htm#18798<->S subset l : { PlanePt }, PlaneLn -&gt; BoolElt
5<->S notsubset l <->text1702.htm#18799<->S notsubset l : { PlanePt }, PlaneLn -&gt; BoolElt
5<->l meet m <->text1702.htm#18800<->l meet m : PlaneLn, PlaneLn -&gt; PlanePt
5<->Representative(l) <->text1702.htm#18801<->Representative(l) : PlaneLn -&gt; PlanePt
5<->Random(l) <->text1702.htm#18802<->Random(l) : PlaneLn -&gt; PlanePt
3<->el-ops :<->text1702.htm#18791<->el-ops :: Elementary Operations (FINITE PLANES)
3<->deconstruction :<->text1702.htm#18803<->deconstruction :: Deconstruction Functions (FINITE PLANES)
5<->Index(P, p) <->text1702.htm#18804<->Index(P, p) : Plane, PlanePt -&gt; RngIntElt
5<->Index(P, l) <->text1702.htm#18805<->Index(P, l) : Plane, PlaneLn -&gt; RngIntElt
5<->[] :: p[i] <->text1702.htm#18806<->[] :: p[i] : PlanePt, RngIntElt -&gt; FldFinElt
5<->[] :: l[i] <->text1702.htm#18807<->[] :: l[i] : PlaneLn, RngIntElt -&gt; FldFinElt
5<->Coordinates(P, p) <->text1702.htm#18808<->Coordinates(P, p) : Plane, PlanePt -&gt; [ FldFinElt ]
5<->Coordinates(P, l) <->text1702.htm#18809<->Coordinates(P, l) : Plane, PlaneLn -&gt; [ FldFinElt ]
5<->Eltseq :: ElementToSequence(p) <->text1702.htm#18810<->Eltseq :: ElementToSequence(p) : PlanePt -&gt; [ FldFinElt ]
5<->ElementToSequence(p) <->text1702.htm#18810<->ElementToSequence(p) : PlanePt -&gt; [ FldFinElt ]
5<->Eltseq :: ElementToSequence(l) <->text1702.htm#18811<->Eltseq :: ElementToSequence(l) : PlaneLn -&gt; [ FldFinElt ]
5<->ElementToSequence(l) <->text1702.htm#18811<->ElementToSequence(l) : PlaneLn -&gt; [ FldFinElt ]
5<->Set(l) <->text1702.htm#18812<->Set(l) : PlaneLn -&gt; { PlanePt }
4<->Plane_decon (Example H147E8)<->text1702.htm#18813<->Plane_decon (Example H147E8)
4<->Example-decon :<->text1702.htm#18813<->Example-decon :: Plane_decon (Example H147E8)
3<->deconstruction :<->text1702.htm#18803<->deconstruction :: Deconstruction Functions (FINITE PLANES)
3<->elt-other :<->text1702.htm#18814<->elt-other :: Other Point and Line Functions (FINITE PLANES)
5<->IsCollinear(P, S) <->text1702.htm#18815<->IsCollinear(P, S) : Plane, { PlanePt } -&gt; BoolElt, PlaneLn
5<->IsConcurrent(P, R) <->text1702.htm#18816<->IsConcurrent(P, R) : Plane, { PlaneLn } -&gt; BoolElt, PlanePt
5<->ContainsQuadrangle(P, S) <->text1702.htm#18817<->ContainsQuadrangle(P, S) : Plane, { PlanePt } -&gt; BoolElt
5<->Pencil(P, p) <->text1702.htm#18818<->Pencil(P, p) : Plane, PlanePt -&gt; { PlaneLn }
5<->Slope(l) <->text1702.htm#18819<->Slope(l) : PlaneLn -&gt; FldFinElt
5<->IsParallel(P, l, m) <->text1702.htm#18820<->IsParallel(P, l, m) : Plane, PlaneLn, PlaneLn -&gt; BoolElt
5<->ParallelClass(P, l) <->text1702.htm#18821<->ParallelClass(P, l) : Plane, PlaneLn -&gt; { PlaneLn }
5<->ParallelClasses(P) <->text1702.htm#18822<->ParallelClasses(P) : PlaneAff -&gt; { { PlaneLn } }
4<->Plane_elt-other (Example H147E9)<->text1702.htm#18823<->Plane_elt-other (Example H147E9)
4<->Example-elt-other :<->text1702.htm#18823<->Example-elt-other :: Plane_elt-other (Example H147E9)
3<->elt-other :<->text1702.htm#18814<->elt-other :: Other Point and Line Functions (FINITE PLANES)
3<->operation :<->text1702.htm<->operation :: Operations on Points and  Lines (FINITE PLANES)
3<->arc :<->text1703.htm<->arc :: Arcs (FINITE PLANES)
5<->kArc(P, k) <->text1703.htm#18825<->kArc(P, k) : Plane, RngIntElt -&gt; SetEnum
5<->CompleteKArc(P, k) <->text1703.htm#18826<->CompleteKArc(P, k) : Plane, RngIntElt -&gt; SetEnum
5<->IsArc(P, A) <->text1703.htm#18827<->IsArc(P, A) : Plane, { PlanePt } -&gt; BoolElt
5<->IsComplete(P, A) <->text1703.htm#18828<->IsComplete(P, A) : Plane, { PlanePt } -&gt; BoolElt
5<->Conic(P, S) <->text1703.htm#18829<->Conic(P, S) : Plane, { PlanePt } -&gt; SetEnum
5<->QuadraticForm(S) <->text1703.htm#18830<->QuadraticForm(S) : { PlanePt } -&gt; RngMPolElt
5<->Tangent(P, A, p) <->text1703.htm#18831<->Tangent(P, A, p) : Plane, { PlanePt }, PlanePt -&gt; PlaneLn
5<->AllTangents(P, A) <->text1703.htm#18832<->AllTangents(P, A) : Plane, { PlanePt } -&gt; { PlaneLn }
5<->AllSecants(P, A) <->text1703.htm#18833<->AllSecants(P, A) : Plane, { PlanePt } -&gt; { PlaneLn }
5<->AllPassants :: ExternalLines(P, A) <->text1703.htm#18834<->AllPassants :: ExternalLines(P, A) : Plane, { PlanePt } -&gt; { PlaneLn }
5<->ExternalLines(P, A) <->text1703.htm#18834<->ExternalLines(P, A) : Plane, { PlanePt } -&gt; { PlaneLn }
5<->Knot(P, C) <->text1703.htm#18835<->Knot(P, C) : Plane, { PlanePt } -&gt; PlanePt
5<->Exterior(P, C) <->text1703.htm#18836<->Exterior(P, C) : Plane, { PlanePt } -&gt; { PlanePt }
5<->Interior(P, C) <->text1703.htm#18837<->Interior(P, C) : Plane, { PlanePt } -&gt; { PlanePt }
4<->Plane_arcs (Example H147E10)<->text1703.htm#18838<->Plane_arcs (Example H147E10)
4<->Example-arcs :<->text1703.htm#18838<->Example-arcs :: Plane_arcs (Example H147E10)
3<->arc :<->text1703.htm<->arc :: Arcs (FINITE PLANES)
3<->unital :<->text1704.htm<->unital :: Unitals (FINITE PLANES)
5<->IsUnital(P, U) <->text1704.htm#18840<->IsUnital(P, U) : Plane, { PlanePt } -&gt; BoolElt
5<->AllTangents(P, U) <->text1704.htm#18841<->AllTangents(P, U) : Plane, { PlanePt } -&gt; { PlaneLn }
5<->UnitalFeet(P, U, p) <->text1704.htm#18842<->UnitalFeet(P, U, p) : Plane, { PlanePt }, PlanePt -&gt; { PlanePt }
4<->Plane_unital (Example H147E11)<->text1704.htm#18843<->Plane_unital (Example H147E11)
4<->Example-unital :<->text1704.htm#18843<->Example-unital :: Plane_unital (Example H147E11)
3<->unital :<->text1704.htm<->unital :: Unitals (FINITE PLANES)
3<->collineation-group :<->text1705.htm<->collineation-group :: The Collineation Group of a Plane (FINITE PLANES)
3<->creation :<->text1705.htm#18845<->creation :: The Collineation Group Function (FINITE PLANES)
5<->AutomorphismGroup :: CollineationGroup(P) <->text1705.htm#18846<->AutomorphismGroup :: CollineationGroup(P) : Plane -&gt; GrpPerm, GSet, GSet, PowMap, Map
5<->PointGroup :: CollineationGroup(P) <->text1705.htm#18846<->PointGroup :: CollineationGroup(P) : Plane -&gt; GrpPerm, GSet, GSet, PowMap, Map
5<->CollineationGroup(P) <->text1705.htm#18846<->CollineationGroup(P) : Plane -&gt; GrpPerm, GSet, GSet, PowMap, Map
5<->LineGroup(P) <->text1705.htm#18847<->LineGroup(P) : Plane -&gt; GrpPerm, PowMap, Map
5<->CollineationGroupStabilizer(P, k) <->text1705.htm#18848<->CollineationGroupStabilizer(P, k) : Plane, RngIntElt -&gt; GrpPerm, GSet, GSet, PowMap, Map
5<->CollineationSubgroup(P) <->text1705.htm#18849<->CollineationSubgroup(P) : Plane -&gt; GrpPerm, GSet, GSet, PowMap, Map
3<->creation :<->text1705.htm#18845<->creation :: The Collineation Group Function (FINITE PLANES)
3<->action :<->text1705.htm#18850<->action :: General Action of Collineations (FINITE PLANES)
5<->y ^ g <->text1705.htm#18851<->y ^ g : Elt, GrpPermElt -&gt; Elt
5<->y ^ G <->text1705.htm#18852<->y ^ G : Elt, GrpPerm -&gt; GSet
5<->Image(g, Y, y) <->text1705.htm#18853<->Image(g, Y, y) : GrpPermElt, GSet, Elt -&gt; Elt
5<->Orbit(G, Y, y) <->text1705.htm#18854<->Orbit(G, Y, y) : GrpPerm, GSet, Elt -&gt; GSet
5<->Orbits(G, Y) <->text1705.htm#18855<->Orbits(G, Y) : GrpPerm, GSet -&gt; [ GSet ]
5<->Stabilizer(G, Y, y) <->text1705.htm#18856<->Stabilizer(G, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->Action(G, Y) <->text1705.htm#18857<->Action(G, Y) : GrpPerm, GSet -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->ActionImage(G, Y) <->text1705.htm#18858<->ActionImage(G, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->ActionKernel(G, Y) <->text1705.htm#18859<->ActionKernel(G, Y) : GrpPerm, GSet -&gt; GrpPerm
4<->Plane_CollineationGSet (Example H147E12)<->text1705.htm#18860<->Plane_CollineationGSet (Example H147E12)
4<->Example-CollineationGSet :<->text1705.htm#18860<->Example-CollineationGSet :: Plane_CollineationGSet (Example H147E12)
4<->Plane_Collineation (Example H147E13)<->text1705.htm#18861<->Plane_Collineation (Example H147E13)
4<->Example-Collineation :<->text1705.htm#18861<->Example-Collineation :: Plane_Collineation (Example H147E13)
4<->Plane_baer (Example H147E14)<->text1705.htm#18862<->Plane_baer (Example H147E14)
4<->Example-baer :<->text1705.htm#18862<->Example-baer :: Plane_baer (Example H147E14)
3<->action :<->text1705.htm#18850<->action :: General Action of Collineations (FINITE PLANES)
3<->central :<->text1705.htm#18863<->central :: Central Collineations (FINITE PLANES)
5<->CentralCollineationGroup(P, p, l) <->text1705.htm#18864<->CentralCollineationGroup(P, p, l) : Plane, PlanePt, PlaneLn -&gt; GrpPerm, PowMap, Map
5<->CentralCollineationGroup(P, p) <->text1705.htm#18865<->CentralCollineationGroup(P, p) : Plane, PlanePt -&gt; GrpPerm, PowMap, Map
5<->CentralCollineationGroup(P, l) <->text1705.htm#18866<->CentralCollineationGroup(P, l) : Plane, PlaneLn -&gt; GrpPerm, PowMap, Map
5<->IsCentralCollineation(P, g) <->text1705.htm#18867<->IsCentralCollineation(P, g) : Plane, GrpPermElt -&gt; BoolElt, PlanePt, PlaneLn
4<->Plane_cent-coll (Example H147E15)<->text1705.htm#18868<->Plane_cent-coll (Example H147E15)
4<->Example-cent-coll :<->text1705.htm#18868<->Example-cent-coll :: Plane_cent-coll (Example H147E15)
3<->central :<->text1705.htm#18863<->central :: Central Collineations (FINITE PLANES)
3<->symmetry-regularity :<->text1705.htm#18869<->symmetry-regularity :: Transitivity Properties (FINITE PLANES)
5<->IsTransitive :: IsPointTransitive(P) <->text1705.htm#18870<->IsTransitive :: IsPointTransitive(P) : Plane -&gt; BoolElt
5<->IsPointTransitive(P) <->text1705.htm#18870<->IsPointTransitive(P) : Plane -&gt; BoolElt
5<->IsLineTransitive(P) <->text1705.htm#18871<->IsLineTransitive(P) : Plane -&gt; BoolElt
4<->Plane_trans (Example H147E16)<->text1705.htm#18872<->Plane_trans (Example H147E16)
4<->Example-trans :<->text1705.htm#18872<->Example-trans :: Plane_trans (Example H147E16)
3<->symmetry-regularity :<->text1705.htm#18869<->symmetry-regularity :: Transitivity Properties (FINITE PLANES)
3<->collineation-group :<->text1705.htm<->collineation-group :: The Collineation Group of a Plane (FINITE PLANES)
3<->translation-planes :<->text1706.htm<->translation-planes :: Translation Planes (FINITE PLANES)
5<->BaerDerivation(q2) <->text1706.htm#18874<->BaerDerivation(q2) : RngIntElt -&gt; PlaneAff, PlanePtSet, PlaneLnSet
5<->BaerSubplane(P) <->text1706.htm#18875<->BaerSubplane(P) : PlaneProj -&gt; PlaneProj, PlanePtSet, PlaneLnSet
5<->OvalDerivation(q: parameters) <->text1706.htm#18876<->OvalDerivation(q: parameters) : RngIntElt -&gt; PlaneAff, PlanePtSet, PlaneLnSet
3<->translation-planes :<->text1706.htm<->translation-planes :: Translation Planes (FINITE PLANES)
3<->designs :<->text1707.htm<->designs :: Planes and Designs (FINITE PLANES)
5<->Design(P) <->text1707.htm#18878<->Design(P) : Plane -&gt; Dsgn, SetIncPt, SetIncBlk
5<->FiniteAffinePlane(D) <->text1707.htm#18879<->FiniteAffinePlane(D) : Inc -&gt; Plane, PlanePtSet, PlaneLnSet
5<->FiniteProjectivePlane(D) <->text1707.htm#18880<->FiniteProjectivePlane(D) : Inc -&gt; Plane, PlanePtSet, PlaneLnSet
4<->Plane_designs (Example H147E17)<->text1707.htm#18881<->Plane_designs (Example H147E17)
4<->Example-designs :<->text1707.htm#18881<->Example-designs :: Plane_designs (Example H147E17)
3<->designs :<->text1707.htm<->designs :: Planes and Designs (FINITE PLANES)
3<->graph-code :<->text1708.htm<->graph-code :: Planes, Graphs and Codes (FINITE PLANES)
5<->LineGraph(P) <->text1708.htm#18883<->LineGraph(P) : Plane -&gt; Grph
5<->IncidenceGraph(P) <->text1708.htm#18884<->IncidenceGraph(P) : Plane -&gt; Grph
5<->LinearCode(P, K) <->text1708.htm#18885<->LinearCode(P, K) : Plane, FldFin -&gt; Code
4<->Plane_codes (Example H147E18)<->text1708.htm#18886<->Plane_codes (Example H147E18)
4<->Example-codes :<->text1708.htm#18886<->Example-codes :: Plane_codes (Example H147E18)
3<->graph-code :<->text1708.htm<->graph-code :: Planes, Graphs and Codes (FINITE PLANES)
3<->plane :<->text1690.htm<->plane :: FINITE PLANES
3<->incidence-geometry :<->text1711.htm<->incidence-geometry :: INCIDENCE GEOMETRY
3<->introduction :<->text1712.htm<->introduction :: Introduction (INCIDENCE GEOMETRY)
3<->creation :<->text1713.htm<->creation :: Construction of Incidence and Coset Geometries (INCIDENCE GEOMETRY)
3<->creation-incidence-geometry :<->text1713.htm#18892<->creation-incidence-geometry :: Construction of an Incidence Geometry (INCIDENCE GEOMETRY)
5<->IncidenceGeometry(G) <->text1713.htm#18893<->IncidenceGeometry(G) : GrphUnd -&gt; IncGeom
4<->IncidenceGeometry_Constructors (Example H148E1)<->text1713.htm#18894<->IncidenceGeometry_Constructors (Example H148E1)
4<->Example-Constructors :<->text1713.htm#18894<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E1)
4<->IncidenceGeometry_Constructors (Example H148E2)<->text1713.htm#18895<->IncidenceGeometry_Constructors (Example H148E2)
4<->Example-Constructors :<->text1713.htm#18895<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E2)
4<->IncidenceGeometry_Constructors (Example H148E3)<->text1713.htm#18896<->IncidenceGeometry_Constructors (Example H148E3)
4<->Example-Constructors :<->text1713.htm#18896<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E3)
4<->IncidenceGeometry_Constructors (Example H148E4)<->text1713.htm#18897<->IncidenceGeometry_Constructors (Example H148E4)
4<->Example-Constructors :<->text1713.htm#18897<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E4)
3<->creation-incidence-geometry :<->text1713.htm#18892<->creation-incidence-geometry :: Construction of an Incidence Geometry (INCIDENCE GEOMETRY)
3<->creation-coset-geometry :<->text1713.htm#18898<->creation-coset-geometry :: Construction of a Coset Geometry (INCIDENCE GEOMETRY)
5<->CosetGeometry(G, S, I) <->text1713.htm#18899<->CosetGeometry(G, S, I) : GrpPerm, Set, Set -&gt; CosetGeom
5<->CosetGeometry(G, S) <->text1713.htm#18900<->CosetGeometry(G, S) : GrpPerm, Set -&gt; CosetGeom
4<->IncidenceGeometry_Constructors (Example H148E5)<->text1713.htm#18901<->IncidenceGeometry_Constructors (Example H148E5)
4<->Example-Constructors :<->text1713.htm#18901<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E5)
4<->IncidenceGeometry_Constructors (Example H148E6)<->text1713.htm#18902<->IncidenceGeometry_Constructors (Example H148E6)
4<->Example-Constructors :<->text1713.htm#18902<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E6)
4<->IncidenceGeometry_Constructors (Example H148E7)<->text1713.htm#18903<->IncidenceGeometry_Constructors (Example H148E7)
4<->Example-Constructors :<->text1713.htm#18903<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E7)
3<->creation-coset-geometry :<->text1713.htm#18898<->creation-coset-geometry :: Construction of a Coset Geometry (INCIDENCE GEOMETRY)
3<->creation :<->text1713.htm<->creation :: Construction of Incidence and Coset Geometries (INCIDENCE GEOMETRY)
3<->access :<->text1714.htm<->access :: Elementary Invariants (INCIDENCE GEOMETRY)
5<->Elements :: Points(D) <->text1714.htm#18905<->Elements :: Points(D) : IncGeom -&gt; SetIndx
5<->Points(D) <->text1714.htm#18905<->Points(D) : IncGeom -&gt; SetIndx
5<->Types(D) <->text1714.htm#18906<->Types(D) : IncGeom -&gt; SetIndx
5<->Types(C) <->text1714.htm#18907<->Types(C) : CosetGeom -&gt; SetIndx
5<->Rank(D) <->text1714.htm#18908<->Rank(D) : IncGeom -&gt; RngIntElt
5<->Rank(C) <->text1714.htm#18909<->Rank(C) : CosetGeom -&gt; RngIntElt
5<->IncidenceGraph(D) <->text1714.htm#18910<->IncidenceGraph(D) : IncGeom -&gt; GrphUnd, GrphVertSet, GrphEdgeSet
5<->Group(C) <->text1714.htm#18911<->Group(C) : CosetGeom -&gt; GrpPerm
5<->MaximalParabolics :: MaxParabolics(C) <->text1714.htm#18912<->MaximalParabolics :: MaxParabolics(C) : CosetGeom -&gt; SetIndx
5<->MaxParabolics(C) <->text1714.htm#18912<->MaxParabolics(C) : CosetGeom -&gt; SetIndx
5<->MinimalParabolics :: MinParabolics(C) <->text1714.htm#18913<->MinimalParabolics :: MinParabolics(C) : CosetGeom -&gt; SetIndx
5<->MinParabolics(C) <->text1714.htm#18913<->MinParabolics(C) : CosetGeom -&gt; SetIndx
5<->BorelSubgroup :: Borel(C) <->text1714.htm#18914<->BorelSubgroup :: Borel(C) : CosetGeom -&gt; GrpPerm
5<->Borel(C) <->text1714.htm#18914<->Borel(C) : CosetGeom -&gt; GrpPerm
5<->Kernel(C) <->text1714.htm#18915<->Kernel(C) : CosetGeom -&gt; GrpPerm
5<->Kernels(C) <->text1714.htm#18916<->Kernels(C) : CosetGeom -&gt; SeqEnum
5<->Quotient(C, K) <->text1714.htm#18917<->Quotient(C, K) : CosetGeom, GrpPerm -&gt; CosetGeom
3<->access :<->text1714.htm<->access :: Elementary Invariants (INCIDENCE GEOMETRY)
3<->conversion-functions :<->text1715.htm<->conversion-functions :: Conversion Functions (INCIDENCE GEOMETRY)
5<->IncidenceGeometry(C) <->text1715.htm#18919<->IncidenceGeometry(C) : CosetGeom -&gt; IncGeom
5<->CosetGeometry(D) <->text1715.htm#18920<->CosetGeometry(D) : IncGeom -&gt; BoolElt, CosetGeom
5<->Graph(D) <->text1715.htm#18921<->Graph(D) : IncGeom -&gt; GrphUnd
5<->Graph(C) <->text1715.htm#18922<->Graph(C) : CosetGeom -&gt; GrphUnd
4<->IncidenceGeometry_Constructors (Example H148E8)<->text1715.htm#18923<->IncidenceGeometry_Constructors (Example H148E8)
4<->Example-Constructors :<->text1715.htm#18923<->Example-Constructors :: IncidenceGeometry_Constructors (Example H148E8)
3<->conversion-functions :<->text1715.htm<->conversion-functions :: Conversion Functions (INCIDENCE GEOMETRY)
3<->residues :<->text1716.htm<->residues :: Residues (INCIDENCE GEOMETRY)
5<->Residue(D, f) <->text1716.htm#18925<->Residue(D, f) : IncGeom, Set -&gt; IncGeom
5<->Residue(C, f) <->text1716.htm#18926<->Residue(C, f) : CosetGeom, Set -&gt; CosetGeom
3<->residues :<->text1716.htm<->residues :: Residues (INCIDENCE GEOMETRY)
3<->truncations :<->text1717.htm<->truncations :: Truncations (INCIDENCE GEOMETRY)
5<->Truncation(D, t) <->text1717.htm#18928<->Truncation(D, t) : IncGeom, Set -&gt; IncGeom
5<->Truncation(C, t) <->text1717.htm#18929<->Truncation(C, t) : CosetGeom, Set -&gt; CosetGeom
3<->truncations :<->text1717.htm<->truncations :: Truncations (INCIDENCE GEOMETRY)
3<->shadows :<->text1718.htm<->shadows :: Shadows (INCIDENCE GEOMETRY)
5<->Shadow(D, I, F) <->text1718.htm#18931<->Shadow(D, I, F) : IncGeom, Set, Set -&gt; SetIndx
3<->shadows :<->text1718.htm<->shadows :: Shadows (INCIDENCE GEOMETRY)
3<->shadow-space :<->text1719.htm<->shadow-space :: Shadow Spaces (INCIDENCE GEOMETRY)
5<->ShadowSpace(D,I) <->text1719.htm#18933<->ShadowSpace(D,I) : IncGeom, Set -&gt; Inc
3<->shadow-space :<->text1719.htm<->shadow-space :: Shadow Spaces (INCIDENCE GEOMETRY)
3<->automorphisms :<->text1720.htm<->automorphisms :: Automorphism Group and  Correlation Group (INCIDENCE GEOMETRY)
5<->AutomorphismGroup(D) <->text1720.htm#18935<->AutomorphismGroup(D) : IncGeom -&gt; GrpPerm
5<->CorrelationGroup(D) <->text1720.htm#18936<->CorrelationGroup(D) : IncGeom -&gt; GrpPerm
3<->automorphisms :<->text1720.htm<->automorphisms :: Automorphism Group and  Correlation Group (INCIDENCE GEOMETRY)
3<->properties :<->text1721.htm<->properties :: Properties of Incidence  Geometries and Coset Geometries (INCIDENCE GEOMETRY)
5<->IsFTGeometry(D) <->text1721.htm#18938<->IsFTGeometry(D) : IncGeom -&gt; BoolElt
5<->IsFTGeometry(C) <->text1721.htm#18939<->IsFTGeometry(C) : CosetGeom -&gt; BoolElt
5<->IsFirm(X) <->text1721.htm#18940<->IsFirm(X) : CosetGeom -> BoolElt
5<->IsFirm(X) <->text1721.htm#18940<->IsFirm(X) : IncGeom -&gt; BoolElt
5<->IsThin(X) <->text1721.htm#18941<->IsThin(X) : IncGeom -> BoolElt
5<->IsThin(X) <->text1721.htm#18941<->IsThin(X) : CosetGeom -&gt; BoolElt
5<->IsThick(X) <->text1721.htm#18942<->IsThick(X) : IncGeom -> BoolElt
5<->IsThick(X) <->text1721.htm#18942<->IsThick(X) : CosetGeom -&gt; BoolElt
5<->IsRC :: IsResiduallyConnected(X) <->text1721.htm#18943<->IsRC :: IsResiduallyConnected(X) : IncGeom -&gt; BoolElt
5<->IsResiduallyConnected(X) <->text1721.htm#18943<->IsResiduallyConnected(X) : CosetGeom -> BoolElt
5<->IsRC(X) : CosetGeom -> BoolElt :: IsResiduallyConnected(X) <->text1721.htm#18943<->IsRC(X) : CosetGeom -> BoolElt :: IsResiduallyConnected(X) : IncGeom -&gt; BoolElt
5<->IsResiduallyConnected(X) <->text1721.htm#18943<->IsResiduallyConnected(X) : IncGeom -&gt; BoolElt
5<->IsGraph(D) <->text1721.htm#18944<->IsGraph(D) : IncGeom -&gt; GrphUnd
5<->IsGraph(C) <->text1721.htm#18945<->IsGraph(C) : CosetGeom -&gt; GrphUnd
3<->properties :<->text1721.htm<->properties :: Properties of Incidence  Geometries and Coset Geometries (INCIDENCE GEOMETRY)
3<->intersectionproperties :<->text1722.htm<->intersectionproperties :: Intersection Properties of  Coset Geometries (INCIDENCE GEOMETRY)
5<->HasIntersectionPropertyN(C,n) <->text1722.htm#18947<->HasIntersectionPropertyN(C,n) : CosetGeom, RngIntElt -&gt; BoolElt, BoolElt
5<->HasIntersectionProperty(C) <->text1722.htm#18948<->HasIntersectionProperty(C) : CosetGeom -&gt; BoolElt
5<->HasWeakIntersectionProperty(C) <->text1722.htm#18949<->HasWeakIntersectionProperty(C) : CosetGeom -&gt; BoolElt
3<->intersectionproperties :<->text1722.htm<->intersectionproperties :: Intersection Properties of  Coset Geometries (INCIDENCE GEOMETRY)
3<->primitivityproperties :<->text1723.htm<->primitivityproperties :: Primitivity Properties on  Coset Geometries (INCIDENCE GEOMETRY)
5<->IsPRI :: IsPrimitive(C) <->text1723.htm#18951<->IsPRI :: IsPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsPrimitive(C) <->text1723.htm#18951<->IsPrimitive(C) : CosetGeom -> BoolElt
5<->IsPRI(C) : CosetGeom -> BoolElt :: IsPrimitive(C) <->text1723.htm#18951<->IsPRI(C) : CosetGeom -> BoolElt :: IsPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsPrimitive(C) <->text1723.htm#18951<->IsPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsWPRI :: IsWeaklyPrimitive(C) <->text1723.htm#18952<->IsWPRI :: IsWeaklyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsWeaklyPrimitive(C) <->text1723.htm#18952<->IsWeaklyPrimitive(C) : CosetGeom -> BoolElt
5<->IsWPRI(C) : CosetGeom -> BoolElt :: IsWeaklyPrimitive(C) <->text1723.htm#18952<->IsWPRI(C) : CosetGeom -> BoolElt :: IsWeaklyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsWeaklyPrimitive(C) <->text1723.htm#18952<->IsWeaklyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsRPRI :: IsResiduallyPrimitive(C) <->text1723.htm#18953<->IsRPRI :: IsResiduallyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsResiduallyPrimitive(C) <->text1723.htm#18953<->IsResiduallyPrimitive(C) : CosetGeom -> BoolElt
5<->IsRPRI(C) : CosetGeom -> BoolElt :: IsResiduallyPrimitive(C) <->text1723.htm#18953<->IsRPRI(C) : CosetGeom -> BoolElt :: IsResiduallyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsResiduallyPrimitive(C) <->text1723.htm#18953<->IsResiduallyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsRWPRI :: IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsRWPRI :: IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsRWP :: IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsRWP :: IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsResiduallyWeaklyPrimitive :: IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsResiduallyWeaklyPrimitive :: IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsRWPRI(C) : CosetGeom -> BoolElt :: IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsRWPRI(C) : CosetGeom -> BoolElt :: IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsRWP(C) : CosetGeom -> BoolElt :: IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsRWP(C) : CosetGeom -> BoolElt :: IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->IsResiduallyWealyPrimitive(C) <->text1723.htm#18954<->IsResiduallyWealyPrimitive(C) : CosetGeom -&gt; BoolElt
5<->Is2T1 :: IsLocallyTwoTransitive(C) <->text1723.htm#18955<->Is2T1 :: IsLocallyTwoTransitive(C) : CosetGeom -&gt; BoolElt
5<->IsLocallyTwoTransitive(C) <->text1723.htm#18955<->IsLocallyTwoTransitive(C) : CosetGeom -&gt; BoolElt
5<->LocallySArcTransitive(C) <->text1723.htm#18956<->LocallySArcTransitive(C) : CosetGeom -&gt; RngIntElt
3<->primitivityproperties :<->text1723.htm<->primitivityproperties :: Primitivity Properties on  Coset Geometries (INCIDENCE GEOMETRY)
3<->diagram :<->text1724.htm<->diagram :: Diagram of an Incidence Geometry (INCIDENCE GEOMETRY)
5<->Diagram(C) <->text1724.htm#18958<->Diagram(C) : CosetGeom -> GrphUnd, GrphVertSet, GrphEdgeSet
5<->Diagram(D) <->text1724.htm#18958<->Diagram(D) : IncGeom -&gt; GrphUnd, GrphVertSet, GrphEdgeSet
4<->IncidenceGeometry_diagram (Example H148E9)<->text1724.htm#18959<->IncidenceGeometry_diagram (Example H148E9)
4<->Example-diagram :<->text1724.htm#18959<->Example-diagram :: IncidenceGeometry_diagram (Example H148E9)
4<->IncidenceGeometry_diagram (Example H148E10)<->text1724.htm#18960<->IncidenceGeometry_diagram (Example H148E10)
4<->Example-diagram :<->text1724.htm#18960<->Example-diagram :: IncidenceGeometry_diagram (Example H148E10)
4<->IncidenceGeometry_diagram (Example H148E11)<->text1724.htm#18961<->IncidenceGeometry_diagram (Example H148E11)
4<->Example-diagram :<->text1724.htm#18961<->Example-diagram :: IncidenceGeometry_diagram (Example H148E11)
4<->IncidenceGeometry_diagram (Example H148E12)<->text1724.htm#18962<->IncidenceGeometry_diagram (Example H148E12)
4<->Example-diagram :<->text1724.htm#18962<->Example-diagram :: IncidenceGeometry_diagram (Example H148E12)
3<->diagram :<->text1724.htm<->diagram :: Diagram of an Incidence Geometry (INCIDENCE GEOMETRY)
3<->cgroups :<->text1725.htm<->cgroups :: C-Groups (INCIDENCE GEOMETRY)
5<->HasIntersectionProperty(G) <->text1725.htm#18964<->HasIntersectionProperty(G) : GrpPerm -&gt; BoolElt
5<->HasStringProperty(G) <->text1725.htm#18965<->HasStringProperty(G) : GrpPerm -&gt; BoolElt
5<->IsCGroup(G) <->text1725.htm#18966<->IsCGroup(G) : GrpPerm -&gt; BoolElt
5<->IsStringCGroup(G) <->text1725.htm#18967<->IsStringCGroup(G) : GrpPerm -&gt; BoolElt
5<->CosetGeometryFromCGroup(G) <->text1725.htm#18968<->CosetGeometryFromCGroup(G) : GrpPerm -&gt; CosetGeom
5<->CosetGeometryToCGroup(D) <->text1725.htm#18969<->CosetGeometryToCGroup(D) : CosetGeom -&gt; GrpPerm
5<->CoxeterDiagram(G) <->text1725.htm#18970<->CoxeterDiagram(G) : GrpPerm -&gt; GrphUnd
4<->IncidenceGeometry_cosetgeometrytocgroup (Example H148E13)<->text1725.htm#18971<->IncidenceGeometry_cosetgeometrytocgroup (Example H148E13)
4<->Example-cosetgeometrytocgroup :<->text1725.htm#18971<->Example-cosetgeometrytocgroup :: IncidenceGeometry_cosetgeometrytocgroup (Example H148E13)
4<->IncidenceGeometry_cgrouptocosetgeometry (Example H148E14)<->text1725.htm#18972<->IncidenceGeometry_cgrouptocosetgeometry (Example H148E14)
4<->Example-cgrouptocosetgeometry :<->text1725.htm#18972<->Example-cgrouptocosetgeometry :: IncidenceGeometry_cgrouptocosetgeometry (Example H148E14)
3<->cgroups :<->text1725.htm<->cgroups :: C-Groups (INCIDENCE GEOMETRY)
3<->cplusgroups :<->text1726.htm<->cplusgroups :: C^ +-Groups (INCIDENCE GEOMETRY)
5<->IsCPlusGroup :: HasIntersectionPropertyPlus(G) <->text1726.htm#18974<->IsCPlusGroup :: HasIntersectionPropertyPlus(G) : GrpPerm -&gt; BoolElt
5<->HasIntersectionPropertyPlus(G) <->text1726.htm#18974<->HasIntersectionPropertyPlus(G) : GrpPerm -&gt; BoolElt
5<->CosetGeometryFromCPlusGroup(G) <->text1726.htm#18975<->CosetGeometryFromCPlusGroup(G) : GrpPerm -&gt; CosetGeom
5<->BDiagram(G) <->text1726.htm#18976<->BDiagram(G) : GrpPerm -&gt; GrphUnd
4<->IncidenceGeometry_cgrouptocosetgeometry (Example H148E15)<->text1726.htm#18977<->IncidenceGeometry_cgrouptocosetgeometry (Example H148E15)
4<->Example-cgrouptocosetgeometry :<->text1726.htm#18977<->Example-cgrouptocosetgeometry :: IncidenceGeometry_cgrouptocosetgeometry (Example H148E15)
3<->cplusgroups :<->text1726.htm<->cplusgroups :: C^ +-Groups (INCIDENCE GEOMETRY)
3<->incidence-geometry :<->text1711.htm<->incidence-geometry :: INCIDENCE GEOMETRY
3<->polyhedra :<->text1729.htm<->polyhedra :: CONVEX POLYTOPES AND POLYHEDRA
3<->introduction :<->text1730.htm<->introduction :: Introduction and First Examples (CONVEX POLYTOPES AND POLYHEDRA)
4<->Polyhedra_polytope-example (Example H149E1)<->text1730.htm#18982<->Polyhedra_polytope-example (Example H149E1)
4<->Example-polytope-example :<->text1730.htm#18982<->Example-polytope-example :: Polyhedra_polytope-example (Example H149E1)
4<->Polyhedra_ (Example H149E2)<->text1730.htm#18983<->Polyhedra_ (Example H149E2)
4<->Example- :<->text1730.htm#18983<->Example- :: Polyhedra_ (Example H149E2)
3<->introduction :<->text1730.htm<->introduction :: Introduction and First Examples (CONVEX POLYTOPES AND POLYHEDRA)
3<->polytopes-cones-polyhedra :<->text1731.htm<->polytopes-cones-polyhedra :: Polytopes, Cones and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->polytopes :<->text1731.htm#18985<->polytopes :: Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
5<->Polytope(Q) <->text1731.htm#18986<->Polytope(Q) : SeqEnum -&gt; TorPol
5<->PolyhedronWithInequalities(A,c) <->text1731.htm#18987<->PolyhedronWithInequalities(A,c) : [TorLatElt],[RngIntElt] -> TorPol
5<->PolyhedronWithInequalities(A,c) <->text1731.htm#18987<->PolyhedronWithInequalities(A,c) : SeqEnum,[RngIntElt] -&gt; TorPol
5<->RandomPolytope(d,n,k) <->text1731.htm#18988<->RandomPolytope(d,n,k) : RngIntElt,RngIntElt,RngIntElt -> TorPol
5<->RandomPolytope(L,n,k) <->text1731.htm#18988<->RandomPolytope(L,n,k) : TorLat,RngIntElt,RngIntElt -&gt; TorPol
5<->BoundingBox(P) <->text1731.htm#18989<->BoundingBox(P) : TorPol -&gt; TorPol,TorLatElt,TorLatElt
5<->Polar(P) <->text1731.htm#18990<->Polar(P) : TorPol -&gt; TorPol
5<->CrossPolytope(d) <->text1731.htm#18991<->CrossPolytope(d) : RngIntElt -> TorPol
5<->CrossPolytope(L) <->text1731.htm#18991<->CrossPolytope(L) : TorLat -&gt; TorPol
5<->StandardSimplex(d) <->text1731.htm#18992<->StandardSimplex(d) : RngIntElt -> TorPol
5<->StandardSimplex(L) <->text1731.htm#18992<->StandardSimplex(L) : TorLat -&gt; TorPol
5<->CyclicPolytope(d,n) <->text1731.htm#18993<->CyclicPolytope(d,n) : RngIntElt,RngIntElt -> TorPol
5<->CyclicPolytope(L,n) <->text1731.htm#18993<->CyclicPolytope(L,n) : TorLat,RngIntElt -&gt; TorPol
5<->PolytopeOfProjectiveSpace(L) <->text1731.htm#18994<->PolytopeOfProjectiveSpace(L) : TorLat -> TorPol
5<->PolytopeOfWPS :: PolytopeOfProjectiveSpace(d) <->text1731.htm#18994<->PolytopeOfWPS :: PolytopeOfProjectiveSpace(d) : RngIntElt -&gt; TorPol
5<->PolytopeOfProjectiveSpace(d) <->text1731.htm#18994<->PolytopeOfProjectiveSpace(d) : RngIntElt -&gt; TorPol
5<->PolytopeOfWPS(L,W) <->text1731.htm#18995<->PolytopeOfWPS(L,W) : [RngIntElt] -> TorPol
5<->PolytopeOfWPS(W) <->text1731.htm#18995<->PolytopeOfWPS(W) : [RngIntElt] -&gt; TorPol
3<->polytopes :<->text1731.htm#18985<->polytopes :: Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->cones :<->text1731.htm#18996<->cones :: Cones (CONVEX POLYTOPES AND POLYHEDRA)
5<->Cone(A) <->text1731.htm#18997<->Cone(A) : Seq -&gt; TorCon
5<->Cone(v) <->text1731.htm#18998<->Cone(v) : TorLatElt -&gt; TorCon
5<->ConeWithInequalities(B) <->text1731.htm#18999<->ConeWithInequalities(B) : Set -&gt; TorCon
5<->FullCone(n)<->text1731.htm#19000<->FullCone(n): RngIntElt -> TorCon
5<->FullCone(L)<->text1731.htm#19000<->FullCone(L): TorLat -&gt; TorCon
5<->PositiveQuadrant(n) <->text1731.htm#19001<->PositiveQuadrant(n) : RngIntElt -> TorCon
5<->PositiveQuadrant(L) <->text1731.htm#19001<->PositiveQuadrant(L) : TorLat -&gt; TorCon
5<->ZeroCone(n)<->text1731.htm#19002<->ZeroCone(n): RngIntElt -> TorCon
5<->ZeroCone(L)<->text1731.htm#19002<->ZeroCone(L): TorLat -&gt; TorCon
5<->RandomCone(L,n,k) <->text1731.htm#19003<->RandomCone(L,n,k) : TorLat,RngIntElt,RngIntElt -> TorCon
5<->RandomCone(d,n,k) <->text1731.htm#19003<->RandomCone(d,n,k) : RngIntElt,RngIntElt,RngIntElt -&gt; TorCon
5<->RandomPositiveCone(L,n,k) <->text1731.htm#19004<->RandomPositiveCone(L,n,k) : TorLat,RngIntElt,RngIntElt -> TorCon
5<->RandomPositiveCone(d,n,k) <->text1731.htm#19004<->RandomPositiveCone(d,n,k) : RngIntElt,RngIntElt,RngIntElt -&gt; TorCon
5<->Dual(C)<->text1731.htm#19005<->Dual(C): TorCon -&gt; TorCon
5<->NormalisedCone(P) <->text1731.htm#19006<->NormalisedCone(P) : TorPol -&gt; TorCon
5<->ConeInSublattice(C) <->text1731.htm#19007<->ConeInSublattice(C) : TorCon -&gt; TorCon,Map
5<->ConeQuotientByLinearSubspace(C) <->text1731.htm#19008<->ConeQuotientByLinearSubspace(C) : TorCon -&gt; TorCon,Map,Map
5<->SimplicialSubcone(C) <->text1731.htm#19009<->SimplicialSubcone(C) : TorCon -&gt; TorCon
5<->LatticeBasisInCone(C) <->text1731.htm#19010<->LatticeBasisInCone(C) : TorCon -&gt; [TorLatElt]
3<->cones :<->text1731.htm#18996<->cones :: Cones (CONVEX POLYTOPES AND POLYHEDRA)
3<->polyhedra :<->text1731.htm#19011<->polyhedra :: Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
5<->Polyhedron(C,H,h) <->text1731.htm#19012<->Polyhedron(C,H,h) : TorCon,TorLatElt,RngIntElt -> TorPol
5<->Polyhedron(C,H,h) <->text1731.htm#19012<->Polyhedron(C,H,h) : TorCon,TorLatElt,FldRatElt -&gt; TorPol
5<->Polyhedron(C) <->text1731.htm#19013<->Polyhedron(C) : TorCon -&gt; TorPol
5<->HalfspaceToPolyhedron(Q,h) <->text1731.htm#19014<->HalfspaceToPolyhedron(Q,h) : [FldRatElt],FldRatElt -> TorPol
5<->HalfspaceToPolyhedron(v,h) <->text1731.htm#19014<->HalfspaceToPolyhedron(v,h) : TorLatElt,FldRatElt -&gt; TorPol
5<->HyperplaneToPolyhedron(Q,h) <->text1731.htm#19015<->HyperplaneToPolyhedron(Q,h) : [FldRatElt],FldRatElt -> TorPol
5<->HyperplaneToPolyhedron(v,h) <->text1731.htm#19015<->HyperplaneToPolyhedron(v,h) : TorLatElt,FldRatElt -&gt; TorPol
5<->Polyhedron(C,f,v) <->text1731.htm#19016<->Polyhedron(C,f,v) : TorCon,Map,TorLatElt -&gt; TorPol
5<->EmptyPolyhedron(L) <->text1731.htm#19017<->EmptyPolyhedron(L) : TorLat -&gt; TorPol
5<->ConeToPolyhedron(C) <->text1731.htm#19018<->ConeToPolyhedron(C) : TorCon -&gt; TorPol
5<->PolyhedronInSublattice(P) <->text1731.htm#19019<->PolyhedronInSublattice(P) : TorPol -&gt; TorPol,Map,TorLatElt
5<->FixedSubspaceToPolyhedron(L,G) <->text1731.htm#19020<->FixedSubspaceToPolyhedron(L,G) : TorLat,GrpMat -> TorPol
5<->FixedSubspaceToPolyhedron(G) <->text1731.htm#19020<->FixedSubspaceToPolyhedron(G) : GrpMat -&gt; TorPol
4<->Polyhedra_toric-polyhedron-example (Example H149E3)<->text1731.htm#19021<->Polyhedra_toric-polyhedron-example (Example H149E3)
4<->Example-toric-polyhedron-example :<->text1731.htm#19021<->Example-toric-polyhedron-example :: Polyhedra_toric-polyhedron-example (Example H149E3)
3<->polyhedra :<->text1731.htm#19011<->polyhedra :: Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->arithmetic :<->text1731.htm#19022<->arithmetic :: Arithmetic Operations on Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
5<->C eq D <->text1731.htm#19023<->C eq D : TorCon,TorCon -&gt; BoolElt
5<->P eq Q <->text1731.htm#19024<->P eq Q : TorPol,TorPol -&gt; BoolElt
5<->C meet D <->text1731.htm#19025<->C meet D : TorCon,TorCon -&gt; TorCon
5<->P meet Q <->text1731.htm#19026<->P meet Q : TorPol,TorPol -&gt; TorPol
5<->P subset Q <->text1731.htm#19027<->P subset Q : TorPol,TorPol -&gt; BoolElt
5<->P + Q <->text1731.htm#19028<->P + Q : TorPol,TorPol -> TorPol
5<->C + D <->text1731.htm#19028<->C + D : TorCon,TorCon -&gt; TorCon
5<->C + P <->text1731.htm#19029<->C + P : TorCon,TorPol -> TorPol
5<->P + C <->text1731.htm#19029<->P + C : TorPol,TorCon -&gt; TorPol
5<->P * Q <->text1731.htm#19030<->P * Q : TorPol,TorPol -&gt; TorPol
5<->k * P <->text1731.htm#19031<->k * P : FldRatElt,TorPol -&gt; TorPol
5<->- P <->text1731.htm#19032<->- P : TorPol -&gt; TorPol
3<->arithmetic :<->text1731.htm#19022<->arithmetic :: Arithmetic Operations on Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->polytopes-cones-polyhedra :<->text1731.htm<->polytopes-cones-polyhedra :: Polytopes, Cones and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->basic-combinatorics :<->text1732.htm<->basic-combinatorics :: Basic Combinatorics of Polytopes and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->vertices-inequalities :<->text1732.htm#19034<->vertices-inequalities :: Vertices and Inequalities (CONVEX POLYTOPES AND POLYHEDRA)
5<->Vertices(P) <->text1732.htm#19035<->Vertices(P) : TorPol -&gt; SeqEnum[TorLatElt]
5<->NumberOfVertices(P) <->text1732.htm#19036<->NumberOfVertices(P) : TorPol -&gt; RngIntElt
5<->Rays(C) <->text1732.htm#19037<->Rays(C) : TorCon -&gt; SeqEnum
5<->Ray(C,i) <->text1732.htm#19038<->Ray(C,i) : TorCon,RngIntElt -&gt; TorLatElt
5<->LinearSpanEquations(Q) <->text1732.htm#19039<->LinearSpanEquations(Q) : [TorLatElt] -> SeqEnum
5<->LinearSpanEquations(C) <->text1732.htm#19039<->LinearSpanEquations(C) : TorCon -&gt; SeqEnum
5<->LinearSpanGenerators(Q) <->text1732.htm#19040<->LinearSpanGenerators(Q) : [TorLatElt] -> SeqEnum
5<->LinearSpanGenerators(C) <->text1732.htm#19040<->LinearSpanGenerators(C) : TorCon -&gt; SeqEnum
5<->LinearSubspaceGenerators(C) <->text1732.htm#19041<->LinearSubspaceGenerators(C) : TorCon -&gt; SeqEnum
5<->Inequalities(P) <->text1732.htm#19042<->Inequalities(P) : TorPol -> SeqEnum,RngIntElt
5<->MinimalInequalities :: Inequalities(C) <->text1732.htm#19042<->MinimalInequalities :: Inequalities(C) : TorCon -&gt; SeqEnum
5<->Inequalities(C) <->text1732.htm#19042<->Inequalities(C) : TorCon -&gt; SeqEnum
5<->MatrixOfInequalities(C) <->text1732.htm#19043<->MatrixOfInequalities(C) : TorCon -> ModMatRngElt
5<->MatrixOfInequalities(R,C) <->text1732.htm#19043<->MatrixOfInequalities(R,C) : Rng,TorCon -&gt; ModMatRngElt
4<->Polyhedra_toric-polytope-inequalities-example (Example H149E4)<->text1732.htm#19044<->Polyhedra_toric-polytope-inequalities-example (Example H149E4)
4<->Example-toric-polytope-inequalities-example :<->text1732.htm#19044<->Example-toric-polytope-inequalities-example :: Polyhedra_toric-polytope-inequalities-example (Example H149E4)
5<->NormalCone(P,F) <->text1732.htm#19045<->NormalCone(P,F) : TorPol, TorPol -&gt; TorCon
5<->NormalEdgeCones(P) <->text1732.htm#19046<->NormalEdgeCones(P) : TorPol -&gt; [TorCon]
5<->OuterNormal :: InnerNormal(C) <->text1732.htm#19047<->OuterNormal :: InnerNormal(C) : TorCon -&gt; TorLatElt
5<->InnerNormal(C) <->text1732.htm#19047<->InnerNormal(C) : TorCon -&gt; TorLatElt
3<->vertices-inequalities :<->text1732.htm#19034<->vertices-inequalities :: Vertices and Inequalities (CONVEX POLYTOPES AND POLYHEDRA)
3<->facets-faces :<->text1732.htm#19048<->facets-faces :: Facets and Faces (CONVEX POLYTOPES AND POLYHEDRA)
5<->fVector(P) <->text1732.htm#19049<->fVector(P) : TorPol -> SeqEnum[RngIntElt]
5<->[Future release] fVector(C) <->text1732.htm#19049<->[Future release] fVector(C) : TorCon -&gt; SeqEnum[RngIntElt]
5<->\vapour hVector(P) <->text1732.htm#19050<->\vapour hVector(P) : TorPol -> SeqEnum[RngIntElt]
5<->[Future release] hVector(C) <->text1732.htm#19050<->[Future release] hVector(C) : TorCon -&gt; SeqEnum[RngIntElt]
5<->Facets(P) <->text1732.htm#19051<->Facets(P) : TorPol -> SeqEnum
5<->Facets(C) <->text1732.htm#19051<->Facets(C) : TorCon -&gt; SeqEnum
5<->FacetIndices(P) <->text1732.htm#19052<->FacetIndices(P) : TorPol -&gt; SeqEnum
5<->NumberOfFacets(P) <->text1732.htm#19053<->NumberOfFacets(P) : TorPol -&gt; RngIntElt
5<->Faces(P) <->text1732.htm#19054<->Faces(P) : TorPol -> SeqEnum
5<->Faces(C,i) <->text1732.htm#19054<->Faces(C,i) : TorCon,RngIntElt -> SeqEnum
5<->Faces(P,i) <->text1732.htm#19054<->Faces(P,i) : TorPol,RngIntElt -> SeqEnum
5<->Faces(C) <->text1732.htm#19054<->Faces(C) : TorCon -&gt; SeqEnum
5<->FaceIndices(P,i) <->text1732.htm#19055<->FaceIndices(P,i) : TorPol,RngIntElt -&gt; SeqEnum
5<->NumberOfFaces(P,i) <->text1732.htm#19056<->NumberOfFaces(P,i) : TorPol,RngIntElt -&gt; RngIntElt
5<->Edges(P) <->text1732.htm#19057<->Edges(P) : TorPol -&gt; SeqEnum
5<->EdgeIndices(P) <->text1732.htm#19058<->EdgeIndices(P) : TorPol -&gt; SeqEnum
5<->NumberOfEdges(P) <->text1732.htm#19059<->NumberOfEdges(P) : TorPol -&gt; RngIntElt
5<->Graph(P) <->text1732.htm#19060<->Graph(P) : TorPol -&gt; GrphUnd
5<->FaceSupportedBy(C,H) <->text1732.htm#19061<->FaceSupportedBy(C,H) : TorCon,TorLatElt -&gt; TorCon
5<->IsSupportingHyperplane(v,h,P) <->text1732.htm#19062<->IsSupportingHyperplane(v,h,P) : TorLatElt,FldRatElt,TorPol -&gt; BoolElt,RngIntElt
5<->SupportingCone(P,v) <->text1732.htm#19063<->SupportingCone(P,v) : TorPol,TorLatElt -&gt; TorCon
5<->IsFace(P,F) <->text1732.htm#19064<->IsFace(P,F) : TorPol,TorPol -> BoolElt
5<->IsFace(C,F) <->text1732.htm#19064<->IsFace(C,F) : TorCon,TorCon -&gt; BoolElt
3<->facets-faces :<->text1732.htm#19048<->facets-faces :: Facets and Faces (CONVEX POLYTOPES AND POLYHEDRA)
3<->basic-combinatorics :<->text1732.htm<->basic-combinatorics :: Basic Combinatorics of Polytopes and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->combinatorics :<->text1733.htm<->combinatorics :: The Combinatorics of  Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->points :<->text1733.htm#19066<->points :: Points in Polytopes and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
5<->v in P <->text1733.htm#19067<->v in P : TorLatElt,TorPol -> BoolElt
5<->v in C <->text1733.htm#19067<->v in C : TorLatElt,TorCon -&gt; BoolElt
5<->IsInInterior(v,P) <->text1733.htm#19068<->IsInInterior(v,P) : TorLatElt,TorPol -> BoolElt
5<->IsInInterior(v,C) <->text1733.htm#19068<->IsInInterior(v,C) : TorLatElt,TorCon -&gt; BoolElt
5<->IsOnBoundary(v,P) <->text1733.htm#19069<->IsOnBoundary(v,P) : TorLatElt,TorPol -> BoolElt
5<->IsOnBoundary(v,C) <->text1733.htm#19069<->IsOnBoundary(v,C) : TorLatElt,TorCon -&gt; BoolElt
5<->HasIntegralPoint(P) <->text1733.htm#19070<->HasIntegralPoint(P) : TorPol -&gt; BoolElt
5<->InteriorPoints :: Points(P) <->text1733.htm#19071<->InteriorPoints :: Points(P) : TorPol -&gt; SeqEnum[TorLatElt]
5<->BoundaryPoints :: Points(P) <->text1733.htm#19071<->BoundaryPoints :: Points(P) : TorPol -&gt; SeqEnum[TorLatElt]
5<->Points(P) <->text1733.htm#19071<->Points(P) : TorPol -&gt; SeqEnum[TorLatElt]
5<->NumberOfInteriorPoints :: NumberOfPoints(P) <->text1733.htm#19072<->NumberOfInteriorPoints :: NumberOfPoints(P) : TorPol -&gt; RngIntElt
5<->NumberOfBoundaryPoints :: NumberOfPoints(P) <->text1733.htm#19072<->NumberOfBoundaryPoints :: NumberOfPoints(P) : TorPol -&gt; RngIntElt
5<->NumberOfPoints(P) <->text1733.htm#19072<->NumberOfPoints(P) : TorPol -&gt; RngIntElt
5<->VolumeOfBoundary :: Volume(P) <->text1733.htm#19073<->VolumeOfBoundary :: Volume(P) : TorPol -&gt; FldRatElt
5<->Volume(P) <->text1733.htm#19073<->Volume(P) : TorPol -&gt; FldRatElt
3<->points :<->text1733.htm#19066<->points :: Points in Polytopes and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->ehrhart :<->text1733.htm#19074<->ehrhart :: Ehrhart Theory of Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
5<->EhrhartSeries(P) <->text1733.htm#19075<->EhrhartSeries(P) : TorPol -&gt; FldFunRatUElt
5<->EhrhartDeltaVector(P) <->text1733.htm#19076<->EhrhartDeltaVector(P) : TorPol -&gt; SeqEnum
5<->EhrhartPolynomial(P) <->text1733.htm#19077<->EhrhartPolynomial(P) : TorPol -&gt; [RngUPolElt]
5<->EhrhartCoefficients(P,l) <->text1733.htm#19078<->EhrhartCoefficients(P,l) : TorPol,RngIntElt -&gt; [RngIntElt]
5<->EhrhartCoefficient(P,k) <->text1733.htm#19079<->EhrhartCoefficient(P,k) : TorPol,RngIntElt -&gt; RngIntElt
3<->ehrhart :<->text1733.htm#19074<->ehrhart :: Ehrhart Theory of Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->isomorphism :<->text1733.htm#19080<->isomorphism :: Isomorphism Testing and Normal Forms for Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
5<->IsIsomorphic(P,Q) <->text1733.htm#19081<->IsIsomorphic(P,Q) : TorPol,TorPol -&gt; BoolElt, Map
4<->Polyhedra_polytope-isomorphism-example (Example H149E5)<->text1733.htm#19082<->Polyhedra_polytope-isomorphism-example (Example H149E5)
4<->Example-polytope-isomorphism-example :<->text1733.htm#19082<->Example-polytope-isomorphism-example :: Polyhedra_polytope-isomorphism-example (Example H149E5)
5<->IsEquivalent(P,Q) <->text1733.htm#19083<->IsEquivalent(P,Q) : TorPol,TorPol -&gt; BoolElt, Map, TorLatElt
5<->PALPNormalForm :: NormalForm(P) <->text1733.htm#19084<->PALPNormalForm :: NormalForm(P) : TorPol -&gt; SeqEnum, GrpPermElt
5<->NormalForm(P) <->text1733.htm#19084<->NormalForm(P) : TorPol -&gt; SeqEnum, GrpPermElt
4<->Polyhedra_polytope-normal-form-example (Example H149E6)<->text1733.htm#19085<->Polyhedra_polytope-normal-form-example (Example H149E6)
4<->Example-polytope-normal-form-example :<->text1733.htm#19085<->Example-polytope-normal-form-example :: Polyhedra_polytope-normal-form-example (Example H149E6)
5<->AffineNormalForm(P) <->text1733.htm#19086<->AffineNormalForm(P) : TorPol -&gt; SeqEnum, GrpPermElt
4<->Polyhedra_polytope-affine-normal-form-example (Example H149E7)<->text1733.htm#19087<->Polyhedra_polytope-affine-normal-form-example (Example H149E7)
4<->Example-polytope-affine-normal-form-example :<->text1733.htm#19087<->Example-polytope-affine-normal-form-example :: Polyhedra_polytope-affine-normal-form-example (Example H149E7)
5<->MaximalVertexFacetHeightMatrix(P) <->text1733.htm#19088<->MaximalVertexFacetHeightMatrix(P) : TorPol -&gt; AlgMatElt
3<->isomorphism :<->text1733.htm#19080<->isomorphism :: Isomorphism Testing and Normal Forms for Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->automorphisms :<->text1733.htm#19089<->automorphisms :: Automorphisms of a Polytope (CONVEX POLYTOPES AND POLYHEDRA)
5<->AutomorphismGroup(P) <->text1733.htm#19090<->AutomorphismGroup(P) : TorPol -&gt; GrpMat
4<->Polyhedra_polytope-automorphism-example (Example H149E8)<->text1733.htm#19091<->Polyhedra_polytope-automorphism-example (Example H149E8)
4<->Example-polytope-automorphism-example :<->text1733.htm#19091<->Example-polytope-automorphism-example :: Polyhedra_polytope-automorphism-example (Example H149E8)
3<->automorphisms :<->text1733.htm#19089<->automorphisms :: Automorphisms of a Polytope (CONVEX POLYTOPES AND POLYHEDRA)
3<->operations :<->text1733.htm#19092<->operations :: Operations on Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
5<->Triangulation(P) <->text1733.htm#19093<->Triangulation(P) : TorPol -&gt; SetEnum
5<->TriangulationOfBoundary(P) <->text1733.htm#19094<->TriangulationOfBoundary(P) : TorPol -&gt; SetEnum
3<->operations :<->text1733.htm#19092<->operations :: Operations on Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->combinatorics :<->text1733.htm<->combinatorics :: The Combinatorics of  Polytopes (CONVEX POLYTOPES AND POLYHEDRA)
3<->cones-polyhedra :<->text1734.htm<->cones-polyhedra :: Cones and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->generators :<->text1734.htm#19096<->generators :: Generators of Cones (CONVEX POLYTOPES AND POLYHEDRA)
5<->BoxElements(C) <->text1734.htm#19097<->BoxElements(C) : TorCon -&gt; SetEnum
4<->Polyhedra_toric-cone-boxelements-example (Example H149E9)<->text1734.htm#19098<->Polyhedra_toric-cone-boxelements-example (Example H149E9)
4<->Example-toric-cone-boxelements-example :<->text1734.htm#19098<->Example-toric-cone-boxelements-example :: Polyhedra_toric-cone-boxelements-example (Example H149E9)
5<->ZGenerators :: HilbertBasis(C) <->text1734.htm#19099<->ZGenerators :: HilbertBasis(C) : TorCon -&gt; SeqEnum
5<->HilbertBasis(C) <->text1734.htm#19099<->HilbertBasis(C) : TorCon -&gt; SeqEnum
5<->MinimalRGenerators :: RGenerators(C) <->text1734.htm#19100<->MinimalRGenerators :: RGenerators(C) : TorCon -&gt; SeqEnum
5<->RGenerators(C) <->text1734.htm#19100<->RGenerators(C) : TorCon -&gt; SeqEnum
5<->Points(C,H,h) <->text1734.htm#19101<->Points(C,H,h) : TorCon,TorLatElt,FldRatElt -&gt; SetEnum
4<->Polyhedra_toric-cone-sublattice-example (Example H149E10)<->text1734.htm#19102<->Polyhedra_toric-cone-sublattice-example (Example H149E10)
4<->Example-toric-cone-sublattice-example :<->text1734.htm#19102<->Example-toric-cone-sublattice-example :: Polyhedra_toric-cone-sublattice-example (Example H149E10)
5<->QuotientGenerators(C) <->text1734.htm#19103<->QuotientGenerators(C) : TorCon -&gt; SetEnum
4<->Polyhedra_toric-cone-quotient-generators-example (Example H149E11)<->text1734.htm#19104<->Polyhedra_toric-cone-quotient-generators-example (Example H149E11)
4<->Example-toric-cone-quotient-generators-example :<->text1734.htm#19104<->Example-toric-cone-quotient-generators-example :: Polyhedra_toric-cone-quotient-generators-example (Example H149E11)
3<->generators :<->text1734.htm#19096<->generators :: Generators of Cones (CONVEX POLYTOPES AND POLYHEDRA)
3<->properties :<->text1734.htm#19105<->properties :: Properties of Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
5<->CompactPart(P) <->text1734.htm#19106<->CompactPart(P) : TorPol -&gt; TorPol
5<->IntegralPart(P) <->text1734.htm#19107<->IntegralPart(P) : TorPol -&gt; TorPol
5<->InfinitePart(P) <->text1734.htm#19108<->InfinitePart(P) : TorPol -&gt; TorCon
5<->IsEmpty(P) <->text1734.htm#19109<->IsEmpty(P) : TorPol -&gt; BoolElt
4<->Polyhedra_toric-polar-cone-example (Example H149E12)<->text1734.htm#19110<->Polyhedra_toric-polar-cone-example (Example H149E12)
4<->Example-toric-polar-cone-example :<->text1734.htm#19110<->Example-toric-polar-cone-example :: Polyhedra_toric-polar-cone-example (Example H149E12)
4<->Polyhedra_toric-polyhedron-example (Example H149E13)<->text1734.htm#19111<->Polyhedra_toric-polyhedron-example (Example H149E13)
4<->Example-toric-polyhedron-example :<->text1734.htm#19111<->Example-toric-polyhedron-example :: Polyhedra_toric-polyhedron-example (Example H149E13)
5<->IsMaximumDimensional(P) <->text1734.htm#19112<->IsMaximumDimensional(P) : TorPol -> BoolElt
5<->IsMaximumDimensional(C) <->text1734.htm#19112<->IsMaximumDimensional(C) : TorCon -&gt; BoolElt
5<->IsStrictlyConvex(C) <->text1734.htm#19113<->IsStrictlyConvex(C) : TorCon -&gt; BoolElt
5<->IsLinearSpace(P) <->text1734.htm#19114<->IsLinearSpace(P) : TorPol -> BoolElt
5<->IsLinearSpace(C) <->text1734.htm#19114<->IsLinearSpace(C) : TorCon -&gt; BoolElt
5<->IsSimplicial(P) <->text1734.htm#19115<->IsSimplicial(P) : TorPol -> BoolElt
5<->IsSimplicial(C) <->text1734.htm#19115<->IsSimplicial(C) : TorCon -&gt; BoolElt
5<->IsSimplex(P) <->text1734.htm#19116<->IsSimplex(P) : TorPol -&gt; BoolElt
5<->IsSimple(P) <->text1734.htm#19117<->IsSimple(P) : TorPol -&gt; BoolElt
5<->IsAffineLinear(P) <->text1734.htm#19118<->IsAffineLinear(P) : TorPol -&gt; BoolElt
5<->IsZero(C) <->text1734.htm#19119<->IsZero(C) : TorCon -&gt; BoolElt
5<->ContainsZero(P) <->text1734.htm#19120<->ContainsZero(P) : TorPol -&gt; BoolElt
5<->IsPointed(P) <->text1734.htm#19121<->IsPointed(P) : TorPol -&gt; BoolElt
5<->IsFlag(P) <->text1734.htm#19122<->IsFlag(P) : TorPol -&gt; BoolElt
5<->IsPerfectlyCentered(P) <->text1734.htm#19123<->IsPerfectlyCentered(P) : TorPol -&gt; BoolElt
5<->IsIntegrallyClosed(P) <->text1734.htm#19124<->IsIntegrallyClosed(P) : TorPol -&gt; BoolElt
3<->properties :<->text1734.htm#19105<->properties :: Properties of Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->attributes :<->text1734.htm#19125<->attributes :: Attributes of Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
5<->IsPolytope(P) <->text1734.htm#19126<->IsPolytope(P) : TorPol -&gt; BoolElt
5<->Dimension(P) <->text1734.htm#19127<->Dimension(P) : TorPol -> RngIntElt
5<->Dimension(C) <->text1734.htm#19127<->Dimension(C) : TorCon -&gt; RngIntElt
5<->Codegree :: Degree(P) <->text1734.htm#19128<->Codegree :: Degree(P) : TorPol -&gt; RngIntElt
5<->Degree(P) <->text1734.htm#19128<->Degree(P) : TorPol -&gt; RngIntElt
5<->Index(C) <->text1734.htm#19129<->Index(C) : TorCon -&gt; RngIntElt
5<->Width(P,u) <->text1734.htm#19130<->Width(P,u) : TorPol,TorLatElt -> FldRatElt
5<->Width(P) <->text1734.htm#19130<->Width(P) : TorPol -&gt; FldRatElt, SetEnum
4<->Polyhedra_toric-width-example (Example H149E14)<->text1734.htm#19131<->Polyhedra_toric-width-example (Example H149E14)
4<->Example-toric-width-example :<->text1734.htm#19131<->Example-toric-width-example :: Polyhedra_toric-width-example (Example H149E14)
5<->IsPyramid(P) <->text1734.htm#19132<->IsPyramid(P) : TorPol -&gt; BoolElt, TorLatElt, TorPol, Map, TorLatElt
5<->Pyramid(P) <->text1734.htm#19133<->Pyramid(P) : TorPol -&gt; TorPol, Map, Map, Map, Map
4<->Polyhedra_toric-pyramid-example (Example H149E15)<->text1734.htm#19134<->Polyhedra_toric-pyramid-example (Example H149E15)
4<->Example-toric-pyramid-example :<->text1734.htm#19134<->Example-toric-pyramid-example :: Polyhedra_toric-pyramid-example (Example H149E15)
5<->VertexEdgeIncidenceMatrix(P) <->text1734.htm#19135<->VertexEdgeIncidenceMatrix(P) : TorPol -&gt; ModMatRngElt
5<->VertexFacetIncidenceMatrix(P) <->text1734.htm#19136<->VertexFacetIncidenceMatrix(P) : TorPol -&gt; ModMatRngElt
5<->VertexFacetHeightMatrix(P) <->text1734.htm#19137<->VertexFacetHeightMatrix(P) : TorPol -&gt; AlgMatElt
5<->EdgeFacetIncidenceMatrix(P) <->text1734.htm#19138<->EdgeFacetIncidenceMatrix(P) : TorPol -&gt; ModMatRngElt
3<->attributes :<->text1734.htm#19125<->attributes :: Attributes of Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->combinatorics :<->text1734.htm#19139<->combinatorics :: Combinatorics of Polyhedral Complexes (CONVEX POLYTOPES AND POLYHEDRA)
5<->Ambient(P) <->text1734.htm#19140<->Ambient(P) : TorPol -> TorLat
5<->Ambient(C) <->text1734.htm#19140<->Ambient(C) : TorCon -&gt; TorLat
5<->ChangeAmbient(P,L) <->text1734.htm#19141<->ChangeAmbient(P,L) : TorPol,TorLat -> TorPol
5<->ChangeAmbient(C,L) <->text1734.htm#19141<->ChangeAmbient(C,L) : TorCon,TorLat -&gt; TorCon
3<->combinatorics :<->text1734.htm#19139<->combinatorics :: Combinatorics of Polyhedral Complexes (CONVEX POLYTOPES AND POLYHEDRA)
3<->cones-polyhedra :<->text1734.htm<->cones-polyhedra :: Cones and Polyhedra (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattices :<->text1735.htm<->toric-lattices :: Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattice :<->text1735.htm#19143<->toric-lattice :: Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
5<->ToricLattice(n) <->text1735.htm#19144<->ToricLattice(n) : RngIntElt -&gt; TorLat
5<->ScalarLattice() <->text1735.htm#19145<->ScalarLattice() : -&gt; TorLat
4<->Polyhedra_empty-toric-lattice-sequence (Example H149E16)<->text1735.htm#19146<->Polyhedra_empty-toric-lattice-sequence (Example H149E16)
4<->Example-empty-toric-lattice-sequence :<->text1735.htm#19146<->Example-empty-toric-lattice-sequence :: Polyhedra_empty-toric-lattice-sequence (Example H149E16)
5<->Dual(L) <->text1735.htm#19147<->Dual(L) : TorLat -&gt; TorLat
4<->Polyhedra_dual-toric-lattice (Example H149E17)<->text1735.htm#19148<->Polyhedra_dual-toric-lattice (Example H149E17)
4<->Example-dual-toric-lattice :<->text1735.htm#19148<->Example-dual-toric-lattice :: Polyhedra_dual-toric-lattice (Example H149E17)
5<->DirectSum :: L + M <->text1735.htm#19149<->DirectSum :: L + M : TorLat,TorLat -&gt; TorLat,TorLatMap,TorLatMap,TorLatMap,TorLatMap
5<->DirectSum(Q) : SeqEnum -> TorLat,TorLatMap,TorLatMap,TorLatMap,TorLatMap :: L + M <->text1735.htm#19149<->DirectSum(Q) : SeqEnum -> TorLat,TorLatMap,TorLatMap,TorLatMap,TorLatMap :: L + M : TorLat,TorLat -&gt; TorLat,TorLatMap,TorLatMap,TorLatMap,TorLatMap
5<->L + M <->text1735.htm#19149<->L + M : TorLat,TorLat -&gt; TorLat,TorLatMap,TorLatMap,TorLatMap,TorLatMap
5<->L ^ n <->text1735.htm#19150<->L ^ n : TorLat,RngIntElt -&gt; TorLat,SeqEnum,SeqEnum
5<->Dimension(L) <->text1735.htm#19151<->Dimension(L) : TorLat -&gt; RngIntElt
3<->toric-lattice :<->text1735.htm#19143<->toric-lattice :: Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattice-points :<->text1735.htm#19152<->toric-lattice-points :: Points of Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
5<->LatticeVector :: L ! [a,b,...] <->text1735.htm#19153<->LatticeVector :: L ! [a,b,...] : TorLat,[RngIntElt] -&gt; TorLatElt
5<->LatticeVector(Q) : [RngIntElt] -> TorLatElt :: L ! [a,b,...] <->text1735.htm#19153<->LatticeVector(Q) : [RngIntElt] -> TorLatElt :: L ! [a,b,...] : TorLat,[RngIntElt] -&gt; TorLatElt
5<->L ! [a,b,...] <->text1735.htm#19153<->L ! [a,b,...] : TorLat,[RngIntElt] -&gt; TorLatElt
5<->Basis :: L . i <->text1735.htm#19154<->Basis :: L . i : TorLat,RngIntElt -&gt; TorLatElt
5<->L . i <->text1735.htm#19154<->L . i : TorLat,RngIntElt -&gt; TorLatElt
5<->Basis(L) <->text1735.htm#19155<->Basis(L) : TorLat -&gt; TorLatElt
5<->Form(L,Q) <->text1735.htm#19156<->Form(L,Q) : TorLat,[RngIntElt] -&gt; TorLatElt
5<->Zero(L) <->text1735.htm#19157<->Zero(L) : TorLat -&gt; TorLatElt
5<->P + Q <->text1735.htm#19158<->P + Q : TorLatElt,TorLatElt -&gt; TorLatElt
5<->* :: P + Q <->text1735.htm#19158<->* :: P + Q : TorLatElt,TorLatElt -&gt; TorLatElt
5<->/ :: P + Q <->text1735.htm#19158<->/ :: P + Q : TorLatElt,TorLatElt -&gt; TorLatElt
5<->P + Q <->text1735.htm#19158<->P + Q : TorLatElt,TorLatElt -&gt; TorLatElt
5<->P eq Q <->text1735.htm#19159<->P eq Q : TorLatElt,TorLatElt -&gt; BoolElt
5<->AreProportional(P,Q) <->text1735.htm#19160<->AreProportional(P,Q) : TorLatElt,TorLatElt -&gt; BoolElt, FldRatElt
5<->P / Q <->text1735.htm#19161<->P / Q : TorLatElt,TorLatElt -&gt; FldRatElt
4<->Polyhedra_toric-example-pt (Example H149E18)<->text1735.htm#19162<->Polyhedra_toric-example-pt (Example H149E18)
4<->Example-toric-example-pt :<->text1735.htm#19162<->Example-toric-example-pt :: Polyhedra_toric-example-pt (Example H149E18)
5<->v in L <->text1735.htm#19163<->v in L : TorLatElt,TorLat -&gt; BoolElt
5<->Matrix(S) <->text1735.htm#19164<->Matrix(S) : [TorLatElt] -> ModMatRngElt
5<->Matrix(R,S) <->text1735.htm#19164<->Matrix(R,S) : Rng, [TorLatElt] -&gt; ModMatRngElt
5<->Vector(v) <->text1735.htm#19165<->Vector(v) : TorLatElt -&gt; ModTupFldElt
5<->IsZero(v) <->text1735.htm#19166<->IsZero(v) : TorLatElt -&gt; BoolElt
5<->IsIntegral(v) <->text1735.htm#19167<->IsIntegral(v) : TorLatElt -&gt; BoolElt
5<->IsPrimitive(v) <->text1735.htm#19168<->IsPrimitive(v) : TorLatElt -&gt; BoolElt
5<->PrimitiveLatticeVector(v) <->text1735.htm#19169<->PrimitiveLatticeVector(v) : TorLatElt -&gt; TorLatElt
4<->Polyhedra_toric-primitive-pt (Example H149E19)<->text1735.htm#19170<->Polyhedra_toric-primitive-pt (Example H149E19)
4<->Example-toric-primitive-pt :<->text1735.htm#19170<->Example-toric-primitive-pt :: Polyhedra_toric-primitive-pt (Example H149E19)
3<->toric-lattice-points :<->text1735.htm#19152<->toric-lattice-points :: Points of Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattice-ops :<->text1735.htm#19171<->toric-lattice-ops :: Operations on Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
5<->L eq K <->text1735.htm#19172<->L eq K : TorLat,TorLat -&gt; BoolElt
5<->Sublattice(Q) <->text1735.htm#19173<->Sublattice(Q) : [TorLatElt] -&gt; TorLat,TorLatMap
5<->ToricLattice(Q) <->text1735.htm#19174<->ToricLattice(Q) : [[RngIntElt]] -&gt; TorLat,TorLatMap
5<->Quotient(Q) <->text1735.htm#19175<->Quotient(Q) : [TorLatElt] -> TorLat,TorLatMap
5<->Quotient(v) <->text1735.htm#19175<->Quotient(v) : TorLatElt -> TorLat,TorLatMap
5<->Quotient(C) <->text1735.htm#19175<->Quotient(C) : TorCon -&gt; TorLat,TorLatMap
5<->AddVectorToLattice(Q) <->text1735.htm#19176<->AddVectorToLattice(Q) : [TorLatElt] -> TorLat,TorLatMap
5<->AddVectorToLattice(v) <->text1735.htm#19176<->AddVectorToLattice(v) : TorLatElt -&gt; TorLat,TorLatMap
5<->AreGenerators(S) <->text1735.htm#19177<->AreGenerators(S) : SetEnum -&gt; BoolElt
5<->IsSublattice(L) <->text1735.htm#19178<->IsSublattice(L) : TorLat -&gt; BoolElt
5<->IsSuperlattice(L) <->text1735.htm#19179<->IsSuperlattice(L) : TorLat -&gt; BoolElt
5<->IsDirectSum(L) <->text1735.htm#19180<->IsDirectSum(L) : TorLat -&gt; BoolElt
5<->IsQuotient(L) <->text1735.htm#19181<->IsQuotient(L) : TorLat -&gt; BoolElt
5<->Sublattice(L) <->text1735.htm#19182<->Sublattice(L) : TorLat -&gt; TorLat,TorLatMap
5<->Superlattice(L) <->text1735.htm#19183<->Superlattice(L) : TorLat -&gt; TorLat,TorLatMap
5<->Summands(L) <->text1735.htm#19184<->Summands(L) : TorLat -&gt; SeqEnum,SeqEnum,SeqEnum
4<->Polyhedra_toric-example-pt (Example H149E20)<->text1735.htm#19185<->Polyhedra_toric-example-pt (Example H149E20)
4<->Example-toric-example-pt :<->text1735.htm#19185<->Example-toric-example-pt :: Polyhedra_toric-example-pt (Example H149E20)
3<->toric-lattice-ops :<->text1735.htm#19171<->toric-lattice-ops :: Operations on Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattice-maps :<->text1735.htm#19186<->toric-lattice-maps :: Maps of Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
5<->ZeroMap(L,K) <->text1735.htm#19187<->ZeroMap(L,K) : TorLat,TorLat -&gt; TorLatMap
5<->IdentityMap(L) <->text1735.htm#19188<->IdentityMap(L) : TorLat -&gt; TorLatMap
5<->LatticeMap :: hom< L -> K | M > <->text1735.htm#19189<->LatticeMap :: hom&lt; L -&gt; K | M &gt; : TorLat,TorLat,Mtrx -&gt; TorLatMap
5<->hom< L -> K | M > <->text1735.htm#19189<->hom&lt; L -&gt; K | M &gt; : TorLat,TorLat,Mtrx -&gt; TorLatMap
5<->LatticeMap(L,Q) <->text1735.htm#19190<->LatticeMap(L,Q) : TorLat,[TorLatElt] -&gt; TorLatMap
5<->DefiningMatrix(f) <->text1735.htm#19191<->DefiningMatrix(f) : TorLatMap -&gt; ModMatRngElt
5<->Image(f,P) <->text1735.htm#19192<->Image(f,P) : TorLatMap,TorPol -> TorPol
5<->Image(f,v) <->text1735.htm#19192<->Image(f,v) : TorLatMap,TorLatElt -> TorLatElt
5<->Image(f,C) <->text1735.htm#19192<->Image(f,C) : TorLatMap,TorCon -&gt; TorCon
5<->Preimage(f,P) <->text1735.htm#19193<->Preimage(f,P) : TorLatMap,TorPol -> TorPol
5<->Preimage(f,v) <->text1735.htm#19193<->Preimage(f,v) : TorLatMap,TorLatElt -> TorLatElt
5<->Preimage(f,C) <->text1735.htm#19193<->Preimage(f,C) : TorLatMap,TorCon -&gt; TorCon
5<->KernelEmbedding(v) <->text1735.htm#19194<->KernelEmbedding(v) : TorLatElt -> Map
5<->KernelEmbedding(f) <->text1735.htm#19194<->KernelEmbedding(f) : TorLatMap -&gt; Map
5<->KernelBasis(v) <->text1735.htm#19195<->KernelBasis(v) : TorLatElt -> SeqEnum
5<->KernelBasis(f) <->text1735.htm#19195<->KernelBasis(f) : TorLatMap -&gt; SeqEnum
5<->ImageBasis(f) <->text1735.htm#19196<->ImageBasis(f) : TorLatMap -&gt; SeqEnum
5<->IsCokernelTorsionFree(f) <->text1735.htm#19197<->IsCokernelTorsionFree(f) : TorLatMap -&gt; BoolElt
5<->ChangeBasis(v) <->text1735.htm#19198<->ChangeBasis(v) : TorLatElt -&gt; Map
4<->Polyhedra_toric-change-basis-example (Example H149E21)<->text1735.htm#19199<->Polyhedra_toric-change-basis-example (Example H149E21)
4<->Example-toric-change-basis-example :<->text1735.htm#19199<->Example-toric-change-basis-example :: Polyhedra_toric-change-basis-example (Example H149E21)
3<->toric-lattice-maps :<->text1735.htm#19186<->toric-lattice-maps :: Maps of Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->toric-lattices :<->text1735.htm<->toric-lattices :: Toric Lattices (CONVEX POLYTOPES AND POLYHEDRA)
3<->polyhedra :<->text1729.htm<->polyhedra :: CONVEX POLYTOPES AND POLYHEDRA
3<->enum-comb :<->text1737.htm<->enum-comb :: ENUMERATIVE COMBINATORICS
3<->introduction :<->text1738.htm<->introduction :: Introduction (ENUMERATIVE COMBINATORICS)
3<->combinatorics :<->text1739.htm<->combinatorics :: Combinatorial Functions (ENUMERATIVE COMBINATORICS)
5<->Factorial(n) <->text1739.htm#19204<->Factorial(n) : RngIntElt -&gt; RngIntElt
5<->NumberOfPermutations(n, k) <->text1739.htm#19205<->NumberOfPermutations(n, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Binomial(n, r) <->text1739.htm#19206<->Binomial(n, r) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Multinomial(n, [r1, ... rn]) <->text1739.htm#19207<->Multinomial(n, [r<sub>1</sub>, ... r<sub>n</sub>]) : RngIntElt, [RngIntElt] -&gt; RngIntElt
5<->Fibonacci(n) <->text1739.htm#19208<->Fibonacci(n) : RngIntElt -&gt; RngIntElt
5<->Catalan(n) <->text1739.htm#19209<->Catalan(n) : RngIntElt -&gt; RngIntElt
5<->Lucas(n) <->text1739.htm#19210<->Lucas(n) : RngIntElt -&gt; RngIntElt
5<->GeneralizedFibonacciNumber(g0, g1, n) <->text1739.htm#19211<->GeneralizedFibonacciNumber(g0, g1, n) : RngIntElt, RngIntElt, RngIntElt -&gt; RngIntElt
5<->StirlingFirst(n, k) <->text1739.htm#19212<->StirlingFirst(n, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->StirlingSecond(n, k) <->text1739.htm#19213<->StirlingSecond(n, k) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->Bell(n) <->text1739.htm#19214<->Bell(n) : RngIntElt -&gt; RngIntElt
5<->EulerianNumber(n, r) <->text1739.htm#19215<->EulerianNumber(n, r) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->HarmonicNumber(n) <->text1739.htm#19216<->HarmonicNumber(n) : RngIntElt -&gt; FldRatElt
5<->BernoulliNumber(n) <->text1739.htm#19217<->BernoulliNumber(n) : RngIntElt -&gt; FldRatElt
5<->BernoulliApproximation(n) <->text1739.htm#19218<->BernoulliApproximation(n) : RngIntElt -&gt; FldPrElt
5<->BernoulliPolynomial(n) <->text1739.htm#19219<->BernoulliPolynomial(n) : RngIntElt -&gt; RngUPolElt
3<->combinatorics :<->text1739.htm<->combinatorics :: Combinatorial Functions (ENUMERATIVE COMBINATORICS)
3<->subsets :<->text1740.htm<->subsets :: Subsets of a Finite Set (ENUMERATIVE COMBINATORICS)
5<->Subsets(S) <->text1740.htm#19221<->Subsets(S) : SetEnum -&gt; SetEnum
5<->Subsets(S, k) <->text1740.htm#19222<->Subsets(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Multisets(S, k) <->text1740.htm#19223<->Multisets(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Subsequences(S, k) <->text1740.htm#19224<->Subsequences(S, k) : SetEnum, RngIntElt -&gt; SetEnum
5<->Permutations(S) <->text1740.htm#19225<->Permutations(S) : SetEnum -&gt; SetEnum;
5<->Permutations(S, k) <->text1740.htm#19226<->Permutations(S, k) : SetEnum, RngIntElt -&gt; SetEnum;
4<->EnumComb_OddGraph (Example H150E1)<->text1740.htm#19227<->EnumComb_OddGraph (Example H150E1)
4<->Example-OddGraph :<->text1740.htm#19227<->Example-OddGraph :: EnumComb_OddGraph (Example H150E1)
3<->subsets :<->text1740.htm<->subsets :: Subsets of a Finite Set (ENUMERATIVE COMBINATORICS)
3<->enum-comb :<->text1737.htm<->enum-comb :: ENUMERATIVE COMBINATORICS
3<->tableaux-chap :<->text1743.htm<->tableaux-chap :: PARTITIONS, WORDS AND YOUNG TABLEAUX
3<->introduction :<->text1744.htm<->introduction :: Introduction (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->partitions :<->text1745.htm<->partitions :: Partitions (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->NumberOfPartitions(n) <->text1745.htm#19233<->NumberOfPartitions(n) : RngIntElt -&gt; RngIntElt
5<->Partitions(n) <->text1745.htm#19234<->Partitions(n) : RngIntElt -&gt; [ [ RngIntElt ] ]
5<->Partitions(n, k) <->text1745.htm#19235<->Partitions(n, k) : RngIntElt, RngIntElt -&gt; [ [ RngIntElt ] ]
5<->RestrictedPartitions(n, M) <->text1745.htm#19236<->RestrictedPartitions(n, M) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]
5<->RestrictedPartitions(n, k, M) <->text1745.htm#19237<->RestrictedPartitions(n, k, M) : RngIntElt, SetEnum -&gt; [ [ RngIntElt ] ]
5<->IsPartition(S) <->text1745.htm#19238<->IsPartition(S) : SeqEnum -&gt; BoolElt
5<->RandomPartition(n) <->text1745.htm#19239<->RandomPartition(n) : RngIntElt -&gt; SeqEnum
5<->Weight(P) <->text1745.htm#19240<->Weight(P) : SeqEnum -&gt; RngIntElt
5<->IndexOfPartition(P) <->text1745.htm#19241<->IndexOfPartition(P) : SeqEnum -&gt; RngIntElt
4<->Tableau_Partitions (Example H151E1)<->text1745.htm#19242<->Tableau_Partitions (Example H151E1)
4<->Example-Partitions :<->text1745.htm#19242<->Example-Partitions :: Tableau_Partitions (Example H151E1)
4<->Tableau_RestrictedPartitions (Example H151E2)<->text1745.htm#19243<->Tableau_RestrictedPartitions (Example H151E2)
4<->Example-RestrictedPartitions :<->text1745.htm#19243<->Example-RestrictedPartitions :: Tableau_RestrictedPartitions (Example H151E2)
3<->partitions :<->text1745.htm<->partitions :: Partitions (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->words :<->text1746.htm<->words :: Words (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->ordered-monoid :<->text1746.htm#19245<->ordered-monoid :: Ordered Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->OrderedMonoid(n) <->text1746.htm#19246<->OrderedMonoid(n) : RngIntElt -&gt; MonOrd
5<->OrderedIntegerMonoid() <->text1746.htm#19247<->OrderedIntegerMonoid() : -&gt; MonOrd
5<->! :: Id(O) <->text1746.htm#19248<->! :: Id(O) : MonOrd -&gt; MonOrdElt
5<->Id(O) <->text1746.htm#19248<->Id(O) : MonOrd -&gt; MonOrdElt
5<->O . i <->text1746.htm#19249<->O . i : MonOrd, RngIntElt -&gt; MonOrdElt
5<->O ! [w1, ..., wn] <->text1746.htm#19250<->O ! [w<sub>1</sub>, ..., w<sub>n</sub>] : MonOrd, [MonOrdElt] -&gt; MonOrdElt
5<->O ! [i1, ..., in] <->text1746.htm#19251<->O ! [i<sub>1</sub>, ..., i<sub>n</sub>] : MonOrd, [RngIntElt] -&gt; MonOrdElt
5<->w1 eq w2 <->text1746.htm#19252<->w1 eq w2 : MonOrdElt, MonOrdElt -&gt; BoolElt
5<->w1 * w2 <->text1746.htm#19253<->w1 * w2 : MonOrdElt, MonOrdElt -&gt; MonOrdElt
5<->IsKnuthEquivalent(w1, w2) <->text1746.htm#19254<->IsKnuthEquivalent(w1, w2) : MonOrdElt, MonOrdElt -&gt; BoolElt
5<->w[i] <->text1746.htm#19255<->w[i] : MonOrdElt, RngIntElt -&gt; RngElt
5<->Eltseq :: ElementToSequence(w) <->text1746.htm#19256<->Eltseq :: ElementToSequence(w) : MonOrdElt -&gt; SeqEnum
5<->ElementToSequence(w) <->text1746.htm#19256<->ElementToSequence(w) : MonOrdElt -&gt; SeqEnum
5<-># :: Length(w) <->text1746.htm#19257<-># :: Length(w) : MonOrdElt -&gt; RngIntElt
5<->Length(w) <->text1746.htm#19257<->Length(w) : MonOrdElt -&gt; RngIntElt
5<->Content(w) <->text1746.htm#19258<->Content(w) : MonOrdElt -&gt; SeqEnum[RngIntElt]
5<->IsReverseLatticeWord(w) <->text1746.htm#19259<->IsReverseLatticeWord(w) : MonOrdElt -&gt; BoolElt
5<->MaximalIncreasingSequence(w) <->text1746.htm#19260<->MaximalIncreasingSequence(w) : MonOrdElt -&gt; RngIntElt
5<->MaximalIncreasingSequences(w, k) <->text1746.htm#19261<->MaximalIncreasingSequences(w, k) : SeqEnum,RngIntElt -&gt; RngIntElt
4<->Tableau_OrderedMonoid-Creation (Example H151E3)<->text1746.htm#19262<->Tableau_OrderedMonoid-Creation (Example H151E3)
4<->Example-OrderedMonoid-Creation :<->text1746.htm#19262<->Example-OrderedMonoid-Creation :: Tableau_OrderedMonoid-Creation (Example H151E3)
4<->Tableau_orderedmon--fingen (Example H151E4)<->text1746.htm#19263<->Tableau_orderedmon--fingen (Example H151E4)
4<->Example-orderedmon--fingen :<->text1746.htm#19263<->Example-orderedmon--fingen :: Tableau_orderedmon--fingen (Example H151E4)
4<->Tableau_OrderedMonoid-longest (Example H151E5)<->text1746.htm#19264<->Tableau_OrderedMonoid-longest (Example H151E5)
4<->Example-OrderedMonoid-longest :<->text1746.htm#19264<->Example-OrderedMonoid-longest :: Tableau_OrderedMonoid-longest (Example H151E5)
3<->ordered-monoid :<->text1746.htm#19245<->ordered-monoid :: Ordered Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->plactic-monoid :<->text1746.htm#19265<->plactic-monoid :: Plactic Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->PlacticMonoid(O) <->text1746.htm#19266<->PlacticMonoid(O) : MonOrd -&gt; MonOrd
5<->PlacticIntegerMonoid() <->text1746.htm#19267<->PlacticIntegerMonoid() : -&gt; MonOrd
5<->OrderedMonoid(P) <->text1746.htm#19268<->OrderedMonoid(P) : MonPlc -&gt; MonOrd
5<->! :: Id(P) <->text1746.htm#19269<->! :: Id(P) : MonPlc -&gt; MonPlcElt
5<->Id(P) <->text1746.htm#19269<->Id(P) : MonPlc -&gt; MonPlcElt
5<->P . i <->text1746.htm#19270<->P . i : MonPlc, RngIntElt -&gt; MonPlcElt
5<->P ! [u1, ..., un] <->text1746.htm#19271<->P ! [u<sub>1</sub>, ..., u<sub>n</sub>] : MonPlc, [MonPlcElt] -&gt; MonPlcElt
5<->P ! [i1, ..., in] <->text1746.htm#19272<->P ! [i<sub>1</sub>, ..., i<sub>n</sub>] : MonPlc, [RngIntElt] -&gt; MonPlcElt
5<->P ! w <->text1746.htm#19273<->P ! w : MonPlc, MonOrdElt -&gt; MonPlcElt
5<->P ! [w1, ..., wn] <->text1746.htm#19274<->P ! [w<sub>1</sub>, ..., w<sub>n</sub>] : MonPlc, [MonOrdElt] -&gt; MonPlcElt
5<->P ! t <->text1746.htm#19275<->P ! t : MonPlc, Tbl -&gt; MonPlcElt
5<->u1 eq u2 <->text1746.htm#19276<->u1 eq u2 : MonPlcElt, MonPlcElt -&gt; BoolElt
5<->u1 * u2 <->text1746.htm#19277<->u1 * u2 : MonPlcElt, MonPlcElt -&gt; MonPlcElt
5<-># :: Length(u) <->text1746.htm#19278<-># :: Length(u) : MonPlcElt -&gt; RngIntElt
5<->Length(u) <->text1746.htm#19278<->Length(u) : MonPlcElt -&gt; RngIntElt
5<->Content(u) <->text1746.htm#19279<->Content(u) : MonPlcElt -&gt; SeqEnum[RngIntElt]
4<->Tableau_OrderedMonoid-basic (Example H151E6)<->text1746.htm#19280<->Tableau_OrderedMonoid-basic (Example H151E6)
4<->Example-OrderedMonoid-basic :<->text1746.htm#19280<->Example-OrderedMonoid-basic :: Tableau_OrderedMonoid-basic (Example H151E6)
4<->Tableau_OrderedMonoid-fingen (Example H151E7)<->text1746.htm#19281<->Tableau_OrderedMonoid-fingen (Example H151E7)
4<->Example-OrderedMonoid-fingen :<->text1746.htm#19281<->Example-OrderedMonoid-fingen :: Tableau_OrderedMonoid-fingen (Example H151E7)
3<->plactic-monoid :<->text1746.htm#19265<->plactic-monoid :: Plactic Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->words :<->text1746.htm<->words :: Words (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux :<->text1747.htm<->tableaux :: Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-monoid :<->text1747.htm#19283<->tableaux-monoid :: Tableau Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->TableauMonoid(P) <->text1747.htm#19284<->TableauMonoid(P) : MonPlc -> MonTbl
5<->TableauMonoid(O) <->text1747.htm#19284<->TableauMonoid(O) : MonOrd -&gt; MonTbl
5<->TableauIntegerMonoid() <->text1747.htm#19285<->TableauIntegerMonoid() : -&gt; MonTbl
5<->OrderedMonoid(M) <->text1747.htm#19286<->OrderedMonoid(M) : MonPlc -&gt; MonOrd;
4<->Tableau_TabMonoid-standard (Example H151E8)<->text1747.htm#19287<->Tableau_TabMonoid-standard (Example H151E8)
4<->Example-TabMonoid-standard :<->text1747.htm#19287<->Example-TabMonoid-standard :: Tableau_TabMonoid-standard (Example H151E8)
4<->Tableau_TabMonoid-fingen (Example H151E9)<->text1747.htm#19288<->Tableau_TabMonoid-fingen (Example H151E9)
4<->Example-TabMonoid-fingen :<->text1747.htm#19288<->Example-TabMonoid-fingen :: Tableau_TabMonoid-fingen (Example H151E9)
3<->tableaux-monoid :<->text1747.htm#19283<->tableaux-monoid :: Tableau Monoids (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-create :<->text1747.htm#19289<->tableaux-create :: Creation of Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->Tableau(Q) <->text1747.htm#19290<->Tableau(Q) : SeqEnum[RngIntElt/2] -&gt; Tbl
5<->Tableau(Q) <->text1747.htm#19291<->Tableau(Q) : SeqEnum[MonOrdElt] -&gt; Tbl
5<->Tableau(S, Q) <->text1747.htm#19292<->Tableau(S, Q) : SeqEnum[RngIntElt], SeqEnum[RngIntElt/2] -&gt; Tbl
5<->Tableau(S, Q) <->text1747.htm#19293<->Tableau(S, Q) : SeqEnum[RngIntElt], SeqEnum[MonOrdElt] -&gt; Tbl
5<->WordToTableau(u) <->text1747.htm#19294<->WordToTableau(u) : MonPlcElt -> Tbl
5<->WordToTableau(w) <->text1747.htm#19294<->WordToTableau(w) : MonOrdElt -&gt; Tbl
5<->M ! w <->text1747.htm#19295<->M ! w : MonTbl, MonOrdElt -&gt; Tbl
5<->M ! u <->text1747.htm#19296<->M ! u : MonTbl, MonPlcElt -&gt; Tbl
5<->M ! [i1, ..., in] <->text1747.htm#19297<->M ! [i<sub>1</sub>, ..., i<sub>n</sub>] : MonPlc, [MonPlcElt] -&gt; MonPlcElt
5<->M ! Q <->text1747.htm#19298<->M ! Q : MonPlc, SeqEnum -&gt; MonPlcElt
5<->M ! Q <->text1747.htm#19299<->M ! Q : MonPlc, SeqEnum -&gt; MonPlcElt
4<->Tableau_Tabcreate-basic (Example H151E10)<->text1747.htm#19300<->Tableau_Tabcreate-basic (Example H151E10)
4<->Example-Tabcreate-basic :<->text1747.htm#19300<->Example-Tabcreate-basic :: Tableau_Tabcreate-basic (Example H151E10)
4<->Tableau_Tabcreate-fingen (Example H151E11)<->text1747.htm#19301<->Tableau_Tabcreate-fingen (Example H151E11)
4<->Example-Tabcreate-fingen :<->text1747.htm#19301<->Example-Tabcreate-fingen :: Tableau_Tabcreate-fingen (Example H151E11)
4<->Tableau_Tabcreate-bang (Example H151E12)<->text1747.htm#19302<->Tableau_Tabcreate-bang (Example H151E12)
4<->Example-Tabcreate-bang :<->text1747.htm#19302<->Example-Tabcreate-bang :: Tableau_Tabcreate-bang (Example H151E12)
3<->tableaux-create :<->text1747.htm#19289<->tableaux-create :: Creation of Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-enumerate :<->text1747.htm#19303<->tableaux-enumerate :: Enumeration of Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->StandardTableaux(M, P) <->text1747.htm#19304<->StandardTableaux(M, P) : MonTbl, SeqEnum[RngIntElt] -> SetEnum
5<->StandardTableaux(P) <->text1747.htm#19304<->StandardTableaux(P) : SeqEnum[RngIntElt] -&gt; SetEnum
5<->StandardTableauxOfWeight(M, n) <->text1747.htm#19305<->StandardTableauxOfWeight(M, n) : MonTbl, RngIntElt -> SetEnum
5<->StandardTableauxOfWeight(n) <->text1747.htm#19305<->StandardTableauxOfWeight(n) : RngIntElt -&gt; SetEnum
5<->TableauxOfShape(M, S, m) <->text1747.htm#19306<->TableauxOfShape(M, S, m) : MonTbl, SeqEnum[RngIntElt], RngIntElt -> SetEnum
5<->TableauxOfShape(S, m) <->text1747.htm#19306<->TableauxOfShape(S, m) : SeqEnum[RngIntElt], RngIntElt -&gt; SetEnum
5<->TableauxOnShapeWithContent(M, S, C) <->text1747.htm#19307<->TableauxOnShapeWithContent(M, S, C) : MonTbl, SeqEnum[RngIntElt],                                                     SeqEnum[RngIntElt] -> SetEnum
5<->TableauxOnShapeWithContent(S, C) <->text1747.htm#19307<->TableauxOnShapeWithContent(S, C) : SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; SetEnum
5<->TableauxWithContent(M, C) <->text1747.htm#19308<->TableauxWithContent(M, C) : MonTbl, SeqEnum[RngIntElt] -> SetEnum
5<->TableauxWithContent(C) <->text1747.htm#19308<->TableauxWithContent(C) : SeqEnum[RngIntElt] -&gt; SetEnum
4<->Tableau_MultTabCreate1 (Example H151E13)<->text1747.htm#19309<->Tableau_MultTabCreate1 (Example H151E13)
4<->Example-MultTabCreate1 :<->text1747.htm#19309<->Example-MultTabCreate1 :: Tableau_MultTabCreate1 (Example H151E13)
4<->Tableau_MultTabcreate-fingen (Example H151E14)<->text1747.htm#19310<->Tableau_MultTabcreate-fingen (Example H151E14)
4<->Example-MultTabcreate-fingen :<->text1747.htm#19310<->Example-MultTabcreate-fingen :: Tableau_MultTabcreate-fingen (Example H151E14)
3<->tableaux-enumerate :<->text1747.htm#19303<->tableaux-enumerate :: Enumeration of Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableau-random :<->text1747.htm#19311<->tableau-random :: Random Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->RandomHookWalk(t, i, j) <->text1747.htm#19312<->RandomHookWalk(t, i, j) : Tbl, RngIntElt, RngIntElt ->  RngIntElt, RngIntElt
5<->RandomHookWalk(P, i, j) <->text1747.htm#19312<->RandomHookWalk(P, i, j) : SeqEnum[RngIntElt], RngIntElt, RngIntElt -&gt;                                                         RngIntElt, RngIntElt
5<->RandomTableau(M, S) <->text1747.htm#19313<->RandomTableau(M, S) : MonTbl, SeqEnum[RngIntElt] -> Tbl
5<->RandomTableau(S) <->text1747.htm#19313<->RandomTableau(S) : SeqEnum[RngIntElt] -&gt; Tbl
5<->RandomTableau(M, n) <->text1747.htm#19314<->RandomTableau(M, n) : MonTbl, RngIntElt -> Tbl
5<->RandomTableau(n) <->text1747.htm#19314<->RandomTableau(n) : RngIntElt -&gt; Tbl
4<->Tableau_Tab-Random (Example H151E15)<->text1747.htm#19315<->Tableau_Tab-Random (Example H151E15)
4<->Example-Tab-Random :<->text1747.htm#19315<->Example-Tab-Random :: Tableau_Tab-Random (Example H151E15)
3<->tableau-random :<->text1747.htm#19311<->tableau-random :: Random Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-access :<->text1747.htm#19316<->tableaux-access :: Basic Access Functions (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->OuterShape :: Shape(t) <->text1747.htm#19317<->OuterShape :: Shape(t) : Tbl -&gt; SeqEnum[RngIntElt]
5<->Shape(t) <->text1747.htm#19317<->Shape(t) : Tbl -&gt; SeqEnum[RngIntElt]
5<->InnerShape :: SkewShape(t) <->text1747.htm#19318<->InnerShape :: SkewShape(t) : Tbl -&gt; SeqEnum[RngIntElt]
5<->SkewShape(t) <->text1747.htm#19318<->SkewShape(t) : Tbl -&gt; SeqEnum[RngIntElt]
5<->PartitionCovers(P1, P2) <->text1747.htm#19319<->PartitionCovers(P1, P2) : SeqEnum, SeqEnum -&gt; BoolElt
5<->ConjugatePartition(P) <->text1747.htm#19320<->ConjugatePartition(P) : SeqEnum -&gt; SeqEnum
5<->Weight(t) <->text1747.htm#19321<->Weight(t) : Tbl -&gt; RngIntElt
5<->SkewWeight(t) <->text1747.htm#19322<->SkewWeight(t) : Tbl -&gt; RngIntElt
5<->NumberOfRows(t) <->text1747.htm#19323<->NumberOfRows(t) : Tbl -&gt; RngIntElt
5<->NumberOfSkewRows(t) <->text1747.htm#19324<->NumberOfSkewRows(t) : Tbl -&gt; RngIntElt
5<->Row(t, i) <->text1747.htm#19325<->Row(t, i) : Tbl, RngIntElt -&gt; MonOrdElt
5<->Rows(t) <->text1747.htm#19326<->Rows(t) : Tbl -&gt; SeqEnum[MonOrdElt]
5<->Column(t, j) <->text1747.htm#19327<->Column(t, j) : Tbl, RngIntElt -&gt; MonOrdElt
5<->Columns(t) <->text1747.htm#19328<->Columns(t) : Tbl -&gt; SeqEnum[MonOrdElt]
5<->RowSkewLength(t, i) <->text1747.htm#19329<->RowSkewLength(t, i) : Tbl,RngIntElt -&gt; RngIntElt
5<->ColumnSkewLength(t, j) <->text1747.htm#19330<->ColumnSkewLength(t, j) : Tbl,RngIntElt -&gt; RngIntElt
5<->FirstIndexOfRow(t, i) <->text1747.htm#19331<->FirstIndexOfRow(t, i) : Tbl,RngIntElt -&gt; RngIntElt
5<->RowLength :: LastIndexOfRow(t, i) <->text1747.htm#19332<->RowLength :: LastIndexOfRow(t, i) : Tbl,RngIntElt -&gt; RngIntElt
5<->LastIndexOfRow(t, i) <->text1747.htm#19332<->LastIndexOfRow(t, i) : Tbl,RngIntElt -&gt; RngIntElt
5<->FirstIndexOfColumn(t, j) <->text1747.htm#19333<->FirstIndexOfColumn(t, j) : Tbl,RngIntElt -&gt; RngIntElt
5<->ColumnLength :: LastIndexOfColumn(t, j) <->text1747.htm#19334<->ColumnLength :: LastIndexOfColumn(t, j) : Tbl,RngIntElt -&gt; RngIntElt
5<->LastIndexOfColumn(t, j) <->text1747.htm#19334<->LastIndexOfColumn(t, j) : Tbl,RngIntElt -&gt; RngIntElt
4<->Tableau_Tab-Access (Example H151E16)<->text1747.htm#19335<->Tableau_Tab-Access (Example H151E16)
4<->Example-Tab-Access :<->text1747.htm#19335<->Example-Tab-Access :: Tableau_Tab-Access (Example H151E16)
3<->tableaux-access :<->text1747.htm#19316<->tableaux-access :: Basic Access Functions (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-properties :<->text1747.htm#19336<->tableaux-properties :: Properties (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->HookLength(P, i, j) <->text1747.htm#19337<->HookLength(P, i, j) : SeqEnum[RngIntElt],RngIntElt,RngIntElt -> RngIntElt
5<->HookLength(t, i, j) <->text1747.htm#19337<->HookLength(t, i, j) : Tbl, RngIntElt, RngIntElt -&gt; RngIntElt
5<->Content(t) <->text1747.htm#19338<->Content(t) : Tbl -&gt; SeqEnum
5<->RowWord :: Word(t) <->text1747.htm#19339<->RowWord :: Word(t) : Tbl -&gt; MonOrdElt
5<->Word(t) <->text1747.htm#19339<->Word(t) : Tbl -&gt; MonOrdElt
5<->ColumnWord(t) <->text1747.htm#19340<->ColumnWord(t) : Tbl -&gt; SeqEnum
5<->IsStandard(t) <->text1747.htm#19341<->IsStandard(t) : Tbl -&gt; BoolElt
5<->IsSkew(t) <->text1747.htm#19342<->IsSkew(t) : Tbl -&gt; BoolElt
5<->IsLittlewoodRichardson(t) <->text1747.htm#19343<->IsLittlewoodRichardson(t) : Tbl -&gt; BoolElt
4<->Tableau_Tab-check-standard (Example H151E17)<->text1747.htm#19344<->Tableau_Tab-check-standard (Example H151E17)
4<->Example-Tab-check-standard :<->text1747.htm#19344<->Example-Tab-check-standard :: Tableau_Tab-check-standard (Example H151E17)
4<->Tableau_Tab-check-words (Example H151E18)<->text1747.htm#19345<->Tableau_Tab-check-words (Example H151E18)
4<->Example-Tab-check-words :<->text1747.htm#19345<->Example-Tab-check-words :: Tableau_Tab-check-words (Example H151E18)
3<->tableaux-properties :<->text1747.htm#19336<->tableaux-properties :: Properties (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-operations :<->text1747.htm#19346<->tableaux-operations :: Operations (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->t1 eq t2 <->text1747.htm#19347<->t1 eq t2 : MonPlcElt, MonPlcElt -&gt; BoolElt
5<->t1 * t2 <->text1747.htm#19348<->t1 * t2 : Tbl, Tbl -&gt; Tbl
5<->DiagonalSum(t1, t2) <->text1747.htm#19349<->DiagonalSum(t1, t2) : Tbl,Tbl -&gt; Tbl
5<->Conjugate(t) <->text1747.htm#19350<->Conjugate(t) : Tbl -&gt; Tbl
5<->JeuDeTaquin(t, i, j) <->text1747.htm#19351<->JeuDeTaquin(t, i, j) : Tbl, RngIntElt, RngIntElt -> Tbl
5<->JeuDeTaquin(~t, i, j) <->text1747.htm#19351<->JeuDeTaquin(~t, i, j) : Tbl, RngIntElt, RngIntElt -&gt;
5<->JeuDeTaquin(t) <->text1747.htm#19352<->JeuDeTaquin(t) : Tbl -> Tbl
5<->Rectify :: JeuDeTaquin(~t) <->text1747.htm#19352<->Rectify :: JeuDeTaquin(~t) : Tbl -&gt;
5<->Rectify(t) : Tbl -> Tbl :: JeuDeTaquin(~t) <->text1747.htm#19352<->Rectify(t) : Tbl -> Tbl :: JeuDeTaquin(~t) : Tbl -&gt;
5<->JeuDeTaquin(~t) <->text1747.htm#19352<->JeuDeTaquin(~t) : Tbl -&gt;
5<->InverseJeuDeTaquin(t, i, j) <->text1747.htm#19353<->InverseJeuDeTaquin(t, i, j) : Tbl, RngIntElt, RngIntElt -> Tbl
5<->InverseJeuDeTaquin(~t, i, j) <->text1747.htm#19353<->InverseJeuDeTaquin(~t, i, j) : Tbl, RngIntElt, RngIntElt -&gt;
5<->RowInsert(t, w) <->text1747.htm#19354<->RowInsert(t, w) : Tbl, MonOrdElt -> Tbl
5<->RowInsert(\til t, u) <->text1747.htm#19354<->RowInsert(\til t, u) : Tbl, MonPlcElt ->
5<->RowInsert(t, u) <->text1747.htm#19354<->RowInsert(t, u) : Tbl, MonPlcElt -> Tbl
5<->RowInsert(~t, w) <->text1747.htm#19354<->RowInsert(~t, w) : Tbl, MonOrdElt -&gt;
5<->RowInsert(t, x) <->text1747.htm#19355<->RowInsert(t, x) : Tbl, RngIntElt -> Tbl
5<->RowInsert(~t, x) <->text1747.htm#19355<->RowInsert(~t, x) : Tbl, RngIntElt -&gt;
5<->InverseRowInsert(t, i, j) <->text1747.htm#19356<->InverseRowInsert(t, i, j) : Tbl, RngIntElt, RngIntElt -> Tbl, MonOrdElt
5<->InverseRowInsert(~t, i, j) <->text1747.htm#19356<->InverseRowInsert(~t, i, j) : Tbl, RngIntElt, RngIntElt -&gt;
4<->Tableau_Tab-Jeu (Example H151E19)<->text1747.htm#19357<->Tableau_Tab-Jeu (Example H151E19)
4<->Example-Tab-Jeu :<->text1747.htm#19357<->Example-Tab-Jeu :: Tableau_Tab-Jeu (Example H151E19)
4<->Tableau_Tab-Comp-Mult (Example H151E20)<->text1747.htm#19358<->Tableau_Tab-Comp-Mult (Example H151E20)
4<->Example-Tab-Comp-Mult :<->text1747.htm#19358<->Example-Tab-Comp-Mult :: Tableau_Tab-Comp-Mult (Example H151E20)
3<->tableaux-operations :<->text1747.htm#19346<->tableaux-operations :: Operations (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-rsk :<->text1747.htm#19359<->tableaux-rsk :: The Robinson-Schensted-Knuth  Correspondence (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->LexicographicalOrdering(w1, w2) <->text1747.htm#19360<->LexicographicalOrdering(w1, w2) : MonOrdElt, MonOrdElt -> MonOrdElt, MonOrdElt
5<->LexicographicalOrdering(~w1, ~w2) <->text1747.htm#19360<->LexicographicalOrdering(~w1, ~w2) : MonOrdElt, MonOrdElt -&gt;
5<->IsLexicographicallyOrdered(w1, w2) <->text1747.htm#19361<->IsLexicographicallyOrdered(w1, w2) : MonOrdElt, MonOrdElt -&gt; boolean
5<->RSKCorrespondence(w) <->text1747.htm#19362<->RSKCorrespondence(w) : SeqEnum[RngIntElt] -&gt; Tbl, Tbl
5<->InverseRSKCorrespondenceSingleWord(t1, t2) <->text1747.htm#19363<->InverseRSKCorrespondenceSingleWord(t1, t2) : Tbl, Tbl -&gt; MonOrdElt
5<->RSKCorrespondence(w1, w2) <->text1747.htm#19364<->RSKCorrespondence(w1, w2) : SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; Tbl,Tbl
5<->InverseRSKCorrespondenceDoubleWord(t1, t2) <->text1747.htm#19365<->InverseRSKCorrespondenceDoubleWord(t1, t2) : Tbl, Tbl -&gt; MonOrdElt, MonOrdElt
5<->RSKCorrespondence(M) <->text1747.htm#19366<->RSKCorrespondence(M) : Mtrx -&gt; Tbl, Tbl
5<->InverseRSKCorrespondenceMatrix(t1, t2) <->text1747.htm#19367<->InverseRSKCorrespondenceMatrix(t1, t2) : Tbl, Tbl -&gt; Mat
4<->Tableau_RSK-singleword (Example H151E21)<->text1747.htm#19368<->Tableau_RSK-singleword (Example H151E21)
4<->Example-RSK-singleword :<->text1747.htm#19368<->Example-RSK-singleword :: Tableau_RSK-singleword (Example H151E21)
4<->Tableau_RSK-doubleword (Example H151E22)<->text1747.htm#19369<->Tableau_RSK-doubleword (Example H151E22)
4<->Example-RSK-doubleword :<->text1747.htm#19369<->Example-RSK-doubleword :: Tableau_RSK-doubleword (Example H151E22)
4<->Tableau_RSK-Matrix (Example H151E23)<->text1747.htm#19370<->Tableau_RSK-Matrix (Example H151E23)
4<->Example-RSK-Matrix :<->text1747.htm#19370<->Example-RSK-Matrix :: Tableau_RSK-Matrix (Example H151E23)
4<->Tableau_RSK-perms (Example H151E24)<->text1747.htm#19371<->Tableau_RSK-perms (Example H151E24)
4<->Example-RSK-perms :<->text1747.htm#19371<->Example-RSK-perms :: Tableau_RSK-perms (Example H151E24)
3<->tableaux-rsk :<->text1747.htm#19359<->tableaux-rsk :: The Robinson-Schensted-Knuth  Correspondence (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-combinatoric :<->text1747.htm#19372<->tableaux-combinatoric :: Counting Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
5<->NumberOfStandardTableaux(P) <->text1747.htm#19373<->NumberOfStandardTableaux(P) : SeqEnum -&gt; RngIntElt
5<->NumberOfStandardTableauxOnWeight(n) <->text1747.htm#19374<->NumberOfStandardTableauxOnWeight(n) : RngIntElt -&gt; RngIntElt
5<->NumberOfTableauxOnAlphabet(P, m) <->text1747.htm#19375<->NumberOfTableauxOnAlphabet(P, m) : SeqEnum,RngIntElt -&gt; RngIntElt
5<->KostkaNumber(S, C) <->text1747.htm#19376<->KostkaNumber(S, C) : SeqEnum[RngIntElt], SeqEnum[RngIntElt] -&gt; RngIntElt
4<->Tableau_CountStandardTab (Example H151E25)<->text1747.htm#19377<->Tableau_CountStandardTab (Example H151E25)
4<->Example-CountStandardTab :<->text1747.htm#19377<->Example-CountStandardTab :: Tableau_CountStandardTab (Example H151E25)
4<->Tableau_CountTabAlph-Binomial (Example H151E26)<->text1747.htm#19378<->Tableau_CountTabAlph-Binomial (Example H151E26)
4<->Example-CountTabAlph-Binomial :<->text1747.htm#19378<->Example-CountTabAlph-Binomial :: Tableau_CountTabAlph-Binomial (Example H151E26)
3<->tableaux-combinatoric :<->text1747.htm#19372<->tableaux-combinatoric :: Counting Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux :<->text1747.htm<->tableaux :: Tableaux (PARTITIONS, WORDS AND YOUNG TABLEAUX)
3<->tableaux-chap :<->text1743.htm<->tableaux-chap :: PARTITIONS, WORDS AND YOUNG TABLEAUX
3<->alg_sym :<->text1750.htm<->alg_sym :: SYMMETRIC FUNCTIONS
3<->introduction :<->text1751.htm<->introduction :: Introduction (SYMMETRIC FUNCTIONS)
4<->AlgSym_inf-invar (Example H152E1)<->text1751.htm#19383<->AlgSym_inf-invar (Example H152E1)
4<->Example-inf-invar :<->text1751.htm#19383<->Example-inf-invar :: AlgSym_inf-invar (Example H152E1)
3<->introduction :<->text1751.htm<->introduction :: Introduction (SYMMETRIC FUNCTIONS)
3<->creation :<->text1752.htm<->creation :: Creation (SYMMETRIC FUNCTIONS)
3<->construction :<->text1752.htm#19385<->construction :: Creation of Symmetric Function Algebras (SYMMETRIC FUNCTIONS)
5<->SFA :: SymmetricFunctionAlgebra(R) <->text1752.htm#19386<->SFA :: SymmetricFunctionAlgebra(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebra(R) <->text1752.htm#19386<->SymmetricFunctionAlgebra(R) : Rng -&gt; AlgSym
5<->SFASchur :: SymmetricFunctionAlgebraSchur(R) <->text1752.htm#19387<->SFASchur :: SymmetricFunctionAlgebraSchur(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebraSchur(R) <->text1752.htm#19387<->SymmetricFunctionAlgebraSchur(R) : Rng -&gt; AlgSym
5<->SFAHomogeneous :: SymmetricFunctionAlgebraHomogeneous(R) <->text1752.htm#19388<->SFAHomogeneous :: SymmetricFunctionAlgebraHomogeneous(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebraHomogeneous(R) <->text1752.htm#19388<->SymmetricFunctionAlgebraHomogeneous(R) : Rng -&gt; AlgSym
5<->SFAPower :: SymmetricFunctionAlgebraPower(R) <->text1752.htm#19389<->SFAPower :: SymmetricFunctionAlgebraPower(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebraPower(R) <->text1752.htm#19389<->SymmetricFunctionAlgebraPower(R) : Rng -&gt; AlgSym
5<->SFAElementary :: SymmetricFunctionAlgebraElementary(R) <->text1752.htm#19390<->SFAElementary :: SymmetricFunctionAlgebraElementary(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebraElementary(R) <->text1752.htm#19390<->SymmetricFunctionAlgebraElementary(R) : Rng -&gt; AlgSym
5<->SFAMonomial :: SymmetricFunctionAlgebraMonomial(R) <->text1752.htm#19391<->SFAMonomial :: SymmetricFunctionAlgebraMonomial(R) : Rng -&gt; AlgSym
5<->SymmetricFunctionAlgebraMonomial(R) <->text1752.htm#19391<->SymmetricFunctionAlgebraMonomial(R) : Rng -&gt; AlgSym
4<->AlgSym_creation (Example H152E2)<->text1752.htm#19392<->AlgSym_creation (Example H152E2)
4<->Example-creation :<->text1752.htm#19392<->Example-creation :: AlgSym_creation (Example H152E2)
3<->construction :<->text1752.htm#19385<->construction :: Creation of Symmetric Function Algebras (SYMMETRIC FUNCTIONS)
3<->symmetric-functions :<->text1752.htm#19393<->symmetric-functions :: Creation of Symmetric Functions (SYMMETRIC FUNCTIONS)
5<->A . P <->text1752.htm#19394<->A . P : AlgSym, [ RngIntElt ] -&gt; AlgSymElt
5<->A . i <->text1752.htm#19395<->A . i : AlgSym, RngIntElt -&gt; AlgSymElt
4<->AlgSym_elt-create (Example H152E3)<->text1752.htm#19396<->AlgSym_elt-create (Example H152E3)
4<->Example-elt-create :<->text1752.htm#19396<->Example-elt-create :: AlgSym_elt-create (Example H152E3)
5<->! :: IsCoercible(A, f) <->text1752.htm#19397<->! :: IsCoercible(A, f) : AlgSym, RngMPolElt -&gt; BoolElt, AlgSymElt
5<->IsCoercible(A, f) <->text1752.htm#19397<->IsCoercible(A, f) : AlgSym, RngMPolElt -&gt; BoolElt, AlgSymElt
4<->AlgSym_poly bang (Example H152E4)<->text1752.htm#19398<->AlgSym_poly bang (Example H152E4)
4<->Example-poly bang :<->text1752.htm#19398<->Example-poly bang :: AlgSym_poly bang (Example H152E4)
5<->A ! r <->text1752.htm#19399<->A ! r : AlgSym, RngElt -&gt; AlgSymElt
4<->AlgSym_elt-create-scalar (Example H152E5)<->text1752.htm#19400<->AlgSym_elt-create-scalar (Example H152E5)
4<->Example-elt-create-scalar :<->text1752.htm#19400<->Example-elt-create-scalar :: AlgSym_elt-create-scalar (Example H152E5)
5<->A ! m <->text1752.htm#19401<->A ! m : AlgSym, AlgSymElt -&gt; AlgSymElt
4<->AlgSym_elt-create-change_basis (Example H152E6)<->text1752.htm#19402<->AlgSym_elt-create-change_basis (Example H152E6)
4<->Example-elt-create-change_basis :<->text1752.htm#19402<->Example-elt-create-change_basis :: AlgSym_elt-create-change_basis (Example H152E6)
4<->AlgSym_change-basis-2 (Example H152E7)<->text1752.htm#19403<->AlgSym_change-basis-2 (Example H152E7)
4<->Example-change-basis-2 :<->text1752.htm#19403<->Example-change-basis-2 :: AlgSym_change-basis-2 (Example H152E7)
3<->symmetric-functions :<->text1752.htm#19393<->symmetric-functions :: Creation of Symmetric Functions (SYMMETRIC FUNCTIONS)
3<->creation :<->text1752.htm<->creation :: Creation (SYMMETRIC FUNCTIONS)
3<->operation :<->text1753.htm<->operation :: Structure Operations (SYMMETRIC FUNCTIONS)
3<->generic :<->text1753.htm#19405<->generic :: Related Structures (SYMMETRIC FUNCTIONS)
5<->CoefficientRing :: BaseRing(L) <->text1753.htm#19406<->CoefficientRing :: BaseRing(L) : AlgSym -&gt; Rng
5<->BaseRing(L) <->text1753.htm#19406<->BaseRing(L) : AlgSym -&gt; Rng
3<->generic :<->text1753.htm#19405<->generic :: Related Structures (SYMMETRIC FUNCTIONS)
3<->boolean :<->text1753.htm#19407<->boolean :: Ring Predicates and Booleans (SYMMETRIC FUNCTIONS)
5<->ne :: L eq M <->text1753.htm#19408<->ne :: L eq M : AlgSym, AlgSym -&gt; BoolElt
5<->L eq M <->text1753.htm#19408<->L eq M : AlgSym, AlgSym -&gt; BoolElt
3<->boolean :<->text1753.htm#19407<->boolean :: Ring Predicates and Booleans (SYMMETRIC FUNCTIONS)
3<->basis-bool :<->text1753.htm#19409<->basis-bool :: Predicates on Basis Types (SYMMETRIC FUNCTIONS)
5<->HasSchurBasis(A)<->text1753.htm#19410<->HasSchurBasis(A): AlgSym -&gt; BoolElt
5<->HasElementaryBasis :: HasHomogeneousBasis(A)<->text1753.htm#19411<->HasElementaryBasis :: HasHomogeneousBasis(A): AlgSym -&gt; BoolElt
5<->HasPowerSumBasis :: HasHomogeneousBasis(A)<->text1753.htm#19411<->HasPowerSumBasis :: HasHomogeneousBasis(A): AlgSym -&gt; BoolElt
5<->HasMonomialBasis :: HasHomogeneousBasis(A)<->text1753.htm#19411<->HasMonomialBasis :: HasHomogeneousBasis(A): AlgSym -&gt; BoolElt
5<->HasHomogeneousBasis(A)<->text1753.htm#19411<->HasHomogeneousBasis(A): AlgSym -&gt; BoolElt
3<->basis-bool :<->text1753.htm#19409<->basis-bool :: Predicates on Basis Types (SYMMETRIC FUNCTIONS)
3<->operation :<->text1753.htm<->operation :: Structure Operations (SYMMETRIC FUNCTIONS)
3<->operation-element :<->text1754.htm<->operation-element :: Element Operations (SYMMETRIC FUNCTIONS)
3<->parent-category :<->text1754.htm#19413<->parent-category :: Parent and Category (SYMMETRIC FUNCTIONS)
3<->printing :<->text1754.htm#19414<->printing :: Print Styles (SYMMETRIC FUNCTIONS)
5<->A ` PrintStyle <->text1754.htm#19415<->A ` PrintStyle : AlgSym -&gt; MonStgElt
4<->AlgSym_print-style (Example H152E8)<->text1754.htm#19416<->AlgSym_print-style (Example H152E8)
4<->Example-print-style :<->text1754.htm#19416<->Example-print-style :: AlgSym_print-style (Example H152E8)
3<->printing :<->text1754.htm#19414<->printing :: Print Styles (SYMMETRIC FUNCTIONS)
3<->arithmetic :<->text1754.htm#19417<->arithmetic :: Additive Arithmetic Operators (SYMMETRIC FUNCTIONS)
3<->multiplication :<->text1754.htm#19418<->multiplication :: Multiplication (SYMMETRIC FUNCTIONS)
5<->*:= :: a * b <->text1754.htm#19419<->*:= :: a * b : AlgSymElt, AlgSymElt -&gt; AlgSymElt
5<->a * b <->text1754.htm#19419<->a * b : AlgSymElt, AlgSymElt -&gt; AlgSymElt
4<->AlgSym_mult (Example H152E9)<->text1754.htm#19420<->AlgSym_mult (Example H152E9)
4<->Example-mult :<->text1754.htm#19420<->Example-mult :: AlgSym_mult (Example H152E9)
3<->multiplication :<->text1754.htm#19418<->multiplication :: Multiplication (SYMMETRIC FUNCTIONS)
3<->plethysm :<->text1754.htm#19421<->plethysm :: Plethysm (SYMMETRIC FUNCTIONS)
5<->sim :: a ~ b <->text1754.htm#19422<->sim :: a ~ b : AlgSymElt, AlgSymElt -&gt; AlgSymElt
4<->AlgSym_pleth (Example H152E10)<->text1754.htm#19423<->AlgSym_pleth (Example H152E10)
4<->Example-pleth :<->text1754.htm#19423<->Example-pleth :: AlgSym_pleth (Example H152E10)
3<->plethysm :<->text1754.htm#19421<->plethysm :: Plethysm (SYMMETRIC FUNCTIONS)
3<->boolean :<->text1754.htm#19424<->boolean :: Boolean Operators (SYMMETRIC FUNCTIONS)
5<->IsHomogeneous(s)<->text1754.htm#19425<->IsHomogeneous(s): AlgSymElt -&gt; BoolElt
5<->ne :: s eq t <->text1754.htm#19426<->ne :: s eq t : AlgSymElt, AlgSymElt -&gt; BoolElt
5<->s eq t <->text1754.htm#19426<->s eq t : AlgSymElt, AlgSymElt -&gt; BoolElt
3<->boolean :<->text1754.htm#19424<->boolean :: Boolean Operators (SYMMETRIC FUNCTIONS)
3<->monomials :<->text1754.htm#19427<->monomials :: Accessing Elements (SYMMETRIC FUNCTIONS)
5<->Coefficient(s, p) <->text1754.htm#19428<->Coefficient(s, p) : AlgSymElt, SeqEnum -&gt; RngElt
5<->Support(s) <->text1754.htm#19429<->Support(s) : AlgSymElt -&gt; [SeqEnum], [RngElt]
5<->Length(s) <->text1754.htm#19430<->Length(s) : AlgSymElt -&gt; RngIntElt
4<->AlgSym_support (Example H152E11)<->text1754.htm#19431<->AlgSym_support (Example H152E11)
4<->Example-support :<->text1754.htm#19431<->Example-support :: AlgSym_support (Example H152E11)
5<->Degree(s) <->text1754.htm#19432<->Degree(s) : AlgSymElt -&gt; RngIntElt
3<->monomials :<->text1754.htm#19427<->monomials :: Accessing Elements (SYMMETRIC FUNCTIONS)
3<->Multivariate-Polynomials :<->text1754.htm#19433<->Multivariate-Polynomials :: Multivariate Polynomials (SYMMETRIC FUNCTIONS)
5<->P ! s <->text1754.htm#19434<->P ! s : RngMPol, AlgSymElt -&gt; RngMPolElt
4<->AlgSym_symmetric polynomials and symmetric functions (Example H152E12)<->text1754.htm#19435<->AlgSym_symmetric polynomials and symmetric functions (Example H152E12)
4<->Example-symmetric polynomials and symmetric functions :<->text1754.htm#19435<->Example-symmetric polynomials and symmetric functions :: AlgSym_symmetric polynomials and symmetric functions (Example H152E12)
4<->AlgSym_ChangeOfAlphabet (Example H152E13)<->text1754.htm#19436<->AlgSym_ChangeOfAlphabet (Example H152E13)
4<->Example-ChangeOfAlphabet :<->text1754.htm#19436<->Example-ChangeOfAlphabet :: AlgSym_ChangeOfAlphabet (Example H152E13)
3<->Multivariate-Polynomials :<->text1754.htm#19433<->Multivariate-Polynomials :: Multivariate Polynomials (SYMMETRIC FUNCTIONS)
3<->Frobenius-Automorphism :<->text1754.htm#19437<->Frobenius-Automorphism :: Frobenius Homomorphism (SYMMETRIC FUNCTIONS)
5<->Frobenius(s) <->text1754.htm#19438<->Frobenius(s) : AlgSymElt -&gt; AlgSymElt
4<->AlgSym_Frobenius automorphism (Example H152E14)<->text1754.htm#19439<->AlgSym_Frobenius automorphism (Example H152E14)
4<->Example-Frobenius automorphism :<->text1754.htm#19439<->Example-Frobenius automorphism :: AlgSym_Frobenius automorphism (Example H152E14)
3<->Frobenius-Automorphism :<->text1754.htm#19437<->Frobenius-Automorphism :: Frobenius Homomorphism (SYMMETRIC FUNCTIONS)
3<->Scalarproduct :<->text1754.htm#19440<->Scalarproduct :: Inner Product (SYMMETRIC FUNCTIONS)
5<->InnerProduct(a,b)<->text1754.htm#19441<->InnerProduct(a,b): AlgSymElt, AlgSymElt -&gt; RngElt
4<->AlgSym_Inner-Product (Example H152E15)<->text1754.htm#19442<->AlgSym_Inner-Product (Example H152E15)
4<->Example-Inner-Product :<->text1754.htm#19442<->Example-Inner-Product :: AlgSym_Inner-Product (Example H152E15)
3<->Scalarproduct :<->text1754.htm#19440<->Scalarproduct :: Inner Product (SYMMETRIC FUNCTIONS)
3<->Combinatorial-Objects :<->text1754.htm#19443<->Combinatorial-Objects :: Combinatorial Objects (SYMMETRIC FUNCTIONS)
5<->Tableaux(sf, m)<->text1754.htm#19444<->Tableaux(sf, m): AlgSymElt, RngIntElt -&gt; SetMulti
3<->Combinatorial-Objects :<->text1754.htm#19443<->Combinatorial-Objects :: Combinatorial Objects (SYMMETRIC FUNCTIONS)
3<->Symmetric-Group-Character :<->text1754.htm#19445<->Symmetric-Group-Character :: Symmetric Group Character (SYMMETRIC FUNCTIONS)
5<->SymmetricCharacter(sf)<->text1754.htm#19446<->SymmetricCharacter(sf): AlgSymElt -&gt; AlgChtrElt
4<->AlgSym_symmetric-polynomials-and-symmetric-functions (Example H152E16)<->text1754.htm#19447<->AlgSym_symmetric-polynomials-and-symmetric-functions (Example H152E16)
4<->Example-symmetric-polynomials-and-symmetric-functions :<->text1754.htm#19447<->Example-symmetric-polynomials-and-symmetric-functions :: AlgSym_symmetric-polynomials-and-symmetric-functions (Example H152E16)
3<->Symmetric-Group-Character :<->text1754.htm#19445<->Symmetric-Group-Character :: Symmetric Group Character (SYMMETRIC FUNCTIONS)
3<->Restrictions (SYMMETRIC FUNCTIONS)<->text1754.htm#19448<->Restrictions (SYMMETRIC FUNCTIONS)
5<->RestrictDegree(a, n)<->text1754.htm#19449<->RestrictDegree(a, n): AlgSymElt, RngIntElt -&gt; AlgSymElt
5<->RestrictPartitionLength(a, n)<->text1754.htm#19450<->RestrictPartitionLength(a, n): AlgSymElt, RngIntElt -&gt; AlgSymElt
5<->RestrictParts(a, n)<->text1754.htm#19451<->RestrictParts(a, n): AlgSymElt, RngIntElt -&gt; AlgSymElt
3<->Restrictions (SYMMETRIC FUNCTIONS)<->text1754.htm#19448<->Restrictions (SYMMETRIC FUNCTIONS)
3<->operation-element :<->text1754.htm<->operation-element :: Element Operations (SYMMETRIC FUNCTIONS)
3<->matrices :<->text1755.htm<->matrices :: Transition Matrices (SYMMETRIC FUNCTIONS)
3<->matrices-from-schur :<->text1755.htm#19453<->matrices-from-schur :: Transition Matrices from Schur Basis (SYMMETRIC FUNCTIONS)
5<->SchurToMonomialMatrix(n)<->text1755.htm#19454<->SchurToMonomialMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_creation (Example H152E17)<->text1755.htm#19455<->AlgSym_creation (Example H152E17)
4<->Example-creation :<->text1755.htm#19455<->Example-creation :: AlgSym_creation (Example H152E17)
5<->SchurToHomogeneousMatrix(n)<->text1755.htm#19456<->SchurToHomogeneousMatrix(n): RngIntElt -&gt; AlgMatElt
5<->SchurToPowerSumMatrix(n)<->text1755.htm#19457<->SchurToPowerSumMatrix(n): RngIntElt -&gt; AlgMatElt
5<->SchurToElementaryMatrix(n)<->text1755.htm#19458<->SchurToElementaryMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_trans (Example H152E18)<->text1755.htm#19459<->AlgSym_trans (Example H152E18)
4<->Example-trans :<->text1755.htm#19459<->Example-trans :: AlgSym_trans (Example H152E18)
3<->matrices-from-schur :<->text1755.htm#19453<->matrices-from-schur :: Transition Matrices from Schur Basis (SYMMETRIC FUNCTIONS)
3<->matrices-from-monomial :<->text1755.htm#19460<->matrices-from-monomial :: Transition Matrices from  Monomial Basis (SYMMETRIC FUNCTIONS)
5<->MonomialToSchurMatrix(n)<->text1755.htm#19461<->MonomialToSchurMatrix(n): RngIntElt -&gt; AlgMatElt
5<->MonomialToHomogeneousMatrix(n)<->text1755.htm#19462<->MonomialToHomogeneousMatrix(n): RngIntElt -&gt; AlgMatElt
5<->MonomialToPowerSumMatrix(n)<->text1755.htm#19463<->MonomialToPowerSumMatrix(n): RngIntElt -&gt; AlgMatElt
5<->MonomialToElementaryMatrix(n)<->text1755.htm#19464<->MonomialToElementaryMatrix(n): RngIntElt -&gt; AlgMatElt
3<->matrices-from-monomial :<->text1755.htm#19460<->matrices-from-monomial :: Transition Matrices from  Monomial Basis (SYMMETRIC FUNCTIONS)
3<->matrices-from-homo :<->text1755.htm#19465<->matrices-from-homo :: Transition Matrices from Homogeneous Basis (SYMMETRIC FUNCTIONS)
5<->HomogeneousToSchurMatrix(n)<->text1755.htm#19466<->HomogeneousToSchurMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_HS (Example H152E19)<->text1755.htm#19467<->AlgSym_HS (Example H152E19)
4<->Example-HS :<->text1755.htm#19467<->Example-HS :: AlgSym_HS (Example H152E19)
5<->HomogeneousToMonomialMatrix(n)<->text1755.htm#19468<->HomogeneousToMonomialMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_hm (Example H152E20)<->text1755.htm#19469<->AlgSym_hm (Example H152E20)
4<->Example-hm :<->text1755.htm#19469<->Example-hm :: AlgSym_hm (Example H152E20)
5<->HomogeneousToPowerSumMatrix(n)<->text1755.htm#19470<->HomogeneousToPowerSumMatrix(n): RngIntElt -&gt; AlgMatElt
5<->HomogeneousToElementaryMatrix(n)<->text1755.htm#19471<->HomogeneousToElementaryMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_HE (Example H152E21)<->text1755.htm#19472<->AlgSym_HE (Example H152E21)
4<->Example-HE :<->text1755.htm#19472<->Example-HE :: AlgSym_HE (Example H152E21)
3<->matrices-from-homo :<->text1755.htm#19465<->matrices-from-homo :: Transition Matrices from Homogeneous Basis (SYMMETRIC FUNCTIONS)
3<->matrices-from-power :<->text1755.htm#19473<->matrices-from-power :: Transition Matrices from Power  Sum Basis (SYMMETRIC FUNCTIONS)
5<->PowerSumToSchurMatrix(n)<->text1755.htm#19474<->PowerSumToSchurMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_character-table (Example H152E22)<->text1755.htm#19475<->AlgSym_character-table (Example H152E22)
4<->Example-character-table :<->text1755.htm#19475<->Example-character-table :: AlgSym_character-table (Example H152E22)
5<->PowerSumToMonomialMatrix(n)<->text1755.htm#19476<->PowerSumToMonomialMatrix(n): RngIntElt -&gt; AlgMatElt
5<->PowerSumToHomogeneousMatrix(n)<->text1755.htm#19477<->PowerSumToHomogeneousMatrix(n): RngIntElt -&gt; AlgMatElt
5<->PowerSumToElementaryMatrix(n)<->text1755.htm#19478<->PowerSumToElementaryMatrix(n): RngIntElt -&gt; AlgMatElt
3<->matrices-from-power :<->text1755.htm#19473<->matrices-from-power :: Transition Matrices from Power  Sum Basis (SYMMETRIC FUNCTIONS)
3<->matrices-from-elem :<->text1755.htm#19479<->matrices-from-elem :: Transition Matrices from Elementary Basis (SYMMETRIC FUNCTIONS)
5<->ElementaryToSchurMatrix(n)<->text1755.htm#19480<->ElementaryToSchurMatrix(n): RngIntElt -&gt; AlgMatElt
5<->ElementaryToMonomialMatrix(n)<->text1755.htm#19481<->ElementaryToMonomialMatrix(n): RngIntElt -&gt; AlgMatElt
4<->AlgSym_em (Example H152E23)<->text1755.htm#19482<->AlgSym_em (Example H152E23)
4<->Example-em :<->text1755.htm#19482<->Example-em :: AlgSym_em (Example H152E23)
5<->ElementaryToHomogeneousMatrix(n)<->text1755.htm#19483<->ElementaryToHomogeneousMatrix(n): RngIntElt -&gt; AlgMatElt
5<->ElementaryToPowerSumMatrix(n)<->text1755.htm#19484<->ElementaryToPowerSumMatrix(n): RngIntElt -&gt; AlgMatElt
3<->matrices-from-elem :<->text1755.htm#19479<->matrices-from-elem :: Transition Matrices from Elementary Basis (SYMMETRIC FUNCTIONS)
3<->matrices :<->text1755.htm<->matrices :: Transition Matrices (SYMMETRIC FUNCTIONS)
3<->alg_sym :<->text1750.htm<->alg_sym :: SYMMETRIC FUNCTIONS
3<->incidence-structure-design :<->text1758.htm<->incidence-structure-design :: INCIDENCE STRUCTURES AND DESIGNS
3<->introduction :<->text1759.htm<->introduction :: Introduction (INCIDENCE STRUCTURES AND DESIGNS)
3<->creation :<->text1760.htm<->creation :: Construction of Incidence  Structures and Designs (INCIDENCE STRUCTURES AND DESIGNS)
5<->IncidenceStructure  <->text1760.htm#19490<->IncidenceStructure< P | X >  : SetIndx, List -> Inc
5<->IncidenceStructure< v | X > <->text1760.htm#19490<->IncidenceStructure&lt; v | X &gt; : RngIntElt, List -&gt; Inc
5<->NearLinearSpace  <->text1760.htm#19491<->NearLinearSpace< P | X $\colon$ \parameters >  : SetIndx, List -> IncNsp
5<->NearLinearSpace< v | X : parameters > <->text1760.htm#19491<->NearLinearSpace&lt; v | X : parameters &gt; : RngIntElt, List -&gt; IncNsp
5<->LinearSpace  <->text1760.htm#19492<->LinearSpace< P | X $\colon$ \parameters >  : SetIndx, List -> IncLsp
5<->LinearSpace< v | X : parameters > <->text1760.htm#19492<->LinearSpace&lt; v | X : parameters &gt; : RngIntElt, List -&gt; IncLsp
5<->Design  <->text1760.htm#19493<->Design< t, P | X $\colon$ \parameters >  : RngIntElt, SetIndx, List -> Dsgn
5<->Design< t, v | X : parameters > <->text1760.htm#19493<->Design&lt; t, v | X : parameters &gt; : RngIntElt, RngIntElt, List -&gt; Dsgn
4<->Design_Constructors (Example H153E1)<->text1760.htm#19494<->Design_Constructors (Example H153E1)
4<->Example-Constructors :<->text1760.htm#19494<->Example-Constructors :: Design_Constructors (Example H153E1)
3<->creation :<->text1760.htm<->creation :: Construction of Incidence  Structures and Designs (INCIDENCE STRUCTURES AND DESIGNS)
3<->point-block-set :<->text1761.htm<->point-block-set :: The Point-Set and Block-Set of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
3<->definition :<->text1761.htm#19496<->definition :: Introduction (INCIDENCE STRUCTURES AND DESIGNS)
3<->creation :<->text1761.htm#19497<->creation :: Creating Point-Sets and Block-Sets (INCIDENCE STRUCTURES AND DESIGNS)
5<->PointSet(D) <->text1761.htm#19498<->PointSet(D) : Inc -&gt; IncPtSet
5<->BlockSet(D) <->text1761.htm#19499<->BlockSet(D) : Inc -&gt; IncBlkSet
3<->creation :<->text1761.htm#19497<->creation :: Creating Point-Sets and Block-Sets (INCIDENCE STRUCTURES AND DESIGNS)
3<->point-block :<->text1761.htm#19500<->point-block :: Creating Points and  Blocks (INCIDENCE STRUCTURES AND DESIGNS)
5<->Point(D, i) <->text1761.htm#19501<->Point(D, i) : Inc, RngIntElt -&gt; IncPt
5<->P . i <->text1761.htm#19502<->P . i : IncPtSet, RngIntElt -&gt; IncPt
5<->Representative(P) <->text1761.htm#19503<->Representative(P) : IncPtSet -&gt; IncPt
5<->Random(P) <->text1761.htm#19504<->Random(P) : IncPtSet -&gt; IncPt
5<->P ! x <->text1761.htm#19505<->P ! x : IncPtSet, Elt -&gt; Incpt
5<->Block(D, i) <->text1761.htm#19506<->Block(D, i) : Inc, RngIntElt -&gt; IncBlk
5<->B . i <->text1761.htm#19507<->B . i : IncBlkSet, RngIntElt -&gt; IncBlk
5<->Representative(B) <->text1761.htm#19508<->Representative(B) : IncBlkSet -&gt; IncBlk
5<->Random(B) <->text1761.htm#19509<->Random(B) : IncBlkSet -&gt; IncBlk
5<->B ! S <->text1761.htm#19510<->B ! S : IncBlkSet, SetEnum -&gt; IncBlk
5<->Representative(b) <->text1761.htm#19511<->Representative(b) : IncBlk -&gt; IncPt
5<->Random(b) <->text1761.htm#19512<->Random(b) : IncBlk -&gt; IncPt
4<->Design_points-blocks (Example H153E2)<->text1761.htm#19513<->Design_points-blocks (Example H153E2)
4<->Example-points-blocks :<->text1761.htm#19513<->Example-points-blocks :: Design_points-blocks (Example H153E2)
3<->point-block :<->text1761.htm#19500<->point-block :: Creating Points and  Blocks (INCIDENCE STRUCTURES AND DESIGNS)
3<->point-block-set :<->text1761.htm<->point-block-set :: The Point-Set and Block-Set of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
3<->operation :<->text1762.htm<->operation :: General Design Constructions (INCIDENCE STRUCTURES AND DESIGNS)
3<->creation-related :<->text1762.htm#19515<->creation-related :: The Construction of Related Structures (INCIDENCE STRUCTURES AND DESIGNS)
5<->Complement(D) <->text1762.htm#19516<->Complement(D) : Inc -&gt; Inc
5<->Dual(D) <->text1762.htm#19517<->Dual(D) : Inc -&gt; Inc
5<->Contraction(D, p) <->text1762.htm#19518<->Contraction(D, p) : Inc, IncPt -&gt; Inc
5<->Contraction(D, b) <->text1762.htm#19519<->Contraction(D, b) : Inc, IncBlk -&gt; Inc
5<->Residual(D, b) <->text1762.htm#19520<->Residual(D, b) : Inc, IncBlk -&gt; Inc
5<->Residual(D, p) <->text1762.htm#19521<->Residual(D, p) : Inc, IncPt -&gt; Inc
5<->Simplify(D) <->text1762.htm#19522<->Simplify(D) : Inc -&gt; Inc
5<->Sum(Q) <->text1762.htm#19523<->Sum(Q) : [ Inc ] -&gt; Inc
5<->Union(D, E) <->text1762.htm#19524<->Union(D, E) : Inc, Inc -&gt; Inc
5<->Restriction(D, S) <->text1762.htm#19525<->Restriction(D, S) : IncNsp, { Incpt } -&gt; IncNsp
4<->Design_related (Example H153E3)<->text1762.htm#19526<->Design_related (Example H153E3)
4<->Example-related :<->text1762.htm#19526<->Example-related :: Design_related (Example H153E3)
3<->creation-related :<->text1762.htm#19515<->creation-related :: The Construction of Related Structures (INCIDENCE STRUCTURES AND DESIGNS)
3<->witt :<->text1762.htm#19527<->witt :: The Witt Designs (INCIDENCE STRUCTURES AND DESIGNS)
5<->WittDesign(n) <->text1762.htm#19528<->WittDesign(n) : RngIntElt -&gt; Dsgn
4<->Design_wittex (Example H153E4)<->text1762.htm#19529<->Design_wittex (Example H153E4)
4<->Example-wittex :<->text1762.htm#19529<->Example-wittex :: Design_wittex (Example H153E4)
3<->witt :<->text1762.htm#19527<->witt :: The Witt Designs (INCIDENCE STRUCTURES AND DESIGNS)
3<->development :<->text1762.htm#19530<->development :: Difference Sets and their Development (INCIDENCE STRUCTURES AND DESIGNS)
5<->DifferenceSet(p, t) <->text1762.htm#19531<->DifferenceSet(p, t) : RngIntElt, MonStgElt -&gt; { RngIntResElt }
5<->SingerDifferenceSet(n, q) <->text1762.htm#19532<->SingerDifferenceSet(n, q) : RngIntElt, RngIntElt -&gt;					{ RngIntResElt }
5<->IsDifferenceSet(B) <->text1762.htm#19533<->IsDifferenceSet(B) : SetEnum -&gt; BoolElt, RngIntElt
5<->Development(B) <->text1762.htm#19534<->Development(B) : { RngElt } -&gt; Inc
5<->Development(T) <->text1762.htm#19535<->Development(T) : { { Elt } } -&gt; Inc
4<->Design_DevelopDifferenceSet (Example H153E5)<->text1762.htm#19536<->Design_DevelopDifferenceSet (Example H153E5)
4<->Example-DevelopDifferenceSet :<->text1762.htm#19536<->Example-DevelopDifferenceSet :: Design_DevelopDifferenceSet (Example H153E5)
3<->development :<->text1762.htm#19530<->development :: Difference Sets and their Development (INCIDENCE STRUCTURES AND DESIGNS)
3<->operation :<->text1762.htm<->operation :: General Design Constructions (INCIDENCE STRUCTURES AND DESIGNS)
3<->invariant :<->text1763.htm<->invariant :: Elementary Invariants of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
5<-># :: NumberOfPoints(D) <->text1763.htm#19538<-># :: NumberOfPoints(D) : Inc -&gt; RngInt
5<->NumberOfPoints(D) <->text1763.htm#19538<->NumberOfPoints(D) : Inc -&gt; RngInt
5<->Points(D) <->text1763.htm#19539<->Points(D) : Inc -&gt; { IncPt }
5<->Support(D) <->text1763.htm#19540<->Support(D) : Inc -&gt; { Elt }
5<->PointDegrees(D) <->text1763.htm#19541<->PointDegrees(D) : Inc -&gt; [ RngIntElt ]
5<-># :: NumberOfBlocks(D) <->text1763.htm#19542<-># :: NumberOfBlocks(D) : Inc -&gt; RngIntElt
5<->NumberOfBlocks(D) <->text1763.htm#19542<->NumberOfBlocks(D) : Inc -&gt; RngIntElt
5<->Blocks(D) <->text1763.htm#19543<->Blocks(D) : Inc -&gt; { IncBlk }
5<->BlockSizes :: BlockDegrees(D) <->text1763.htm#19544<->BlockSizes :: BlockDegrees(D) : Inc -&gt; [ RngIntElt ]
5<->BlockDegrees(D) <->text1763.htm#19544<->BlockDegrees(D) : Inc -&gt; [ RngIntElt ]
5<->Covalence(D, S) <->text1763.htm#19545<->Covalence(D, S) : Inc, { IncPt } -&gt; RngIntElt
5<->IncidenceMatrix(D) <->text1763.htm#19546<->IncidenceMatrix(D) : Inc -&gt; ModMatRngElt
5<->pRank(D, p) <->text1763.htm#19547<->pRank(D, p) : Inc,  RngIntElt -&gt;  RngIntElt
3<->invariant :<->text1763.htm<->invariant :: Elementary Invariants of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
3<->design-invariant :<->text1764.htm<->design-invariant :: Elementary Invariants of a Design (INCIDENCE STRUCTURES AND DESIGNS)
5<->Parameters(D) <->text1764.htm#19549<->Parameters(D) : Dsgn -&gt; Record
5<->ReplicationNumber(D) <->text1764.htm#19550<->ReplicationNumber(D) : Dsgn -&gt; RngIntElt
5<->BlockSize :: BlockDegree(D) <->text1764.htm#19551<->BlockSize :: BlockDegree(D) : Dsgn -&gt; RngIntElt
5<->BlockDegree(D) <->text1764.htm#19551<->BlockDegree(D) : Dsgn -&gt; RngIntElt
5<->Covalence(D, s) <->text1764.htm#19552<->Covalence(D, s) : Dsgn, RngIntElt -&gt; RngIntElt
5<->Order(D) <->text1764.htm#19553<->Order(D) : Dsgn -&gt; RngIntElt
5<->IntersectionNumber(D, i, j) <->text1764.htm#19554<->IntersectionNumber(D, i, j) : Dsgn, RngIntElt, RngIntElt -&gt; RngIntElt
5<->PascalTriangle(D) <->text1764.htm#19555<->PascalTriangle(D) : Dsgn -&gt; SeqEnum
4<->Design_design-invar (Example H153E6)<->text1764.htm#19556<->Design_design-invar (Example H153E6)
4<->Example-design-invar :<->text1764.htm#19556<->Example-design-invar :: Design_design-invar (Example H153E6)
3<->design-invariant :<->text1764.htm<->design-invariant :: Elementary Invariants of a Design (INCIDENCE STRUCTURES AND DESIGNS)
3<->operation-point-block :<->text1765.htm<->operation-point-block :: Operations on Points and  Blocks (INCIDENCE STRUCTURES AND DESIGNS)
5<->p in B <->text1765.htm#19558<->p in B : IncPt, IncBlk -&gt; BoolElt
5<->p notin B <->text1765.htm#19559<->p notin B : IncPt, IncBlk -&gt; BoolElt
5<->S subset B <->text1765.htm#19560<->S subset B : { IncPt }, IncBlk -&gt; BoolElt
5<->S notsubset B <->text1765.htm#19561<->S notsubset B : { IncPt }, IncBlk -&gt; BoolElt
5<->PointDegree(D, p) <->text1765.htm#19562<->PointDegree(D, p) : Inc, IncPt -&gt; RngIntElt
5<->BlockSize :: BlockDegree(D, B) <->text1765.htm#19563<->BlockSize :: BlockDegree(D, B) : Inc, IncBlk -&gt; RngIntElt
5<-># :: BlockDegree(D, B) <->text1765.htm#19563<-># :: BlockDegree(D, B) : Inc, IncBlk -&gt; RngIntElt
5<->BlockDegree(D, B) <->text1765.htm#19563<->BlockDegree(D, B) : Inc, IncBlk -&gt; RngIntElt
5<->Set(B) <->text1765.htm#19564<->Set(B) : IncBlk -&gt; { IncPt }
5<->Support(B) <->text1765.htm#19565<->Support(B) : IncBlk -&gt; { Elt }
5<->IsBlock(D, S) <->text1765.htm#19566<->IsBlock(D, S) : Inc, SetEnum -> BoolElt, IncBlk
5<->IsBlock(D, S) <->text1765.htm#19566<->IsBlock(D, S) : Inc, IncBlk -&gt; BoolElt, IncBlk
5<->Block :: Line(D, p, q) <->text1765.htm#19567<->Block :: Line(D, p, q) : Inc, IncPt, IncPt -&gt; IncBlk
5<->Line(D, p, q) <->text1765.htm#19567<->Line(D, p, q) : Inc, IncPt, IncPt -&gt; IncBlk
5<->ConnectionNumber(D, p, B) <->text1765.htm#19568<->ConnectionNumber(D, p, B) : Inc, IncPt, IncBlk -&gt; RngIntElt
4<->Design_pts-blks-ops (Example H153E7)<->text1765.htm#19569<->Design_pts-blks-ops (Example H153E7)
4<->Example-pts-blks-ops :<->text1765.htm#19569<->Example-pts-blks-ops :: Design_pts-blks-ops (Example H153E7)
3<->operation-point-block :<->text1765.htm<->operation-point-block :: Operations on Points and  Blocks (INCIDENCE STRUCTURES AND DESIGNS)
3<->boolean :<->text1766.htm<->boolean :: Elementary Properties of Incidence Structures and Designs (INCIDENCE STRUCTURES AND DESIGNS)
5<->IsSimple(D) <->text1766.htm#19571<->IsSimple(D) : Inc -&gt; BoolElt
5<->IsTrivial(D) <->text1766.htm#19572<->IsTrivial(D) : Inc -&gt; BoolElt
5<->IsSelfDual(D) <->text1766.htm#19573<->IsSelfDual(D) : Inc -&gt; BoolElt
5<->IsUniform(D) <->text1766.htm#19574<->IsUniform(D) : Inc -&gt; BoolElt, RngIntElt
5<->IsNearLinearSpace(D) <->text1766.htm#19575<->IsNearLinearSpace(D) : Inc -&gt; BoolElt
5<->IsLinearSpace(D) <->text1766.htm#19576<->IsLinearSpace(D) : Inc -&gt; BoolElt
5<->IsDesign(D, t: parameters) <->text1766.htm#19577<->IsDesign(D, t: parameters) : Inc, RngIntElt -&gt; BoolElt, RngIntElt
5<->IsBalanced(D, t: parameters) <->text1766.htm#19578<->IsBalanced(D, t: parameters) : Inc, RngIntElt -&gt; BoolElt, RngIntElt
5<->IsComplete(D) <->text1766.htm#19579<->IsComplete(D) : Inc -&gt; BoolElt
5<->IsSymmetric(D) <->text1766.htm#19580<->IsSymmetric(D) : Dsgn -&gt; BoolElt
5<->IsSteiner(D, t) <->text1766.htm#19581<->IsSteiner(D, t) : Dsgn, RngIntElt -&gt; BoolElt
5<->IsPointRegular(D) <->text1766.htm#19582<->IsPointRegular(D) : IncNsp -&gt; BoolElt, RngIntElt
5<->IsLineRegular(D) <->text1766.htm#19583<->IsLineRegular(D) : IncNsp -&gt; BoolElt, RngIntElt
3<->boolean :<->text1766.htm<->boolean :: Elementary Properties of Incidence Structures and Designs (INCIDENCE STRUCTURES AND DESIGNS)
3<->resolutions :<->text1767.htm<->resolutions :: Resolutions, Parallelisms and Parallel Classes (INCIDENCE STRUCTURES AND DESIGNS)
5<->HasResolution(D) <->text1767.htm#19585<->HasResolution(D) : Inc -&gt; BoolElt, { SetEnum }, RngIntElt
5<->HasResolution(D, &lambda;) <->text1767.htm#19586<->HasResolution(D, &lambda;) : Inc, RngIntElt -&gt; BoolElt, { SetEnum }
5<->AllResolutions(D) <->text1767.htm#19587<->AllResolutions(D) : Inc  -&gt; SeqEnum
5<->AllResolutions(D, &lambda;) <->text1767.htm#19588<->AllResolutions(D, &lambda;) : Inc, RngIntElt  -&gt; SeqEnum
5<->IsResolution(D, P) <->text1767.htm#19589<->IsResolution(D, P) : Inc, SetEnum[SetEnum] -&gt; BoolElt, RngIntElt
5<->HasParallelism(D: parameters) <->text1767.htm#19590<->HasParallelism(D: parameters) : Inc, RngIntElt -&gt; BoolElt, { SetEnum }
5<->AllParallelisms(D) <->text1767.htm#19591<->AllParallelisms(D) : Inc  -&gt; SeqEnum
5<->IsParallelism(D, P) <->text1767.htm#19592<->IsParallelism(D, P) : Inc, SetEnum[SetEnum] -&gt; BoolElt, RngIntElt
5<->HasParallelClass(D) <->text1767.htm#19593<->HasParallelClass(D) : Inc -&gt; BoolElt, { IncBlk }
5<->IsParallelClass(D, B, C) <->text1767.htm#19594<->IsParallelClass(D, B, C) : Inc, IncBlk, IncBlk -&gt; BoolElt, { IncBlk }
5<->AllParallelClasses(D) <->text1767.htm#19595<->AllParallelClasses(D) : Inc -&gt;  SeqEnum
4<->Design_resol-parallel (Example H153E8)<->text1767.htm#19596<->Design_resol-parallel (Example H153E8)
4<->Example-resol-parallel :<->text1767.htm#19596<->Example-resol-parallel :: Design_resol-parallel (Example H153E8)
3<->resolutions :<->text1767.htm<->resolutions :: Resolutions, Parallelisms and Parallel Classes (INCIDENCE STRUCTURES AND DESIGNS)
3<->conversion :<->text1768.htm<->conversion :: Conversion Functions (INCIDENCE STRUCTURES AND DESIGNS)
5<->IncidenceStructure(I) <->text1768.htm#19598<->IncidenceStructure(I) : Inc -&gt; Inc
5<->NearLinearSpace(I) <->text1768.htm#19599<->NearLinearSpace(I) : Inc -&gt; IncNsp
5<->LinearSpace(I) <->text1768.htm#19600<->LinearSpace(I) : Inc -&gt; IncLsp
5<->Design(I, t) <->text1768.htm#19601<->Design(I, t) : Inc, RngIntElt -&gt; Dsgn
4<->Design_conv (Example H153E9)<->text1768.htm#19602<->Design_conv (Example H153E9)
4<->Example-conv :<->text1768.htm#19602<->Example-conv :: Design_conv (Example H153E9)
3<->conversion :<->text1768.htm<->conversion :: Conversion Functions (INCIDENCE STRUCTURES AND DESIGNS)
3<->equality :<->text1769.htm<->equality :: Identity and Isomorphism (INCIDENCE STRUCTURES AND DESIGNS)
5<->D eq E <->text1769.htm#19604<->D eq E : Inc, Inc -&gt; BoolElt
5<->D ne E <->text1769.htm#19605<->D ne E : Inc, Inc -&gt; BoolElt
5<->IsIsomorphic(D, E: parameters) <->text1769.htm#19606<->IsIsomorphic(D, E: parameters) : Inc, Inc -&gt; BoolElt, Map
3<->equality :<->text1769.htm<->equality :: Identity and Isomorphism (INCIDENCE STRUCTURES AND DESIGNS)
3<->automorphism-group :<->text1770.htm<->automorphism-group :: The Automorphism Group of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
3<->creation :<->text1770.htm#19608<->creation :: Construction of Automorphism  Groups (INCIDENCE STRUCTURES AND DESIGNS)
5<->AutomorphismGroup(D) <->text1770.htm#19609<->AutomorphismGroup(D) : Inc -&gt; GrpPerm, GSet, GSet, PowMap, Map
5<->AutomorphismSubgroup(D) <->text1770.htm#19610<->AutomorphismSubgroup(D) : Inc -&gt; GrpPerm, PowMap, Map
5<->AutomorphismGroupStabilizer(D, k) <->text1770.htm#19611<->AutomorphismGroupStabilizer(D, k) : Inc, RngIntElt -&gt; GrpPerm, PowMap, Map
5<->PointGroup(D) <->text1770.htm#19612<->PointGroup(D) : Inc -&gt; GrpPerm, GSet
5<->BlockGroup(D) <->text1770.htm#19613<->BlockGroup(D) : Inc -&gt; GrpPerm
5<->Aut(D) <->text1770.htm#19614<->Aut(D) : Inc -&gt; PowMapAut, Map
4<->Design_auto (Example H153E10)<->text1770.htm#19615<->Design_auto (Example H153E10)
4<->Example-auto :<->text1770.htm#19615<->Example-auto :: Design_auto (Example H153E10)
3<->creation :<->text1770.htm#19608<->creation :: Construction of Automorphism  Groups (INCIDENCE STRUCTURES AND DESIGNS)
3<->action :<->text1770.htm#19616<->action :: Action of Automorphisms (INCIDENCE STRUCTURES AND DESIGNS)
5<->Image(g, Y, y) <->text1770.htm#19617<->Image(g, Y, y) : GrpPermElt, GSet, Elt -&gt; Elt
5<->Orbit(G, Y, y) <->text1770.htm#19618<->Orbit(G, Y, y) : GrpPerm, GSet, Elt -&gt; GSet
5<->Orbits(G, Y) <->text1770.htm#19619<->Orbits(G, Y) : GrpPerm, GSet -&gt; [ GSet ]
5<->Stabilizer(G, Y, y) <->text1770.htm#19620<->Stabilizer(G, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->Action(G, Y) <->text1770.htm#19621<->Action(G, Y) : GrpPerm, GSet -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->ActionImage(G, Y) <->text1770.htm#19622<->ActionImage(G, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->ActionKernel(G, Y) <->text1770.htm#19623<->ActionKernel(G, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->IsPointTransitive(D) <->text1770.htm#19624<->IsPointTransitive(D) : Inc -&gt; BoolElt
5<->IsBlockTransitive(D) <->text1770.htm#19625<->IsBlockTransitive(D) : Inc -&gt; BoolElt
4<->Design_automorphism (Example H153E11)<->text1770.htm#19626<->Design_automorphism (Example H153E11)
4<->Example-automorphism :<->text1770.htm#19626<->Example-automorphism :: Design_automorphism (Example H153E11)
3<->action :<->text1770.htm#19616<->action :: Action of Automorphisms (INCIDENCE STRUCTURES AND DESIGNS)
3<->automorphism-group :<->text1770.htm<->automorphism-group :: The Automorphism Group of an Incidence Structure (INCIDENCE STRUCTURES AND DESIGNS)
3<->graph-code :<->text1771.htm<->graph-code :: Incidence Structures, Graphs and Codes (INCIDENCE STRUCTURES AND DESIGNS)
5<->IncidenceStructure(G) <->text1771.htm#19628<->IncidenceStructure(G) : Grph -&gt; Inc
5<->PointGraph(D) <->text1771.htm#19629<->PointGraph(D) : Inc -&gt; Grph
5<->BlockGraph(D) <->text1771.htm#19630<->BlockGraph(D) : Inc -&gt; Grph
5<->IncidenceGraph(D) <->text1771.htm#19631<->IncidenceGraph(D) : Inc -&gt; Grph
5<->LinearCode(D, K) <->text1771.htm#19632<->LinearCode(D, K) : Inc, FldFin -&gt; Code
4<->Design_graphs (Example H153E12)<->text1771.htm#19633<->Design_graphs (Example H153E12)
4<->Example-graphs :<->text1771.htm#19633<->Example-graphs :: Design_graphs (Example H153E12)
3<->graph-code :<->text1771.htm<->graph-code :: Incidence Structures, Graphs and Codes (INCIDENCE STRUCTURES AND DESIGNS)
3<->matrix-aut :<->text1772.htm<->matrix-aut :: Automorphisms of Matrices (INCIDENCE STRUCTURES AND DESIGNS)
5<->M ^ x <->text1772.htm#19635<->M ^ x : Mtrx, GrpPermElt -&gt; Mtrx
5<->AutomorphismGroup(M) <->text1772.htm#19636<->AutomorphismGroup(M) : Mtrx -&gt; GrpPerm
5<->IsIsomorphic(M, N) <->text1772.htm#19637<->IsIsomorphic(M, N) : Mtrx, Mtrx -&gt; BoolElt, GrpPermElt
4<->Design_FanoAuto (Example H153E13)<->text1772.htm#19638<->Design_FanoAuto (Example H153E13)
4<->Example-FanoAuto :<->text1772.htm#19638<->Example-FanoAuto :: Design_FanoAuto (Example H153E13)
3<->matrix-aut :<->text1772.htm<->matrix-aut :: Automorphisms of Matrices (INCIDENCE STRUCTURES AND DESIGNS)
3<->incidence-structure-design :<->text1758.htm<->incidence-structure-design :: INCIDENCE STRUCTURES AND DESIGNS
3<->incidence-structure-hadamard :<->text1774.htm<->incidence-structure-hadamard :: HADAMARD MATRICES
3<->introduction :<->text1775.htm<->introduction :: Introduction (HADAMARD MATRICES)
3<->hadamard :<->text1776.htm<->hadamard :: Equivalence Testing (HADAMARD MATRICES)
5<->IsHadamard(H) <->text1776.htm#19643<->IsHadamard(H) : AlgMatElt -&gt; BoolElt
5<->HadamardNormalize(H) <->text1776.htm#19644<->HadamardNormalize(H) : AlgMatElt -&gt; AlgMatElt
5<->HadamardCanonicalForm(H) <->text1776.htm#19645<->HadamardCanonicalForm(H) : AlgMatElt -&gt; AlgMatElt, AlgMatElt, AlgMatElt
5<->HadamardInvariant(H) <->text1776.htm#19646<->HadamardInvariant(H) : AlgMatElt -&gt; [ RngIntElt ]
5<->IsHadamardEquivalent(H, J : parameters) <->text1776.htm#19647<->IsHadamardEquivalent(H, J : parameters) : AlgMatElt, AlgMatElt -&gt; BoolElt, AlgMatElt, AlgMatElt
5<->HadamardMatrixToInteger(H) <->text1776.htm#19648<->HadamardMatrixToInteger(H) : AlgMatElt -&gt; RngIntElt
5<->HadamardMatrixFromInteger(x, n) <->text1776.htm#19649<->HadamardMatrixFromInteger(x, n) : RngIntElt, RngIntElt -&gt; AlgMatElt
4<->Hadamard_hadamard-equiv (Example H154E1)<->text1776.htm#19650<->Hadamard_hadamard-equiv (Example H154E1)
4<->Example-hadamard-equiv :<->text1776.htm#19650<->Example-hadamard-equiv :: Hadamard_hadamard-equiv (Example H154E1)
3<->hadamard :<->text1776.htm<->hadamard :: Equivalence Testing (HADAMARD MATRICES)
3<->designs :<->text1777.htm<->designs :: Associated 3--Designs (HADAMARD MATRICES)
5<->HadamardRowDesign(H, i) <->text1777.htm#19652<->HadamardRowDesign(H, i) : AlgMatElt, RngIntElt -&gt; Dsgn
5<->HadamardColumnDesign(H, i) <->text1777.htm#19653<->HadamardColumnDesign(H, i) : AlgMatElt, RngIntElt -&gt; Dsgn
4<->Hadamard_hadamard-designs (Example H154E2)<->text1777.htm#19654<->Hadamard_hadamard-designs (Example H154E2)
4<->Example-hadamard-designs :<->text1777.htm#19654<->Example-hadamard-designs :: Hadamard_hadamard-designs (Example H154E2)
3<->designs :<->text1777.htm<->designs :: Associated 3--Designs (HADAMARD MATRICES)
3<->hadamard-misc :<->text1778.htm<->hadamard-misc :: Automorphism Group (HADAMARD MATRICES)
5<->HadamardAutomorphismGroup(H : parameters) <->text1778.htm#19656<->HadamardAutomorphismGroup(H : parameters) : AlgMatElt -&gt; AlgMatElt
3<->hadamard-misc :<->text1778.htm<->hadamard-misc :: Automorphism Group (HADAMARD MATRICES)
3<->hadamard-database :<->text1779.htm<->hadamard-database :: Databases (HADAMARD MATRICES)
5<->HadamardDatabase() <->text1779.htm#19658<->HadamardDatabase() : -&gt; DB
5<->SkewHadamardDatabase() <->text1779.htm#19659<->SkewHadamardDatabase() : -&gt; DB
5<->Matrix(D, n, k) <->text1779.htm#19660<->Matrix(D, n, k) : DB, RngIntElt, RngIntElt -&gt; AlgMatElt
5<->Matrices(D, n) <->text1779.htm#19661<->Matrices(D, n) : DB, RngIntElt -&gt; [ AlgMatElt ]
5<->DegreeRange(D) <->text1779.htm#19662<->DegreeRange(D) : DB -&gt; RngIntElt, RngIntElt
5<->Degrees(D) <->text1779.htm#19663<->Degrees(D) : DB -&gt; [ RngIntElt ]
5<->NumberOfMatrices(D, n) <->text1779.htm#19664<->NumberOfMatrices(D, n) : DB, RngIntElt -&gt; RngIntElt
4<->Hadamard_hadamard_db_eg (Example H154E3)<->text1779.htm#19665<->Hadamard_hadamard_db_eg (Example H154E3)
4<->Example-hadamard_db_eg :<->text1779.htm#19665<->Example-hadamard_db_eg :: Hadamard_hadamard_db_eg (Example H154E3)
3<->hadamard-database-gen :<->text1779.htm#19666<->hadamard-database-gen :: Updating the Databases (HADAMARD MATRICES)
5<->HadamardDatabaseInformation(D : parameters) <->text1779.htm#19667<->HadamardDatabaseInformation(D : parameters) : DB -&gt; Rec
5<->HadamardDatabaseInformationEmpty(: parameters) <->text1779.htm#19668<->HadamardDatabaseInformationEmpty(: parameters) : -&gt; Rec
5<->UpdateHadamardDatabase(~R, S : parameters) <->text1779.htm#19669<->UpdateHadamardDatabase(~R, S : parameters) : Rec, SeqEnum -&gt;
5<->WriteHadamardDatabase(S, ~R) <->text1779.htm#19670<->WriteHadamardDatabase(S, ~R) : MonStgElt, Rec -&gt;
5<->WriteRawHadamardData(S, R) <->text1779.htm#19671<->WriteRawHadamardData(S, R) : MonStgElt, Rec -&gt;
5<->SetVerbose("HadamardDB", v) <->text1779.htm#19672<->SetVerbose("HadamardDB", v) : MonStgElt, RngIntElt -&gt;
4<->Hadamard_hadamard_db_update (Example H154E4)<->text1779.htm#19673<->Hadamard_hadamard_db_update (Example H154E4)
4<->Example-hadamard_db_update :<->text1779.htm#19673<->Example-hadamard_db_update :: Hadamard_hadamard_db_update (Example H154E4)
3<->hadamard-database-gen :<->text1779.htm#19666<->hadamard-database-gen :: Updating the Databases (HADAMARD MATRICES)
3<->hadamard-database :<->text1779.htm<->hadamard-database :: Databases (HADAMARD MATRICES)
3<->incidence-structure-hadamard :<->text1774.htm<->incidence-structure-hadamard :: HADAMARD MATRICES
3<->graph :<->text1782.htm<->graph :: GRAPHS
3<->introduction :<->text1783.htm<->introduction :: Introduction (GRAPHS)
3<->graph-digraph :<->text1784.htm<->graph-digraph :: Construction of Graphs and Digraphs (GRAPHS)
3<->creation-graph-size :<->text1784.htm#19679<->creation-graph-size :: Bounds on the Graph Order (GRAPHS)
5<->GraphSizeInBytes(n, m : parameters)<->text1784.htm#19680<->GraphSizeInBytes(n, m : parameters): RngIntElt, RngIntElt -&gt; RngIntElt
4<->Graph_Grph_Size (Example H155E1)<->text1784.htm#19681<->Graph_Grph_Size (Example H155E1)
4<->Example-Grph_Size :<->text1784.htm#19681<->Example-Grph_Size :: Graph_Grph_Size (Example H155E1)
3<->creation-graph-size :<->text1784.htm#19679<->creation-graph-size :: Bounds on the Graph Order (GRAPHS)
3<->creation-graph :<->text1784.htm#19682<->creation-graph :: Construction of a General Graph (GRAPHS)
5<->Graph <->text1784.htm#19683<->Graph< S | edges $\colon$ \parameters > : SetEnum, List -> GrphUnd, GrphVertSet, GrphEdgeSet
5<->Graph  <->text1784.htm#19683<->Graph< S | edges $\colon$ \parameters>  : SetIndx, List -> GrphUnd, GrphVertSet, GrphEdgeSet
5<->Graph< n | edges : parameters> <->text1784.htm#19683<->Graph&lt; n | edges : parameters&gt; : RngIntElt, List -&gt; GrphUnd, GrphVertSet, GrphEdgeSet
5<->IncidenceGraph(A) <->text1784.htm#19684<->IncidenceGraph(A) : ModMatRngElt -&gt; GrphUnd
4<->Graph_Constructors (Example H155E2)<->text1784.htm#19685<->Graph_Constructors (Example H155E2)
4<->Example-Constructors :<->text1784.htm#19685<->Example-Constructors :: Graph_Constructors (Example H155E2)
4<->Graph_TutteCage (Example H155E3)<->text1784.htm#19686<->Graph_TutteCage (Example H155E3)
4<->Example-TutteCage :<->text1784.htm#19686<->Example-TutteCage :: Graph_TutteCage (Example H155E3)
3<->creation-graph :<->text1784.htm#19682<->creation-graph :: Construction of a General Graph (GRAPHS)
3<->creation-digraph :<->text1784.htm#19687<->creation-digraph :: Construction of a General Digraph (GRAPHS)
5<->Digraph  <->text1784.htm#19688<->Digraph< S | edges $\colon$ \parameters>  : SetEnum, List -> GrphDir
5<->Digraph  <->text1784.htm#19688<->Digraph< S | edges $\colon$ \parameters>  : SetIndx, List -> GrphDir
5<->Digraph< n | edges : parameters> <->text1784.htm#19688<->Digraph&lt; n | edges : parameters&gt; : RngIntElt, List -&gt; GrphDir
5<->IncidenceDigraph(A) <->text1784.htm#19689<->IncidenceDigraph(A) : ModMatRngElt -&gt; GrphDir
4<->Graph_Constructors (Example H155E4)<->text1784.htm#19690<->Graph_Constructors (Example H155E4)
4<->Example-Constructors :<->text1784.htm#19690<->Example-Constructors :: Graph_Constructors (Example H155E4)
3<->creation-digraph :<->text1784.htm#19687<->creation-digraph :: Construction of a General Digraph (GRAPHS)
3<->support :<->text1784.htm#19691<->support :: Operations on the Support (GRAPHS)
5<->Support(V) <->text1784.htm#19692<->Support(V) : GrphVertSet -> SetIndx
5<->Support(G) <->text1784.htm#19692<->Support(G) : Grph -&gt; SetIndx
5<->ChangeSupport(G, S) <->text1784.htm#19693<->ChangeSupport(G, S) : Grph, SetIndx -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->ChangeSupport(~G, S) <->text1784.htm#19694<->ChangeSupport(~G, S) : Grph, SetIndx -&gt;
5<->StandardGraph(G) <->text1784.htm#19695<->StandardGraph(G) : Grph -&gt; Grph
4<->Graph_Constructors (Example H155E5)<->text1784.htm#19696<->Graph_Constructors (Example H155E5)
4<->Example-Constructors :<->text1784.htm#19696<->Example-Constructors :: Graph_Constructors (Example H155E5)
3<->support :<->text1784.htm#19691<->support :: Operations on the Support (GRAPHS)
3<->standard-graph :<->text1784.htm#19697<->standard-graph :: Construction of a Standard Graph (GRAPHS)
5<->BipartiteGraph(m, n) <->text1784.htm#19698<->BipartiteGraph(m, n) : RngIntElt, RngIntElt -&gt; GrphUnd
5<->CompleteGraph(n) <->text1784.htm#19699<->CompleteGraph(n) : RngIntElt -&gt; GrphUnd
5<->KCubeGraph(n : parameters) <->text1784.htm#19700<->KCubeGraph(n : parameters) : RngIntElt -&gt; GrphUnd
5<->MultipartiteGraph(Q) <->text1784.htm#19701<->MultipartiteGraph(Q) : [RngIntElt] -&gt; GrphUnd
5<->EmptyGraph(n : parameters) <->text1784.htm#19702<->EmptyGraph(n : parameters) : RngIntElt -&gt; GrphUnd
5<->NullGraph( : parameters) <->text1784.htm#19703<->NullGraph( : parameters) : -&gt; GrphUnd
5<->PathGraph(n : parameters) <->text1784.htm#19704<->PathGraph(n : parameters) : RngIntElt -&gt; GrphUnd
5<->PolygonGraph(n : parameters) <->text1784.htm#19705<->PolygonGraph(n : parameters) : RngIntElt -&gt; GrphUnd
5<->RandomGraph(n, r : parameters) <->text1784.htm#19706<->RandomGraph(n, r : parameters) : RngIntElt, FldReElt -&gt; GrphUnd
5<->RandomTree(n : parameters) <->text1784.htm#19707<->RandomTree(n : parameters) : RngIntElt -&gt; GrphUnd
3<->standard-graph :<->text1784.htm#19697<->standard-graph :: Construction of a Standard Graph (GRAPHS)
3<->standard-digraph :<->text1784.htm#19708<->standard-digraph :: Construction of a Standard  Digraph (GRAPHS)
5<->CompleteDigraph(n) <->text1784.htm#19709<->CompleteDigraph(n) : RngIntElt -&gt; GrphDir
5<->EmptyDigraph(n : parameters) <->text1784.htm#19710<->EmptyDigraph(n : parameters) : RngIntElt -&gt; GrphDir
5<->RandomDigraph(n, r : parameters) <->text1784.htm#19711<->RandomDigraph(n, r : parameters) : RngIntElt, FldReElt -&gt; GrphDir
4<->Graph_Constructors (Example H155E6)<->text1784.htm#19712<->Graph_Constructors (Example H155E6)
4<->Example-Constructors :<->text1784.htm#19712<->Example-Constructors :: Graph_Constructors (Example H155E6)
3<->standard-digraph :<->text1784.htm#19708<->standard-digraph :: Construction of a Standard  Digraph (GRAPHS)
3<->graph-digraph :<->text1784.htm<->graph-digraph :: Construction of Graphs and Digraphs (GRAPHS)
3<->sparse-graphs :<->text1785.htm<->sparse-graphs :: Graphs with a Sparse Representation (GRAPHS)
5<->HasDenseRep :: HasSparseRep(G) <->text1785.htm#19714<->HasDenseRep :: HasSparseRep(G) : Grph -&gt; BoolElt
5<->HasSparseRepOnly :: HasSparseRep(G) <->text1785.htm#19714<->HasSparseRepOnly :: HasSparseRep(G) : Grph -&gt; BoolElt
5<->HasDenseRepOnly :: HasSparseRep(G) <->text1785.htm#19714<->HasDenseRepOnly :: HasSparseRep(G) : Grph -&gt; BoolElt
5<->HasDenseAndSparseRep :: HasSparseRep(G) <->text1785.htm#19714<->HasDenseAndSparseRep :: HasSparseRep(G) : Grph -&gt; BoolElt
5<->HasSparseRep(G) <->text1785.htm#19714<->HasSparseRep(G) : Grph -&gt; BoolElt
4<->Graph_SparseReps (Example H155E7)<->text1785.htm#19715<->Graph_SparseReps (Example H155E7)
4<->Example-SparseReps :<->text1785.htm#19715<->Example-SparseReps :: Graph_SparseReps (Example H155E7)
3<->sparse-graphs :<->text1785.htm<->sparse-graphs :: Graphs with a Sparse Representation (GRAPHS)
3<->vertex-edge-set :<->text1786.htm<->vertex-edge-set :: The Vertex--Set and Edge--Set of a Graph (GRAPHS)
3<->definition :<->text1786.htm#19717<->definition :: Introduction (GRAPHS)
3<->creation :<->text1786.htm#19718<->creation :: Creating Edges and Vertices (GRAPHS)
5<->EdgeSet(G) <->text1786.htm#19719<->EdgeSet(G) : Grph -&gt; GrphEdgeSet
5<->Edges(G) <->text1786.htm#19720<->Edges(G) : Grph -&gt; {@ GrphEdge @}
5<->VertexSet(G) <->text1786.htm#19721<->VertexSet(G) : Grph -&gt; GrphVertSet
5<->Vertices(G) <->text1786.htm#19722<->Vertices(G) : Grph -&gt; { GrphVert }
5<->V ! v <->text1786.htm#19723<->V ! v : GrphVertSet, . -&gt; GrphVert
5<->V . i <->text1786.htm#19724<->V . i : GrphVertSet, RngIntElt -&gt; GrphVert
5<->Index(v) <->text1786.htm#19725<->Index(v) : GrphVert -&gt; RngIntElt
5<->E ! { u, v } <->text1786.htm#19726<->E ! { u, v } : GrphEdgeSet,  .  -&gt; GrphEdge
5<->E ! [u, v] <->text1786.htm#19727<->E ! [u, v] : GrphEdgeSet, [ . ] -&gt; GrphEdge
5<->E . i <->text1786.htm#19728<->E . i : GrphEdgeSet, RngIntElt -&gt; GrphEdge
4<->Graph_EdgeSets (Example H155E8)<->text1786.htm#19729<->Graph_EdgeSets (Example H155E8)
4<->Example-EdgeSets :<->text1786.htm#19729<->Example-EdgeSets :: Graph_EdgeSets (Example H155E8)
3<->creation :<->text1786.htm#19718<->creation :: Creating Edges and Vertices (GRAPHS)
3<->operation :<->text1786.htm#19730<->operation :: Operations on Vertex-Sets and  Edge-Sets (GRAPHS)
5<->\# S <->text1786.htm#19731<->\# S : GrphEdgeSet -> RngIntElt
5<-># S <->text1786.htm#19731<-># S : GrphVertSet -&gt; RngIntElt
5<->s in S <->text1786.htm#19732<->s in S : GrphEdge, GrphEdgeSet -> BoolElt
5<->s in S <->text1786.htm#19732<->s in S : GrphVert, GrphVertSet -&gt; BoolElt
5<->s notin S <->text1786.htm#19733<->s notin S : GrphEdge, GrphEdgeSet -> BoolElt
5<->s notin S <->text1786.htm#19733<->s notin S : GrphVert, GrphVertSet -&gt; BoolElt
5<->S subset T <->text1786.htm#19734<->S subset T : GrphEdgeSet, GrphEdgeSet -> BoolElt
5<->S subset T <->text1786.htm#19734<->S subset T : GrphVertSet, GrphVertSet -&gt; BoolElt
5<->S notsubset T <->text1786.htm#19735<->S notsubset T : GrphEdgeSet, GrphEdgeSet -> BoolElt
5<->S notsubset T <->text1786.htm#19735<->S notsubset T : GrphVertSet, GrphVertSet -&gt; BoolElt
5<->S eq T <->text1786.htm#19736<->S eq T : GrphEdgeSet, GrphEdgeSet -> BoolElt
5<->S eq T <->text1786.htm#19736<->S eq T : GrphVertSet, GrphVertSet -&gt; BoolElt
5<->s eq t <->text1786.htm#19737<->s eq t : GrphEdge, GrphEdge -> BoolElt
5<->s eq t <->text1786.htm#19737<->s eq t : GrphVert, GrphVert -&gt; BoolElt
5<->S ne T <->text1786.htm#19738<->S ne T : GrphEdgeSet, GrphEdgeSet -> BoolElt
5<->S ne T <->text1786.htm#19738<->S ne T : GrphVertSet, GrphVertSet -&gt; BoolElt
5<->s ne t <->text1786.htm#19739<->s ne t : GrphEdge, GrphEdge -> BoolElt
5<->s ne t <->text1786.htm#19739<->s ne t : GrphVert, GrphVert -&gt; BoolElt
5<->ParentGraph(S) <->text1786.htm#19740<->ParentGraph(S) : GrphEdgeSet -> Grph
5<->ParentGraph(S) <->text1786.htm#19740<->ParentGraph(S) : GrphVertSet -&gt; Grph
5<->ParentGraph(s) <->text1786.htm#19741<->ParentGraph(s) : GrphEdge -> Grph
5<->ParentGraph(s) <->text1786.htm#19741<->ParentGraph(s) : GrphVert -&gt; Grph
5<->Random(S) <->text1786.htm#19742<->Random(S) : GrphEdgeSet -> GrphEdge
5<->Random(S) <->text1786.htm#19742<->Random(S) : GrphVertSet -&gt; GrphVert
5<->Representative(S) <->text1786.htm#19743<->Representative(S) : GrphVertSet -&gt; GrphVert
5<->Representative(S) <->text1786.htm#19743<->Representative(S) : GrphEdgeSet -> GrphEdge
5<->Rep(S) <->text1786.htm#19743<->Rep(S) : GrphEdgeSet -> GrphEdge
5<->Representative(S) <->text1786.htm#19743<->Representative(S) : GrphVertSet -&gt; GrphVert
5<->for x in S do ... end for;<->text1786.htm#19744<->for x in S do ... end for;
5<->for-random :<->text1786.htm#19745<->for-random :: for random x in S do ... end for;
3<->operation :<->text1786.htm#19730<->operation :: Operations on Vertex-Sets and  Edge-Sets (GRAPHS)
3<->operation :<->text1786.htm#19746<->operation :: Operations on Edges and Vertices (GRAPHS)
5<->EndVertices(e) <->text1786.htm#19747<->EndVertices(e) : GrphEdge -> [ GrphVert ]
5<->EndVertices(e) <->text1786.htm#19747<->EndVertices(e) : GrphEdge -&gt; { GrphVert }
5<->InitialVertex(e) <->text1786.htm#19748<->InitialVertex(e) : GrphEdge -&gt; GrphVert
5<->TerminalVertex(e) <->text1786.htm#19749<->TerminalVertex(e) : GrphEdge -&gt; GrphVert
5<->IncidentEdges(u) <->text1786.htm#19750<->IncidentEdges(u) : GrphVert -&gt; { GrphEdge }
3<->operation :<->text1786.htm#19746<->operation :: Operations on Edges and Vertices (GRAPHS)
3<->vertex-edge-set :<->text1786.htm<->vertex-edge-set :: The Vertex--Set and Edge--Set of a Graph (GRAPHS)
3<->labels :<->text1787.htm<->labels :: Labelled, Capacitated and  Weighted Graphs (GRAPHS)
3<->operation :<->text1788.htm<->operation :: Standard Constructions for  Graphs (GRAPHS)
3<->subgraph-supergraph-quotient :<->text1788.htm#19753<->subgraph-supergraph-quotient :: Subgraphs and Quotient Graphs (GRAPHS)
5<->sub< G | list > <->text1788.htm#19754<->sub&lt; G | list &gt; : Grph, List -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->quo< G | P > <->text1788.htm#19755<->quo&lt; G | P &gt; : Grph, { { GrphVert } } -&gt; Grph, GrphVertSet, GrphEdgeSet
4<->Graph_Subgraph (Example H155E9)<->text1788.htm#19756<->Graph_Subgraph (Example H155E9)
4<->Example-Subgraph :<->text1788.htm#19756<->Example-Subgraph :: Graph_Subgraph (Example H155E9)
4<->Graph_Quotient (Example H155E10)<->text1788.htm#19757<->Graph_Quotient (Example H155E10)
4<->Example-Quotient :<->text1788.htm#19757<->Example-Quotient :: Graph_Quotient (Example H155E10)
3<->subgraph-supergraph-quotient :<->text1788.htm#19753<->subgraph-supergraph-quotient :: Subgraphs and Quotient Graphs (GRAPHS)
3<->mutation :<->text1788.htm#19758<->mutation :: Incremental Construction of  Graphs (GRAPHS)
3<->graph-mutation-add-v :<->text1788.htm#19759<->graph-mutation-add-v :: Adding Vertices (GRAPHS)
5<->G + n <->text1788.htm#19760<->G + n : Grph, RngIntElt -&gt; Grph
5<->AddVertex :: G +:= n <->text1788.htm#19761<->AddVertex :: G +:= n : Grph, RngIntElt -&gt;
5<->AddVertices :: G +:= n <->text1788.htm#19761<->AddVertices :: G +:= n : Grph, RngIntElt -&gt;
5<->G +:= n <->text1788.htm#19761<->G +:= n : Grph, RngIntElt -&gt;
5<->AddVertex(~G, l) <->text1788.htm#19762<->AddVertex(~G, l) : Grph, . -&gt;
5<->AddVertices(~G, n, L) <->text1788.htm#19763<->AddVertices(~G, n, L) : Grph, RngIntElt, SeqEnum -&gt;
3<->graph-mutation-add-v :<->text1788.htm#19759<->graph-mutation-add-v :: Adding Vertices (GRAPHS)
3<->graph-mutation-rm-v :<->text1788.htm#19764<->graph-mutation-rm-v :: Removing Vertices (GRAPHS)
5<->G - U <->text1788.htm#19765<->G - U : Grph, \brace\  GrphVert \rbrace -> Grph
5<->G - v <->text1788.htm#19765<->G - v : Grph, GrphVert -&gt; Grph
5<->G -:= U <->text1788.htm#19766<->G -:= U : Grph, \brace\  GrphVert \rbrace -> 
5<->RemoveVertex :: G -:= v <->text1788.htm#19766<->RemoveVertex :: G -:= v : Grph, GrphVert -&gt;
5<->RemoveVertices :: G -:= v <->text1788.htm#19766<->RemoveVertices :: G -:= v : Grph, GrphVert -&gt;
5<->G -:= v <->text1788.htm#19766<->G -:= v : Grph, GrphVert -&gt;
3<->graph-mutation-rm-v :<->text1788.htm#19764<->graph-mutation-rm-v :: Removing Vertices (GRAPHS)
3<->graph-mutation-add-e :<->text1788.htm#19767<->graph-mutation-add-e :: Adding Edges (GRAPHS)
5<->G + [ u, v ] <->text1788.htm#19768<->G + [ u, v ] : GrphDir, [ GrphVert, GrphVert ] -> GrphDir, GrphEdge
5<->G + { u, v } <->text1788.htm#19768<->G + { u, v } : GrphUnd, { GrphVert, GrphVert }-&gt; GrphUnd, GrphEdge
5<->G + \brace\  [ u, v ]  \rbrace <->text1788.htm#19769<->G + \brace\  [ u, v ]  \rbrace : GrphDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphDir
5<->G + { { u, v } } <->text1788.htm#19769<->G + { { u, v } } : GrphUnd, { { GrphVert, GrphVert } } -&gt; GrphUnd
5<->G +:= [ u, v ] <->text1788.htm#19770<->G +:= [ u, v ] : GrphDir, [ GrphVert, GrphVert ] ->
5<->G +:= \brace\  \brace\ u, v \rbrace\ \rbrace<->text1788.htm#19770<->G +:= \brace\  \brace\ u, v \rbrace\ \rbrace: GrphUnd, \brace\ \brace\  GrphVert, GrphVert  \rbrace \rbrace->
5<->G +:= \brace\  [ u, v ] \rbrace <->text1788.htm#19770<->G +:= \brace\  [ u, v ] \rbrace : GrphDir, \brace\  [ GrphVert, GrphVert] \rbrace ->
5<->G +:= { u, v } <->text1788.htm#19770<->G +:= { u, v } : GrphUnd, { GrphVert, GrphVert } -&gt;
5<->AddEdge(G, u, v) <->text1788.htm#19771<->AddEdge(G, u, v) : Grph, GrphVert, GrphVert  -&gt;  Grph, GrphEdge
5<->AddEdge(G, u, v, l) <->text1788.htm#19772<->AddEdge(G, u, v, l) : Grph, GrphVert, GrphVert, . -&gt; Grph, GrphEdge
5<->AddEdge(\til G, u, v, l) <->text1788.htm#19773<->AddEdge(\til G, u, v, l) : Grph, GrphVert, GrphVert, . ->
5<->AddEdge(~G, u, v) <->text1788.htm#19773<->AddEdge(~G, u, v) : Grph, GrphVert, GrphVert  -&gt;
5<->AddEdges(G, S) <->text1788.htm#19774<->AddEdges(G, S) : GrphDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> GrphDir
5<->AddEdges(G, S) <->text1788.htm#19774<->AddEdges(G, S) : GrphUnd, { { GrphVert, GrphVert } } -&gt; GrphUnd
5<->AddEdges(G, S, L) <->text1788.htm#19775<->AddEdges(G, S, L) : Grph, SeqEnum, SeqEnum -&gt; Grph
5<->AddEdges(\til G, S) <->text1788.htm#19776<->AddEdges(\til G, S) : GrphDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> 
5<->AddEdges(\til G, S, L) <->text1788.htm#19776<->AddEdges(\til G, S, L) : Grph, SeqEnum, SeqEnum -> 
5<->AddEdges(~G, S) <->text1788.htm#19776<->AddEdges(~G, S) : GrphUnd, { { GrphVert, GrphVert } } -&gt;
3<->graph-mutation-add-e :<->text1788.htm#19767<->graph-mutation-add-e :: Adding Edges (GRAPHS)
3<->graph-mutation-rm-e :<->text1788.htm#19777<->graph-mutation-rm-e :: Removing Edges (GRAPHS)
5<->G - \brace\  e \rbrace <->text1788.htm#19778<->G - \brace\  e \rbrace : Grph, \brace\  GrphEdge \rbrace -> Grph
5<->G - e <->text1788.htm#19778<->G - e : Grph, GrphEdge -&gt; Grph
5<->G - \brace\  [u, v] \rbrace <->text1788.htm#19779<->G - \brace\  [u, v] \rbrace : GrphDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphDir
5<->G - { { u, v } } <->text1788.htm#19779<->G - { { u, v } } : GrphUnd, { { GrphVert, GrphVert rbrace } -&gt; GrphUnd
5<->G -:= \brace\  e \rbrace <->text1788.htm#19780<->G -:= \brace\  e \rbrace : Grph, \brace\  GrphEdge \rbrace ->
5<->G -:= \brace\  \brace\  u, v \rbrace\ \rbrace  <->text1788.htm#19780<->G -:= \brace\  \brace\  u, v \rbrace\ \rbrace  : GrphUnd, \brace\  \brace\ GrphVert, GrphVert rbrace\ \rbrace -> 
5<->G -:= \brace\  [u, v] \rbrace <->text1788.htm#19780<->G -:= \brace\  [u, v] \rbrace : GrphDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> 
5<->RemoveEdge :: G -:= e <->text1788.htm#19780<->RemoveEdge :: G -:= e : Grph, GrphEdge -&gt;
5<->RemoveEdges :: G -:= e <->text1788.htm#19780<->RemoveEdges :: G -:= e : Grph, GrphEdge -&gt;
5<->RemoveEdge(\til G, u, v) : Grph, GrphVert, GrphVert -> :: G -:= e <->text1788.htm#19780<->RemoveEdge(\til G, u, v) : Grph, GrphVert, GrphVert -> :: G -:= e : Grph, GrphEdge -&gt;
5<->RemoveEdges(\til G, S) : GrphDir, \brace\ \brace\  GrphVert, GrphVert \rbrace\ \rbrace -> :: G -:= e <->text1788.htm#19780<->RemoveEdges(\til G, S) : GrphDir, \brace\ \brace\  GrphVert, GrphVert \rbrace\ \rbrace -> :: G -:= e : Grph, GrphEdge -&gt;
5<->RemoveEdges(\til G, S) : GrphDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> :: G -:= e <->text1788.htm#19780<->RemoveEdges(\til G, S) : GrphDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> :: G -:= e : Grph, GrphEdge -&gt;
5<->G -:= e <->text1788.htm#19780<->G -:= e : Grph, GrphEdge -&gt;
3<->graph-mutation-rm-e :<->text1788.htm#19777<->graph-mutation-rm-e :: Removing Edges (GRAPHS)
3<->mutation :<->text1788.htm#19758<->mutation :: Incremental Construction of  Graphs (GRAPHS)
3<->complement-line-graph-contraction-switching :<->text1788.htm#19781<->complement-line-graph-contraction-switching :: Constructing Complements, Line Graphs; Contraction, Switching (GRAPHS)
5<->Complement(G) <->text1788.htm#19782<->Complement(G) : Grph -&gt; Grph
5<->Contract(e) <->text1788.htm#19783<->Contract(e) : GrphEdge -&gt; Grph
5<->Contract(u, v) <->text1788.htm#19784<->Contract(u, v) : GrphVert, GrphVert -&gt; Grph
5<->Contract(S) <->text1788.htm#19785<->Contract(S) : { GrphVert }  -&gt; Grph
5<->InsertVertex(e) <->text1788.htm#19786<->InsertVertex(e) : GrphEdge -&gt; Grph
5<->InsertVertex(T) <->text1788.htm#19787<->InsertVertex(T) : { GrphEdge } -&gt; Grph
5<->LineGraph(G) <->text1788.htm#19788<->LineGraph(G) : Grph -&gt; Grph
5<->Switch(u) <->text1788.htm#19789<->Switch(u) : GrphVert -&gt; GrphUnd
5<->Switch(S) <->text1788.htm#19790<->Switch(S) : { GrphVert } -&gt; Grph
4<->Graph_Grotzch (Example H155E11)<->text1788.htm#19791<->Graph_Grotzch (Example H155E11)
4<->Example-Grotzch :<->text1788.htm#19791<->Example-Grotzch :: Graph_Grotzch (Example H155E11)
3<->complement-line-graph-contraction-switching :<->text1788.htm#19781<->complement-line-graph-contraction-switching :: Constructing Complements, Line Graphs; Contraction, Switching (GRAPHS)
3<->operation :<->text1788.htm<->operation :: Standard Constructions for  Graphs (GRAPHS)
3<->union-product :<->text1789.htm<->union-product :: Unions and Products of  Graphs (GRAPHS)
5<->Union(G, H) <->text1789.htm#19793<->Union(G, H) : GrphDir, GrphDir -> GrphDir
5<->join :: Union(G, H) <->text1789.htm#19793<->join :: Union(G, H) : GrphUnd, GrphUnd -&gt; GrphUnd
5<->G join H : GrphUnd, GrphUnd -> GrphUnd :: Union(G, H) <->text1789.htm#19793<->G join H : GrphUnd, GrphUnd -> GrphUnd :: Union(G, H) : GrphUnd, GrphUnd -&gt; GrphUnd
5<->Union(G, H) <->text1789.htm#19793<->Union(G, H) : GrphUnd, GrphUnd -&gt; GrphUnd
5<->EdgeUnion(G, H) <->text1789.htm#19794<->EdgeUnion(G, H) : GrphUnd, GrphUnd -> GrphUnd
5<->EdgeUnion(G, H) <->text1789.htm#19794<->EdgeUnion(G, H) : GrphDir, GrphDir -&gt; GrphDir
5<->CompleteUnion(G, H) <->text1789.htm#19795<->CompleteUnion(G, H) : GrphUnd, GrphUnd -> GrphUnd
5<->CompleteUnion(G, H) <->text1789.htm#19795<->CompleteUnion(G, H) : GrphDir, GrphDir -&gt; GrphDir
5<->CartesianProduct(G, H) <->text1789.htm#19796<->CartesianProduct(G, H) : GrphUnd, GrphUnd -> GrphUnd
5<->CartesianProduct(G, H) <->text1789.htm#19796<->CartesianProduct(G, H) : GrphDir, GrphDir -&gt; GrphDir
5<->LexProduct(G, H) <->text1789.htm#19797<->LexProduct(G, H) : GrphUnd, GrphUnd -> GrphUnd
5<->LexProduct(G, H) <->text1789.htm#19797<->LexProduct(G, H) : GrphDir, GrphDir -&gt; GrphDir
5<->TensorProduct(G, H) <->text1789.htm#19798<->TensorProduct(G, H) : GrphUnd, GrphUnd -> GrphUnd
5<->TensorProduct(G, H) <->text1789.htm#19798<->TensorProduct(G, H) : GrphDir, GrphDir -&gt; GrphDir
5<->G ^ n <->text1789.htm#19799<->G ^ n : GrphUnd, RngIntElt -&gt; GrphUnd
3<->union-product :<->text1789.htm<->union-product :: Unions and Products of  Graphs (GRAPHS)
3<->conversion-graph-digraph :<->text1790.htm<->conversion-graph-digraph :: Converting between Graphs  and Digraphs (GRAPHS)
5<->OrientatedGraph(G) <->text1790.htm#19801<->OrientatedGraph(G) : GrphUnd -&gt; GrphDir
5<->UnderlyingGraph(D) <->text1790.htm#19802<->UnderlyingGraph(D) : Grph -&gt; GrphUnd
5<->UnderlyingDigraph(G) <->text1790.htm#19803<->UnderlyingDigraph(G) : Grph -&gt; GrphDir
3<->conversion-graph-digraph :<->text1790.htm<->conversion-graph-digraph :: Converting between Graphs  and Digraphs (GRAPHS)
3<->group-code-design :<->text1791.htm<->group-code-design :: Construction from Groups,  Codes and Designs (GRAPHS)
3<->group :<->text1791.htm#19805<->group :: Graphs Constructed from Groups (GRAPHS)
5<->CayleyGraph(A : parameter) <->text1791.htm#19806<->CayleyGraph(A : parameter) : Grp -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->SchreierGraph(A, B) <->text1791.htm#19807<->SchreierGraph(A, B) : Grp, Grp -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->OrbitalGraph(P, u, T) <->text1791.htm#19808<->OrbitalGraph(P, u, T) : GrpPerm, RngIntElt, { RngIntElt } -&gt; GrphUnd
5<->ClosureGraph(P, G) <->text1791.htm#19809<->ClosureGraph(P, G) : GrpPerm, GrphUnd -&gt; GrphUnd
5<->PaleyGraph(q) <->text1791.htm#19810<->PaleyGraph(q) : RngIntElt -&gt; GrphUnd
5<->PaleyTournament(q) <->text1791.htm#19811<->PaleyTournament(q) : RngIntElt -&gt; GrphDir
3<->group :<->text1791.htm#19805<->group :: Graphs Constructed from Groups (GRAPHS)
3<->code-design :<->text1791.htm#19812<->code-design :: Graphs Constructed from Designs (GRAPHS)
5<->IncidenceGraph(D) <->text1791.htm#19813<->IncidenceGraph(D) : Inc -&gt; GrphUnd
5<->PointGraph(D) <->text1791.htm#19814<->PointGraph(D) : Inc -&gt; GrphUnd
5<->BlockGraph(D) <->text1791.htm#19815<->BlockGraph(D) : Inc -&gt; GrphUnd
5<->IncidenceGraph(P) <->text1791.htm#19816<->IncidenceGraph(P) : Plane -&gt; GrphUnd
5<->PointGraph(P) <->text1791.htm#19817<->PointGraph(P) : Plane -&gt; GrphUnd;
5<->LineGraph(P) <->text1791.htm#19818<->LineGraph(P) : Plane -&gt; GrphUnd
5<->HadamardGraph(H : parameters) <->text1791.htm#19819<->HadamardGraph(H : parameters) : Mtrx -&gt; GrphUnd
3<->code-design :<->text1791.htm#19812<->code-design :: Graphs Constructed from Designs (GRAPHS)
3<->constr-misc :<->text1791.htm#19820<->constr-misc :: Miscellaneous Graph  Constructions (GRAPHS)
5<->Converse(G) <->text1791.htm#19821<->Converse(G) : GrphDir -&gt; GrphDir
5<->OddGraph(n) <->text1791.htm#19822<->OddGraph(n) : RngIntElt -&gt; GrphUnd
5<->TriangularGraph(n) <->text1791.htm#19823<->TriangularGraph(n) : RngIntElt -&gt; GrphUnd
5<->SquareLatticeGraph(n) <->text1791.htm#19824<->SquareLatticeGraph(n) : RngIntElt -&gt; GrphUnd
5<->ShrikhandeGraph :: ClebschGraph() <->text1791.htm#19825<->ShrikhandeGraph :: ClebschGraph() : -&gt; GrphUnd
5<->GewirtzGraph :: ClebschGraph() <->text1791.htm#19825<->GewirtzGraph :: ClebschGraph() : -&gt; GrphUnd
5<->ClebschGraph() <->text1791.htm#19825<->ClebschGraph() : -&gt; GrphUnd
5<->ChangGraphs() <->text1791.htm#19826<->ChangGraphs() : -&gt; [GrpUnd, GrpUnd, GrpUnd]
3<->constr-misc :<->text1791.htm#19820<->constr-misc :: Miscellaneous Graph  Constructions (GRAPHS)
3<->group-code-design :<->text1791.htm<->group-code-design :: Construction from Groups,  Codes and Designs (GRAPHS)
3<->invariant :<->text1792.htm<->invariant :: Elementary Invariants of a  Graph (GRAPHS)
5<->NumberOfVertices :: Order(G) <->text1792.htm#19828<->NumberOfVertices :: Order(G) : Grph -&gt; RngIntElt
5<->Order(G) <->text1792.htm#19828<->Order(G) : Grph -&gt; RngIntElt
5<->NumberOfEdges :: Size(G) <->text1792.htm#19829<->NumberOfEdges :: Size(G) : Grph -&gt; RngIntElt
5<->Size(G) <->text1792.htm#19829<->Size(G) : Grph -&gt; RngIntElt
5<->CharacteristicPolynomial(G) <->text1792.htm#19830<->CharacteristicPolynomial(G) : GrphUnd -&gt; RngUPolElt
5<->Spectrum(G) <->text1792.htm#19831<->Spectrum(G) : GrphUnd -&gt; SetEnum
3<->invariant :<->text1792.htm<->invariant :: Elementary Invariants of a  Graph (GRAPHS)
3<->Boolean :<->text1793.htm<->Boolean :: Elementary Graph Predicates (GRAPHS)
5<->u adj v <->text1793.htm#19833<->u adj v : GrphVert, GrphVert -&gt; BoolElt
5<->e adj f <->text1793.htm#19834<->e adj f : GrphEdge, GrphEdge -&gt; BoolElt
5<->u notadj v <->text1793.htm#19835<->u notadj v : GrphVert, GrphVert -&gt; BoolElt
5<->e notadj f <->text1793.htm#19836<->e notadj f : GrphEdge, GrphEdge -&gt; BoolElt
5<->u in e <->text1793.htm#19837<->u in e : GrphVert, GrphEdge -&gt; BoolElt
5<->u notin e <->text1793.htm#19838<->u notin e : GrphVert, GrphEdge -&gt; BoolElt
5<->G eq H <->text1793.htm#19839<->G eq H : GrphUnd, GrphUnd -> BoolElt
5<->G eq H <->text1793.htm#19839<->G eq H : GrphDir, GrphDir -&gt; BoolElt
5<->IsSubgraph(G, H) <->text1793.htm#19840<->IsSubgraph(G, H) : Grph, Grph  -&gt; BoolElt
5<->IsBipartite(G) <->text1793.htm#19841<->IsBipartite(G) : GrphUnd -&gt; BoolElt
5<->IsComplete(G) <->text1793.htm#19842<->IsComplete(G) : Grph -&gt; BoolElt
5<->IsEulerian(G) <->text1793.htm#19843<->IsEulerian(G) : Grph -&gt; BoolElt
5<->IsForest(G) <->text1793.htm#19844<->IsForest(G) : GrphUnd -&gt; BoolElt
5<->IsEmpty(G) <->text1793.htm#19845<->IsEmpty(G) : Grph -&gt; BoolElt
5<->IsNull(G) <->text1793.htm#19846<->IsNull(G) : Grph -&gt; BoolElt
5<->IsPath(G) <->text1793.htm#19847<->IsPath(G) : Grph -&gt; BoolElt
5<->IsPolygon(G) <->text1793.htm#19848<->IsPolygon(G) : Grph -&gt; BoolElt
5<->IsRegular(G) <->text1793.htm#19849<->IsRegular(G) : Grph -&gt; BoolElt
5<->IsTree(G) <->text1793.htm#19850<->IsTree(G) : Grph -&gt; BoolElt
3<->Boolean :<->text1793.htm<->Boolean :: Elementary Graph Predicates (GRAPHS)
3<->adjacency-degree :<->text1794.htm<->adjacency-degree :: Adjacency and Degree (GRAPHS)
3<->graph :<->text1794.htm#19852<->graph :: Adjacency and Degree Functions for a Graph (GRAPHS)
5<->Degree(u) <->text1794.htm#19853<->Degree(u) : GrphVert -&gt; RngIntElt
5<->Alldeg(G, n) <->text1794.htm#19854<->Alldeg(G, n) : GrphUnd, RngIntElt -&gt; { GrphVert }
5<->Maxdeg :: MaximumDegree(G) <->text1794.htm#19855<->Maxdeg :: MaximumDegree(G) : GrphUnd -&gt; RngIntElt, GrphVert
5<->MaximumDegree(G) <->text1794.htm#19855<->MaximumDegree(G) : GrphUnd -&gt; RngIntElt, GrphVert
5<->Mindeg :: MinimumDegree(G) <->text1794.htm#19856<->Mindeg :: MinimumDegree(G) : GrphUnd -&gt; RngIntElt, GrphVert
5<->MinimumDegree(G) <->text1794.htm#19856<->MinimumDegree(G) : GrphUnd -&gt; RngIntElt, GrphVert
5<->DegreeSequence(G) <->text1794.htm#19857<->DegreeSequence(G) : Grph -&gt; [ { GrphVert } ]
5<->Valence(G) <->text1794.htm#19858<->Valence(G) : GrphUnd -&gt; RngIntElt
5<->Neighbors :: Neighbours(u) <->text1794.htm#19859<->Neighbors :: Neighbours(u) : GrphVert -&gt; { GrphVert }
5<->Neighbours(u) <->text1794.htm#19859<->Neighbours(u) : GrphVert -&gt; { GrphVert }
5<->IncidentEdges(u) <->text1794.htm#19860<->IncidentEdges(u) : GrphVert -&gt; { GrphEdge }
5<->Bipartition(G) <->text1794.htm#19861<->Bipartition(G) : GrphUnd -&gt; [ { GrphVert } ]
5<->MinimumDominatingSet(G) <->text1794.htm#19862<->MinimumDominatingSet(G) : GrphUnd -&gt; SetEnum
3<->graph :<->text1794.htm#19852<->graph :: Adjacency and Degree Functions for a Graph (GRAPHS)
3<->digraph :<->text1794.htm#19863<->digraph :: Adjacency and Degree Functions for a Digraph (GRAPHS)
5<->InDegree(u) <->text1794.htm#19864<->InDegree(u) : GrphVert -&gt; RngIntElt
5<->OutDegree(u) <->text1794.htm#19865<->OutDegree(u) : GrphVert -&gt; RngIntElt
5<->Degree(u) <->text1794.htm#19866<->Degree(u) : GrphVert -&gt; RngIntElt
5<->Alldeg(G, n) <->text1794.htm#19867<->Alldeg(G, n) : GrphDir, RngIntElt -&gt; { GrphVert }
5<->Maxindeg :: MaximumInDegree(G) <->text1794.htm#19868<->Maxindeg :: MaximumInDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MaximumInDegree(G) <->text1794.htm#19868<->MaximumInDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->Maxoutdeg :: MaximumOutDegree(G) <->text1794.htm#19869<->Maxoutdeg :: MaximumOutDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MaximumOutDegree(G) <->text1794.htm#19869<->MaximumOutDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->Minindeg :: MinimumInDegree(G) <->text1794.htm#19870<->Minindeg :: MinimumInDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MinimumInDegree(G) <->text1794.htm#19870<->MinimumInDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->Minoutdeg :: MinimumOutDegree(G) <->text1794.htm#19871<->Minoutdeg :: MinimumOutDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MinimumOutDegree(G) <->text1794.htm#19871<->MinimumOutDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->Maxdeg :: MaximumDegree(G) <->text1794.htm#19872<->Maxdeg :: MaximumDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MaximumDegree(G) <->text1794.htm#19872<->MaximumDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->Mindeg :: MinimumDegree(G) <->text1794.htm#19873<->Mindeg :: MinimumDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->MinimumDegree(G) <->text1794.htm#19873<->MinimumDegree(G) : GrphDir -&gt; RngIntElt, GrphVert
5<->DegreeSequence(G) <->text1794.htm#19874<->DegreeSequence(G) : Grph -&gt; [ { GrphVert } ]
5<->InNeighbors :: InNeighbours(u) <->text1794.htm#19875<->InNeighbors :: InNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->InNeighbours(u) <->text1794.htm#19875<->InNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->OutNeighbors :: OutNeighbours(u) <->text1794.htm#19876<->OutNeighbors :: OutNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->OutNeighbours(u) <->text1794.htm#19876<->OutNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->IncidentEdges(u) <->text1794.htm#19877<->IncidentEdges(u) : GrphVert -&gt; { GrphEdge }
3<->digraph :<->text1794.htm#19863<->digraph :: Adjacency and Degree Functions for a Digraph (GRAPHS)
3<->adjacency-degree :<->text1794.htm<->adjacency-degree :: Adjacency and Degree (GRAPHS)
3<->connectedness-path-circuit :<->text1795.htm<->connectedness-path-circuit :: Connectedness (GRAPHS)
3<->connectedness-graph :<->text1795.htm#19879<->connectedness-graph :: Connectedness in a Graph (GRAPHS)
5<->IsConnected(G) <->text1795.htm#19880<->IsConnected(G) : GrphUnd -&gt; BoolElt
5<->Components(G) <->text1795.htm#19881<->Components(G) : GrphUnd -&gt; [ { GrphVert } ]
5<->Component(u) <->text1795.htm#19882<->Component(u) : GrphVert -&gt; Grph
5<->IsSeparable(G) <->text1795.htm#19883<->IsSeparable(G) : GrphUnd -&gt; BoolElt
5<->IsBiconnected(G) <->text1795.htm#19884<->IsBiconnected(G) : GrphUnd -&gt; BoolElt
5<->CutVertices(G) <->text1795.htm#19885<->CutVertices(G) : Grph -&gt; { GrphVert }
5<->Bicomponents(G) <->text1795.htm#19886<->Bicomponents(G) : GrphUnd -&gt; [GrphUnd]
3<->connectedness-graph :<->text1795.htm#19879<->connectedness-graph :: Connectedness in a Graph (GRAPHS)
3<->digraph :<->text1795.htm#19887<->digraph :: Connectedness in a Digraph (GRAPHS)
5<->IsStronglyConnected(G) <->text1795.htm#19888<->IsStronglyConnected(G) : GrphDir -&gt; BoolElt
5<->IsWeaklyConnected(G) <->text1795.htm#19889<->IsWeaklyConnected(G) : GrphDir -&gt; BoolElt
5<->StronglyConnectedComponents(G) <->text1795.htm#19890<->StronglyConnectedComponents(G) : GrphDir -&gt; [ { GrphVert } ]
5<->Component(u) <->text1795.htm#19891<->Component(u) : GrphVert -&gt; Grph
3<->digraph :<->text1795.htm#19887<->digraph :: Connectedness in a Digraph (GRAPHS)
3<->triconnectivity :<->text1795.htm#19892<->triconnectivity :: Graph Triconnectivity (GRAPHS)
5<->IsTriconnected(G) <->text1795.htm#19893<->IsTriconnected(G) : GrphUnd -&gt; BoolElt
5<->Splitcomponents(G) <->text1795.htm#19894<->Splitcomponents(G) : GrphUnd -&gt; [ { GrphVert } ], [ [ GrphVert ]]
5<->SeparationVertices(G) <->text1795.htm#19895<->SeparationVertices(G) : GrphUnd -&gt; [ [ GrphVert ]], [ { GrphVert } ]
4<->Graph_Triconnectivity (Example H155E12)<->text1795.htm#19896<->Graph_Triconnectivity (Example H155E12)
4<->Example-Triconnectivity :<->text1795.htm#19896<->Example-Triconnectivity :: Graph_Triconnectivity (Example H155E12)
3<->triconnectivity :<->text1795.htm#19892<->triconnectivity :: Graph Triconnectivity (GRAPHS)
3<->maxmatching :<->text1795.htm#19897<->maxmatching :: Maximum Matching in Bipartite Graphs (GRAPHS)
5<->MaximumMatching(G) <->text1795.htm#19898<->MaximumMatching(G) : GrphUnd -&gt; [ { GrphEdge } ]
4<->Graph_MaxMatching (Example H155E13)<->text1795.htm#19899<->Graph_MaxMatching (Example H155E13)
4<->Example-MaxMatching :<->text1795.htm#19899<->Example-MaxMatching :: Graph_MaxMatching (Example H155E13)
3<->maxmatching :<->text1795.htm#19897<->maxmatching :: Maximum Matching in Bipartite Graphs (GRAPHS)
3<->gen-connectivity :<->text1795.htm#19900<->gen-connectivity :: General Vertex and Edge Connectivity in Graphs and Digraphs (GRAPHS)
5<->VertexSeparator(G) <->text1795.htm#19901<->VertexSeparator(G) : Grph -&gt; [ GrphVert ]
5<->VertexConnectivity(G) <->text1795.htm#19902<->VertexConnectivity(G) : Grph -&gt; RngIntElt, [ GrphVert ]
5<->IsKVertexConnected(G, k) <->text1795.htm#19903<->IsKVertexConnected(G, k) : Grph, RngIntElt -&gt; BoolElt
5<->EdgeSeparator(G) <->text1795.htm#19904<->EdgeSeparator(G) : Grph -&gt; [ GrphEdge ]
5<->EdgeConnectivity(G) <->text1795.htm#19905<->EdgeConnectivity(G) : Grph -&gt; RngIntElt, [ GrphEdge ]
5<->IsKEdgeConnected(G, k) <->text1795.htm#19906<->IsKEdgeConnected(G, k) : Grph, RngIntElt -&gt; BoolElt
4<->Graph_Connectivity (Example H155E14)<->text1795.htm#19907<->Graph_Connectivity (Example H155E14)
4<->Example-Connectivity :<->text1795.htm#19907<->Example-Connectivity :: Graph_Connectivity (Example H155E14)
3<->gen-connectivity :<->text1795.htm#19900<->gen-connectivity :: General Vertex and Edge Connectivity in Graphs and Digraphs (GRAPHS)
3<->connectedness-path-circuit :<->text1795.htm<->connectedness-path-circuit :: Connectedness (GRAPHS)
3<->path-circuit-graph :<->text1796.htm<->path-circuit-graph :: Distances, Paths and Circuits in a Graph (GRAPHS)
3<->path-circuit-graph :<->text1796.htm#19909<->path-circuit-graph :: Distances, Paths and Circuits in a Possibly Weighted Graph (GRAPHS)
5<->Reachable(u, v) <->text1796.htm#19910<->Reachable(u, v) : GrphVert, GrphVert -&gt; BoolElt
5<->Distance(u, v) <->text1796.htm#19911<->Distance(u, v) : GrphVert, GrphVert -&gt; RngIntElt
5<->Geodesic(u, v) <->text1796.htm#19912<->Geodesic(u, v) : GrphVert, GrphVert -&gt; [GrphVert]
3<->path-circuit-graph :<->text1796.htm#19909<->path-circuit-graph :: Distances, Paths and Circuits in a Possibly Weighted Graph (GRAPHS)
3<->path-circuit-graph :<->text1796.htm#19913<->path-circuit-graph :: Distances, Paths and Circuits in a Non-Weighted Graph (GRAPHS)
5<->Diameter(G) <->text1796.htm#19914<->Diameter(G) : Grph -&gt; RngIntElt
5<->DiameterPath(G) <->text1796.htm#19915<->DiameterPath(G) : Grph -&gt; [GrphVert]
5<->Ball(u, n) <->text1796.htm#19916<->Ball(u, n) : GrphVert, RngIntElt -&gt; { GrphVert }
5<->Sphere(u, n) <->text1796.htm#19917<->Sphere(u, n) : GrphVert, RngIntElt -&gt; { GrphVert }
5<->DistancePartition(u) <->text1796.htm#19918<->DistancePartition(u) : GrphVert -&gt; [ { GrphVert } ]
5<->IsEquitable(G, P) <->text1796.htm#19919<->IsEquitable(G, P) : GrphUnd, \brace \brace RngIntElt\rbrace\rbrace -> BoolElt
5<->IsEquitable(G, P) <->text1796.htm#19919<->IsEquitable(G, P) : GrphUnd, { { GrphVert } } -&gt; BoolElt
5<->EquitablePartition(P, G) <->text1796.htm#19920<->EquitablePartition(P, G) : \brace \brace RngIntElt\rbrace\rbrace, GrphUnd -> \brace \brace GrphVert\rbrace\rbrace
5<->EquitablePartition(P, G) <->text1796.htm#19920<->EquitablePartition(P, G) : { { GrphVert } }, GrphUnd -&gt; { { GrphVert } }
5<->Girth(G) <->text1796.htm#19921<->Girth(G) : GrphUnd -&gt; RngIntElt
5<->GirthCycle(G) <->text1796.htm#19922<->GirthCycle(G) : GrphUnd -&gt; [GrphVert]
3<->path-circuit-graph :<->text1796.htm#19913<->path-circuit-graph :: Distances, Paths and Circuits in a Non-Weighted Graph (GRAPHS)
3<->path-circuit-graph :<->text1796.htm<->path-circuit-graph :: Distances, Paths and Circuits in a Graph (GRAPHS)
3<->flow :<->text1797.htm<->flow :: Maximum Flow, Minimum  Cut, and Shortest Paths (GRAPHS)
3<->matrix-vector-space :<->text1798.htm<->matrix-vector-space :: Matrices and Vector Spaces  Associated with a Graph or Digraph (GRAPHS)
5<->AdjacencyMatrix(G) <->text1798.htm#19925<->AdjacencyMatrix(G) : Grph -&gt; AlgMatElt
5<->DistanceMatrix(G) <->text1798.htm#19926<->DistanceMatrix(G) : Grph -&gt; AlgMatElt
5<->IncidenceMatrix(G) <->text1798.htm#19927<->IncidenceMatrix(G) : Grph -&gt; ModHomElt
5<->IntersectionMatrix(G, P) <->text1798.htm#19928<->IntersectionMatrix(G, P) : GrphUnd, \brace \brace RngIntElt\rbrace\rbrace -> AlgMatElt
5<->IntersectionMatrix(G, P) <->text1798.htm#19928<->IntersectionMatrix(G, P) : GrphUnd, { { GrphVert } } -&gt; AlgMatElt
3<->matrix-vector-space :<->text1798.htm<->matrix-vector-space :: Matrices and Vector Spaces  Associated with a Graph or Digraph (GRAPHS)
3<->spanning-tree :<->text1799.htm<->spanning-tree :: Spanning Trees of a Graph or Digraph (GRAPHS)
5<->SpanningTree(G) <->text1799.htm#19930<->SpanningTree(G) : GrphUnd -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->SpanningForest(G) <->text1799.htm#19931<->SpanningForest(G) : Grph -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->BFSTree :: BreadthFirstSearchTree(u) <->text1799.htm#19932<->BFSTree :: BreadthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->BreadthFirstSearchTree(u) <->text1799.htm#19932<->BreadthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet
5<->DFSTree :: DepthFirstSearchTree(u) <->text1799.htm#19933<->DFSTree :: DepthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet, SeqEnum
5<->DepthFirstSearchTree(u) <->text1799.htm#19933<->DepthFirstSearchTree(u) : GrphVert -&gt; Grph, GrphVertSet, GrphEdgeSet, SeqEnum
3<->spanning-tree :<->text1799.htm<->spanning-tree :: Spanning Trees of a Graph or Digraph (GRAPHS)
3<->directed-tree :<->text1800.htm<->directed-tree :: Directed Trees (GRAPHS)
5<->IsRootedTree(G) <->text1800.htm#19935<->IsRootedTree(G) : GrphDir -&gt; BoolElt, GrphVert
5<->Root(G) <->text1800.htm#19936<->Root(G) : GrphDir -&gt; GrphVert
5<->IsRoot(v) <->text1800.htm#19937<->IsRoot(v) : GrphVert -&gt; BoolElt
5<->RootSide(v) <->text1800.htm#19938<->RootSide(v) : GrphVert -&gt; GrphVert
5<->VertexPath(u,v) <->text1800.htm#19939<->VertexPath(u,v) : GrphVert,GrphVert -&gt; SeqEnum
5<->BranchVertexPath(u,v) <->text1800.htm#19940<->BranchVertexPath(u,v) : GrphVert,GrphVert -&gt; SeqEnum
3<->directed-tree :<->text1800.htm<->directed-tree :: Directed Trees (GRAPHS)
3<->colouring :<->text1801.htm<->colouring :: Colourings (GRAPHS)
5<->ChromaticNumber(G) <->text1801.htm#19942<->ChromaticNumber(G) : GrphUnd -&gt; RngIntElt
5<->OptimalVertexColouring(G) <->text1801.htm#19943<->OptimalVertexColouring(G) : GrphUnd -&gt; SeqEnum
5<->ChromaticIndex(G) <->text1801.htm#19944<->ChromaticIndex(G) : GrphUnd -&gt; RngIntElt
5<->OptimalEdgeColouring(G) <->text1801.htm#19945<->OptimalEdgeColouring(G) : GrphUnd -&gt; SeqEnum
5<->ChromaticPolynomial(G) <->text1801.htm#19946<->ChromaticPolynomial(G) : GrphUnd -&gt; RngUPolElt
4<->Graph_ChromaticNumber (Example H155E15)<->text1801.htm#19947<->Graph_ChromaticNumber (Example H155E15)
4<->Example-ChromaticNumber :<->text1801.htm#19947<->Example-ChromaticNumber :: Graph_ChromaticNumber (Example H155E15)
3<->colouring :<->text1801.htm<->colouring :: Colourings (GRAPHS)
3<->clique-independent-set :<->text1802.htm<->clique-independent-set :: Cliques, Independent Sets (GRAPHS)
5<->HasClique(G, k) <->text1802.htm#19949<->HasClique(G, k) : GrphUnd, RngIntElt -&gt; BoolElt, { GrphVert }
5<->HasClique(G, k, m : parameters) <->text1802.htm#19950<->HasClique(G, k, m : parameters) : GrphUnd, RngIntElt, BoolElt -&gt; BoolElt, { GrphVert }
5<->HasClique(G, k, m, f : parameters) <->text1802.htm#19951<->HasClique(G, k, m, f : parameters) : GrphUnd, RngIntElt, BoolElt, RngIntElt -&gt; BoolElt, { GrphVert }
5<->MaximumClique(G : parameters) <->text1802.htm#19952<->MaximumClique(G : parameters) : GrphUnd -&gt; { GrphVert }
5<->CliqueNumber(G : parameters) <->text1802.htm#19953<->CliqueNumber(G : parameters) : GrphUnd -&gt; RngIntElt
5<->AllCliques(G : parameters) <->text1802.htm#19954<->AllCliques(G : parameters) : GrphUnd  -&gt; SeqEnum
5<->AllCliques(G, k : parameters) <->text1802.htm#19955<->AllCliques(G, k : parameters) : GrphUnd, RngIntElt  -&gt; SeqEnum
5<->AllCliques(G, k, m : parameters) <->text1802.htm#19956<->AllCliques(G, k, m : parameters) : GrphUnd, RngIntElt, BoolElt  -&gt; SeqEnum
5<->MaximumIndependentSet(G: parameters) <->text1802.htm#19957<->MaximumIndependentSet(G: parameters) : GrphUnd -&gt; { GrphVert }
5<->IndependenceNumber(G: parameters) <->text1802.htm#19958<->IndependenceNumber(G: parameters) : GrphUnd -&gt; RngIntElt
4<->Graph_Cliques (Example H155E16)<->text1802.htm#19959<->Graph_Cliques (Example H155E16)
4<->Example-Cliques :<->text1802.htm#19959<->Example-Cliques :: Graph_Cliques (Example H155E16)
3<->clique-independent-set :<->text1802.htm<->clique-independent-set :: Cliques, Independent Sets (GRAPHS)
3<->planarity :<->text1803.htm<->planarity :: Planar Graphs (GRAPHS)
5<->IsPlanar(G) <->text1803.htm#19961<->IsPlanar(G) : GrphUnd -&gt; BoolElt, GrphUnd
5<->Obstruction(G) <->text1803.htm#19962<->Obstruction(G) : GrphUnd -&gt; GrphUnd
5<->IsHomeomorphic(G : parameters) <->text1803.htm#19963<->IsHomeomorphic(G : parameters) : GrphUnd -&gt; BoolElt
5<->Faces(G) <->text1803.htm#19964<->Faces(G) : GrphUnd -&gt; SeqEnum[GrphVert]
5<->Face(u, v) <->text1803.htm#19965<->Face(u, v) : GrphVert, GrphVert -&gt; SeqEnum
5<->Face(e) <->text1803.htm#19966<->Face(e) : GrphEdge -&gt; SeqEnum
5<->NumberOfFaces :: NFaces(G) <->text1803.htm#19967<->NumberOfFaces :: NFaces(G) : GrphUnd -&gt; RngIntElt
5<->NFaces(G) <->text1803.htm#19967<->NFaces(G) : GrphUnd -&gt; RngIntElt
5<->Embedding(G) <->text1803.htm#19968<->Embedding(G) : GrphUnd -&gt; SeqEnum
5<->Embedding(v) <->text1803.htm#19969<->Embedding(v) : GrphVert -&gt; SeqEnum
5<->PlanarDual(G) <->text1803.htm#19970<->PlanarDual(G) : GrphUnd -&gt; GrphUnd
4<->Graph_Planarity (Example H155E17)<->text1803.htm#19971<->Graph_Planarity (Example H155E17)
4<->Example-Planarity :<->text1803.htm#19971<->Example-Planarity :: Graph_Planarity (Example H155E17)
3<->planarity :<->text1803.htm<->planarity :: Planar Graphs (GRAPHS)
3<->automorphism-group-graph :<->text1804.htm<->automorphism-group-graph :: Automorphism Group of a  Graph or Digraph (GRAPHS)
3<->creation :<->text1804.htm#19973<->creation :: The Automorphism Group Function (GRAPHS)
5<->AutomorphismGroup(G : parameters) <->text1804.htm#19974<->AutomorphismGroup(G : parameters) : Grph -&gt; GrpPerm, GSet, GSet, PowMap, Map, Grph
3<->creation :<->text1804.htm#19973<->creation :: The Automorphism Group Function (GRAPHS)
3<->nauty-invariants :<->text1804.htm#19975<->nauty-invariants :: <TT>nauty</TT> Invariants (GRAPHS)
5<->IsPartitionRefined(G: parameters) <->text1804.htm#19976<->IsPartitionRefined(G: parameters) : Grph -&gt; BoolElt
3<->nauty-invariants :<->text1804.htm#19975<->nauty-invariants :: <TT>nauty</TT> Invariants (GRAPHS)
3<->parameters :<->text1804.htm#19977<->parameters :: Graph Colouring and  Automorphism Group (GRAPHS)
3<->variant :<->text1804.htm#19978<->variant :: Variants of Automorphism Group (GRAPHS)
5<->CanonicalGraph(G) <->text1804.htm#19979<->CanonicalGraph(G) : Grph -&gt; Grph
5<->EdgeGroup(G) <->text1804.htm#19980<->EdgeGroup(G) : Grph -&gt; GrpPerm, GSet
5<->IsIsomorphic(G, H $\colon$ \parameters ) <->text1804.htm#19981<->IsIsomorphic(G, H $\colon$ \parameters ) : GrphUnd, GrphUnd -> BoolElt, Map
5<->IsIsomorphic(G, H : parameters ) <->text1804.htm#19981<->IsIsomorphic(G, H : parameters ) : GrphDir, GrphDir -&gt; BoolElt, Map
4<->Graph_AutomorphismGroup (Example H155E18)<->text1804.htm#19982<->Graph_AutomorphismGroup (Example H155E18)
4<->Example-AutomorphismGroup :<->text1804.htm#19982<->Example-AutomorphismGroup :: Graph_AutomorphismGroup (Example H155E18)
4<->Graph_GraphIsomorphim (Example H155E19)<->text1804.htm#19983<->Graph_GraphIsomorphim (Example H155E19)
4<->Example-GraphIsomorphim :<->text1804.htm#19983<->Example-GraphIsomorphim :: Graph_GraphIsomorphim (Example H155E19)
3<->variant :<->text1804.htm#19978<->variant :: Variants of Automorphism Group (GRAPHS)
3<->action :<->text1804.htm#19984<->action :: Action of Automorphisms (GRAPHS)
5<->Image(a, Y, y) <->text1804.htm#19985<->Image(a, Y, y) : GrpPermElt, GSet, Elt -&gt; Elt
5<->Orbit(A, Y, y) <->text1804.htm#19986<->Orbit(A, Y, y) : GrpPerm, GSet, Elt -&gt; GSet
5<->Orbits(A, Y) <->text1804.htm#19987<->Orbits(A, Y) : GrpPerm, GSet -&gt; [ GSet ]
5<->Stabilizer(A, Y, y) <->text1804.htm#19988<->Stabilizer(A, Y, y) : GrpPerm, GSet, Elt -&gt; GrpPerm
5<->Action(A, Y) <->text1804.htm#19989<->Action(A, Y) : GrpPerm, GSet -&gt; Hom(Grp), GrpPerm, GrpPerm
5<->ActionImage(A, Y) <->text1804.htm#19990<->ActionImage(A, Y) : GrpPerm, GSet -&gt; GrpPerm
5<->ActionKernel(A, Y) <->text1804.htm#19991<->ActionKernel(A, Y) : GrpPerm, GSet -&gt; GrpPerm
4<->Graph_AutomorphismAction (Example H155E20)<->text1804.htm#19992<->Graph_AutomorphismAction (Example H155E20)
4<->Example-AutomorphismAction :<->text1804.htm#19992<->Example-AutomorphismAction :: Graph_AutomorphismAction (Example H155E20)
3<->action :<->text1804.htm#19984<->action :: Action of Automorphisms (GRAPHS)
3<->automorphism-group-graph :<->text1804.htm<->automorphism-group-graph :: Automorphism Group of a  Graph or Digraph (GRAPHS)
3<->symmetry-regularity :<->text1805.htm<->symmetry-regularity :: Symmetry and Regularity  Properties of Graphs (GRAPHS)
5<->IsVertexTransitive :: IsTransitive(G) <->text1805.htm#19994<->IsVertexTransitive :: IsTransitive(G) : GrphUnd -&gt; BoolElt
5<->IsTransitive(G) <->text1805.htm#19994<->IsTransitive(G) : GrphUnd -&gt; BoolElt
5<->IsEdgeTransitive(G) <->text1805.htm#19995<->IsEdgeTransitive(G) : GrphUnd -&gt; BoolElt
5<->OrbitsPartition(G) <->text1805.htm#19996<->OrbitsPartition(G) : GrphUnd -&gt; [ { GrphVert } ]
5<->IsPrimitive(G) <->text1805.htm#19997<->IsPrimitive(G) : GrphUnd -&gt; BoolElt
5<->IsSymmetric(G) <->text1805.htm#19998<->IsSymmetric(G) : GrphUnd -&gt; BoolElt
5<->IsDistanceTransitive(G) <->text1805.htm#19999<->IsDistanceTransitive(G) : GrphUnd -&gt; BoolElt
5<->IsDistanceRegular(G) <->text1805.htm#20000<->IsDistanceRegular(G) : GrphUnd -&gt; BoolElt
5<->IntersectionArray(G) <->text1805.htm#20001<->IntersectionArray(G) : GrphUnd -&gt; [RngIntElt]
4<->Graph_Regularity (Example H155E21)<->text1805.htm#20002<->Graph_Regularity (Example H155E21)
4<->Example-Regularity :<->text1805.htm#20002<->Example-Regularity :: Graph_Regularity (Example H155E21)
3<->symmetry-regularity :<->text1805.htm<->symmetry-regularity :: Symmetry and Regularity  Properties of Graphs (GRAPHS)
3<->graph-databases :<->text1806.htm<->graph-databases :: Graph Databases and Graph  Generation (GRAPHS)
3<->graph-strongly-regular :<->text1806.htm#20004<->graph-strongly-regular :: Strongly Regular Graphs (GRAPHS)
5<->StronglyRegularGraphsDatabase() <->text1806.htm#20005<->StronglyRegularGraphsDatabase() : -&gt; DB
5<->Classes(D) <->text1806.htm#20006<->Classes(D) : DB -&gt; SeqEnum
5<->NumberOfClasses(D) <->text1806.htm#20007<->NumberOfClasses(D) : DB -&gt; RngIntElt
5<->NumberOfGraphs(D) <->text1806.htm#20008<->NumberOfGraphs(D) : DB -&gt; RngIntElt
5<->NumberOfGraphs(D, S) <->text1806.htm#20009<->NumberOfGraphs(D, S) : DB, SeqEnum -&gt; RngIntElt
5<->Graphs(D, S) <->text1806.htm#20010<->Graphs(D, S) : DB, SeqEnum -&gt; SeqEnum
5<->Graph(D, S, i) <->text1806.htm#20011<->Graph(D, S, i) : DB, SeqEnum, RngIntElt  -&gt; GrphUnd
5<->RandomGraph(D) <->text1806.htm#20012<->RandomGraph(D) : DB -&gt; GrphUnd
5<->RandomGraph(D, S) <->text1806.htm#20013<->RandomGraph(D, S) : DB, SeqEnum -&gt; GrphUnd
5<->for G in D do ... end for;<->text1806.htm#20014<->for G in D do ... end for;
4<->Graph_StronglyRegularGraphs (Example H155E22)<->text1806.htm#20015<->Graph_StronglyRegularGraphs (Example H155E22)
4<->Example-StronglyRegularGraphs :<->text1806.htm#20015<->Example-StronglyRegularGraphs :: Graph_StronglyRegularGraphs (Example H155E22)
3<->graph-strongly-regular :<->text1806.htm#20004<->graph-strongly-regular :: Strongly Regular Graphs (GRAPHS)
3<->graph-small :<->text1806.htm#20016<->graph-small :: Small Graphs (GRAPHS)
3<->graph-small-creation :<->text1806.htm#20017<->graph-small-creation :: Creation of Small Graph Databases (GRAPHS)
5<->SmallGraphDatabase(n : parameters) <->text1806.htm#20018<->SmallGraphDatabase(n : parameters) : RngIntElt -&gt; DB
5<->EulerianGraphDatabase(n : parameters) <->text1806.htm#20019<->EulerianGraphDatabase(n : parameters) : RngIntElt -&gt; DB
5<->PlanarGraphDatabase(n) <->text1806.htm#20020<->PlanarGraphDatabase(n) : RngIntElt -&gt; DB
5<->SelfComplementaryGraphDatabase(n) <->text1806.htm#20021<->SelfComplementaryGraphDatabase(n) : RngIntElt -&gt; DB
3<->graph-small-creation :<->text1806.htm#20017<->graph-small-creation :: Creation of Small Graph Databases (GRAPHS)
3<->graph-small-access :<->text1806.htm#20022<->graph-small-access :: Access functions (GRAPHS)
5<-># D <->text1806.htm#20023<-># D : DB -&gt; RngIntElt
5<->Graph(D, i) <->text1806.htm#20024<->Graph(D, i) : DB, RngIntElt -&gt; GrphUnd
5<->Random(D) <->text1806.htm#20025<->Random(D) : DB -&gt; GrphUnd
5<->for G in D do ... end for;<->text1806.htm#20026<->for G in D do ... end for;
3<->graph-small-access :<->text1806.htm#20022<->graph-small-access :: Access functions (GRAPHS)
3<->graph-small :<->text1806.htm#20016<->graph-small :: Small Graphs (GRAPHS)
3<->graph-generation :<->text1806.htm#20027<->graph-generation :: Generating Graphs (GRAPHS)
5<->GenerateGraphs(n : parameters) <->text1806.htm#20028<->GenerateGraphs(n : parameters) : RngIntElt -&gt; File
5<->NextGraph(F: parameters) <->text1806.htm#20029<->NextGraph(F: parameters) : File -&gt; BoolElt, GrphUnd
4<->Graph_GraphGeneration (Example H155E23)<->text1806.htm#20030<->Graph_GraphGeneration (Example H155E23)
4<->Example-GraphGeneration :<->text1806.htm#20030<->Example-GraphGeneration :: Graph_GraphGeneration (Example H155E23)
3<->graph-generation :<->text1806.htm#20027<->graph-generation :: Generating Graphs (GRAPHS)
3<->graph-stream-access :<->text1806.htm#20031<->graph-stream-access :: A General Facility (GRAPHS)
5<->OpenGraphFile(s, f, p)<->text1806.htm#20032<->OpenGraphFile(s, f, p):  MonStgElt, RngIntElt, RngIntElt -&gt; File
4<->Graph_GraphGeneralAccess (Example H155E24)<->text1806.htm#20033<->Graph_GraphGeneralAccess (Example H155E24)
4<->Example-GraphGeneralAccess :<->text1806.htm#20033<->Example-GraphGeneralAccess :: Graph_GraphGeneralAccess (Example H155E24)
3<->graph-stream-access :<->text1806.htm#20031<->graph-stream-access :: A General Facility (GRAPHS)
3<->graph-databases :<->text1806.htm<->graph-databases :: Graph Databases and Graph  Generation (GRAPHS)
3<->graph :<->text1782.htm<->graph :: GRAPHS
3<->MultiGraph :<->text1809.htm<->MultiGraph :: MULTIGRAPHS
3<->multig-introduction :<->text1810.htm<->multig-introduction :: Introduction (MULTIGRAPHS)
3<->multig-constr :<->text1811.htm<->multig-constr :: Construction of Multigraphs (MULTIGRAPHS)
3<->multig-undconstr :<->text1811.htm#20039<->multig-undconstr :: Construction of a General Multigraph (MULTIGRAPHS)
5<->MultiGraph  <->text1811.htm#20040<->MultiGraph<S | edges >  : SetEnum, List -> GrphMultUnd, GrphVertSet, GrphEdgeSet
5<->MultiGraph  <->text1811.htm#20040<->MultiGraph<S | edges >  : SetIndx, List -> GrphMultUnd, GrphVertSet, GrphEdgeSet
5<->MultiGraph<n | edges > <->text1811.htm#20040<->MultiGraph&lt;n | edges &gt; : RngIntElt, List -&gt; GrphMultUnd, GrphVertSet, GrphEdgeSet
4<->MultiGraph_GrphMultUnd_Constr (Example H156E1)<->text1811.htm#20041<->MultiGraph_GrphMultUnd_Constr (Example H156E1)
4<->Example-GrphMultUnd_Constr :<->text1811.htm#20041<->Example-GrphMultUnd_Constr :: MultiGraph_GrphMultUnd_Constr (Example H156E1)
3<->multig-undconstr :<->text1811.htm#20039<->multig-undconstr :: Construction of a General Multigraph (MULTIGRAPHS)
3<->multig-dirconstr :<->text1811.htm#20042<->multig-dirconstr :: Construction of a General Multidigraph (MULTIGRAPHS)
5<->MultiDigraph  <->text1811.htm#20043<->MultiDigraph<S | edges >  : SetEnum, List -> GrphMultDir, GrphVertSet, GrphEdgeSet
5<->MultiDigraph  <->text1811.htm#20043<->MultiDigraph<S | edges >  : SetIndx, List -> GrphMultDir, GrphVertSet, GrphEdgeSet
5<->MultiDigraph<n | edges > <->text1811.htm#20043<->MultiDigraph&lt;n | edges &gt; : RngIntElt, List -&gt; GrphMultDir, GrphVertSet, GrphEdgeSet
4<->MultiGraph_GrphMultDir_Constr (Example H156E2)<->text1811.htm#20044<->MultiGraph_GrphMultDir_Constr (Example H156E2)
4<->Example-GrphMultDir_Constr :<->text1811.htm#20044<->Example-GrphMultDir_Constr :: MultiGraph_GrphMultDir_Constr (Example H156E2)
3<->multig-dirconstr :<->text1811.htm#20042<->multig-dirconstr :: Construction of a General Multidigraph (MULTIGRAPHS)
3<->multi-print :<->text1811.htm#20045<->multi-print :: Printing of a Multi(di)graph (MULTIGRAPHS)
3<->multig-support :<->text1811.htm#20046<->multig-support :: Operations on the Support (MULTIGRAPHS)
5<->Support(V) <->text1811.htm#20047<->Support(V) : GrphVertSet -> SetIndx
5<->Support(G) <->text1811.htm#20047<->Support(G) : GrphMult -&gt; SetIndx
5<->ChangeSupport(G, S) <->text1811.htm#20048<->ChangeSupport(G, S) : GrphMult, SetIndx -&gt; GrphMult, GrphVertSet, GrphEdgeSet
5<->ChangeSupport(~G, S) <->text1811.htm#20049<->ChangeSupport(~G, S) : GrphMult, SetIndx -&gt;
5<->StandardGraph(G) <->text1811.htm#20050<->StandardGraph(G) : GrphMult -&gt; GrphMult
4<->MultiGraph_GrphMult_Support (Example H156E3)<->text1811.htm#20051<->MultiGraph_GrphMult_Support (Example H156E3)
4<->Example-GrphMult_Support :<->text1811.htm#20051<->Example-GrphMult_Support :: MultiGraph_GrphMult_Support (Example H156E3)
3<->multig-support :<->text1811.htm#20046<->multig-support :: Operations on the Support (MULTIGRAPHS)
3<->multig-constr :<->text1811.htm<->multig-constr :: Construction of Multigraphs (MULTIGRAPHS)
3<->multig-vertex-edge-set :<->text1812.htm<->multig-vertex-edge-set :: The Vertex--Set and Edge--Set of Multigraphs (MULTIGRAPHS)
5<->EdgeIndices(u, v) <->text1812.htm#20053<->EdgeIndices(u, v) : GrphVert, GrphVert -&gt; SeqEnum
5<->EdgeMultiplicity(u, v) <->text1812.htm#20054<->EdgeMultiplicity(u, v) : GrphVert, GrphVert -&gt; RngIntElt
5<->Edges(u, v) <->text1812.htm#20055<->Edges(u, v) : GrphVert, GrphVert -&gt; SeqEnum
5<->IncidentEdges(u) <->text1812.htm#20056<->IncidentEdges(u) : GrphVert  -&gt; SetEnum
5<->E ! < { u, v }, i > <->text1812.htm#20057<->E ! &lt; { u, v }, i &gt; : GrphEdgeSet, &lt; . &gt; -&gt; GrphEdge
5<->E ! < [ u, v ], i > <->text1812.htm#20058<->E ! &lt; [ u, v ], i &gt; : GrphEdgeSet, &lt; . &gt; -&gt; GrphEdge
5<->pE.i {E . i} <->text1812.htm#20059<->pE.i {E . i} : GrphEdgeSet, RngIntElt -&gt; GrphEdge
5<->EndVertices(e) <->text1812.htm#20060<->EndVertices(e) : GrphEdge -> [ GrphVert, GrphVert ]
5<->EndVertices(e) <->text1812.htm#20060<->EndVertices(e) : GrphEdge -&gt;{ GrphVert, GrphVert }
5<->InitialVertex(e) <->text1812.htm#20061<->InitialVertex(e) : GrphEdge -&gt; GrphVert
5<->TerminalVertex(e) <->text1812.htm#20062<->TerminalVertex(e) : GrphEdge -&gt; GrphVert
5<->Index(e) <->text1812.htm#20063<->Index(e) : GrphEdge -&gt; RngIntElt
5<->s eq t <->text1812.htm#20064<->s eq t : GrphEdge, GrphEdge -&gt; BoolElt
4<->MultiGraph_GrphMult_Edges (Example H156E4)<->text1812.htm#20065<->MultiGraph_GrphMult_Edges (Example H156E4)
4<->Example-GrphMult_Edges :<->text1812.htm#20065<->Example-GrphMult_Edges :: MultiGraph_GrphMult_Edges (Example H156E4)
3<->multig-vertex-edge-set :<->text1812.htm<->multig-vertex-edge-set :: The Vertex--Set and Edge--Set of Multigraphs (MULTIGRAPHS)
3<->multig-decorations :<->text1813.htm<->multig-decorations :: Vertex and Edge Decorations (MULTIGRAPHS)
3<->multig-vertex-decorations :: Vertex Decorations<->text1813.htm#20067<->multig-vertex-decorations :: Vertex Decorations: Labels (MULTIGRAPHS)
5<->AssignLabel(~G, u, l) <->text1813.htm#20068<->AssignLabel(~G, u, l) : GrphMult, GrphVert, . -&gt;
5<->AssignLabels(\til G, S, L) <->text1813.htm#20069<->AssignLabels(\til G, S, L) : GrphMult, \lbrace @ GrphVert @\rbrace, SeqEnum ->
5<->AssignLabels(~G, S, L) <->text1813.htm#20069<->AssignLabels(~G, S, L) : GrphMult, [GrphVert], SeqEnum -&gt;
5<->AssignVertexLabels(~G, L) <->text1813.htm#20070<->AssignVertexLabels(~G, L) : GrphMult, SeqEnum -&gt;
5<->IsLabelled(u) <->text1813.htm#20071<->IsLabelled(u) : GrphVert -&gt; BoolElt
5<->IsLabelled(V) <->text1813.htm#20072<->IsLabelled(V) : GrphVertSet -&gt; BoolElt
5<->IsVertexLabelled(G) <->text1813.htm#20073<->IsVertexLabelled(G) : GrphMult -&gt; BoolElt
5<->Label(u) <->text1813.htm#20074<->Label(u) : GrphVert -&gt; .
5<->Labels(S) <->text1813.htm#20075<->Labels(S) : [GrphVert] -&gt; SeqEnum
5<->Labels(V) <->text1813.htm#20076<->Labels(V) : GrphVertSet -&gt; SeqEnum
5<->VertexLabels(G) <->text1813.htm#20077<->VertexLabels(G) : GrphMult -&gt; SeqEnum
5<->DeleteLabel(~G, u) <->text1813.htm#20078<->DeleteLabel(~G, u) : GrphMult, GrphVert -&gt;
5<->DeleteLabels(~G, S) <->text1813.htm#20079<->DeleteLabels(~G, S) : GrphMult, [GrphVert] -&gt;
5<->DeleteVertexLabels(~G) <->text1813.htm#20080<->DeleteVertexLabels(~G) : GrphMult -&gt;
3<->multig-vertex-decorations :: Vertex Decorations<->text1813.htm#20067<->multig-vertex-decorations :: Vertex Decorations: Labels (MULTIGRAPHS)
3<->multig-edge-decorations :<->text1813.htm#20081<->multig-edge-decorations :: Edge Decorations (MULTIGRAPHS)
3<->multig-assigning-decs :<->text1813.htm#20082<->multig-assigning-decs :: Assigning Edge Decorations (MULTIGRAPHS)
5<->AssignCapacity :: AssignLabel(~G, e, l) <->text1813.htm#20083<->AssignCapacity :: AssignLabel(~G, e, l) : GrphMult, GrphEdge, . -&gt;
5<->AssignWeight :: AssignLabel(~G, e, l) <->text1813.htm#20083<->AssignWeight :: AssignLabel(~G, e, l) : GrphMult, GrphEdge, . -&gt;
5<->AssignLabel(~G, e, l) <->text1813.htm#20083<->AssignLabel(~G, e, l) : GrphMult, GrphEdge, . -&gt;
5<->AssignLabels(\til G, S, D) <->text1813.htm#20084<->AssignLabels(\til G, S, D) : GrphMult, \lbrace @ GrphEdge @\rbrace, SeqEnum ->
5<->AssignCapacities :: AssignLabels(~G, S, D) <->text1813.htm#20084<->AssignCapacities :: AssignLabels(~G, S, D) : GrphMult, [GrphEdge], SeqEnum -&gt;
5<->AssignCapacities(\til G, S, D) : GrphMult, \lbrace @ GrphEdge @\rbrace, [RngIntElt] -> :: AssignLabels(~G, S, D) <->text1813.htm#20084<->AssignCapacities(\til G, S, D) : GrphMult, \lbrace @ GrphEdge @\rbrace, [RngIntElt] -> :: AssignLabels(~G, S, D) : GrphMult, [GrphEdge], SeqEnum -&gt;
5<->AssignWeights :: AssignLabels(~G, S, D) <->text1813.htm#20084<->AssignWeights :: AssignLabels(~G, S, D) : GrphMult, [GrphEdge], SeqEnum -&gt;
5<->AssignWeights(\til G, S, D) : GrphMult, \lbrace @ GrphEdge @\rbrace, [RngElt] -> :: AssignLabels(~G, S, D) <->text1813.htm#20084<->AssignWeights(\til G, S, D) : GrphMult, \lbrace @ GrphEdge @\rbrace, [RngElt] -> :: AssignLabels(~G, S, D) : GrphMult, [GrphEdge], SeqEnum -&gt;
5<->AssignLabels(~G, S, D) <->text1813.htm#20084<->AssignLabels(~G, S, D) : GrphMult, [GrphEdge], SeqEnum -&gt;
5<->AssignCapacities :: AssignEdgeLabels(~G, D) <->text1813.htm#20085<->AssignCapacities :: AssignEdgeLabels(~G, D) : GrphMult, SeqEnum -&gt;
5<->AssignWeights :: AssignEdgeLabels(~G, D) <->text1813.htm#20085<->AssignWeights :: AssignEdgeLabels(~G, D) : GrphMult, SeqEnum -&gt;
5<->AssignEdgeLabels(~G, D) <->text1813.htm#20085<->AssignEdgeLabels(~G, D) : GrphMult, SeqEnum -&gt;
3<->multig-assigning-decs :<->text1813.htm#20082<->multig-assigning-decs :: Assigning Edge Decorations (MULTIGRAPHS)
3<->multig-testing-decs :<->text1813.htm#20086<->multig-testing-decs :: Testing for Edge Decorations (MULTIGRAPHS)
5<->IsLabelled(e) <->text1813.htm#20087<->IsLabelled(e) : GrphEdge -&gt; BoolElt
5<->IsLabelled(E) <->text1813.htm#20088<->IsLabelled(E) : GrphEdgeSet -&gt; BoolElt
5<->IsEdgeLabelled(G) <->text1813.htm#20089<->IsEdgeLabelled(G) : Grph -> BoolElt
5<->IsEdgeLabelled(G) <->text1813.htm#20089<->IsEdgeLabelled(G) : GrphMult -&gt; BoolElt
5<->IsCapacitated(E) <->text1813.htm#20090<->IsCapacitated(E) : GrphEdgeSet -&gt; BoolElt
5<->IsEdgeCapacitated(G) <->text1813.htm#20091<->IsEdgeCapacitated(G) : Grph -> BoolElt
5<->IsEdgeCapacitated(G) <->text1813.htm#20091<->IsEdgeCapacitated(G) : GrphMult -&gt; BoolElt
5<->IsWeighted(E) <->text1813.htm#20092<->IsWeighted(E) : GrphEdgeSet -&gt; BoolElt
5<->IsEdgeWeighted(G) <->text1813.htm#20093<->IsEdgeWeighted(G) : Grph -> BoolElt
5<->IsEdgeWeighted(G) <->text1813.htm#20093<->IsEdgeWeighted(G) : GrphMult -&gt; BoolElt
3<->multig-testing-decs :<->text1813.htm#20086<->multig-testing-decs :: Testing for Edge Decorations (MULTIGRAPHS)
3<->multig-reading-decs :<->text1813.htm#20094<->multig-reading-decs :: Reading Edge Decorations (MULTIGRAPHS)
5<->Label(e) <->text1813.htm#20095<->Label(e) : GrphEdge -&gt; .
5<->Capacity(e) <->text1813.htm#20096<->Capacity(e) : GrphEdge -&gt; RngIntElt
5<->Weight(e) <->text1813.htm#20097<->Weight(e) : GrphEdge -&gt; RngElt
5<->Capacities :: Labels(S) <->text1813.htm#20098<->Capacities :: Labels(S) : [GrphEdge] -&gt; SeqEnum
5<->Weights :: Labels(S) <->text1813.htm#20098<->Weights :: Labels(S) : [GrphEdge] -&gt; SeqEnum
5<->Labels(S) <->text1813.htm#20098<->Labels(S) : [GrphEdge] -&gt; SeqEnum
5<->Capacities :: Labels(E) <->text1813.htm#20099<->Capacities :: Labels(E) : GrphEdgeSet -&gt; SeqEnum
5<->Weights :: Labels(E) <->text1813.htm#20099<->Weights :: Labels(E) : GrphEdgeSet -&gt; SeqEnum
5<->Labels(E) <->text1813.htm#20099<->Labels(E) : GrphEdgeSet -&gt; SeqEnum
5<->EdgeLabels(G) <->text1813.htm#20100<->EdgeLabels(G) : Grph -> SeqEnum
5<->EdgeCapacities :: EdgeLabels(G) <->text1813.htm#20100<->EdgeCapacities :: EdgeLabels(G) : GrphMult -&gt; SeqEnum
5<->EdgeCapacities(G) : Grph -> SeqEnum :: EdgeLabels(G) <->text1813.htm#20100<->EdgeCapacities(G) : Grph -> SeqEnum :: EdgeLabels(G) : GrphMult -&gt; SeqEnum
5<->EdgeWeights :: EdgeLabels(G) <->text1813.htm#20100<->EdgeWeights :: EdgeLabels(G) : GrphMult -&gt; SeqEnum
5<->EdgeWeights(G) : Grph -> SeqEnum :: EdgeLabels(G) <->text1813.htm#20100<->EdgeWeights(G) : Grph -> SeqEnum :: EdgeLabels(G) : GrphMult -&gt; SeqEnum
5<->EdgeLabels(G) <->text1813.htm#20100<->EdgeLabels(G) : GrphMult -&gt; SeqEnum
3<->multig-reading-decs :<->text1813.htm#20094<->multig-reading-decs :: Reading Edge Decorations (MULTIGRAPHS)
3<->multig-del-decs :<->text1813.htm#20101<->multig-del-decs :: Deleting Edge Decorations (MULTIGRAPHS)
5<->DeleteCapacity :: DeleteLabel(~G, e) <->text1813.htm#20102<->DeleteCapacity :: DeleteLabel(~G, e) : GrphMult, GrphEdge -&gt;
5<->DeleteWeight :: DeleteLabel(~G, e) <->text1813.htm#20102<->DeleteWeight :: DeleteLabel(~G, e) : GrphMult, GrphEdge -&gt;
5<->DeleteLabel(~G, e) <->text1813.htm#20102<->DeleteLabel(~G, e) : GrphMult, GrphEdge -&gt;
5<->DeleteCapacities :: DeleteLabels(~G, S) <->text1813.htm#20103<->DeleteCapacities :: DeleteLabels(~G, S) : GrphMult, [GrphEdge] -&gt;
5<->DeleteWeights :: DeleteLabels(~G, S) <->text1813.htm#20103<->DeleteWeights :: DeleteLabels(~G, S) : GrphMult, [GrphEdge] -&gt;
5<->DeleteLabels(~G, S) <->text1813.htm#20103<->DeleteLabels(~G, S) : GrphMult, [GrphEdge] -&gt;
5<->DeleteCapacities :: DeleteEdgeLabels(~G) <->text1813.htm#20104<->DeleteCapacities :: DeleteEdgeLabels(~G) : GrphMult -&gt;
5<->DeleteWeights :: DeleteEdgeLabels(~G) <->text1813.htm#20104<->DeleteWeights :: DeleteEdgeLabels(~G) : GrphMult -&gt;
5<->DeleteEdgeLabels(~G) <->text1813.htm#20104<->DeleteEdgeLabels(~G) : GrphMult -&gt;
3<->multig-del-decs :<->text1813.htm#20101<->multig-del-decs :: Deleting Edge Decorations (MULTIGRAPHS)
3<->multig-edge-decorations :<->text1813.htm#20081<->multig-edge-decorations :: Edge Decorations (MULTIGRAPHS)
3<->multig-un-decs :<->text1813.htm#20105<->multig-un-decs :: Unlabelled, or Uncapacitated, or Unweighted Graphs (MULTIGRAPHS)
5<->UnlabelledGraph(G) <->text1813.htm#20106<->UnlabelledGraph(G) : GrphMult -&gt; GrphMult
5<->UncapacitatedGraph(G) <->text1813.htm#20107<->UncapacitatedGraph(G) : GrphMult -&gt; GrphMult
5<->UnweightedGraph(G) <->text1813.htm#20108<->UnweightedGraph(G) : GrphMult -&gt; GrphMult
4<->MultiGraph_GrphMult_Labels (Example H156E5)<->text1813.htm#20109<->MultiGraph_GrphMult_Labels (Example H156E5)
4<->Example-GrphMult_Labels :<->text1813.htm#20109<->Example-GrphMult_Labels :: MultiGraph_GrphMult_Labels (Example H156E5)
4<->MultiGraph_CayleyGraph (Example H156E6)<->text1813.htm#20110<->MultiGraph_CayleyGraph (Example H156E6)
4<->Example-CayleyGraph :<->text1813.htm#20110<->Example-CayleyGraph :: MultiGraph_CayleyGraph (Example H156E6)
4<->MultiGraph_GrphMult_EdgesDecs (Example H156E7)<->text1813.htm#20111<->MultiGraph_GrphMult_EdgesDecs (Example H156E7)
4<->Example-GrphMult_EdgesDecs :<->text1813.htm#20111<->Example-GrphMult_EdgesDecs :: MultiGraph_GrphMult_EdgesDecs (Example H156E7)
3<->multig-un-decs :<->text1813.htm#20105<->multig-un-decs :: Unlabelled, or Uncapacitated, or Unweighted Graphs (MULTIGRAPHS)
3<->multig-decorations :<->text1813.htm<->multig-decorations :: Vertex and Edge Decorations (MULTIGRAPHS)
3<->multig-stand-constr :<->text1814.htm<->multig-stand-constr :: Standard Construction for  Multigraphs (MULTIGRAPHS)
3<->multig-stand-constr :<->text1814.htm#20113<->multig-stand-constr :: Subgraphs (MULTIGRAPHS)
5<->sub< G | list > <->text1814.htm#20114<->sub&lt; G | list &gt; : GrphMult, List -&gt; GrphMult, GrphVertSet, GrphEdgeSet
4<->MultiGraph_GrphMult_Sub (Example H156E8)<->text1814.htm#20115<->MultiGraph_GrphMult_Sub (Example H156E8)
4<->Example-GrphMult_Sub :<->text1814.htm#20115<->Example-GrphMult_Sub :: MultiGraph_GrphMult_Sub (Example H156E8)
3<->multig-stand-constr :<->text1814.htm#20113<->multig-stand-constr :: Subgraphs (MULTIGRAPHS)
3<->multig-mutation :<->text1814.htm#20116<->multig-mutation :: Incremental Construction of Multigraphs (MULTIGRAPHS)
3<->multig-mutation-add-v :<->text1814.htm#20117<->multig-mutation-add-v :: Adding Vertices (MULTIGRAPHS)
5<->G + n <->text1814.htm#20118<->G + n : GrphMult, RngIntElt -&gt; GrphMult
5<->AddVertex :: G +:= n <->text1814.htm#20119<->AddVertex :: G +:= n : GrphMult, RngIntElt -&gt;
5<->AddVertices :: G +:= n <->text1814.htm#20119<->AddVertices :: G +:= n : GrphMult, RngIntElt -&gt;
5<->G +:= n <->text1814.htm#20119<->G +:= n : GrphMult, RngIntElt -&gt;
5<->AddVertex(~G, l) <->text1814.htm#20120<->AddVertex(~G, l) : GrphMult, . -&gt;
5<->AddVertices(~G, n, L) <->text1814.htm#20121<->AddVertices(~G, n, L) : GrphMult, RngIntElt, SeqEnum -&gt;
3<->multig-mutation-add-v :<->text1814.htm#20117<->multig-mutation-add-v :: Adding Vertices (MULTIGRAPHS)
3<->multig-mutation-rm-v :<->text1814.htm#20122<->multig-mutation-rm-v :: Removing Vertices (MULTIGRAPHS)
5<->G - U <->text1814.htm#20123<->G - U : GrphMult, \brace\  GrphVert \rbrace -> GrphMult
5<->G - v <->text1814.htm#20123<->G - v : GrphMult, GrphVert -&gt; GrphMult
5<->G -:= U <->text1814.htm#20124<->G -:= U : GrphMult, \brace\  GrphVert \rbrace -> 
5<->RemoveVertex :: G -:= v <->text1814.htm#20124<->RemoveVertex :: G -:= v : GrphMult, GrphVert -&gt;
5<->RemoveVertices :: G -:= v <->text1814.htm#20124<->RemoveVertices :: G -:= v : GrphMult, GrphVert -&gt;
5<->G -:= v <->text1814.htm#20124<->G -:= v : GrphMult, GrphVert -&gt;
3<->multig-mutation-rm-v :<->text1814.htm#20122<->multig-mutation-rm-v :: Removing Vertices (MULTIGRAPHS)
3<->multig-mutation-add-e :<->text1814.htm#20125<->multig-mutation-add-e :: Adding Edges (MULTIGRAPHS)
5<->G + [ u, v ]  <->text1814.htm#20126<->G + [ u, v ]  : GrphMultDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphMultDir, GrphEdge
5<->G + [ u, v ] <->text1814.htm#20126<->G + [ u, v ] : GrphNet, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphNet, GrphEdge
5<->G + { u, v } <->text1814.htm#20126<->G + { u, v } : GrphMultUnd, { { GrphVert, GrphVert } } -&gt; GrphMultUnd, GrphEdge
5<->G + [ \brace\  u, v \rbrace\ ] <->text1814.htm#20127<->G + [ \brace\  u, v \rbrace\ ] : GrphMultUnd, [ \brace\ GrphVert, GrphVert \rbrace\ ] -> GrphMultUnd
5<->G + \brace\  [ u, v ]  \rbrace <->text1814.htm#20127<->G + \brace\  [ u, v ]  \rbrace : GrphMultDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphDir
5<->G + [ [ u, v ] ] <->text1814.htm#20127<->G + [ [ u, v ] ] : GrphMultDir, [ [ GrphVert, GrphVert ] ] -> GrphDir
5<->G + \brace\  [ u, v ]  \rbrace <->text1814.htm#20127<->G + \brace\  [ u, v ]  \rbrace : GrphNet, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphNet
5<->G + [ [ u, v ] ] <->text1814.htm#20127<->G + [ [ u, v ] ] : GrphNet, [ [ GrphVert, GrphVert ] ] -> GrphNet
5<->G + { { u, v } } <->text1814.htm#20127<->G + { { u, v } } : GrphMultUnd, { { GrphVert, GrphVert } } -&gt; GrphMultUnd
5<->G +:= [ u, v ] <->text1814.htm#20128<->G +:= [ u, v ] : GrphDir, [ GrphVert, GrphVert ] ->
5<->G +:= [ u, v ] <->text1814.htm#20128<->G +:= [ u, v ] : GrphNet, [ GrphVert, GrphVert ] ->
5<->G +:= \brace\  \brace\ u, v \rbrace\ \rbrace<->text1814.htm#20128<->G +:= \brace\  \brace\ u, v \rbrace\ \rbrace: GrphMultUnd, \brace\ \brace\  GrphVert, GrphVert  \rbrace \rbrace ->
5<->G +:= [ \brace\ u, v \rbrace\ ] <->text1814.htm#20128<->G +:= [ \brace\ u, v \rbrace\ ] : GrphMultUnd, [ \brace\  GrphVert, GrphVert  \rbrace ] ->
5<->G +:= \brace\  [ u, v ] \rbrace <->text1814.htm#20128<->G +:= \brace\  [ u, v ] \rbrace : GrphMultDir, \brace\  [ GrphVert, GrphVert ] \rbrace ->
5<->G +:= [ [ u, v ] ] <->text1814.htm#20128<->G +:= [ [ u, v ] ] : GrphMultDir, [ [ GrphVert, GrphVert ] ] ->
5<->G +:= \brace\  [ u, v ] \rbrace <->text1814.htm#20128<->G +:= \brace\  [ u, v ] \rbrace : GrphNet, \brace\  [ GrphVert, GrphVert ] \rbrace ->
5<->G +:= [ [ u, v ] ] <->text1814.htm#20128<->G +:= [ [ u, v ] ] : GrphNet, [ [ GrphVert, GrphVert ] ] ->
5<->G +:= { u, v } <->text1814.htm#20128<->G +:= { u, v } : GrphMultUnd, { GrphVert, GrphVert } -&gt;
5<->AddEdge(G, u, v) <->text1814.htm#20129<->AddEdge(G, u, v) : GrphMult, GrphVert, GrphVert -&gt; GrphMult, GrphEdge
5<->AddEdge(G, u, v, l) <->text1814.htm#20130<->AddEdge(G, u, v, l) : GrphMultDir, GrphVert, GrphVert, . -> GrphMultDir, GrphEdge
5<->AddEdge(G, u, v, l) <->text1814.htm#20130<->AddEdge(G, u, v, l) : GrphMultUnd, GrphVert, GrphVert, . -&gt; GrphMult, GrphEdge
5<->AddEdge(G, u, v, c) <->text1814.htm#20131<->AddEdge(G, u, v, c) : GrphNet, GrphVert, RngIntElt, . -&gt; GrphNet, GrphEdge
5<->AddEdge(G, u, v, c, l) <->text1814.htm#20132<->AddEdge(G, u, v, c, l) : GrphNet, GrphVert, GrphVert, RngIntElt, . -&gt; GrphNet, GrphEdge
5<->AddEdge(\til G, u, v, l) <->text1814.htm#20133<->AddEdge(\til G, u, v, l) : GrphMultUnd, GrphVert, GrphVert, . ->
5<->AddEdge(\til G, u, v, l) <->text1814.htm#20133<->AddEdge(\til G, u, v, l) : GrphMultDir, GrphVert, GrphVert, . ->
5<->AddEdge(\til G, u, v, c) <->text1814.htm#20133<->AddEdge(\til G, u, v, c) : GrphNet, GrphVert, GrphVert, RngIntElt ->
5<->AddEdge(\til G, u, v, c, l) <->text1814.htm#20133<->AddEdge(\til G, u, v, c, l) : GrphNet, GrphVert, GrphVert, RngIntElt, . ->
5<->AddEdge(~G, u, v) <->text1814.htm#20133<->AddEdge(~G, u, v) : GrphMult, GrphVert, GrphVert  -&gt;
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphMultUnd, [ \brace\ GrphVert, GrphVert \rbrace\ ] -> GrphMultUnd
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphMultDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> GrphMultDir
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphMultDir, [ [  GrphVert, GrphVert ] ] -> GrphMultDir
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphNet, \brace\  [  GrphVert, GrphVert ] \rbrace -> GrphNet
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphNet, [ [  GrphVert, GrphVert ] ] -> GrphNet
5<->AddEdges(G, S) <->text1814.htm#20134<->AddEdges(G, S) : GrphMultUnd, { { GrphVert, GrphVert } } -&gt; GrphMultUnd
5<->AddEdges(G, S, L) <->text1814.htm#20135<->AddEdges(G, S, L) : GrphMult, SeqEnum, SeqEnum -&gt; GrphMult
5<->AddEdges(\til G, S) <->text1814.htm#20136<->AddEdges(\til G, S) : GrphMultUnd, [ \brace\ GrphVert, GrphVert \rbrace\ ] -> 
5<->AddEdges(\til G, S) <->text1814.htm#20136<->AddEdges(\til G, S) : GrphMultDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> 
5<->AddEdges(\til G, S) <->text1814.htm#20136<->AddEdges(\til G, S) : GrphMultDir, [ [  GrphVert, GrphVert ] ] ->
5<->AddEdges(\til G, S) <->text1814.htm#20136<->AddEdges(\til G, S) : GrphNet, \brace\  [  GrphVert, GrphVert ] \rbrace -> 
5<->AddEdges(\til G, S) <->text1814.htm#20136<->AddEdges(\til G, S) : GrphNet, [ [  GrphVert, GrphVert ] ] ->
5<->AddEdges(\til G, S, L) <->text1814.htm#20136<->AddEdges(\til G, S, L) : GrphMult, SeqEnum, SeqEnum ->
5<->AddEdges(~G, S) <->text1814.htm#20136<->AddEdges(~G, S) : GrphMultUnd, { { GrphVert, GrphVert } } -&gt;
3<->multig-mutation-add-e :<->text1814.htm#20125<->multig-mutation-add-e :: Adding Edges (MULTIGRAPHS)
3<->multig-mutation-rm-e :<->text1814.htm#20137<->multig-mutation-rm-e :: Removing Edges (MULTIGRAPHS)
5<->G - \brace\  e \rbrace <->text1814.htm#20138<->G - \brace\  e \rbrace : GrphMult, \brace\  GrphEdge \rbrace -> GrphMult
5<->G - e <->text1814.htm#20138<->G - e : GrphMult, GrphEdge -&gt; GrphMult
5<->G - \brace\  [u, v] \rbrace <->text1814.htm#20139<->G - \brace\  [u, v] \rbrace : GrphMultDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> GrphMultDir
5<->G - { { u, v } } <->text1814.htm#20139<->G - { { u, v } } : GrphMultUnd, { { GrphVert, GrphVert rbrace } -&gt; GrphMultUnd
5<->G  -:= \brace\  e \rbrace <->text1814.htm#20140<->G  -:= \brace\  e \rbrace : GrphMult, \brace\  GrphEdge \rbrace ->
5<->G -:= \brace\  \brace\  u, v \rbrace\ \rbrace  <->text1814.htm#20140<->G -:= \brace\  \brace\  u, v \rbrace\ \rbrace  : GrphMultUnd, \brace\  \brace\ GrphVert, GrphVert rbrace\ \rbrace -> 
5<->G -:= \brace\  [u, v] \rbrace <->text1814.htm#20140<->G -:= \brace\  [u, v] \rbrace : GrphMultDir, \brace\  [ GrphVert, GrphVert ] \rbrace -> 
5<->RemoveEdge :: G -:= e <->text1814.htm#20140<->RemoveEdge :: G -:= e : GrphMult, GrphEdge -&gt;
5<->RemoveEdges :: G -:= e <->text1814.htm#20140<->RemoveEdges :: G -:= e : GrphMult, GrphEdge -&gt;
5<->RemoveEdge(\til G, u, v) : GrphMult, GrphVert, GrphVert -> :: G -:= e <->text1814.htm#20140<->RemoveEdge(\til G, u, v) : GrphMult, GrphVert, GrphVert -> :: G -:= e : GrphMult, GrphEdge -&gt;
5<->RemoveEdges(\til G, S) : GrphMultDir, \brace\ \brace\  GrphVert, GrphVert \rbrace\ \rbrace -> :: G -:= e <->text1814.htm#20140<->RemoveEdges(\til G, S) : GrphMultDir, \brace\ \brace\  GrphVert, GrphVert \rbrace\ \rbrace -> :: G -:= e : GrphMult, GrphEdge -&gt;
5<->RemoveEdges(\til G, S) : GrphMultDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> :: G -:= e <->text1814.htm#20140<->RemoveEdges(\til G, S) : GrphMultDir, \brace\  [  GrphVert, GrphVert ] \rbrace -> :: G -:= e : GrphMult, GrphEdge -&gt;
5<->G -:= e <->text1814.htm#20140<->G -:= e : GrphMult, GrphEdge -&gt;
3<->multig-mutation-rm-e :<->text1814.htm#20137<->multig-mutation-rm-e :: Removing Edges (MULTIGRAPHS)
3<->multig-mutation :<->text1814.htm#20116<->multig-mutation :: Incremental Construction of Multigraphs (MULTIGRAPHS)
3<->multig-contr-switch :<->text1814.htm#20141<->multig-contr-switch :: Vertex Insertion, Contraction (MULTIGRAPHS)
5<->InsertVertex(e) <->text1814.htm#20142<->InsertVertex(e) : GrphEdge -&gt; GrphMult
5<->InsertVertex(T) <->text1814.htm#20143<->InsertVertex(T) : { GrphEdge } -&gt; GrphMult
5<->Contract(e) <->text1814.htm#20144<->Contract(e) : GrphEdge -&gt; GrphMult
5<->Contract(u, v) <->text1814.htm#20145<->Contract(u, v) : GrphVert, GrphVert -&gt; GrphMult
5<->Contract(S) <->text1814.htm#20146<->Contract(S) : { GrphVert }  -&gt; GrphMult
3<->multig-contr-switch :<->text1814.htm#20141<->multig-contr-switch :: Vertex Insertion, Contraction (MULTIGRAPHS)
3<->multig-union :<->text1814.htm#20147<->multig-union :: Unions of Multigraphs (MULTIGRAPHS)
5<->Union(G, H) <->text1814.htm#20148<->Union(G, H) : GrphMultDir, GrphMultDir -> GrphMultDir
5<->join :: Union(G, H) <->text1814.htm#20148<->join :: Union(G, H) : GrphMultUnd, GrphMultUnd -&gt; GrphMultUnd
5<->G join H : GrphMultDir, GrphMultDir -> GrphMultDir :: Union(G, H) <->text1814.htm#20148<->G join H : GrphMultDir, GrphMultDir -> GrphMultDir :: Union(G, H) : GrphMultUnd, GrphMultUnd -&gt; GrphMultUnd
5<->Union(G, H) <->text1814.htm#20148<->Union(G, H) : GrphMultUnd, GrphMultUnd -&gt; GrphMultUnd
5<->join :: Union(N, H) <->text1814.htm#20149<->join :: Union(N, H) : GrphNet, GrphNet -&gt; GrphNet
5<->Union(N, H) <->text1814.htm#20149<->Union(N, H) : GrphNet, GrphNet -&gt; GrphNet
5<->\& join S <->text1814.htm#20150<->\& join S : [ GrphMultDir ] -> GrphMultDir
5<->\& join S <->text1814.htm#20150<->\& join S : [ GrphNet ] -> GrphNet
5<->\& join S <->text1814.htm#20150<->\& join S : \brace MultiUnd \rbrace -> GrphMultUnd
5<->\& join S <->text1814.htm#20150<->\& join S : \brace GrphMultDir \rbrace -> GrphMultDir
5<->\& join S <->text1814.htm#20150<->\& join S : \brace GrphNet \rbrace -> GrphNet
5<->& join S <->text1814.htm#20150<->&amp; join S : [ MultiUnd ] -&gt; GrphMultUnd
5<->EdgeUnion(G, H) <->text1814.htm#20151<->EdgeUnion(G, H) : GrphMultDir, GrphMultDir -> GrphMultDir
5<->EdgeUnion(G, H) <->text1814.htm#20151<->EdgeUnion(G, H) : GrphMultUnd, GrphMultUnd -&gt; GrphMultUnd
5<->EdgeUnion(N, H) <->text1814.htm#20152<->EdgeUnion(N, H) : GrphNet, GrphNet -&gt; GrphNet
3<->multig-union :<->text1814.htm#20147<->multig-union :: Unions of Multigraphs (MULTIGRAPHS)
3<->multig-stand-constr :<->text1814.htm<->multig-stand-constr :: Standard Construction for  Multigraphs (MULTIGRAPHS)
3<->multig-conversion :<->text1815.htm<->multig-conversion :: Conversion Functions (MULTIGRAPHS)
3<->multig-conv-orient :<->text1815.htm#20154<->multig-conv-orient :: Orientated Graphs (MULTIGRAPHS)
5<->OrientatedGraph(G) <->text1815.htm#20155<->OrientatedGraph(G) : GrphMultUnd -&gt; GrphMultDir
3<->multig-conv-orient :<->text1815.htm#20154<->multig-conv-orient :: Orientated Graphs (MULTIGRAPHS)
3<->multidig-conv :<->text1815.htm#20156<->multidig-conv :: Converse (MULTIGRAPHS)
5<->Converse(G) <->text1815.htm#20157<->Converse(G) : GrphMultDir -&gt; GrphMultDir
3<->multidig-conv :<->text1815.htm#20156<->multidig-conv :: Converse (MULTIGRAPHS)
3<->multig-conv :<->text1815.htm#20158<->multig-conv :: Converting between Simple Graphs and Multigraphs (MULTIGRAPHS)
5<->UnderlyingGraph(G) <->text1815.htm#20159<->UnderlyingGraph(G) : Grph -> GrphUnd, GrphVertSet, GrphEdgeSet
5<->UnderlyingGraph(G) <->text1815.htm#20159<->UnderlyingGraph(G) : GrphMult -&gt; GrphUnd, GrphVertSet, GrphEdgeSet
5<->UnderlyingDigraph(G) <->text1815.htm#20160<->UnderlyingDigraph(G) : Grph -> GrphDir, GrphVertSet, GrphEdgeSet
5<->UnderlyingDigraph(G) <->text1815.htm#20160<->UnderlyingDigraph(G) : GrphMult-&gt; GrphDir, GrphVertSet, GrphEdgeSet
5<->UnderlyingMultiGraph(G) <->text1815.htm#20161<->UnderlyingMultiGraph(G) : GrphMult -> GrphMultUnd, GrphVertSet, GrphEdgeSet
5<->UnderlyingMultiGraph(G) <->text1815.htm#20161<->UnderlyingMultiGraph(G) : Grph -&gt; GrphMultUnd, GrphVertSet, GrphEdgeSet
5<->UnderlyingMultiDigraph(G) <->text1815.htm#20162<->UnderlyingMultiDigraph(G) : GrphMult-> GrphMultDir, GrphVertSet, GrphEdgeSet
5<->UnderlyingMultiDigraph(G) <->text1815.htm#20162<->UnderlyingMultiDigraph(G) : Grph -&gt; GrphMultDir, GrphVertSet, GrphEdgeSet
5<->\nameMultiGraph:UnderlyingNetwork{UnderlyingNetwork}(G) <->text1815.htm#20163<->\nameMultiGraph:UnderlyingNetwork{UnderlyingNetwork}(G) : GrphMult-> GrphNet, GrphVertSet, GrphEdgeSet
5<->UnderlyingNetwork(G) <->text1815.htm#20163<->UnderlyingNetwork(G) : Grph -&gt; GrphNet, GrphVertSet, GrphEdgeSet
3<->multig-conv :<->text1815.htm#20158<->multig-conv :: Converting between Simple Graphs and Multigraphs (MULTIGRAPHS)
3<->multig-conversion :<->text1815.htm<->multig-conversion :: Conversion Functions (MULTIGRAPHS)
3<->multig-elem :<->text1816.htm<->multig-elem :: Elementary Invariants and  Predicates for Multigraphs (MULTIGRAPHS)
5<->NumberOfVertices :: Order(G) <->text1816.htm#20165<->NumberOfVertices :: Order(G) : GrphMult -&gt; RngIntElt
5<->Order(G) <->text1816.htm#20165<->Order(G) : GrphMult -&gt; RngIntElt
5<->NumberOfEdges :: Size(G) <->text1816.htm#20166<->NumberOfEdges :: Size(G) : GrphMult -&gt; RngIntElt
5<->Size(G) <->text1816.htm#20166<->Size(G) : GrphMult -&gt; RngIntElt
5<->u adj v <->text1816.htm#20167<->u adj v : GrphVert, GrphVert -&gt; BoolElt
5<->e adj f <->text1816.htm#20168<->e adj f : GrphEdge, GrphEdge -&gt; BoolElt
5<->u notadj v <->text1816.htm#20169<->u notadj v : GrphVert, GrphVert -&gt; BoolElt
5<->e notadj f <->text1816.htm#20170<->e notadj f : GrphEdge, GrphEdge -&gt; BoolElt
5<->u in e <->text1816.htm#20171<->u in e : GrphVert, GrphEdge -&gt; BoolElt
5<->u notin e <->text1816.htm#20172<->u notin e : GrphVert, GrphEdge -&gt; BoolElt
5<->G eq H <->text1816.htm#20173<->G eq H : GrphMultDir, GrphMultDir -> BoolElt
5<->G eq H <->text1816.htm#20173<->G eq H : GrphNet, GrphNet -> BoolElt
5<->G eq H <->text1816.htm#20173<->G eq H : GrphMultUnd, GrphMultUnd -&gt; BoolElt
5<->IsSubgraph(G, H) <->text1816.htm#20174<->IsSubgraph(G, H) : GrphMultDir, GrphMultDir  -> BoolElt
5<->IsSubgraph(G, H) <->text1816.htm#20174<->IsSubgraph(G, H) : GrphNet, GrphNet  -> BoolElt
5<->IsSubgraph(G, H) <->text1816.htm#20174<->IsSubgraph(G, H) : GrphMultUnd, GrphMultUnd  -&gt; BoolElt
5<->IsBipartite(G) <->text1816.htm#20175<->IsBipartite(G) : GrphMultUnd -&gt; BoolElt
5<->Bipartition(G) <->text1816.htm#20176<->Bipartition(G) : GrphMultUnd -&gt; [ { GrphVert } ]
5<->IsRegular(G) <->text1816.htm#20177<->IsRegular(G) : GrphMult -&gt; BoolElt
5<->IsComplete(G) <->text1816.htm#20178<->IsComplete(G) : GrphMult -&gt; BoolElt
5<->IsEmpty(G) <->text1816.htm#20179<->IsEmpty(G) : GrphMult -&gt; BoolElt
5<->IsNull(G) <->text1816.htm#20180<->IsNull(G) : GrphMult -&gt; BoolElt
5<->IsSimple(G) <->text1816.htm#20181<->IsSimple(G) : Grph -> BoolElt
5<->IsSimple(G) <->text1816.htm#20181<->IsSimple(G) : GrphMult -&gt; BoolElt
5<->IsUndirected(G) <->text1816.htm#20182<->IsUndirected(G) : Grph -> BoolElt
5<->IsUndirected(G) <->text1816.htm#20182<->IsUndirected(G) : GrphMult -&gt; BoolElt
5<->IsDirected(G) <->text1816.htm#20183<->IsDirected(G) : Grph -> BoolElt
5<->IsDirected(G) <->text1816.htm#20183<->IsDirected(G) : GrphMult -&gt; BoolElt
3<->multig-elem :<->text1816.htm<->multig-elem :: Elementary Invariants and  Predicates for Multigraphs (MULTIGRAPHS)
3<->multig-adj-deg :<->text1817.htm<->multig-adj-deg :: Adjacency and Degree (MULTIGRAPHS)
3<->multig-adj-deg-und :<->text1817.htm#20185<->multig-adj-deg-und :: Adjacency and Degree Functions for Mul-tigraphs (MULTIGRAPHS)
5<->Degree(u) <->text1817.htm#20186<->Degree(u) : GrphVert -&gt; RngIntElt
5<->Alldeg(G, n) <->text1817.htm#20187<->Alldeg(G, n) : GrphMultUnd, RngIntElt -&gt; { GrphVert }
5<->Maxdeg :: MaximumDegree(G) <->text1817.htm#20188<->Maxdeg :: MaximumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert
5<->MaximumDegree(G) <->text1817.htm#20188<->MaximumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert
5<->Mindeg :: MinimumDegree(G) <->text1817.htm#20189<->Mindeg :: MinimumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert
5<->MinimumDegree(G) <->text1817.htm#20189<->MinimumDegree(G) : GrphMultUnd -&gt; RngIntElt, GrphVert
5<->DegreeSequence(G) <->text1817.htm#20190<->DegreeSequence(G) : GrphMultUnd -&gt; [ { GrphVert } ]
5<->Neighbors :: Neighbours(u) <->text1817.htm#20191<->Neighbors :: Neighbours(u) : GrphVert -&gt; { GrphVert }
5<->Neighbours(u) <->text1817.htm#20191<->Neighbours(u) : GrphVert -&gt; { GrphVert }
5<->IncidentEdges(u) <->text1817.htm#20192<->IncidentEdges(u) : GrphVert -&gt; { GrphEdge }
3<->multig-adj-deg-und :<->text1817.htm#20185<->multig-adj-deg-und :: Adjacency and Degree Functions for Mul-tigraphs (MULTIGRAPHS)
3<->multig-adj-deg-dir :<->text1817.htm#20193<->multig-adj-deg-dir :: Adjacency and Degree Functions for Multidigraphs (MULTIGRAPHS)
5<->InDegree(u) <->text1817.htm#20194<->InDegree(u) : GrphVert -&gt; RngIntElt
5<->OutDegree(u) <->text1817.htm#20195<->OutDegree(u) : GrphVert -&gt; RngIntElt
5<->Maxindeg :: MaximumInDegree(G) <->text1817.htm#20196<->Maxindeg :: MaximumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->MaximumInDegree(G) <->text1817.htm#20196<->MaximumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->Minindeg :: MinimumInDegree(G) <->text1817.htm#20197<->Minindeg :: MinimumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->MinimumInDegree(G) <->text1817.htm#20197<->MinimumInDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->Maxoutdeg :: MaximumOutDegree(G) <->text1817.htm#20198<->Maxoutdeg :: MaximumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->MaximumOutDegree(G) <->text1817.htm#20198<->MaximumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->Minoutdeg :: MinimumOutDegree(G) <->text1817.htm#20199<->Minoutdeg :: MinimumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->MinimumOutDegree(G) <->text1817.htm#20199<->MinimumOutDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->Degree(u) <->text1817.htm#20200<->Degree(u) : GrphVert -&gt; RngIntElt
5<->Maxdeg :: MaximumDegree(G) <->text1817.htm#20201<->Maxdeg :: MaximumDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->MaximumDegree(G) <->text1817.htm#20201<->MaximumDegree(G) : GrphMultDir -&gt; RngIntElt, GrphVert
5<->Mindeg :: MinimumDegree(G) <->text1817.htm#20202<->Mindeg :: MinimumDegree(G) : GrphMultDir  -&gt; RngIntElt, GrphVert
5<->MinimumDegree(G) <->text1817.htm#20202<->MinimumDegree(G) : GrphMultDir  -&gt; RngIntElt, GrphVert
5<->Alldeg(G, n) <->text1817.htm#20203<->Alldeg(G, n) : GrphMultDir, RngIntElt -&gt; { GrphVert }
5<->DegreeSequence(G) <->text1817.htm#20204<->DegreeSequence(G) : GrphMultDir -&gt;  [  GrphVert  ]
5<->InNeighbors :: InNeighbours(u) <->text1817.htm#20205<->InNeighbors :: InNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->InNeighbours(u) <->text1817.htm#20205<->InNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->OutNeighbors :: OutNeighbours(u) <->text1817.htm#20206<->OutNeighbors :: OutNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->OutNeighbours(u) <->text1817.htm#20206<->OutNeighbours(u) : GrphVert -&gt; { GrphVert }
5<->IncidentEdges(u) <->text1817.htm#20207<->IncidentEdges(u) : GrphVert -&gt; { GrphEdge }
3<->multig-adj-deg-dir :<->text1817.htm#20193<->multig-adj-deg-dir :: Adjacency and Degree Functions for Multidigraphs (MULTIGRAPHS)
3<->multig-adj-deg :<->text1817.htm<->multig-adj-deg :: Adjacency and Degree (MULTIGRAPHS)
3<->multig-connectedness :<->text1818.htm<->multig-connectedness :: Connectedness (MULTIGRAPHS)
3<->multig-connectedness-graph :<->text1818.htm#20209<->multig-connectedness-graph :: Connectedness in a Multigraph (MULTIGRAPHS)
5<->IsConnected(G) <->text1818.htm#20210<->IsConnected(G) : GrphMultUnd -&gt; BoolElt
5<->Components(G) <->text1818.htm#20211<->Components(G) : GrphMultUnd -&gt; [ { GrphVert } ]
5<->Component(u) <->text1818.htm#20212<->Component(u) : GrphVert -&gt; GrphMult
5<->IsSeparable(G) <->text1818.htm#20213<->IsSeparable(G) : GrphMultUnd -&gt; BoolElt
5<->IsBiconnected(G) <->text1818.htm#20214<->IsBiconnected(G) : GrphMultUnd -&gt; BoolElt
5<->CutVertices(G) <->text1818.htm#20215<->CutVertices(G) : GrphMultUnd -&gt; { GrphVert }
5<->Bicomponents(G) <->text1818.htm#20216<->Bicomponents(G) : GrphMultUnd -&gt; [ { GrphVert } ]
3<->multig-connectedness-graph :<->text1818.htm#20209<->multig-connectedness-graph :: Connectedness in a Multigraph (MULTIGRAPHS)
3<->multig-digraph :<->text1818.htm#20217<->multig-digraph :: Connectedness in  a Multidigraph (MULTIGRAPHS)
5<->IsStronglyConnected(G) <->text1818.htm#20218<->IsStronglyConnected(G) : GrphMultDir -&gt; BoolElt
5<->IsWeaklyConnected(G) <->text1818.htm#20219<->IsWeaklyConnected(G) : GrphMultDir -&gt; BoolElt
5<->StronglyConnectedComponents(G) <->text1818.htm#20220<->StronglyConnectedComponents(G) : GrphMultDir -&gt; [ { GrphVert } ]
5<->Component(u) <->text1818.htm#20221<->Component(u) : GrphVert -&gt; GrphMult
3<->multig-digraph :<->text1818.htm#20217<->multig-digraph :: Connectedness in  a Multidigraph (MULTIGRAPHS)
3<->multig-triconnectivity :<->text1818.htm#20222<->multig-triconnectivity :: Triconnectivity for Multigraphs (MULTIGRAPHS)
5<->IsTriconnected(G) <->text1818.htm#20223<->IsTriconnected(G) : GrphMultUnd -&gt; BoolElt
5<->Splitcomponents(G) <->text1818.htm#20224<->Splitcomponents(G) : GrphMultUnd -&gt; [ { GrphVert } ], [ [ GrphVert ]]
5<->SeparationVertices(G) <->text1818.htm#20225<->SeparationVertices(G) : GrphMultUnd -&gt; [ [ GrphVert ]], [ { GrphVert } ]
3<->multig-triconnectivity :<->text1818.htm#20222<->multig-triconnectivity :: Triconnectivity for Multigraphs (MULTIGRAPHS)
3<->multig-maxmatching :<->text1818.htm#20226<->multig-maxmatching :: Maximum Matching in Bipartite Multigraphs (MULTIGRAPHS)
5<->MaximumMatching(G : parameters) <->text1818.htm#20227<->MaximumMatching(G : parameters) : GrphMultUnd -&gt; [ { GrphEdge rbrace ]
3<->multig-maxmatching :<->text1818.htm#20226<->multig-maxmatching :: Maximum Matching in Bipartite Multigraphs (MULTIGRAPHS)
3<->multig-gen-connectivity :<->text1818.htm#20228<->multig-gen-connectivity :: General Vertex and Edge Connectivity in Multigraphs and Multidigraphs (MULTIGRAPHS)
5<->VertexSeparator(G : parameters) <->text1818.htm#20229<->VertexSeparator(G : parameters) : GrphMult -&gt; [ GrphVert ]
5<->VertexConnectivity(G : parameters) <->text1818.htm#20230<->VertexConnectivity(G : parameters) : GrphMult -&gt; RngIntElt, [ GrphVert ]
5<->IsKVertexConnected(G, k : parameters) <->text1818.htm#20231<->IsKVertexConnected(G, k : parameters) : GrphMult, RngIntElt -&gt; BoolElt
5<->EdgeSeparator(G : parameters) <->text1818.htm#20232<->EdgeSeparator(G : parameters) : GrphMult -&gt; [ GrphEdge ]
5<->EdgeConnectivity(G : parameters) <->text1818.htm#20233<->EdgeConnectivity(G : parameters) : GrphMult -&gt; RngIntElt, [ GrphEdge ]
5<->IsKEdgeConnected(G, k : parameters) <->text1818.htm#20234<->IsKEdgeConnected(G, k : parameters) : GrphMult, RngIntElt -&gt; BoolElt
4<->MultiGraph_GrphMult_Conn (Example H156E9)<->text1818.htm#20235<->MultiGraph_GrphMult_Conn (Example H156E9)
4<->Example-GrphMult_Conn :<->text1818.htm#20235<->Example-GrphMult_Conn :: MultiGraph_GrphMult_Conn (Example H156E9)
3<->multig-gen-connectivity :<->text1818.htm#20228<->multig-gen-connectivity :: General Vertex and Edge Connectivity in Multigraphs and Multidigraphs (MULTIGRAPHS)
3<->multig-connectedness :<->text1818.htm<->multig-connectedness :: Connectedness (MULTIGRAPHS)
3<->spanning-tree :<->text1819.htm<->spanning-tree :: Spanning Trees (MULTIGRAPHS)
5<->SpanningTree(G) <->text1819.htm#20237<->SpanningTree(G) : GrphMultUnd -&gt; GrphMultUnd, GrphVertSet, GrphEdgeSet
5<->SpanningForest(G) <->text1819.htm#20238<->SpanningForest(G) : GrphMult -&gt; GrphMult, GrphVertSet, GrphEdgeSet
5<->BFSTree :: BreadthFirstSearchTree(u) <->text1819.htm#20239<->BFSTree :: BreadthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet
5<->BreadthFirstSearchTree(u) <->text1819.htm#20239<->BreadthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet
5<->DFSTree :: DepthFirstSearchTree(u) <->text1819.htm#20240<->DFSTree :: DepthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet, SeqEnum
5<->DepthFirstSearchTree(u) <->text1819.htm#20240<->DepthFirstSearchTree(u) : GrphVert -&gt; GrphMult, GrphVertSet, GrphEdgeSet, SeqEnum
3<->spanning-tree :<->text1819.htm<->spanning-tree :: Spanning Trees (MULTIGRAPHS)
3<->planarity :<->text1820.htm<->planarity :: Planar Graphs (MULTIGRAPHS)
5<->IsPlanar(G) <->text1820.htm#20242<->IsPlanar(G) : GrphMultUnd -&gt; BoolElt, GrphMultUnd
5<->Obstruction(G) <->text1820.htm#20243<->Obstruction(G) : GrphMultUnd -&gt; GrphMultUnd
5<->IsHomeomorphic(G: parameters) <->text1820.htm#20244<->IsHomeomorphic(G: parameters) : GrphMultUnd -&gt; BoolElt
5<->Faces(G) <->text1820.htm#20245<->Faces(G) : GrphMultUnd -&gt; SeqEnum[GrphVert]
5<->Face(u, v) <->text1820.htm#20246<->Face(u, v) : GrphVert, GrphVert -&gt; SeqEnum
5<->Face(e) <->text1820.htm#20247<->Face(e) : GrphEdge -&gt; SeqEnum
5<->NumberOfFaces :: NFaces(G) <->text1820.htm#20248<->NumberOfFaces :: NFaces(G) : GrphMultUnd -&gt; RngIntElt
5<->NFaces(G) <->text1820.htm#20248<->NFaces(G) : GrphMultUnd -&gt; RngIntElt
5<->Embedding(G) <->text1820.htm#20249<->Embedding(G) : GrphMultUnd -&gt; SeqEnum
5<->Embedding(v) <->text1820.htm#20250<->Embedding(v) : GrphVert -&gt; SeqEnum
4<->MultiGraph_GrphMult_Planar (Example H156E10)<->text1820.htm#20251<->MultiGraph_GrphMult_Planar (Example H156E10)
4<->Example-GrphMult_Planar :<->text1820.htm#20251<->Example-GrphMult_Planar :: MultiGraph_GrphMult_Planar (Example H156E10)
4<->MultiGraph_GrphMult_Planar_Dual (Example H156E11)<->text1820.htm#20252<->MultiGraph_GrphMult_Planar_Dual (Example H156E11)
4<->Example-GrphMult_Planar_Dual :<->text1820.htm#20252<->Example-GrphMult_Planar_Dual :: MultiGraph_GrphMult_Planar_Dual (Example H156E11)
3<->planarity :<->text1820.htm<->planarity :: Planar Graphs (MULTIGRAPHS)
3<->shortest-paths :<->text1821.htm<->shortest-paths :: Distances, Shortest Paths and Minimum Weight Trees (MULTIGRAPHS)
5<->Reachable(u, v : parameters) <->text1821.htm#20254<->Reachable(u, v : parameters) : GrphVert, GrphVert -&gt; BoolElt, RngElt
5<->Distance(u, v : parameters) <->text1821.htm#20255<->Distance(u, v : parameters) : GrphVert, GrphVert -&gt; RngElt
5<->Distances(u : parameters) <->text1821.htm#20256<->Distances(u : parameters) : GrphVert -&gt;  Eseq
5<->PathExists(u, v : parameters) <->text1821.htm#20257<->PathExists(u, v : parameters) : GrphVert, GrphVert -&gt; BoolElt, Eseq
5<->ShortestPath :: Path(u, v : parameters) <->text1821.htm#20258<->ShortestPath :: Path(u, v : parameters) : GrphVert, GrphVert -&gt;  Eseq
5<->Path(u, v : parameters) <->text1821.htm#20258<->Path(u, v : parameters) : GrphVert, GrphVert -&gt;  Eseq
5<->ShortestPaths :: Paths(u : parameters) <->text1821.htm#20259<->ShortestPaths :: Paths(u : parameters) : GrphVert -&gt;  Eseq
5<->Paths(u : parameters) <->text1821.htm#20259<->Paths(u : parameters) : GrphVert -&gt;  Eseq
5<->GeodesicExists(u, v : parameters) <->text1821.htm#20260<->GeodesicExists(u, v : parameters) : GrphVert, GrphVert -&gt; BoolElt, Eseq
5<->Geodesic(u, v : parameters) <->text1821.htm#20261<->Geodesic(u, v : parameters) : GrphVert, GrphVert -&gt;  Eseq
5<->Geodesics(u : parameters) <->text1821.htm#20262<->Geodesics(u : parameters) : GrphVert -&gt;  Eseq
5<->HasNegativeWeightCycle(u : parameters) <->text1821.htm#20263<->HasNegativeWeightCycle(u : parameters) : GrphVert -&gt;  BoolElt
5<->HasNegativeWeightCycle(G) <->text1821.htm#20264<->HasNegativeWeightCycle(G) : GrphMult -> BoolElt
5<->HasNegativeWeightCycle(G) <->text1821.htm#20264<->HasNegativeWeightCycle(G) : Grph -&gt; BoolElt
5<->AllPairsShortestPaths(G $\colon$ \parameters) <->text1821.htm#20265<->AllPairsShortestPaths(G $\colon$ \parameters) : GrphMult -> SeqEnum, SeqEnum
5<->AllPairsShortestPaths(G : parameters) <->text1821.htm#20265<->AllPairsShortestPaths(G : parameters) : Grph -&gt; SeqEnum, SeqEnum
5<->MinimumWeightTree(u : parameters) <->text1821.htm#20266<->MinimumWeightTree(u : parameters) : GrphVert -&gt; SeqEnum
4<->MultiGraph_GrphMult_ShortP (Example H156E12)<->text1821.htm#20267<->MultiGraph_GrphMult_ShortP (Example H156E12)
4<->Example-GrphMult_ShortP :<->text1821.htm#20267<->Example-GrphMult_ShortP :: MultiGraph_GrphMult_ShortP (Example H156E12)
4<->MultiGraph_GrphMult_MinW (Example H156E13)<->text1821.htm#20268<->MultiGraph_GrphMult_MinW (Example H156E13)
4<->Example-GrphMult_MinW :<->text1821.htm#20268<->Example-GrphMult_MinW :: MultiGraph_GrphMult_MinW (Example H156E13)
3<->shortest-paths :<->text1821.htm<->shortest-paths :: Distances, Shortest Paths and Minimum Weight Trees (MULTIGRAPHS)
3<->MultiGraph :<->text1809.htm<->MultiGraph :: MULTIGRAPHS
3<->network :<->text1824.htm<->network :: NETWORKS
3<->introduction :<->text1825.htm<->introduction :: Introduction (NETWORKS)
3<->network-constr :<->text1826.htm<->network-constr :: Construction of Networks (NETWORKS)
5<->Network  <->text1826.htm#20274<->Network<S | edges >  : SetEnum, List -> GrphNet, GrphVertSet, GrphEdgeSet
5<->Network  <->text1826.htm#20274<->Network<S | edges >  : SetIndx, List -> GrphNet, GrphVertSet, GrphEdgeSet
5<->Network<n | edges > <->text1826.htm#20274<->Network&lt;n | edges &gt; : RngIntElt, List -&gt; GrphNet, GrphVertSet, GrphEdgeSet
4<->Network_GrphNet_Constr (Example H157E1)<->text1826.htm#20275<->Network_GrphNet_Constr (Example H157E1)
4<->Example-GrphNet_Constr :<->text1826.htm#20275<->Example-GrphNet_Constr :: Network_GrphNet_Constr (Example H157E1)
3<->network-print :: Magma Output<->text1826.htm#20276<->network-print :: Magma Output: Printing of a Network (NETWORKS)
4<->Network_GrphNet_Constr2 (Example H157E2)<->text1826.htm#20277<->Network_GrphNet_Constr2 (Example H157E2)
4<->Example-GrphNet_Constr2 :<->text1826.htm#20277<->Example-GrphNet_Constr2 :: Network_GrphNet_Constr2 (Example H157E2)
3<->network-print :: Magma Output<->text1826.htm#20276<->network-print :: Magma Output: Printing of a Network (NETWORKS)
3<->network-constr :<->text1826.htm<->network-constr :: Construction of Networks (NETWORKS)
3<->network-stand-constr :<->text1827.htm<->network-stand-constr :: Standard Construction for  Networks (NETWORKS)
3<->network-stand-constr-sub :<->text1827.htm#20279<->network-stand-constr-sub :: Subgraphs (NETWORKS)
5<->sub< N | list > <->text1827.htm#20280<->sub&lt; N | list &gt; : GrphNet, List -&gt; GrphNet, GrphVertSet, GrphEdgeSet
4<->Network_ConstrSubNetwork (Example H157E3)<->text1827.htm#20281<->Network_ConstrSubNetwork (Example H157E3)
4<->Example-ConstrSubNetwork :<->text1827.htm#20281<->Example-ConstrSubNetwork :: Network_ConstrSubNetwork (Example H157E3)
3<->network-stand-constr-sub :<->text1827.htm#20279<->network-stand-constr-sub :: Subgraphs (NETWORKS)
3<->network-stand-constr-incr :: Incremental Construction<->text1827.htm#20282<->network-stand-constr-incr :: Incremental Construction: Adding Edges (NETWORKS)
5<->N + < [ u, v ], c > <->text1827.htm#20283<->N + &lt; [ u, v ], c &gt; : GrphNet, &lt; [ GrphVert, GrphVert ], RngIntElt &gt; -&gt; GrphNet, GrphEdge
5<->N + [  ] <->text1827.htm#20284<->N + [ < [ u, v ], c > ] : GrphNet, [ < [ GrphVert, GrphVert ], RngIntElt > ] -> GrphNet
5<->N + { < [ u, v ], c > } <->text1827.htm#20284<->N + { &lt; [ u, v ], c &gt; } : GrphNet, { &lt; [ GrphVert, GrphVert ], RngIntElt &gt; } -&gt; GrphNet
5<->N +:= \brace\   \rbrace <->text1827.htm#20285<->N +:= \brace\  < [ u, v ], c > \rbrace : GrphNet, \brace\  < [ GrphVert, GrphVert ], RngIntElt > \rbrace ->
5<->N +:= [  ] <->text1827.htm#20285<->N +:= [ < [ u, v ], c > ] : GrphNet, [ < [ GrphVert, GrphVert ], RngIntElt > ] -> 
5<->N +:= < [ u, v ], c > <->text1827.htm#20285<->N +:= &lt; [ u, v ], c &gt; : GrphNet, &lt; [ GrphVert, GrphVert ], RngIntElt &gt; -&gt;
5<->AddEdge(N, u, v, c) <->text1827.htm#20286<->AddEdge(N, u, v, c) : GrphNet, GrphVert, GrphVert, RngIntElt -&gt; GrphNet, GrphEdge
5<->AddEdge(N, u, v, c, l) <->text1827.htm#20287<->AddEdge(N, u, v, c, l) : GrphNet,GrphVert, GrphVert, RngIntElt, . -&gt; GrphNet, GrphEdge
5<->AddEdges(N, S) <->text1827.htm#20288<->AddEdges(N, S) : GrphNet, [ < [  GrphVert, GrphVert ], RngIntElt > ] -> GrphNet
5<->AddEdges(N, S) <->text1827.htm#20288<->AddEdges(N, S) : GrphNet, { &lt; [  GrphVert, GrphVert ], RngIntElt &gt; } -&gt; GrphNet
5<->AddEdge(\til N, u, v, c, l) <->text1827.htm#20289<->AddEdge(\til N, u, v, c, l) : GrphNet, GrphVert, GrphVert, RngIntElt, . ->
5<->AddEdges :: AddEdge(~N, u, v, c) <->text1827.htm#20289<->AddEdges :: AddEdge(~N, u, v, c) : GrphNet, GrphVert, GrphVert, RngIntElt -&gt;
5<->AddEdges(\til N, S) : GrphNet, [  ] -> :: AddEdge(~N, u, v, c) <->text1827.htm#20289<->AddEdges(\til N, S) : GrphNet, [ < [  GrphVert, GrphVert ], RngIntElt > ] -> :: AddEdge(~N, u, v, c) : GrphNet, GrphVert, GrphVert, RngIntElt -&gt;
5<->AddEdge(~N, u, v, c) <->text1827.htm#20289<->AddEdge(~N, u, v, c) : GrphNet, GrphVert, GrphVert, RngIntElt -&gt;
3<->network-stand-constr-incr :: Incremental Construction<->text1827.htm#20282<->network-stand-constr-incr :: Incremental Construction: Adding Edges (NETWORKS)
3<->network-stand-constr-union :<->text1827.htm#20290<->network-stand-constr-union :: Union of Networks (NETWORKS)
3<->network-stand-constr :<->text1827.htm<->network-stand-constr :: Standard Construction for  Networks (NETWORKS)
3<->flow :<->text1828.htm<->flow :: Maximum Flow and Minimum Cut (NETWORKS)
5<->MinimumCut(s, t : parameters) <->text1828.htm#20292<->MinimumCut(s, t : parameters) : GrphVert, GrphVert -&gt; SeqEnum, RngIntElt
5<->MinimumCut(Ss, Ts : parameters) <->text1828.htm#20293<->MinimumCut(Ss, Ts : parameters) : [ GrphVert ], [ GrphVert ] -&gt; SeqEnum, RngIntElt
5<->MaximumFlow(s, t : parameters) <->text1828.htm#20294<->MaximumFlow(s, t : parameters) : GrphVert, GrphVert -&gt; RngIntElt, SeqEnum
5<->MaximumFlow(Ss, Ts : parameters) <->text1828.htm#20295<->MaximumFlow(Ss, Ts : parameters) : [ GrphVert ], [ GrphVert ] -&gt; RngIntElt, SeqEnum
5<->Flow(e) <->text1828.htm#20296<->Flow(e) : GrphEdge -&gt; RngIntElt
5<->Flow(u, v) <->text1828.htm#20297<->Flow(u, v) : GrphVert, GrphVert -&gt; RngIntElt
4<->Network_Flow (Example H157E4)<->text1828.htm#20298<->Network_Flow (Example H157E4)
4<->Example-Flow :<->text1828.htm#20298<->Example-Flow :: Network_Flow (Example H157E4)
3<->flow :<->text1828.htm<->flow :: Maximum Flow and Minimum Cut (NETWORKS)
3<->network :<->text1824.htm<->network :: NETWORKS
3<->error-correcting-linear-code :<->text1831.htm<->error-correcting-linear-code :: LINEAR CODES OVER FINITE FIELDS
3<->introduction :<->text1832.htm<->introduction :: Introduction (LINEAR CODES OVER FINITE FIELDS)
3<->creation :<->text1833.htm<->creation :: Construction of Codes (LINEAR CODES OVER FINITE FIELDS)
3<->general :<->text1833.htm#20304<->general :: Construction of General Linear  Codes (LINEAR CODES OVER FINITE FIELDS)
5<->LinearCode<R, n | L> <->text1833.htm#20305<->LinearCode&lt;R, n | L&gt; : FldFin, RngIntElt, List -&gt; Code
4<->CodeFld_TernaryGolayCode (Example H158E1)<->text1833.htm#20306<->CodeFld_TernaryGolayCode (Example H158E1)
4<->Example-TernaryGolayCode :<->text1833.htm#20306<->Example-TernaryGolayCode :: CodeFld_TernaryGolayCode (Example H158E1)
5<->LinearCode(U) <->text1833.htm#20307<->LinearCode(U) : ModTupRng -&gt; Code
5<->LinearCode(A) <->text1833.htm#20308<->LinearCode(A) : ModMatRngElt -&gt; Code
4<->CodeFld_CodeFromMatrix (Example H158E2)<->text1833.htm#20309<->CodeFld_CodeFromMatrix (Example H158E2)
4<->Example-CodeFromMatrix :<->text1833.htm#20309<->Example-CodeFromMatrix :: CodeFld_CodeFromMatrix (Example H158E2)
5<->PermutationCode(u, G) <->text1833.htm#20310<->PermutationCode(u, G) : ModTupRngElt, GrpPerm -&gt; Code
4<->CodeFld_PermutationCode (Example H158E3)<->text1833.htm#20311<->CodeFld_PermutationCode (Example H158E3)
4<->Example-PermutationCode :<->text1833.htm#20311<->Example-PermutationCode :: CodeFld_PermutationCode (Example H158E3)
3<->general :<->text1833.htm#20304<->general :: Construction of General Linear  Codes (LINEAR CODES OVER FINITE FIELDS)
3<->simple :<->text1833.htm#20312<->simple :: Some Trivial Linear Codes (LINEAR CODES OVER FINITE FIELDS)
5<->ZeroCode(R, n) <->text1833.htm#20313<->ZeroCode(R, n) : FldFin, RngIntElt -&gt; Code
5<->RepetitionCode(R, n) <->text1833.htm#20314<->RepetitionCode(R, n) : FldFin, RngIntElt -&gt; Code
5<->ZeroSumCode(R, n) <->text1833.htm#20315<->ZeroSumCode(R, n) : FldFin, RngIntElt -&gt; Code
5<->UniverseCode(R, n) <->text1833.htm#20316<->UniverseCode(R, n) : FldFin, RngIntElt -&gt; Code
5<->EvenWeightCode(n) <->text1833.htm#20317<->EvenWeightCode(n) : RngIntElt -&gt; Code
5<->EvenWeightSubcode(C) <->text1833.htm#20318<->EvenWeightSubcode(C) : Code -&gt; Code
5<->RandomLinearCode(K, n, k) <->text1833.htm#20319<->RandomLinearCode(K, n, k) : FldFin, RngIntElt, RngIntElt -&gt; Code
5<->CordaroWagnerCode(n) <->text1833.htm#20320<->CordaroWagnerCode(n) : RngIntElt -&gt; Code
4<->CodeFld_SimpleCodeChain (Example H158E4)<->text1833.htm#20321<->CodeFld_SimpleCodeChain (Example H158E4)
4<->Example-SimpleCodeChain :<->text1833.htm#20321<->Example-SimpleCodeChain :: CodeFld_SimpleCodeChain (Example H158E4)
3<->simple :<->text1833.htm#20312<->simple :: Some Trivial Linear Codes (LINEAR CODES OVER FINITE FIELDS)
3<->construction-standard :<->text1833.htm#20322<->construction-standard :: Some Basic Families of Codes (LINEAR CODES OVER FINITE FIELDS)
5<->CyclicCode(n, g) <->text1833.htm#20323<->CyclicCode(n, g) : RngIntElt, RngUPolElt -&gt; Code
4<->CodeFld_CyclicCode (Example H158E5)<->text1833.htm#20324<->CodeFld_CyclicCode (Example H158E5)
4<->Example-CyclicCode :<->text1833.htm#20324<->Example-CyclicCode :: CodeFld_CyclicCode (Example H158E5)
5<->HammingCode(K, r) <->text1833.htm#20325<->HammingCode(K, r) : FldFin, RngIntElt -&gt; Code
4<->CodeFld_HammingCode (Example H158E6)<->text1833.htm#20326<->CodeFld_HammingCode (Example H158E6)
4<->Example-HammingCode :<->text1833.htm#20326<->Example-HammingCode :: CodeFld_HammingCode (Example H158E6)
5<->SimplexCode(r) <->text1833.htm#20327<->SimplexCode(r) : RngIntElt -&gt; Code
5<->ReedMullerCode(r, m) <->text1833.htm#20328<->ReedMullerCode(r, m) : RngIntElt, RngIntElt -&gt; Code
4<->CodeFld_ReedMullerCode (Example H158E7)<->text1833.htm#20329<->CodeFld_ReedMullerCode (Example H158E7)
4<->Example-ReedMullerCode :<->text1833.htm#20329<->Example-ReedMullerCode :: CodeFld_ReedMullerCode (Example H158E7)
3<->construction-standard :<->text1833.htm#20322<->construction-standard :: Some Basic Families of Codes (LINEAR CODES OVER FINITE FIELDS)
3<->creation :<->text1833.htm<->creation :: Construction of Codes (LINEAR CODES OVER FINITE FIELDS)
3<->access :<->text1834.htm<->access :: Invariants of a Code (LINEAR CODES OVER FINITE FIELDS)
3<->numerical-invariants :<->text1834.htm#20331<->numerical-invariants :: Basic Numerical Invariants (LINEAR CODES OVER FINITE FIELDS)
5<->Length(C) <->text1834.htm#20332<->Length(C) : Code -&gt; RngIntElt
5<->NumberOfGenerators :: Dimension(C) <->text1834.htm#20333<->NumberOfGenerators :: Dimension(C) : Code -&gt; RngIntElt
5<->Dimension(C) <->text1834.htm#20333<->Dimension(C) : Code -&gt; RngIntElt
5<-># C <->text1834.htm#20334<-># C : Code -&gt; RngIntElt
5<->InformationRate(C) <->text1834.htm#20335<->InformationRate(C) : Code -&gt; FldPrElt
3<->numerical-invariants :<->text1834.htm#20331<->numerical-invariants :: Basic Numerical Invariants (LINEAR CODES OVER FINITE FIELDS)
3<->ambient-space :<->text1834.htm#20336<->ambient-space :: The Ambient Space and Alphabet (LINEAR CODES OVER FINITE FIELDS)
5<->AmbientSpace(C) <->text1834.htm#20337<->AmbientSpace(C) : Code -&gt; ModTupRng
5<->VectorSpace :: RSpace(C) <->text1834.htm#20338<->VectorSpace :: RSpace(C) : Code -&gt; ModTupRng
5<->RSpace(C) <->text1834.htm#20338<->RSpace(C) : Code -&gt; ModTupRng
5<->Generic(C) <->text1834.htm#20339<->Generic(C) : Code -&gt; Code
5<->Field :: Alphabet(C) <->text1834.htm#20340<->Field :: Alphabet(C) : Code -&gt; Rng
5<->Alphabet(C) <->text1834.htm#20340<->Alphabet(C) : Code -&gt; Rng
3<->ambient-space :<->text1834.htm#20336<->ambient-space :: The Ambient Space and Alphabet (LINEAR CODES OVER FINITE FIELDS)
3<->code-subspace :<->text1834.htm#20341<->code-subspace :: The Code Space (LINEAR CODES OVER FINITE FIELDS)
5<->BasisMatrix :: GeneratorMatrix(C) <->text1834.htm#20342<->BasisMatrix :: GeneratorMatrix(C) : Code -&gt; ModMatFldElt
5<->GeneratorMatrix(C) <->text1834.htm#20342<->GeneratorMatrix(C) : Code -&gt; ModMatFldElt
5<->Basis(C) <->text1834.htm#20343<->Basis(C) : Code -&gt; [ ModTupRngElt ]
5<->Generators(C) <->text1834.htm#20344<->Generators(C) : Code -&gt;  { ModTupFldElt }
5<->C . i <->text1834.htm#20345<->C . i : Code, RngIntElt -&gt; ModTupFldElt
3<->code-subspace :<->text1834.htm#20341<->code-subspace :: The Code Space (LINEAR CODES OVER FINITE FIELDS)
3<->dual-space :<->text1834.htm#20346<->dual-space :: The Dual Space (LINEAR CODES OVER FINITE FIELDS)
5<->Dual(C) <->text1834.htm#20347<->Dual(C) : Code -&gt; Code
5<->ParityCheckMatrix(C) <->text1834.htm#20348<->ParityCheckMatrix(C) : Code -&gt; ModMatFldElt
4<->CodeFld_GeneratorMatrix (Example H158E8)<->text1834.htm#20349<->CodeFld_GeneratorMatrix (Example H158E8)
4<->Example-GeneratorMatrix :<->text1834.htm#20349<->Example-GeneratorMatrix :: CodeFld_GeneratorMatrix (Example H158E8)
5<->Hull(C) <->text1834.htm#20350<->Hull(C) : Code -&gt; Code
3<->dual-space :<->text1834.htm#20346<->dual-space :: The Dual Space (LINEAR CODES OVER FINITE FIELDS)
3<->information-set :<->text1834.htm#20351<->information-set :: The Information Space and Information Sets (LINEAR CODES OVER FINITE FIELDS)
5<->InformationSpace(C) <->text1834.htm#20352<->InformationSpace(C) : Code -&gt;  ModTupFld
5<->InformationSet(C) <->text1834.htm#20353<->InformationSet(C) : Code -&gt; [ RngIntElt ]
5<->AllInformationSets(C) <->text1834.htm#20354<->AllInformationSets(C) : Code -&gt; [ [ RngIntElt ] ]
5<->StandardForm(C) <->text1834.htm#20355<->StandardForm(C) : Code -&gt; Code, Map
4<->CodeFld_StandardForm (Example H158E9)<->text1834.htm#20356<->CodeFld_StandardForm (Example H158E9)
4<->Example-StandardForm :<->text1834.htm#20356<->Example-StandardForm :: CodeFld_StandardForm (Example H158E9)
3<->information-set :<->text1834.htm#20351<->information-set :: The Information Space and Information Sets (LINEAR CODES OVER FINITE FIELDS)
3<->syndrome-space :<->text1834.htm#20357<->syndrome-space :: The Syndrome Space (LINEAR CODES OVER FINITE FIELDS)
5<->SyndromeSpace(C) <->text1834.htm#20358<->SyndromeSpace(C) : Code -&gt; ModTupFld
3<->syndrome-space :<->text1834.htm#20357<->syndrome-space :: The Syndrome Space (LINEAR CODES OVER FINITE FIELDS)
3<->generator-polynomial :<->text1834.htm#20359<->generator-polynomial :: The Generator Polynomial (LINEAR CODES OVER FINITE FIELDS)
5<->GeneratorPolynomial(C) <->text1834.htm#20360<->GeneratorPolynomial(C) : Code -&gt; RngUPolElt
5<->CheckPolynomial(C) <->text1834.htm#20361<->CheckPolynomial(C) : Code -&gt; RngUPolElt
5<->Idempotent(C) <->text1834.htm#20362<->Idempotent(C) : Code -&gt; RngUPolElt
4<->CodeFld_GeneratorPolynomial (Example H158E10)<->text1834.htm#20363<->CodeFld_GeneratorPolynomial (Example H158E10)
4<->Example-GeneratorPolynomial :<->text1834.htm#20363<->Example-GeneratorPolynomial :: CodeFld_GeneratorPolynomial (Example H158E10)
3<->generator-polynomial :<->text1834.htm#20359<->generator-polynomial :: The Generator Polynomial (LINEAR CODES OVER FINITE FIELDS)
3<->access :<->text1834.htm<->access :: Invariants of a Code (LINEAR CODES OVER FINITE FIELDS)
3<->element :<->text1835.htm<->element :: Operations on Codewords (LINEAR CODES OVER FINITE FIELDS)
3<->creation :<->text1835.htm#20365<->creation :: Construction of a Codeword (LINEAR CODES OVER FINITE FIELDS)
5<->elt :: C ! [a1, ..., an] <->text1835.htm#20366<->elt :: C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! [a1, ..., an] <->text1835.htm#20366<->C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! u <->text1835.htm#20367<->C ! u : Code, ModTupRngElt -&gt; ModTupRngElt
5<->C ! 0 <->text1835.htm#20368<->C ! 0 : Code, RngIntElt -&gt; ModTupRngElt
5<->Random(C)<->text1835.htm#20369<->Random(C): Code -&gt; ModTupRngElt
3<->creation :<->text1835.htm#20365<->creation :: Construction of a Codeword (LINEAR CODES OVER FINITE FIELDS)
3<->operation :<->text1835.htm#20370<->operation :: Arithmetic Operations on Codewords (LINEAR CODES OVER FINITE FIELDS)
5<->u + v <->text1835.htm#20371<->u + v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->- u <->text1835.htm#20372<->- u : ModTupRngElt -&gt; ModTupRngElt
5<->u - v <->text1835.htm#20373<->u - v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->a * u <->text1835.htm#20374<->a * u : RngElt, ModTupRngElt -&gt; ModTupRngElt
5<->Normalize(u) <->text1835.htm#20375<->Normalize(u) : ModTupRngElt -&gt; ModTupRngElt
5<->Syndrome(w, C) <->text1835.htm#20376<->Syndrome(w, C) : ModTupFldElt, Code -&gt; ModTupFldElt
3<->operation :<->text1835.htm#20370<->operation :: Arithmetic Operations on Codewords (LINEAR CODES OVER FINITE FIELDS)
3<->distance :<->text1835.htm#20377<->distance :: Distance and Weight (LINEAR CODES OVER FINITE FIELDS)
5<->Distance(u, v) <->text1835.htm#20378<->Distance(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngIntElt
5<->Weight(u) <->text1835.htm#20379<->Weight(u) : ModTupRngElt -&gt; RngIntElt
5<->LeeWeight(u) <->text1835.htm#20380<->LeeWeight(u) : ModTupRngElt -&gt; RngIntElt
4<->CodeFld_Distance (Example H158E11)<->text1835.htm#20381<->CodeFld_Distance (Example H158E11)
4<->Example-Distance :<->text1835.htm#20381<->Example-Distance :: CodeFld_Distance (Example H158E11)
3<->distance :<->text1835.htm#20377<->distance :: Distance and Weight (LINEAR CODES OVER FINITE FIELDS)
3<->distance :<->text1835.htm#20382<->distance :: Vector Space and Related Operations (LINEAR CODES OVER FINITE FIELDS)
5<->InnerProduct :: (u, v) <->text1835.htm#20383<->InnerProduct :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->(,) :: (u, v) <->text1835.htm#20383<->(,) :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->Support(w) <->text1835.htm#20384<->Support(w) : ModTupRngElt -&gt; { RngIntElt }
5<->Coordinates(C, u) <->text1835.htm#20385<->Coordinates(C, u) : Code, ModTupRngElt -&gt; [ RngFinElt ]
5<->Parent(w)<->text1835.htm#20386<->Parent(w): ModTupRngElt -&gt; ModTupRng
5<->Rotate(u, k) <->text1835.htm#20387<->Rotate(u, k) : ModTupRngElt, RngIntElt -&gt; ModTupRngElt
5<->Rotate(~u, k) <->text1835.htm#20388<->Rotate(~u, k) : ModTupRngElt, RngIntElt -&gt;
5<->Trace(u) <->text1835.htm#20389<->Trace(u) : ModTupFldElt -> ModTupFldElt
5<->Trace(u, S) <->text1835.htm#20389<->Trace(u, S) : ModTupFldElt, FldFin -&gt; ModTupFldElt
4<->CodeFld_Coordinates (Example H158E12)<->text1835.htm#20390<->CodeFld_Coordinates (Example H158E12)
4<->Example-Coordinates :<->text1835.htm#20390<->Example-Coordinates :: CodeFld_Coordinates (Example H158E12)
3<->distance :<->text1835.htm#20382<->distance :: Vector Space and Related Operations (LINEAR CODES OVER FINITE FIELDS)
3<->access :<->text1835.htm#20391<->access :: Predicates for Codewords (LINEAR CODES OVER FINITE FIELDS)
5<->u eq v <->text1835.htm#20392<->u eq v : ModTupRngElt, ModTupRngElt -&gt; BoolElt
5<->u ne v <->text1835.htm#20393<->u ne v : ModTupRngElt, ModTupRngElt -&gt; BoolElt
5<->IsZero(u) <->text1835.htm#20394<->IsZero(u) : ModTupRngElt -&gt; BoolElt
3<->access :<->text1835.htm#20391<->access :: Predicates for Codewords (LINEAR CODES OVER FINITE FIELDS)
3<->access :<->text1835.htm#20395<->access :: Accessing Components of a Codeword (LINEAR CODES OVER FINITE FIELDS)
5<->[] :: u[i] <->text1835.htm#20396<->[] :: u[i] : ModTupRngElt, RngIntElt -&gt; RngElt
5<->[] :: u[i] <->text1835.htm#20397<->[] :: u[i] := x;
3<->access :<->text1835.htm#20395<->access :: Accessing Components of a Codeword (LINEAR CODES OVER FINITE FIELDS)
3<->element :<->text1835.htm<->element :: Operations on Codewords (LINEAR CODES OVER FINITE FIELDS)
3<->coset-leader :<->text1836.htm<->coset-leader :: Coset Leaders (LINEAR CODES OVER FINITE FIELDS)
5<->CosetLeaders(C) <->text1836.htm#20399<->CosetLeaders(C) : Code -&gt; {@ ModTupFldElt  @}, Map
4<->CodeFld_CosetLeaders (Example H158E13)<->text1836.htm#20400<->CodeFld_CosetLeaders (Example H158E13)
4<->Example-CosetLeaders :<->text1836.htm#20400<->Example-CosetLeaders :: CodeFld_CosetLeaders (Example H158E13)
3<->coset-leader :<->text1836.htm<->coset-leader :: Coset Leaders (LINEAR CODES OVER FINITE FIELDS)
3<->subcode :<->text1837.htm<->subcode :: Subcodes (LINEAR CODES OVER FINITE FIELDS)
3<->creation :<->text1837.htm#20402<->creation :: The Subcode Constructor (LINEAR CODES OVER FINITE FIELDS)
5<->sub<C | L> <->text1837.htm#20403<->sub&lt;C | L&gt; : Code, List -&gt; Code
5<->Subcode(C, k) <->text1837.htm#20404<->Subcode(C, k) : Code, RngIntElt -&gt; Code
5<->Subcode(C, S) <->text1837.htm#20405<->Subcode(C, S) : Code, { RngIntElt } -&gt; Code
5<->SubcodeBetweenCode(C1, C2, k) <->text1837.htm#20406<->SubcodeBetweenCode(C1, C2, k) : Code, Code, RngIntElt -&gt; Code
5<->SubcodeWordsOfWeight(C, S) <->text1837.htm#20407<->SubcodeWordsOfWeight(C, S) : Code, { RngIntElt } -&gt; Code
4<->CodeFld_SubcodeBetweenCode (Example H158E14)<->text1837.htm#20408<->CodeFld_SubcodeBetweenCode (Example H158E14)
4<->Example-SubcodeBetweenCode :<->text1837.htm#20408<->Example-SubcodeBetweenCode :: CodeFld_SubcodeBetweenCode (Example H158E14)
3<->creation :<->text1837.htm#20402<->creation :: The Subcode Constructor (LINEAR CODES OVER FINITE FIELDS)
3<->sum-intersection-dual :<->text1837.htm#20409<->sum-intersection-dual :: Sum, Intersection and Dual (LINEAR CODES OVER FINITE FIELDS)
5<->C + D <->text1837.htm#20410<->C + D : Code, Code -&gt; Code
5<->C meet D <->text1837.htm#20411<->C meet D : Code, Code -&gt; Code
5<->Dual(C) <->text1837.htm#20412<->Dual(C) : Code -&gt; Code
4<->CodeFld_SumIntersection (Example H158E15)<->text1837.htm#20413<->CodeFld_SumIntersection (Example H158E15)
4<->Example-SumIntersection :<->text1837.htm#20413<->Example-SumIntersection :: CodeFld_SumIntersection (Example H158E15)
4<->CodeFld_DualRS (Example H158E16)<->text1837.htm#20414<->CodeFld_DualRS (Example H158E16)
4<->Example-DualRS :<->text1837.htm#20414<->Example-DualRS :: CodeFld_DualRS (Example H158E16)
3<->sum-intersection-dual :<->text1837.htm#20409<->sum-intersection-dual :: Sum, Intersection and Dual (LINEAR CODES OVER FINITE FIELDS)
3<->Boolean :<->text1837.htm#20415<->Boolean :: Membership and Equality (LINEAR CODES OVER FINITE FIELDS)
5<->u in C <->text1837.htm#20416<->u in C : ModTupRngElt, Code -&gt; BoolElt
5<->u notin C <->text1837.htm#20417<->u notin C : ModTupRngElt, Code -&gt; BoolElt
5<->C subset D <->text1837.htm#20418<->C subset D : Code, Code -&gt; BoolElt
5<->C notsubset D <->text1837.htm#20419<->C notsubset D : Code, Code -&gt; BoolElt
5<->C eq D <->text1837.htm#20420<->C eq D : Code, Code -&gt; BoolElt
5<->C ne D <->text1837.htm#20421<->C ne D : Code, Code -&gt; BoolElt
3<->Boolean :<->text1837.htm#20415<->Boolean :: Membership and Equality (LINEAR CODES OVER FINITE FIELDS)
3<->subcode :<->text1837.htm<->subcode :: Subcodes (LINEAR CODES OVER FINITE FIELDS)
3<->Boolean :<->text1838.htm<->Boolean :: Properties of Codes (LINEAR CODES OVER FINITE FIELDS)
5<->IsCyclic(C) <->text1838.htm#20423<->IsCyclic(C) : Code -&gt; BoolElt
5<->IsSelfDual(C) <->text1838.htm#20424<->IsSelfDual(C) : Code -&gt; BoolElt
5<->IsSelfOrthogonal(C) <->text1838.htm#20425<->IsSelfOrthogonal(C) : Code -&gt; BoolElt
5<->IsMDS :: IsMaximumDistanceSeparable(C) <->text1838.htm#20426<->IsMDS :: IsMaximumDistanceSeparable(C) : Code -&gt; BoolElt
5<->IsMaximumDistanceSeparable(C) <->text1838.htm#20426<->IsMaximumDistanceSeparable(C) : Code -&gt; BoolElt
5<->IsEquidistant(C) <->text1838.htm#20427<->IsEquidistant(C) : Code -&gt; BoolElt
5<->IsPerfect(C) <->text1838.htm#20428<->IsPerfect(C) : Code -&gt; BoolElt
5<->IsNearlyPerfect(C) <->text1838.htm#20429<->IsNearlyPerfect(C) : Code -&gt; BoolElt
5<->IsEven(C) <->text1838.htm#20430<->IsEven(C) : Code -&gt; BoolElt
5<->IsDoublyEven(C) <->text1838.htm#20431<->IsDoublyEven(C) : Code -&gt; BoolElt
5<->IsProjective(C) <->text1838.htm#20432<->IsProjective(C) : Code -&gt; BoolElt
4<->CodeFld_SelfDual (Example H158E17)<->text1838.htm#20433<->CodeFld_SelfDual (Example H158E17)
4<->Example-SelfDual :<->text1838.htm#20433<->Example-SelfDual :: CodeFld_SelfDual (Example H158E17)
4<->CodeFld_SelfOrthogonal (Example H158E18)<->text1838.htm#20434<->CodeFld_SelfOrthogonal (Example H158E18)
4<->Example-SelfOrthogonal :<->text1838.htm#20434<->Example-SelfOrthogonal :: CodeFld_SelfOrthogonal (Example H158E18)
3<->Boolean :<->text1838.htm<->Boolean :: Properties of Codes (LINEAR CODES OVER FINITE FIELDS)
3<->structural :<->text1839.htm<->structural :: The Weight Distribution (LINEAR CODES OVER FINITE FIELDS)
3<->minimum-weight :<->text1839.htm#20436<->minimum-weight :: The Minimum Weight (LINEAR CODES OVER FINITE FIELDS)
5<->MinimumDistance :: MinimumWeight(C: parameters) <->text1839.htm#20437<->MinimumDistance :: MinimumWeight(C: parameters) : Code -&gt; RngIntElt
5<->MinimumWeight(C: parameters) <->text1839.htm#20437<->MinimumWeight(C: parameters) : Code -&gt; RngIntElt
5<->MinimumWeightBounds(C) <->text1839.htm#20438<->MinimumWeightBounds(C) : Code -&gt; RngIntElt, RngIntElt
5<->ResetMinimumWeightBounds(C) <->text1839.htm#20439<->ResetMinimumWeightBounds(C) : Code -&gt;
5<->VerifyMinimumDistanceLowerBound(C, d) <->text1839.htm#20440<->VerifyMinimumDistanceLowerBound(C, d) : Code, RngIntElt -&gt; BoolElt, RngIntElt, BoolElt
5<->VerifyMinimumWeightUpperBound :: VerifyMinimumDistanceUpperBound(C, d) <->text1839.htm#20441<->VerifyMinimumWeightUpperBound :: VerifyMinimumDistanceUpperBound(C, d) : Code, RngIntElt -&gt; BoolElt, RngIntElt, BoolElt
5<->VerifyMinimumDistanceUpperBound(C, d) <->text1839.htm#20441<->VerifyMinimumDistanceUpperBound(C, d) : Code, RngIntElt -&gt; BoolElt, RngIntElt, BoolElt
5<->MinimumWord(C) <->text1839.htm#20442<->MinimumWord(C) : Code -&gt; ModTupFldElt
5<->MinimumWords(C) <->text1839.htm#20443<->MinimumWords(C) : Code -&gt; { ModTupFldElt }
4<->CodeFld_VerifyLower (Example H158E19)<->text1839.htm#20444<->CodeFld_VerifyLower (Example H158E19)
4<->Example-VerifyLower :<->text1839.htm#20444<->Example-VerifyLower :: CodeFld_VerifyLower (Example H158E19)
5<->IncludeAutomorphism($\sim$C, G) <->text1839.htm#20445<->IncludeAutomorphism($\sim$C, G) : Code, GrpPerm ->
5<->IncludeAutomorphism(~C, p) <->text1839.htm#20445<->IncludeAutomorphism(~C, p) : Code, GrpPermElt -&gt;
5<->KnownAutomorphismSubgroup(C) <->text1839.htm#20446<->KnownAutomorphismSubgroup(C) : Code -&gt; GrpPerm
3<->minimum-weight :<->text1839.htm#20436<->minimum-weight :: The Minimum Weight (LINEAR CODES OVER FINITE FIELDS)
3<->weight-distribution :<->text1839.htm#20447<->weight-distribution :: The Weight Distribution (LINEAR CODES OVER FINITE FIELDS)
5<->WeightDistribution(C) <->text1839.htm#20448<->WeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->WeightDistribution(C, u) <->text1839.htm#20449<->WeightDistribution(C, u) : Code, ModTupFldElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->DualWeightDistribution(C) <->text1839.htm#20450<->DualWeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
4<->CodeFld_WeightDistribution (Example H158E20)<->text1839.htm#20451<->CodeFld_WeightDistribution (Example H158E20)
4<->Example-WeightDistribution :<->text1839.htm#20451<->Example-WeightDistribution :: CodeFld_WeightDistribution (Example H158E20)
5<->PartialWeightDistribution(C, ub) <->text1839.htm#20452<->PartialWeightDistribution(C, ub) : Code, RngIntElt -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
3<->weight-distribution :<->text1839.htm#20447<->weight-distribution :: The Weight Distribution (LINEAR CODES OVER FINITE FIELDS)
3<->weight-enumerator :<->text1839.htm#20453<->weight-enumerator :: The Weight Enumerator (LINEAR CODES OVER FINITE FIELDS)
5<->WeightEnumerator(C)<->text1839.htm#20454<->WeightEnumerator(C): Code -&gt; RngMPolElt
5<->WeightEnumerator(C, u)<->text1839.htm#20455<->WeightEnumerator(C, u): Code, ModTupFldElt -&gt; RngMPolElt
5<->CompleteWeightEnumerator(C)<->text1839.htm#20456<->CompleteWeightEnumerator(C): Code -&gt; RngMPolElt
5<->CompleteWeightEnumerator(C, u)<->text1839.htm#20457<->CompleteWeightEnumerator(C, u): Code, ModTupFldElt -&gt; RngMPolElt
4<->CodeFld_WeightEnumerator (Example H158E21)<->text1839.htm#20458<->CodeFld_WeightEnumerator (Example H158E21)
4<->Example-WeightEnumerator :<->text1839.htm#20458<->Example-WeightEnumerator :: CodeFld_WeightEnumerator (Example H158E21)
3<->weight-enumerator :<->text1839.htm#20453<->weight-enumerator :: The Weight Enumerator (LINEAR CODES OVER FINITE FIELDS)
3<->macwilliams :<->text1839.htm#20459<->macwilliams :: The MacWilliams Transform (LINEAR CODES OVER FINITE FIELDS)
5<->MacWilliamsTransform(n, k, q, W) <->text1839.htm#20460<->MacWilliamsTransform(n, k, q, W) : RngIntElt, RngIntElt, RngIntElt, [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->MacWilliamsTransform(n, k, K, W) <->text1839.htm#20461<->MacWilliamsTransform(n, k, K, W) : RngIntElt, RngIntElt, FldFin, RngMPol -&gt; RngMPol
4<->CodeFld_MacWilliams (Example H158E22)<->text1839.htm#20462<->CodeFld_MacWilliams (Example H158E22)
4<->Example-MacWilliams :<->text1839.htm#20462<->Example-MacWilliams :: CodeFld_MacWilliams (Example H158E22)
3<->macwilliams :<->text1839.htm#20459<->macwilliams :: The MacWilliams Transform (LINEAR CODES OVER FINITE FIELDS)
3<->words :<->text1839.htm#20463<->words :: Words (LINEAR CODES OVER FINITE FIELDS)
5<->Words(C, w: parameters) <->text1839.htm#20464<->Words(C, w: parameters) : Code, RngIntElt -&gt; { ModTupFldElt }
5<->NumberOfWords(C, w) <->text1839.htm#20465<->NumberOfWords(C, w) : Code, RngIntElt -&gt; RngIntElt
5<->WordsOfBoundedWeight(C, l, u: parameters) <->text1839.htm#20466<->WordsOfBoundedWeight(C, l, u: parameters) : Code, RngIntElt, RngIntElt -&gt; { ModTupFldElt }
5<->ConstantWords(C, i) <->text1839.htm#20467<->ConstantWords(C, i) : Code, RngIntElt -&gt; { ModTupFldElt }
5<->NumberOfConstantWords(C, i) <->text1839.htm#20468<->NumberOfConstantWords(C, i) : Code, RngIntElt -&gt; RngIntElt
4<->CodeFld_Words (Example H158E23)<->text1839.htm#20469<->CodeFld_Words (Example H158E23)
4<->Example-Words :<->text1839.htm#20469<->Example-Words :: CodeFld_Words (Example H158E23)
3<->words :<->text1839.htm#20463<->words :: Words (LINEAR CODES OVER FINITE FIELDS)
3<->other :<->text1839.htm#20470<->other :: Covering Radius and Diameter (LINEAR CODES OVER FINITE FIELDS)
5<->CosetDistanceDistribution(C) <->text1839.htm#20471<->CosetDistanceDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->CoveringRadius(C) <->text1839.htm#20472<->CoveringRadius(C) : Code -&gt;  RngIntElt
5<->Diameter(C) <->text1839.htm#20473<->Diameter(C) : Code -&gt; RngIntElt
4<->CodeFld_CoveringRadius (Example H158E24)<->text1839.htm#20474<->CodeFld_CoveringRadius (Example H158E24)
4<->Example-CoveringRadius :<->text1839.htm#20474<->Example-CoveringRadius :: CodeFld_CoveringRadius (Example H158E24)
3<->other :<->text1839.htm#20470<->other :: Covering Radius and Diameter (LINEAR CODES OVER FINITE FIELDS)
3<->structural :<->text1839.htm<->structural :: The Weight Distribution (LINEAR CODES OVER FINITE FIELDS)
3<->families :<->text1840.htm<->families :: Families of Linear Codes (LINEAR CODES OVER FINITE FIELDS)
3<->Cyclic and Quasicyclic Codes (LINEAR CODES OVER FINITE FIELDS)<->text1840.htm#20476<->Cyclic and Quasicyclic Codes (LINEAR CODES OVER FINITE FIELDS)
5<->CyclicCode(u) <->text1840.htm#20477<->CyclicCode(u) : ModTupRngElt -&gt; Code
5<->CyclicCode(n, T, K) <->text1840.htm#20478<->CyclicCode(n, T, K) : RngIntElt, \lbrace FldFinElt \rbrace, FldFin -> Code 
5<->CyclicCode(n, T, K) <->text1840.htm#20478<->CyclicCode(n, T, K) : RngIntElt, [ FldFinElt ], FldFin -&gt; Code
5<->QuasiCyclicCode(n, Gen) <->text1840.htm#20479<->QuasiCyclicCode(n, Gen) : RngIntElt, [ RngUPolElt ] -&gt; Code
5<->QuasiCyclicCode(Gen) <->text1840.htm#20480<->QuasiCyclicCode(Gen) : [ ModTupRngElt ] -&gt; Code
5<->QuasiCyclicCode(n, Gen, h) <->text1840.htm#20481<->QuasiCyclicCode(n, Gen, h) : RngIntElt, [ RngUPolElt ], RngIntElt -&gt; Code
5<->QuasiCyclicCode(Gen, h) <->text1840.htm#20482<->QuasiCyclicCode(Gen, h) : [ModTupRngElt] , RngIntElt -&gt; Code
5<->ConstaCyclicCode(n, f, alpha) <->text1840.htm#20483<->ConstaCyclicCode(n, f, alpha) : RngUPolElt, RngIntElt, FldFinElt -&gt; Code
5<->QuasiTwistedCyclicCode(n, Gen, alpha) <->text1840.htm#20484<->QuasiTwistedCyclicCode(n, Gen, alpha) : RngIntElt, [RngUPolElt], FldFinElt -&gt; Code
5<->QuasiTwistedCyclicCode(Gen, alpha) <->text1840.htm#20485<->QuasiTwistedCyclicCode(Gen, alpha) : [ModTupRngElt], FldFinElt -&gt; Code
4<->CodeFld_ChainCyclic (Example H158E25)<->text1840.htm#20486<->CodeFld_ChainCyclic (Example H158E25)
4<->Example-ChainCyclic :<->text1840.htm#20486<->Example-ChainCyclic :: CodeFld_ChainCyclic (Example H158E25)
3<->Cyclic and Quasicyclic Codes (LINEAR CODES OVER FINITE FIELDS)<->text1840.htm#20476<->Cyclic and Quasicyclic Codes (LINEAR CODES OVER FINITE FIELDS)
3<->BCH Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)<->text1840.htm#20487<->BCH Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)
5<->BCHCode(K, n, d) <->text1840.htm#20488<->BCHCode(K, n, d) : FldFin, RngIntElt, RngIntElt -> Code
5<->BCHCode(K, n, d, b) <->text1840.htm#20488<->BCHCode(K, n, d, b) : FldFin, RngIntElt, RngIntElt, RngIntElt -&gt; Code
4<->CodeFld_BCHCode (Example H158E26)<->text1840.htm#20489<->CodeFld_BCHCode (Example H158E26)
4<->Example-BCHCode :<->text1840.htm#20489<->Example-BCHCode :: CodeFld_BCHCode (Example H158E26)
5<->GoppaCode(L, G) <->text1840.htm#20490<->GoppaCode(L, G) : [ FldFinElt ], RngUPolElt -&gt; Code
4<->CodeFld_GoppaCode (Example H158E27)<->text1840.htm#20491<->CodeFld_GoppaCode (Example H158E27)
4<->Example-GoppaCode :<->text1840.htm#20491<->Example-GoppaCode :: CodeFld_GoppaCode (Example H158E27)
5<->ChienChoyCode(P, G, n, S) <->text1840.htm#20492<->ChienChoyCode(P, G, n, S) : RngUPolElt, RngUPolElt, RngIntElt, FldFin -&gt; Code
5<->AlternantCode(A, Y, r) <->text1840.htm#20493<->AlternantCode(A, Y, r) : [ FldFinElt ], [ FldFinElt ], RngIntElt -> Code
5<->AlternantCode(A, Y, r, S) <->text1840.htm#20493<->AlternantCode(A, Y, r, S) :    [ FldFinElt ], [ FldFinElt ], RngIntElt, FldFin -&gt; Code
4<->CodeFld_AlternantCode (Example H158E28)<->text1840.htm#20494<->CodeFld_AlternantCode (Example H158E28)
4<->Example-AlternantCode :<->text1840.htm#20494<->Example-AlternantCode :: CodeFld_AlternantCode (Example H158E28)
5<->NonPrimitiveAlternantCode(n, m, r) <->text1840.htm#20495<->NonPrimitiveAlternantCode(n, m, r) : RngIntElt,RngIntElt,RngIntElt-&gt;Code
5<->FireCode(h, s, n) <->text1840.htm#20496<->FireCode(h, s, n) : RngUPolElt, RngIntElt, RngIntElt -&gt; Code
5<->GabidulinCode(A, W, Z, t) <->text1840.htm#20497<->GabidulinCode(A, W, Z, t) : [ FldFinElt ], [ FldFinElt ], [ FldFinElt ], RngIntElt -&gt; Code
5<->SrivastavaCode(A, W, mu, S) <->text1840.htm#20498<->SrivastavaCode(A, W, mu, S) :   [ FldFinElt ], [ FldFinElt ], RngIntElt, FldFin -&gt; Code
5<->GeneralizedSrivastavaCode(A, W, Z, t, S) <->text1840.htm#20499<->GeneralizedSrivastavaCode(A, W, Z, t, S) : [ FldFinElt ], [ FldFinElt ], [ FldFinElt ], RngIntElt, FldFin -&gt; Code
3<->BCH Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)<->text1840.htm#20487<->BCH Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)
3<->quadratic-residue :<->text1840.htm#20500<->quadratic-residue :: Quadratic Residue Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)
5<->QRCode(K, n) <->text1840.htm#20501<->QRCode(K, n) : FldFin, RngIntElt -&gt; Code
5<->GolayCode(K, ext) <->text1840.htm#20502<->GolayCode(K, ext) : FldFin, BoolElt -&gt; Code
5<->DoublyCirculantQRCode(p) <->text1840.htm#20503<->DoublyCirculantQRCode(p) : RngIntElt -&gt; Code
5<->DoublyCirculantQRCodeGF4(m, a) <->text1840.htm#20504<->DoublyCirculantQRCodeGF4(m, a) : RngIntElt, RngElt -&gt; Code
5<->BorderedDoublyCirculantQRCode(p, a, b) <->text1840.htm#20505<->BorderedDoublyCirculantQRCode(p, a, b) : RngIntElt, RngElt, RngElt -&gt; Code
5<->TwistedQRCode(l, m) <->text1840.htm#20506<->TwistedQRCode(l, m) : RngIntElt,RngIntElt -&gt; Code
5<->PowerResidueCode(K, n, p) <->text1840.htm#20507<->PowerResidueCode(K, n, p) : FldFin, RngIntElt, RngIntElt -&gt; Code
4<->CodeFld_QuadraticResidueCode (Example H158E29)<->text1840.htm#20508<->CodeFld_QuadraticResidueCode (Example H158E29)
4<->Example-QuadraticResidueCode :<->text1840.htm#20508<->Example-QuadraticResidueCode :: CodeFld_QuadraticResidueCode (Example H158E29)
3<->quadratic-residue :<->text1840.htm#20500<->quadratic-residue :: Quadratic Residue Codes and their Generalizations (LINEAR CODES OVER FINITE FIELDS)
3<->reed-solomon-justesen :<->text1840.htm#20509<->reed-solomon-justesen :: Reed--Solomon and Justesen Codes (LINEAR CODES OVER FINITE FIELDS)
5<->ReedSolomonCode(K, d) <->text1840.htm#20510<->ReedSolomonCode(K, d) : FldFin, RngIntElt -> Code
5<->ReedSolomonCode(K, d, b) <->text1840.htm#20510<->ReedSolomonCode(K, d, b) : FldFin, RngIntElt, RngIntElt -&gt; Code
5<->ReedSolomonCode(n, d, b) <->text1840.htm#20511<->ReedSolomonCode(n, d, b) : RngIntElt, RngIntElt, RngIntElt -> Code
5<->ReedSolomonCode(n, d) <->text1840.htm#20511<->ReedSolomonCode(n, d) : RngIntElt, RngIntElt -&gt; Code
5<->GRSCode(A, V, k) <->text1840.htm#20512<->GRSCode(A, V, k) : [ FldFinElt ], [ FldFinElt ], RngIntElt -&gt; Code
5<->JustesenCode(N, K) <->text1840.htm#20513<->JustesenCode(N, K) : Code, FldFinElt, RngIntElt -&gt; Code
4<->CodeFld_GRSCode (Example H158E30)<->text1840.htm#20514<->CodeFld_GRSCode (Example H158E30)
4<->Example-GRSCode :<->text1840.htm#20514<->Example-GRSCode :: CodeFld_GRSCode (Example H158E30)
3<->reed-solomon-justesen :<->text1840.htm#20509<->reed-solomon-justesen :: Reed--Solomon and Justesen Codes (LINEAR CODES OVER FINITE FIELDS)
3<->mds-codes :<->text1840.htm#20515<->mds-codes :: Maximum Distance Separable  Codes (LINEAR CODES OVER FINITE FIELDS)
5<->MDSCode(K, k) <->text1840.htm#20516<->MDSCode(K, k) : FldFin, RngIntElt -&gt; Code
3<->mds-codes :<->text1840.htm#20515<->mds-codes :: Maximum Distance Separable  Codes (LINEAR CODES OVER FINITE FIELDS)
3<->families :<->text1840.htm<->families :: Families of Linear Codes (LINEAR CODES OVER FINITE FIELDS)
3<->operation :<->text1841.htm<->operation :: New Codes from Existing (LINEAR CODES OVER FINITE FIELDS)
3<->standard :<->text1841.htm#20518<->standard :: Standard Constructions (LINEAR CODES OVER FINITE FIELDS)
5<->AugmentCode(C) <->text1841.htm#20519<->AugmentCode(C) : Code -&gt; Code
5<->CodeComplement(C, C1) <->text1841.htm#20520<->CodeComplement(C, C1) : Code, Code -&gt; Code
5<->DirectSum(C, D) <->text1841.htm#20521<->DirectSum(C, D) : Code, Code -&gt; Code
5<->DirectSum(Q) <->text1841.htm#20522<->DirectSum(Q) : [Code] -&gt; Code
5<->ProductCode :: DirectProduct(C, D) <->text1841.htm#20523<->ProductCode :: DirectProduct(C, D) : Code, Code -&gt; Code
5<->DirectProduct(C, D) <->text1841.htm#20523<->DirectProduct(C, D) : Code, Code -&gt; Code
5<->ExtendCode(C) <->text1841.htm#20524<->ExtendCode(C) : Code -&gt; Code
5<->ExtendCode(C, n) <->text1841.htm#20525<->ExtendCode(C, n) : Code, RngIntElt -&gt; Code
5<->PadCode(C, n) <->text1841.htm#20526<->PadCode(C, n) : Code, RngIntElt -&gt; Code
5<->ExpurgateCode(C) <->text1841.htm#20527<->ExpurgateCode(C) : Code -&gt; Code
5<->ExpurgateCode(C, L) <->text1841.htm#20528<->ExpurgateCode(C, L) : Code,[ModTupFldElt] -&gt; Code
5<->ExpurgateWeightCode(C, w) <->text1841.htm#20529<->ExpurgateWeightCode(C, w) : Code, RngIntElt -&gt; Code
5<->LengthenCode(C) <->text1841.htm#20530<->LengthenCode(C) : Code -&gt; Code
5<->PlotkinSum(C1, C2) <->text1841.htm#20531<->PlotkinSum(C1, C2) : Code, Code -&gt; Code
5<->PlotkinSum(C1, C2, C3: parameters) <->text1841.htm#20532<->PlotkinSum(C1, C2, C3: parameters) : Code, Code, Code -&gt; Code
5<->PunctureCode(C, i) <->text1841.htm#20533<->PunctureCode(C, i) : Code, RngIntElt -&gt; Code
5<->PunctureCode(C, S) <->text1841.htm#20534<->PunctureCode(C, S) : Code, { RngIntElt } -&gt; Code
5<->ShortenCode(C, i) <->text1841.htm#20535<->ShortenCode(C, i) : Code, RngIntElt -&gt; Code
5<->ShortenCode(C, S) <->text1841.htm#20536<->ShortenCode(C, S) : Code, { RngIntElt } -&gt; Code
4<->CodeFld_Make12-8-4Code (Example H158E31)<->text1841.htm#20537<->CodeFld_Make12-8-4Code (Example H158E31)
4<->Example-Make12-8-4Code :<->text1841.htm#20537<->Example-Make12-8-4Code :: CodeFld_Make12-8-4Code (Example H158E31)
3<->standard :<->text1841.htm#20518<->standard :: Standard Constructions (LINEAR CODES OVER FINITE FIELDS)
3<->modification-alphabet :<->text1841.htm#20538<->modification-alphabet :: Changing the Alphabet of a Code (LINEAR CODES OVER FINITE FIELDS)
5<->ExtendField(C, L) <->text1841.htm#20539<->ExtendField(C, L) : Code, FldFin -&gt; Code, Map
5<->LinearCode(C, S) <->text1841.htm#20540<->LinearCode(C, S) : Code, FldFin -&gt; Code, Map
5<->SubfieldRepresentationCode(C, K) <->text1841.htm#20541<->SubfieldRepresentationCode(C, K) : Code, FldFin -&gt; Code
5<->SubfieldRepresentationParityCode(C, K) <->text1841.htm#20542<->SubfieldRepresentationParityCode(C, K) : Code, FldFin -&gt; Code
5<->RestrictField :: SubfieldSubcode(C, S) <->text1841.htm#20543<->RestrictField :: SubfieldSubcode(C, S) : Code, FldFin -&gt; Code, Map
5<->SubfieldSubcode(C) <->text1841.htm#20543<->SubfieldSubcode(C) : Code -> Code, Map
5<->RestrictField(C) : Code -> Code, Map :: SubfieldSubcode(C, S) <->text1841.htm#20543<->RestrictField(C) : Code -> Code, Map :: SubfieldSubcode(C, S) : Code, FldFin -&gt; Code, Map
5<->SubfieldSubcode(C, S) <->text1841.htm#20543<->SubfieldSubcode(C, S) : Code, FldFin -&gt; Code, Map
5<->SubfieldCode(C, S) <->text1841.htm#20544<->SubfieldCode(C, S) : Code, FldFin -&gt; Code
5<->Trace(C) <->text1841.htm#20545<->Trace(C) : Code -> Code
5<->Trace(C, F) <->text1841.htm#20545<->Trace(C, F) : Code, FldFin -&gt; Code
3<->modification-alphabet :<->text1841.htm#20538<->modification-alphabet :: Changing the Alphabet of a Code (LINEAR CODES OVER FINITE FIELDS)
3<->combining-codes :<->text1841.htm#20546<->combining-codes :: Combining Codes (LINEAR CODES OVER FINITE FIELDS)
5<->C1 cat C2 <->text1841.htm#20547<->C1 cat C2 : Code, Code -&gt; Code
5<->Juxtaposition(C1, C2) <->text1841.htm#20548<->Juxtaposition(C1, C2) : Code, Code -&gt; Code
5<->ConcatenatedCode(O, I) <->text1841.htm#20549<->ConcatenatedCode(O, I) : Code, Code -&gt; Code
4<->CodeFld_ConcatenatedCode (Example H158E32)<->text1841.htm#20550<->CodeFld_ConcatenatedCode (Example H158E32)
4<->Example-ConcatenatedCode :<->text1841.htm#20550<->Example-ConcatenatedCode :: CodeFld_ConcatenatedCode (Example H158E32)
5<->ConstructionX(C1, C2, C3) <->text1841.htm#20551<->ConstructionX(C1, C2, C3) : Code, Code, Code -&gt; Code
5<->ConstructionXChain(S, C) <->text1841.htm#20552<->ConstructionXChain(S, C) : [Code], Code -&gt; [Code]
4<->CodeFld_constructionX (Example H158E33)<->text1841.htm#20553<->CodeFld_constructionX (Example H158E33)
4<->Example-constructionX :<->text1841.htm#20553<->Example-constructionX :: CodeFld_constructionX (Example H158E33)
5<->ConstructionX3(C1, C2, C3, D1, D2) <->text1841.htm#20554<->ConstructionX3(C1, C2, C3, D1, D2) : Code, Code, Code, Code, Code -&gt; Code, Map
5<->ConstructionX3u(C1, C2, C3, D1, D2) <->text1841.htm#20555<->ConstructionX3u(C1, C2, C3, D1, D2) : Code, Code, Code, Code, Code -&gt; Code, Code
4<->CodeFld_X3 (Example H158E34)<->text1841.htm#20556<->CodeFld_X3 (Example H158E34)
4<->Example-X3 :<->text1841.htm#20556<->Example-X3 :: CodeFld_X3 (Example H158E34)
5<->ConstructionXX(C1, C2, C3, D2, D3) <->text1841.htm#20557<->ConstructionXX(C1, C2, C3, D2, D3) : Code, Code, Code, Code, Code -&gt; Code
4<->CodeFld_XX (Example H158E35)<->text1841.htm#20558<->CodeFld_XX (Example H158E35)
4<->Example-XX :<->text1841.htm#20558<->Example-XX :: CodeFld_XX (Example H158E35)
5<->ZinovievCode(I, O) <->text1841.htm#20559<->ZinovievCode(I, O) : [Code], [Code] -&gt; Code
4<->CodeFld_Zinoviev (Example H158E36)<->text1841.htm#20560<->CodeFld_Zinoviev (Example H158E36)
4<->Example-Zinoviev :<->text1841.htm#20560<->Example-Zinoviev :: CodeFld_Zinoviev (Example H158E36)
5<->ConstructionY1(C) <->text1841.htm#20561<->ConstructionY1(C) : Code -&gt; Code
5<->ConstructionY1(C, w) <->text1841.htm#20562<->ConstructionY1(C, w) : Code, RngIntElt -&gt; Code
3<->combining-codes :<->text1841.htm#20546<->combining-codes :: Combining Codes (LINEAR CODES OVER FINITE FIELDS)
3<->operation :<->text1841.htm<->operation :: New Codes from Existing (LINEAR CODES OVER FINITE FIELDS)
3<->codingcrypto :<->text1842.htm<->codingcrypto :: Coding Theory and Cryptography (LINEAR CODES OVER FINITE FIELDS)
3<->standard-mceliece :<->text1842.htm#20564<->standard-mceliece :: Standard Attacks (LINEAR CODES OVER FINITE FIELDS)
5<->McEliecesAttack(C, v, e) <->text1842.htm#20565<->McEliecesAttack(C, v, e) : Code, ModTupFldElt, RngIntElt -&gt; ModTupFldElt
5<->LeeBrickellsAttack(C, v, e, p) <->text1842.htm#20566<->LeeBrickellsAttack(C, v, e, p) : Code, ModTupFldElt, RngIntElt, RngIntElt -&gt; ModTupFldElt
5<->LeonsAttack(C, v, e, p, l) <->text1842.htm#20567<->LeonsAttack(C, v, e, p, l) : Code, ModTupFldElt, RngIntElt, RngIntElt,RngIntElt -&gt; ModTupFldElt
5<->SternsAttack(C, v, e, p, l) <->text1842.htm#20568<->SternsAttack(C, v, e, p, l) : Code, ModTupFldElt, RngIntElt, RngIntElt,RngIntElt -&gt; ModTupFldElt
5<->CanteautChabaudsAttack(C, v, e, p, l) <->text1842.htm#20569<->CanteautChabaudsAttack(C, v, e, p, l) : Code, ModTupFldElt, RngIntElt, RngIntElt,RngIntElt -&gt; ModTupFldElt
3<->standard-mceliece :<->text1842.htm#20564<->standard-mceliece :: Standard Attacks (LINEAR CODES OVER FINITE FIELDS)
3<->general-mceliece :<->text1842.htm#20570<->general-mceliece :: Generalized Attacks (LINEAR CODES OVER FINITE FIELDS)
5<->DecodingAttack(C, v, e) <->text1842.htm#20571<->DecodingAttack(C, v, e) : Code, ModTupFldElt, RngIntElt, RngIntElt,RngIntElt -&gt; ModTupFldElt
3<->general-mceliece :<->text1842.htm#20570<->general-mceliece :: Generalized Attacks (LINEAR CODES OVER FINITE FIELDS)
3<->codingcrypto :<->text1842.htm<->codingcrypto :: Coding Theory and Cryptography (LINEAR CODES OVER FINITE FIELDS)
3<->bound :<->text1843.htm<->bound :: Bounds (LINEAR CODES OVER FINITE FIELDS)
3<->best-bounds :<->text1843.htm#20573<->best-bounds :: Best Known Bounds for Linear  Codes (LINEAR CODES OVER FINITE FIELDS)
5<->BKLCLowerBound(F, n, k) <->text1843.htm#20574<->BKLCLowerBound(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->BKLCUpperBound(F, n, k) <->text1843.htm#20575<->BKLCUpperBound(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->BLLCLowerBound(F, k, d) <->text1843.htm#20576<->BLLCLowerBound(F, k, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->BLLCUpperBound(F, k, d) <->text1843.htm#20577<->BLLCUpperBound(F, k, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->BDLCLowerBound(F, n, d) <->text1843.htm#20578<->BDLCLowerBound(F, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->BDLCUpperBound(F, n, d) <->text1843.htm#20579<->BDLCUpperBound(F, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
3<->best-bounds :<->text1843.htm#20573<->best-bounds :: Best Known Bounds for Linear  Codes (LINEAR CODES OVER FINITE FIELDS)
3<->cardinality :<->text1843.htm#20580<->cardinality :: Bounds on the Cardinality of a Largest Code (LINEAR CODES OVER FINITE FIELDS)
5<->EliasBound(K, n, d) <->text1843.htm#20581<->EliasBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->GriesmerBound(K, n, d) <->text1843.htm#20582<->GriesmerBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->JohnsonBound(n, d) <->text1843.htm#20583<->JohnsonBound(n, d) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->LevenshteinBound(K, n, d) <->text1843.htm#20584<->LevenshteinBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->PlotkinBound(K, n, d) <->text1843.htm#20585<->PlotkinBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->SingletonBound(K, n, d) <->text1843.htm#20586<->SingletonBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->SpherePackingBound(K, n, d) <->text1843.htm#20587<->SpherePackingBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->GilbertVarshamovBound(K, n, d) <->text1843.htm#20588<->GilbertVarshamovBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->GilbertVarshamovLinearBound(K, n, d) <->text1843.htm#20589<->GilbertVarshamovLinearBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->VanLintBound(K, n, d) <->text1843.htm#20590<->VanLintBound(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
4<->CodeFld_Card-Best-Comparison (Example H158E37)<->text1843.htm#20591<->CodeFld_Card-Best-Comparison (Example H158E37)
4<->Example-Card-Best-Comparison :<->text1843.htm#20591<->Example-Card-Best-Comparison :: CodeFld_Card-Best-Comparison (Example H158E37)
3<->cardinality :<->text1843.htm#20580<->cardinality :: Bounds on the Cardinality of a Largest Code (LINEAR CODES OVER FINITE FIELDS)
3<->minimum-distance-lower-bound :<->text1843.htm#20592<->minimum-distance-lower-bound :: Bounds on the Minimum Distance (LINEAR CODES OVER FINITE FIELDS)
5<->BCHBound(C) <->text1843.htm#20593<->BCHBound(C) : Code -&gt; RngIntElt, RngIntElt
5<->GriesmerMinimumWeightBound(K, n, k) <->text1843.htm#20594<->GriesmerMinimumWeightBound(K, n, k) : FldFin, RngIntElt, RngIntElt-&gt;RngIntElt
3<->minimum-distance-lower-bound :<->text1843.htm#20592<->minimum-distance-lower-bound :: Bounds on the Minimum Distance (LINEAR CODES OVER FINITE FIELDS)
3<->asymptotic-bound-information-rate :<->text1843.htm#20595<->asymptotic-bound-information-rate :: Asymptotic Bounds on the Information Rate (LINEAR CODES OVER FINITE FIELDS)
5<->EliasAsymptoticBound(K, delta) <->text1843.htm#20596<->EliasAsymptoticBound(K, delta) : FldFin, FldPrElt -&gt; FldPrElt
5<->McElieceEtAlAsymptoticBound(delta) <->text1843.htm#20597<->McElieceEtAlAsymptoticBound(delta) : FldPrElt -&gt; FldPrElt
5<->PlotkinAsymptoticBound(K, delta) <->text1843.htm#20598<->PlotkinAsymptoticBound(K, delta) : FldFin, FldPrElt -&gt; FldPrElt
5<->SingletonAsymptoticBound(delta) <->text1843.htm#20599<->SingletonAsymptoticBound(delta) : FldPrElt -&gt; FldPrElt
5<->HammingAsymptoticBound(K, delta) <->text1843.htm#20600<->HammingAsymptoticBound(K, delta) : FldFin, FldPrElt -&gt; FldPrElt
5<->GilbertVarshamovAsymptoticBound(K, delta) <->text1843.htm#20601<->GilbertVarshamovAsymptoticBound(K, delta) : FldFin, FldPrElt -&gt; FldPrElt
3<->asymptotic-bound-information-rate :<->text1843.htm#20595<->asymptotic-bound-information-rate :: Asymptotic Bounds on the Information Rate (LINEAR CODES OVER FINITE FIELDS)
3<->other :<->text1843.htm#20602<->other :: Other Bounds (LINEAR CODES OVER FINITE FIELDS)
5<->GriesmerLengthBound(K, k, d) <->text1843.htm#20603<->GriesmerLengthBound(K, k, d) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
3<->other :<->text1843.htm#20602<->other :: Other Bounds (LINEAR CODES OVER FINITE FIELDS)
3<->bound :<->text1843.htm<->bound :: Bounds (LINEAR CODES OVER FINITE FIELDS)
3<->best-codes :<->text1844.htm<->best-codes :: Best Known Linear Codes (LINEAR CODES OVER FINITE FIELDS)
5<->BestKnownLinearCode :: BKLC(K, n, k) <->text1844.htm#20605<->BestKnownLinearCode :: BKLC(K, n, k) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
5<->BKLC(K, n, k) <->text1844.htm#20605<->BKLC(K, n, k) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
5<->BestLengthLinearCode :: BLLC(K, k, d) <->text1844.htm#20606<->BestLengthLinearCode :: BLLC(K, k, d) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
5<->BLLC(K, k, d) <->text1844.htm#20606<->BLLC(K, k, d) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
5<->BestDimensionLinearCode :: BDLC(K, n, d) <->text1844.htm#20607<->BestDimensionLinearCode :: BDLC(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
5<->BDLC(K, n, d) <->text1844.htm#20607<->BDLC(K, n, d) : FldFin, RngIntElt, RngIntElt -&gt; Code, BoolElt
4<->CodeFld_BKLC-GF2 (Example H158E38)<->text1844.htm#20608<->CodeFld_BKLC-GF2 (Example H158E38)
4<->Example-BKLC-GF2 :<->text1844.htm#20608<->Example-BKLC-GF2 :: CodeFld_BKLC-GF2 (Example H158E38)
4<->CodeFld_BKLC-GF4 (Example H158E39)<->text1844.htm#20609<->CodeFld_BKLC-GF4 (Example H158E39)
4<->Example-BKLC-GF4 :<->text1844.htm#20609<->Example-BKLC-GF4 :: CodeFld_BKLC-GF4 (Example H158E39)
4<->CodeFld_BestLength-GF2 (Example H158E40)<->text1844.htm#20610<->CodeFld_BestLength-GF2 (Example H158E40)
4<->Example-BestLength-GF2 :<->text1844.htm#20610<->Example-BestLength-GF2 :: CodeFld_BestLength-GF2 (Example H158E40)
4<->CodeFld_BDLC-GF4 (Example H158E41)<->text1844.htm#20611<->CodeFld_BDLC-GF4 (Example H158E41)
4<->Example-BDLC-GF4 :<->text1844.htm#20611<->Example-BDLC-GF4 :: CodeFld_BDLC-GF4 (Example H158E41)
4<->CodeFld_VerboseBestCode (Example H158E42)<->text1844.htm#20612<->CodeFld_VerboseBestCode (Example H158E42)
4<->Example-VerboseBestCode :<->text1844.htm#20612<->Example-VerboseBestCode :: CodeFld_VerboseBestCode (Example H158E42)
3<->best-codes :<->text1844.htm<->best-codes :: Best Known Linear Codes (LINEAR CODES OVER FINITE FIELDS)
3<->decoding :<->text1845.htm<->decoding :: Decoding (LINEAR CODES OVER FINITE FIELDS)
3<->decode_syndrome :<->text1845.htm#20614<->decode_syndrome :: Syndrome Decoding (LINEAR CODES OVER FINITE FIELDS)
5<->SyndromeDecoding(C, v) <->text1845.htm#20615<->SyndromeDecoding(C, v) : CodeLinFld, ModTupRngElt -&gt; BoolElt, ModTupRngElt
5<->SyndromeDecoding(C, Q) <->text1845.htm#20616<->SyndromeDecoding(C, Q) : CodeLinFld, [ ModTupRngElt ] -&gt; [ BoolElt ], [ ModTupRngElt ]
4<->CodeFld_Syn_Decode (Example H158E43)<->text1845.htm#20617<->CodeFld_Syn_Decode (Example H158E43)
4<->Example-Syn_Decode :<->text1845.htm#20617<->Example-Syn_Decode :: CodeFld_Syn_Decode (Example H158E43)
3<->decode_syndrome :<->text1845.htm#20614<->decode_syndrome :: Syndrome Decoding (LINEAR CODES OVER FINITE FIELDS)
3<->decode__euclid :<->text1845.htm#20618<->decode__euclid :: Euclidean Decoding (LINEAR CODES OVER FINITE FIELDS)
5<->EuclideanDecoding(C, v) <->text1845.htm#20619<->EuclideanDecoding(C, v) : CodeLinFld, ModTupRngElt -&gt; BoolElt, ModTupRngElt
5<->EuclideanDecoding(C, Q) <->text1845.htm#20620<->EuclideanDecoding(C, Q) : CodeLinFld, [ ModTupRngElt ] -&gt; [ BoolElt ], [ ModTupRngElt ]
4<->CodeFld_Eucl_Decode (Example H158E44)<->text1845.htm#20621<->CodeFld_Eucl_Decode (Example H158E44)
4<->Example-Eucl_Decode :<->text1845.htm#20621<->Example-Eucl_Decode :: CodeFld_Eucl_Decode (Example H158E44)
3<->decode__euclid :<->text1845.htm#20618<->decode__euclid :: Euclidean Decoding (LINEAR CODES OVER FINITE FIELDS)
3<->permutation_decode :<->text1845.htm#20622<->permutation_decode :: Permutation Decoding (LINEAR CODES OVER FINITE FIELDS)
5<->IsPermutationDecodeSet(C, I, S, s) <->text1845.htm#20623<->IsPermutationDecodeSet(C, I, S, s) : CodeLinFld, [RngIntElt], [GrpPermElt], RngIntElt -> BoolElt
5<->IsPermutationDecodeSet(C, I, S, s) <->text1845.htm#20623<->IsPermutationDecodeSet(C, I, S, s) : CodeLinFld, [RngIntElt], [AlgMatElt], RngIntElt -&gt; BoolElt
5<->PermutationDecode(C, I, S, s, u) <->text1845.htm#20624<->PermutationDecode(C, I, S, s, u) : CodeLinFld, [RngIntElt], [GrpPermElt], RngIntElt, ModTupFldElt -> BoolElt, ModTupFldElt
5<->PermutationDecode(C, I, S, s, u) <->text1845.htm#20624<->PermutationDecode(C, I, S, s, u) : CodeLinFld, [RngIntElt], [AlgMatElt], RngIntElt, ModTupFldElt -&gt; BoolElt, ModTupFldElt
5<->PermutationDecode(C, I, S, s, Q) <->text1845.htm#20625<->PermutationDecode(C, I, S, s, Q) : CodeLinFld, [RngIntElt], [GrpPermElt], RngIntElt, [ModTupFldElt] -> [BoolElt], [ModTupFldElt]
5<->PermutationDecode(C, I, S, s, Q) <->text1845.htm#20625<->PermutationDecode(C, I, S, s, Q) : CodeLinFld, [RngIntElt], [AlgMatElt], RngIntElt, [ModTupFldElt] -&gt; [BoolElt], [ModTupFldElt]
5<->PDSetSimplexCode(K, m) <->text1845.htm#20626<->PDSetSimplexCode(K, m) : FldFin, RngIntElt -&gt; SeqEnum, SeqEnum, SeqEnum
5<->PDSetHadamardCode(m) <->text1845.htm#20627<->PDSetHadamardCode(m) : RngIntElt -&gt; SeqEnum, SeqEnum, SeqEnum
4<->CodeFld_spain-decode-1 (Example H158E45)<->text1845.htm#20628<->CodeFld_spain-decode-1 (Example H158E45)
4<->Example-spain-decode-1 :<->text1845.htm#20628<->Example-spain-decode-1 :: CodeFld_spain-decode-1 (Example H158E45)
4<->CodeFld_spain-decode-2 (Example H158E46)<->text1845.htm#20629<->CodeFld_spain-decode-2 (Example H158E46)
4<->Example-spain-decode-2 :<->text1845.htm#20629<->Example-spain-decode-2 :: CodeFld_spain-decode-2 (Example H158E46)
3<->permutation_decode :<->text1845.htm#20622<->permutation_decode :: Permutation Decoding (LINEAR CODES OVER FINITE FIELDS)
3<->decoding :<->text1845.htm<->decoding :: Decoding (LINEAR CODES OVER FINITE FIELDS)
3<->transforms :<->text1846.htm<->transforms :: Transforms (LINEAR CODES OVER FINITE FIELDS)
3<->mattson-solomon :<->text1846.htm#20631<->mattson-solomon :: Mattson--Solomon Transforms (LINEAR CODES OVER FINITE FIELDS)
5<->MattsonSolomonTransform(f, n) <->text1846.htm#20632<->MattsonSolomonTransform(f, n) : RngUPolElt, RngIntElt -&gt; RngUPolElt
5<->InverseMattsonSolomonTransform(A, n) <->text1846.htm#20633<->InverseMattsonSolomonTransform(A, n) : RngUPolElt, RngIntElt -&gt; RngUPolElt
4<->CodeFld_MattsonSolomonTransform (Example H158E47)<->text1846.htm#20634<->CodeFld_MattsonSolomonTransform (Example H158E47)
4<->Example-MattsonSolomonTransform :<->text1846.htm#20634<->Example-MattsonSolomonTransform :: CodeFld_MattsonSolomonTransform (Example H158E47)
3<->mattson-solomon :<->text1846.htm#20631<->mattson-solomon :: Mattson--Solomon Transforms (LINEAR CODES OVER FINITE FIELDS)
3<->krawchouk :<->text1846.htm#20635<->krawchouk :: Krawchouk Polynomials (LINEAR CODES OVER FINITE FIELDS)
5<->KrawchoukPolynomial(K, n, k) <->text1846.htm#20636<->KrawchoukPolynomial(K, n, k) : FldFin, RngIntElt, RngIntElt -&gt; RngUPolElt
5<->KrawchoukTransform(f, K, n) <->text1846.htm#20637<->KrawchoukTransform(f, K, n) : RngUPolElt, FldFin, RngIntElt -&gt; RngUPolElt
5<->InverseKrawchouk(A, K, n) <->text1846.htm#20638<->InverseKrawchouk(A, K, n) : RngUPolElt, FldFin, RngIntElt -&gt; RngUPolElt
3<->krawchouk :<->text1846.htm#20635<->krawchouk :: Krawchouk Polynomials (LINEAR CODES OVER FINITE FIELDS)
3<->transforms :<->text1846.htm<->transforms :: Transforms (LINEAR CODES OVER FINITE FIELDS)
3<->group-action :<->text1847.htm<->group-action :: Automorphism Groups (LINEAR CODES OVER FINITE FIELDS)
3<->introduction :<->text1847.htm#20640<->introduction :: Introduction (LINEAR CODES OVER FINITE FIELDS)
3<->group-actions :<->text1847.htm#20641<->group-actions :: Group Actions (LINEAR CODES OVER FINITE FIELDS)
5<->v ^ x <->text1847.htm#20642<->v ^ x : ModTupFldElt, GrpPermElt -&gt; ModTupFldElt
5<->v ^ G <->text1847.htm#20643<->v ^ G : ModTupFldElt, GrpPerm -&gt; GSet{ ModTupFldElt }
5<->C ^ x <->text1847.htm#20644<->C ^ x : Code, GrpPermElt -&gt; Code
5<->C ^ G <->text1847.htm#20645<->C ^ G : Code, GrpPerm -&gt; GSet{ Code }
5<->S \^ x <->text1847.htm#20646<->S \^ x : [ModTupFldElt], GrpPermElt -> [ModTupFldElt]
5<->S ^ x <->text1847.htm#20646<->S ^ x : { ModTupFldElt }, GrpPermElt -&gt; { ModTupFldElt }
5<->S \^ x <->text1847.htm#20647<->S \^ x : [Code], GrpPermElt -> [Code]
5<->S ^ x <->text1847.htm#20647<->S ^ x : { Code }, GrpPermElt -&gt; { Code }
5<->Fix(C, G) <->text1847.htm#20648<->Fix(C, G) : Code, GrpPerm -&gt; Code
3<->group-actions :<->text1847.htm#20641<->group-actions :: Group Actions (LINEAR CODES OVER FINITE FIELDS)
3<->automorphism-group :<->text1847.htm#20649<->automorphism-group :: Automorphism Group (LINEAR CODES OVER FINITE FIELDS)
5<->MonomialGroup :: AutomorphismGroup(C: parameters) <->text1847.htm#20650<->MonomialGroup :: AutomorphismGroup(C: parameters) : Code -&gt; GrpPerm, PowMap, Map
5<->AutomorphismGroup(C: parameters) <->text1847.htm#20650<->AutomorphismGroup(C: parameters) : Code -&gt; GrpPerm, PowMap, Map
5<->PermutationGroup(C) <->text1847.htm#20651<->PermutationGroup(C) : Code -&gt; GrpPerm, PowMap, Map
5<->MonomialSubgroup :: AutomorphismSubgroup(C) <->text1847.htm#20652<->MonomialSubgroup :: AutomorphismSubgroup(C) : Code -&gt; GrpPerm, PowMap, Map
5<->AutomorphismSubgroup(C) <->text1847.htm#20652<->AutomorphismSubgroup(C) : Code -&gt; GrpPerm, PowMap, Map
5<->MonomialGroupStabilizer :: AutomorphismGroupStabilizer(C, k) <->text1847.htm#20653<->MonomialGroupStabilizer :: AutomorphismGroupStabilizer(C, k) : Code, RngIntElt -&gt; GrpPerm, PowMap, Map
5<->AutomorphismGroupStabilizer(C, k) <->text1847.htm#20653<->AutomorphismGroupStabilizer(C, k) : Code, RngIntElt -&gt; GrpPerm, PowMap, Map
5<->Aut(C) <->text1847.htm#20654<->Aut(C) : Code -&gt; Pow, Map
5<->Aut(C, T) <->text1847.htm#20655<->Aut(C, T) : Code, MonStgElt -&gt; Pow, Map
4<->CodeFld_AutomorphismGroup (Example H158E48)<->text1847.htm#20656<->CodeFld_AutomorphismGroup (Example H158E48)
4<->Example-AutomorphismGroup :<->text1847.htm#20656<->Example-AutomorphismGroup :: CodeFld_AutomorphismGroup (Example H158E48)
4<->CodeFld_AutoMorphismGroupWithWeight (Example H158E49)<->text1847.htm#20657<->CodeFld_AutoMorphismGroupWithWeight (Example H158E49)
4<->Example-AutoMorphismGroupWithWeight :<->text1847.htm#20657<->Example-AutoMorphismGroupWithWeight :: CodeFld_AutoMorphismGroupWithWeight (Example H158E49)
3<->automorphism-group :<->text1847.htm#20649<->automorphism-group :: Automorphism Group (LINEAR CODES OVER FINITE FIELDS)
3<->isomorphism-equivalence :<->text1847.htm#20658<->isomorphism-equivalence :: Equivalence and Isomorphism of Codes (LINEAR CODES OVER FINITE FIELDS)
5<->IsEquivalent :: IsIsomorphic(C, D: parameters) <->text1847.htm#20659<->IsEquivalent :: IsIsomorphic(C, D: parameters) : Code, Code -&gt; BoolElt, Map
5<->IsIsomorphic(C, D: parameters) <->text1847.htm#20659<->IsIsomorphic(C, D: parameters) : Code, Code -&gt; BoolElt, Map
3<->isomorphism-equivalence :<->text1847.htm#20658<->isomorphism-equivalence :: Equivalence and Isomorphism of Codes (LINEAR CODES OVER FINITE FIELDS)
3<->group-action :<->text1847.htm<->group-action :: Automorphism Groups (LINEAR CODES OVER FINITE FIELDS)
3<->error-correcting-linear-code :<->text1831.htm<->error-correcting-linear-code :: LINEAR CODES OVER FINITE FIELDS
3<->error-correcting-linear-code :<->text1850.htm<->error-correcting-linear-code :: ALGEBRAIC-GEOMETRIC CODES
3<->introduction :<->text1851.htm<->introduction :: Introduction (ALGEBRAIC-GEOMETRIC CODES)
3<->creation :<->text1852.htm<->creation :: Creation of an Algebraic Geometric Code (ALGEBRAIC-GEOMETRIC CODES)
5<->AGCode :: AlgebraicGeometricCode(S, D) <->text1852.htm#20665<->AGCode :: AlgebraicGeometricCode(S, D) : [PlcCrvElt], DivCrvElt -&gt; Code
5<->AlgebraicGeometricCode(S, D) <->text1852.htm#20665<->AlgebraicGeometricCode(S, D) : [PlcCrvElt], DivCrvElt -&gt; Code
5<->AGDualCode :: AlgebraicGeometricDualCode(S, D) <->text1852.htm#20666<->AGDualCode :: AlgebraicGeometricDualCode(S, D) : [PlcCrvElt], DivCrvElt -&gt; Code
5<->AlgebraicGeometricDualCode(S, D) <->text1852.htm#20666<->AlgebraicGeometricDualCode(S, D) : [PlcCrvElt], DivCrvElt -&gt; Code
5<->HermitianCode(q, r) <->text1852.htm#20667<->HermitianCode(q, r) : RngIntElt, RngIntElt -&gt; Code
4<->CodeAlG_AlgebraicGeometricCode (Example H159E1)<->text1852.htm#20668<->CodeAlG_AlgebraicGeometricCode (Example H159E1)
4<->Example-AlgebraicGeometricCode :<->text1852.htm#20668<->Example-AlgebraicGeometricCode :: CodeAlG_AlgebraicGeometricCode (Example H159E1)
4<->CodeAlG_AlgebraicGeometricCode (Example H159E2)<->text1852.htm#20669<->CodeAlG_AlgebraicGeometricCode (Example H159E2)
4<->Example-AlgebraicGeometricCode :<->text1852.htm#20669<->Example-AlgebraicGeometricCode :: CodeAlG_AlgebraicGeometricCode (Example H159E2)
3<->creation :<->text1852.htm<->creation :: Creation of an Algebraic Geometric Code (ALGEBRAIC-GEOMETRIC CODES)
3<->properties :<->text1853.htm<->properties :: Properties of AG--Codes (ALGEBRAIC-GEOMETRIC CODES)
5<->IsWeaklyAG(C) <->text1853.htm#20671<->IsWeaklyAG(C) : Code -&gt; BoolElt
5<->IsWeaklyAGDual(C) <->text1853.htm#20672<->IsWeaklyAGDual(C) : Code -&gt; BoolElt
5<->IsAlgebraicGeometric(C) <->text1853.htm#20673<->IsAlgebraicGeometric(C) : Code -&gt; BoolElt
5<->IsStronglyAG(C) <->text1853.htm#20674<->IsStronglyAG(C) : Code -&gt; BoolElt
3<->properties :<->text1853.htm<->properties :: Properties of AG--Codes (ALGEBRAIC-GEOMETRIC CODES)
3<->access :<->text1854.htm<->access :: Access Functions (ALGEBRAIC-GEOMETRIC CODES)
5<->Curve(C) <->text1854.htm#20676<->Curve(C) : Code -&gt; Crv
5<->GeometricSupport(C) <->text1854.htm#20677<->GeometricSupport(C) : Code -&gt; DivCrvElt
5<->Divisor(C) <->text1854.htm#20678<->Divisor(C) : Code -&gt; DivCrvElt
5<->GoppaDesignedDistance(C) <->text1854.htm#20679<->GoppaDesignedDistance(C) : Code -&gt; RngIntElt
3<->access :<->text1854.htm<->access :: Access Functions (ALGEBRAIC-GEOMETRIC CODES)
3<->decode :<->text1855.htm<->decode :: Decoding AG Codes (ALGEBRAIC-GEOMETRIC CODES)
5<->AGDecode(C, v, Fd) <->text1855.htm#20681<->AGDecode(C, v, Fd) : CodeLinFld, ModTupFldElt, DivCrvElt -&gt; ModTupFldElt
4<->CodeAlG_AGDecode (Example H159E3)<->text1855.htm#20682<->CodeAlG_AGDecode (Example H159E3)
4<->Example-AGDecode :<->text1855.htm#20682<->Example-AGDecode :: CodeAlG_AGDecode (Example H159E3)
3<->decode :<->text1855.htm<->decode :: Decoding AG Codes (ALGEBRAIC-GEOMETRIC CODES)
3<->decode :<->text1856.htm<->decode :: Toric Codes (ALGEBRAIC-GEOMETRIC CODES)
5<->ToricCode(P, q) <->text1856.htm#20684<->ToricCode(P, q) : TorPol, RngIntElt -&gt; Code
5<->ToricCode(S, q) <->text1856.htm#20685<->ToricCode(S, q) : SetEnum[TorLatElt], RngIntElt -> Code
5<->ToricCode(S, q) <->text1856.htm#20685<->ToricCode(S, q) : SeqEnum[TorLatElt], RngIntElt -&gt; Code
4<->CodeAlG_ToricCode (Example H159E4)<->text1856.htm#20686<->CodeAlG_ToricCode (Example H159E4)
4<->Example-ToricCode :<->text1856.htm#20686<->Example-ToricCode :: CodeAlG_ToricCode (Example H159E4)
3<->decode :<->text1856.htm<->decode :: Toric Codes (ALGEBRAIC-GEOMETRIC CODES)
3<->error-correcting-linear-code :<->text1850.htm<->error-correcting-linear-code :: ALGEBRAIC-GEOMETRIC CODES
3<->error-correcting-linear-code :<->text1858.htm<->error-correcting-linear-code :: LOW DENSITY PARITY CHECK CODES
3<->introduction :<->text1859.htm<->introduction :: Introduction (LOW DENSITY PARITY CHECK CODES)
3<->ldpc-construct :<->text1859.htm#20690<->ldpc-construct :: Constructing LDPC Codes (LOW DENSITY PARITY CHECK CODES)
5<->LDPCCode(H) <->text1859.htm#20691<->LDPCCode(H) : MtrxSprs -&gt; Code
5<->GallagerCode(n, a, b) <->text1859.htm#20692<->GallagerCode(n, a, b) : RngIntElt, RngIntElt, RngIntElt -&gt; Code
5<->RegularLDPCEnsemble(n, a, b) <->text1859.htm#20693<->RegularLDPCEnsemble(n, a, b) : RngIntElt, RngIntElt, RngIntElt -&gt; Code
5<->IrregularLDPCEnsemble(n, Sc, Sv) <->text1859.htm#20694<->IrregularLDPCEnsemble(n, Sc, Sv) : RngIntElt, SeqEnum, SeqEnum -&gt; Code
5<->MargulisCode(p) <->text1859.htm#20695<->MargulisCode(p) : RngIntElt -&gt; Code
4<->CodeLDPC_IsLDPC (Example H160E1)<->text1859.htm#20696<->CodeLDPC_IsLDPC (Example H160E1)
4<->Example-IsLDPC :<->text1859.htm#20696<->Example-IsLDPC :: CodeLDPC_IsLDPC (Example H160E1)
3<->ldpc-construct :<->text1859.htm#20690<->ldpc-construct :: Constructing LDPC Codes (LOW DENSITY PARITY CHECK CODES)
3<->ldpc-access :<->text1859.htm#20697<->ldpc-access :: Access Functions (LOW DENSITY PARITY CHECK CODES)
5<->IsLDPC(C) <->text1859.htm#20698<->IsLDPC(C) : Code -&gt; BoolElt
5<->AssignLDPCMatrix(~C, H) <->text1859.htm#20699<->AssignLDPCMatrix(~C, H) : Code, MtrxSprs -&gt;
5<->LDPCMatrix(C) <->text1859.htm#20700<->LDPCMatrix(C) : Code -&gt; MtrxSprs
5<->LDPCDensity(C) <->text1859.htm#20701<->LDPCDensity(C) : Code -&gt; FldReElt
5<->IsRegularLDPC(C) <->text1859.htm#20702<->IsRegularLDPC(C) : Code -&gt; BoolElt
5<->TannerGraph(C) <->text1859.htm#20703<->TannerGraph(C) : Code -&gt; Grph
5<->LDPCGirth(C) <->text1859.htm#20704<->LDPCGirth(C) : Code -&gt; RngIntElt
5<->LDPCEnsembleRate(Sv, Sc) <->text1859.htm#20705<->LDPCEnsembleRate(Sv, Sc) : [FldReElt], [FldReElt] -> FldReElt
5<->LDPCEnsembleRate(v, c) <->text1859.htm#20705<->LDPCEnsembleRate(v, c) : RngIntElt, RngIntElt -&gt; FldReElt
4<->CodeLDPC_IsLDPC (Example H160E2)<->text1859.htm#20706<->CodeLDPC_IsLDPC (Example H160E2)
4<->Example-IsLDPC :<->text1859.htm#20706<->Example-IsLDPC :: CodeLDPC_IsLDPC (Example H160E2)
3<->ldpc-access :<->text1859.htm#20697<->ldpc-access :: Access Functions (LOW DENSITY PARITY CHECK CODES)
3<->ldpc-decoding :<->text1859.htm#20707<->ldpc-decoding :: LDPC Decoding and Simulation (LOW DENSITY PARITY CHECK CODES)
5<->LDPCDecode(C, v) <->text1859.htm#20708<->LDPCDecode(C, v) : Code, ModTupRngElt -&gt; ModTupRngElt
4<->CodeLDPC_DecodeLDPC-BSC (Example H160E3)<->text1859.htm#20709<->CodeLDPC_DecodeLDPC-BSC (Example H160E3)
4<->Example-DecodeLDPC-BSC :<->text1859.htm#20709<->Example-DecodeLDPC-BSC :: CodeLDPC_DecodeLDPC-BSC (Example H160E3)
4<->CodeLDPC_DecodeLDPC-BSC (Example H160E4)<->text1859.htm#20710<->CodeLDPC_DecodeLDPC-BSC (Example H160E4)
4<->Example-DecodeLDPC-BSC :<->text1859.htm#20710<->Example-DecodeLDPC-BSC :: CodeLDPC_DecodeLDPC-BSC (Example H160E4)
5<->LDPCSimulate(C, N) <->text1859.htm#20711<->LDPCSimulate(C, N) : Code, RngIntElt -&gt; FldReElt, FldReElt
4<->CodeLDPC_DecodeEnsemble (Example H160E5)<->text1859.htm#20712<->CodeLDPC_DecodeEnsemble (Example H160E5)
4<->Example-DecodeEnsemble :<->text1859.htm#20712<->Example-DecodeEnsemble :: CodeLDPC_DecodeEnsemble (Example H160E5)
3<->ldpc-decoding :<->text1859.htm#20707<->ldpc-decoding :: LDPC Decoding and Simulation (LOW DENSITY PARITY CHECK CODES)
3<->ldpc-density-evolution :<->text1859.htm#20713<->ldpc-density-evolution :: Density Evolution (LOW DENSITY PARITY CHECK CODES)
5<->LDPCBinarySymmetricThreshold(Sv, Sc) <->text1859.htm#20714<->LDPCBinarySymmetricThreshold(Sv, Sc) : [FldReElt], [FldReElt] -> FldReElt
5<->LDPCBinarySymmetricThreshold(v, c) <->text1859.htm#20714<->LDPCBinarySymmetricThreshold(v, c) : RngIntElt, RngIntElt -&gt; FldReElt
5<->DensityEvolutionBinarySymmetric(Sv, Sc, p) <->text1859.htm#20715<->DensityEvolutionBinarySymmetric(Sv, Sc, p) : [FldReElt], [FldReElt], FldReElt -> BoolElt
5<->DensityEvolutionBinarySymmetric(v, c, p) <->text1859.htm#20715<->DensityEvolutionBinarySymmetric(v, c, p) : RngIntElt, RngIntElt, FldReElt -&gt; BoolElt
4<->CodeLDPC_DE-BSC (Example H160E6)<->text1859.htm#20716<->CodeLDPC_DE-BSC (Example H160E6)
4<->Example-DE-BSC :<->text1859.htm#20716<->Example-DE-BSC :: CodeLDPC_DE-BSC (Example H160E6)
5<->LDPCGaussianThreshold(Sv, Sc) <->text1859.htm#20717<->LDPCGaussianThreshold(Sv, Sc) : [FldReElt], [FldReElt] -> FldReElt
5<->LDPCGaussianThreshold(v, c) <->text1859.htm#20717<->LDPCGaussianThreshold(v, c) : RngIntElt, RngIntElt -&gt; FldReElt
5<->DensityEvolutionGaussian(Sv, Sc, $\sigma$) <->text1859.htm#20718<->DensityEvolutionGaussian(Sv, Sc, $\sigma$) : [FldReElt], [FldReElt], FldReElt -> BoolElt
5<->DensityEvolutionGaussian(v, c, &sigma;) <->text1859.htm#20718<->DensityEvolutionGaussian(v, c, &sigma;) : RngIntElt, RngIntElt, FldReElt -&gt; BoolElt
5<->GoodLDPCEnsemble(i) <->text1859.htm#20719<->GoodLDPCEnsemble(i) : RngIntElt -&gt; FldReElt, [FldReElt], [FldReElt]
4<->CodeLDPC_DEGaussian (Example H160E7)<->text1859.htm#20720<->CodeLDPC_DEGaussian (Example H160E7)
4<->Example-DEGaussian :<->text1859.htm#20720<->Example-DEGaussian :: CodeLDPC_DEGaussian (Example H160E7)
3<->ldpc-density-evolution :<->text1859.htm#20713<->ldpc-density-evolution :: Density Evolution (LOW DENSITY PARITY CHECK CODES)
3<->introduction :<->text1859.htm<->introduction :: Introduction (LOW DENSITY PARITY CHECK CODES)
3<->error-correcting-linear-code :<->text1858.htm<->error-correcting-linear-code :: LOW DENSITY PARITY CHECK CODES
3<->error-correcting-linear-code :<->text1862.htm<->error-correcting-linear-code :: LINEAR CODES OVER FINITE RINGS
3<->introduction :<->text1863.htm<->introduction :: Introduction (LINEAR CODES OVER FINITE RINGS)
3<->creation :<->text1864.htm<->creation :: Constructions (LINEAR CODES OVER FINITE RINGS)
3<->general :<->text1864.htm#20726<->general :: General Linear Codes (LINEAR CODES OVER FINITE RINGS)
5<->LinearCode<R, n | L> <->text1864.htm#20727<->LinearCode&lt;R, n | L&gt; : Rng, RngIntElt, List -&gt; Code
5<->LinearCode(U) <->text1864.htm#20728<->LinearCode(U) : ModTupRng -&gt; Code
5<->LinearCode(A) <->text1864.htm#20729<->LinearCode(A) : ModMatRngElt -&gt; Code
5<->PermutationCode(u, G) <->text1864.htm#20730<->PermutationCode(u, G) : ModTupRngElt, GrpPerm -&gt; Code
4<->CodeRng_TernaryGolayCode (Example H161E1)<->text1864.htm#20731<->CodeRng_TernaryGolayCode (Example H161E1)
4<->Example-TernaryGolayCode :<->text1864.htm#20731<->Example-TernaryGolayCode :: CodeRng_TernaryGolayCode (Example H161E1)
4<->CodeRng_CodeFromMatrix (Example H161E2)<->text1864.htm#20732<->CodeRng_CodeFromMatrix (Example H161E2)
4<->Example-CodeFromMatrix :<->text1864.htm#20732<->Example-CodeFromMatrix :: CodeRng_CodeFromMatrix (Example H161E2)
4<->CodeRng_PermutationCode (Example H161E3)<->text1864.htm#20733<->CodeRng_PermutationCode (Example H161E3)
4<->Example-PermutationCode :<->text1864.htm#20733<->Example-PermutationCode :: CodeRng_PermutationCode (Example H161E3)
3<->general :<->text1864.htm#20726<->general :: General Linear Codes (LINEAR CODES OVER FINITE RINGS)
3<->simple :<->text1864.htm#20734<->simple :: Simple Linear Codes (LINEAR CODES OVER FINITE RINGS)
5<->ZeroCode(R, n) <->text1864.htm#20735<->ZeroCode(R, n) : Rng, RngIntElt -&gt; Code
5<->RepetitionCode(R, n) <->text1864.htm#20736<->RepetitionCode(R, n) : Rng, RngIntElt -&gt; Code
5<->ZeroSumCode(R, n) <->text1864.htm#20737<->ZeroSumCode(R, n) : Rng, RngIntElt -&gt; Code
5<->UniverseCode(R, n) <->text1864.htm#20738<->UniverseCode(R, n) : Rng, RngIntElt -&gt; Code
5<->RandomLinearCode(R, n, k) <->text1864.htm#20739<->RandomLinearCode(R, n, k) : Rng, RngIntElt, RngIntElt -&gt; Code
4<->CodeRng_simple-finite-ring (Example H161E4)<->text1864.htm#20740<->CodeRng_simple-finite-ring (Example H161E4)
4<->Example-simple-finite-ring :<->text1864.htm#20740<->Example-simple-finite-ring :: CodeRng_simple-finite-ring (Example H161E4)
3<->simple :<->text1864.htm#20734<->simple :: Simple Linear Codes (LINEAR CODES OVER FINITE RINGS)
3<->cyclic :<->text1864.htm#20741<->cyclic :: General Cyclic Codes (LINEAR CODES OVER FINITE RINGS)
5<->CyclicCode(u) <->text1864.htm#20742<->CyclicCode(u) : ModTupRngElt -&gt; Code
5<->CyclicCode(n, g) <->text1864.htm#20743<->CyclicCode(n, g) : RngIntElt, RngUPolElt -&gt; Code
5<->CyclotomicFactors(R, n) <->text1864.htm#20744<->CyclotomicFactors(R, n) : Rng, RngIntElt -&gt; [RngUPolElt]
4<->CodeRng_CyclicCode (Example H161E5)<->text1864.htm#20745<->CodeRng_CyclicCode (Example H161E5)
4<->Example-CyclicCode :<->text1864.htm#20745<->Example-CyclicCode :: CodeRng_CyclicCode (Example H161E5)
4<->CodeRng_cyclic-galois-ring (Example H161E6)<->text1864.htm#20746<->CodeRng_cyclic-galois-ring (Example H161E6)
4<->Example-cyclic-galois-ring :<->text1864.htm#20746<->Example-cyclic-galois-ring :: CodeRng_cyclic-galois-ring (Example H161E6)
3<->cyclic :<->text1864.htm#20741<->cyclic :: General Cyclic Codes (LINEAR CODES OVER FINITE RINGS)
3<->creation :<->text1864.htm<->creation :: Constructions (LINEAR CODES OVER FINITE RINGS)
3<->access :<->text1865.htm<->access :: Invariants (LINEAR CODES OVER FINITE RINGS)
5<-># C <->text1865.htm#20748<-># C : Code -&gt; RngIntElt
5<->Name :: C . i <->text1865.htm#20749<->Name :: C . i : Code, RngIntElt -&gt; ModTupRngElt
5<->C . i <->text1865.htm#20749<->C . i : Code, RngIntElt -&gt; ModTupRngElt
5<->Alphabet(C) <->text1865.htm#20750<->Alphabet(C) : Code -&gt; Rng
5<->AmbientSpace(C) <->text1865.htm#20751<->AmbientSpace(C) : Code -&gt; ModTupRng
5<->Basis(C) <->text1865.htm#20752<->Basis(C) : Code -&gt; [ ModTupRngElt ]
5<->Generators(C) <->text1865.htm#20753<->Generators(C) : Code -&gt;  { ModTupRngElt }
5<->GeneratorMatrix(C) <->text1865.htm#20754<->GeneratorMatrix(C) : Code -&gt; ModMatRngElt
5<->Generic(C) <->text1865.htm#20755<->Generic(C) : Code -&gt; Code
5<->Length(C) <->text1865.htm#20756<->Length(C) : Code -&gt; RngIntElt
5<->NumberOfGenerators :: PseudoDimension(C) <->text1865.htm#20757<->NumberOfGenerators :: PseudoDimension(C) : Code -&gt; RngIntElt
5<->Ngens :: PseudoDimension(C) <->text1865.htm#20757<->Ngens :: PseudoDimension(C) : Code -&gt; RngIntElt
5<->PseudoDimension(C) <->text1865.htm#20757<->PseudoDimension(C) : Code -&gt; RngIntElt
5<->ParityCheckMatrix(C) <->text1865.htm#20758<->ParityCheckMatrix(C) : Code -&gt; ModMatRngElt
5<->Random(C)<->text1865.htm#20759<->Random(C): Code -&gt; ModTupRngElt
5<->RSpace(C) <->text1865.htm#20760<->RSpace(C) : Code -&gt; ModTupRng
5<->InformationRate(C) <->text1865.htm#20761<->InformationRate(C) : Code -&gt; RngPrElt
3<->access :<->text1865.htm<->access :: Invariants (LINEAR CODES OVER FINITE RINGS)
3<->subcode :<->text1866.htm<->subcode :: Subcodes (LINEAR CODES OVER FINITE RINGS)
3<->creation :<->text1866.htm#20763<->creation :: The Subcode Constructor (LINEAR CODES OVER FINITE RINGS)
5<->sub<C | L> <->text1866.htm#20764<->sub&lt;C | L&gt; : Code, List -&gt; Code
5<->Subcode(C, t) <->text1866.htm#20765<->Subcode(C, t) : Code,RngIntElt -&gt; Code
5<->Subcode(C, S) <->text1866.htm#20766<->Subcode(C, S) : Code, RngIntElt -&gt; Code
4<->CodeRng_subcode-galois-rings (Example H161E7)<->text1866.htm#20767<->CodeRng_subcode-galois-rings (Example H161E7)
4<->Example-subcode-galois-rings :<->text1866.htm#20767<->Example-subcode-galois-rings :: CodeRng_subcode-galois-rings (Example H161E7)
3<->creation :<->text1866.htm#20763<->creation :: The Subcode Constructor (LINEAR CODES OVER FINITE RINGS)
3<->subcode :<->text1866.htm<->subcode :: Subcodes (LINEAR CODES OVER FINITE RINGS)
3<->Boolean Predicates (LINEAR CODES OVER FINITE RINGS)<->text1867.htm<->Boolean Predicates (LINEAR CODES OVER FINITE RINGS)
5<->u in C <->text1867.htm#20769<->u in C : ModTupRngElt, Code -&gt; BoolElt
5<->u notin C <->text1867.htm#20770<->u notin C : ModTupRngElt, Code -&gt; BoolElt
5<->C subset D <->text1867.htm#20771<->C subset D : Code, Code -&gt; BoolElt
5<->C notsubset D <->text1867.htm#20772<->C notsubset D : Code, Code -&gt; BoolElt
5<->C eq D <->text1867.htm#20773<->C eq D : Code, Code -&gt; BoolElt
5<->C ne D <->text1867.htm#20774<->C ne D : Code, Code -&gt; BoolElt
5<->IsCyclic(C) <->text1867.htm#20775<->IsCyclic(C) : Code -&gt; BoolElt
5<->IsSelfDual(C) <->text1867.htm#20776<->IsSelfDual(C) : Code -&gt; BoolElt
5<->IsSelfOrthogonal(C) <->text1867.htm#20777<->IsSelfOrthogonal(C) : Code -&gt; BoolElt
5<->IsProjective(C) <->text1867.htm#20778<->IsProjective(C) : Code -&gt; BoolElt
5<->IsZero(u) <->text1867.htm#20779<->IsZero(u) : ModTupRngElt -&gt; BoolElt
4<->CodeRng_SelfDualZ4 (Example H161E8)<->text1867.htm#20780<->CodeRng_SelfDualZ4 (Example H161E8)
4<->Example-SelfDualZ4 :<->text1867.htm#20780<->Example-SelfDualZ4 :: CodeRng_SelfDualZ4 (Example H161E8)
3<->Boolean Predicates (LINEAR CODES OVER FINITE RINGS)<->text1867.htm<->Boolean Predicates (LINEAR CODES OVER FINITE RINGS)
3<->operation :<->text1868.htm<->operation :: New Codes from Old (LINEAR CODES OVER FINITE RINGS)
3<->sum-intersection-dual :<->text1868.htm#20782<->sum-intersection-dual :: Sum, Intersection and Dual (LINEAR CODES OVER FINITE RINGS)
5<->C + D <->text1868.htm#20783<->C + D : Code, Code -&gt; Code
5<->C meet D <->text1868.htm#20784<->C meet D : Code, Code -&gt; Code
5<->Dual(C) <->text1868.htm#20785<->Dual(C) : Code -&gt; Code
4<->CodeRng_SumIntersection (Example H161E9)<->text1868.htm#20786<->CodeRng_SumIntersection (Example H161E9)
4<->Example-SumIntersection :<->text1868.htm#20786<->Example-SumIntersection :: CodeRng_SumIntersection (Example H161E9)
3<->sum-intersection-dual :<->text1868.htm#20782<->sum-intersection-dual :: Sum, Intersection and Dual (LINEAR CODES OVER FINITE RINGS)
3<->standard :<->text1868.htm#20787<->standard :: Standard Constructions (LINEAR CODES OVER FINITE RINGS)
5<->DirectSum(C, D) <->text1868.htm#20788<->DirectSum(C, D) : Code, Code -&gt; Code
5<->DirectProduct(C, D) <->text1868.htm#20789<->DirectProduct(C, D) : Code, Code -&gt; Code
5<->C1 cat C2 <->text1868.htm#20790<->C1 cat C2 : Code,Code -&gt; Code
5<->ExtendCode(C) <->text1868.htm#20791<->ExtendCode(C) : Code -&gt; Code
5<->ExtendCode(C, n) <->text1868.htm#20792<->ExtendCode(C, n) : Code, RngIntElt -&gt; Code
5<->PadCode(C, n) <->text1868.htm#20793<->PadCode(C, n) : Code, RngIntElt -&gt; Code
5<->PlotkinSum(C, D) <->text1868.htm#20794<->PlotkinSum(C, D) : Code, Code -&gt; Code
5<->PunctureCode(C, i) <->text1868.htm#20795<->PunctureCode(C, i) : Code, RngIntElt -&gt; Code
5<->PunctureCode(C, S) <->text1868.htm#20796<->PunctureCode(C, S) : Code, { RngIntElt } -&gt; Code
5<->ShortenCode(C, i) <->text1868.htm#20797<->ShortenCode(C, i) : Code, RngIntElt -&gt; Code
5<->ShortenCode(C, S) <->text1868.htm#20798<->ShortenCode(C, S) : Code, { RngIntElt } -&gt; Code
4<->CodeRng_lengths (Example H161E10)<->text1868.htm#20799<->CodeRng_lengths (Example H161E10)
4<->Example-lengths :<->text1868.htm#20799<->Example-lengths :: CodeRng_lengths (Example H161E10)
4<->CodeRng_punct-z4 (Example H161E11)<->text1868.htm#20800<->CodeRng_punct-z4 (Example H161E11)
4<->Example-punct-z4 :<->text1868.htm#20800<->Example-punct-z4 :: CodeRng_punct-z4 (Example H161E11)
3<->standard :<->text1868.htm#20787<->standard :: Standard Constructions (LINEAR CODES OVER FINITE RINGS)
3<->operation :<->text1868.htm<->operation :: New Codes from Old (LINEAR CODES OVER FINITE RINGS)
3<->element :<->text1869.htm<->element :: Codeword Operations (LINEAR CODES OVER FINITE RINGS)
3<->creation :<->text1869.htm#20802<->creation :: Construction (LINEAR CODES OVER FINITE RINGS)
5<->elt :: C ! [a1, ..., an] <->text1869.htm#20803<->elt :: C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! [a1, ..., an] <->text1869.htm#20803<->C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! u <->text1869.htm#20804<->C ! u : Code, ModTupRngElt -&gt; ModTupRngElt
5<->C ! 0 <->text1869.htm#20805<->C ! 0 : Code, RngIntElt -&gt; ModTupRngElt
4<->CodeRng_code-elts (Example H161E12)<->text1869.htm#20806<->CodeRng_code-elts (Example H161E12)
4<->Example-code-elts :<->text1869.htm#20806<->Example-code-elts :: CodeRng_code-elts (Example H161E12)
3<->creation :<->text1869.htm#20802<->creation :: Construction (LINEAR CODES OVER FINITE RINGS)
3<->operation :<->text1869.htm#20807<->operation :: Operations (LINEAR CODES OVER FINITE RINGS)
5<->u + v <->text1869.htm#20808<->u + v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->- u <->text1869.htm#20809<->- u : ModTupRngElt -&gt; ModTupRngElt
5<->u - v <->text1869.htm#20810<->u - v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->a * u <->text1869.htm#20811<->a * u : RngElt, ModTupRngElt -&gt; ModTupRngElt
5<->Weight(v) <->text1869.htm#20812<->Weight(v) : ModTupRngElt -&gt; RngIntElt
5<->Distance(u, v) <->text1869.htm#20813<->Distance(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngIntElt
5<->Support(w) <->text1869.htm#20814<->Support(w) : ModTupRngElt -&gt; { RngIntElt }
5<->InnerProduct :: (u, v) <->text1869.htm#20815<->InnerProduct :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->(,) :: (u, v) <->text1869.htm#20815<->(,) :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->Coordinates(C, u) <->text1869.htm#20816<->Coordinates(C, u) : Code, ModTupRngElt -&gt; [ RngFinElt ]
5<->Normalize(u) <->text1869.htm#20817<->Normalize(u) : ModTupRngElt -&gt; ModTupRngElt
5<->Rotate(u, k) <->text1869.htm#20818<->Rotate(u, k) : ModTupRngElt, RngIntElt -&gt; ModTupRngElt
5<->Rotate(~u, k) <->text1869.htm#20819<->Rotate(~u, k) : ModTupRngElt, RngIntElt -&gt;
5<->Parent(w)<->text1869.htm#20820<->Parent(w): ModTupRngElt -&gt; ModTupRng
4<->CodeRng_codeword-ops (Example H161E13)<->text1869.htm#20821<->CodeRng_codeword-ops (Example H161E13)
4<->Example-codeword-ops :<->text1869.htm#20821<->Example-codeword-ops :: CodeRng_codeword-ops (Example H161E13)
3<->operation :<->text1869.htm#20807<->operation :: Operations (LINEAR CODES OVER FINITE RINGS)
3<->access :<->text1869.htm#20822<->access :: Accessing Components of a Codeword (LINEAR CODES OVER FINITE RINGS)
5<->u[i] <->text1869.htm#20823<->u[i] : ModTupRngElt, RngIntElt -&gt; RngElt
5<->[] :: u[i] <->text1869.htm#20824<->[] :: u[i] := x;
3<->access :<->text1869.htm#20822<->access :: Accessing Components of a Codeword (LINEAR CODES OVER FINITE RINGS)
3<->element :<->text1869.htm<->element :: Codeword Operations (LINEAR CODES OVER FINITE RINGS)
3<->weight-distribution :<->text1870.htm<->weight-distribution :: Weight Distributions (LINEAR CODES OVER FINITE RINGS)
3<->hamming-weight-distribution :<->text1870.htm#20826<->hamming-weight-distribution :: Hamming Weight (LINEAR CODES OVER FINITE RINGS)
5<->MinimumDistance :: MinimumWeight(C) <->text1870.htm#20827<->MinimumDistance :: MinimumWeight(C) : Code -&gt; RngIntElt
5<->MinimumWeight(C) <->text1870.htm#20827<->MinimumWeight(C) : Code -&gt; RngIntElt
5<->WeightDistribution(C) <->text1870.htm#20828<->WeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->DualWeightDistribution(C) <->text1870.htm#20829<->DualWeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
4<->CodeRng_weight-dist-cyc (Example H161E14)<->text1870.htm#20830<->CodeRng_weight-dist-cyc (Example H161E14)
4<->Example-weight-dist-cyc :<->text1870.htm#20830<->Example-weight-dist-cyc :: CodeRng_weight-dist-cyc (Example H161E14)
3<->hamming-weight-distribution :<->text1870.htm#20826<->hamming-weight-distribution :: Hamming Weight (LINEAR CODES OVER FINITE RINGS)
3<->weight-distribution :<->text1870.htm<->weight-distribution :: Weight Distributions (LINEAR CODES OVER FINITE RINGS)
3<->weight-enumerator :<->text1871.htm<->weight-enumerator :: Weight Enumerators (LINEAR CODES OVER FINITE RINGS)
5<->CompleteWeightEnumerator(C)<->text1871.htm#20832<->CompleteWeightEnumerator(C): Code -&gt; RngMPolElt
5<->HammingWeightEnumerator :: WeightEnumerator(C)<->text1871.htm#20833<->HammingWeightEnumerator :: WeightEnumerator(C): Code -&gt; RngMPolElt
5<->WeightEnumerator(C)<->text1871.htm#20833<->WeightEnumerator(C): Code -&gt; RngMPolElt
4<->CodeRng_weightEnum-galois-rings (Example H161E15)<->text1871.htm#20834<->CodeRng_weightEnum-galois-rings (Example H161E15)
4<->Example-weightEnum-galois-rings :<->text1871.htm#20834<->Example-weightEnum-galois-rings :: CodeRng_weightEnum-galois-rings (Example H161E15)
3<->weight-enumerator :<->text1871.htm<->weight-enumerator :: Weight Enumerators (LINEAR CODES OVER FINITE RINGS)
3<->error-correcting-linear-code :<->text1862.htm<->error-correcting-linear-code :: LINEAR CODES OVER FINITE RINGS
3<->error-correcting-linear-code :<->text1874.htm<->error-correcting-linear-code :: LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>
3<->introduction :<->text1875.htm<->introduction :: Introduction (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->constructions :<->text1876.htm<->constructions :: Constructions for Z<sub>4</sub> Codes (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->gray-map :<->text1876.htm#20840<->gray-map :: The Gray Map (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->GrayMap(C) <->text1876.htm#20841<->GrayMap(C) : Code -&gt; Map
5<->GrayMapImage(C) <->text1876.htm#20842<->GrayMapImage(C) : Code -&gt; [ ModTupRngElt ]
5<->HasLinearGrayMapImage(C) <->text1876.htm#20843<->HasLinearGrayMapImage(C) : Code -&gt; BoolElt, Code
4<->CodeZ4_GrayMap (Example H162E1)<->text1876.htm#20844<->CodeZ4_GrayMap (Example H162E1)
4<->Example-GrayMap :<->text1876.htm#20844<->Example-GrayMap :: CodeZ4_GrayMap (Example H162E1)
3<->gray-map :<->text1876.htm#20840<->gray-map :: The Gray Map (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->families :<->text1876.htm#20845<->families :: Families of Codes over Z<sub>4</sub> (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->KerdockCode(m)<->text1876.htm#20846<->KerdockCode(m): RngIntElt -&gt; Code
5<->PreparataCode(m)<->text1876.htm#20847<->PreparataCode(m): RngIntElt -&gt; Code
5<->ReedMullerCodeZ4(r, m) <->text1876.htm#20848<->ReedMullerCodeZ4(r, m) : RngIntElt, RngIntElt -&gt; Code
5<->GoethalsCode(m) <->text1876.htm#20849<->GoethalsCode(m) : RngIntElt -&gt; Code
5<->DelsarteGoethalsCode(m, delta) <->text1876.htm#20850<->DelsarteGoethalsCode(m, delta) : RngIntElt, RngIntElt -&gt; Code
5<->GoethalsDelsarteCode(m, delta) <->text1876.htm#20851<->GoethalsDelsarteCode(m, delta) : RngIntElt, RngIntElt -&gt; Code
5<->QRCodeZ4(p) <->text1876.htm#20852<->QRCodeZ4(p) : RngIntElt -&gt; Code
5<->GolayCodeZ4(e) <->text1876.htm#20853<->GolayCodeZ4(e) : BoolElt -&gt; Code
5<->SimplexAlphaCodeZ4(k) <->text1876.htm#20854<->SimplexAlphaCodeZ4(k) : RngIntElt -&gt; Code
5<->SimplexBetaCodeZ4(k) <->text1876.htm#20855<->SimplexBetaCodeZ4(k) : RngIntElt -&gt; Code
4<->CodeZ4_Kerdock (Example H162E2)<->text1876.htm#20856<->CodeZ4_Kerdock (Example H162E2)
4<->Example-Kerdock :<->text1876.htm#20856<->Example-Kerdock :: CodeZ4_Kerdock (Example H162E2)
5<->HadamardCodeZ4(&delta;, m) <->text1876.htm#20857<->HadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; CodeLinRng, Mtrx
5<->ExtendedPerfectCodeZ4(&delta;, m) <->text1876.htm#20858<->ExtendedPerfectCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; CodeLinRng, Mtrx
4<->CodeZ4_spain-Z4-1 (Example H162E3)<->text1876.htm#20859<->CodeZ4_spain-Z4-1 (Example H162E3)
4<->Example-spain-Z4-1 :<->text1876.htm#20859<->Example-spain-Z4-1 :: CodeZ4_spain-Z4-1 (Example H162E3)
5<->ReedMullerCodeQRMZ4 :: ReedMullerCodeZ4(r, m) <->text1876.htm#20860<->ReedMullerCodeQRMZ4 :: ReedMullerCodeZ4(r, m) : RngIntElt, RngIntElt -&gt; CodeLinRng
5<->ReedMullerCodeZ4(r, m) <->text1876.htm#20860<->ReedMullerCodeZ4(r, m) : RngIntElt, RngIntElt -&gt; CodeLinRng
5<->ReedMullerCodesLRMZ4(r, m) <->text1876.htm#20861<->ReedMullerCodesLRMZ4(r, m) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->ReedMullerCodeRMZ4(s, r, m) <->text1876.htm#20862<->ReedMullerCodeRMZ4(s, r, m) : RngIntElt, RngIntElt, RngIntElt -&gt; CodeLinRng, Mtrx
4<->CodeZ4_spain-Z4-2 (Example H162E4)<->text1876.htm#20863<->CodeZ4_spain-Z4-2 (Example H162E4)
4<->Example-spain-Z4-2 :<->text1876.htm#20863<->Example-spain-Z4-2 :: CodeZ4_spain-Z4-2 (Example H162E4)
5<->ReedMullerCodesRMZ4(s, m) <->text1876.htm#20864<->ReedMullerCodesRMZ4(s, m) : RngIntElt, RngIntElt -&gt; Tup
4<->CodeZ4_spain-Z4-3 (Example H162E5)<->text1876.htm#20865<->CodeZ4_spain-Z4-3 (Example H162E5)
4<->Example-spain-Z4-3 :<->text1876.htm#20865<->Example-spain-Z4-3 :: CodeZ4_spain-Z4-3 (Example H162E5)
3<->families :<->text1876.htm#20845<->families :: Families of Codes over Z<sub>4</sub> (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->Z4-derived-codes :<->text1876.htm#20866<->Z4-derived-codes :: Derived Binary Codes (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->BinaryResidueCode(C) <->text1876.htm#20867<->BinaryResidueCode(C) : Code -&gt; Code
5<->BinaryTorsionCode(C) <->text1876.htm#20868<->BinaryTorsionCode(C) : Code -&gt; Code
5<->Z4CodeFromBinaryChain(C1, C2) <->text1876.htm#20869<->Z4CodeFromBinaryChain(C1, C2) : Code, Code -&gt; Code
4<->CodeZ4_derived-binary (Example H162E6)<->text1876.htm#20870<->CodeZ4_derived-binary (Example H162E6)
4<->Example-derived-binary :<->text1876.htm#20870<->Example-derived-binary :: CodeZ4_derived-binary (Example H162E6)
3<->Z4-derived-codes :<->text1876.htm#20866<->Z4-derived-codes :: Derived Binary Codes (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->z4-new-from-old :<->text1876.htm#20871<->z4-new-from-old :: New Codes from Old (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->PlotkinSum(A, B) <->text1876.htm#20872<->PlotkinSum(A, B) : Mtrx, Mtrx -&gt; Mtrx
5<->PlotkinSum(C, D) <->text1876.htm#20873<->PlotkinSum(C, D) : Code, Code -&gt; Code
5<->QuaternaryPlotkinSum(A, B) <->text1876.htm#20874<->QuaternaryPlotkinSum(A, B) : Mtrx, Mtrx -&gt; Mtrx
5<->QuaternaryPlotkinSum(C, D) <->text1876.htm#20875<->QuaternaryPlotkinSum(C, D) : Code, Code -&gt; Code
5<->BQPlotkinSum(A, B, C) <->text1876.htm#20876<->BQPlotkinSum(A, B, C) : Mtrx, Mtrx, Mtrx -&gt; Mtrx
5<->BQPlotkinSum(D, E, F) <->text1876.htm#20877<->BQPlotkinSum(D, E, F) : Code, Code, Code -&gt; Code
5<->DoublePlotkinSum(A, B, C, D) <->text1876.htm#20878<->DoublePlotkinSum(A, B, C, D) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx
5<->DoublePlotkinSum(E, F, G, H) <->text1876.htm#20879<->DoublePlotkinSum(E, F, G, H) : Code, Code, Code, Code -&gt; Code
5<->DualKroneckerZ4(C) <->text1876.htm#20880<->DualKroneckerZ4(C) : CodeLinRng -&gt; CodeLinRng
4<->CodeZ4_spain-Z4-4 (Example H162E7)<->text1876.htm#20881<->CodeZ4_spain-Z4-4 (Example H162E7)
4<->Example-spain-Z4-4 :<->text1876.htm#20881<->Example-spain-Z4-4 :: CodeZ4_spain-Z4-4 (Example H162E7)
4<->CodeZ4_spain-Z4-4a (Example H162E8)<->text1876.htm#20882<->CodeZ4_spain-Z4-4a (Example H162E8)
4<->Example-spain-Z4-4a :<->text1876.htm#20882<->Example-spain-Z4-4a :: CodeZ4_spain-Z4-4a (Example H162E8)
3<->z4-new-from-old :<->text1876.htm#20871<->z4-new-from-old :: New Codes from Old (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->constructions :<->text1876.htm<->constructions :: Constructions for Z<sub>4</sub> Codes (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->z4-invar :<->text1877.htm<->z4-invar :: Invariants (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->Z4-standard-Form :<->text1877.htm#20884<->Z4-standard-Form :: The Standard Form (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->StandardForm(C) <->text1877.htm#20885<->StandardForm(C) : Code -&gt; Code, Map
4<->CodeZ4_StandardForm (Example H162E9)<->text1877.htm#20886<->CodeZ4_StandardForm (Example H162E9)
4<->Example-StandardForm :<->text1877.htm#20886<->Example-StandardForm :: CodeZ4_StandardForm (Example H162E9)
3<->Z4-standard-Form :<->text1877.htm#20884<->Z4-standard-Form :: The Standard Form (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->Z4-standard-Form :<->text1877.htm#20887<->Z4-standard-Form :: Structures Associated with the  Gray Map (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->MinRowsGeneratorMatrix(C) <->text1877.htm#20888<->MinRowsGeneratorMatrix(C) : CodeLinRng -&gt; ModMatRngElt
5<->SpanZ2CodeZ4(C) <->text1877.htm#20889<->SpanZ2CodeZ4(C) : CodeLinRng -&gt; CodeLinFld
5<->KernelZ2CodeZ4(C) <->text1877.htm#20890<->KernelZ2CodeZ4(C) : CodeLinRng -&gt; CodeLinRng
5<->KernelCosetRepresentatives(C) <->text1877.htm#20891<->KernelCosetRepresentatives(C) : CodeLinRng -&gt; SeqEnum, SeqEnum
5<->RankZ2 :: DimensionOfSpanZ2(C) <->text1877.htm#20892<->RankZ2 :: DimensionOfSpanZ2(C) : CodeLinRng -&gt; RngIntElt
5<->DimensionOfSpanZ2(C) <->text1877.htm#20892<->DimensionOfSpanZ2(C) : CodeLinRng -&gt; RngIntElt
5<->DimensionOfKernelZ2(C) <->text1877.htm#20893<->DimensionOfKernelZ2(C) : CodeLinRng -&gt; RngIntElt
4<->CodeZ4_spain-Z4-5 (Example H162E10)<->text1877.htm#20894<->CodeZ4_spain-Z4-5 (Example H162E10)
4<->Example-spain-Z4-5 :<->text1877.htm#20894<->Example-spain-Z4-5 :: CodeZ4_spain-Z4-5 (Example H162E10)
3<->Z4-standard-Form :<->text1877.htm#20887<->Z4-standard-Form :: Structures Associated with the  Gray Map (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->coset_reps :<->text1877.htm#20895<->coset_reps :: Coset Representatives (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->CosetRepresentatives(C) <->text1877.htm#20896<->CosetRepresentatives(C) : CodeLinRng -&gt; SeqEnum
5<->CosetRepresentatives(C, S) <->text1877.htm#20897<->CosetRepresentatives(C, S) : CodeLinRng, CodeLinRng -&gt; SeqEnum, SeqEnum
4<->CodeZ4_spain-Z4-7 (Example H162E11)<->text1877.htm#20898<->CodeZ4_spain-Z4-7 (Example H162E11)
4<->Example-spain-Z4-7 :<->text1877.htm#20898<->Example-spain-Z4-7 :: CodeZ4_spain-Z4-7 (Example H162E11)
3<->coset_reps :<->text1877.htm#20895<->coset_reps :: Coset Representatives (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->info_space_and_sets :<->text1877.htm#20899<->info_space_and_sets :: Information Space and Information Sets (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->InformationSpace(C) <->text1877.htm#20900<->InformationSpace(C) : CodeLinRng -&gt; ModTupRng, ModTupFld, Map, Map
4<->CodeZ4_spain-Z4-9 (Example H162E12)<->text1877.htm#20901<->CodeZ4_spain-Z4-9 (Example H162E12)
4<->Example-spain-Z4-9 :<->text1877.htm#20901<->Example-spain-Z4-9 :: CodeZ4_spain-Z4-9 (Example H162E12)
5<->InformationSet(C) <->text1877.htm#20902<->InformationSet(C) : CodeLinRng -&gt; ModTupRng, ModTupFld, Map, Map
5<->IsInformationSet(C, I) <->text1877.htm#20903<->IsInformationSet(C, I) : CodeLinRng, [RngIntElt] -&gt; BoolElt, BoolElt
4<->CodeZ4_spain-Z4-10 (Example H162E13)<->text1877.htm#20904<->CodeZ4_spain-Z4-10 (Example H162E13)
4<->Example-spain-Z4-10 :<->text1877.htm#20904<->Example-spain-Z4-10 :: CodeZ4_spain-Z4-10 (Example H162E13)
3<->info_space_and_sets :<->text1877.htm#20899<->info_space_and_sets :: Information Space and Information Sets (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->syndrome_space_coset_leaders :<->text1877.htm#20905<->syndrome_space_coset_leaders :: Syndrome Space and Coset Leaders (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->SyndromeSpace(C) <->text1877.htm#20906<->SyndromeSpace(C) : CodeLinRng -&gt; ModTupRng, ModTupFld
5<->Syndrome(u, C) <->text1877.htm#20907<->Syndrome(u, C) : ModTupRngElt, CodeLinRng -> ModTupRngElt
5<->Syndrome(u, C) <->text1877.htm#20907<->Syndrome(u, C) : ModTupFldElt, CodeLinRng -&gt; ModTupRngElt
5<->CosetLeaders(C) <->text1877.htm#20908<->CosetLeaders(C) : CodeLinRng -&gt; SetIndx, Map
4<->CodeZ4_spain-Z4-11 (Example H162E14)<->text1877.htm#20909<->CodeZ4_spain-Z4-11 (Example H162E14)
4<->Example-spain-Z4-11 :<->text1877.htm#20909<->Example-spain-Z4-11 :: CodeZ4_spain-Z4-11 (Example H162E14)
3<->syndrome_space_coset_leaders :<->text1877.htm#20905<->syndrome_space_coset_leaders :: Syndrome Space and Coset Leaders (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->Z4-misc :<->text1877.htm#20910<->Z4-misc :: Miscellaneous Functions (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->Correlation(v) <->text1877.htm#20911<->Correlation(v) : ModTupRngElt -&gt; RngQuadElt
3<->Z4-misc :<->text1877.htm#20910<->Z4-misc :: Miscellaneous Functions (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->z4-invar :<->text1877.htm<->z4-invar :: Invariants (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->weight-distribution :<->text1878.htm<->weight-distribution :: Weight Distributions (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->hamming-weight-distribution :<->text1878.htm#20913<->hamming-weight-distribution :: Hamming Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->MinimumDistance :: MinimumWeight(C) <->text1878.htm#20914<->MinimumDistance :: MinimumWeight(C) : Code -&gt; RngIntElt
5<->MinimumWeight(C) <->text1878.htm#20914<->MinimumWeight(C) : Code -&gt; RngIntElt
5<->WeightDistribution(C) <->text1878.htm#20915<->WeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->DualWeightDistribution(C) <->text1878.htm#20916<->DualWeightDistribution(C) : Code -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
4<->CodeZ4_weight-dist-k8 (Example H162E15)<->text1878.htm#20917<->CodeZ4_weight-dist-k8 (Example H162E15)
4<->Example-weight-dist-k8 :<->text1878.htm#20917<->Example-weight-dist-k8 :: CodeZ4_weight-dist-k8 (Example H162E15)
3<->hamming-weight-distribution :<->text1878.htm#20913<->hamming-weight-distribution :: Hamming Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->lee :<->text1878.htm#20918<->lee :: Lee Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->LeeWeight(a) <->text1878.htm#20919<->LeeWeight(a) : RngIntRes -&gt; RngIntElt
5<->LeeWeight(v) <->text1878.htm#20920<->LeeWeight(v) : ModTupRngElt -&gt; RngIntElt
5<->LeeDistance(u, v) <->text1878.htm#20921<->LeeDistance(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngIntElt
5<->MinimumLeeDistance :: MinimumLeeWeight(C) <->text1878.htm#20922<->MinimumLeeDistance :: MinimumLeeWeight(C) : Code -&gt; RngIntElt
5<->MinimumLeeWeight(C) <->text1878.htm#20922<->MinimumLeeWeight(C) : Code -&gt; RngIntElt
5<->LeeWeightDistribution(C) <->text1878.htm#20923<->LeeWeightDistribution(C) : Code -&gt; SeqEnum
5<->DualLeeWeightDistribution(C) <->text1878.htm#20924<->DualLeeWeightDistribution(C) : Code -&gt; SeqEnum
5<->WordsOfLeeWeight(C, w) <->text1878.htm#20925<->WordsOfLeeWeight(C, w) : Code, RngIntElt -&gt; SetEnum
5<->WordsOfBoundedLeeWeight(C, l, u) <->text1878.htm#20926<->WordsOfBoundedLeeWeight(C, l, u) : Code, RngIntElt, RngIntElt -&gt; SetEnum
4<->CodeZ4_lee-dist (Example H162E16)<->text1878.htm#20927<->CodeZ4_lee-dist (Example H162E16)
4<->Example-lee-dist :<->text1878.htm#20927<->Example-lee-dist :: CodeZ4_lee-dist (Example H162E16)
3<->lee :<->text1878.htm#20918<->lee :: Lee Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->euclidean :<->text1878.htm#20928<->euclidean :: Euclidean Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->EuclideanWeight(a) <->text1878.htm#20929<->EuclideanWeight(a) : RngIntRes -&gt; RngIntElt
5<->EuclideanWeight(v) <->text1878.htm#20930<->EuclideanWeight(v) : ModTupRngElt -&gt; RngIntElt
5<->EuclideanDistance(u, v) <->text1878.htm#20931<->EuclideanDistance(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngIntElt
5<->MinimumEuclideanDistance :: MinimumEuclideanWeight(C) <->text1878.htm#20932<->MinimumEuclideanDistance :: MinimumEuclideanWeight(C) : Code -&gt; RngIntElt
5<->MinimumEuclideanWeight(C) <->text1878.htm#20932<->MinimumEuclideanWeight(C) : Code -&gt; RngIntElt
5<->EuclideanWeightDistribution(C) <->text1878.htm#20933<->EuclideanWeightDistribution(C) : Code -&gt; SeqEnum
5<->DualEuclideanWeightDistribution(C) <->text1878.htm#20934<->DualEuclideanWeightDistribution(C) : Code -&gt; SeqEnum
4<->CodeZ4_euclidean-dist (Example H162E17)<->text1878.htm#20935<->CodeZ4_euclidean-dist (Example H162E17)
4<->Example-euclidean-dist :<->text1878.htm#20935<->Example-euclidean-dist :: CodeZ4_euclidean-dist (Example H162E17)
3<->euclidean :<->text1878.htm#20928<->euclidean :: Euclidean Weight (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->weight-distribution :<->text1878.htm<->weight-distribution :: Weight Distributions (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->weight-enumerator :<->text1879.htm<->weight-enumerator :: Weight Enumerators (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->CompleteWeightEnumerator(C)<->text1879.htm#20937<->CompleteWeightEnumerator(C): Code -&gt; RngMPolElt
5<->SymmetricWeightEnumerator(C)<->text1879.htm#20938<->SymmetricWeightEnumerator(C): Code -&gt; RngMPolElt
5<->HammingWeightEnumerator :: WeightEnumerator(C)<->text1879.htm#20939<->HammingWeightEnumerator :: WeightEnumerator(C): Code -&gt; RngMPolElt
5<->WeightEnumerator(C)<->text1879.htm#20939<->WeightEnumerator(C): Code -&gt; RngMPolElt
5<->LeeWeightEnumerator(C)<->text1879.htm#20940<->LeeWeightEnumerator(C): Code -&gt; RngMPolElt
5<->EuclideanWeightEnumerator(C)<->text1879.htm#20941<->EuclideanWeightEnumerator(C): Code -&gt; RngMPolElt
4<->CodeZ4_WeightEnumerator (Example H162E18)<->text1879.htm#20942<->CodeZ4_WeightEnumerator (Example H162E18)
4<->Example-WeightEnumerator :<->text1879.htm#20942<->Example-WeightEnumerator :: CodeZ4_WeightEnumerator (Example H162E18)
3<->weight-enumerator :<->text1879.htm<->weight-enumerator :: Weight Enumerators (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->decoding :<->text1880.htm<->decoding :: Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->coset_decoding :<->text1880.htm#20944<->coset_decoding :: Coset Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->CosetDecode(C, u : \parameters) <->text1880.htm#20945<->CosetDecode(C, u : \parameters) : CodeLinRng, ModTupRngElt -> BoolElt, ModTupRngElt, ModTupFldElt
5<->CosetDecode(C, u : parameters) <->text1880.htm#20945<->CosetDecode(C, u : parameters) : CodeLinRng, ModTupFldElt -&gt; BoolElt, ModTupRngElt, ModTupFldElt
5<->CosetDecode(C, Q : \parameters) <->text1880.htm#20946<->CosetDecode(C, Q : \parameters) : CodeLinRng, [ModTupRngElt] -> SeqEnum, SeqEnum, SeqEnum
5<->CosetDecode(C, Q : parameters) <->text1880.htm#20946<->CosetDecode(C, Q : parameters) : CodeLinRng, [ModTupFldElt] -&gt; SeqEnum, SeqEnum, SeqEnum
4<->CodeZ4_spain-Z4-12 (Example H162E19)<->text1880.htm#20947<->CodeZ4_spain-Z4-12 (Example H162E19)
4<->Example-spain-Z4-12 :<->text1880.htm#20947<->Example-spain-Z4-12 :: CodeZ4_spain-Z4-12 (Example H162E19)
3<->coset_decoding :<->text1880.htm#20944<->coset_decoding :: Coset Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->syndrome_decoding :<->text1880.htm#20948<->syndrome_decoding :: Syndrome Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->SyndromeDecode(C, u) <->text1880.htm#20949<->SyndromeDecode(C, u) : CodeLinRng, ModTupRngElt -> BoolElt, ModTupRngElt, ModTupFldElt
5<->SyndromeDecode(C, u) <->text1880.htm#20949<->SyndromeDecode(C, u) : CodeLinRng, ModTupFldElt -&gt; BoolElt, ModTupRngElt, ModTupFldElt
5<->SyndromeDecode(C, Q) <->text1880.htm#20950<->SyndromeDecode(C, Q) : CodeLinRng, [ModTupRngElt] -> SeqEnum, SeqEnum, SeqEnum
5<->SyndromeDecode(C, Q) <->text1880.htm#20950<->SyndromeDecode(C, Q) : CodeLinRng, [ModTupFldElt] -&gt; SeqEnum, SeqEnum, SeqEnum
4<->CodeZ4_spain-Z4-13 (Example H162E20)<->text1880.htm#20951<->CodeZ4_spain-Z4-13 (Example H162E20)
4<->Example-spain-Z4-13 :<->text1880.htm#20951<->Example-spain-Z4-13 :: CodeZ4_spain-Z4-13 (Example H162E20)
3<->syndrome_decoding :<->text1880.htm#20948<->syndrome_decoding :: Syndrome Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->lifted_decoding :<->text1880.htm#20952<->lifted_decoding :: Lifted Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->LiftedDecode(C, u : \parameters) <->text1880.htm#20953<->LiftedDecode(C, u : \parameters) : CodeLinRng, ModTupRngElt -> BoolElt, ModTupRngElt, ModTupFldElt
5<->LiftedDecode(C, u : parameters) <->text1880.htm#20953<->LiftedDecode(C, u : parameters) : CodeLinRng, ModTupFldElt -&gt; BoolElt, ModTupRngElt, ModTupFldElt
5<->LiftedDecode(C, Q : \parameters) <->text1880.htm#20954<->LiftedDecode(C, Q : \parameters) : CodeLinRng, [ModTupRngElt] -> SeqEnum, SeqEnum, SeqEnum
5<->LiftedDecode(C, Q : parameters) <->text1880.htm#20954<->LiftedDecode(C, Q : parameters) : CodeLinRng, [ModTupFldElt] -&gt; SeqEnum, SeqEnum, SeqEnum
4<->CodeZ4_hadamard_decoding (Example H162E21)<->text1880.htm#20955<->CodeZ4_hadamard_decoding (Example H162E21)
4<->Example-hadamard_decoding :<->text1880.htm#20955<->Example-hadamard_decoding :: CodeZ4_hadamard_decoding (Example H162E21)
3<->lifted_decoding :<->text1880.htm#20952<->lifted_decoding :: Lifted Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->perm_decode :<->text1880.htm#20956<->perm_decode :: Permutation Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->IsPermutationDecodeSet(C, I, S, s) <->text1880.htm#20957<->IsPermutationDecodeSet(C, I, S, s) : CodeLinRng, [RngIntElt], [GrpPermElt], RngIntElt -&gt; BoolElt
5<->PermutationDecode(C, I, S, s, u) <->text1880.htm#20958<->PermutationDecode(C, I, S, s, u) : CodeLinRng, [RngIntElt], [GrpPermElt], RngIntElt, ModTupRngElt -> BoolElt, ModTupRngElt, ModTupFldElt
5<->PermutationDecode(C, I, S, s, u) <->text1880.htm#20958<->PermutationDecode(C, I, S, s, u) : CodeLinRng, [RngIntElt], [GrpPermElt], RngIntElt, ModTupFldElt -&gt; BoolElt, ModTupRngElt, ModTupFldElt
5<->PermutationDecode(C, I, S, s, Q) <->text1880.htm#20959<->PermutationDecode(C, I, S, s, Q) : CodeLinRng, [RngIntElt], [GrpPermElt], RngIntElt, [ModTupRngElt] ->  [BoolElt], [ModTupRngElt], [ModTupFldElt]
5<->PermutationDecode(C, I, S, s, Q) <->text1880.htm#20959<->PermutationDecode(C, I, S, s, Q) : CodeLinRng, [RngIntElt], [GrpPermElt], RngIntElt, [ModTupFldElt] -&gt;  [BoolElt], [ModTupRngElt], [ModTupFldElt]
4<->CodeZ4_spain-Z4-15 (Example H162E22)<->text1880.htm#20960<->CodeZ4_spain-Z4-15 (Example H162E22)
4<->Example-spain-Z4-15 :<->text1880.htm#20960<->Example-spain-Z4-15 :: CodeZ4_spain-Z4-15 (Example H162E22)
5<->PDSetHadamardCodeZ4(&delta;, m) <->text1880.htm#20961<->PDSetHadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; SeqEnum, SeqEnum, SeqEnum, SeqEnum, SeqEnum
5<->PDSetKerdockCodeZ4(m) <->text1880.htm#20962<->PDSetKerdockCodeZ4(m) : RngIntElt -&gt; SeqEnum, SeqEnum, SeqEnum, SeqEnum
4<->CodeZ4_spain-Z4-16 (Example H162E23)<->text1880.htm#20963<->CodeZ4_spain-Z4-16 (Example H162E23)
4<->Example-spain-Z4-16 :<->text1880.htm#20963<->Example-spain-Z4-16 :: CodeZ4_spain-Z4-16 (Example H162E23)
3<->perm_decode :<->text1880.htm#20956<->perm_decode :: Permutation Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->decoding :<->text1880.htm<->decoding :: Decoding (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->aut_group :<->text1881.htm<->aut_group :: Automorphism Groups (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
5<->PAutHadamardCodeZ4 :: PermutationGroupHadamardCodeZ4(&delta;, m) <->text1881.htm#20965<->PAutHadamardCodeZ4 :: PermutationGroupHadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx
5<->PermutationGroupHadamardCodeZ4(&delta;, m) <->text1881.htm#20965<->PermutationGroupHadamardCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx
5<->PAutHadamardCodeZ4Order :: PermutationGroupHadamardCodeZ4Order(&delta;, m) <->text1881.htm#20966<->PAutHadamardCodeZ4Order :: PermutationGroupHadamardCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->PermutationGroupHadamardCodeZ4Order(&delta;, m) <->text1881.htm#20966<->PermutationGroupHadamardCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->PAutExtendedPerfectCodeZ4 :: PermutationGroupExtendedPerfectCodeZ4(&delta;, m) <->text1881.htm#20967<->PAutExtendedPerfectCodeZ4 :: PermutationGroupExtendedPerfectCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx
5<->PermutationGroupExtendedPerfectCodeZ4(&delta;, m) <->text1881.htm#20967<->PermutationGroupExtendedPerfectCodeZ4(&delta;, m) : RngIntElt, RngIntElt -&gt; GrpPerm, Mtrx
5<->PAutExtendedPerfectCodeZ4Order :: PermutationGroupExtendedPerfectCodeZ4Order(&delta;, m) <->text1881.htm#20968<->PAutExtendedPerfectCodeZ4Order :: PermutationGroupExtendedPerfectCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->PermutationGroupExtendedPerfectCodeZ4Order(&delta;, m) <->text1881.htm#20968<->PermutationGroupExtendedPerfectCodeZ4Order(&delta;, m) : RngIntElt, RngIntElt -&gt; RngIntElt
4<->CodeZ4_spain-Z4-8 (Example H162E24)<->text1881.htm#20969<->CodeZ4_spain-Z4-8 (Example H162E24)
4<->Example-spain-Z4-8 :<->text1881.htm#20969<->Example-spain-Z4-8 :: CodeZ4_spain-Z4-8 (Example H162E24)
3<->aut_group :<->text1881.htm<->aut_group :: Automorphism Groups (LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>)
3<->error-correcting-linear-code :<->text1874.htm<->error-correcting-linear-code :: LINEAR CODES OVER THE INTEGER RESIDUE RING Z<sub>4</sub>
3<->error-correcting-additive-code :<->text1883.htm<->error-correcting-additive-code :: ADDITIVE CODES
3<->introduction :<->text1884.htm<->introduction :: Introduction (ADDITIVE CODES)
3<->creation :<->text1885.htm<->creation :: Construction of Additive  Codes (ADDITIVE CODES)
3<->general :<->text1885.htm#20974<->general :: Construction of General Additive Codes (ADDITIVE CODES)
5<->AdditiveCode<F, K, n | L> <->text1885.htm#20975<->AdditiveCode&lt;F, K, n | L&gt; : FldFin, RngIntElt, List -&gt; Code
5<->AdditiveCode(K, G) <->text1885.htm#20976<->AdditiveCode(K, G) : FldFin, ModMatRngElt -> CodeAdd 
5<->AdditiveCode(G) <->text1885.htm#20976<->AdditiveCode(G) : ModMatRngElt -&gt; CodeAdd
4<->CodeAdd_AddLinDiff (Example H163E1)<->text1885.htm#20977<->CodeAdd_AddLinDiff (Example H163E1)
4<->Example-AddLinDiff :<->text1885.htm#20977<->Example-AddLinDiff :: CodeAdd_AddLinDiff (Example H163E1)
4<->CodeAdd_CodeAddFromMatrix (Example H163E2)<->text1885.htm#20978<->CodeAdd_CodeAddFromMatrix (Example H163E2)
4<->Example-CodeAddFromMatrix :<->text1885.htm#20978<->Example-CodeAddFromMatrix :: CodeAdd_CodeAddFromMatrix (Example H163E2)
5<->AdditiveCode(K, C) <->text1885.htm#20979<->AdditiveCode(K, C) : FldFin, Code -&gt; CodeAdd
4<->CodeAdd_CodeAddFromCode (Example H163E3)<->text1885.htm#20980<->CodeAdd_CodeAddFromCode (Example H163E3)
4<->Example-CodeAddFromCode :<->text1885.htm#20980<->Example-CodeAddFromCode :: CodeAdd_CodeAddFromCode (Example H163E3)
4<->CodeAdd_CodeAddFromCodeFail (Example H163E4)<->text1885.htm#20981<->CodeAdd_CodeAddFromCodeFail (Example H163E4)
4<->Example-CodeAddFromCodeFail :<->text1885.htm#20981<->Example-CodeAddFromCodeFail :: CodeAdd_CodeAddFromCodeFail (Example H163E4)
3<->general :<->text1885.htm#20974<->general :: Construction of General Additive Codes (ADDITIVE CODES)
3<->simple :<->text1885.htm#20982<->simple :: Some Trivial Additive Codes (ADDITIVE CODES)
5<->AdditiveZeroCode(F, K, n) <->text1885.htm#20983<->AdditiveZeroCode(F, K, n) : FldFin, FldFin, RngIntElt -&gt; CodeAdd
5<->AdditiveRepetitionCode(F, K, n) <->text1885.htm#20984<->AdditiveRepetitionCode(F, K, n) : FldFin, FldFin, RngIntElt -&gt; Code
5<->AdditiveZeroSumCode(F, K, n) <->text1885.htm#20985<->AdditiveZeroSumCode(F, K, n) : FldFin, FldFin, RngIntElt -&gt; Code
5<->AdditiveUniverseCode(F, K, n) <->text1885.htm#20986<->AdditiveUniverseCode(F, K, n) : FldFin,FldFin, RngIntElt -&gt; Code
5<->RandomAdditiveCode(F, K, n, k) <->text1885.htm#20987<->RandomAdditiveCode(F, K, n, k) : FldFin,FldFin, RngIntElt, RngIntElt -&gt; Code
4<->CodeAdd_SimpleCodeChain (Example H163E5)<->text1885.htm#20988<->CodeAdd_SimpleCodeChain (Example H163E5)
4<->Example-SimpleCodeChain :<->text1885.htm#20988<->Example-SimpleCodeChain :: CodeAdd_SimpleCodeChain (Example H163E5)
3<->simple :<->text1885.htm#20982<->simple :: Some Trivial Additive Codes (ADDITIVE CODES)
3<->creation :<->text1885.htm<->creation :: Construction of Additive  Codes (ADDITIVE CODES)
3<->access :<->text1886.htm<->access :: Invariants of an Additive Code (ADDITIVE CODES)
3<->ambient-space :<->text1886.htm#20990<->ambient-space :: The Ambient Space and Alphabet (ADDITIVE CODES)
5<->Field :: Alphabet(C) <->text1886.htm#20991<->Field :: Alphabet(C) : Code -&gt; Rng
5<->Alphabet(C) <->text1886.htm#20991<->Alphabet(C) : Code -&gt; Rng
5<->CoefficientField(C) <->text1886.htm#20992<->CoefficientField(C) : Code -&gt; Rng
5<->AmbientSpace(C) <->text1886.htm#20993<->AmbientSpace(C) : Code -&gt; ModTupRng
5<->Generic(C) <->text1886.htm#20994<->Generic(C) : Code -&gt; Code
4<->CodeAdd_alphabet-coeff-field (Example H163E6)<->text1886.htm#20995<->CodeAdd_alphabet-coeff-field (Example H163E6)
4<->Example-alphabet-coeff-field :<->text1886.htm#20995<->Example-alphabet-coeff-field :: CodeAdd_alphabet-coeff-field (Example H163E6)
3<->ambient-space :<->text1886.htm#20990<->ambient-space :: The Ambient Space and Alphabet (ADDITIVE CODES)
3<->numerical-invariants :<->text1886.htm#20996<->numerical-invariants :: Basic Numerical Invariants (ADDITIVE CODES)
5<->Length(C) <->text1886.htm#20997<->Length(C) : Code -&gt; RngIntElt
5<->Dimension(C) <->text1886.htm#20998<->Dimension(C) : Code -&gt; FldRatElt
5<->Ngens :: NumberOfGenerators(C) <->text1886.htm#20999<->Ngens :: NumberOfGenerators(C) : Code -&gt; RngIntElt
5<->NumberOfGenerators(C) <->text1886.htm#20999<->NumberOfGenerators(C) : Code -&gt; RngIntElt
5<-># C <->text1886.htm#21000<-># C : Code -&gt; RngIntElt
5<->InformationRate(C) <->text1886.htm#21001<->InformationRate(C) : Code -&gt; FldPrElt
3<->numerical-invariants :<->text1886.htm#20996<->numerical-invariants :: Basic Numerical Invariants (ADDITIVE CODES)
3<->code-subspace :<->text1886.htm#21002<->code-subspace :: The Code Space (ADDITIVE CODES)
5<->BasisMatrix :: GeneratorMatrix(C) <->text1886.htm#21003<->BasisMatrix :: GeneratorMatrix(C) : Code -&gt; ModMatFldElt
5<->GeneratorMatrix(C) <->text1886.htm#21003<->GeneratorMatrix(C) : Code -&gt; ModMatFldElt
5<->Generators :: Basis(C) <->text1886.htm#21004<->Generators :: Basis(C) : Code -&gt; [ ModTupRngElt ]
5<->Basis(C) <->text1886.htm#21004<->Basis(C) : Code -&gt; [ ModTupRngElt ]
5<->C . i <->text1886.htm#21005<->C . i : Code, RngIntElt -&gt; ModTupFldElt
3<->code-subspace :<->text1886.htm#21002<->code-subspace :: The Code Space (ADDITIVE CODES)
3<->dual-space :<->text1886.htm#21006<->dual-space :: The Dual Space (ADDITIVE CODES)
5<->Dual(C) <->text1886.htm#21007<->Dual(C) : CodeAdd -&gt; CodeAdd
5<->ParityCheckMatrix(C) <->text1886.htm#21008<->ParityCheckMatrix(C) : Code -&gt; ModMatFldElt
3<->dual-space :<->text1886.htm#21006<->dual-space :: The Dual Space (ADDITIVE CODES)
3<->access :<->text1886.htm<->access :: Invariants of an Additive Code (ADDITIVE CODES)
3<->element :<->text1887.htm<->element :: Operations on Codewords (ADDITIVE CODES)
3<->creation :<->text1887.htm#21010<->creation :: Construction of a Codeword (ADDITIVE CODES)
5<->elt :: C ! [a1, ..., an] <->text1887.htm#21011<->elt :: C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! [a1, ..., an] <->text1887.htm#21011<->C ! [a<sub>1</sub>, ..., a<sub>n</sub>] : Code, [ RngElt ] -&gt; ModTupRngElt
5<->C ! u <->text1887.htm#21012<->C ! u : Code, ModTupRngElt -&gt; ModTupRngElt
5<->C ! 0 <->text1887.htm#21013<->C ! 0 : Code, RngIntElt -&gt; ModTupRngElt
5<->Random(C)<->text1887.htm#21014<->Random(C): Code -&gt; ModTupRngElt
3<->creation :<->text1887.htm#21010<->creation :: Construction of a Codeword (ADDITIVE CODES)
3<->operation :<->text1887.htm#21015<->operation :: Arithmetic Operations on Codewords (ADDITIVE CODES)
5<->u + v <->text1887.htm#21016<->u + v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->- u <->text1887.htm#21017<->- u : ModTupRngElt -&gt; ModTupRngElt
5<->u - v <->text1887.htm#21018<->u - v : ModTupRngElt, ModTupRngElt -&gt; ModTupRngElt
5<->a * u <->text1887.htm#21019<->a * u : RngElt, ModTupRngElt -&gt; ModTupRngElt
5<->Normalize(u) <->text1887.htm#21020<->Normalize(u) : ModTupRngElt -&gt; ModTupRngElt
3<->operation :<->text1887.htm#21015<->operation :: Arithmetic Operations on Codewords (ADDITIVE CODES)
3<->distance :<->text1887.htm#21021<->distance :: Distance and Weight (ADDITIVE CODES)
5<->Distance(u, v) <->text1887.htm#21022<->Distance(u, v) : ModTupRngElt, ModTupRngElt -&gt; RngIntElt
5<->Weight(u) <->text1887.htm#21023<->Weight(u) : ModTupRngElt -&gt; RngIntElt
3<->distance :<->text1887.htm#21021<->distance :: Distance and Weight (ADDITIVE CODES)
3<->distance :<->text1887.htm#21024<->distance :: Vector Space and Related Operations (ADDITIVE CODES)
5<->InnerProduct :: (u, v) <->text1887.htm#21025<->InnerProduct :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->(,) :: (u, v) <->text1887.htm#21025<->(,) :: (u, v) : ModTupRngElt, ModTupRngElt -&gt; RngElt
5<->TraceInnerProduct(K, u, v) <->text1887.htm#21026<->TraceInnerProduct(K, u, v) : FldFin, ModTupFldElt, ModTupFldElt -&gt; FldFinElt
5<->Support(w) <->text1887.htm#21027<->Support(w) : ModTupRngElt -&gt; { RngIntElt }
5<->Coordinates(C, u) <->text1887.htm#21028<->Coordinates(C, u) : Code, ModTupRngElt -&gt; [ RngFinElt ]
5<->Parent(w)<->text1887.htm#21029<->Parent(w): ModTupRngElt -&gt; ModTupRng
5<->Rotate(u, k) <->text1887.htm#21030<->Rotate(u, k) : ModTupRngElt, RngIntElt -&gt; ModTupRngElt
5<->Rotate(~u, k) <->text1887.htm#21031<->Rotate(~u, k) : ModTupRngElt, RngIntElt -&gt;
5<->Trace(u) <->text1887.htm#21032<->Trace(u) : ModTupFldElt -> ModTupFldElt
5<->Trace(u, S) <->text1887.htm#21032<->Trace(u, S) : ModTupFldElt, FldFin -&gt; ModTupFldElt
3<->distance :<->text1887.htm#21024<->distance :: Vector Space and Related Operations (ADDITIVE CODES)
3<->access :<->text1887.htm#21033<->access :: Predicates for Codewords (ADDITIVE CODES)
5<->u eq v <->text1887.htm#21034<->u eq v : ModTupRngElt, ModTupRngElt -&gt; BoolElt
5<->u ne v <->text1887.htm#21035<->u ne v : ModTupRngElt, ModTupRngElt -&gt; BoolElt
5<->IsZero(u) <->text1887.htm#21036<->IsZero(u) : ModTupRngElt -&gt; BoolElt
3<->access :<->text1887.htm#21033<->access :: Predicates for Codewords (ADDITIVE CODES)
3<->access :<->text1887.htm#21037<->access :: Accessing Components of a Codeword (ADDITIVE CODES)
5<->[] :: u[i] <->text1887.htm#21038<->[] :: u[i] : ModTupRngElt, RngIntElt -&gt; RngElt
5<->[] :: u[i] <->text1887.htm#21039<->[] :: u[i] := x;
3<->access :<->text1887.htm#21037<->access :: Accessing Components of a Codeword (ADDITIVE CODES)
3<->element :<->text1887.htm<->element :: Operations on Codewords (ADDITIVE CODES)
3<->subcode :<->text1888.htm<->subcode :: Subcodes (ADDITIVE CODES)
3<->creation :<->text1888.htm#21041<->creation :: The Subcode Constructor (ADDITIVE CODES)
5<->sub<C | L> <->text1888.htm#21042<->sub&lt;C | L&gt; : CodeAdd, List -&gt; CodeAdd
5<->Subcode(C, k) <->text1888.htm#21043<->Subcode(C, k) : CodeAdd, RngIntElt -&gt; CodeAdd
5<->Subcode(C, S) <->text1888.htm#21044<->Subcode(C, S) : CodeAdd, { RngIntElt } -&gt; Code
5<->SubcodeBetweenCode(C1, C2, k) <->text1888.htm#21045<->SubcodeBetweenCode(C1, C2, k) : CodeAdd, CodeAdd, RngIntElt -&gt; CodeAdd
5<->SubcodeWordsOfWeight(C, w) <->text1888.htm#21046<->SubcodeWordsOfWeight(C, w) : CodeAdd, RngIntElt -&gt; CodeAdd
5<->SubcodeWordsOfWeight(C, S) <->text1888.htm#21047<->SubcodeWordsOfWeight(C, S) : CodeAdd, { RngIntElt } -&gt; CodeAdd
4<->CodeAdd_SubcodeBetweenCode (Example H163E7)<->text1888.htm#21048<->CodeAdd_SubcodeBetweenCode (Example H163E7)
4<->Example-SubcodeBetweenCode :<->text1888.htm#21048<->Example-SubcodeBetweenCode :: CodeAdd_SubcodeBetweenCode (Example H163E7)
3<->creation :<->text1888.htm#21041<->creation :: The Subcode Constructor (ADDITIVE CODES)
3<->sum-intersection-dual :<->text1888.htm#21049<->sum-intersection-dual :: Sum, Intersection and Dual (ADDITIVE CODES)
5<->C + D <->text1888.htm#21050<->C + D : CodeAdd, CodeAdd -&gt; CodeAdd
5<->C meet D <->text1888.htm#21051<->C meet D : Code, Code -&gt; Code
5<->Dual(C) <->text1888.htm#21052<->Dual(C) : Code -&gt; Code
3<->sum-intersection-dual :<->text1888.htm#21049<->sum-intersection-dual :: Sum, Intersection and Dual (ADDITIVE CODES)
3<->Boolean :<->text1888.htm#21053<->Boolean :: Membership and Equality (ADDITIVE CODES)
5<->u in C <->text1888.htm#21054<->u in C : ModTupRngElt, CodeAdd -&gt; BoolElt
5<->u notin C <->text1888.htm#21055<->u notin C : ModTupRngElt, CodeAdd -&gt; BoolElt
5<->C subset D <->text1888.htm#21056<->C subset D : Code, Code -&gt; BoolElt
5<->C notsubset D <->text1888.htm#21057<->C notsubset D : Code, Code -&gt; BoolElt
5<->C eq D <->text1888.htm#21058<->C eq D : Code, Code -&gt; BoolElt
5<->C ne D <->text1888.htm#21059<->C ne D : Code, Code -&gt; BoolElt
3<->Boolean :<->text1888.htm#21053<->Boolean :: Membership and Equality (ADDITIVE CODES)
3<->subcode :<->text1888.htm<->subcode :: Subcodes (ADDITIVE CODES)
3<->Boolean :<->text1889.htm<->Boolean :: Properties of Codes (ADDITIVE CODES)
5<->IsSelfDual(C) <->text1889.htm#21061<->IsSelfDual(C) : Code -&gt; BoolElt
5<->IsSelfOrthogonal(C) <->text1889.htm#21062<->IsSelfOrthogonal(C) : Code -&gt; BoolElt
5<->IsPerfect(C) <->text1889.htm#21063<->IsPerfect(C) : Code -&gt; BoolElt
5<->IsProjective(C) <->text1889.htm#21064<->IsProjective(C) : Code -&gt; BoolElt
5<->IsAdditiveProjective(C) <->text1889.htm#21065<->IsAdditiveProjective(C) : CodeAdd -&gt; BoolElt
3<->Boolean :<->text1889.htm<->Boolean :: Properties of Codes (ADDITIVE CODES)
3<->structural :<->text1890.htm<->structural :: The Weight Distribution (ADDITIVE CODES)
3<->minimum-weight :<->text1890.htm#21067<->minimum-weight :: The Minimum Weight (ADDITIVE CODES)
5<->MinimumDistance :: MinimumWeight(C: parameters) <->text1890.htm#21068<->MinimumDistance :: MinimumWeight(C: parameters) : CodeAdd -&gt; RngIntElt
5<->MinimumWeight(C: parameters) <->text1890.htm#21068<->MinimumWeight(C: parameters) : CodeAdd -&gt; RngIntElt
4<->CodeAdd_additive-minweight (Example H163E8)<->text1890.htm#21069<->CodeAdd_additive-minweight (Example H163E8)
4<->Example-additive-minweight :<->text1890.htm#21069<->Example-additive-minweight :: CodeAdd_additive-minweight (Example H163E8)
3<->minimum-weight :<->text1890.htm#21067<->minimum-weight :: The Minimum Weight (ADDITIVE CODES)
3<->weight-distribution :<->text1890.htm#21070<->weight-distribution :: The Weight Distribution (ADDITIVE CODES)
5<->WeightDistribution(C) <->text1890.htm#21071<->WeightDistribution(C) : CodeAdd -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
5<->DualWeightDistribution(C) <->text1890.htm#21072<->DualWeightDistribution(C) : CodeAdd -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
3<->weight-distribution :<->text1890.htm#21070<->weight-distribution :: The Weight Distribution (ADDITIVE CODES)
3<->weight-enumerator :<->text1890.htm#21073<->weight-enumerator :: The Weight Enumerator (ADDITIVE CODES)
5<->WeightEnumerator(C)<->text1890.htm#21074<->WeightEnumerator(C): CodeAdd -&gt; RngMPolElt
5<->CompleteWeightEnumerator(C)<->text1890.htm#21075<->CompleteWeightEnumerator(C): CodeAdd -&gt; RngMPolElt
5<->CompleteWeightEnumerator(C, u)<->text1890.htm#21076<->CompleteWeightEnumerator(C, u): Code, ModTupFldElt -&gt; RngMPolElt
3<->weight-enumerator :<->text1890.htm#21073<->weight-enumerator :: The Weight Enumerator (ADDITIVE CODES)
3<->macwilliams :<->text1890.htm#21077<->macwilliams :: The MacWilliams Transform (ADDITIVE CODES)
5<->MacWilliamsTransform(n, k, q, W) <->text1890.htm#21078<->MacWilliamsTransform(n, k, q, W) : RngIntElt, RngIntElt, RngIntElt, [ &lt;RngIntElt, RngIntElt&gt; ] -&gt; [ &lt;RngIntElt, RngIntElt&gt; ]
3<->macwilliams :<->text1890.htm#21077<->macwilliams :: The MacWilliams Transform (ADDITIVE CODES)
3<->words :<->text1890.htm#21079<->words :: Words (ADDITIVE CODES)
5<->Words(C, w: parameters) <->text1890.htm#21080<->Words(C, w: parameters) : Code, RngIntElt -&gt; { ModTupFldElt }
5<->NumberOfWords(C, w) <->text1890.htm#21081<->NumberOfWords(C, w) : Code, RngIntElt -&gt; RngIntElt
5<->WordsOfBoundedWeight(C, l, u: parameters) <->text1890.htm#21082<->WordsOfBoundedWeight(C, l, u: parameters) : Code, RngIntElt, RngIntElt -&gt; { ModTupFldElt }
3<->words :<->text1890.htm#21079<->words :: Words (ADDITIVE CODES)
3<->structural :<->text1890.htm<->structural :: The Weight Distribution (ADDITIVE CODES)
3<->families :<->text1891.htm<->families :: Families of Linear Codes (ADDITIVE CODES)
3<->cyclic :<->text1891.htm#21084<->cyclic :: Cyclic Codes (ADDITIVE CODES)
5<->AdditiveCyclicCode(K, v) <->text1891.htm#21085<->AdditiveCyclicCode(K, v) : FldFin, ModTupFldElt -> CodeAdd
5<->AdditiveCyclicCode(Q) <->text1891.htm#21085<->AdditiveCyclicCode(Q) : [ModTupFldElt] -> CodeAdd
5<->AdditiveCyclicCode(K, Q) <->text1891.htm#21085<->AdditiveCyclicCode(K, Q) : FldFin, [ModTupFldElt] -> CodeAdd
5<->AdditiveCyclicCode(v) <->text1891.htm#21085<->AdditiveCyclicCode(v) : ModTupFldElt -&gt; CodeAdd
5<->AdditiveCyclicCode(K, n, f) <->text1891.htm#21086<->AdditiveCyclicCode(K, n, f) : FldFin, RngIntElt, RngUPolElt -> CodeAdd
5<->AdditiveCyclicCode(n, Q) <->text1891.htm#21086<->AdditiveCyclicCode(n, Q) : RngIntElt, [RngUPolElt] -> CodeAdd
5<->AdditiveCyclicCode(K, n, Q) <->text1891.htm#21086<->AdditiveCyclicCode(K, n, Q) : FldFin, RngIntElt, [RngUPolElt] -> CodeAdd
5<->AdditiveCyclicCode(n, f) <->text1891.htm#21086<->AdditiveCyclicCode(n, f) : RngIntElt, RngUPolElt -&gt; CodeAdd
5<->AdditiveCyclicCode(v4, v2) <->text1891.htm#21087<->AdditiveCyclicCode(v4, v2) : ModTupFldElt, ModTupFldElt -&gt; CodeAdd
5<->AdditiveCyclicCode(n, f4, f2) <->text1891.htm#21088<->AdditiveCyclicCode(n, f4, f2) : RngIntElt, RngUPolElt, RngUPolElt -&gt; CodeAdd
3<->cyclic :<->text1891.htm#21084<->cyclic :: Cyclic Codes (ADDITIVE CODES)
3<->quasicyclic :<->text1891.htm#21089<->quasicyclic :: Quasicyclic Codes (ADDITIVE CODES)
5<->AdditiveQuasiCyclicCode(K, n, Q) <->text1891.htm#21090<->AdditiveQuasiCyclicCode(K, n, Q) : FldFin, RngIntElt, SeqEnum[RngUPolElt] 							-> CodeAdd
5<->AdditiveQuasiCyclicCode(n, Q) <->text1891.htm#21090<->AdditiveQuasiCyclicCode(n, Q) : RngIntElt, SeqEnum[RngUPolElt] -&gt; CodeAdd
5<->AdditiveQuasiCyclicCode(K, n, Q, h) <->text1891.htm#21091<->AdditiveQuasiCyclicCode(K, n, Q, h) : FldFin, RngIntElt, SeqEnum[RngUPolElt], RngIntElt 							-> CodeAdd
5<->AdditiveQuasiCyclicCode(n, Q, h) <->text1891.htm#21091<->AdditiveQuasiCyclicCode(n, Q, h) : RngIntElt, SeqEnum[RngUPolElt], RngIntElt 							    -&gt; CodeAdd
5<->AdditiveQuasiCyclicCode(K, Q) <->text1891.htm#21092<->AdditiveQuasiCyclicCode(K, Q) : FldFin, SeqEnum[ModTupFldElt] -> CodeAdd
5<->AdditiveQuasiCyclicCode(Q) <->text1891.htm#21092<->AdditiveQuasiCyclicCode(Q) : SeqEnum[ModTupFldElt] -&gt; CodeAdd
5<->AdditiveQuasiCyclicCode(K, Q, h) <->text1891.htm#21093<->AdditiveQuasiCyclicCode(K, Q, h) : FldFin, SeqEnum[ModTupFldElt], RngIntElt 							-> CodeAdd
5<->AdditiveQuasiCyclicCode(Q, h) <->text1891.htm#21093<->AdditiveQuasiCyclicCode(Q, h) : SeqEnum[ModTupFldElt], RngIntElt 							    -&gt; CodeAdd
3<->quasicyclic :<->text1891.htm#21089<->quasicyclic :: Quasicyclic Codes (ADDITIVE CODES)
3<->families :<->text1891.htm<->families :: Families of Linear Codes (ADDITIVE CODES)
3<->operation :<->text1892.htm<->operation :: New Codes from Old (ADDITIVE CODES)
3<->standard :<->text1892.htm#21095<->standard :: Standard Constructions (ADDITIVE CODES)
5<->AugmentCode(C) <->text1892.htm#21096<->AugmentCode(C) : CodeAdd -&gt; Code
5<->CodeComplement(C, S) <->text1892.htm#21097<->CodeComplement(C, S) : Code, Code -&gt; Code
5<->DirectSum(C, D) <->text1892.htm#21098<->DirectSum(C, D) : Code, Code -&gt; Code
5<->DirectSum(Q) <->text1892.htm#21099<->DirectSum(Q) : [Code] -&gt; Code
5<->DirectProduct(C, D) <->text1892.htm#21100<->DirectProduct(C, D) : Code, Code -&gt; Code
5<->ExtendCode(C) <->text1892.htm#21101<->ExtendCode(C) : CodeAdd -&gt; CodeAdd
5<->ExtendCode(C, n) <->text1892.htm#21102<->ExtendCode(C, n) : Code, RngIntElt -&gt; Code
5<->PadCode(C, n) <->text1892.htm#21103<->PadCode(C, n) : CodeAdd, RngIntElt -&gt; CodeAdd
5<->PlotkinSum(C1, C2) <->text1892.htm#21104<->PlotkinSum(C1, C2) : Code, Code -&gt; Code
5<->PlotkinSum(C1, C2, C3: parameters) <->text1892.htm#21105<->PlotkinSum(C1, C2, C3: parameters) : Code,Code,Code -&gt; Code
5<->PunctureCode(C, i) <->text1892.htm#21106<->PunctureCode(C, i) : CodeAdd, RngIntElt -&gt; Code
5<->PunctureCode(C, S) <->text1892.htm#21107<->PunctureCode(C, S) : CodeAdd, { RngIntElt } -&gt; Code
5<->ShortenCode(C, i) <->text1892.htm#21108<->ShortenCode(C, i) : Code, RngIntElt -&gt; Code
5<->ShortenCode(C, S) <->text1892.htm#21109<->ShortenCode(C, S) : Code, { RngIntElt } -&gt; Code
3<->standard :<->text1892.htm#21095<->standard :: Standard Constructions (ADDITIVE CODES)
3<->combining-codes :<->text1892.htm#21110<->combining-codes :: Combining Codes (ADDITIVE CODES)
5<->C1 cat C2 <->text1892.htm#21111<->C1 cat C2 : CodeAdd, CodeAdd -&gt; CodeAdd
5<->Juxtaposition(C1, C2) <->text1892.htm#21112<->Juxtaposition(C1, C2) : Code, Code -&gt; Code
3<->combining-codes :<->text1892.htm#21110<->combining-codes :: Combining Codes (ADDITIVE CODES)
3<->operation :<->text1892.htm<->operation :: New Codes from Old (ADDITIVE CODES)
3<->additive-automorphisms :<->text1893.htm<->additive-automorphisms :: Automorphism Group (ADDITIVE CODES)
5<->AutomorphismGroup(C) <->text1893.htm#21114<->AutomorphismGroup(C) : CodeAdd -&gt; GrpPerm
5<->PermutationGroup(C) <->text1893.htm#21115<->PermutationGroup(C) : CodeAdd -&gt; GrpPerm
3<->additive-automorphisms :<->text1893.htm<->additive-automorphisms :: Automorphism Group (ADDITIVE CODES)
3<->error-correcting-additive-code :<->text1883.htm<->error-correcting-additive-code :: ADDITIVE CODES
3<->error-correcting-quantum-code :<->text1896.htm<->error-correcting-quantum-code :: QUANTUM CODES
3<->introduction :<->text1897.htm<->introduction :: Introduction (QUANTUM CODES)
3<->creation :<->text1898.htm<->creation :: Constructing Quantum Codes (QUANTUM CODES)
3<->general :<->text1898.htm#21121<->general :: Construction of General Quantum Codes (QUANTUM CODES)
5<->QuantumCode(S) <->text1898.htm#21122<->QuantumCode(S) : Code -&gt; CodeQuantum
4<->QECC_SimpleQuantConstr (Example H164E1)<->text1898.htm#21123<->QECC_SimpleQuantConstr (Example H164E1)
4<->Example-SimpleQuantConstr :<->text1898.htm#21123<->Example-SimpleQuantConstr :: QECC_SimpleQuantConstr (Example H164E1)
4<->QECC_SimpleQuantExtendedConstr (Example H164E2)<->text1898.htm#21124<->QECC_SimpleQuantExtendedConstr (Example H164E2)
4<->Example-SimpleQuantExtendedConstr :<->text1898.htm#21124<->Example-SimpleQuantExtendedConstr :: QECC_SimpleQuantExtendedConstr (Example H164E2)
4<->QECC_SimpleQuantSelfDualConstr (Example H164E3)<->text1898.htm#21125<->QECC_SimpleQuantSelfDualConstr (Example H164E3)
4<->Example-SimpleQuantSelfDualConstr :<->text1898.htm#21125<->Example-SimpleQuantSelfDualConstr :: QECC_SimpleQuantSelfDualConstr (Example H164E3)
4<->QECC_SimpleQuantAdditiveConstr (Example H164E4)<->text1898.htm#21126<->QECC_SimpleQuantAdditiveConstr (Example H164E4)
4<->Example-SimpleQuantAdditiveConstr :<->text1898.htm#21126<->Example-SimpleQuantAdditiveConstr :: QECC_SimpleQuantAdditiveConstr (Example H164E4)
5<->QuantumCode(M) <->text1898.htm#21127<->QuantumCode(M) : ModMatRngElt -&gt; CodeQuantum
4<->QECC_SimpleQuantConstrMat (Example H164E5)<->text1898.htm#21128<->QECC_SimpleQuantConstrMat (Example H164E5)
4<->Example-SimpleQuantConstrMat :<->text1898.htm#21128<->Example-SimpleQuantConstrMat :: QECC_SimpleQuantConstrMat (Example H164E5)
5<->QuantumCode(G) <->text1898.htm#21129<->QuantumCode(G) : Grph -&gt; CodeQuantum
4<->QECC_HexacodeQuant (Example H164E6)<->text1898.htm#21130<->QECC_HexacodeQuant (Example H164E6)
4<->Example-HexacodeQuant :<->text1898.htm#21130<->Example-HexacodeQuant :: QECC_HexacodeQuant (Example H164E6)
4<->QECC_DodecacodeQuant (Example H164E7)<->text1898.htm#21131<->QECC_DodecacodeQuant (Example H164E7)
4<->Example-DodecacodeQuant :<->text1898.htm#21131<->Example-DodecacodeQuant :: QECC_DodecacodeQuant (Example H164E7)
5<->RandomQuantumCode(F, n, k) <->text1898.htm#21132<->RandomQuantumCode(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum
4<->QECC_RandomQuantConstr (Example H164E8)<->text1898.htm#21133<->QECC_RandomQuantConstr (Example H164E8)
4<->Example-RandomQuantConstr :<->text1898.htm#21133<->Example-RandomQuantConstr :: QECC_RandomQuantConstr (Example H164E8)
5<->Subcode(Q, k) <->text1898.htm#21134<->Subcode(Q, k) : CodeQuantum, RngIntElt -&gt; CodeQuantum
3<->general :<->text1898.htm#21121<->general :: Construction of General Quantum Codes (QUANTUM CODES)
3<->special :<->text1898.htm#21135<->special :: Construction of Special Quantum Codes (QUANTUM CODES)
5<->Hexacode() <->text1898.htm#21136<->Hexacode() : -&gt; CodeQuantum
5<->Dodecacode() <->text1898.htm#21137<->Dodecacode() : -&gt; CodeQuantum
3<->special :<->text1898.htm#21135<->special :: Construction of Special Quantum Codes (QUANTUM CODES)
3<->css-codes :<->text1898.htm#21138<->css-codes :: CSS Codes (QUANTUM CODES)
5<->CalderbankShorSteaneCode :: CSSCode(C1, C2) <->text1898.htm#21139<->CalderbankShorSteaneCode :: CSSCode(C1, C2) : Code, Code -&gt; CodeQuantum
5<->CSSCode(C1, C2) <->text1898.htm#21139<->CSSCode(C1, C2) : Code, Code -&gt; CodeQuantum
4<->QECC_CSSQuantConstr (Example H164E9)<->text1898.htm#21140<->QECC_CSSQuantConstr (Example H164E9)
4<->Example-CSSQuantConstr :<->text1898.htm#21140<->Example-CSSQuantConstr :: QECC_CSSQuantConstr (Example H164E9)
3<->css-codes :<->text1898.htm#21138<->css-codes :: CSS Codes (QUANTUM CODES)
3<->cyclicquantumcodes :<->text1898.htm#21141<->cyclicquantumcodes :: Cyclic Quantum Codes (QUANTUM CODES)
5<->QuantumCyclicCode(Q) <->text1898.htm#21142<->QuantumCyclicCode(Q) : [ModTupFldElt] -> CodeAdd
5<->QuantumCyclicCode(v) <->text1898.htm#21142<->QuantumCyclicCode(v) : ModTupFldElt -&gt; CodeAdd
4<->QECC_CyclicQuantCodesimple (Example H164E10)<->text1898.htm#21143<->QECC_CyclicQuantCodesimple (Example H164E10)
4<->Example-CyclicQuantCodesimple :<->text1898.htm#21143<->Example-CyclicQuantCodesimple :: QECC_CyclicQuantCodesimple (Example H164E10)
5<->QuantumCyclicCode(n, Q) <->text1898.htm#21144<->QuantumCyclicCode(n, Q) : RngIntElt, [RngUPolElt] -> CodeAdd
5<->QuantumCyclicCode(n, f) <->text1898.htm#21144<->QuantumCyclicCode(n, f) : RngIntElt, RngUPolElt -&gt; CodeAdd
4<->QECC_CyclicQuantCodePoly (Example H164E11)<->text1898.htm#21145<->QECC_CyclicQuantCodePoly (Example H164E11)
4<->Example-CyclicQuantCodePoly :<->text1898.htm#21145<->Example-CyclicQuantCodePoly :: QECC_CyclicQuantCodePoly (Example H164E11)
5<->QuantumCyclicCode(v4, v2) <->text1898.htm#21146<->QuantumCyclicCode(v4, v2) : ModTupFldElt, ModTupFldElt -&gt; CodeAdd
4<->QECC_CyclicQuantCodeGF4GF2 (Example H164E12)<->text1898.htm#21147<->QECC_CyclicQuantCodeGF4GF2 (Example H164E12)
4<->Example-CyclicQuantCodeGF4GF2 :<->text1898.htm#21147<->Example-CyclicQuantCodeGF4GF2 :: QECC_CyclicQuantCodeGF4GF2 (Example H164E12)
3<->cyclicquantumcodes :<->text1898.htm#21141<->cyclicquantumcodes :: Cyclic Quantum Codes (QUANTUM CODES)
3<->quasicyclicquantumcodes :<->text1898.htm#21148<->quasicyclicquantumcodes :: Quasi-Cyclic Quantum Codes (QUANTUM CODES)
5<->QuantumQuasiCyclicCode(n, Q) <->text1898.htm#21149<->QuantumQuasiCyclicCode(n, Q) : RngIntElt, SeqEnum[RngUPolElt] -&gt; CodeAdd
5<->QuantumQuasiCyclicCode(Q) <->text1898.htm#21150<->QuantumQuasiCyclicCode(Q) : SeqEnum[ModTupFldElt] -&gt; CodeAdd
4<->QECC_QuasiCyclicQuantCode (Example H164E13)<->text1898.htm#21151<->QECC_QuasiCyclicQuantCode (Example H164E13)
4<->Example-QuasiCyclicQuantCode :<->text1898.htm#21151<->Example-QuasiCyclicQuantCode :: QECC_QuasiCyclicQuantCode (Example H164E13)
3<->quasicyclicquantumcodes :<->text1898.htm#21148<->quasicyclicquantumcodes :: Quasi-Cyclic Quantum Codes (QUANTUM CODES)
3<->creation :<->text1898.htm<->creation :: Constructing Quantum Codes (QUANTUM CODES)
3<->access :<->text1899.htm<->access :: Access Functions (QUANTUM CODES)
5<->QuantumBasisElement(F) <->text1899.htm#21153<->QuantumBasisElement(F) : FldFin -&gt; FldFinElt
5<->StabiliserCode :: StabilizerCode(Q) <->text1899.htm#21154<->StabiliserCode :: StabilizerCode(Q) : CodeQuantum -&gt; CodeAdd
5<->StabilizerCode(Q) <->text1899.htm#21154<->StabilizerCode(Q) : CodeQuantum -&gt; CodeAdd
5<->StabiliserMatrix :: StabilizerMatrix(Q) <->text1899.htm#21155<->StabiliserMatrix :: StabilizerMatrix(Q) : CodeQuantum -&gt; ModMatFldElt
5<->StabilizerMatrix(Q) <->text1899.htm#21155<->StabilizerMatrix(Q) : CodeQuantum -&gt; ModMatFldElt
5<->NormaliserCode :: NormalizerCode(Q) <->text1899.htm#21156<->NormaliserCode :: NormalizerCode(Q) : CodeQuantum -&gt; CodeAdd
5<->NormalizerCode(Q) <->text1899.htm#21156<->NormalizerCode(Q) : CodeQuantum -&gt; CodeAdd
5<->NormaliserMatrix :: NormalizerMatrix(Q) <->text1899.htm#21157<->NormaliserMatrix :: NormalizerMatrix(Q) : CodeQuantum -&gt; ModMatFldElt
5<->NormalizerMatrix(Q) <->text1899.htm#21157<->NormalizerMatrix(Q) : CodeQuantum -&gt; ModMatFldElt
3<->error_group :<->text1899.htm#21158<->error_group :: Quantum Error Group (QUANTUM CODES)
5<->QuantumErrorGroup(p, n) <->text1899.htm#21159<->QuantumErrorGroup(p, n) : RngIntElt, RngIntElt -&gt; GrpPC
5<->QuantumBinaryErrorGroup(n) <->text1899.htm#21160<->QuantumBinaryErrorGroup(n) : RngIntElt -&gt; GrpPC
4<->QECC_quantum-error-group (Example H164E14)<->text1899.htm#21161<->QECC_quantum-error-group (Example H164E14)
4<->Example-quantum-error-group :<->text1899.htm#21161<->Example-quantum-error-group :: QECC_quantum-error-group (Example H164E14)
5<->QuantumErrorGroup(Q) <->text1899.htm#21162<->QuantumErrorGroup(Q) : CodeQuantum -&gt; GrpPC
5<->StabiliserGroup :: StabilizerGroup(Q) <->text1899.htm#21163<->StabiliserGroup :: StabilizerGroup(Q) : CodeQuantum -&gt; GrpPC
5<->StabilizerGroup(Q) <->text1899.htm#21163<->StabilizerGroup(Q) : CodeQuantum -&gt; GrpPC
5<->StabiliserGroup :: StabilizerGroup(Q, G) <->text1899.htm#21164<->StabiliserGroup :: StabilizerGroup(Q, G) : CodeQuantum, GrpPC -&gt; GrpPC
5<->StabilizerGroup(Q, G) <->text1899.htm#21164<->StabilizerGroup(Q, G) : CodeQuantum, GrpPC -&gt; GrpPC
4<->QECC_quant-stab-group (Example H164E15)<->text1899.htm#21165<->QECC_quant-stab-group (Example H164E15)
4<->Example-quant-stab-group :<->text1899.htm#21165<->Example-quant-stab-group :: QECC_quant-stab-group (Example H164E15)
4<->QECC_quant-stab-group-hack (Example H164E16)<->text1899.htm#21166<->QECC_quant-stab-group-hack (Example H164E16)
4<->Example-quant-stab-group-hack :<->text1899.htm#21166<->Example-quant-stab-group-hack :: QECC_quant-stab-group-hack (Example H164E16)
3<->error_group :<->text1899.htm#21158<->error_group :: Quantum Error Group (QUANTUM CODES)
3<->access :<->text1899.htm<->access :: Access Functions (QUANTUM CODES)
3<->inner-products :<->text1900.htm<->inner-products :: Inner Products and Duals (QUANTUM CODES)
5<->SymplecticInnerProduct(v1, v2) <->text1900.htm#21168<->SymplecticInnerProduct(v1, v2) : ModTupFldElt, ModTupFldElt -&gt; FldFinElt
5<->SymplecticDual(C) <->text1900.htm#21169<->SymplecticDual(C) : CodeAdd -&gt; CodeAdd
5<->IsSymplecticSelfDual(C) <->text1900.htm#21170<->IsSymplecticSelfDual(C) : CodeAdd -&gt; BoolElt
5<->IsSymplecticSelfOrthogonal(C) <->text1900.htm#21171<->IsSymplecticSelfOrthogonal(C) : CodeAdd -&gt; BoolElt
4<->QECC_SymplecticEg (Example H164E17)<->text1900.htm#21172<->QECC_SymplecticEg (Example H164E17)
4<->Example-SymplecticEg :<->text1900.htm#21172<->Example-SymplecticEg :: QECC_SymplecticEg (Example H164E17)
4<->QECC_symplecticselforthog (Example H164E18)<->text1900.htm#21173<->QECC_symplecticselforthog (Example H164E18)
4<->Example-symplecticselforthog :<->text1900.htm#21173<->Example-symplecticselforthog :: QECC_symplecticselforthog (Example H164E18)
3<->inner-products :<->text1900.htm<->inner-products :: Inner Products and Duals (QUANTUM CODES)
3<->weight-distribution :<->text1901.htm<->weight-distribution :: Weight Distribution and Minimum Weight (QUANTUM CODES)
5<->WeightDistribution(Q) <->text1901.htm#21175<->WeightDistribution(Q) : CodeQuantum -&gt; SeqEnum, SeqEnum, SeqEnum
4<->QECC_QuantWeightDist (Example H164E19)<->text1901.htm#21176<->QECC_QuantWeightDist (Example H164E19)
4<->Example-QuantWeightDist :<->text1901.htm#21176<->Example-QuantWeightDist :: QECC_QuantWeightDist (Example H164E19)
5<->MinimumWeight(Q) <->text1901.htm#21177<->MinimumWeight(Q) : CodeQuantum -&gt; RngIntElt
4<->QECC_QuantMinWeight (Example H164E20)<->text1901.htm#21178<->QECC_QuantMinWeight (Example H164E20)
4<->Example-QuantMinWeight :<->text1901.htm#21178<->Example-QuantMinWeight :: QECC_QuantMinWeight (Example H164E20)
5<->IsPure(Q) <->text1901.htm#21179<->IsPure(Q) : CodeQuantum -&gt; BoolElt
4<->QECC_QECC-IsPure (Example H164E21)<->text1901.htm#21180<->QECC_QECC-IsPure (Example H164E21)
4<->Example-QECC-IsPure :<->text1901.htm#21180<->Example-QECC-IsPure :: QECC_QECC-IsPure (Example H164E21)
3<->weight-distribution :<->text1901.htm<->weight-distribution :: Weight Distribution and Minimum Weight (QUANTUM CODES)
3<->combining-codes :<->text1902.htm<->combining-codes :: New Codes From Old (QUANTUM CODES)
5<->DirectSum(Q1, Q2) <->text1902.htm#21182<->DirectSum(Q1, Q2) : CodeQuantum, CodeQuantum -&gt; CodeQuantum
5<->ExtendCode(Q) <->text1902.htm#21183<->ExtendCode(Q) : CodeQuantum -&gt; CodeQuantum
5<->ExtendCode(Q, m) <->text1902.htm#21184<->ExtendCode(Q, m) : CodeQuantum, RngIntElt -&gt; CodeQuantum
5<->PunctureCode(Q, i) <->text1902.htm#21185<->PunctureCode(Q, i) : CodeQuantum, RngIntElt -&gt; CodeQuantum
5<->PunctureCode(Q, I) <->text1902.htm#21186<->PunctureCode(Q, I) : CodeQuantum, SetEnum -&gt; CodeQuantum
5<->ShortenCode(Q, i) <->text1902.htm#21187<->ShortenCode(Q, i) : CodeQuantum, RngIntElt -&gt; CodeQuantum
5<->ShortenCode(Q, I) <->text1902.htm#21188<->ShortenCode(Q, I) : CodeQuantum, SetEnum -&gt; CodeQuantum
4<->QECC_NonQuantCombs (Example H164E22)<->text1902.htm#21189<->QECC_NonQuantCombs (Example H164E22)
4<->Example-NonQuantCombs :<->text1902.htm#21189<->Example-NonQuantCombs :: QECC_NonQuantCombs (Example H164E22)
3<->combining-codes :<->text1902.htm<->combining-codes :: New Codes From Old (QUANTUM CODES)
3<->best-known-quantum-codes :<->text1903.htm<->best-known-quantum-codes :: Best Known Quantum Codes (QUANTUM CODES)
5<->BKQC :: QECC(F, n, k) <->text1903.htm#21191<->BKQC :: QECC(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt
5<->BestKnownQuantumCode :: QECC(F, n, k) <->text1903.htm#21191<->BestKnownQuantumCode :: QECC(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt
5<->QECC(F, n, k) <->text1903.htm#21191<->QECC(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; CodeQuantum, BoolElt
4<->QECC_QECC-egs (Example H164E23)<->text1903.htm#21192<->QECC_QECC-egs (Example H164E23)
4<->Example-QECC-egs :<->text1903.htm#21192<->Example-QECC-egs :: QECC_QECC-egs (Example H164E23)
4<->QECC_QECC-self-dual (Example H164E24)<->text1903.htm#21193<->QECC_QECC-self-dual (Example H164E24)
4<->Example-QECC-self-dual :<->text1903.htm#21193<->Example-QECC-self-dual :: QECC_QECC-self-dual (Example H164E24)
4<->QECC_QECC-verbose (Example H164E25)<->text1903.htm#21194<->QECC_QECC-verbose (Example H164E25)
4<->Example-QECC-verbose :<->text1903.htm#21194<->Example-QECC-verbose :: QECC_QECC-verbose (Example H164E25)
3<->best-known-quantum-codes :<->text1903.htm<->best-known-quantum-codes :: Best Known Quantum Codes (QUANTUM CODES)
3<->best-known-quantum-bounds :<->text1904.htm<->best-known-quantum-bounds :: Best Known Bounds (QUANTUM CODES)
5<->QECCLowerBound(F, n, k) <->text1904.htm#21196<->QECCLowerBound(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
5<->QECCUpperBound(F, n, k) <->text1904.htm#21197<->QECCUpperBound(F, n, k) : FldFin, RngIntElt, RngIntElt -&gt; RngIntElt
4<->QECC_QECCBounds (Example H164E26)<->text1904.htm#21198<->QECC_QECCBounds (Example H164E26)
4<->Example-QECCBounds :<->text1904.htm#21198<->Example-QECCBounds :: QECC_QECCBounds (Example H164E26)
3<->best-known-quantum-bounds :<->text1904.htm<->best-known-quantum-bounds :: Best Known Bounds (QUANTUM CODES)
3<->additive-automorphisms :<->text1905.htm<->additive-automorphisms :: Automorphism Group (QUANTUM CODES)
5<->AutomorphismGroup(Q) <->text1905.htm#21200<->AutomorphismGroup(Q) : CodeQuantum -&gt; GrpPerm
5<->PermutationGroup(Q) <->text1905.htm#21201<->PermutationGroup(Q) : CodeQuantum -&gt; GrpPerm
4<->QECC_QuantumAuto (Example H164E27)<->text1905.htm#21202<->QECC_QuantumAuto (Example H164E27)
4<->Example-QuantumAuto :<->text1905.htm#21202<->Example-QuantumAuto :: QECC_QuantumAuto (Example H164E27)
4<->QECC_QECC-Auto-stabilizer (Example H164E28)<->text1905.htm#21203<->QECC_QECC-Auto-stabilizer (Example H164E28)
4<->Example-QECC-Auto-stabilizer :<->text1905.htm#21203<->Example-QECC-Auto-stabilizer :: QECC_QECC-Auto-stabilizer (Example H164E28)
3<->additive-automorphisms :<->text1905.htm<->additive-automorphisms :: Automorphism Group (QUANTUM CODES)
3<->hilbert-space :<->text1906.htm<->hilbert-space :: Hilbert Spaces (QUANTUM CODES)
5<->HilbertSpace(F, n) <->text1906.htm#21205<->HilbertSpace(F, n) : FldCom, RngIntElt -&gt; HilbSpc
5<->Field(H) <->text1906.htm#21206<->Field(H) : HilbSpc -&gt; FldCom
5<->Nqubits :: NumberOfQubits(H) <->text1906.htm#21207<->Nqubits :: NumberOfQubits(H) : HilbSpc -&gt; RngIntElt
5<->NumberOfQubits(H) <->text1906.htm#21207<->NumberOfQubits(H) : HilbSpc -&gt; RngIntElt
5<->Dimension(H) <->text1906.htm#21208<->Dimension(H) : HilbSpc -&gt; RngIntElt
5<->IsDenselyRepresented(H) <->text1906.htm#21209<->IsDenselyRepresented(H) : HilbSpc -&gt; RngIntElt
5<->H1 eq H2 <->text1906.htm#21210<->H1 eq H2 : HilbSpc, HilbSpc -&gt; BoolElt
5<->H1 ne H2 <->text1906.htm#21211<->H1 ne H2 : HilbSpc, HilbSpc -&gt; BoolElt
4<->QECC_HilbertSpaceCreate (Example H164E29)<->text1906.htm#21212<->QECC_HilbertSpaceCreate (Example H164E29)
4<->Example-HilbertSpaceCreate :<->text1906.htm#21212<->Example-HilbertSpaceCreate :: QECC_HilbertSpaceCreate (Example H164E29)
3<->quantum-state-creation :<->text1906.htm#21213<->quantum-state-creation :: Creation of Quantum States (QUANTUM CODES)
5<->QuantumState(H, v) <->text1906.htm#21214<->QuantumState(H, v) : HilbSpc, MtrxSprs -> HilbSpcElt
5<->QuantumState(H, v) <->text1906.htm#21214<->QuantumState(H, v) : HilbSpc, ModTupFldElt -&gt; HilbSpcElt
5<->H ! i <->text1906.htm#21215<->H ! i : HilbSpc, RngIntElt -&gt; HilbSpcElt
5<->H ! s <->text1906.htm#21216<->H ! s : HilbSpc, [RngIntElt] -&gt; HilbSpcElt
5<->SetPrintKetsInteger(b) <->text1906.htm#21217<->SetPrintKetsInteger(b) : BoolElt -&gt;
4<->QECC_QuantumStateCreate (Example H164E30)<->text1906.htm#21218<->QECC_QuantumStateCreate (Example H164E30)
4<->Example-QuantumStateCreate :<->text1906.htm#21218<->Example-QuantumStateCreate :: QECC_QuantumStateCreate (Example H164E30)
4<->QECC_QuantumStateCreateCoerce (Example H164E31)<->text1906.htm#21219<->QECC_QuantumStateCreateCoerce (Example H164E31)
4<->Example-QuantumStateCreateCoerce :<->text1906.htm#21219<->Example-QuantumStateCreateCoerce :: QECC_QuantumStateCreateCoerce (Example H164E31)
3<->quantum-state-creation :<->text1906.htm#21213<->quantum-state-creation :: Creation of Quantum States (QUANTUM CODES)
3<->quantum-state-manipulation :<->text1906.htm#21220<->quantum-state-manipulation :: Manipulation of Quantum States (QUANTUM CODES)
5<->a * e <->text1906.htm#21221<->a * e : FldComElt , HilbSpcElt -&gt; HilbSpcElt
5<->- e <->text1906.htm#21222<->- e : HilbSpcElt -&gt; HilbSpcElt
5<->e1 + e2 <->text1906.htm#21223<->e1 + e2 : HilbSpcElt, HilbSpcElt -&gt; HilbSpcElt
5<->Normalisation($\sim$e) <->text1906.htm#21224<->Normalisation($\sim$e) : HilbSpcElt ->
5<->Normalization :: Normalisation(e) <->text1906.htm#21224<->Normalization :: Normalisation(e) : HilbSpcElt -&gt; HilbSpcElt
5<->Normalization($\sim$e) : HilbSpcElt -> :: Normalisation(e) <->text1906.htm#21224<->Normalization($\sim$e) : HilbSpcElt -> :: Normalisation(e) : HilbSpcElt -&gt; HilbSpcElt
5<->Normalisation(e) <->text1906.htm#21224<->Normalisation(e) : HilbSpcElt -&gt; HilbSpcElt
5<->NormalizationCoefficient :: NormalisationCoefficient(e) <->text1906.htm#21225<->NormalizationCoefficient :: NormalisationCoefficient(e) : HilbSpc -&gt; FldComElt
5<->NormalisationCoefficient(e) <->text1906.htm#21225<->NormalisationCoefficient(e) : HilbSpc -&gt; FldComElt
5<->e1 eq e2 <->text1906.htm#21226<->e1 eq e2 : HilbSpcElt, HilbSpcElt -&gt; BoolElt
5<->e1 ne e2 <->text1906.htm#21227<->e1 ne e2 : HilbSpcElt, HilbSpcElt -&gt; BoolElt
4<->QECC_QuantumStateNormalisation (Example H164E32)<->text1906.htm#21228<->QECC_QuantumStateNormalisation (Example H164E32)
4<->Example-QuantumStateNormalisation :<->text1906.htm#21228<->Example-QuantumStateNormalisation :: QECC_QuantumStateNormalisation (Example H164E32)
3<->quantum-state-manipulation :<->text1906.htm#21220<->quantum-state-manipulation :: Manipulation of Quantum States (QUANTUM CODES)
3<->quantum-state-probabilities :<->text1906.htm#21229<->quantum-state-probabilities :: Inner Product and Probabilities of Quantum States (QUANTUM CODES)
5<->InnerProduct(e1, e2) <->text1906.htm#21230<->InnerProduct(e1, e2) : HilbSpcElt, HilbSpcElt -&gt; HilbSpcElt
5<->ProbabilityDistribution(e) <->text1906.htm#21231<->ProbabilityDistribution(e) : HilbSpcElt -&gt; Mtrx
5<->Probability(e, i) <->text1906.htm#21232<->Probability(e, i) : HilbSpcElt, RngIntElt -&gt; FldReElt
5<->Probability(e, v) <->text1906.htm#21233<->Probability(e, v) : HilbSpcElt, RngIntElt -&gt; FldReElt
5<->PrintProbabilityDistribution(e) <->text1906.htm#21234<->PrintProbabilityDistribution(e) : HilbSpcElt -&gt;
5<->PrintSortedProbabilityDistribution(e) <->text1906.htm#21235<->PrintSortedProbabilityDistribution(e) : HilbSpcElt -&gt;
4<->QECC_QuantumStateProbabilities (Example H164E33)<->text1906.htm#21236<->QECC_QuantumStateProbabilities (Example H164E33)
4<->Example-QuantumStateProbabilities :<->text1906.htm#21236<->Example-QuantumStateProbabilities :: QECC_QuantumStateProbabilities (Example H164E33)
4<->QECC_QuantumStateSortedProbabilities (Example H164E34)<->text1906.htm#21237<->QECC_QuantumStateSortedProbabilities (Example H164E34)
4<->Example-QuantumStateSortedProbabilities :<->text1906.htm#21237<->Example-QuantumStateSortedProbabilities :: QECC_QuantumStateSortedProbabilities (Example H164E34)
3<->quantum-state-probabilities :<->text1906.htm#21229<->quantum-state-probabilities :: Inner Product and Probabilities of Quantum States (QUANTUM CODES)
3<->quantum-state-transformations :<->text1906.htm#21238<->quantum-state-transformations :: Unitary Transformations on Quantum States (QUANTUM CODES)
5<->BitFlip($\sim$e, k) <->text1906.htm#21239<->BitFlip($\sim$e, k) : HilbSpcElt,RngIntElt ->
5<->BitFlip(e, k) <->text1906.htm#21239<->BitFlip(e, k) : HilbSpcElt,RngIntElt -&gt; HilbSpcElt
5<->BitFlip($\sim$e, B) <->text1906.htm#21240<->BitFlip($\sim$e, B) : HilbSpcElt,RngIntElt ->
5<->BitFlip(e, B) <->text1906.htm#21240<->BitFlip(e, B) : HilbSpcElt, RngIntElt -&gt; HilbSpcElt
5<->PhaseFlip($\sim$e, k) <->text1906.htm#21241<->PhaseFlip($\sim$e, k) : HilbSpcElt,RngIntElt ->
5<->PhaseFlip(e, k) <->text1906.htm#21241<->PhaseFlip(e, k) : HilbSpcElt,RngIntElt -&gt; HilbSpcElt
5<->PhaseFlip($\sim$e, B) <->text1906.htm#21242<->PhaseFlip($\sim$e, B) : HilbSpcElt,RngIntElt ->
5<->PhaseFlip(e, B) <->text1906.htm#21242<->PhaseFlip(e, B) : HilbSpcElt, RngIntElt -&gt; HilbSpcElt
5<->ControlledNot($\sim$e, B, k) <->text1906.htm#21243<->ControlledNot($\sim$e, B, k) : HilbSpcElt, RngIntElt, RngIntElt -> 
5<->ControlledNot(e, B, k) <->text1906.htm#21243<->ControlledNot(e, B, k) : HilbSpcElt, RngIntElt, RngIntElt -&gt; HilbSpcElt
5<->HadamardTrasformation($\sim$e) <->text1906.htm#21244<->HadamardTrasformation($\sim$e) : HilbSpcElt ->
5<->HadamardTrasformation(e) <->text1906.htm#21244<->HadamardTrasformation(e) : HilbSpcElt -&gt; HilbSpcElt
4<->QECC_QuantumStateUnitary (Example H164E35)<->text1906.htm#21245<->QECC_QuantumStateUnitary (Example H164E35)
4<->Example-QuantumStateUnitary :<->text1906.htm#21245<->Example-QuantumStateUnitary :: QECC_QuantumStateUnitary (Example H164E35)
3<->quantum-state-transformations :<->text1906.htm#21238<->quantum-state-transformations :: Unitary Transformations on Quantum States (QUANTUM CODES)
3<->hilbert-space :<->text1906.htm<->hilbert-space :: Hilbert Spaces (QUANTUM CODES)
3<->error-correcting-quantum-code :<->text1896.htm<->error-correcting-quantum-code :: QUANTUM CODES
3<->pseudo-random-sequences :<->text1908.htm<->pseudo-random-sequences :: PSEUDO-RANDOM BIT SEQUENCES
3<->introduction :<->text1909.htm<->introduction :: Introduction (PSEUDO-RANDOM BIT SEQUENCES)
3<->lfsr :<->text1910.htm<->lfsr :: Linear Feedback Shift Registers (PSEUDO-RANDOM BIT SEQUENCES)
5<->LFSRSequence(C, S, t) <->text1910.htm#21250<->LFSRSequence(C, S, t) : RngUPolElt, SeqEnum, RngIntElt -&gt; SeqEnum
5<->LFSRStep(C, S) <->text1910.htm#21251<->LFSRStep(C, S) : RngUPolElt, SeqEnum -&gt; SeqEnum
5<->ConnectionPolynomial :: BerlekampMassey(S) <->text1910.htm#21252<->ConnectionPolynomial :: BerlekampMassey(S) : SeqEnum -&gt; RngUPolElt, RngIntElt
5<->CharacteristicPolynomial :: BerlekampMassey(S) <->text1910.htm#21252<->CharacteristicPolynomial :: BerlekampMassey(S) : SeqEnum -&gt; RngUPolElt, RngIntElt
5<->BerlekampMassey(S) <->text1910.htm#21252<->BerlekampMassey(S) : SeqEnum -&gt; RngUPolElt, RngIntElt
4<->PseudoRandom_reconstruct-sequence (Example H165E1)<->text1910.htm#21253<->PseudoRandom_reconstruct-sequence (Example H165E1)
4<->Example-reconstruct-sequence :<->text1910.htm#21253<->Example-reconstruct-sequence :: PseudoRandom_reconstruct-sequence (Example H165E1)
5<->ShrinkingGenerator(C1, S1, C2, S2, t) <->text1910.htm#21254<->ShrinkingGenerator(C1, S1, C2, S2, t) : RngUPolElt, SeqEnum, RngUPolElt,SeqEnum, RngIntElt -&gt; SeqEnum
3<->lfsr :<->text1910.htm<->lfsr :: Linear Feedback Shift Registers (PSEUDO-RANDOM BIT SEQUENCES)
3<->ntbg :<->text1911.htm<->ntbg :: Number Theoretic Bit Generators (PSEUDO-RANDOM BIT SEQUENCES)
5<->RandomSequenceRSA(b, t) <->text1911.htm#21256<->RandomSequenceRSA(b, t) : RngIntElt, RngIntElt -&gt; SeqEnum
4<->PseudoRandom_rsa_stats (Example H165E2)<->text1911.htm#21257<->PseudoRandom_rsa_stats (Example H165E2)
4<->Example-rsa_stats :<->text1911.htm#21257<->Example-rsa_stats :: PseudoRandom_rsa_stats (Example H165E2)
5<->RandomSequenceRSA(n, e, s, t) <->text1911.htm#21258<->RandomSequenceRSA(n, e, s, t) : RngIntElt, RngIntElt, RngIntElt,RngIntElt -&gt; SeqEnum
5<->RSAModulus(b) <->text1911.htm#21259<->RSAModulus(b) : RngIntElt -&gt; RngIntElt, RngIntElt
5<->RSAModulus(b, e) <->text1911.htm#21260<->RSAModulus(b, e) : RngIntElt, RngIntElt -&gt; RngIntElt
5<->RandomSequenceBlumBlumShub(b, t) <->text1911.htm#21261<->RandomSequenceBlumBlumShub(b, t) : RngIntElt, RngIntElt -&gt; SeqEnum
5<->RandomSequenceBlumBlumShub(n, s, t) <->text1911.htm#21262<->RandomSequenceBlumBlumShub(n, s, t) : RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
5<->BlumBlumShubModulus :: BBSModulus(b) <->text1911.htm#21263<->BlumBlumShubModulus :: BBSModulus(b) : RngIntElt -&gt; RngIntElt
5<->BBSModulus(b) <->text1911.htm#21263<->BBSModulus(b) : RngIntElt -&gt; RngIntElt
3<->ntbg :<->text1911.htm<->ntbg :: Number Theoretic Bit Generators (PSEUDO-RANDOM BIT SEQUENCES)
3<->correlation :<->text1912.htm<->correlation :: Correlation Functions (PSEUDO-RANDOM BIT SEQUENCES)
5<->AutoCorrelation(S, t) <->text1912.htm#21265<->AutoCorrelation(S, t) : SeqEnum, RngIntElt -&gt; RngIntElt
4<->PseudoRandom_autocorr_example (Example H165E3)<->text1912.htm#21266<->PseudoRandom_autocorr_example (Example H165E3)
4<->Example-autocorr_example :<->text1912.htm#21266<->Example-autocorr_example :: PseudoRandom_autocorr_example (Example H165E3)
5<->CrossCorrelation(S1, S2, t) <->text1912.htm#21267<->CrossCorrelation(S1, S2, t) : SeqEnum, SeqEnum, RngIntElt -&gt; RngIntElt
3<->correlation :<->text1912.htm<->correlation :: Correlation Functions (PSEUDO-RANDOM BIT SEQUENCES)
3<->misc :<->text1913.htm<->misc :: Decimation (PSEUDO-RANDOM BIT SEQUENCES)
5<->Decimation(S, f, d) <->text1913.htm#21269<->Decimation(S, f, d) : SeqEnum, RngIntElt, RngIntElt -&gt; SeqEnum
5<->Decimation(S, f, d, t) <->text1913.htm#21270<->Decimation(S, f, d, t) : SeqEnum, RngIntElt, RngIntElt, RngIntElt -&gt; SeqEnum
4<->PseudoRandom_decimate (Example H165E4)<->text1913.htm#21271<->PseudoRandom_decimate (Example H165E4)
4<->Example-decimate :<->text1913.htm#21271<->Example-decimate :: PseudoRandom_decimate (Example H165E4)
3<->misc :<->text1913.htm<->misc :: Decimation (PSEUDO-RANDOM BIT SEQUENCES)
3<->pseudo-random-sequences :<->text1908.htm<->pseudo-random-sequences :: PSEUDO-RANDOM BIT SEQUENCES
3<->lin-opt :<->text1916.htm<->lin-opt :: LINEAR PROGRAMMING
3<->introduction :<->text1917.htm<->introduction :: Introduction (LINEAR PROGRAMMING)
3<->instant-lp :<->text1918.htm<->instant-lp :: Explicit LP Solving Functions (LINEAR PROGRAMMING)
5<->MaximalSolution(LHS, relations, RHS, objective) <->text1918.htm#21277<->MaximalSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
5<->MinimalSolution(LHS, relations, RHS, objective) <->text1918.htm#21278<->MinimalSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
5<->MaximalIntegerSolution(LHS, relations, RHS, objective) <->text1918.htm#21279<->MaximalIntegerSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
5<->MinimalIntegerSolution(LHS, relations, RHS, objective) <->text1918.htm#21280<->MinimalIntegerSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
5<->MaximalZeroOneSolution(LHS, relations, RHS, objective) <->text1918.htm#21281<->MaximalZeroOneSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
5<->MinimalZeroOneSolution(LHS, relations, RHS, objective) <->text1918.htm#21282<->MinimalZeroOneSolution(LHS, relations, RHS, objective) : Mtrx, Mtrx, Mtrx, Mtrx -&gt; Mtrx, RngIntElt
4<->LP_ExplicitLPSolutionsOne (Example H166E1)<->text1918.htm#21283<->LP_ExplicitLPSolutionsOne (Example H166E1)
4<->Example-ExplicitLPSolutionsOne :<->text1918.htm#21283<->Example-ExplicitLPSolutionsOne :: LP_ExplicitLPSolutionsOne (Example H166E1)
4<->LP_ExplicitLPSolutionsTwo (Example H166E2)<->text1918.htm#21284<->LP_ExplicitLPSolutionsTwo (Example H166E2)
4<->Example-ExplicitLPSolutionsTwo :<->text1918.htm#21284<->Example-ExplicitLPSolutionsTwo :: LP_ExplicitLPSolutionsTwo (Example H166E2)
3<->instant-lp :<->text1918.htm<->instant-lp :: Explicit LP Solving Functions (LINEAR PROGRAMMING)
3<->creation :<->text1919.htm<->creation :: Creation of LP objects (LINEAR PROGRAMMING)
5<->LPProcess(R, n) <->text1919.htm#21286<->LPProcess(R, n) : Rng, RngIntElt -&gt; LP
4<->LP_LPCreation (Example H166E3)<->text1919.htm#21287<->LP_LPCreation (Example H166E3)
4<->Example-LPCreation :<->text1919.htm#21287<->Example-LPCreation :: LP_LPCreation (Example H166E3)
3<->creation :<->text1919.htm<->creation :: Creation of LP objects (LINEAR PROGRAMMING)
3<->operations :<->text1920.htm<->operations :: Operations on LP objects (LINEAR PROGRAMMING)
5<->AddConstraints(L, lhs, rhs) <->text1920.htm#21289<->AddConstraints(L, lhs, rhs) : LP, Mtrx, Mtrx -&gt;
5<->NumberOfConstraints(L) <->text1920.htm#21290<->NumberOfConstraints(L) : LP -&gt; RngIntElt
5<->NumberOfVariables(L) <->text1920.htm#21291<->NumberOfVariables(L) : LP -&gt; RngIntElt
5<->EvaluateAt(L, p) <->text1920.htm#21292<->EvaluateAt(L, p) : LP, Mtrx -&gt; RngIntElt
5<->Constraint(L, n) <->text1920.htm#21293<->Constraint(L, n) : LP, RngIntElt -&gt; Mtrx, Mtrx, RngIntElt
5<->IntegerSolutionVariables(L) <->text1920.htm#21294<->IntegerSolutionVariables(L) : LP -&gt; SeqEnum
5<->ObjectiveFunction(L) <->text1920.htm#21295<->ObjectiveFunction(L) : LP -&gt; Mtrx
5<->IsMaximisingFunction(L) <->text1920.htm#21296<->IsMaximisingFunction(L) : LP -&gt; BoolElt
5<->RemoveConstraint(L, n) <->text1920.htm#21297<->RemoveConstraint(L, n) : LP, RngIntElt -&gt;
5<->SetIntegerSolutionVariables(L, I, m) <->text1920.htm#21298<->SetIntegerSolutionVariables(L, I, m) : LP, SeqEnum[RngIntElt], BoolElt -&gt;
5<->SetLowerBound(L, n, b) <->text1920.htm#21299<->SetLowerBound(L, n, b) : LP, RngIntElt, RngElt -&gt;
5<->SetMaximiseFunction(L, m) <->text1920.htm#21300<->SetMaximiseFunction(L, m) : LP, BoolElt -&gt;
5<->SetObjectiveFunction(L, F) <->text1920.htm#21301<->SetObjectiveFunction(L, F) : LP, Mtrx -&gt;
5<->SetUpperBound(L, n, b) <->text1920.htm#21302<->SetUpperBound(L, n, b) : LP, RngIntElt, RngElt -&gt;
5<->Solution(L) <->text1920.htm#21303<->Solution(L) : LP -&gt; Mtrx, RngIntElt
5<->UnsetBounds(L) <->text1920.htm#21304<->UnsetBounds(L) : LP -&gt;
4<->LP_FillingLPObject (Example H166E4)<->text1920.htm#21305<->LP_FillingLPObject (Example H166E4)
4<->Example-FillingLPObject :<->text1920.htm#21305<->Example-FillingLPObject :: LP_FillingLPObject (Example H166E4)
3<->operations :<->text1920.htm<->operations :: Operations on LP objects (LINEAR PROGRAMMING)
3<->lin-opt :<->text1916.htm<->lin-opt :: LINEAR PROGRAMMING
1<->Preface :<->preface.htm<->Preface :: PREFACE
1<->Preface :<->ackn.htm<->Preface :: PREFACE
1<->Magma :<->MAGMA.htm<->Magma :: MAGMA
