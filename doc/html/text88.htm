<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Power Sets</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text89.htm">[Next]</A><A  HREF = "text87.htm">[Prev]</A> <A  HREF = "text89.htm">[Right]</A> <A  HREF = "text87.htm">[Left]</A> <A  HREF = "text85.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "643">Power Sets</A></H3>

<P>
<P>
The <TT>PowerSet</TT> constructor returns a structure comprising the subsets of
a given structure R; it is mainly useful as a parent for other
set and sequence constructors. The only operations that are allowed
on power sets are printing, testing element membership, and coercion
into the power set (see the examples below).



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text88.htm#655">The Cartesian Product Constructors</A>
</UL>
<H5><A NAME = "644">PowerSet(R) : Str -&gt; PowSetEnum</A></H5>
<BLOCKQUOTE>
The structure comprising all enumerated subsets of structure R.
</BLOCKQUOTE>
<H5><A NAME = "645">PowerIndexedSet(R) : Str -&gt; PowSetIndx</A></H5>
<BLOCKQUOTE>
The structure comprising all indexed subsets of structure R.
</BLOCKQUOTE>
<H5><A NAME = "646">PowerMultiset(R) : Str -&gt; PowSetMulti</A></H5>
<BLOCKQUOTE>
The structure consisting of all submultisets of the structure R.
</BLOCKQUOTE>
<H5><A NAME = "647">S in P : SetEnum, PowSetEnum -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if enumerated set S is in the power set P, that is, if
all elements of the set S are contained in or
coercible into R, where P is the power set of R; <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "648">PowerFormalSet(R) : Str -&gt; PowSetIndx</A></H5>
<BLOCKQUOTE>
The structure comprising all formal subsets of structure R.
</BLOCKQUOTE>
<H5><A NAME = "649">S in P : SetIndx, PowSetIndx -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if indexed set S is in the power set P, that is, if
all elements of the set S are contained in or
coercible into R, where P is the power set of R; <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "650">S in P : SetMulti, PowSetMulti -&gt; BoolElt</A></H5>
<BLOCKQUOTE>
Returns <TT>true</TT> if multiset S is in the power set P, that is, if
all elements of the set S are contained in or
coercible into R, where P is the power set of R; <TT>false</TT> otherwise.
</BLOCKQUOTE>
<H5><A NAME = "651">P ! S : PowSetEnum, SetEnum -&gt; SetEnum</A></H5>
<BLOCKQUOTE>
Return a set with universe R consisting of the elements of the
set S, where P is the power set of R. An error results if not
all elements of S can be coerced into R.
</BLOCKQUOTE>
<H5><A NAME = "652">P ! S : PowSetIndx, SetIndx -&gt; SetIndx</A></H5>
<BLOCKQUOTE>
Return an indexed set with universe R consisting of the elements of the
set S, where P is the power set of R. An error results if not
all elements of S can be coerced into R.
</BLOCKQUOTE>
<H5><A NAME = "653">P ! S : PowSetMulti, SetMulti -&gt; SetMulti</A></H5>
<BLOCKQUOTE>
Return a multiset with universe R consisting of the elements of the
set S, where P is the power set of R. An error results if not
all elements of S can be coerced into R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "654">Example <TT>Set_PowerSet (H9E6)</TT></A></H3>
<P>
<P>
<PRE>
&gt; S := { 1 .. 10 };
&gt; P := PowerSet(S);
&gt; P;
Set of subsets of { 1 .. 10 }
&gt; F := { 6/3, 12/4 };
&gt; F in P;
true
&gt; G := P ! F;
&gt; Parent(F);
Set of subsets of Rational Field
&gt; Parent(G);
Set of subsets of { 1 .. 10 }
</PRE>
<HR>
<H4><A NAME = "655">The Cartesian Product Constructors</A></H4>

<P>
<P>
Using <TT>car&lt; &gt;</TT> and <TT>CartesianProduct( )</TT>, it
is possible to create the Cartesian product of sets (or, in
fact, of any combination of structures), but the result will be
of type `Cartesian product' rather than set, and the elements
are tuples -- we refer the reader to Chapter <A  HREF = "text105.htm#835">TUPLES AND CARTESIAN PRODUCTS</A> for 
details.


<PRE></PRE> <A  HREF = "text89.htm">[Next]</A><A  HREF = "text87.htm">[Prev]</A> <A  HREF = "text89.htm">[Right]</A> <A  HREF = "text87.htm">[Left]</A> <A  HREF = "text85.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>