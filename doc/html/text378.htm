<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text379.htm">[Next]</A><A  HREF = "text377.htm">[Prev]</A> <A  HREF = "text379.htm">[Right]</A> <A  HREF = "text377.htm">[Left]</A> <A  HREF = "text376.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3610">Creation Functions</A></H3>

<P>
<P>
<P>
Functions are provided to create fields of the special type <TT>FldCyc</TT>.
Orders and elements created from a field of this type will have the 
special types <TT>RngCyc</TT> and <A NAME = "FldCycElt"><TT>FldCycElt</TT></A> respectively and elements
created from orders <A NAME = "RngCycElt"><TT>RngCycElt</TT></A>.
These functions provide an object with the correct type 
which will allow the extra functions and efficient implementations to be
used.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text378.htm#3611">Creation of Cyclotomic Fields</A>
<LI> <A  HREF = "text378.htm#3617">Creation of Elements</A>
</UL>
<H4><A NAME = "3611">Creation of Cyclotomic Fields</A></H4>

<P>
<P>
Cyclotomic fields can be created from an integer specifying which roots of
unity it should contain or from a collection of elements of an existing 
field or order. 
Cyclotomic polynomials can also be retrieved independently of the fields
and orders.


<H5><A NAME = "3612">CyclotomicField(m) : RngIntElt -&gt; FldCyc</A></H5>

<PRE>    Sparse: Boolean                     Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given a positive integer m, create the field obtained by adjoining 
the m-th roots of unity to Q.
It is possible to assign a name to the primitive m-th root of unity
&zeta;<sub>m</sub> using angle brackets: <TT>R&lt;s&gt; := CyclotomicField(m)</TT>.
<P>
If <TT>Sparse := <TT>true</TT></TT>, names for all the generating elements can
be assigned.
</BLOCKQUOTE>
<H5><A NAME = "3613">CyclotomicPolynomial(m) : RngIntElt -&gt; RngUPolElt</A></H5>
<BLOCKQUOTE>
Given a positive integer m, create the cyclotomic polynomial
of order m.  This function is equivalent to
<TT>DefiningPolynomial(CyclotomicField(m))</TT>.
</BLOCKQUOTE>
<H5><A NAME = "3614">MinimalField(a) : FldRatElt -&gt; FldRat</A></H5>
<H5>MinimalField(a) : FldCycElt -&gt; FldCyc</H5>
<H5>MinimalField(a) : RngCycElt -&gt; RngCyc</H5>
<H5>MinimalCyclotomicField(a) : FldRatElt -&gt; FldRat</H5>
<H5>MinimalCyclotomicField(a) : FldCycElt -&gt; FldCyc</H5>
<H5>MinimalCyclotomicField(a) : RngCycElt -&gt; RngCyc</H5>
<BLOCKQUOTE>
Given an element a from a cyclotomic field F or ring R, this function
returns the smallest cyclotomic field or order thereof (possibly the rational
field or the ring of integers) E&sub;F containing a.
</BLOCKQUOTE>
<H5><A NAME = "3615">MinimalField(S) : [ FldCycElt ] -&gt; FldCyc</A></H5>
<H5>MinimalField(S) : { FldCycElt } -&gt; FldCyc</H5>
<H5>MinimalField(S) : [ RngCycElt ] -&gt; RngCyc</H5>
<H5>MinimalField(S) : { RngCycElt } -&gt; RngCyc</H5>
<H5>MinimalCyclotomicField(S) : [ FldCycElt ] -&gt; FldCyc</H5>
<H5>MinimalCyclotomicField(S) : Setq -&gt; FldCyc</H5>
<H5>MinimalCyclotomicField(S) : { FldCycElt } -&gt; FldCyc</H5>
<H5>MinimalCyclotomicField(S) : [ RngCycElt ] -&gt; RngCyc</H5>
<H5>MinimalCyclotomicField(S) : { RngCycElt } -&gt; RngCyc</H5>
<BLOCKQUOTE>
Given a set or sequence S of cyclotomic field or ring elements, 
this function returns
the smallest cyclotomic field or ring (possibly the rational field or integers)
G containing each of the elements of S.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3616">Example <TT>FldCyc_creation (H37E1)</TT></A></H3>
We will demonstrate the difference between the "dense" and the "sparse"
representation on the cyclotomic field of order 100.
<P>
<P>
<PRE>
&gt; K1 := CyclotomicField(100);
&gt; K2 := CyclotomicField(100: Sparse := true);
&gt; K2!K1.1;
zeta(100)_4*zeta(100)_25^19
</PRE>
Where <TT>zeta(100)_25</TT> indicates a 25th root of unity in a field
of order 100.
<P>
<P>
<PRE>
&gt; K1!K2.1;
zeta_100^25
</PRE>
<HR>
<H4><A NAME = "3617">Creation of Elements</A></H4>

<P>
<P>
For elements of cyclotomic number fields the following conventions are
used. Primitive roots of unity &zeta;<sub>m</sub> are chosen in such a way that
&zeta;<sub>m</sub><sup>m/d</sup>=&zeta;<sub>d</sub>, for every divisor d of m; one may think of
this as choosing &zeta;<sub>m</sub>=(e)<sup>2&pi;i/m</sup> (where the roots of unity
are &zeta;<sub>m</sub><sup>k</sup> = (e)<sup>2k&pi;i/m</sup>) in the complex plane
for every m (a convention that is followed for the explicit embedding 
in the complex domains).
<P>
Elements of cyclotomic fields and orders can also be created using coercion
(<TT>!</TT>) and the elt constructor (<TT>elt&lt;|&gt;</TT>) where the left hand side
is the field or order the element will lie in. For details about coercion
see Section <A  HREF = "text359.htm#3391">Creation of Elements</A>.


<H5><A NAME = "3618">RootOfUnity(n) : RngIntElt -&gt; FldCycElt</A></H5>
<BLOCKQUOTE>
Create the n-th root of unity &zeta;<sub>n</sub> in Q(&zeta;<sub>n</sub>).
</BLOCKQUOTE>
<H5><A NAME = "3619">RootOfUnity(n, K) : RngIntElt, FldCyc -&gt; FldCycElt</A></H5>
<BLOCKQUOTE>
Given a cyclotomic field K = Q(&zeta;<sub>m</sub>) and an integer n&gt;2,
create the n-th root of unity &zeta;<sub>n</sub> in K. An error results
if &zeta;<sub>n</sub>&notin;K, that is, if n does not divide m (or 2m in case
m is odd). 
</BLOCKQUOTE>
<H5><A NAME = "3620">Minimise(~a) : FldCycElt -&gt;</A></H5>
<H5>Minimize(~a) : FldCycElt -&gt;</H5>
<H5>Minimise(~a) : RngCycElt -&gt;</H5>
<H5>Minimize(~a) : RngCycElt -&gt;</H5>
<BLOCKQUOTE>
Given an element a in a cyclotomic field F or ring R, this procedure finds
the minimal cyclotomic subfield E&sub;F or subring E &sub;F 
containing a, and coerces
a into E.  Note that E may be Q or Z.
</BLOCKQUOTE>
<H5><A NAME = "3621">Minimise(~s) : [ FldCycElt ] -&gt;</A></H5>
<H5>Minimize(~s) : [ FldCycElt ] -&gt;</H5>
<H5>Minimise(~s) : [ RngCycElt ] -&gt;</H5>
<H5>Minimize(~s) : [ RngCycElt ] -&gt;</H5>
<BLOCKQUOTE>
Given a set s of cyclotomic field or ring elements, this procedure finds
the minimal cyclotomic field or ring E containing all of them,
and coerces each element into E. The resulting set will have universe
E.  Note that E may be Q or Z.
</BLOCKQUOTE>
<H5><A NAME = "3622">Minimise(a) : FldCycElt -&gt; RngElt</A></H5>
<H5>Minimize(a) : FldCycElt -&gt; RngElt</H5>
<H5>Minimise(a) : RngCycElt -&gt; RngElt</H5>
<H5>Minimize(a) : RngCycElt -&gt; RngElt</H5>
<BLOCKQUOTE>
Given an element a in a cyclotomic field F or ring R, this function finds
the minimal cyclotomic subfield E&sub;F or subring E &sub;R
containing a, and coerces
a into E.  Note that E may be Q or Z.
</BLOCKQUOTE>
<H5><A NAME = "3623">Minimise(s) : { FldCycElt } -&gt; { RngElt }</A></H5>
<H5>Minimize(s) : { FldCycElt } -&gt; { RngElt }</H5>
<H5>Minimise(s) : { RngCycElt } -&gt; { RngElt }</H5>
<H5>Minimize(s) : { RngCycElt } -&gt; { RngElt }</H5>
<BLOCKQUOTE>
Given a set s of cyclotomic field or ring elements, this function finds
the minimal cyclotomic field E containing all of them,
and coerces each element into E. The resulting set will have universe
E.  Note that E may be Q or Z.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text379.htm">[Next]</A><A  HREF = "text377.htm">[Prev]</A> <A  HREF = "text379.htm">[Right]</A> <A  HREF = "text377.htm">[Left]</A> <A  HREF = "text376.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>