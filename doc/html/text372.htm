<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Operations on Structures</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text373.htm">[Next]</A><A  HREF = "text371.htm">[Prev]</A> <A  HREF = "text373.htm">[Right]</A> <A  HREF = "text371.htm">[Left]</A> <A  HREF = "text369.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "3566">Operations on Structures</A></H3>

<P>
<P>
The majority of functions for quadratic fields and orders apply 
identically to number fields and orders in general. The functions which
exist only for quadratic fields and orders are listed here along with
those which deserve a special mention.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text372.htm#3573">Ideal Class Group</A>
<LI> <A  HREF = "text372.htm#3580">Norm Equations</A>
</UL>
<H5><A NAME = "3567">AssignNames(~F, [s]) : FldQuad, [ MonStgElt ]) -&gt;</A></H5>
<H5>AssignNames(~O, [s]) : RngQuad, [ MonStgElt ]) -&gt;</H5>
<BLOCKQUOTE>
Procedure to change the name of the generator of a quadratic field
F or an order O in a quadratic field to the string s.
Elements of the quadratic field Q(Sqrt(d)) with
m squarefree will be printed in the form <TT>1/b*(x + y*s)</TT>,
where b, x, y are integers.
Similarly, for an order O of conductor f in a quadratic field elements
will be printed in the format <TT>x + y*s</TT>.
<P>
This procedure only changes the name used in printing the elements of F
or O, it does <I>not</I> make an assignment to an identifier s.
To do this, use an assignment statement,
or angle brackets when creating the field or order: <TT>F&lt;s&gt; := QuadraticField(-3);</TT>.
<P>
Note that since this is a procedure that modifies F or O,
it is necessary to have a reference <TT>~</TT> in the call to this function.
</BLOCKQUOTE>
<H5><A NAME = "3568">Name(F, 1) : FldQuad, RngIntElt -&gt; FldQuadElt</A></H5>
<H5>Name(O, 1) : RngQuad, RngIntElt -&gt; RngQuadElt</H5>
<BLOCKQUOTE>
Given a quadratic field F or one of its orders O, return the element
which has the name attached to it, that is, return Sqrt(d)
in the field, or f &epsilon;<sub>d</sub> in a suborder of the maximal order 
or f Sqrt(d) in a suborder of the equation order.
</BLOCKQUOTE>
<H5><A NAME = "3569">FundamentalUnit(K) : FldQuad -&gt; FldQuadElt</A></H5>
<H5>FundamentalUnit(O) : RngQuad -&gt; RngQuadElt</H5>
<BLOCKQUOTE>
A generator for the unit group of the order O or the
maximal order of the quadratic field K.
</BLOCKQUOTE>
<H5><A NAME = "3570">Discriminant(K) : FldQuad -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The discriminant of the field K which is only defined up to squares.
The discriminant will be the discriminant of the polynomial or better.
</BLOCKQUOTE>
<H5><A NAME = "3571">Conductor(K) : FldQuad -&gt; RngIntElt, [RngIntElt]</A></H5>
<BLOCKQUOTE>
The conductor of the field K which is the order of the smallest cyclotomic
field containing K and a sequence containing the ramified real places of K.
</BLOCKQUOTE>
<H5><A NAME = "3572">Conductor(O) : RngQuad -&gt; RngIntElt</A></H5>
<BLOCKQUOTE>
The conductor of the order O, which equals the index of O
in the maximal order.
</BLOCKQUOTE>
<H4><A NAME = "3573">Ideal Class Group</A></H4>

<P>
<P>
The function <TT>ClassGroup</TT>  is available for number 
fields and orders
in general but a different and faster algorithm is used by default 
for the quadratics.
All of the algorithms, except for the sieving method described in <A  HREF = "text368.htm#bib_jacobson">[Jac99]</A>
which uses the multiple polynomial quadratic sieve (MPQS), 
are based on binary quadratic forms, 
see <A  HREF = "text350.htm#QuadBin:ClassGroup">ClassGroup</A> in Chapter <A  HREF = "text344.htm#3299">BINARY QUADRATIC FORMS</A>
for details.


<H5><A NAME = "3574">ClassGroup(K) : FldQuad -&gt; GrpAb, Map</A></H5>
<H5>ClassGroup(O) : RngQuad -&gt; GrpAb, Map</H5>

<PRE>    FactorBasisBound: FldReElt          Default: 0.1</PRE>

<PRE>    ProofBound: FldReElt                Default: 6</PRE>

<PRE>    ExtraRelations: RngIntElt           Default: 1</PRE>

<PRE>    Al: MonStgElt                       Default: "Automatic"</PRE>

<PRE>    SetVerbose("ClassGroupSieve", n):   Maximum: 5</PRE>
<BLOCKQUOTE>
The class group of a maximal order O or the maximal order of the quadratic
field K, as an abelian group.  The function also returns a map between
the group and the power structure of ideals of O or the maximal order
of K.
The parameter <TT>Al</TT> can be set to <TT>"Sieve"</TT> or <TT>"NoSieve"</TT> to control
whether the sieving algorithm is used or not; by default it is used when the
discriminant is greater than 10<sup>20</sup>.
For more details on the parameters see <A  HREF = "text350.htm#QuadBin:ClassGroup">ClassGroup</A> in Chapter 
<A  HREF = "text344.htm#3299">BINARY QUADRATIC FORMS</A>.
</BLOCKQUOTE>
<H5><A NAME = "3575">ClassNumber(K) : FldQuad -&gt; RngIntElt</A></H5>
<H5>ClassNumber(O) : RngQuad -&gt; RngIntElt</H5>

<PRE>    FactorBasisBound: FldReElt          Default: 0.1</PRE>

<PRE>    ProofBound: FldReElt                Default: 6</PRE>

<PRE>    ExtraRelations: RngIntElt           Default: 1</PRE>

<PRE>    Al: MonStgElt                       Default: "Automatic"</PRE>
<BLOCKQUOTE>
The class number of the maximal order O or the maximal order of the
quadratic field K.  
</BLOCKQUOTE>
<H5><A NAME = "3576">PicardGroup(O) : RngQuad -&gt; GrpAb, Map</A></H5>
<H5>PicardNumber(O) : RngQuad -&gt; RngIntElt</H5>

<PRE>    FactorBasisBound: FldReElt          Default: 0.1</PRE>

<PRE>    ProofBound: FldReElt                Default: 6</PRE>

<PRE>    ExtraRelations: RngIntElt           Default: 1</PRE>

<PRE>    Al: MonStgElt                       Default: "Automatic"</PRE>
<BLOCKQUOTE>
The picard group (the group of the invertible ideals of O modulo the
principal ones) of the order O or the size of this group. 
<TT>PicardGroup</TT> also returns a map from the group to the ideals of O.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3577">Example <TT>FldQuad_quad_sieve (H36E3)</TT></A></H3>
We give examples of class group calculations using sieving. 
We also show the use of the mapping between the group
and the set of ideals.
First a field with negative discriminant. 
<P>
<P>
<PRE>
&gt; D:=-(10^(30) + 3 );     
&gt; K := QuadraticField(D);
&gt; time G, m := ClassGroup(K : Al := "Sieve");
Time: 10.750
&gt; G, m;
Abelian Group isomorphic to Z/125355959329602
Defined on 1 generator
Relations:
    125355959329602*G.1 = 0
Mapping from: GrpAb: G to Set of ideals of Maximal Order of K
&gt; m(G.1);
Ideal
Two element generators:
    385706622580333
    148769598702327446467038390888*$.2 + 307255216496036
&gt; $1 @@ m;
G.1
</PRE>
And now a field with positive discriminant.
<P>
<P>
<PRE>
&gt; K := QuadraticField(NextPrime(10^24));
&gt; time G, m := ClassGroup(K : Al := "Sieve");
Time: 3.330
&gt; G, m;
Abelian Group isomorphic to Z/3
Defined on 1 generator
Relations:
    3*$.1 = 0
Mapping from: GrpAb: G to Set of ideals of Maximal Equation Order of K
&gt; m(G.1);
Ideal
Two element generators:
    3847
    $.2 + 616
&gt; $1 @@ m;
G.1
&gt; IsPrincipal($2^3);
true
</PRE>
<HR>
<H5><A NAME = "3578">QuadraticClassGroupTwoPart(K) : FldQuad -&gt; GrpAb, Map</A></H5>
<H5>QuadraticClassGroupTwoPart(O) : RngQuad -&gt; GrpAb, Map</H5>
<H5>QuadraticClassGroupTwoPart(d) : RngIntElt -&gt; GrpAb, Map</H5>

<PRE>    Factorization: RngIntEltFact        Default: []</PRE>
<BLOCKQUOTE>
Use the Bosma-Stevenhagen algorithm to compute the 2-part of the
class group of a quadratic order. Returned are: an array of forms
that generates the 2-part and an array that gives the orders of
the respective elements. The Factorization of the given discriminant
can be given as additional information.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3579">Example <TT>FldQuad_qcgtp (H36E4)</TT></A></H3>
<P>
<P>
<PRE>
&gt; G, f := QuadraticClassGroupTwoPart(33923894057872); G;
Abelian Group isomorphic to Z/2 + Z/2 + Z/2 + Z/4 + Z/16 + Z/16
&gt; Random(G);
11*G.1 + 2*G.2 + G.3 + G.4 + G.6
&gt; f($1);
&lt;-1212992,3947508,3780131&gt;
&gt; G, f := QuadraticClassGroupTwoPart(QuadraticField(33923894057872)); G;
Abelian Group isomorphic to Z/2 + Z/8 + Z/16
</PRE>
<HR>
<H4><A NAME = "3580">Norm Equations</A></H4>

<P>
<P>
For imaginary quadratic fields, (that is, for quadratic fields
Q(&#8730;m) with m &lt; 0), the function <TT>NormEquation</TT> is provided
specially for quadratics
to find integral elements of a given norm. For real quadratic fields 
conics are used, see Section <A  HREF = "text1420.htm#16046">Finding Points</A> for details.


<H5><A NAME = "3581">NormEquation(F, m) : FldQuad, RngIntElt -&gt; BoolElt, SeqEnum</A></H5>
<H5>NormEquation(F, m: parameters) : FldQuad, RngIntElt -&gt; BoolElt, SeqEnum</H5>
<H5>NormEquation(O, m) : RngQuad, RngIntElt -&gt; BoolElt, SeqEnum</H5>
<H5>NormEquation(O, m: parameters) : RngQuad, RngIntElt -&gt; BoolElt, SeqEnum</H5>

<PRE>    Factorization: [&lt;RngIntElt, RngIntElt&gt;] Default: </PRE>

<PRE>    All: BoolElt                        Default: <TT>true</TT></PRE>

<PRE>    Solutions: RngIntElt                Default: All</PRE>

<PRE>    Exact: BoolElt                      Default: <TT>false</TT></PRE>

<PRE>    Ineq: BoolElt                       Default: <TT>false</TT></PRE>

<PRE>    SetVerbose("NormEquation", n):      Maximum: 1</PRE>
<BLOCKQUOTE>
Given quadratic field F and a non-negative integer m,
return <TT>true</TT> if there exists an element &alpha; in the ring of integers O<sub>F</sub> of
F with norm m, and <TT>false</TT> otherwise. Instead of searching
the maximal order O<sub>F</sub> it is possible to search any suborder O of O<sub>F</sub> for
such element &alpha; by supplying O as a first argument.
<P>
For imaginary quadratic fields the method used is constructive 
(it uses Cornacchia's algorithm, see <A  HREF = "text368.htm#bib_cohen1">[Coh93]</A> section 1.5.2),
and if the value <TT>true</TT> is returned then a solution [x] is also returned
as a second return value.
<P>
Note that if the discriminant F=Q(Sqrt(d)) with d &equiv; 1bmod4
(and squarefree) this function searches for a solution in integers to
x<sup>2</sup> + y<sup>2</sup>d=4m (and the solution &alpha;=(x + ySqrt(d)/2) is returned),
whereas for d &equiv; 2, 3bmod4
a solution &alpha;=x + ySqrt(d) with x<sup>2</sup> + y<sup>2</sup>d=m in integers x, y is
returned, if it exists. In an order of conductor f a search is
conducted for a solution to the same equation with d replaced by f<sup>2</sup>d.
Note that a version of <TT>NormEquation</TT> with integer arguments d
and m also exists (see Section <A  HREF = "text167.htm#1308">The Solution of Modular Equations</A>).
<P>
Unless m is the square of an integer, the factorization of m is
used by the algorithm; if it is known, it may be supplied
as the value of the optional parameter <TT>Factorization</TT> to speed
up the calculation.
<P>
A verbose flag can be set to obtain some information on progress
with the computation (see <A  HREF = "text50.htm#Env:SetVerbose">SetVerbose</A>).
<P> 
For real quadratic fields the same algorithm is used as for the general 
number fields. The last 4 parameters refer to this algorithm. See 
Section <A  HREF = "text364.htm#3500">Solving Norm Equations</A>
for a description.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "3582">Example <TT>FldQuad_norm-equation (H36E5)</TT></A></H3>
<P>
<P>
<PRE>
&gt; d := 302401481761723680;
&gt; m := 76814814791186002463716;
&gt; Q&lt;z&gt; := QuadraticField(-d);
&gt; O&lt;w&gt; := sub&lt; MaximalOrder(Q) | 6 &gt;;
&gt; f, s := NormEquation(O, m);
&gt; s, Norm(s[1]);
406 + 1008*w 76814814791186002463716
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text373.htm">[Next]</A><A  HREF = "text371.htm">[Prev]</A> <A  HREF = "text373.htm">[Right]</A> <A  HREF = "text371.htm">[Left]</A> <A  HREF = "text369.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>