<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text512.htm">[Next]</A><A  HREF = "text510.htm">[Prev]</A> <A  HREF = "text512.htm">[Right]</A> <A  HREF = "text510.htm">[Left]</A> <A  HREF = "text509.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "5524">Creation Functions</A></H3>




<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text511.htm#5525">Creation of Structures</A>
<LI> <A  HREF = "text511.htm#5530">Special Options</A>
<LI> <A  HREF = "text511.htm#5535">Creation of Elements</A>
</UL>
<H4><A NAME = "5525">Creation of Structures</A></H4>



<H5><A NAME = "5526">PowerSeriesRing(R) : Rng -&gt; RngSerPow</A></H5>
<H5>PowerSeriesRing(R, p) : Rng, RngIntElt -&gt; RngSerPow</H5>

<PRE>    Global: BoolElt                     Default: <TT>true</TT></PRE>

<PRE>    Precision: RngIntElt                Default: 20</PRE>
<BLOCKQUOTE>
Given a commutative ring R, create the ring R[[x]] of formal
power series over R.
If a second integer argument p is given, the resulting ring
is a fixed precision series ring with fixed precision p;
otherwise the resulting ring is a free precision series ring and
the optional argument <TT>Precision</TT> may be used to set the
default precision for elements of the power series ring
(it will be 20 otherwise; see the section above on free and fixed precision).
By default, a global series ring will be returned; if the
parameter <TT>Global</TT> is set to <TT>false</TT>, a non-global series ring
will be returned (to which a separate name for the indeterminate
can be assigned).
The angle bracket notation can be used to assign a name to
the indeterminate: <TT>S&lt;x&gt; := PowerSeriesRing(R)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5527">LaurentSeriesRing(R) : Rng -&gt; RngSerLaur</A></H5>
<H5>LaurentSeriesRing(R, p) : Rng, RngIntElt -&gt; RngSerLaur</H5>

<PRE>    Global: BoolElt                     Default: <TT>true</TT></PRE>

<PRE>    Precision: RngIntElt                Default: 20</PRE>
<BLOCKQUOTE>
Given a commutative ring R, create the ring R((x)) of formal
Laurent series over R.
If a second integer argument p is given, the resulting ring
is a fixed precision series ring with fixed precision p;
otherwise the resulting ring is a free precision series ring and
the optional argument <TT>Precision</TT> may be used to set the
default precision for elements of the power series ring
(it will be 20 otherwise; see the section above on free and fixed precision).
By default, a global series ring will be returned; if the
parameter <TT>Global</TT> is set to <TT>false</TT>, a non-global series ring
will be returned (to which a separate name for the indeterminate
can be assigned).
The angle bracket notation can be used to assign a name to
the indeterminate: <TT>S&lt;x&gt; := LaurentSeriesRing(R)</TT>.
</BLOCKQUOTE>
<H5><A NAME = "5528">PuiseuxSeriesRing(R) : Rng -&gt; RngSerPuis</A></H5>
<H5>PuiseuxSeriesRing(R, p) : Rng, RngIntElt -&gt; RngSerPuis</H5>

<PRE>    Global: BoolElt                     Default: <TT>true</TT></PRE>

<PRE>    Precision: RngIntElt                Default: 20</PRE>
<BLOCKQUOTE>
Given a commutative ring R, create the ring 
R&lt; &lt; x &gt; &gt; of formal
Puiseux series over R.
If a second integer argument p is given, the resulting ring
is a fixed precision series ring with fixed precision p;
otherwise the resulting ring is a free precision series ring and
the optional argument <TT>Precision</TT> may be used to set the
default precision for elements of the power series ring
(it will be 20 otherwise; see the section above on free and fixed precision).
The optional argument <TT>Precision</TT> may be used to set the
default precision for elements of the power series ring.
By default, a global series ring will be returned; if the
parameter <TT>Global</TT> is set to <TT>false</TT>, a non-global series ring
will be returned (to which a separate name for the indeterminate
can be assigned).
The angle bracket notation can be used to assign a name to
the indeterminate: <TT>S&lt;x&gt; := PuiseuxSeriesRing(R)</TT>.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "5529">Example <TT>RngSer_Creation (H49E1)</TT></A></H3>
We demonstrate the difference between global and non-global rings.
We first create the global power series ring over {Q} twice.
<P>
<P>
<PRE>
&gt; Q := RationalField();
&gt; P&lt;x&gt; := PowerSeriesRing(Q);
&gt; PP := PowerSeriesRing(Q);   
&gt; P;
Power series ring in x over Rational Field
&gt; PP;
Power series ring in x over Rational Field
&gt; PP.1;
x
</PRE>
PP is identical to P.  We now create non-global series rings (which are
also different to the global series ring).  Note that elements of
all the rings are mathematically equal by automatic coercion.
<P>
<P>
<PRE>
&gt; Pa&lt;a&gt; := PowerSeriesRing(Q: Global := false);
&gt; Pb&lt;b&gt; := PowerSeriesRing(Q: Global := false);
&gt; Pa;
Power series ring in a over Rational Field
&gt; Pb;
Power series ring in b over Rational Field
&gt; a;
a
&gt; b;
b
&gt; P;
Power series ring in x over Rational Field
&gt; x;
x
&gt; x eq a; // Automatic coercion
true
&gt; x + a;
2*x
</PRE>
<HR>
<H4><A NAME = "5530">Special Options</A></H4>



<H5><A NAME = "5531">AssertAttribute(S, "DefaultPrecision", n) : RngSer, MonStgElt, RngIntElt -&gt;</A></H5>
<BLOCKQUOTE>
Procedure to change the default precision on
a free series ring series S; the default precision will be set to
n, which must be a non-negative integer.
</BLOCKQUOTE>
<H5><A NAME = "5532">HasAttribute(S, "DefaultPrecision") : RngSer, MonStgElt -&gt; BoolElt, RngIntElt</A></H5>
<BLOCKQUOTE>
Function that returns a Boolean indicating whether a default
precision has been set on the free series ring S (which will always
be <TT>true</TT>), as well as its (non-negative) integer value (which is 20
by default).
</BLOCKQUOTE>
<H5><A NAME = "5533">AssignNames(~S, ["x"]) : RngSer, [ MonStgElt ] -&gt;</A></H5>
<BLOCKQUOTE>
Procedure to change the name of the `indeterminate' transcendental
element generating the series ring or field S; the name (used
in printing elements of S) is changed to the string x. Note
that no assignment to the identifier x is made (so x cannot
be used for the specification of elements of S without further
assignment).
</BLOCKQUOTE>
<H5><A NAME = "5534">Name(S, 1) : RngSer, RngIntElt -&gt; RngSerElt</A></H5>
<H5>S . 1 : RngSer, RngIntElt -&gt; RngSerElt</H5>
<H5>Name(S, 1) : RngSer, RngIntElt -&gt; RngSerElt</H5>
<H5>S . 1 : RngSer, RngIntElt -&gt; RngSerElt</H5>
<BLOCKQUOTE>
Return the element of the series ring or field with a name
attached to it, that is, return the `indeterminate' transcendental
element generating S over its coefficient ring.
</BLOCKQUOTE>
<H4><A NAME = "5535">Creation of Elements</A></H4>

<P>
<P>
The easiest way to create power and Laurent series in a given ring is to use
the angle bracket construction to attach names to the indeterminate,
and to use these names to express the series (see the examples).
Below we list other options.


<H5>One(Q) : RngSer -&gt; RngSerElt</H5>

<H5>One(Q) : RngSer -&gt; RngSerElt</H5>

<H5>Identity(Q) : RngSer -&gt; RngSerElt</H5>

<H5>Identity(Q) : RngSer -&gt; RngSerElt</H5><P>

<H5>Zero(Q) : RngSer -&gt; RngSerElt</H5>

<H5>Zero(Q) : RngSer -&gt; RngSerElt</H5>

<H5>Representative(Q) : RngSer -&gt; RngSerElt</H5>

<H5>Representative(Q) : RngSer -&gt; RngSerElt</H5><P>


<H5><A NAME = "5536">R . 1 : RngSer, RngInt -&gt; RngSerElt</A></H5>
<H5>UniformizingElement(R) : RngSer -&gt; RngSerElt</H5>
<BLOCKQUOTE>
Return the generator (indeterminate) for the series ring R.
</BLOCKQUOTE>
<H5><A NAME = "5537">elt&lt; R | v, [ a<sub>1</sub>, ..., a<sub>d</sub>], p &gt; : RngIntElt, SeqEnum, RngIntElt -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Given a series ring R,
integers v and p (where p &gt; 0 or p = &infin;),
and a sequence a=[a<sub>1</sub>, ..., a<sub>d</sub>] of elements of R,
create the element in R with valuation v, known coefficients
given by a and relative precision p. That is, this function
returns the series a<sub>1</sub>x<sup>v</sup> + ... + a<sub>d</sub>x<sup>v + d - 1</sup> + O(x<sup>v + p</sup>),
or, if p = (-1), the exact series 
a<sub>1</sub>x<sup>v</sup> + ... + a<sub>d</sub>x<sup>v + d - 1</sup>.
If R is a power series ring, then v must be non-negative.
<P>
The integer v or the integer p or both may be omitted. If v
is omitted, it will be set to zero by default; if p is omitted
it will be taken to be v + d, where d is the length of the sequence a.
</BLOCKQUOTE>
<H5><A NAME = "5538">R ! s : RngSer, SeqEnum -&gt; RngSerElt</A></H5>
<BLOCKQUOTE>
Coerce s into the series ring R.
Here s is allowed to be a sequence of elements from (or coercible into) 
the coefficient ring of R, or just an element from (or coercible into) R.
A sequence [a<sub>1</sub>, ..., a<sub>d</sub>] is converted into
the series a<sub>1</sub> + a<sub>2</sub>x<sup>1</sup> + ... + a<sub>d</sub>x<sup>d - 1</sup> + O(x<sup>d</sup>).
</BLOCKQUOTE>
<H5><A NAME = "5539">BigO(f) : RngSerElt -&gt; RngIntElt</A></H5>
<H5>O(f) : RngSerElt -&gt; RngIntElt</H5>
<BLOCKQUOTE>
Create the series O(x<sup>v</sup>) where x is the generator of the parent of
f and v is the valuation of f.  The most typical usage of this
function is the expression O(x<sup>n</sup>) where x is the generator of
a series ring, but a general series f is actually allowed.
</BLOCKQUOTE>
<PRE></PRE> <A  HREF = "text512.htm">[Next]</A><A  HREF = "text510.htm">[Prev]</A> <A  HREF = "text512.htm">[Right]</A> <A  HREF = "text510.htm">[Left]</A> <A  HREF = "text509.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>