<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <link rel='stylesheet' href='help.css' type='text/css'>
  <TITLE>Creation Functions</TITLE>
</head>
<body BGCOLOR="#FFFFFF">

 <A  HREF = "text236.htm">[Next]</A><A  HREF = "text234.htm">[Prev]</A> <A  HREF = "text236.htm">[Right]</A> <A  HREF = "text234.htm">[Left]</A> <A  HREF = "text233.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<PRE></PRE><H3><A NAME = "2044">Creation Functions</A></H3>

<P>
<P>
We describe the creation of real and complex fields and their elements.



<H5>Subsections</H5>
<UL>
<LI> <A  HREF = "text235.htm#2045">Creation of Structures</A>
<LI> <A  HREF = "text235.htm#2052">Creation of Elements</A>
</UL>
<H4><A NAME = "2045">Creation of Structures</A></H4>

<P>
<P>
At the time Magma is loaded, a real field
<P>
<P>
<P>
is automatically created. This is used
as the default parent for literal reals and real values returned by Magma.


<H5><A NAME = "2046"></A><A NAME = "FldRe:RealField">RealField</A>(p) : RngIntElt -&gt; FldRe</H5>

<PRE>    Bits: BoolElt                       Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given a positive integer p, create and return a version R of the real field
R in which all calculations are correct to precision p.  If the parameter
<TT>Bits</TT> is <TT>true</TT>, then the precision p is specified as the number of binary
digits.  If <TT>Bits</TT> is <TT>false</TT>, then the precision is given as the number of
decimal digits --- this is translated into a binary precision of &lceil;log<sub>2</sub>
(10<sup>p</sup>) &rceil;.
</BLOCKQUOTE>
<H5><A NAME = "2047">RealField() : -&gt; FldRe</A></H5>
<BLOCKQUOTE>
Return the default real field.
</BLOCKQUOTE>
<H5><A NAME = "2048">ComplexField(p) : RngIntElt -&gt; FldCom</A></H5>

<PRE>    Bits: BoolElt                       Default: <TT>false</TT></PRE>
<BLOCKQUOTE>
Given a positive integer p, create and return a version C of the complex
field C in which all calculations are correct to precision p.  If the
parameter <TT>Bits</TT> is <TT>true</TT>, then the precision p is specified as the number
of binary digits.  If <TT>Bits</TT> is <TT>false</TT>, then the precision is given as the
number of decimal digits --- this is translated into a binary precision of
&lceil;log<sub>2</sub> (10<sup>p</sup>) &rceil;.
<P>
By default no name is given to Sqrt( - 1); this may be changed with <TT>AssignNames</TT>. Angle brackets, e.g. <TT>C&lt;i&gt; := ComplexField(20)</TT>, may be used
to assign Sqrt( - 1) to an identifier.
</BLOCKQUOTE>
<H5><A NAME = "2049">ComplexField() : -&gt; FldCom</A></H5>
<BLOCKQUOTE>
Return the default complex field.
<P>
By default no name is given to Sqrt( - 1); this may be changed with <TT>AssignNames</TT>. Angle brackets, e.g. <TT>C&lt;i&gt; := ComplexField()</TT>, may be used to
assign Sqrt( - 1) to an identifier.
</BLOCKQUOTE>
<H5><A NAME = "2050">ComplexField(R) : FldRe -&gt; FldCom</A></H5>
<BLOCKQUOTE>
Return the complex field which has real subfield R; in other words, return
the complex field with the same precision as the real field R.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2051">Example <TT>FldRe_CreateComplexField (H25E3)</TT></A></H3>
It is convenient to use (i) to define elements of a complex field. 
It is also possible to change the default printing of i, 
using <TT>AssignNames</TT>, as follows. 
Note that the latter procedure does not assign to
an identifier, it only changes the printing.
<P>
<P>
<PRE>
&gt; C&lt;i&gt; := ComplexField(20);
&gt; Pi(C)+ 1/4*i;
3.1415926535897932385 + 0.25000000000000000000*i
&gt; AssignNames(~C, ["k"]);
&gt; Pi(C)+ 1/4*i;
3.1415926535897932385 + 0.25000000000000000000*k
&gt; k := Name(C, 1);
&gt; Pi(C)+ 1/4*k;
3.1415926535897932385 + 0.25000000000000000000*k
</PRE>
<HR>
<H4><A NAME = "2052">Creation of Elements</A></H4>



<P>
<P>
The following generic element constructions are available; they return
the 1 and 0 element of a real or complex field.
<H5>One(R) : FldRe -&gt; FldReElt</H5>

<H5>One(R) : FldCom -&gt; FldComElt</H5>

<H5>Identity(R) : FldRe -&gt; FldReElt</H5>

<H5>Identity(R) : FldCom -&gt; FldComElt</H5><P>

<H5>Zero(R) : FldRe -&gt; FldReElt</H5>

<H5>Zero(R) : FldCom -&gt; FldComElt</H5>

<H5>Representative(R) : FldRe -&gt; FldReElt</H5>

<H5>Representative(R) : FldCom -&gt; FldComElt</H5><P>

<H5><A NAME = "2053">d . eefpg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</A></H5>
<H5>d . eEfPg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</H5>
<H5>d.eef P g : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</H5>
<H5>d.eef p g : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</H5>
<H5>d.e E fpg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</H5>
<H5>d.e e fpg : RngIntElt, RngIntElt, RngIntElt -&gt; FldReElt</H5>
<BLOCKQUOTE>
Given a succession of literal decimal digits d, a succession of literal
decimal digits e, a succession of literal decimal digits f, and an integer
g, construct the real number r=d.e x 10<sup>f</sup>.  If specified, the effect
of g is to create r as an element of the real field of precision g.
<P>
If g is omitted (together with <TT>p</TT> or <TT>P</TT>),
the real number will be
created as an element of the default real field.
<P>
Both d and f may include a leading sign <TT>+</TT> or <TT>-</TT>;
leading zeroes in d and f are ignored.
If e consists entirely of zeroes it may be omitted together with
the <TT>.</TT> and if f is zero it may be omitted together with
<TT>E</TT> (or <TT>e</TT>).
But note that
if all of e, f and g are omitted the result will be an integer.
</BLOCKQUOTE>
<H5><A NAME = "2054">elt&lt;R | m, n&gt; : FldRe, FldReElt, RngIntElt -&gt; FldReElt</A></H5>
<BLOCKQUOTE>
Given the real field R, an element m coercible into R
and an integer n, construct the 
real number m x 2<sup>n</sup> in R.
</BLOCKQUOTE>
<H5><A NAME = "2055">elt&lt;C | x, y&gt; : FldCom, FldReElt, FldReElt -&gt; FldComElt</A></H5>
<H5>C ! [x, y] : FldCom, [FldReElt, FldReElt] -&gt; FldComElt</H5>
<BLOCKQUOTE>
Given the complex field C and elements x and y coercible
into the real field underlying C, construct 
the complex number x + y i.
</BLOCKQUOTE>
<H5><A NAME = "2056">R ! a : FldRe, RngElt -&gt; FldReElt</A></H5>
<BLOCKQUOTE>
Given an integer, a rational number, a quadratic or 
cyclotomic number field element a, this returns an element from
the real field R that best approximates a.
An error results if a is a non-real quadratic or cyclotomic field element.
<P>
If R is a field of precision r and a is an element
of a real field S of precision s then:
<DL COMPACT class='compact'>
<DT></DT><DD>if a is an element
of a real field S of precision s &ge;r,
then an element of R approximating a to r
digits is returned;
<DT></DT><DD>if a is an element
of a real field S of precision s &lt; r, then an element of R is
returned approximating a, obtained by padding with zeroes until the required
precision r is reached;</DL>
</BLOCKQUOTE>
<H5><A NAME = "2057">C ! a : FldCom, RngElt -&gt; FldComElt</A></H5>
<BLOCKQUOTE>
Given an integer, a rational number, a quadratic or 
cyclotomic number field element a, this returns an element from
the complex field C that best approximates a.
The rules of coercion for the real and imaginary parts are the same
as those for coercion into a real field.
</BLOCKQUOTE>
<HR>
<H3><A NAME = "2058">Example <TT>FldRe_CreateElements (H25E4)</TT></A></H3>
We create the real number 1.2345 in many ways.
We assume that the default real field has not been changed.
<P>
<P>
<PRE>
&gt; x := 1.2345;
&gt; x, Parent(x); 
1.23450000000000000000000000000 Real field of precision 30
&gt; SetDefaultRealField(RealField(20));
&gt; x1 := 1.2345;
&gt; x1, Parent(x1);
1.2345000000000000000 Real field of precision 20
&gt; x2 := 12345e-4;
&gt; x2, Parent(x2);
1.2345000000000000000 Real field of precision 20
&gt; x3 := 1.2345p10;
&gt; x3, Parent(x3);
1.234500000 Real field of precision 10
&gt; x4 := 12345e-4p8;
&gt; x4, Parent(x4);
1.2345000 Real field of precision 8
&gt; x5 := RealField(12) ! 1.2345;
&gt; x5, Parent(x5);
1.23450000000 Real field of precision 12
</PRE>
<HR>
<PRE></PRE> <A  HREF = "text236.htm">[Next]</A><A  HREF = "text234.htm">[Prev]</A> <A  HREF = "text236.htm">[Right]</A> <A  HREF = "text234.htm">[Left]</A> <A  HREF = "text233.htm">[Up]</A> <A  HREF = "ind.htm">[Index]</A> <A  HREF = "MAGMA.htm">[Root]</A>
<br><small>Version: V2.22 of <I>
Thu Jun  9 16:37:49 EST 2016
</I></small>
</body></html>